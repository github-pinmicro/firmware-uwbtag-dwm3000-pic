

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 10 11:29:59 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	stringtext23,global,class=STRCODE,delta=2
    31                           	psect	stringtext24,global,class=STRCODE,delta=2
    32                           	psect	stringtext25,global,class=STRCODE,delta=2
    33                           	psect	stringtext26,global,class=STRCODE,delta=2
    34                           	psect	stringtext27,global,class=STRCODE,delta=2
    35                           	psect	stringtext28,global,class=STRCODE,delta=2
    36                           	psect	cinit,global,class=CODE,merge=1,delta=2
    37                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    38                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    39                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    41                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    42                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    43                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    44                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    45                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    46                           	psect	inittext,global,class=CODE,delta=2
    47                           	psect	clrtext,global,class=CODE,delta=2
    48                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    49                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    50                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    51                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    52                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    53                           	psect	text1,local,class=CODE,merge=1,delta=2
    54                           	psect	text2,local,class=CODE,merge=1,delta=2
    55                           	psect	text3,local,class=CODE,merge=1,delta=2
    56                           	psect	text4,local,class=CODE,merge=1,delta=2
    57                           	psect	text5,local,class=CODE,merge=1,delta=2
    58                           	psect	text6,local,class=CODE,merge=1,delta=2
    59                           	psect	text7,local,class=CODE,merge=1,delta=2
    60                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text9,local,class=CODE,merge=1,delta=2
    62                           	psect	text10,local,class=CODE,merge=1,delta=2
    63                           	psect	text11,local,class=CODE,merge=1,delta=2
    64                           	psect	text12,local,class=CODE,merge=1,delta=2
    65                           	psect	text13,local,class=CODE,merge=1,delta=2
    66                           	psect	text14,local,class=CODE,merge=1,delta=2
    67                           	psect	text15,local,class=CODE,merge=1,delta=2
    68                           	psect	text16,local,class=CODE,merge=1,delta=2
    69                           	psect	text17,local,class=CODE,merge=1,delta=2
    70                           	psect	text18,local,class=CODE,merge=1,delta=2
    71                           	psect	text19,local,class=CODE,merge=1,delta=2
    72                           	psect	text20,local,class=CODE,merge=1,delta=2
    73                           	psect	text21,local,class=CODE,merge=1,delta=2
    74                           	psect	text22,local,class=CODE,merge=1,delta=2
    75                           	psect	text23,local,class=CODE,merge=1,delta=2
    76                           	psect	text24,local,class=CODE,merge=1,delta=2
    77                           	psect	text25,local,class=CODE,merge=1,delta=2
    78                           	psect	text26,local,class=CODE,merge=1,delta=2
    79                           	psect	text27,local,class=CODE,merge=1,delta=2
    80                           	psect	text28,local,class=CODE,merge=1,delta=2
    81                           	psect	text29,local,class=CODE,merge=1,delta=2
    82                           	psect	text30,local,class=CODE,merge=1,delta=2
    83                           	psect	text31,local,class=CODE,merge=1,delta=2
    84                           	psect	text32,local,class=CODE,merge=1,delta=2
    85                           	psect	text33,local,class=CODE,merge=1,delta=2
    86                           	psect	text34,local,class=CODE,merge=1,delta=2
    87                           	psect	text35,local,class=CODE,merge=1,delta=2
    88                           	psect	text36,local,class=CODE,merge=1,delta=2
    89                           	psect	text37,local,class=CODE,merge=1,delta=2
    90                           	psect	text38,local,class=CODE,merge=1,delta=2
    91                           	psect	text39,local,class=CODE,merge=1,delta=2
    92                           	psect	text40,local,class=CODE,merge=1,delta=2
    93                           	psect	text41,local,class=CODE,merge=1,delta=2
    94                           	psect	text42,local,class=CODE,merge=1,delta=2
    95                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text44,local,class=CODE,merge=1,delta=2
    97                           	psect	text45,local,class=CODE,merge=1,delta=2
    98                           	psect	text46,local,class=CODE,merge=1,delta=2
    99                           	psect	text47,local,class=CODE,merge=1,delta=2
   100                           	psect	text48,local,class=CODE,merge=1,delta=2
   101                           	psect	text49,local,class=CODE,merge=1,delta=2
   102                           	psect	text50,local,class=CODE,merge=1,delta=2
   103                           	psect	text51,local,class=CODE,merge=1,delta=2
   104                           	psect	text52,local,class=CODE,merge=1,delta=2
   105                           	psect	text53,local,class=CODE,merge=1,delta=2
   106                           	psect	text54,local,class=CODE,merge=1,delta=2
   107                           	psect	text55,local,class=CODE,merge=1,delta=2
   108                           	psect	text56,local,class=CODE,merge=1,delta=2
   109                           	psect	text57,local,class=CODE,merge=1,delta=2
   110                           	psect	text58,local,class=CODE,merge=1,delta=2
   111                           	psect	text59,local,class=CODE,merge=1,delta=2
   112                           	psect	text60,local,class=CODE,merge=1,delta=2
   113                           	psect	text61,local,class=CODE,merge=1,delta=2
   114                           	psect	text62,local,class=CODE,merge=1,delta=2
   115                           	psect	text63,local,class=CODE,merge=1,delta=2
   116                           	psect	text64,local,class=CODE,merge=1,delta=2
   117                           	psect	text65,local,class=CODE,merge=1,delta=2
   118                           	psect	text66,local,class=CODE,merge=1,delta=2
   119                           	psect	text67,local,class=CODE,merge=1,delta=2
   120                           	psect	text68,local,class=CODE,merge=1,delta=2
   121                           	psect	text69,local,class=CODE,merge=1,delta=2
   122                           	psect	text70,local,class=CODE,merge=1,delta=2
   123                           	psect	text71,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text72,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text73,local,class=CODE,merge=1,delta=2
   126                           	psect	text74,local,class=CODE,merge=1,delta=2
   127                           	psect	text75,local,class=CODE,merge=1,delta=2
   128                           	psect	text76,local,class=CODE,merge=1,delta=2,group=2
   129                           	psect	text77,local,class=CODE,merge=1,delta=2,group=2
   130                           	psect	text78,local,class=CODE,merge=1,delta=2,group=2
   131                           	psect	text79,local,class=CODE,merge=1,delta=2,group=2
   132                           	psect	text80,local,class=CODE,merge=1,delta=2,group=2
   133                           	psect	text81,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text82,local,class=CODE,merge=1,delta=2,group=2
   135                           	psect	text83,local,class=CODE,merge=1,delta=2,group=2
   136                           	psect	text84,local,class=CODE,merge=1,delta=2
   137                           	psect	text85,local,class=CODE,merge=1,delta=2
   138                           	psect	text86,local,class=CODE,merge=1,delta=2
   139                           	psect	text87,local,class=CODE,merge=1,delta=2
   140                           	psect	text88,local,class=CODE,merge=1,delta=2
   141                           	dabs	1,0x1920,80
   142                           	dabs	1,0x18A0,80
   143                           	dabs	1,0x1820,80
   144                           	dabs	1,0x17E0,16
   145                           	dabs	1,0x2EF0,0,_crcTable
   146                           	dabs	1,0x7E,2
   147  0000                     
   148                           ; Version 1.45
   149                           ; Generated 16/11/2017 GMT
   150                           ; 
   151                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   152                           ; All rights reserved.
   153                           ; 
   154                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   155                           ; 
   156                           ; Redistribution and use in source and binary forms, with or without modification, are
   157                           ; permitted provided that the following conditions are met:
   158                           ; 
   159                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   160                           ;        conditions and the following disclaimer.
   161                           ; 
   162                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   163                           ;        of conditions and the following disclaimer in the documentation and/or other
   164                           ;        materials provided with the distribution.
   165                           ; 
   166                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   167                           ;        software without specific prior written permission.
   168                           ; 
   169                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   170                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   171                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   172                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   173                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   174                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   175                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   176                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   177                           ; 
   178                           ; 
   179                           ; Code-generator required, PIC16F18877 Definitions
   180                           ; 
   181                           ; SFR Addresses
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001C                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  008C                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008E                     	;# 
   220  008F                     	;# 
   221  0090                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0095                     	;# 
   227  0096                     	;# 
   228  0097                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0110                     	;# 
   242  0110                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0114                     	;# 
   249  0115                     	;# 
   250  0116                     	;# 
   251  0116                     	;# 
   252  0117                     	;# 
   253  0119                     	;# 
   254  0119                     	;# 
   255  0119                     	;# 
   256  011A                     	;# 
   257  011A                     	;# 
   258  011A                     	;# 
   259  011B                     	;# 
   260  011B                     	;# 
   261  011B                     	;# 
   262  011B                     	;# 
   263  011B                     	;# 
   264  011C                     	;# 
   265  011C                     	;# 
   266  011C                     	;# 
   267  011D                     	;# 
   268  011D                     	;# 
   269  011D                     	;# 
   270  011E                     	;# 
   271  011E                     	;# 
   272  011E                     	;# 
   273  011F                     	;# 
   274  011F                     	;# 
   275  011F                     	;# 
   276  011F                     	;# 
   277  011F                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  018E                     	;# 
   281  018F                     	;# 
   282  0190                     	;# 
   283  0191                     	;# 
   284  0192                     	;# 
   285  0196                     	;# 
   286  0197                     	;# 
   287  0198                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  020C                     	;# 
   293  020C                     	;# 
   294  020D                     	;# 
   295  020E                     	;# 
   296  020F                     	;# 
   297  020F                     	;# 
   298  0210                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0218                     	;# 
   313  0218                     	;# 
   314  0219                     	;# 
   315  021A                     	;# 
   316  021B                     	;# 
   317  021B                     	;# 
   318  021C                     	;# 
   319  021C                     	;# 
   320  021D                     	;# 
   321  021D                     	;# 
   322  021E                     	;# 
   323  021F                     	;# 
   324  028C                     	;# 
   325  028C                     	;# 
   326  028D                     	;# 
   327  028D                     	;# 
   328  028E                     	;# 
   329  028F                     	;# 
   330  0290                     	;# 
   331  0290                     	;# 
   332  0291                     	;# 
   333  0292                     	;# 
   334  0292                     	;# 
   335  0293                     	;# 
   336  0293                     	;# 
   337  0294                     	;# 
   338  0295                     	;# 
   339  0296                     	;# 
   340  0296                     	;# 
   341  0297                     	;# 
   342  0298                     	;# 
   343  0298                     	;# 
   344  0299                     	;# 
   345  0299                     	;# 
   346  029A                     	;# 
   347  029B                     	;# 
   348  029C                     	;# 
   349  029C                     	;# 
   350  029D                     	;# 
   351  030C                     	;# 
   352  030C                     	;# 
   353  030D                     	;# 
   354  030E                     	;# 
   355  030F                     	;# 
   356  0310                     	;# 
   357  0310                     	;# 
   358  0311                     	;# 
   359  0312                     	;# 
   360  0313                     	;# 
   361  0314                     	;# 
   362  0314                     	;# 
   363  0315                     	;# 
   364  0316                     	;# 
   365  0317                     	;# 
   366  0318                     	;# 
   367  0318                     	;# 
   368  0319                     	;# 
   369  031A                     	;# 
   370  031B                     	;# 
   371  031C                     	;# 
   372  031C                     	;# 
   373  031D                     	;# 
   374  031E                     	;# 
   375  031F                     	;# 
   376  038C                     	;# 
   377  038D                     	;# 
   378  038E                     	;# 
   379  0390                     	;# 
   380  0391                     	;# 
   381  0392                     	;# 
   382  040C                     	;# 
   383  040D                     	;# 
   384  040E                     	;# 
   385  040F                     	;# 
   386  0410                     	;# 
   387  0411                     	;# 
   388  0416                     	;# 
   389  0416                     	;# 
   390  0417                     	;# 
   391  0418                     	;# 
   392  0418                     	;# 
   393  0419                     	;# 
   394  041A                     	;# 
   395  041A                     	;# 
   396  041B                     	;# 
   397  041C                     	;# 
   398  041C                     	;# 
   399  041D                     	;# 
   400  041E                     	;# 
   401  041F                     	;# 
   402  048C                     	;# 
   403  048C                     	;# 
   404  048D                     	;# 
   405  048E                     	;# 
   406  048F                     	;# 
   407  048F                     	;# 
   408  0490                     	;# 
   409  0491                     	;# 
   410  0492                     	;# 
   411  0492                     	;# 
   412  0493                     	;# 
   413  0494                     	;# 
   414  0495                     	;# 
   415  0495                     	;# 
   416  0496                     	;# 
   417  0497                     	;# 
   418  0498                     	;# 
   419  0499                     	;# 
   420  049A                     	;# 
   421  049B                     	;# 
   422  049C                     	;# 
   423  049D                     	;# 
   424  050C                     	;# 
   425  050C                     	;# 
   426  050D                     	;# 
   427  050E                     	;# 
   428  050F                     	;# 
   429  050F                     	;# 
   430  0510                     	;# 
   431  0511                     	;# 
   432  0512                     	;# 
   433  0512                     	;# 
   434  0513                     	;# 
   435  0514                     	;# 
   436  0515                     	;# 
   437  0515                     	;# 
   438  0516                     	;# 
   439  0517                     	;# 
   440  0518                     	;# 
   441  0519                     	;# 
   442  051A                     	;# 
   443  051B                     	;# 
   444  051C                     	;# 
   445  051D                     	;# 
   446  058C                     	;# 
   447  058C                     	;# 
   448  058D                     	;# 
   449  058E                     	;# 
   450  058F                     	;# 
   451  058F                     	;# 
   452  0590                     	;# 
   453  0591                     	;# 
   454  0592                     	;# 
   455  0593                     	;# 
   456  060C                     	;# 
   457  060D                     	;# 
   458  060E                     	;# 
   459  060F                     	;# 
   460  0610                     	;# 
   461  0611                     	;# 
   462  0612                     	;# 
   463  0613                     	;# 
   464  0614                     	;# 
   465  0616                     	;# 
   466  0617                     	;# 
   467  0618                     	;# 
   468  0619                     	;# 
   469  061A                     	;# 
   470  061B                     	;# 
   471  061C                     	;# 
   472  061D                     	;# 
   473  061E                     	;# 
   474  068C                     	;# 
   475  068D                     	;# 
   476  068E                     	;# 
   477  068F                     	;# 
   478  0690                     	;# 
   479  0691                     	;# 
   480  0692                     	;# 
   481  0693                     	;# 
   482  0694                     	;# 
   483  070C                     	;# 
   484  070D                     	;# 
   485  070E                     	;# 
   486  070F                     	;# 
   487  0710                     	;# 
   488  0711                     	;# 
   489  0712                     	;# 
   490  0713                     	;# 
   491  0714                     	;# 
   492  0716                     	;# 
   493  0717                     	;# 
   494  0718                     	;# 
   495  0719                     	;# 
   496  071A                     	;# 
   497  071B                     	;# 
   498  071C                     	;# 
   499  071D                     	;# 
   500  071E                     	;# 
   501  0796                     	;# 
   502  0797                     	;# 
   503  0798                     	;# 
   504  0799                     	;# 
   505  079A                     	;# 
   506  079B                     	;# 
   507  080C                     	;# 
   508  080D                     	;# 
   509  080E                     	;# 
   510  080F                     	;# 
   511  0810                     	;# 
   512  0811                     	;# 
   513  0812                     	;# 
   514  0813                     	;# 
   515  0814                     	;# 
   516  081A                     	;# 
   517  081B                     	;# 
   518  081C                     	;# 
   519  081D                     	;# 
   520  081E                     	;# 
   521  081F                     	;# 
   522  088C                     	;# 
   523  088D                     	;# 
   524  088E                     	;# 
   525  088F                     	;# 
   526  0890                     	;# 
   527  0891                     	;# 
   528  0892                     	;# 
   529  0893                     	;# 
   530  0895                     	;# 
   531  0896                     	;# 
   532  0897                     	;# 
   533  0898                     	;# 
   534  0899                     	;# 
   535  089A                     	;# 
   536  089B                     	;# 
   537  090C                     	;# 
   538  090E                     	;# 
   539  090F                     	;# 
   540  091F                     	;# 
   541  098F                     	;# 
   542  098F                     	;# 
   543  0990                     	;# 
   544  0991                     	;# 
   545  0992                     	;# 
   546  0993                     	;# 
   547  0994                     	;# 
   548  0995                     	;# 
   549  0996                     	;# 
   550  0997                     	;# 
   551  1E0F                     	;# 
   552  1E10                     	;# 
   553  1E11                     	;# 
   554  1E12                     	;# 
   555  1E13                     	;# 
   556  1E14                     	;# 
   557  1E15                     	;# 
   558  1E16                     	;# 
   559  1E17                     	;# 
   560  1E18                     	;# 
   561  1E19                     	;# 
   562  1E1A                     	;# 
   563  1E1B                     	;# 
   564  1E1C                     	;# 
   565  1E1D                     	;# 
   566  1E1E                     	;# 
   567  1E1F                     	;# 
   568  1E20                     	;# 
   569  1E21                     	;# 
   570  1E22                     	;# 
   571  1E23                     	;# 
   572  1E24                     	;# 
   573  1E25                     	;# 
   574  1E26                     	;# 
   575  1E27                     	;# 
   576  1E28                     	;# 
   577  1E29                     	;# 
   578  1E2A                     	;# 
   579  1E2B                     	;# 
   580  1E2C                     	;# 
   581  1E2D                     	;# 
   582  1E2E                     	;# 
   583  1E2F                     	;# 
   584  1E30                     	;# 
   585  1E31                     	;# 
   586  1E32                     	;# 
   587  1E33                     	;# 
   588  1E34                     	;# 
   589  1E35                     	;# 
   590  1E36                     	;# 
   591  1E37                     	;# 
   592  1E8F                     	;# 
   593  1E90                     	;# 
   594  1E91                     	;# 
   595  1E92                     	;# 
   596  1E93                     	;# 
   597  1E94                     	;# 
   598  1E95                     	;# 
   599  1E96                     	;# 
   600  1E97                     	;# 
   601  1E9C                     	;# 
   602  1E9D                     	;# 
   603  1E9E                     	;# 
   604  1EA1                     	;# 
   605  1EA2                     	;# 
   606  1EA3                     	;# 
   607  1EA4                     	;# 
   608  1EA5                     	;# 
   609  1EA9                     	;# 
   610  1EAA                     	;# 
   611  1EAB                     	;# 
   612  1EAC                     	;# 
   613  1EB1                     	;# 
   614  1EB2                     	;# 
   615  1EB3                     	;# 
   616  1EB8                     	;# 
   617  1EB9                     	;# 
   618  1EBA                     	;# 
   619  1EBB                     	;# 
   620  1EBC                     	;# 
   621  1EBD                     	;# 
   622  1EBE                     	;# 
   623  1EC3                     	;# 
   624  1EC5                     	;# 
   625  1EC6                     	;# 
   626  1EC7                     	;# 
   627  1EC8                     	;# 
   628  1EC9                     	;# 
   629  1ECA                     	;# 
   630  1ECB                     	;# 
   631  1ECC                     	;# 
   632  1F10                     	;# 
   633  1F11                     	;# 
   634  1F12                     	;# 
   635  1F13                     	;# 
   636  1F14                     	;# 
   637  1F15                     	;# 
   638  1F16                     	;# 
   639  1F17                     	;# 
   640  1F18                     	;# 
   641  1F19                     	;# 
   642  1F1A                     	;# 
   643  1F1B                     	;# 
   644  1F1C                     	;# 
   645  1F1D                     	;# 
   646  1F1E                     	;# 
   647  1F1F                     	;# 
   648  1F20                     	;# 
   649  1F21                     	;# 
   650  1F22                     	;# 
   651  1F23                     	;# 
   652  1F24                     	;# 
   653  1F25                     	;# 
   654  1F26                     	;# 
   655  1F27                     	;# 
   656  1F28                     	;# 
   657  1F29                     	;# 
   658  1F2A                     	;# 
   659  1F2B                     	;# 
   660  1F2C                     	;# 
   661  1F2D                     	;# 
   662  1F2E                     	;# 
   663  1F2F                     	;# 
   664  1F30                     	;# 
   665  1F31                     	;# 
   666  1F32                     	;# 
   667  1F38                     	;# 
   668  1F39                     	;# 
   669  1F3A                     	;# 
   670  1F3B                     	;# 
   671  1F3C                     	;# 
   672  1F3D                     	;# 
   673  1F3E                     	;# 
   674  1F3F                     	;# 
   675  1F40                     	;# 
   676  1F41                     	;# 
   677  1F43                     	;# 
   678  1F44                     	;# 
   679  1F45                     	;# 
   680  1F46                     	;# 
   681  1F47                     	;# 
   682  1F48                     	;# 
   683  1F49                     	;# 
   684  1F4A                     	;# 
   685  1F4B                     	;# 
   686  1F4C                     	;# 
   687  1F4E                     	;# 
   688  1F4F                     	;# 
   689  1F50                     	;# 
   690  1F51                     	;# 
   691  1F52                     	;# 
   692  1F53                     	;# 
   693  1F54                     	;# 
   694  1F55                     	;# 
   695  1F56                     	;# 
   696  1F57                     	;# 
   697  1F59                     	;# 
   698  1F5A                     	;# 
   699  1F5B                     	;# 
   700  1F5C                     	;# 
   701  1F5D                     	;# 
   702  1F61                     	;# 
   703  1F62                     	;# 
   704  1F64                     	;# 
   705  1F65                     	;# 
   706  1F66                     	;# 
   707  1F67                     	;# 
   708  1F68                     	;# 
   709  1F69                     	;# 
   710  1F6A                     	;# 
   711  1F6B                     	;# 
   712  1F6C                     	;# 
   713  1F6D                     	;# 
   714  1FE4                     	;# 
   715  1FE5                     	;# 
   716  1FE6                     	;# 
   717  1FE7                     	;# 
   718  1FE8                     	;# 
   719  1FE9                     	;# 
   720  1FEA                     	;# 
   721  1FEB                     	;# 
   722  1FED                     	;# 
   723  1FEE                     	;# 
   724  1FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  000E                     	;# 
   740  000F                     	;# 
   741  0010                     	;# 
   742  0011                     	;# 
   743  0012                     	;# 
   744  0013                     	;# 
   745  0014                     	;# 
   746  0015                     	;# 
   747  0016                     	;# 
   748  0017                     	;# 
   749  0018                     	;# 
   750  0019                     	;# 
   751  001A                     	;# 
   752  001C                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001D                     	;# 
   756  001E                     	;# 
   757  001F                     	;# 
   758  008C                     	;# 
   759  008C                     	;# 
   760  008D                     	;# 
   761  008E                     	;# 
   762  008E                     	;# 
   763  008F                     	;# 
   764  0090                     	;# 
   765  0090                     	;# 
   766  0091                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  010C                     	;# 
   780  010D                     	;# 
   781  010E                     	;# 
   782  010E                     	;# 
   783  010F                     	;# 
   784  0110                     	;# 
   785  0110                     	;# 
   786  0111                     	;# 
   787  0112                     	;# 
   788  0112                     	;# 
   789  0113                     	;# 
   790  0114                     	;# 
   791  0114                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0116                     	;# 
   795  0117                     	;# 
   796  0119                     	;# 
   797  0119                     	;# 
   798  0119                     	;# 
   799  011A                     	;# 
   800  011A                     	;# 
   801  011A                     	;# 
   802  011B                     	;# 
   803  011B                     	;# 
   804  011B                     	;# 
   805  011B                     	;# 
   806  011B                     	;# 
   807  011C                     	;# 
   808  011C                     	;# 
   809  011C                     	;# 
   810  011D                     	;# 
   811  011D                     	;# 
   812  011D                     	;# 
   813  011E                     	;# 
   814  011E                     	;# 
   815  011E                     	;# 
   816  011F                     	;# 
   817  011F                     	;# 
   818  011F                     	;# 
   819  011F                     	;# 
   820  011F                     	;# 
   821  018C                     	;# 
   822  018D                     	;# 
   823  018E                     	;# 
   824  018F                     	;# 
   825  0190                     	;# 
   826  0191                     	;# 
   827  0192                     	;# 
   828  0196                     	;# 
   829  0197                     	;# 
   830  0198                     	;# 
   831  0199                     	;# 
   832  019A                     	;# 
   833  019B                     	;# 
   834  019C                     	;# 
   835  020C                     	;# 
   836  020C                     	;# 
   837  020D                     	;# 
   838  020E                     	;# 
   839  020F                     	;# 
   840  020F                     	;# 
   841  0210                     	;# 
   842  0210                     	;# 
   843  0211                     	;# 
   844  0211                     	;# 
   845  0212                     	;# 
   846  0212                     	;# 
   847  0213                     	;# 
   848  0214                     	;# 
   849  0215                     	;# 
   850  0215                     	;# 
   851  0216                     	;# 
   852  0216                     	;# 
   853  0217                     	;# 
   854  0217                     	;# 
   855  0218                     	;# 
   856  0218                     	;# 
   857  0219                     	;# 
   858  021A                     	;# 
   859  021B                     	;# 
   860  021B                     	;# 
   861  021C                     	;# 
   862  021C                     	;# 
   863  021D                     	;# 
   864  021D                     	;# 
   865  021E                     	;# 
   866  021F                     	;# 
   867  028C                     	;# 
   868  028C                     	;# 
   869  028D                     	;# 
   870  028D                     	;# 
   871  028E                     	;# 
   872  028F                     	;# 
   873  0290                     	;# 
   874  0290                     	;# 
   875  0291                     	;# 
   876  0292                     	;# 
   877  0292                     	;# 
   878  0293                     	;# 
   879  0293                     	;# 
   880  0294                     	;# 
   881  0295                     	;# 
   882  0296                     	;# 
   883  0296                     	;# 
   884  0297                     	;# 
   885  0298                     	;# 
   886  0298                     	;# 
   887  0299                     	;# 
   888  0299                     	;# 
   889  029A                     	;# 
   890  029B                     	;# 
   891  029C                     	;# 
   892  029C                     	;# 
   893  029D                     	;# 
   894  030C                     	;# 
   895  030C                     	;# 
   896  030D                     	;# 
   897  030E                     	;# 
   898  030F                     	;# 
   899  0310                     	;# 
   900  0310                     	;# 
   901  0311                     	;# 
   902  0312                     	;# 
   903  0313                     	;# 
   904  0314                     	;# 
   905  0314                     	;# 
   906  0315                     	;# 
   907  0316                     	;# 
   908  0317                     	;# 
   909  0318                     	;# 
   910  0318                     	;# 
   911  0319                     	;# 
   912  031A                     	;# 
   913  031B                     	;# 
   914  031C                     	;# 
   915  031C                     	;# 
   916  031D                     	;# 
   917  031E                     	;# 
   918  031F                     	;# 
   919  038C                     	;# 
   920  038D                     	;# 
   921  038E                     	;# 
   922  0390                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  040C                     	;# 
   926  040D                     	;# 
   927  040E                     	;# 
   928  040F                     	;# 
   929  0410                     	;# 
   930  0411                     	;# 
   931  0416                     	;# 
   932  0416                     	;# 
   933  0417                     	;# 
   934  0418                     	;# 
   935  0418                     	;# 
   936  0419                     	;# 
   937  041A                     	;# 
   938  041A                     	;# 
   939  041B                     	;# 
   940  041C                     	;# 
   941  041C                     	;# 
   942  041D                     	;# 
   943  041E                     	;# 
   944  041F                     	;# 
   945  048C                     	;# 
   946  048C                     	;# 
   947  048D                     	;# 
   948  048E                     	;# 
   949  048F                     	;# 
   950  048F                     	;# 
   951  0490                     	;# 
   952  0491                     	;# 
   953  0492                     	;# 
   954  0492                     	;# 
   955  0493                     	;# 
   956  0494                     	;# 
   957  0495                     	;# 
   958  0495                     	;# 
   959  0496                     	;# 
   960  0497                     	;# 
   961  0498                     	;# 
   962  0499                     	;# 
   963  049A                     	;# 
   964  049B                     	;# 
   965  049C                     	;# 
   966  049D                     	;# 
   967  050C                     	;# 
   968  050C                     	;# 
   969  050D                     	;# 
   970  050E                     	;# 
   971  050F                     	;# 
   972  050F                     	;# 
   973  0510                     	;# 
   974  0511                     	;# 
   975  0512                     	;# 
   976  0512                     	;# 
   977  0513                     	;# 
   978  0514                     	;# 
   979  0515                     	;# 
   980  0515                     	;# 
   981  0516                     	;# 
   982  0517                     	;# 
   983  0518                     	;# 
   984  0519                     	;# 
   985  051A                     	;# 
   986  051B                     	;# 
   987  051C                     	;# 
   988  051D                     	;# 
   989  058C                     	;# 
   990  058C                     	;# 
   991  058D                     	;# 
   992  058E                     	;# 
   993  058F                     	;# 
   994  058F                     	;# 
   995  0590                     	;# 
   996  0591                     	;# 
   997  0592                     	;# 
   998  0593                     	;# 
   999  060C                     	;# 
  1000  060D                     	;# 
  1001  060E                     	;# 
  1002  060F                     	;# 
  1003  0610                     	;# 
  1004  0611                     	;# 
  1005  0612                     	;# 
  1006  0613                     	;# 
  1007  0614                     	;# 
  1008  0616                     	;# 
  1009  0617                     	;# 
  1010  0618                     	;# 
  1011  0619                     	;# 
  1012  061A                     	;# 
  1013  061B                     	;# 
  1014  061C                     	;# 
  1015  061D                     	;# 
  1016  061E                     	;# 
  1017  068C                     	;# 
  1018  068D                     	;# 
  1019  068E                     	;# 
  1020  068F                     	;# 
  1021  0690                     	;# 
  1022  0691                     	;# 
  1023  0692                     	;# 
  1024  0693                     	;# 
  1025  0694                     	;# 
  1026  070C                     	;# 
  1027  070D                     	;# 
  1028  070E                     	;# 
  1029  070F                     	;# 
  1030  0710                     	;# 
  1031  0711                     	;# 
  1032  0712                     	;# 
  1033  0713                     	;# 
  1034  0714                     	;# 
  1035  0716                     	;# 
  1036  0717                     	;# 
  1037  0718                     	;# 
  1038  0719                     	;# 
  1039  071A                     	;# 
  1040  071B                     	;# 
  1041  071C                     	;# 
  1042  071D                     	;# 
  1043  071E                     	;# 
  1044  0796                     	;# 
  1045  0797                     	;# 
  1046  0798                     	;# 
  1047  0799                     	;# 
  1048  079A                     	;# 
  1049  079B                     	;# 
  1050  080C                     	;# 
  1051  080D                     	;# 
  1052  080E                     	;# 
  1053  080F                     	;# 
  1054  0810                     	;# 
  1055  0811                     	;# 
  1056  0812                     	;# 
  1057  0813                     	;# 
  1058  0814                     	;# 
  1059  081A                     	;# 
  1060  081B                     	;# 
  1061  081C                     	;# 
  1062  081D                     	;# 
  1063  081E                     	;# 
  1064  081F                     	;# 
  1065  088C                     	;# 
  1066  088D                     	;# 
  1067  088E                     	;# 
  1068  088F                     	;# 
  1069  0890                     	;# 
  1070  0891                     	;# 
  1071  0892                     	;# 
  1072  0893                     	;# 
  1073  0895                     	;# 
  1074  0896                     	;# 
  1075  0897                     	;# 
  1076  0898                     	;# 
  1077  0899                     	;# 
  1078  089A                     	;# 
  1079  089B                     	;# 
  1080  090C                     	;# 
  1081  090E                     	;# 
  1082  090F                     	;# 
  1083  091F                     	;# 
  1084  098F                     	;# 
  1085  098F                     	;# 
  1086  0990                     	;# 
  1087  0991                     	;# 
  1088  0992                     	;# 
  1089  0993                     	;# 
  1090  0994                     	;# 
  1091  0995                     	;# 
  1092  0996                     	;# 
  1093  0997                     	;# 
  1094  1E0F                     	;# 
  1095  1E10                     	;# 
  1096  1E11                     	;# 
  1097  1E12                     	;# 
  1098  1E13                     	;# 
  1099  1E14                     	;# 
  1100  1E15                     	;# 
  1101  1E16                     	;# 
  1102  1E17                     	;# 
  1103  1E18                     	;# 
  1104  1E19                     	;# 
  1105  1E1A                     	;# 
  1106  1E1B                     	;# 
  1107  1E1C                     	;# 
  1108  1E1D                     	;# 
  1109  1E1E                     	;# 
  1110  1E1F                     	;# 
  1111  1E20                     	;# 
  1112  1E21                     	;# 
  1113  1E22                     	;# 
  1114  1E23                     	;# 
  1115  1E24                     	;# 
  1116  1E25                     	;# 
  1117  1E26                     	;# 
  1118  1E27                     	;# 
  1119  1E28                     	;# 
  1120  1E29                     	;# 
  1121  1E2A                     	;# 
  1122  1E2B                     	;# 
  1123  1E2C                     	;# 
  1124  1E2D                     	;# 
  1125  1E2E                     	;# 
  1126  1E2F                     	;# 
  1127  1E30                     	;# 
  1128  1E31                     	;# 
  1129  1E32                     	;# 
  1130  1E33                     	;# 
  1131  1E34                     	;# 
  1132  1E35                     	;# 
  1133  1E36                     	;# 
  1134  1E37                     	;# 
  1135  1E8F                     	;# 
  1136  1E90                     	;# 
  1137  1E91                     	;# 
  1138  1E92                     	;# 
  1139  1E93                     	;# 
  1140  1E94                     	;# 
  1141  1E95                     	;# 
  1142  1E96                     	;# 
  1143  1E97                     	;# 
  1144  1E9C                     	;# 
  1145  1E9D                     	;# 
  1146  1E9E                     	;# 
  1147  1EA1                     	;# 
  1148  1EA2                     	;# 
  1149  1EA3                     	;# 
  1150  1EA4                     	;# 
  1151  1EA5                     	;# 
  1152  1EA9                     	;# 
  1153  1EAA                     	;# 
  1154  1EAB                     	;# 
  1155  1EAC                     	;# 
  1156  1EB1                     	;# 
  1157  1EB2                     	;# 
  1158  1EB3                     	;# 
  1159  1EB8                     	;# 
  1160  1EB9                     	;# 
  1161  1EBA                     	;# 
  1162  1EBB                     	;# 
  1163  1EBC                     	;# 
  1164  1EBD                     	;# 
  1165  1EBE                     	;# 
  1166  1EC3                     	;# 
  1167  1EC5                     	;# 
  1168  1EC6                     	;# 
  1169  1EC7                     	;# 
  1170  1EC8                     	;# 
  1171  1EC9                     	;# 
  1172  1ECA                     	;# 
  1173  1ECB                     	;# 
  1174  1ECC                     	;# 
  1175  1F10                     	;# 
  1176  1F11                     	;# 
  1177  1F12                     	;# 
  1178  1F13                     	;# 
  1179  1F14                     	;# 
  1180  1F15                     	;# 
  1181  1F16                     	;# 
  1182  1F17                     	;# 
  1183  1F18                     	;# 
  1184  1F19                     	;# 
  1185  1F1A                     	;# 
  1186  1F1B                     	;# 
  1187  1F1C                     	;# 
  1188  1F1D                     	;# 
  1189  1F1E                     	;# 
  1190  1F1F                     	;# 
  1191  1F20                     	;# 
  1192  1F21                     	;# 
  1193  1F22                     	;# 
  1194  1F23                     	;# 
  1195  1F24                     	;# 
  1196  1F25                     	;# 
  1197  1F26                     	;# 
  1198  1F27                     	;# 
  1199  1F28                     	;# 
  1200  1F29                     	;# 
  1201  1F2A                     	;# 
  1202  1F2B                     	;# 
  1203  1F2C                     	;# 
  1204  1F2D                     	;# 
  1205  1F2E                     	;# 
  1206  1F2F                     	;# 
  1207  1F30                     	;# 
  1208  1F31                     	;# 
  1209  1F32                     	;# 
  1210  1F38                     	;# 
  1211  1F39                     	;# 
  1212  1F3A                     	;# 
  1213  1F3B                     	;# 
  1214  1F3C                     	;# 
  1215  1F3D                     	;# 
  1216  1F3E                     	;# 
  1217  1F3F                     	;# 
  1218  1F40                     	;# 
  1219  1F41                     	;# 
  1220  1F43                     	;# 
  1221  1F44                     	;# 
  1222  1F45                     	;# 
  1223  1F46                     	;# 
  1224  1F47                     	;# 
  1225  1F48                     	;# 
  1226  1F49                     	;# 
  1227  1F4A                     	;# 
  1228  1F4B                     	;# 
  1229  1F4C                     	;# 
  1230  1F4E                     	;# 
  1231  1F4F                     	;# 
  1232  1F50                     	;# 
  1233  1F51                     	;# 
  1234  1F52                     	;# 
  1235  1F53                     	;# 
  1236  1F54                     	;# 
  1237  1F55                     	;# 
  1238  1F56                     	;# 
  1239  1F57                     	;# 
  1240  1F59                     	;# 
  1241  1F5A                     	;# 
  1242  1F5B                     	;# 
  1243  1F5C                     	;# 
  1244  1F5D                     	;# 
  1245  1F61                     	;# 
  1246  1F62                     	;# 
  1247  1F64                     	;# 
  1248  1F65                     	;# 
  1249  1F66                     	;# 
  1250  1F67                     	;# 
  1251  1F68                     	;# 
  1252  1F69                     	;# 
  1253  1F6A                     	;# 
  1254  1F6B                     	;# 
  1255  1F6C                     	;# 
  1256  1F6D                     	;# 
  1257  1FE4                     	;# 
  1258  1FE5                     	;# 
  1259  1FE6                     	;# 
  1260  1FE7                     	;# 
  1261  1FE8                     	;# 
  1262  1FE9                     	;# 
  1263  1FEA                     	;# 
  1264  1FEB                     	;# 
  1265  1FED                     	;# 
  1266  1FEE                     	;# 
  1267  1FEF                     	;# 
  1268  0000                     	;# 
  1269  0001                     	;# 
  1270  0002                     	;# 
  1271  0003                     	;# 
  1272  0004                     	;# 
  1273  0005                     	;# 
  1274  0006                     	;# 
  1275  0007                     	;# 
  1276  0008                     	;# 
  1277  0009                     	;# 
  1278  000A                     	;# 
  1279  000B                     	;# 
  1280  000C                     	;# 
  1281  000D                     	;# 
  1282  000E                     	;# 
  1283  000F                     	;# 
  1284  0010                     	;# 
  1285  0011                     	;# 
  1286  0012                     	;# 
  1287  0013                     	;# 
  1288  0014                     	;# 
  1289  0015                     	;# 
  1290  0016                     	;# 
  1291  0017                     	;# 
  1292  0018                     	;# 
  1293  0019                     	;# 
  1294  001A                     	;# 
  1295  001C                     	;# 
  1296  001C                     	;# 
  1297  001D                     	;# 
  1298  001D                     	;# 
  1299  001E                     	;# 
  1300  001F                     	;# 
  1301  008C                     	;# 
  1302  008C                     	;# 
  1303  008D                     	;# 
  1304  008E                     	;# 
  1305  008E                     	;# 
  1306  008F                     	;# 
  1307  0090                     	;# 
  1308  0090                     	;# 
  1309  0091                     	;# 
  1310  0093                     	;# 
  1311  0094                     	;# 
  1312  0095                     	;# 
  1313  0096                     	;# 
  1314  0097                     	;# 
  1315  0098                     	;# 
  1316  0099                     	;# 
  1317  009A                     	;# 
  1318  009B                     	;# 
  1319  009C                     	;# 
  1320  009D                     	;# 
  1321  009E                     	;# 
  1322  010C                     	;# 
  1323  010D                     	;# 
  1324  010E                     	;# 
  1325  010E                     	;# 
  1326  010F                     	;# 
  1327  0110                     	;# 
  1328  0110                     	;# 
  1329  0111                     	;# 
  1330  0112                     	;# 
  1331  0112                     	;# 
  1332  0113                     	;# 
  1333  0114                     	;# 
  1334  0114                     	;# 
  1335  0115                     	;# 
  1336  0116                     	;# 
  1337  0116                     	;# 
  1338  0117                     	;# 
  1339  0119                     	;# 
  1340  0119                     	;# 
  1341  0119                     	;# 
  1342  011A                     	;# 
  1343  011A                     	;# 
  1344  011A                     	;# 
  1345  011B                     	;# 
  1346  011B                     	;# 
  1347  011B                     	;# 
  1348  011B                     	;# 
  1349  011B                     	;# 
  1350  011C                     	;# 
  1351  011C                     	;# 
  1352  011C                     	;# 
  1353  011D                     	;# 
  1354  011D                     	;# 
  1355  011D                     	;# 
  1356  011E                     	;# 
  1357  011E                     	;# 
  1358  011E                     	;# 
  1359  011F                     	;# 
  1360  011F                     	;# 
  1361  011F                     	;# 
  1362  011F                     	;# 
  1363  011F                     	;# 
  1364  018C                     	;# 
  1365  018D                     	;# 
  1366  018E                     	;# 
  1367  018F                     	;# 
  1368  0190                     	;# 
  1369  0191                     	;# 
  1370  0192                     	;# 
  1371  0196                     	;# 
  1372  0197                     	;# 
  1373  0198                     	;# 
  1374  0199                     	;# 
  1375  019A                     	;# 
  1376  019B                     	;# 
  1377  019C                     	;# 
  1378  020C                     	;# 
  1379  020C                     	;# 
  1380  020D                     	;# 
  1381  020E                     	;# 
  1382  020F                     	;# 
  1383  020F                     	;# 
  1384  0210                     	;# 
  1385  0210                     	;# 
  1386  0211                     	;# 
  1387  0211                     	;# 
  1388  0212                     	;# 
  1389  0212                     	;# 
  1390  0213                     	;# 
  1391  0214                     	;# 
  1392  0215                     	;# 
  1393  0215                     	;# 
  1394  0216                     	;# 
  1395  0216                     	;# 
  1396  0217                     	;# 
  1397  0217                     	;# 
  1398  0218                     	;# 
  1399  0218                     	;# 
  1400  0219                     	;# 
  1401  021A                     	;# 
  1402  021B                     	;# 
  1403  021B                     	;# 
  1404  021C                     	;# 
  1405  021C                     	;# 
  1406  021D                     	;# 
  1407  021D                     	;# 
  1408  021E                     	;# 
  1409  021F                     	;# 
  1410  028C                     	;# 
  1411  028C                     	;# 
  1412  028D                     	;# 
  1413  028D                     	;# 
  1414  028E                     	;# 
  1415  028F                     	;# 
  1416  0290                     	;# 
  1417  0290                     	;# 
  1418  0291                     	;# 
  1419  0292                     	;# 
  1420  0292                     	;# 
  1421  0293                     	;# 
  1422  0293                     	;# 
  1423  0294                     	;# 
  1424  0295                     	;# 
  1425  0296                     	;# 
  1426  0296                     	;# 
  1427  0297                     	;# 
  1428  0298                     	;# 
  1429  0298                     	;# 
  1430  0299                     	;# 
  1431  0299                     	;# 
  1432  029A                     	;# 
  1433  029B                     	;# 
  1434  029C                     	;# 
  1435  029C                     	;# 
  1436  029D                     	;# 
  1437  030C                     	;# 
  1438  030C                     	;# 
  1439  030D                     	;# 
  1440  030E                     	;# 
  1441  030F                     	;# 
  1442  0310                     	;# 
  1443  0310                     	;# 
  1444  0311                     	;# 
  1445  0312                     	;# 
  1446  0313                     	;# 
  1447  0314                     	;# 
  1448  0314                     	;# 
  1449  0315                     	;# 
  1450  0316                     	;# 
  1451  0317                     	;# 
  1452  0318                     	;# 
  1453  0318                     	;# 
  1454  0319                     	;# 
  1455  031A                     	;# 
  1456  031B                     	;# 
  1457  031C                     	;# 
  1458  031C                     	;# 
  1459  031D                     	;# 
  1460  031E                     	;# 
  1461  031F                     	;# 
  1462  038C                     	;# 
  1463  038D                     	;# 
  1464  038E                     	;# 
  1465  0390                     	;# 
  1466  0391                     	;# 
  1467  0392                     	;# 
  1468  040C                     	;# 
  1469  040D                     	;# 
  1470  040E                     	;# 
  1471  040F                     	;# 
  1472  0410                     	;# 
  1473  0411                     	;# 
  1474  0416                     	;# 
  1475  0416                     	;# 
  1476  0417                     	;# 
  1477  0418                     	;# 
  1478  0418                     	;# 
  1479  0419                     	;# 
  1480  041A                     	;# 
  1481  041A                     	;# 
  1482  041B                     	;# 
  1483  041C                     	;# 
  1484  041C                     	;# 
  1485  041D                     	;# 
  1486  041E                     	;# 
  1487  041F                     	;# 
  1488  048C                     	;# 
  1489  048C                     	;# 
  1490  048D                     	;# 
  1491  048E                     	;# 
  1492  048F                     	;# 
  1493  048F                     	;# 
  1494  0490                     	;# 
  1495  0491                     	;# 
  1496  0492                     	;# 
  1497  0492                     	;# 
  1498  0493                     	;# 
  1499  0494                     	;# 
  1500  0495                     	;# 
  1501  0495                     	;# 
  1502  0496                     	;# 
  1503  0497                     	;# 
  1504  0498                     	;# 
  1505  0499                     	;# 
  1506  049A                     	;# 
  1507  049B                     	;# 
  1508  049C                     	;# 
  1509  049D                     	;# 
  1510  050C                     	;# 
  1511  050C                     	;# 
  1512  050D                     	;# 
  1513  050E                     	;# 
  1514  050F                     	;# 
  1515  050F                     	;# 
  1516  0510                     	;# 
  1517  0511                     	;# 
  1518  0512                     	;# 
  1519  0512                     	;# 
  1520  0513                     	;# 
  1521  0514                     	;# 
  1522  0515                     	;# 
  1523  0515                     	;# 
  1524  0516                     	;# 
  1525  0517                     	;# 
  1526  0518                     	;# 
  1527  0519                     	;# 
  1528  051A                     	;# 
  1529  051B                     	;# 
  1530  051C                     	;# 
  1531  051D                     	;# 
  1532  058C                     	;# 
  1533  058C                     	;# 
  1534  058D                     	;# 
  1535  058E                     	;# 
  1536  058F                     	;# 
  1537  058F                     	;# 
  1538  0590                     	;# 
  1539  0591                     	;# 
  1540  0592                     	;# 
  1541  0593                     	;# 
  1542  060C                     	;# 
  1543  060D                     	;# 
  1544  060E                     	;# 
  1545  060F                     	;# 
  1546  0610                     	;# 
  1547  0611                     	;# 
  1548  0612                     	;# 
  1549  0613                     	;# 
  1550  0614                     	;# 
  1551  0616                     	;# 
  1552  0617                     	;# 
  1553  0618                     	;# 
  1554  0619                     	;# 
  1555  061A                     	;# 
  1556  061B                     	;# 
  1557  061C                     	;# 
  1558  061D                     	;# 
  1559  061E                     	;# 
  1560  068C                     	;# 
  1561  068D                     	;# 
  1562  068E                     	;# 
  1563  068F                     	;# 
  1564  0690                     	;# 
  1565  0691                     	;# 
  1566  0692                     	;# 
  1567  0693                     	;# 
  1568  0694                     	;# 
  1569  070C                     	;# 
  1570  070D                     	;# 
  1571  070E                     	;# 
  1572  070F                     	;# 
  1573  0710                     	;# 
  1574  0711                     	;# 
  1575  0712                     	;# 
  1576  0713                     	;# 
  1577  0714                     	;# 
  1578  0716                     	;# 
  1579  0717                     	;# 
  1580  0718                     	;# 
  1581  0719                     	;# 
  1582  071A                     	;# 
  1583  071B                     	;# 
  1584  071C                     	;# 
  1585  071D                     	;# 
  1586  071E                     	;# 
  1587  0796                     	;# 
  1588  0797                     	;# 
  1589  0798                     	;# 
  1590  0799                     	;# 
  1591  079A                     	;# 
  1592  079B                     	;# 
  1593  080C                     	;# 
  1594  080D                     	;# 
  1595  080E                     	;# 
  1596  080F                     	;# 
  1597  0810                     	;# 
  1598  0811                     	;# 
  1599  0812                     	;# 
  1600  0813                     	;# 
  1601  0814                     	;# 
  1602  081A                     	;# 
  1603  081B                     	;# 
  1604  081C                     	;# 
  1605  081D                     	;# 
  1606  081E                     	;# 
  1607  081F                     	;# 
  1608  088C                     	;# 
  1609  088D                     	;# 
  1610  088E                     	;# 
  1611  088F                     	;# 
  1612  0890                     	;# 
  1613  0891                     	;# 
  1614  0892                     	;# 
  1615  0893                     	;# 
  1616  0895                     	;# 
  1617  0896                     	;# 
  1618  0897                     	;# 
  1619  0898                     	;# 
  1620  0899                     	;# 
  1621  089A                     	;# 
  1622  089B                     	;# 
  1623  090C                     	;# 
  1624  090E                     	;# 
  1625  090F                     	;# 
  1626  091F                     	;# 
  1627  098F                     	;# 
  1628  098F                     	;# 
  1629  0990                     	;# 
  1630  0991                     	;# 
  1631  0992                     	;# 
  1632  0993                     	;# 
  1633  0994                     	;# 
  1634  0995                     	;# 
  1635  0996                     	;# 
  1636  0997                     	;# 
  1637  1E0F                     	;# 
  1638  1E10                     	;# 
  1639  1E11                     	;# 
  1640  1E12                     	;# 
  1641  1E13                     	;# 
  1642  1E14                     	;# 
  1643  1E15                     	;# 
  1644  1E16                     	;# 
  1645  1E17                     	;# 
  1646  1E18                     	;# 
  1647  1E19                     	;# 
  1648  1E1A                     	;# 
  1649  1E1B                     	;# 
  1650  1E1C                     	;# 
  1651  1E1D                     	;# 
  1652  1E1E                     	;# 
  1653  1E1F                     	;# 
  1654  1E20                     	;# 
  1655  1E21                     	;# 
  1656  1E22                     	;# 
  1657  1E23                     	;# 
  1658  1E24                     	;# 
  1659  1E25                     	;# 
  1660  1E26                     	;# 
  1661  1E27                     	;# 
  1662  1E28                     	;# 
  1663  1E29                     	;# 
  1664  1E2A                     	;# 
  1665  1E2B                     	;# 
  1666  1E2C                     	;# 
  1667  1E2D                     	;# 
  1668  1E2E                     	;# 
  1669  1E2F                     	;# 
  1670  1E30                     	;# 
  1671  1E31                     	;# 
  1672  1E32                     	;# 
  1673  1E33                     	;# 
  1674  1E34                     	;# 
  1675  1E35                     	;# 
  1676  1E36                     	;# 
  1677  1E37                     	;# 
  1678  1E8F                     	;# 
  1679  1E90                     	;# 
  1680  1E91                     	;# 
  1681  1E92                     	;# 
  1682  1E93                     	;# 
  1683  1E94                     	;# 
  1684  1E95                     	;# 
  1685  1E96                     	;# 
  1686  1E97                     	;# 
  1687  1E9C                     	;# 
  1688  1E9D                     	;# 
  1689  1E9E                     	;# 
  1690  1EA1                     	;# 
  1691  1EA2                     	;# 
  1692  1EA3                     	;# 
  1693  1EA4                     	;# 
  1694  1EA5                     	;# 
  1695  1EA9                     	;# 
  1696  1EAA                     	;# 
  1697  1EAB                     	;# 
  1698  1EAC                     	;# 
  1699  1EB1                     	;# 
  1700  1EB2                     	;# 
  1701  1EB3                     	;# 
  1702  1EB8                     	;# 
  1703  1EB9                     	;# 
  1704  1EBA                     	;# 
  1705  1EBB                     	;# 
  1706  1EBC                     	;# 
  1707  1EBD                     	;# 
  1708  1EBE                     	;# 
  1709  1EC3                     	;# 
  1710  1EC5                     	;# 
  1711  1EC6                     	;# 
  1712  1EC7                     	;# 
  1713  1EC8                     	;# 
  1714  1EC9                     	;# 
  1715  1ECA                     	;# 
  1716  1ECB                     	;# 
  1717  1ECC                     	;# 
  1718  1F10                     	;# 
  1719  1F11                     	;# 
  1720  1F12                     	;# 
  1721  1F13                     	;# 
  1722  1F14                     	;# 
  1723  1F15                     	;# 
  1724  1F16                     	;# 
  1725  1F17                     	;# 
  1726  1F18                     	;# 
  1727  1F19                     	;# 
  1728  1F1A                     	;# 
  1729  1F1B                     	;# 
  1730  1F1C                     	;# 
  1731  1F1D                     	;# 
  1732  1F1E                     	;# 
  1733  1F1F                     	;# 
  1734  1F20                     	;# 
  1735  1F21                     	;# 
  1736  1F22                     	;# 
  1737  1F23                     	;# 
  1738  1F24                     	;# 
  1739  1F25                     	;# 
  1740  1F26                     	;# 
  1741  1F27                     	;# 
  1742  1F28                     	;# 
  1743  1F29                     	;# 
  1744  1F2A                     	;# 
  1745  1F2B                     	;# 
  1746  1F2C                     	;# 
  1747  1F2D                     	;# 
  1748  1F2E                     	;# 
  1749  1F2F                     	;# 
  1750  1F30                     	;# 
  1751  1F31                     	;# 
  1752  1F32                     	;# 
  1753  1F38                     	;# 
  1754  1F39                     	;# 
  1755  1F3A                     	;# 
  1756  1F3B                     	;# 
  1757  1F3C                     	;# 
  1758  1F3D                     	;# 
  1759  1F3E                     	;# 
  1760  1F3F                     	;# 
  1761  1F40                     	;# 
  1762  1F41                     	;# 
  1763  1F43                     	;# 
  1764  1F44                     	;# 
  1765  1F45                     	;# 
  1766  1F46                     	;# 
  1767  1F47                     	;# 
  1768  1F48                     	;# 
  1769  1F49                     	;# 
  1770  1F4A                     	;# 
  1771  1F4B                     	;# 
  1772  1F4C                     	;# 
  1773  1F4E                     	;# 
  1774  1F4F                     	;# 
  1775  1F50                     	;# 
  1776  1F51                     	;# 
  1777  1F52                     	;# 
  1778  1F53                     	;# 
  1779  1F54                     	;# 
  1780  1F55                     	;# 
  1781  1F56                     	;# 
  1782  1F57                     	;# 
  1783  1F59                     	;# 
  1784  1F5A                     	;# 
  1785  1F5B                     	;# 
  1786  1F5C                     	;# 
  1787  1F5D                     	;# 
  1788  1F61                     	;# 
  1789  1F62                     	;# 
  1790  1F64                     	;# 
  1791  1F65                     	;# 
  1792  1F66                     	;# 
  1793  1F67                     	;# 
  1794  1F68                     	;# 
  1795  1F69                     	;# 
  1796  1F6A                     	;# 
  1797  1F6B                     	;# 
  1798  1F6C                     	;# 
  1799  1F6D                     	;# 
  1800  1FE4                     	;# 
  1801  1FE5                     	;# 
  1802  1FE6                     	;# 
  1803  1FE7                     	;# 
  1804  1FE8                     	;# 
  1805  1FE9                     	;# 
  1806  1FEA                     	;# 
  1807  1FEB                     	;# 
  1808  1FED                     	;# 
  1809  1FEE                     	;# 
  1810  1FEF                     	;# 
  1811  0000                     	;# 
  1812  0001                     	;# 
  1813  0002                     	;# 
  1814  0003                     	;# 
  1815  0004                     	;# 
  1816  0005                     	;# 
  1817  0006                     	;# 
  1818  0007                     	;# 
  1819  0008                     	;# 
  1820  0009                     	;# 
  1821  000A                     	;# 
  1822  000B                     	;# 
  1823  000C                     	;# 
  1824  000D                     	;# 
  1825  000E                     	;# 
  1826  000F                     	;# 
  1827  0010                     	;# 
  1828  0011                     	;# 
  1829  0012                     	;# 
  1830  0013                     	;# 
  1831  0014                     	;# 
  1832  0015                     	;# 
  1833  0016                     	;# 
  1834  0017                     	;# 
  1835  0018                     	;# 
  1836  0019                     	;# 
  1837  001A                     	;# 
  1838  001C                     	;# 
  1839  001C                     	;# 
  1840  001D                     	;# 
  1841  001D                     	;# 
  1842  001E                     	;# 
  1843  001F                     	;# 
  1844  008C                     	;# 
  1845  008C                     	;# 
  1846  008D                     	;# 
  1847  008E                     	;# 
  1848  008E                     	;# 
  1849  008F                     	;# 
  1850  0090                     	;# 
  1851  0090                     	;# 
  1852  0091                     	;# 
  1853  0093                     	;# 
  1854  0094                     	;# 
  1855  0095                     	;# 
  1856  0096                     	;# 
  1857  0097                     	;# 
  1858  0098                     	;# 
  1859  0099                     	;# 
  1860  009A                     	;# 
  1861  009B                     	;# 
  1862  009C                     	;# 
  1863  009D                     	;# 
  1864  009E                     	;# 
  1865  010C                     	;# 
  1866  010D                     	;# 
  1867  010E                     	;# 
  1868  010E                     	;# 
  1869  010F                     	;# 
  1870  0110                     	;# 
  1871  0110                     	;# 
  1872  0111                     	;# 
  1873  0112                     	;# 
  1874  0112                     	;# 
  1875  0113                     	;# 
  1876  0114                     	;# 
  1877  0114                     	;# 
  1878  0115                     	;# 
  1879  0116                     	;# 
  1880  0116                     	;# 
  1881  0117                     	;# 
  1882  0119                     	;# 
  1883  0119                     	;# 
  1884  0119                     	;# 
  1885  011A                     	;# 
  1886  011A                     	;# 
  1887  011A                     	;# 
  1888  011B                     	;# 
  1889  011B                     	;# 
  1890  011B                     	;# 
  1891  011B                     	;# 
  1892  011B                     	;# 
  1893  011C                     	;# 
  1894  011C                     	;# 
  1895  011C                     	;# 
  1896  011D                     	;# 
  1897  011D                     	;# 
  1898  011D                     	;# 
  1899  011E                     	;# 
  1900  011E                     	;# 
  1901  011E                     	;# 
  1902  011F                     	;# 
  1903  011F                     	;# 
  1904  011F                     	;# 
  1905  011F                     	;# 
  1906  011F                     	;# 
  1907  018C                     	;# 
  1908  018D                     	;# 
  1909  018E                     	;# 
  1910  018F                     	;# 
  1911  0190                     	;# 
  1912  0191                     	;# 
  1913  0192                     	;# 
  1914  0196                     	;# 
  1915  0197                     	;# 
  1916  0198                     	;# 
  1917  0199                     	;# 
  1918  019A                     	;# 
  1919  019B                     	;# 
  1920  019C                     	;# 
  1921  020C                     	;# 
  1922  020C                     	;# 
  1923  020D                     	;# 
  1924  020E                     	;# 
  1925  020F                     	;# 
  1926  020F                     	;# 
  1927  0210                     	;# 
  1928  0210                     	;# 
  1929  0211                     	;# 
  1930  0211                     	;# 
  1931  0212                     	;# 
  1932  0212                     	;# 
  1933  0213                     	;# 
  1934  0214                     	;# 
  1935  0215                     	;# 
  1936  0215                     	;# 
  1937  0216                     	;# 
  1938  0216                     	;# 
  1939  0217                     	;# 
  1940  0217                     	;# 
  1941  0218                     	;# 
  1942  0218                     	;# 
  1943  0219                     	;# 
  1944  021A                     	;# 
  1945  021B                     	;# 
  1946  021B                     	;# 
  1947  021C                     	;# 
  1948  021C                     	;# 
  1949  021D                     	;# 
  1950  021D                     	;# 
  1951  021E                     	;# 
  1952  021F                     	;# 
  1953  028C                     	;# 
  1954  028C                     	;# 
  1955  028D                     	;# 
  1956  028D                     	;# 
  1957  028E                     	;# 
  1958  028F                     	;# 
  1959  0290                     	;# 
  1960  0290                     	;# 
  1961  0291                     	;# 
  1962  0292                     	;# 
  1963  0292                     	;# 
  1964  0293                     	;# 
  1965  0293                     	;# 
  1966  0294                     	;# 
  1967  0295                     	;# 
  1968  0296                     	;# 
  1969  0296                     	;# 
  1970  0297                     	;# 
  1971  0298                     	;# 
  1972  0298                     	;# 
  1973  0299                     	;# 
  1974  0299                     	;# 
  1975  029A                     	;# 
  1976  029B                     	;# 
  1977  029C                     	;# 
  1978  029C                     	;# 
  1979  029D                     	;# 
  1980  030C                     	;# 
  1981  030C                     	;# 
  1982  030D                     	;# 
  1983  030E                     	;# 
  1984  030F                     	;# 
  1985  0310                     	;# 
  1986  0310                     	;# 
  1987  0311                     	;# 
  1988  0312                     	;# 
  1989  0313                     	;# 
  1990  0314                     	;# 
  1991  0314                     	;# 
  1992  0315                     	;# 
  1993  0316                     	;# 
  1994  0317                     	;# 
  1995  0318                     	;# 
  1996  0318                     	;# 
  1997  0319                     	;# 
  1998  031A                     	;# 
  1999  031B                     	;# 
  2000  031C                     	;# 
  2001  031C                     	;# 
  2002  031D                     	;# 
  2003  031E                     	;# 
  2004  031F                     	;# 
  2005  038C                     	;# 
  2006  038D                     	;# 
  2007  038E                     	;# 
  2008  0390                     	;# 
  2009  0391                     	;# 
  2010  0392                     	;# 
  2011  040C                     	;# 
  2012  040D                     	;# 
  2013  040E                     	;# 
  2014  040F                     	;# 
  2015  0410                     	;# 
  2016  0411                     	;# 
  2017  0416                     	;# 
  2018  0416                     	;# 
  2019  0417                     	;# 
  2020  0418                     	;# 
  2021  0418                     	;# 
  2022  0419                     	;# 
  2023  041A                     	;# 
  2024  041A                     	;# 
  2025  041B                     	;# 
  2026  041C                     	;# 
  2027  041C                     	;# 
  2028  041D                     	;# 
  2029  041E                     	;# 
  2030  041F                     	;# 
  2031  048C                     	;# 
  2032  048C                     	;# 
  2033  048D                     	;# 
  2034  048E                     	;# 
  2035  048F                     	;# 
  2036  048F                     	;# 
  2037  0490                     	;# 
  2038  0491                     	;# 
  2039  0492                     	;# 
  2040  0492                     	;# 
  2041  0493                     	;# 
  2042  0494                     	;# 
  2043  0495                     	;# 
  2044  0495                     	;# 
  2045  0496                     	;# 
  2046  0497                     	;# 
  2047  0498                     	;# 
  2048  0499                     	;# 
  2049  049A                     	;# 
  2050  049B                     	;# 
  2051  049C                     	;# 
  2052  049D                     	;# 
  2053  050C                     	;# 
  2054  050C                     	;# 
  2055  050D                     	;# 
  2056  050E                     	;# 
  2057  050F                     	;# 
  2058  050F                     	;# 
  2059  0510                     	;# 
  2060  0511                     	;# 
  2061  0512                     	;# 
  2062  0512                     	;# 
  2063  0513                     	;# 
  2064  0514                     	;# 
  2065  0515                     	;# 
  2066  0515                     	;# 
  2067  0516                     	;# 
  2068  0517                     	;# 
  2069  0518                     	;# 
  2070  0519                     	;# 
  2071  051A                     	;# 
  2072  051B                     	;# 
  2073  051C                     	;# 
  2074  051D                     	;# 
  2075  058C                     	;# 
  2076  058C                     	;# 
  2077  058D                     	;# 
  2078  058E                     	;# 
  2079  058F                     	;# 
  2080  058F                     	;# 
  2081  0590                     	;# 
  2082  0591                     	;# 
  2083  0592                     	;# 
  2084  0593                     	;# 
  2085  060C                     	;# 
  2086  060D                     	;# 
  2087  060E                     	;# 
  2088  060F                     	;# 
  2089  0610                     	;# 
  2090  0611                     	;# 
  2091  0612                     	;# 
  2092  0613                     	;# 
  2093  0614                     	;# 
  2094  0616                     	;# 
  2095  0617                     	;# 
  2096  0618                     	;# 
  2097  0619                     	;# 
  2098  061A                     	;# 
  2099  061B                     	;# 
  2100  061C                     	;# 
  2101  061D                     	;# 
  2102  061E                     	;# 
  2103  068C                     	;# 
  2104  068D                     	;# 
  2105  068E                     	;# 
  2106  068F                     	;# 
  2107  0690                     	;# 
  2108  0691                     	;# 
  2109  0692                     	;# 
  2110  0693                     	;# 
  2111  0694                     	;# 
  2112  070C                     	;# 
  2113  070D                     	;# 
  2114  070E                     	;# 
  2115  070F                     	;# 
  2116  0710                     	;# 
  2117  0711                     	;# 
  2118  0712                     	;# 
  2119  0713                     	;# 
  2120  0714                     	;# 
  2121  0716                     	;# 
  2122  0717                     	;# 
  2123  0718                     	;# 
  2124  0719                     	;# 
  2125  071A                     	;# 
  2126  071B                     	;# 
  2127  071C                     	;# 
  2128  071D                     	;# 
  2129  071E                     	;# 
  2130  0796                     	;# 
  2131  0797                     	;# 
  2132  0798                     	;# 
  2133  0799                     	;# 
  2134  079A                     	;# 
  2135  079B                     	;# 
  2136  080C                     	;# 
  2137  080D                     	;# 
  2138  080E                     	;# 
  2139  080F                     	;# 
  2140  0810                     	;# 
  2141  0811                     	;# 
  2142  0812                     	;# 
  2143  0813                     	;# 
  2144  0814                     	;# 
  2145  081A                     	;# 
  2146  081B                     	;# 
  2147  081C                     	;# 
  2148  081D                     	;# 
  2149  081E                     	;# 
  2150  081F                     	;# 
  2151  088C                     	;# 
  2152  088D                     	;# 
  2153  088E                     	;# 
  2154  088F                     	;# 
  2155  0890                     	;# 
  2156  0891                     	;# 
  2157  0892                     	;# 
  2158  0893                     	;# 
  2159  0895                     	;# 
  2160  0896                     	;# 
  2161  0897                     	;# 
  2162  0898                     	;# 
  2163  0899                     	;# 
  2164  089A                     	;# 
  2165  089B                     	;# 
  2166  090C                     	;# 
  2167  090E                     	;# 
  2168  090F                     	;# 
  2169  091F                     	;# 
  2170  098F                     	;# 
  2171  098F                     	;# 
  2172  0990                     	;# 
  2173  0991                     	;# 
  2174  0992                     	;# 
  2175  0993                     	;# 
  2176  0994                     	;# 
  2177  0995                     	;# 
  2178  0996                     	;# 
  2179  0997                     	;# 
  2180  1E0F                     	;# 
  2181  1E10                     	;# 
  2182  1E11                     	;# 
  2183  1E12                     	;# 
  2184  1E13                     	;# 
  2185  1E14                     	;# 
  2186  1E15                     	;# 
  2187  1E16                     	;# 
  2188  1E17                     	;# 
  2189  1E18                     	;# 
  2190  1E19                     	;# 
  2191  1E1A                     	;# 
  2192  1E1B                     	;# 
  2193  1E1C                     	;# 
  2194  1E1D                     	;# 
  2195  1E1E                     	;# 
  2196  1E1F                     	;# 
  2197  1E20                     	;# 
  2198  1E21                     	;# 
  2199  1E22                     	;# 
  2200  1E23                     	;# 
  2201  1E24                     	;# 
  2202  1E25                     	;# 
  2203  1E26                     	;# 
  2204  1E27                     	;# 
  2205  1E28                     	;# 
  2206  1E29                     	;# 
  2207  1E2A                     	;# 
  2208  1E2B                     	;# 
  2209  1E2C                     	;# 
  2210  1E2D                     	;# 
  2211  1E2E                     	;# 
  2212  1E2F                     	;# 
  2213  1E30                     	;# 
  2214  1E31                     	;# 
  2215  1E32                     	;# 
  2216  1E33                     	;# 
  2217  1E34                     	;# 
  2218  1E35                     	;# 
  2219  1E36                     	;# 
  2220  1E37                     	;# 
  2221  1E8F                     	;# 
  2222  1E90                     	;# 
  2223  1E91                     	;# 
  2224  1E92                     	;# 
  2225  1E93                     	;# 
  2226  1E94                     	;# 
  2227  1E95                     	;# 
  2228  1E96                     	;# 
  2229  1E97                     	;# 
  2230  1E9C                     	;# 
  2231  1E9D                     	;# 
  2232  1E9E                     	;# 
  2233  1EA1                     	;# 
  2234  1EA2                     	;# 
  2235  1EA3                     	;# 
  2236  1EA4                     	;# 
  2237  1EA5                     	;# 
  2238  1EA9                     	;# 
  2239  1EAA                     	;# 
  2240  1EAB                     	;# 
  2241  1EAC                     	;# 
  2242  1EB1                     	;# 
  2243  1EB2                     	;# 
  2244  1EB3                     	;# 
  2245  1EB8                     	;# 
  2246  1EB9                     	;# 
  2247  1EBA                     	;# 
  2248  1EBB                     	;# 
  2249  1EBC                     	;# 
  2250  1EBD                     	;# 
  2251  1EBE                     	;# 
  2252  1EC3                     	;# 
  2253  1EC5                     	;# 
  2254  1EC6                     	;# 
  2255  1EC7                     	;# 
  2256  1EC8                     	;# 
  2257  1EC9                     	;# 
  2258  1ECA                     	;# 
  2259  1ECB                     	;# 
  2260  1ECC                     	;# 
  2261  1F10                     	;# 
  2262  1F11                     	;# 
  2263  1F12                     	;# 
  2264  1F13                     	;# 
  2265  1F14                     	;# 
  2266  1F15                     	;# 
  2267  1F16                     	;# 
  2268  1F17                     	;# 
  2269  1F18                     	;# 
  2270  1F19                     	;# 
  2271  1F1A                     	;# 
  2272  1F1B                     	;# 
  2273  1F1C                     	;# 
  2274  1F1D                     	;# 
  2275  1F1E                     	;# 
  2276  1F1F                     	;# 
  2277  1F20                     	;# 
  2278  1F21                     	;# 
  2279  1F22                     	;# 
  2280  1F23                     	;# 
  2281  1F24                     	;# 
  2282  1F25                     	;# 
  2283  1F26                     	;# 
  2284  1F27                     	;# 
  2285  1F28                     	;# 
  2286  1F29                     	;# 
  2287  1F2A                     	;# 
  2288  1F2B                     	;# 
  2289  1F2C                     	;# 
  2290  1F2D                     	;# 
  2291  1F2E                     	;# 
  2292  1F2F                     	;# 
  2293  1F30                     	;# 
  2294  1F31                     	;# 
  2295  1F32                     	;# 
  2296  1F38                     	;# 
  2297  1F39                     	;# 
  2298  1F3A                     	;# 
  2299  1F3B                     	;# 
  2300  1F3C                     	;# 
  2301  1F3D                     	;# 
  2302  1F3E                     	;# 
  2303  1F3F                     	;# 
  2304  1F40                     	;# 
  2305  1F41                     	;# 
  2306  1F43                     	;# 
  2307  1F44                     	;# 
  2308  1F45                     	;# 
  2309  1F46                     	;# 
  2310  1F47                     	;# 
  2311  1F48                     	;# 
  2312  1F49                     	;# 
  2313  1F4A                     	;# 
  2314  1F4B                     	;# 
  2315  1F4C                     	;# 
  2316  1F4E                     	;# 
  2317  1F4F                     	;# 
  2318  1F50                     	;# 
  2319  1F51                     	;# 
  2320  1F52                     	;# 
  2321  1F53                     	;# 
  2322  1F54                     	;# 
  2323  1F55                     	;# 
  2324  1F56                     	;# 
  2325  1F57                     	;# 
  2326  1F59                     	;# 
  2327  1F5A                     	;# 
  2328  1F5B                     	;# 
  2329  1F5C                     	;# 
  2330  1F5D                     	;# 
  2331  1F61                     	;# 
  2332  1F62                     	;# 
  2333  1F64                     	;# 
  2334  1F65                     	;# 
  2335  1F66                     	;# 
  2336  1F67                     	;# 
  2337  1F68                     	;# 
  2338  1F69                     	;# 
  2339  1F6A                     	;# 
  2340  1F6B                     	;# 
  2341  1F6C                     	;# 
  2342  1F6D                     	;# 
  2343  1FE4                     	;# 
  2344  1FE5                     	;# 
  2345  1FE6                     	;# 
  2346  1FE7                     	;# 
  2347  1FE8                     	;# 
  2348  1FE9                     	;# 
  2349  1FEA                     	;# 
  2350  1FEB                     	;# 
  2351  1FED                     	;# 
  2352  1FEE                     	;# 
  2353  1FEF                     	;# 
  2354  0000                     	;# 
  2355  0001                     	;# 
  2356  0002                     	;# 
  2357  0003                     	;# 
  2358  0004                     	;# 
  2359  0005                     	;# 
  2360  0006                     	;# 
  2361  0007                     	;# 
  2362  0008                     	;# 
  2363  0009                     	;# 
  2364  000A                     	;# 
  2365  000B                     	;# 
  2366  000C                     	;# 
  2367  000D                     	;# 
  2368  000E                     	;# 
  2369  000F                     	;# 
  2370  0010                     	;# 
  2371  0011                     	;# 
  2372  0012                     	;# 
  2373  0013                     	;# 
  2374  0014                     	;# 
  2375  0015                     	;# 
  2376  0016                     	;# 
  2377  0017                     	;# 
  2378  0018                     	;# 
  2379  0019                     	;# 
  2380  001A                     	;# 
  2381  001C                     	;# 
  2382  001C                     	;# 
  2383  001D                     	;# 
  2384  001D                     	;# 
  2385  001E                     	;# 
  2386  001F                     	;# 
  2387  008C                     	;# 
  2388  008C                     	;# 
  2389  008D                     	;# 
  2390  008E                     	;# 
  2391  008E                     	;# 
  2392  008F                     	;# 
  2393  0090                     	;# 
  2394  0090                     	;# 
  2395  0091                     	;# 
  2396  0093                     	;# 
  2397  0094                     	;# 
  2398  0095                     	;# 
  2399  0096                     	;# 
  2400  0097                     	;# 
  2401  0098                     	;# 
  2402  0099                     	;# 
  2403  009A                     	;# 
  2404  009B                     	;# 
  2405  009C                     	;# 
  2406  009D                     	;# 
  2407  009E                     	;# 
  2408  010C                     	;# 
  2409  010D                     	;# 
  2410  010E                     	;# 
  2411  010E                     	;# 
  2412  010F                     	;# 
  2413  0110                     	;# 
  2414  0110                     	;# 
  2415  0111                     	;# 
  2416  0112                     	;# 
  2417  0112                     	;# 
  2418  0113                     	;# 
  2419  0114                     	;# 
  2420  0114                     	;# 
  2421  0115                     	;# 
  2422  0116                     	;# 
  2423  0116                     	;# 
  2424  0117                     	;# 
  2425  0119                     	;# 
  2426  0119                     	;# 
  2427  0119                     	;# 
  2428  011A                     	;# 
  2429  011A                     	;# 
  2430  011A                     	;# 
  2431  011B                     	;# 
  2432  011B                     	;# 
  2433  011B                     	;# 
  2434  011B                     	;# 
  2435  011B                     	;# 
  2436  011C                     	;# 
  2437  011C                     	;# 
  2438  011C                     	;# 
  2439  011D                     	;# 
  2440  011D                     	;# 
  2441  011D                     	;# 
  2442  011E                     	;# 
  2443  011E                     	;# 
  2444  011E                     	;# 
  2445  011F                     	;# 
  2446  011F                     	;# 
  2447  011F                     	;# 
  2448  011F                     	;# 
  2449  011F                     	;# 
  2450  018C                     	;# 
  2451  018D                     	;# 
  2452  018E                     	;# 
  2453  018F                     	;# 
  2454  0190                     	;# 
  2455  0191                     	;# 
  2456  0192                     	;# 
  2457  0196                     	;# 
  2458  0197                     	;# 
  2459  0198                     	;# 
  2460  0199                     	;# 
  2461  019A                     	;# 
  2462  019B                     	;# 
  2463  019C                     	;# 
  2464  020C                     	;# 
  2465  020C                     	;# 
  2466  020D                     	;# 
  2467  020E                     	;# 
  2468  020F                     	;# 
  2469  020F                     	;# 
  2470  0210                     	;# 
  2471  0210                     	;# 
  2472  0211                     	;# 
  2473  0211                     	;# 
  2474  0212                     	;# 
  2475  0212                     	;# 
  2476  0213                     	;# 
  2477  0214                     	;# 
  2478  0215                     	;# 
  2479  0215                     	;# 
  2480  0216                     	;# 
  2481  0216                     	;# 
  2482  0217                     	;# 
  2483  0217                     	;# 
  2484  0218                     	;# 
  2485  0218                     	;# 
  2486  0219                     	;# 
  2487  021A                     	;# 
  2488  021B                     	;# 
  2489  021B                     	;# 
  2490  021C                     	;# 
  2491  021C                     	;# 
  2492  021D                     	;# 
  2493  021D                     	;# 
  2494  021E                     	;# 
  2495  021F                     	;# 
  2496  028C                     	;# 
  2497  028C                     	;# 
  2498  028D                     	;# 
  2499  028D                     	;# 
  2500  028E                     	;# 
  2501  028F                     	;# 
  2502  0290                     	;# 
  2503  0290                     	;# 
  2504  0291                     	;# 
  2505  0292                     	;# 
  2506  0292                     	;# 
  2507  0293                     	;# 
  2508  0293                     	;# 
  2509  0294                     	;# 
  2510  0295                     	;# 
  2511  0296                     	;# 
  2512  0296                     	;# 
  2513  0297                     	;# 
  2514  0298                     	;# 
  2515  0298                     	;# 
  2516  0299                     	;# 
  2517  0299                     	;# 
  2518  029A                     	;# 
  2519  029B                     	;# 
  2520  029C                     	;# 
  2521  029C                     	;# 
  2522  029D                     	;# 
  2523  030C                     	;# 
  2524  030C                     	;# 
  2525  030D                     	;# 
  2526  030E                     	;# 
  2527  030F                     	;# 
  2528  0310                     	;# 
  2529  0310                     	;# 
  2530  0311                     	;# 
  2531  0312                     	;# 
  2532  0313                     	;# 
  2533  0314                     	;# 
  2534  0314                     	;# 
  2535  0315                     	;# 
  2536  0316                     	;# 
  2537  0317                     	;# 
  2538  0318                     	;# 
  2539  0318                     	;# 
  2540  0319                     	;# 
  2541  031A                     	;# 
  2542  031B                     	;# 
  2543  031C                     	;# 
  2544  031C                     	;# 
  2545  031D                     	;# 
  2546  031E                     	;# 
  2547  031F                     	;# 
  2548  038C                     	;# 
  2549  038D                     	;# 
  2550  038E                     	;# 
  2551  0390                     	;# 
  2552  0391                     	;# 
  2553  0392                     	;# 
  2554  040C                     	;# 
  2555  040D                     	;# 
  2556  040E                     	;# 
  2557  040F                     	;# 
  2558  0410                     	;# 
  2559  0411                     	;# 
  2560  0416                     	;# 
  2561  0416                     	;# 
  2562  0417                     	;# 
  2563  0418                     	;# 
  2564  0418                     	;# 
  2565  0419                     	;# 
  2566  041A                     	;# 
  2567  041A                     	;# 
  2568  041B                     	;# 
  2569  041C                     	;# 
  2570  041C                     	;# 
  2571  041D                     	;# 
  2572  041E                     	;# 
  2573  041F                     	;# 
  2574  048C                     	;# 
  2575  048C                     	;# 
  2576  048D                     	;# 
  2577  048E                     	;# 
  2578  048F                     	;# 
  2579  048F                     	;# 
  2580  0490                     	;# 
  2581  0491                     	;# 
  2582  0492                     	;# 
  2583  0492                     	;# 
  2584  0493                     	;# 
  2585  0494                     	;# 
  2586  0495                     	;# 
  2587  0495                     	;# 
  2588  0496                     	;# 
  2589  0497                     	;# 
  2590  0498                     	;# 
  2591  0499                     	;# 
  2592  049A                     	;# 
  2593  049B                     	;# 
  2594  049C                     	;# 
  2595  049D                     	;# 
  2596  050C                     	;# 
  2597  050C                     	;# 
  2598  050D                     	;# 
  2599  050E                     	;# 
  2600  050F                     	;# 
  2601  050F                     	;# 
  2602  0510                     	;# 
  2603  0511                     	;# 
  2604  0512                     	;# 
  2605  0512                     	;# 
  2606  0513                     	;# 
  2607  0514                     	;# 
  2608  0515                     	;# 
  2609  0515                     	;# 
  2610  0516                     	;# 
  2611  0517                     	;# 
  2612  0518                     	;# 
  2613  0519                     	;# 
  2614  051A                     	;# 
  2615  051B                     	;# 
  2616  051C                     	;# 
  2617  051D                     	;# 
  2618  058C                     	;# 
  2619  058C                     	;# 
  2620  058D                     	;# 
  2621  058E                     	;# 
  2622  058F                     	;# 
  2623  058F                     	;# 
  2624  0590                     	;# 
  2625  0591                     	;# 
  2626  0592                     	;# 
  2627  0593                     	;# 
  2628  060C                     	;# 
  2629  060D                     	;# 
  2630  060E                     	;# 
  2631  060F                     	;# 
  2632  0610                     	;# 
  2633  0611                     	;# 
  2634  0612                     	;# 
  2635  0613                     	;# 
  2636  0614                     	;# 
  2637  0616                     	;# 
  2638  0617                     	;# 
  2639  0618                     	;# 
  2640  0619                     	;# 
  2641  061A                     	;# 
  2642  061B                     	;# 
  2643  061C                     	;# 
  2644  061D                     	;# 
  2645  061E                     	;# 
  2646  068C                     	;# 
  2647  068D                     	;# 
  2648  068E                     	;# 
  2649  068F                     	;# 
  2650  0690                     	;# 
  2651  0691                     	;# 
  2652  0692                     	;# 
  2653  0693                     	;# 
  2654  0694                     	;# 
  2655  070C                     	;# 
  2656  070D                     	;# 
  2657  070E                     	;# 
  2658  070F                     	;# 
  2659  0710                     	;# 
  2660  0711                     	;# 
  2661  0712                     	;# 
  2662  0713                     	;# 
  2663  0714                     	;# 
  2664  0716                     	;# 
  2665  0717                     	;# 
  2666  0718                     	;# 
  2667  0719                     	;# 
  2668  071A                     	;# 
  2669  071B                     	;# 
  2670  071C                     	;# 
  2671  071D                     	;# 
  2672  071E                     	;# 
  2673  0796                     	;# 
  2674  0797                     	;# 
  2675  0798                     	;# 
  2676  0799                     	;# 
  2677  079A                     	;# 
  2678  079B                     	;# 
  2679  080C                     	;# 
  2680  080D                     	;# 
  2681  080E                     	;# 
  2682  080F                     	;# 
  2683  0810                     	;# 
  2684  0811                     	;# 
  2685  0812                     	;# 
  2686  0813                     	;# 
  2687  0814                     	;# 
  2688  081A                     	;# 
  2689  081B                     	;# 
  2690  081C                     	;# 
  2691  081D                     	;# 
  2692  081E                     	;# 
  2693  081F                     	;# 
  2694  088C                     	;# 
  2695  088D                     	;# 
  2696  088E                     	;# 
  2697  088F                     	;# 
  2698  0890                     	;# 
  2699  0891                     	;# 
  2700  0892                     	;# 
  2701  0893                     	;# 
  2702  0895                     	;# 
  2703  0896                     	;# 
  2704  0897                     	;# 
  2705  0898                     	;# 
  2706  0899                     	;# 
  2707  089A                     	;# 
  2708  089B                     	;# 
  2709  090C                     	;# 
  2710  090E                     	;# 
  2711  090F                     	;# 
  2712  091F                     	;# 
  2713  098F                     	;# 
  2714  098F                     	;# 
  2715  0990                     	;# 
  2716  0991                     	;# 
  2717  0992                     	;# 
  2718  0993                     	;# 
  2719  0994                     	;# 
  2720  0995                     	;# 
  2721  0996                     	;# 
  2722  0997                     	;# 
  2723  1E0F                     	;# 
  2724  1E10                     	;# 
  2725  1E11                     	;# 
  2726  1E12                     	;# 
  2727  1E13                     	;# 
  2728  1E14                     	;# 
  2729  1E15                     	;# 
  2730  1E16                     	;# 
  2731  1E17                     	;# 
  2732  1E18                     	;# 
  2733  1E19                     	;# 
  2734  1E1A                     	;# 
  2735  1E1B                     	;# 
  2736  1E1C                     	;# 
  2737  1E1D                     	;# 
  2738  1E1E                     	;# 
  2739  1E1F                     	;# 
  2740  1E20                     	;# 
  2741  1E21                     	;# 
  2742  1E22                     	;# 
  2743  1E23                     	;# 
  2744  1E24                     	;# 
  2745  1E25                     	;# 
  2746  1E26                     	;# 
  2747  1E27                     	;# 
  2748  1E28                     	;# 
  2749  1E29                     	;# 
  2750  1E2A                     	;# 
  2751  1E2B                     	;# 
  2752  1E2C                     	;# 
  2753  1E2D                     	;# 
  2754  1E2E                     	;# 
  2755  1E2F                     	;# 
  2756  1E30                     	;# 
  2757  1E31                     	;# 
  2758  1E32                     	;# 
  2759  1E33                     	;# 
  2760  1E34                     	;# 
  2761  1E35                     	;# 
  2762  1E36                     	;# 
  2763  1E37                     	;# 
  2764  1E8F                     	;# 
  2765  1E90                     	;# 
  2766  1E91                     	;# 
  2767  1E92                     	;# 
  2768  1E93                     	;# 
  2769  1E94                     	;# 
  2770  1E95                     	;# 
  2771  1E96                     	;# 
  2772  1E97                     	;# 
  2773  1E9C                     	;# 
  2774  1E9D                     	;# 
  2775  1E9E                     	;# 
  2776  1EA1                     	;# 
  2777  1EA2                     	;# 
  2778  1EA3                     	;# 
  2779  1EA4                     	;# 
  2780  1EA5                     	;# 
  2781  1EA9                     	;# 
  2782  1EAA                     	;# 
  2783  1EAB                     	;# 
  2784  1EAC                     	;# 
  2785  1EB1                     	;# 
  2786  1EB2                     	;# 
  2787  1EB3                     	;# 
  2788  1EB8                     	;# 
  2789  1EB9                     	;# 
  2790  1EBA                     	;# 
  2791  1EBB                     	;# 
  2792  1EBC                     	;# 
  2793  1EBD                     	;# 
  2794  1EBE                     	;# 
  2795  1EC3                     	;# 
  2796  1EC5                     	;# 
  2797  1EC6                     	;# 
  2798  1EC7                     	;# 
  2799  1EC8                     	;# 
  2800  1EC9                     	;# 
  2801  1ECA                     	;# 
  2802  1ECB                     	;# 
  2803  1ECC                     	;# 
  2804  1F10                     	;# 
  2805  1F11                     	;# 
  2806  1F12                     	;# 
  2807  1F13                     	;# 
  2808  1F14                     	;# 
  2809  1F15                     	;# 
  2810  1F16                     	;# 
  2811  1F17                     	;# 
  2812  1F18                     	;# 
  2813  1F19                     	;# 
  2814  1F1A                     	;# 
  2815  1F1B                     	;# 
  2816  1F1C                     	;# 
  2817  1F1D                     	;# 
  2818  1F1E                     	;# 
  2819  1F1F                     	;# 
  2820  1F20                     	;# 
  2821  1F21                     	;# 
  2822  1F22                     	;# 
  2823  1F23                     	;# 
  2824  1F24                     	;# 
  2825  1F25                     	;# 
  2826  1F26                     	;# 
  2827  1F27                     	;# 
  2828  1F28                     	;# 
  2829  1F29                     	;# 
  2830  1F2A                     	;# 
  2831  1F2B                     	;# 
  2832  1F2C                     	;# 
  2833  1F2D                     	;# 
  2834  1F2E                     	;# 
  2835  1F2F                     	;# 
  2836  1F30                     	;# 
  2837  1F31                     	;# 
  2838  1F32                     	;# 
  2839  1F38                     	;# 
  2840  1F39                     	;# 
  2841  1F3A                     	;# 
  2842  1F3B                     	;# 
  2843  1F3C                     	;# 
  2844  1F3D                     	;# 
  2845  1F3E                     	;# 
  2846  1F3F                     	;# 
  2847  1F40                     	;# 
  2848  1F41                     	;# 
  2849  1F43                     	;# 
  2850  1F44                     	;# 
  2851  1F45                     	;# 
  2852  1F46                     	;# 
  2853  1F47                     	;# 
  2854  1F48                     	;# 
  2855  1F49                     	;# 
  2856  1F4A                     	;# 
  2857  1F4B                     	;# 
  2858  1F4C                     	;# 
  2859  1F4E                     	;# 
  2860  1F4F                     	;# 
  2861  1F50                     	;# 
  2862  1F51                     	;# 
  2863  1F52                     	;# 
  2864  1F53                     	;# 
  2865  1F54                     	;# 
  2866  1F55                     	;# 
  2867  1F56                     	;# 
  2868  1F57                     	;# 
  2869  1F59                     	;# 
  2870  1F5A                     	;# 
  2871  1F5B                     	;# 
  2872  1F5C                     	;# 
  2873  1F5D                     	;# 
  2874  1F61                     	;# 
  2875  1F62                     	;# 
  2876  1F64                     	;# 
  2877  1F65                     	;# 
  2878  1F66                     	;# 
  2879  1F67                     	;# 
  2880  1F68                     	;# 
  2881  1F69                     	;# 
  2882  1F6A                     	;# 
  2883  1F6B                     	;# 
  2884  1F6C                     	;# 
  2885  1F6D                     	;# 
  2886  1FE4                     	;# 
  2887  1FE5                     	;# 
  2888  1FE6                     	;# 
  2889  1FE7                     	;# 
  2890  1FE8                     	;# 
  2891  1FE9                     	;# 
  2892  1FEA                     	;# 
  2893  1FEB                     	;# 
  2894  1FED                     	;# 
  2895  1FEE                     	;# 
  2896  1FEF                     	;# 
  2897  0000                     	;# 
  2898  0001                     	;# 
  2899  0002                     	;# 
  2900  0003                     	;# 
  2901  0004                     	;# 
  2902  0005                     	;# 
  2903  0006                     	;# 
  2904  0007                     	;# 
  2905  0008                     	;# 
  2906  0009                     	;# 
  2907  000A                     	;# 
  2908  000B                     	;# 
  2909  000C                     	;# 
  2910  000D                     	;# 
  2911  000E                     	;# 
  2912  000F                     	;# 
  2913  0010                     	;# 
  2914  0011                     	;# 
  2915  0012                     	;# 
  2916  0013                     	;# 
  2917  0014                     	;# 
  2918  0015                     	;# 
  2919  0016                     	;# 
  2920  0017                     	;# 
  2921  0018                     	;# 
  2922  0019                     	;# 
  2923  001A                     	;# 
  2924  001C                     	;# 
  2925  001C                     	;# 
  2926  001D                     	;# 
  2927  001D                     	;# 
  2928  001E                     	;# 
  2929  001F                     	;# 
  2930  008C                     	;# 
  2931  008C                     	;# 
  2932  008D                     	;# 
  2933  008E                     	;# 
  2934  008E                     	;# 
  2935  008F                     	;# 
  2936  0090                     	;# 
  2937  0090                     	;# 
  2938  0091                     	;# 
  2939  0093                     	;# 
  2940  0094                     	;# 
  2941  0095                     	;# 
  2942  0096                     	;# 
  2943  0097                     	;# 
  2944  0098                     	;# 
  2945  0099                     	;# 
  2946  009A                     	;# 
  2947  009B                     	;# 
  2948  009C                     	;# 
  2949  009D                     	;# 
  2950  009E                     	;# 
  2951  010C                     	;# 
  2952  010D                     	;# 
  2953  010E                     	;# 
  2954  010E                     	;# 
  2955  010F                     	;# 
  2956  0110                     	;# 
  2957  0110                     	;# 
  2958  0111                     	;# 
  2959  0112                     	;# 
  2960  0112                     	;# 
  2961  0113                     	;# 
  2962  0114                     	;# 
  2963  0114                     	;# 
  2964  0115                     	;# 
  2965  0116                     	;# 
  2966  0116                     	;# 
  2967  0117                     	;# 
  2968  0119                     	;# 
  2969  0119                     	;# 
  2970  0119                     	;# 
  2971  011A                     	;# 
  2972  011A                     	;# 
  2973  011A                     	;# 
  2974  011B                     	;# 
  2975  011B                     	;# 
  2976  011B                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011C                     	;# 
  2980  011C                     	;# 
  2981  011C                     	;# 
  2982  011D                     	;# 
  2983  011D                     	;# 
  2984  011D                     	;# 
  2985  011E                     	;# 
  2986  011E                     	;# 
  2987  011E                     	;# 
  2988  011F                     	;# 
  2989  011F                     	;# 
  2990  011F                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  018C                     	;# 
  2994  018D                     	;# 
  2995  018E                     	;# 
  2996  018F                     	;# 
  2997  0190                     	;# 
  2998  0191                     	;# 
  2999  0192                     	;# 
  3000  0196                     	;# 
  3001  0197                     	;# 
  3002  0198                     	;# 
  3003  0199                     	;# 
  3004  019A                     	;# 
  3005  019B                     	;# 
  3006  019C                     	;# 
  3007  020C                     	;# 
  3008  020C                     	;# 
  3009  020D                     	;# 
  3010  020E                     	;# 
  3011  020F                     	;# 
  3012  020F                     	;# 
  3013  0210                     	;# 
  3014  0210                     	;# 
  3015  0211                     	;# 
  3016  0211                     	;# 
  3017  0212                     	;# 
  3018  0212                     	;# 
  3019  0213                     	;# 
  3020  0214                     	;# 
  3021  0215                     	;# 
  3022  0215                     	;# 
  3023  0216                     	;# 
  3024  0216                     	;# 
  3025  0217                     	;# 
  3026  0217                     	;# 
  3027  0218                     	;# 
  3028  0218                     	;# 
  3029  0219                     	;# 
  3030  021A                     	;# 
  3031  021B                     	;# 
  3032  021B                     	;# 
  3033  021C                     	;# 
  3034  021C                     	;# 
  3035  021D                     	;# 
  3036  021D                     	;# 
  3037  021E                     	;# 
  3038  021F                     	;# 
  3039  028C                     	;# 
  3040  028C                     	;# 
  3041  028D                     	;# 
  3042  028D                     	;# 
  3043  028E                     	;# 
  3044  028F                     	;# 
  3045  0290                     	;# 
  3046  0290                     	;# 
  3047  0291                     	;# 
  3048  0292                     	;# 
  3049  0292                     	;# 
  3050  0293                     	;# 
  3051  0293                     	;# 
  3052  0294                     	;# 
  3053  0295                     	;# 
  3054  0296                     	;# 
  3055  0296                     	;# 
  3056  0297                     	;# 
  3057  0298                     	;# 
  3058  0298                     	;# 
  3059  0299                     	;# 
  3060  0299                     	;# 
  3061  029A                     	;# 
  3062  029B                     	;# 
  3063  029C                     	;# 
  3064  029C                     	;# 
  3065  029D                     	;# 
  3066  030C                     	;# 
  3067  030C                     	;# 
  3068  030D                     	;# 
  3069  030E                     	;# 
  3070  030F                     	;# 
  3071  0310                     	;# 
  3072  0310                     	;# 
  3073  0311                     	;# 
  3074  0312                     	;# 
  3075  0313                     	;# 
  3076  0314                     	;# 
  3077  0314                     	;# 
  3078  0315                     	;# 
  3079  0316                     	;# 
  3080  0317                     	;# 
  3081  0318                     	;# 
  3082  0318                     	;# 
  3083  0319                     	;# 
  3084  031A                     	;# 
  3085  031B                     	;# 
  3086  031C                     	;# 
  3087  031C                     	;# 
  3088  031D                     	;# 
  3089  031E                     	;# 
  3090  031F                     	;# 
  3091  038C                     	;# 
  3092  038D                     	;# 
  3093  038E                     	;# 
  3094  0390                     	;# 
  3095  0391                     	;# 
  3096  0392                     	;# 
  3097  040C                     	;# 
  3098  040D                     	;# 
  3099  040E                     	;# 
  3100  040F                     	;# 
  3101  0410                     	;# 
  3102  0411                     	;# 
  3103  0416                     	;# 
  3104  0416                     	;# 
  3105  0417                     	;# 
  3106  0418                     	;# 
  3107  0418                     	;# 
  3108  0419                     	;# 
  3109  041A                     	;# 
  3110  041A                     	;# 
  3111  041B                     	;# 
  3112  041C                     	;# 
  3113  041C                     	;# 
  3114  041D                     	;# 
  3115  041E                     	;# 
  3116  041F                     	;# 
  3117  048C                     	;# 
  3118  048C                     	;# 
  3119  048D                     	;# 
  3120  048E                     	;# 
  3121  048F                     	;# 
  3122  048F                     	;# 
  3123  0490                     	;# 
  3124  0491                     	;# 
  3125  0492                     	;# 
  3126  0492                     	;# 
  3127  0493                     	;# 
  3128  0494                     	;# 
  3129  0495                     	;# 
  3130  0495                     	;# 
  3131  0496                     	;# 
  3132  0497                     	;# 
  3133  0498                     	;# 
  3134  0499                     	;# 
  3135  049A                     	;# 
  3136  049B                     	;# 
  3137  049C                     	;# 
  3138  049D                     	;# 
  3139  050C                     	;# 
  3140  050C                     	;# 
  3141  050D                     	;# 
  3142  050E                     	;# 
  3143  050F                     	;# 
  3144  050F                     	;# 
  3145  0510                     	;# 
  3146  0511                     	;# 
  3147  0512                     	;# 
  3148  0512                     	;# 
  3149  0513                     	;# 
  3150  0514                     	;# 
  3151  0515                     	;# 
  3152  0515                     	;# 
  3153  0516                     	;# 
  3154  0517                     	;# 
  3155  0518                     	;# 
  3156  0519                     	;# 
  3157  051A                     	;# 
  3158  051B                     	;# 
  3159  051C                     	;# 
  3160  051D                     	;# 
  3161  058C                     	;# 
  3162  058C                     	;# 
  3163  058D                     	;# 
  3164  058E                     	;# 
  3165  058F                     	;# 
  3166  058F                     	;# 
  3167  0590                     	;# 
  3168  0591                     	;# 
  3169  0592                     	;# 
  3170  0593                     	;# 
  3171  060C                     	;# 
  3172  060D                     	;# 
  3173  060E                     	;# 
  3174  060F                     	;# 
  3175  0610                     	;# 
  3176  0611                     	;# 
  3177  0612                     	;# 
  3178  0613                     	;# 
  3179  0614                     	;# 
  3180  0616                     	;# 
  3181  0617                     	;# 
  3182  0618                     	;# 
  3183  0619                     	;# 
  3184  061A                     	;# 
  3185  061B                     	;# 
  3186  061C                     	;# 
  3187  061D                     	;# 
  3188  061E                     	;# 
  3189  068C                     	;# 
  3190  068D                     	;# 
  3191  068E                     	;# 
  3192  068F                     	;# 
  3193  0690                     	;# 
  3194  0691                     	;# 
  3195  0692                     	;# 
  3196  0693                     	;# 
  3197  0694                     	;# 
  3198  070C                     	;# 
  3199  070D                     	;# 
  3200  070E                     	;# 
  3201  070F                     	;# 
  3202  0710                     	;# 
  3203  0711                     	;# 
  3204  0712                     	;# 
  3205  0713                     	;# 
  3206  0714                     	;# 
  3207  0716                     	;# 
  3208  0717                     	;# 
  3209  0718                     	;# 
  3210  0719                     	;# 
  3211  071A                     	;# 
  3212  071B                     	;# 
  3213  071C                     	;# 
  3214  071D                     	;# 
  3215  071E                     	;# 
  3216  0796                     	;# 
  3217  0797                     	;# 
  3218  0798                     	;# 
  3219  0799                     	;# 
  3220  079A                     	;# 
  3221  079B                     	;# 
  3222  080C                     	;# 
  3223  080D                     	;# 
  3224  080E                     	;# 
  3225  080F                     	;# 
  3226  0810                     	;# 
  3227  0811                     	;# 
  3228  0812                     	;# 
  3229  0813                     	;# 
  3230  0814                     	;# 
  3231  081A                     	;# 
  3232  081B                     	;# 
  3233  081C                     	;# 
  3234  081D                     	;# 
  3235  081E                     	;# 
  3236  081F                     	;# 
  3237  088C                     	;# 
  3238  088D                     	;# 
  3239  088E                     	;# 
  3240  088F                     	;# 
  3241  0890                     	;# 
  3242  0891                     	;# 
  3243  0892                     	;# 
  3244  0893                     	;# 
  3245  0895                     	;# 
  3246  0896                     	;# 
  3247  0897                     	;# 
  3248  0898                     	;# 
  3249  0899                     	;# 
  3250  089A                     	;# 
  3251  089B                     	;# 
  3252  090C                     	;# 
  3253  090E                     	;# 
  3254  090F                     	;# 
  3255  091F                     	;# 
  3256  098F                     	;# 
  3257  098F                     	;# 
  3258  0990                     	;# 
  3259  0991                     	;# 
  3260  0992                     	;# 
  3261  0993                     	;# 
  3262  0994                     	;# 
  3263  0995                     	;# 
  3264  0996                     	;# 
  3265  0997                     	;# 
  3266  1E0F                     	;# 
  3267  1E10                     	;# 
  3268  1E11                     	;# 
  3269  1E12                     	;# 
  3270  1E13                     	;# 
  3271  1E14                     	;# 
  3272  1E15                     	;# 
  3273  1E16                     	;# 
  3274  1E17                     	;# 
  3275  1E18                     	;# 
  3276  1E19                     	;# 
  3277  1E1A                     	;# 
  3278  1E1B                     	;# 
  3279  1E1C                     	;# 
  3280  1E1D                     	;# 
  3281  1E1E                     	;# 
  3282  1E1F                     	;# 
  3283  1E20                     	;# 
  3284  1E21                     	;# 
  3285  1E22                     	;# 
  3286  1E23                     	;# 
  3287  1E24                     	;# 
  3288  1E25                     	;# 
  3289  1E26                     	;# 
  3290  1E27                     	;# 
  3291  1E28                     	;# 
  3292  1E29                     	;# 
  3293  1E2A                     	;# 
  3294  1E2B                     	;# 
  3295  1E2C                     	;# 
  3296  1E2D                     	;# 
  3297  1E2E                     	;# 
  3298  1E2F                     	;# 
  3299  1E30                     	;# 
  3300  1E31                     	;# 
  3301  1E32                     	;# 
  3302  1E33                     	;# 
  3303  1E34                     	;# 
  3304  1E35                     	;# 
  3305  1E36                     	;# 
  3306  1E37                     	;# 
  3307  1E8F                     	;# 
  3308  1E90                     	;# 
  3309  1E91                     	;# 
  3310  1E92                     	;# 
  3311  1E93                     	;# 
  3312  1E94                     	;# 
  3313  1E95                     	;# 
  3314  1E96                     	;# 
  3315  1E97                     	;# 
  3316  1E9C                     	;# 
  3317  1E9D                     	;# 
  3318  1E9E                     	;# 
  3319  1EA1                     	;# 
  3320  1EA2                     	;# 
  3321  1EA3                     	;# 
  3322  1EA4                     	;# 
  3323  1EA5                     	;# 
  3324  1EA9                     	;# 
  3325  1EAA                     	;# 
  3326  1EAB                     	;# 
  3327  1EAC                     	;# 
  3328  1EB1                     	;# 
  3329  1EB2                     	;# 
  3330  1EB3                     	;# 
  3331  1EB8                     	;# 
  3332  1EB9                     	;# 
  3333  1EBA                     	;# 
  3334  1EBB                     	;# 
  3335  1EBC                     	;# 
  3336  1EBD                     	;# 
  3337  1EBE                     	;# 
  3338  1EC3                     	;# 
  3339  1EC5                     	;# 
  3340  1EC6                     	;# 
  3341  1EC7                     	;# 
  3342  1EC8                     	;# 
  3343  1EC9                     	;# 
  3344  1ECA                     	;# 
  3345  1ECB                     	;# 
  3346  1ECC                     	;# 
  3347  1F10                     	;# 
  3348  1F11                     	;# 
  3349  1F12                     	;# 
  3350  1F13                     	;# 
  3351  1F14                     	;# 
  3352  1F15                     	;# 
  3353  1F16                     	;# 
  3354  1F17                     	;# 
  3355  1F18                     	;# 
  3356  1F19                     	;# 
  3357  1F1A                     	;# 
  3358  1F1B                     	;# 
  3359  1F1C                     	;# 
  3360  1F1D                     	;# 
  3361  1F1E                     	;# 
  3362  1F1F                     	;# 
  3363  1F20                     	;# 
  3364  1F21                     	;# 
  3365  1F22                     	;# 
  3366  1F23                     	;# 
  3367  1F24                     	;# 
  3368  1F25                     	;# 
  3369  1F26                     	;# 
  3370  1F27                     	;# 
  3371  1F28                     	;# 
  3372  1F29                     	;# 
  3373  1F2A                     	;# 
  3374  1F2B                     	;# 
  3375  1F2C                     	;# 
  3376  1F2D                     	;# 
  3377  1F2E                     	;# 
  3378  1F2F                     	;# 
  3379  1F30                     	;# 
  3380  1F31                     	;# 
  3381  1F32                     	;# 
  3382  1F38                     	;# 
  3383  1F39                     	;# 
  3384  1F3A                     	;# 
  3385  1F3B                     	;# 
  3386  1F3C                     	;# 
  3387  1F3D                     	;# 
  3388  1F3E                     	;# 
  3389  1F3F                     	;# 
  3390  1F40                     	;# 
  3391  1F41                     	;# 
  3392  1F43                     	;# 
  3393  1F44                     	;# 
  3394  1F45                     	;# 
  3395  1F46                     	;# 
  3396  1F47                     	;# 
  3397  1F48                     	;# 
  3398  1F49                     	;# 
  3399  1F4A                     	;# 
  3400  1F4B                     	;# 
  3401  1F4C                     	;# 
  3402  1F4E                     	;# 
  3403  1F4F                     	;# 
  3404  1F50                     	;# 
  3405  1F51                     	;# 
  3406  1F52                     	;# 
  3407  1F53                     	;# 
  3408  1F54                     	;# 
  3409  1F55                     	;# 
  3410  1F56                     	;# 
  3411  1F57                     	;# 
  3412  1F59                     	;# 
  3413  1F5A                     	;# 
  3414  1F5B                     	;# 
  3415  1F5C                     	;# 
  3416  1F5D                     	;# 
  3417  1F61                     	;# 
  3418  1F62                     	;# 
  3419  1F64                     	;# 
  3420  1F65                     	;# 
  3421  1F66                     	;# 
  3422  1F67                     	;# 
  3423  1F68                     	;# 
  3424  1F69                     	;# 
  3425  1F6A                     	;# 
  3426  1F6B                     	;# 
  3427  1F6C                     	;# 
  3428  1F6D                     	;# 
  3429  1FE4                     	;# 
  3430  1FE5                     	;# 
  3431  1FE6                     	;# 
  3432  1FE7                     	;# 
  3433  1FE8                     	;# 
  3434  1FE9                     	;# 
  3435  1FEA                     	;# 
  3436  1FEB                     	;# 
  3437  1FED                     	;# 
  3438  1FEE                     	;# 
  3439  1FEF                     	;# 
  3440  0000                     	;# 
  3441  0001                     	;# 
  3442  0002                     	;# 
  3443  0003                     	;# 
  3444  0004                     	;# 
  3445  0005                     	;# 
  3446  0006                     	;# 
  3447  0007                     	;# 
  3448  0008                     	;# 
  3449  0009                     	;# 
  3450  000A                     	;# 
  3451  000B                     	;# 
  3452  000C                     	;# 
  3453  000D                     	;# 
  3454  000E                     	;# 
  3455  000F                     	;# 
  3456  0010                     	;# 
  3457  0011                     	;# 
  3458  0012                     	;# 
  3459  0013                     	;# 
  3460  0014                     	;# 
  3461  0015                     	;# 
  3462  0016                     	;# 
  3463  0017                     	;# 
  3464  0018                     	;# 
  3465  0019                     	;# 
  3466  001A                     	;# 
  3467  001C                     	;# 
  3468  001C                     	;# 
  3469  001D                     	;# 
  3470  001D                     	;# 
  3471  001E                     	;# 
  3472  001F                     	;# 
  3473  008C                     	;# 
  3474  008C                     	;# 
  3475  008D                     	;# 
  3476  008E                     	;# 
  3477  008E                     	;# 
  3478  008F                     	;# 
  3479  0090                     	;# 
  3480  0090                     	;# 
  3481  0091                     	;# 
  3482  0093                     	;# 
  3483  0094                     	;# 
  3484  0095                     	;# 
  3485  0096                     	;# 
  3486  0097                     	;# 
  3487  0098                     	;# 
  3488  0099                     	;# 
  3489  009A                     	;# 
  3490  009B                     	;# 
  3491  009C                     	;# 
  3492  009D                     	;# 
  3493  009E                     	;# 
  3494  010C                     	;# 
  3495  010D                     	;# 
  3496  010E                     	;# 
  3497  010E                     	;# 
  3498  010F                     	;# 
  3499  0110                     	;# 
  3500  0110                     	;# 
  3501  0111                     	;# 
  3502  0112                     	;# 
  3503  0112                     	;# 
  3504  0113                     	;# 
  3505  0114                     	;# 
  3506  0114                     	;# 
  3507  0115                     	;# 
  3508  0116                     	;# 
  3509  0116                     	;# 
  3510  0117                     	;# 
  3511  0119                     	;# 
  3512  0119                     	;# 
  3513  0119                     	;# 
  3514  011A                     	;# 
  3515  011A                     	;# 
  3516  011A                     	;# 
  3517  011B                     	;# 
  3518  011B                     	;# 
  3519  011B                     	;# 
  3520  011B                     	;# 
  3521  011B                     	;# 
  3522  011C                     	;# 
  3523  011C                     	;# 
  3524  011C                     	;# 
  3525  011D                     	;# 
  3526  011D                     	;# 
  3527  011D                     	;# 
  3528  011E                     	;# 
  3529  011E                     	;# 
  3530  011E                     	;# 
  3531  011F                     	;# 
  3532  011F                     	;# 
  3533  011F                     	;# 
  3534  011F                     	;# 
  3535  011F                     	;# 
  3536  018C                     	;# 
  3537  018D                     	;# 
  3538  018E                     	;# 
  3539  018F                     	;# 
  3540  0190                     	;# 
  3541  0191                     	;# 
  3542  0192                     	;# 
  3543  0196                     	;# 
  3544  0197                     	;# 
  3545  0198                     	;# 
  3546  0199                     	;# 
  3547  019A                     	;# 
  3548  019B                     	;# 
  3549  019C                     	;# 
  3550  020C                     	;# 
  3551  020C                     	;# 
  3552  020D                     	;# 
  3553  020E                     	;# 
  3554  020F                     	;# 
  3555  020F                     	;# 
  3556  0210                     	;# 
  3557  0210                     	;# 
  3558  0211                     	;# 
  3559  0211                     	;# 
  3560  0212                     	;# 
  3561  0212                     	;# 
  3562  0213                     	;# 
  3563  0214                     	;# 
  3564  0215                     	;# 
  3565  0215                     	;# 
  3566  0216                     	;# 
  3567  0216                     	;# 
  3568  0217                     	;# 
  3569  0217                     	;# 
  3570  0218                     	;# 
  3571  0218                     	;# 
  3572  0219                     	;# 
  3573  021A                     	;# 
  3574  021B                     	;# 
  3575  021B                     	;# 
  3576  021C                     	;# 
  3577  021C                     	;# 
  3578  021D                     	;# 
  3579  021D                     	;# 
  3580  021E                     	;# 
  3581  021F                     	;# 
  3582  028C                     	;# 
  3583  028C                     	;# 
  3584  028D                     	;# 
  3585  028D                     	;# 
  3586  028E                     	;# 
  3587  028F                     	;# 
  3588  0290                     	;# 
  3589  0290                     	;# 
  3590  0291                     	;# 
  3591  0292                     	;# 
  3592  0292                     	;# 
  3593  0293                     	;# 
  3594  0293                     	;# 
  3595  0294                     	;# 
  3596  0295                     	;# 
  3597  0296                     	;# 
  3598  0296                     	;# 
  3599  0297                     	;# 
  3600  0298                     	;# 
  3601  0298                     	;# 
  3602  0299                     	;# 
  3603  0299                     	;# 
  3604  029A                     	;# 
  3605  029B                     	;# 
  3606  029C                     	;# 
  3607  029C                     	;# 
  3608  029D                     	;# 
  3609  030C                     	;# 
  3610  030C                     	;# 
  3611  030D                     	;# 
  3612  030E                     	;# 
  3613  030F                     	;# 
  3614  0310                     	;# 
  3615  0310                     	;# 
  3616  0311                     	;# 
  3617  0312                     	;# 
  3618  0313                     	;# 
  3619  0314                     	;# 
  3620  0314                     	;# 
  3621  0315                     	;# 
  3622  0316                     	;# 
  3623  0317                     	;# 
  3624  0318                     	;# 
  3625  0318                     	;# 
  3626  0319                     	;# 
  3627  031A                     	;# 
  3628  031B                     	;# 
  3629  031C                     	;# 
  3630  031C                     	;# 
  3631  031D                     	;# 
  3632  031E                     	;# 
  3633  031F                     	;# 
  3634  038C                     	;# 
  3635  038D                     	;# 
  3636  038E                     	;# 
  3637  0390                     	;# 
  3638  0391                     	;# 
  3639  0392                     	;# 
  3640  040C                     	;# 
  3641  040D                     	;# 
  3642  040E                     	;# 
  3643  040F                     	;# 
  3644  0410                     	;# 
  3645  0411                     	;# 
  3646  0416                     	;# 
  3647  0416                     	;# 
  3648  0417                     	;# 
  3649  0418                     	;# 
  3650  0418                     	;# 
  3651  0419                     	;# 
  3652  041A                     	;# 
  3653  041A                     	;# 
  3654  041B                     	;# 
  3655  041C                     	;# 
  3656  041C                     	;# 
  3657  041D                     	;# 
  3658  041E                     	;# 
  3659  041F                     	;# 
  3660  048C                     	;# 
  3661  048C                     	;# 
  3662  048D                     	;# 
  3663  048E                     	;# 
  3664  048F                     	;# 
  3665  048F                     	;# 
  3666  0490                     	;# 
  3667  0491                     	;# 
  3668  0492                     	;# 
  3669  0492                     	;# 
  3670  0493                     	;# 
  3671  0494                     	;# 
  3672  0495                     	;# 
  3673  0495                     	;# 
  3674  0496                     	;# 
  3675  0497                     	;# 
  3676  0498                     	;# 
  3677  0499                     	;# 
  3678  049A                     	;# 
  3679  049B                     	;# 
  3680  049C                     	;# 
  3681  049D                     	;# 
  3682  050C                     	;# 
  3683  050C                     	;# 
  3684  050D                     	;# 
  3685  050E                     	;# 
  3686  050F                     	;# 
  3687  050F                     	;# 
  3688  0510                     	;# 
  3689  0511                     	;# 
  3690  0512                     	;# 
  3691  0512                     	;# 
  3692  0513                     	;# 
  3693  0514                     	;# 
  3694  0515                     	;# 
  3695  0515                     	;# 
  3696  0516                     	;# 
  3697  0517                     	;# 
  3698  0518                     	;# 
  3699  0519                     	;# 
  3700  051A                     	;# 
  3701  051B                     	;# 
  3702  051C                     	;# 
  3703  051D                     	;# 
  3704  058C                     	;# 
  3705  058C                     	;# 
  3706  058D                     	;# 
  3707  058E                     	;# 
  3708  058F                     	;# 
  3709  058F                     	;# 
  3710  0590                     	;# 
  3711  0591                     	;# 
  3712  0592                     	;# 
  3713  0593                     	;# 
  3714  060C                     	;# 
  3715  060D                     	;# 
  3716  060E                     	;# 
  3717  060F                     	;# 
  3718  0610                     	;# 
  3719  0611                     	;# 
  3720  0612                     	;# 
  3721  0613                     	;# 
  3722  0614                     	;# 
  3723  0616                     	;# 
  3724  0617                     	;# 
  3725  0618                     	;# 
  3726  0619                     	;# 
  3727  061A                     	;# 
  3728  061B                     	;# 
  3729  061C                     	;# 
  3730  061D                     	;# 
  3731  061E                     	;# 
  3732  068C                     	;# 
  3733  068D                     	;# 
  3734  068E                     	;# 
  3735  068F                     	;# 
  3736  0690                     	;# 
  3737  0691                     	;# 
  3738  0692                     	;# 
  3739  0693                     	;# 
  3740  0694                     	;# 
  3741  070C                     	;# 
  3742  070D                     	;# 
  3743  070E                     	;# 
  3744  070F                     	;# 
  3745  0710                     	;# 
  3746  0711                     	;# 
  3747  0712                     	;# 
  3748  0713                     	;# 
  3749  0714                     	;# 
  3750  0716                     	;# 
  3751  0717                     	;# 
  3752  0718                     	;# 
  3753  0719                     	;# 
  3754  071A                     	;# 
  3755  071B                     	;# 
  3756  071C                     	;# 
  3757  071D                     	;# 
  3758  071E                     	;# 
  3759  0796                     	;# 
  3760  0797                     	;# 
  3761  0798                     	;# 
  3762  0799                     	;# 
  3763  079A                     	;# 
  3764  079B                     	;# 
  3765  080C                     	;# 
  3766  080D                     	;# 
  3767  080E                     	;# 
  3768  080F                     	;# 
  3769  0810                     	;# 
  3770  0811                     	;# 
  3771  0812                     	;# 
  3772  0813                     	;# 
  3773  0814                     	;# 
  3774  081A                     	;# 
  3775  081B                     	;# 
  3776  081C                     	;# 
  3777  081D                     	;# 
  3778  081E                     	;# 
  3779  081F                     	;# 
  3780  088C                     	;# 
  3781  088D                     	;# 
  3782  088E                     	;# 
  3783  088F                     	;# 
  3784  0890                     	;# 
  3785  0891                     	;# 
  3786  0892                     	;# 
  3787  0893                     	;# 
  3788  0895                     	;# 
  3789  0896                     	;# 
  3790  0897                     	;# 
  3791  0898                     	;# 
  3792  0899                     	;# 
  3793  089A                     	;# 
  3794  089B                     	;# 
  3795  090C                     	;# 
  3796  090E                     	;# 
  3797  090F                     	;# 
  3798  091F                     	;# 
  3799  098F                     	;# 
  3800  098F                     	;# 
  3801  0990                     	;# 
  3802  0991                     	;# 
  3803  0992                     	;# 
  3804  0993                     	;# 
  3805  0994                     	;# 
  3806  0995                     	;# 
  3807  0996                     	;# 
  3808  0997                     	;# 
  3809  1E0F                     	;# 
  3810  1E10                     	;# 
  3811  1E11                     	;# 
  3812  1E12                     	;# 
  3813  1E13                     	;# 
  3814  1E14                     	;# 
  3815  1E15                     	;# 
  3816  1E16                     	;# 
  3817  1E17                     	;# 
  3818  1E18                     	;# 
  3819  1E19                     	;# 
  3820  1E1A                     	;# 
  3821  1E1B                     	;# 
  3822  1E1C                     	;# 
  3823  1E1D                     	;# 
  3824  1E1E                     	;# 
  3825  1E1F                     	;# 
  3826  1E20                     	;# 
  3827  1E21                     	;# 
  3828  1E22                     	;# 
  3829  1E23                     	;# 
  3830  1E24                     	;# 
  3831  1E25                     	;# 
  3832  1E26                     	;# 
  3833  1E27                     	;# 
  3834  1E28                     	;# 
  3835  1E29                     	;# 
  3836  1E2A                     	;# 
  3837  1E2B                     	;# 
  3838  1E2C                     	;# 
  3839  1E2D                     	;# 
  3840  1E2E                     	;# 
  3841  1E2F                     	;# 
  3842  1E30                     	;# 
  3843  1E31                     	;# 
  3844  1E32                     	;# 
  3845  1E33                     	;# 
  3846  1E34                     	;# 
  3847  1E35                     	;# 
  3848  1E36                     	;# 
  3849  1E37                     	;# 
  3850  1E8F                     	;# 
  3851  1E90                     	;# 
  3852  1E91                     	;# 
  3853  1E92                     	;# 
  3854  1E93                     	;# 
  3855  1E94                     	;# 
  3856  1E95                     	;# 
  3857  1E96                     	;# 
  3858  1E97                     	;# 
  3859  1E9C                     	;# 
  3860  1E9D                     	;# 
  3861  1E9E                     	;# 
  3862  1EA1                     	;# 
  3863  1EA2                     	;# 
  3864  1EA3                     	;# 
  3865  1EA4                     	;# 
  3866  1EA5                     	;# 
  3867  1EA9                     	;# 
  3868  1EAA                     	;# 
  3869  1EAB                     	;# 
  3870  1EAC                     	;# 
  3871  1EB1                     	;# 
  3872  1EB2                     	;# 
  3873  1EB3                     	;# 
  3874  1EB8                     	;# 
  3875  1EB9                     	;# 
  3876  1EBA                     	;# 
  3877  1EBB                     	;# 
  3878  1EBC                     	;# 
  3879  1EBD                     	;# 
  3880  1EBE                     	;# 
  3881  1EC3                     	;# 
  3882  1EC5                     	;# 
  3883  1EC6                     	;# 
  3884  1EC7                     	;# 
  3885  1EC8                     	;# 
  3886  1EC9                     	;# 
  3887  1ECA                     	;# 
  3888  1ECB                     	;# 
  3889  1ECC                     	;# 
  3890  1F10                     	;# 
  3891  1F11                     	;# 
  3892  1F12                     	;# 
  3893  1F13                     	;# 
  3894  1F14                     	;# 
  3895  1F15                     	;# 
  3896  1F16                     	;# 
  3897  1F17                     	;# 
  3898  1F18                     	;# 
  3899  1F19                     	;# 
  3900  1F1A                     	;# 
  3901  1F1B                     	;# 
  3902  1F1C                     	;# 
  3903  1F1D                     	;# 
  3904  1F1E                     	;# 
  3905  1F1F                     	;# 
  3906  1F20                     	;# 
  3907  1F21                     	;# 
  3908  1F22                     	;# 
  3909  1F23                     	;# 
  3910  1F24                     	;# 
  3911  1F25                     	;# 
  3912  1F26                     	;# 
  3913  1F27                     	;# 
  3914  1F28                     	;# 
  3915  1F29                     	;# 
  3916  1F2A                     	;# 
  3917  1F2B                     	;# 
  3918  1F2C                     	;# 
  3919  1F2D                     	;# 
  3920  1F2E                     	;# 
  3921  1F2F                     	;# 
  3922  1F30                     	;# 
  3923  1F31                     	;# 
  3924  1F32                     	;# 
  3925  1F38                     	;# 
  3926  1F39                     	;# 
  3927  1F3A                     	;# 
  3928  1F3B                     	;# 
  3929  1F3C                     	;# 
  3930  1F3D                     	;# 
  3931  1F3E                     	;# 
  3932  1F3F                     	;# 
  3933  1F40                     	;# 
  3934  1F41                     	;# 
  3935  1F43                     	;# 
  3936  1F44                     	;# 
  3937  1F45                     	;# 
  3938  1F46                     	;# 
  3939  1F47                     	;# 
  3940  1F48                     	;# 
  3941  1F49                     	;# 
  3942  1F4A                     	;# 
  3943  1F4B                     	;# 
  3944  1F4C                     	;# 
  3945  1F4E                     	;# 
  3946  1F4F                     	;# 
  3947  1F50                     	;# 
  3948  1F51                     	;# 
  3949  1F52                     	;# 
  3950  1F53                     	;# 
  3951  1F54                     	;# 
  3952  1F55                     	;# 
  3953  1F56                     	;# 
  3954  1F57                     	;# 
  3955  1F59                     	;# 
  3956  1F5A                     	;# 
  3957  1F5B                     	;# 
  3958  1F5C                     	;# 
  3959  1F5D                     	;# 
  3960  1F61                     	;# 
  3961  1F62                     	;# 
  3962  1F64                     	;# 
  3963  1F65                     	;# 
  3964  1F66                     	;# 
  3965  1F67                     	;# 
  3966  1F68                     	;# 
  3967  1F69                     	;# 
  3968  1F6A                     	;# 
  3969  1F6B                     	;# 
  3970  1F6C                     	;# 
  3971  1F6D                     	;# 
  3972  1FE4                     	;# 
  3973  1FE5                     	;# 
  3974  1FE6                     	;# 
  3975  1FE7                     	;# 
  3976  1FE8                     	;# 
  3977  1FE9                     	;# 
  3978  1FEA                     	;# 
  3979  1FEB                     	;# 
  3980  1FED                     	;# 
  3981  1FEE                     	;# 
  3982  1FEF                     	;# 
  3983  0000                     	;# 
  3984  0001                     	;# 
  3985  0002                     	;# 
  3986  0003                     	;# 
  3987  0004                     	;# 
  3988  0005                     	;# 
  3989  0006                     	;# 
  3990  0007                     	;# 
  3991  0008                     	;# 
  3992  0009                     	;# 
  3993  000A                     	;# 
  3994  000B                     	;# 
  3995  000C                     	;# 
  3996  000D                     	;# 
  3997  000E                     	;# 
  3998  000F                     	;# 
  3999  0010                     	;# 
  4000  0011                     	;# 
  4001  0012                     	;# 
  4002  0013                     	;# 
  4003  0014                     	;# 
  4004  0015                     	;# 
  4005  0016                     	;# 
  4006  0017                     	;# 
  4007  0018                     	;# 
  4008  0019                     	;# 
  4009  001A                     	;# 
  4010  001C                     	;# 
  4011  001C                     	;# 
  4012  001D                     	;# 
  4013  001D                     	;# 
  4014  001E                     	;# 
  4015  001F                     	;# 
  4016  008C                     	;# 
  4017  008C                     	;# 
  4018  008D                     	;# 
  4019  008E                     	;# 
  4020  008E                     	;# 
  4021  008F                     	;# 
  4022  0090                     	;# 
  4023  0090                     	;# 
  4024  0091                     	;# 
  4025  0093                     	;# 
  4026  0094                     	;# 
  4027  0095                     	;# 
  4028  0096                     	;# 
  4029  0097                     	;# 
  4030  0098                     	;# 
  4031  0099                     	;# 
  4032  009A                     	;# 
  4033  009B                     	;# 
  4034  009C                     	;# 
  4035  009D                     	;# 
  4036  009E                     	;# 
  4037  010C                     	;# 
  4038  010D                     	;# 
  4039  010E                     	;# 
  4040  010E                     	;# 
  4041  010F                     	;# 
  4042  0110                     	;# 
  4043  0110                     	;# 
  4044  0111                     	;# 
  4045  0112                     	;# 
  4046  0112                     	;# 
  4047  0113                     	;# 
  4048  0114                     	;# 
  4049  0114                     	;# 
  4050  0115                     	;# 
  4051  0116                     	;# 
  4052  0116                     	;# 
  4053  0117                     	;# 
  4054  0119                     	;# 
  4055  0119                     	;# 
  4056  0119                     	;# 
  4057  011A                     	;# 
  4058  011A                     	;# 
  4059  011A                     	;# 
  4060  011B                     	;# 
  4061  011B                     	;# 
  4062  011B                     	;# 
  4063  011B                     	;# 
  4064  011B                     	;# 
  4065  011C                     	;# 
  4066  011C                     	;# 
  4067  011C                     	;# 
  4068  011D                     	;# 
  4069  011D                     	;# 
  4070  011D                     	;# 
  4071  011E                     	;# 
  4072  011E                     	;# 
  4073  011E                     	;# 
  4074  011F                     	;# 
  4075  011F                     	;# 
  4076  011F                     	;# 
  4077  011F                     	;# 
  4078  011F                     	;# 
  4079  018C                     	;# 
  4080  018D                     	;# 
  4081  018E                     	;# 
  4082  018F                     	;# 
  4083  0190                     	;# 
  4084  0191                     	;# 
  4085  0192                     	;# 
  4086  0196                     	;# 
  4087  0197                     	;# 
  4088  0198                     	;# 
  4089  0199                     	;# 
  4090  019A                     	;# 
  4091  019B                     	;# 
  4092  019C                     	;# 
  4093  020C                     	;# 
  4094  020C                     	;# 
  4095  020D                     	;# 
  4096  020E                     	;# 
  4097  020F                     	;# 
  4098  020F                     	;# 
  4099  0210                     	;# 
  4100  0210                     	;# 
  4101  0211                     	;# 
  4102  0211                     	;# 
  4103  0212                     	;# 
  4104  0212                     	;# 
  4105  0213                     	;# 
  4106  0214                     	;# 
  4107  0215                     	;# 
  4108  0215                     	;# 
  4109  0216                     	;# 
  4110  0216                     	;# 
  4111  0217                     	;# 
  4112  0217                     	;# 
  4113  0218                     	;# 
  4114  0218                     	;# 
  4115  0219                     	;# 
  4116  021A                     	;# 
  4117  021B                     	;# 
  4118  021B                     	;# 
  4119  021C                     	;# 
  4120  021C                     	;# 
  4121  021D                     	;# 
  4122  021D                     	;# 
  4123  021E                     	;# 
  4124  021F                     	;# 
  4125  028C                     	;# 
  4126  028C                     	;# 
  4127  028D                     	;# 
  4128  028D                     	;# 
  4129  028E                     	;# 
  4130  028F                     	;# 
  4131  0290                     	;# 
  4132  0290                     	;# 
  4133  0291                     	;# 
  4134  0292                     	;# 
  4135  0292                     	;# 
  4136  0293                     	;# 
  4137  0293                     	;# 
  4138  0294                     	;# 
  4139  0295                     	;# 
  4140  0296                     	;# 
  4141  0296                     	;# 
  4142  0297                     	;# 
  4143  0298                     	;# 
  4144  0298                     	;# 
  4145  0299                     	;# 
  4146  0299                     	;# 
  4147  029A                     	;# 
  4148  029B                     	;# 
  4149  029C                     	;# 
  4150  029C                     	;# 
  4151  029D                     	;# 
  4152  030C                     	;# 
  4153  030C                     	;# 
  4154  030D                     	;# 
  4155  030E                     	;# 
  4156  030F                     	;# 
  4157  0310                     	;# 
  4158  0310                     	;# 
  4159  0311                     	;# 
  4160  0312                     	;# 
  4161  0313                     	;# 
  4162  0314                     	;# 
  4163  0314                     	;# 
  4164  0315                     	;# 
  4165  0316                     	;# 
  4166  0317                     	;# 
  4167  0318                     	;# 
  4168  0318                     	;# 
  4169  0319                     	;# 
  4170  031A                     	;# 
  4171  031B                     	;# 
  4172  031C                     	;# 
  4173  031C                     	;# 
  4174  031D                     	;# 
  4175  031E                     	;# 
  4176  031F                     	;# 
  4177  038C                     	;# 
  4178  038D                     	;# 
  4179  038E                     	;# 
  4180  0390                     	;# 
  4181  0391                     	;# 
  4182  0392                     	;# 
  4183  040C                     	;# 
  4184  040D                     	;# 
  4185  040E                     	;# 
  4186  040F                     	;# 
  4187  0410                     	;# 
  4188  0411                     	;# 
  4189  0416                     	;# 
  4190  0416                     	;# 
  4191  0417                     	;# 
  4192  0418                     	;# 
  4193  0418                     	;# 
  4194  0419                     	;# 
  4195  041A                     	;# 
  4196  041A                     	;# 
  4197  041B                     	;# 
  4198  041C                     	;# 
  4199  041C                     	;# 
  4200  041D                     	;# 
  4201  041E                     	;# 
  4202  041F                     	;# 
  4203  048C                     	;# 
  4204  048C                     	;# 
  4205  048D                     	;# 
  4206  048E                     	;# 
  4207  048F                     	;# 
  4208  048F                     	;# 
  4209  0490                     	;# 
  4210  0491                     	;# 
  4211  0492                     	;# 
  4212  0492                     	;# 
  4213  0493                     	;# 
  4214  0494                     	;# 
  4215  0495                     	;# 
  4216  0495                     	;# 
  4217  0496                     	;# 
  4218  0497                     	;# 
  4219  0498                     	;# 
  4220  0499                     	;# 
  4221  049A                     	;# 
  4222  049B                     	;# 
  4223  049C                     	;# 
  4224  049D                     	;# 
  4225  050C                     	;# 
  4226  050C                     	;# 
  4227  050D                     	;# 
  4228  050E                     	;# 
  4229  050F                     	;# 
  4230  050F                     	;# 
  4231  0510                     	;# 
  4232  0511                     	;# 
  4233  0512                     	;# 
  4234  0512                     	;# 
  4235  0513                     	;# 
  4236  0514                     	;# 
  4237  0515                     	;# 
  4238  0515                     	;# 
  4239  0516                     	;# 
  4240  0517                     	;# 
  4241  0518                     	;# 
  4242  0519                     	;# 
  4243  051A                     	;# 
  4244  051B                     	;# 
  4245  051C                     	;# 
  4246  051D                     	;# 
  4247  058C                     	;# 
  4248  058C                     	;# 
  4249  058D                     	;# 
  4250  058E                     	;# 
  4251  058F                     	;# 
  4252  058F                     	;# 
  4253  0590                     	;# 
  4254  0591                     	;# 
  4255  0592                     	;# 
  4256  0593                     	;# 
  4257  060C                     	;# 
  4258  060D                     	;# 
  4259  060E                     	;# 
  4260  060F                     	;# 
  4261  0610                     	;# 
  4262  0611                     	;# 
  4263  0612                     	;# 
  4264  0613                     	;# 
  4265  0614                     	;# 
  4266  0616                     	;# 
  4267  0617                     	;# 
  4268  0618                     	;# 
  4269  0619                     	;# 
  4270  061A                     	;# 
  4271  061B                     	;# 
  4272  061C                     	;# 
  4273  061D                     	;# 
  4274  061E                     	;# 
  4275  068C                     	;# 
  4276  068D                     	;# 
  4277  068E                     	;# 
  4278  068F                     	;# 
  4279  0690                     	;# 
  4280  0691                     	;# 
  4281  0692                     	;# 
  4282  0693                     	;# 
  4283  0694                     	;# 
  4284  070C                     	;# 
  4285  070D                     	;# 
  4286  070E                     	;# 
  4287  070F                     	;# 
  4288  0710                     	;# 
  4289  0711                     	;# 
  4290  0712                     	;# 
  4291  0713                     	;# 
  4292  0714                     	;# 
  4293  0716                     	;# 
  4294  0717                     	;# 
  4295  0718                     	;# 
  4296  0719                     	;# 
  4297  071A                     	;# 
  4298  071B                     	;# 
  4299  071C                     	;# 
  4300  071D                     	;# 
  4301  071E                     	;# 
  4302  0796                     	;# 
  4303  0797                     	;# 
  4304  0798                     	;# 
  4305  0799                     	;# 
  4306  079A                     	;# 
  4307  079B                     	;# 
  4308  080C                     	;# 
  4309  080D                     	;# 
  4310  080E                     	;# 
  4311  080F                     	;# 
  4312  0810                     	;# 
  4313  0811                     	;# 
  4314  0812                     	;# 
  4315  0813                     	;# 
  4316  0814                     	;# 
  4317  081A                     	;# 
  4318  081B                     	;# 
  4319  081C                     	;# 
  4320  081D                     	;# 
  4321  081E                     	;# 
  4322  081F                     	;# 
  4323  088C                     	;# 
  4324  088D                     	;# 
  4325  088E                     	;# 
  4326  088F                     	;# 
  4327  0890                     	;# 
  4328  0891                     	;# 
  4329  0892                     	;# 
  4330  0893                     	;# 
  4331  0895                     	;# 
  4332  0896                     	;# 
  4333  0897                     	;# 
  4334  0898                     	;# 
  4335  0899                     	;# 
  4336  089A                     	;# 
  4337  089B                     	;# 
  4338  090C                     	;# 
  4339  090E                     	;# 
  4340  090F                     	;# 
  4341  091F                     	;# 
  4342  098F                     	;# 
  4343  098F                     	;# 
  4344  0990                     	;# 
  4345  0991                     	;# 
  4346  0992                     	;# 
  4347  0993                     	;# 
  4348  0994                     	;# 
  4349  0995                     	;# 
  4350  0996                     	;# 
  4351  0997                     	;# 
  4352  1E0F                     	;# 
  4353  1E10                     	;# 
  4354  1E11                     	;# 
  4355  1E12                     	;# 
  4356  1E13                     	;# 
  4357  1E14                     	;# 
  4358  1E15                     	;# 
  4359  1E16                     	;# 
  4360  1E17                     	;# 
  4361  1E18                     	;# 
  4362  1E19                     	;# 
  4363  1E1A                     	;# 
  4364  1E1B                     	;# 
  4365  1E1C                     	;# 
  4366  1E1D                     	;# 
  4367  1E1E                     	;# 
  4368  1E1F                     	;# 
  4369  1E20                     	;# 
  4370  1E21                     	;# 
  4371  1E22                     	;# 
  4372  1E23                     	;# 
  4373  1E24                     	;# 
  4374  1E25                     	;# 
  4375  1E26                     	;# 
  4376  1E27                     	;# 
  4377  1E28                     	;# 
  4378  1E29                     	;# 
  4379  1E2A                     	;# 
  4380  1E2B                     	;# 
  4381  1E2C                     	;# 
  4382  1E2D                     	;# 
  4383  1E2E                     	;# 
  4384  1E2F                     	;# 
  4385  1E30                     	;# 
  4386  1E31                     	;# 
  4387  1E32                     	;# 
  4388  1E33                     	;# 
  4389  1E34                     	;# 
  4390  1E35                     	;# 
  4391  1E36                     	;# 
  4392  1E37                     	;# 
  4393  1E8F                     	;# 
  4394  1E90                     	;# 
  4395  1E91                     	;# 
  4396  1E92                     	;# 
  4397  1E93                     	;# 
  4398  1E94                     	;# 
  4399  1E95                     	;# 
  4400  1E96                     	;# 
  4401  1E97                     	;# 
  4402  1E9C                     	;# 
  4403  1E9D                     	;# 
  4404  1E9E                     	;# 
  4405  1EA1                     	;# 
  4406  1EA2                     	;# 
  4407  1EA3                     	;# 
  4408  1EA4                     	;# 
  4409  1EA5                     	;# 
  4410  1EA9                     	;# 
  4411  1EAA                     	;# 
  4412  1EAB                     	;# 
  4413  1EAC                     	;# 
  4414  1EB1                     	;# 
  4415  1EB2                     	;# 
  4416  1EB3                     	;# 
  4417  1EB8                     	;# 
  4418  1EB9                     	;# 
  4419  1EBA                     	;# 
  4420  1EBB                     	;# 
  4421  1EBC                     	;# 
  4422  1EBD                     	;# 
  4423  1EBE                     	;# 
  4424  1EC3                     	;# 
  4425  1EC5                     	;# 
  4426  1EC6                     	;# 
  4427  1EC7                     	;# 
  4428  1EC8                     	;# 
  4429  1EC9                     	;# 
  4430  1ECA                     	;# 
  4431  1ECB                     	;# 
  4432  1ECC                     	;# 
  4433  1F10                     	;# 
  4434  1F11                     	;# 
  4435  1F12                     	;# 
  4436  1F13                     	;# 
  4437  1F14                     	;# 
  4438  1F15                     	;# 
  4439  1F16                     	;# 
  4440  1F17                     	;# 
  4441  1F18                     	;# 
  4442  1F19                     	;# 
  4443  1F1A                     	;# 
  4444  1F1B                     	;# 
  4445  1F1C                     	;# 
  4446  1F1D                     	;# 
  4447  1F1E                     	;# 
  4448  1F1F                     	;# 
  4449  1F20                     	;# 
  4450  1F21                     	;# 
  4451  1F22                     	;# 
  4452  1F23                     	;# 
  4453  1F24                     	;# 
  4454  1F25                     	;# 
  4455  1F26                     	;# 
  4456  1F27                     	;# 
  4457  1F28                     	;# 
  4458  1F29                     	;# 
  4459  1F2A                     	;# 
  4460  1F2B                     	;# 
  4461  1F2C                     	;# 
  4462  1F2D                     	;# 
  4463  1F2E                     	;# 
  4464  1F2F                     	;# 
  4465  1F30                     	;# 
  4466  1F31                     	;# 
  4467  1F32                     	;# 
  4468  1F38                     	;# 
  4469  1F39                     	;# 
  4470  1F3A                     	;# 
  4471  1F3B                     	;# 
  4472  1F3C                     	;# 
  4473  1F3D                     	;# 
  4474  1F3E                     	;# 
  4475  1F3F                     	;# 
  4476  1F40                     	;# 
  4477  1F41                     	;# 
  4478  1F43                     	;# 
  4479  1F44                     	;# 
  4480  1F45                     	;# 
  4481  1F46                     	;# 
  4482  1F47                     	;# 
  4483  1F48                     	;# 
  4484  1F49                     	;# 
  4485  1F4A                     	;# 
  4486  1F4B                     	;# 
  4487  1F4C                     	;# 
  4488  1F4E                     	;# 
  4489  1F4F                     	;# 
  4490  1F50                     	;# 
  4491  1F51                     	;# 
  4492  1F52                     	;# 
  4493  1F53                     	;# 
  4494  1F54                     	;# 
  4495  1F55                     	;# 
  4496  1F56                     	;# 
  4497  1F57                     	;# 
  4498  1F59                     	;# 
  4499  1F5A                     	;# 
  4500  1F5B                     	;# 
  4501  1F5C                     	;# 
  4502  1F5D                     	;# 
  4503  1F61                     	;# 
  4504  1F62                     	;# 
  4505  1F64                     	;# 
  4506  1F65                     	;# 
  4507  1F66                     	;# 
  4508  1F67                     	;# 
  4509  1F68                     	;# 
  4510  1F69                     	;# 
  4511  1F6A                     	;# 
  4512  1F6B                     	;# 
  4513  1F6C                     	;# 
  4514  1F6D                     	;# 
  4515  1FE4                     	;# 
  4516  1FE5                     	;# 
  4517  1FE6                     	;# 
  4518  1FE7                     	;# 
  4519  1FE8                     	;# 
  4520  1FE9                     	;# 
  4521  1FEA                     	;# 
  4522  1FEB                     	;# 
  4523  1FED                     	;# 
  4524  1FEE                     	;# 
  4525  1FEF                     	;# 
  4526  0000                     	;# 
  4527  0001                     	;# 
  4528  0002                     	;# 
  4529  0003                     	;# 
  4530  0004                     	;# 
  4531  0005                     	;# 
  4532  0006                     	;# 
  4533  0007                     	;# 
  4534  0008                     	;# 
  4535  0009                     	;# 
  4536  000A                     	;# 
  4537  000B                     	;# 
  4538  000C                     	;# 
  4539  000D                     	;# 
  4540  000E                     	;# 
  4541  000F                     	;# 
  4542  0010                     	;# 
  4543  0011                     	;# 
  4544  0012                     	;# 
  4545  0013                     	;# 
  4546  0014                     	;# 
  4547  0015                     	;# 
  4548  0016                     	;# 
  4549  0017                     	;# 
  4550  0018                     	;# 
  4551  0019                     	;# 
  4552  001A                     	;# 
  4553  001C                     	;# 
  4554  001C                     	;# 
  4555  001D                     	;# 
  4556  001D                     	;# 
  4557  001E                     	;# 
  4558  001F                     	;# 
  4559  008C                     	;# 
  4560  008C                     	;# 
  4561  008D                     	;# 
  4562  008E                     	;# 
  4563  008E                     	;# 
  4564  008F                     	;# 
  4565  0090                     	;# 
  4566  0090                     	;# 
  4567  0091                     	;# 
  4568  0093                     	;# 
  4569  0094                     	;# 
  4570  0095                     	;# 
  4571  0096                     	;# 
  4572  0097                     	;# 
  4573  0098                     	;# 
  4574  0099                     	;# 
  4575  009A                     	;# 
  4576  009B                     	;# 
  4577  009C                     	;# 
  4578  009D                     	;# 
  4579  009E                     	;# 
  4580  010C                     	;# 
  4581  010D                     	;# 
  4582  010E                     	;# 
  4583  010E                     	;# 
  4584  010F                     	;# 
  4585  0110                     	;# 
  4586  0110                     	;# 
  4587  0111                     	;# 
  4588  0112                     	;# 
  4589  0112                     	;# 
  4590  0113                     	;# 
  4591  0114                     	;# 
  4592  0114                     	;# 
  4593  0115                     	;# 
  4594  0116                     	;# 
  4595  0116                     	;# 
  4596  0117                     	;# 
  4597  0119                     	;# 
  4598  0119                     	;# 
  4599  0119                     	;# 
  4600  011A                     	;# 
  4601  011A                     	;# 
  4602  011A                     	;# 
  4603  011B                     	;# 
  4604  011B                     	;# 
  4605  011B                     	;# 
  4606  011B                     	;# 
  4607  011B                     	;# 
  4608  011C                     	;# 
  4609  011C                     	;# 
  4610  011C                     	;# 
  4611  011D                     	;# 
  4612  011D                     	;# 
  4613  011D                     	;# 
  4614  011E                     	;# 
  4615  011E                     	;# 
  4616  011E                     	;# 
  4617  011F                     	;# 
  4618  011F                     	;# 
  4619  011F                     	;# 
  4620  011F                     	;# 
  4621  011F                     	;# 
  4622  018C                     	;# 
  4623  018D                     	;# 
  4624  018E                     	;# 
  4625  018F                     	;# 
  4626  0190                     	;# 
  4627  0191                     	;# 
  4628  0192                     	;# 
  4629  0196                     	;# 
  4630  0197                     	;# 
  4631  0198                     	;# 
  4632  0199                     	;# 
  4633  019A                     	;# 
  4634  019B                     	;# 
  4635  019C                     	;# 
  4636  020C                     	;# 
  4637  020C                     	;# 
  4638  020D                     	;# 
  4639  020E                     	;# 
  4640  020F                     	;# 
  4641  020F                     	;# 
  4642  0210                     	;# 
  4643  0210                     	;# 
  4644  0211                     	;# 
  4645  0211                     	;# 
  4646  0212                     	;# 
  4647  0212                     	;# 
  4648  0213                     	;# 
  4649  0214                     	;# 
  4650  0215                     	;# 
  4651  0215                     	;# 
  4652  0216                     	;# 
  4653  0216                     	;# 
  4654  0217                     	;# 
  4655  0217                     	;# 
  4656  0218                     	;# 
  4657  0218                     	;# 
  4658  0219                     	;# 
  4659  021A                     	;# 
  4660  021B                     	;# 
  4661  021B                     	;# 
  4662  021C                     	;# 
  4663  021C                     	;# 
  4664  021D                     	;# 
  4665  021D                     	;# 
  4666  021E                     	;# 
  4667  021F                     	;# 
  4668  028C                     	;# 
  4669  028C                     	;# 
  4670  028D                     	;# 
  4671  028D                     	;# 
  4672  028E                     	;# 
  4673  028F                     	;# 
  4674  0290                     	;# 
  4675  0290                     	;# 
  4676  0291                     	;# 
  4677  0292                     	;# 
  4678  0292                     	;# 
  4679  0293                     	;# 
  4680  0293                     	;# 
  4681  0294                     	;# 
  4682  0295                     	;# 
  4683  0296                     	;# 
  4684  0296                     	;# 
  4685  0297                     	;# 
  4686  0298                     	;# 
  4687  0298                     	;# 
  4688  0299                     	;# 
  4689  0299                     	;# 
  4690  029A                     	;# 
  4691  029B                     	;# 
  4692  029C                     	;# 
  4693  029C                     	;# 
  4694  029D                     	;# 
  4695  030C                     	;# 
  4696  030C                     	;# 
  4697  030D                     	;# 
  4698  030E                     	;# 
  4699  030F                     	;# 
  4700  0310                     	;# 
  4701  0310                     	;# 
  4702  0311                     	;# 
  4703  0312                     	;# 
  4704  0313                     	;# 
  4705  0314                     	;# 
  4706  0314                     	;# 
  4707  0315                     	;# 
  4708  0316                     	;# 
  4709  0317                     	;# 
  4710  0318                     	;# 
  4711  0318                     	;# 
  4712  0319                     	;# 
  4713  031A                     	;# 
  4714  031B                     	;# 
  4715  031C                     	;# 
  4716  031C                     	;# 
  4717  031D                     	;# 
  4718  031E                     	;# 
  4719  031F                     	;# 
  4720  038C                     	;# 
  4721  038D                     	;# 
  4722  038E                     	;# 
  4723  0390                     	;# 
  4724  0391                     	;# 
  4725  0392                     	;# 
  4726  040C                     	;# 
  4727  040D                     	;# 
  4728  040E                     	;# 
  4729  040F                     	;# 
  4730  0410                     	;# 
  4731  0411                     	;# 
  4732  0416                     	;# 
  4733  0416                     	;# 
  4734  0417                     	;# 
  4735  0418                     	;# 
  4736  0418                     	;# 
  4737  0419                     	;# 
  4738  041A                     	;# 
  4739  041A                     	;# 
  4740  041B                     	;# 
  4741  041C                     	;# 
  4742  041C                     	;# 
  4743  041D                     	;# 
  4744  041E                     	;# 
  4745  041F                     	;# 
  4746  048C                     	;# 
  4747  048C                     	;# 
  4748  048D                     	;# 
  4749  048E                     	;# 
  4750  048F                     	;# 
  4751  048F                     	;# 
  4752  0490                     	;# 
  4753  0491                     	;# 
  4754  0492                     	;# 
  4755  0492                     	;# 
  4756  0493                     	;# 
  4757  0494                     	;# 
  4758  0495                     	;# 
  4759  0495                     	;# 
  4760  0496                     	;# 
  4761  0497                     	;# 
  4762  0498                     	;# 
  4763  0499                     	;# 
  4764  049A                     	;# 
  4765  049B                     	;# 
  4766  049C                     	;# 
  4767  049D                     	;# 
  4768  050C                     	;# 
  4769  050C                     	;# 
  4770  050D                     	;# 
  4771  050E                     	;# 
  4772  050F                     	;# 
  4773  050F                     	;# 
  4774  0510                     	;# 
  4775  0511                     	;# 
  4776  0512                     	;# 
  4777  0512                     	;# 
  4778  0513                     	;# 
  4779  0514                     	;# 
  4780  0515                     	;# 
  4781  0515                     	;# 
  4782  0516                     	;# 
  4783  0517                     	;# 
  4784  0518                     	;# 
  4785  0519                     	;# 
  4786  051A                     	;# 
  4787  051B                     	;# 
  4788  051C                     	;# 
  4789  051D                     	;# 
  4790  058C                     	;# 
  4791  058C                     	;# 
  4792  058D                     	;# 
  4793  058E                     	;# 
  4794  058F                     	;# 
  4795  058F                     	;# 
  4796  0590                     	;# 
  4797  0591                     	;# 
  4798  0592                     	;# 
  4799  0593                     	;# 
  4800  060C                     	;# 
  4801  060D                     	;# 
  4802  060E                     	;# 
  4803  060F                     	;# 
  4804  0610                     	;# 
  4805  0611                     	;# 
  4806  0612                     	;# 
  4807  0613                     	;# 
  4808  0614                     	;# 
  4809  0616                     	;# 
  4810  0617                     	;# 
  4811  0618                     	;# 
  4812  0619                     	;# 
  4813  061A                     	;# 
  4814  061B                     	;# 
  4815  061C                     	;# 
  4816  061D                     	;# 
  4817  061E                     	;# 
  4818  068C                     	;# 
  4819  068D                     	;# 
  4820  068E                     	;# 
  4821  068F                     	;# 
  4822  0690                     	;# 
  4823  0691                     	;# 
  4824  0692                     	;# 
  4825  0693                     	;# 
  4826  0694                     	;# 
  4827  070C                     	;# 
  4828  070D                     	;# 
  4829  070E                     	;# 
  4830  070F                     	;# 
  4831  0710                     	;# 
  4832  0711                     	;# 
  4833  0712                     	;# 
  4834  0713                     	;# 
  4835  0714                     	;# 
  4836  0716                     	;# 
  4837  0717                     	;# 
  4838  0718                     	;# 
  4839  0719                     	;# 
  4840  071A                     	;# 
  4841  071B                     	;# 
  4842  071C                     	;# 
  4843  071D                     	;# 
  4844  071E                     	;# 
  4845  0796                     	;# 
  4846  0797                     	;# 
  4847  0798                     	;# 
  4848  0799                     	;# 
  4849  079A                     	;# 
  4850  079B                     	;# 
  4851  080C                     	;# 
  4852  080D                     	;# 
  4853  080E                     	;# 
  4854  080F                     	;# 
  4855  0810                     	;# 
  4856  0811                     	;# 
  4857  0812                     	;# 
  4858  0813                     	;# 
  4859  0814                     	;# 
  4860  081A                     	;# 
  4861  081B                     	;# 
  4862  081C                     	;# 
  4863  081D                     	;# 
  4864  081E                     	;# 
  4865  081F                     	;# 
  4866  088C                     	;# 
  4867  088D                     	;# 
  4868  088E                     	;# 
  4869  088F                     	;# 
  4870  0890                     	;# 
  4871  0891                     	;# 
  4872  0892                     	;# 
  4873  0893                     	;# 
  4874  0895                     	;# 
  4875  0896                     	;# 
  4876  0897                     	;# 
  4877  0898                     	;# 
  4878  0899                     	;# 
  4879  089A                     	;# 
  4880  089B                     	;# 
  4881  090C                     	;# 
  4882  090E                     	;# 
  4883  090F                     	;# 
  4884  091F                     	;# 
  4885  098F                     	;# 
  4886  098F                     	;# 
  4887  0990                     	;# 
  4888  0991                     	;# 
  4889  0992                     	;# 
  4890  0993                     	;# 
  4891  0994                     	;# 
  4892  0995                     	;# 
  4893  0996                     	;# 
  4894  0997                     	;# 
  4895  1E0F                     	;# 
  4896  1E10                     	;# 
  4897  1E11                     	;# 
  4898  1E12                     	;# 
  4899  1E13                     	;# 
  4900  1E14                     	;# 
  4901  1E15                     	;# 
  4902  1E16                     	;# 
  4903  1E17                     	;# 
  4904  1E18                     	;# 
  4905  1E19                     	;# 
  4906  1E1A                     	;# 
  4907  1E1B                     	;# 
  4908  1E1C                     	;# 
  4909  1E1D                     	;# 
  4910  1E1E                     	;# 
  4911  1E1F                     	;# 
  4912  1E20                     	;# 
  4913  1E21                     	;# 
  4914  1E22                     	;# 
  4915  1E23                     	;# 
  4916  1E24                     	;# 
  4917  1E25                     	;# 
  4918  1E26                     	;# 
  4919  1E27                     	;# 
  4920  1E28                     	;# 
  4921  1E29                     	;# 
  4922  1E2A                     	;# 
  4923  1E2B                     	;# 
  4924  1E2C                     	;# 
  4925  1E2D                     	;# 
  4926  1E2E                     	;# 
  4927  1E2F                     	;# 
  4928  1E30                     	;# 
  4929  1E31                     	;# 
  4930  1E32                     	;# 
  4931  1E33                     	;# 
  4932  1E34                     	;# 
  4933  1E35                     	;# 
  4934  1E36                     	;# 
  4935  1E37                     	;# 
  4936  1E8F                     	;# 
  4937  1E90                     	;# 
  4938  1E91                     	;# 
  4939  1E92                     	;# 
  4940  1E93                     	;# 
  4941  1E94                     	;# 
  4942  1E95                     	;# 
  4943  1E96                     	;# 
  4944  1E97                     	;# 
  4945  1E9C                     	;# 
  4946  1E9D                     	;# 
  4947  1E9E                     	;# 
  4948  1EA1                     	;# 
  4949  1EA2                     	;# 
  4950  1EA3                     	;# 
  4951  1EA4                     	;# 
  4952  1EA5                     	;# 
  4953  1EA9                     	;# 
  4954  1EAA                     	;# 
  4955  1EAB                     	;# 
  4956  1EAC                     	;# 
  4957  1EB1                     	;# 
  4958  1EB2                     	;# 
  4959  1EB3                     	;# 
  4960  1EB8                     	;# 
  4961  1EB9                     	;# 
  4962  1EBA                     	;# 
  4963  1EBB                     	;# 
  4964  1EBC                     	;# 
  4965  1EBD                     	;# 
  4966  1EBE                     	;# 
  4967  1EC3                     	;# 
  4968  1EC5                     	;# 
  4969  1EC6                     	;# 
  4970  1EC7                     	;# 
  4971  1EC8                     	;# 
  4972  1EC9                     	;# 
  4973  1ECA                     	;# 
  4974  1ECB                     	;# 
  4975  1ECC                     	;# 
  4976  1F10                     	;# 
  4977  1F11                     	;# 
  4978  1F12                     	;# 
  4979  1F13                     	;# 
  4980  1F14                     	;# 
  4981  1F15                     	;# 
  4982  1F16                     	;# 
  4983  1F17                     	;# 
  4984  1F18                     	;# 
  4985  1F19                     	;# 
  4986  1F1A                     	;# 
  4987  1F1B                     	;# 
  4988  1F1C                     	;# 
  4989  1F1D                     	;# 
  4990  1F1E                     	;# 
  4991  1F1F                     	;# 
  4992  1F20                     	;# 
  4993  1F21                     	;# 
  4994  1F22                     	;# 
  4995  1F23                     	;# 
  4996  1F24                     	;# 
  4997  1F25                     	;# 
  4998  1F26                     	;# 
  4999  1F27                     	;# 
  5000  1F28                     	;# 
  5001  1F29                     	;# 
  5002  1F2A                     	;# 
  5003  1F2B                     	;# 
  5004  1F2C                     	;# 
  5005  1F2D                     	;# 
  5006  1F2E                     	;# 
  5007  1F2F                     	;# 
  5008  1F30                     	;# 
  5009  1F31                     	;# 
  5010  1F32                     	;# 
  5011  1F38                     	;# 
  5012  1F39                     	;# 
  5013  1F3A                     	;# 
  5014  1F3B                     	;# 
  5015  1F3C                     	;# 
  5016  1F3D                     	;# 
  5017  1F3E                     	;# 
  5018  1F3F                     	;# 
  5019  1F40                     	;# 
  5020  1F41                     	;# 
  5021  1F43                     	;# 
  5022  1F44                     	;# 
  5023  1F45                     	;# 
  5024  1F46                     	;# 
  5025  1F47                     	;# 
  5026  1F48                     	;# 
  5027  1F49                     	;# 
  5028  1F4A                     	;# 
  5029  1F4B                     	;# 
  5030  1F4C                     	;# 
  5031  1F4E                     	;# 
  5032  1F4F                     	;# 
  5033  1F50                     	;# 
  5034  1F51                     	;# 
  5035  1F52                     	;# 
  5036  1F53                     	;# 
  5037  1F54                     	;# 
  5038  1F55                     	;# 
  5039  1F56                     	;# 
  5040  1F57                     	;# 
  5041  1F59                     	;# 
  5042  1F5A                     	;# 
  5043  1F5B                     	;# 
  5044  1F5C                     	;# 
  5045  1F5D                     	;# 
  5046  1F61                     	;# 
  5047  1F62                     	;# 
  5048  1F64                     	;# 
  5049  1F65                     	;# 
  5050  1F66                     	;# 
  5051  1F67                     	;# 
  5052  1F68                     	;# 
  5053  1F69                     	;# 
  5054  1F6A                     	;# 
  5055  1F6B                     	;# 
  5056  1F6C                     	;# 
  5057  1F6D                     	;# 
  5058  1FE4                     	;# 
  5059  1FE5                     	;# 
  5060  1FE6                     	;# 
  5061  1FE7                     	;# 
  5062  1FE8                     	;# 
  5063  1FE9                     	;# 
  5064  1FEA                     	;# 
  5065  1FEB                     	;# 
  5066  1FED                     	;# 
  5067  1FEE                     	;# 
  5068  1FEF                     	;# 
  5069  0000                     	;# 
  5070  0001                     	;# 
  5071  0002                     	;# 
  5072  0003                     	;# 
  5073  0004                     	;# 
  5074  0005                     	;# 
  5075  0006                     	;# 
  5076  0007                     	;# 
  5077  0008                     	;# 
  5078  0009                     	;# 
  5079  000A                     	;# 
  5080  000B                     	;# 
  5081  000C                     	;# 
  5082  000D                     	;# 
  5083  000E                     	;# 
  5084  000F                     	;# 
  5085  0010                     	;# 
  5086  0011                     	;# 
  5087  0012                     	;# 
  5088  0013                     	;# 
  5089  0014                     	;# 
  5090  0015                     	;# 
  5091  0016                     	;# 
  5092  0017                     	;# 
  5093  0018                     	;# 
  5094  0019                     	;# 
  5095  001A                     	;# 
  5096  001C                     	;# 
  5097  001C                     	;# 
  5098  001D                     	;# 
  5099  001D                     	;# 
  5100  001E                     	;# 
  5101  001F                     	;# 
  5102  008C                     	;# 
  5103  008C                     	;# 
  5104  008D                     	;# 
  5105  008E                     	;# 
  5106  008E                     	;# 
  5107  008F                     	;# 
  5108  0090                     	;# 
  5109  0090                     	;# 
  5110  0091                     	;# 
  5111  0093                     	;# 
  5112  0094                     	;# 
  5113  0095                     	;# 
  5114  0096                     	;# 
  5115  0097                     	;# 
  5116  0098                     	;# 
  5117  0099                     	;# 
  5118  009A                     	;# 
  5119  009B                     	;# 
  5120  009C                     	;# 
  5121  009D                     	;# 
  5122  009E                     	;# 
  5123  010C                     	;# 
  5124  010D                     	;# 
  5125  010E                     	;# 
  5126  010E                     	;# 
  5127  010F                     	;# 
  5128  0110                     	;# 
  5129  0110                     	;# 
  5130  0111                     	;# 
  5131  0112                     	;# 
  5132  0112                     	;# 
  5133  0113                     	;# 
  5134  0114                     	;# 
  5135  0114                     	;# 
  5136  0115                     	;# 
  5137  0116                     	;# 
  5138  0116                     	;# 
  5139  0117                     	;# 
  5140  0119                     	;# 
  5141  0119                     	;# 
  5142  0119                     	;# 
  5143  011A                     	;# 
  5144  011A                     	;# 
  5145  011A                     	;# 
  5146  011B                     	;# 
  5147  011B                     	;# 
  5148  011B                     	;# 
  5149  011B                     	;# 
  5150  011B                     	;# 
  5151  011C                     	;# 
  5152  011C                     	;# 
  5153  011C                     	;# 
  5154  011D                     	;# 
  5155  011D                     	;# 
  5156  011D                     	;# 
  5157  011E                     	;# 
  5158  011E                     	;# 
  5159  011E                     	;# 
  5160  011F                     	;# 
  5161  011F                     	;# 
  5162  011F                     	;# 
  5163  011F                     	;# 
  5164  011F                     	;# 
  5165  018C                     	;# 
  5166  018D                     	;# 
  5167  018E                     	;# 
  5168  018F                     	;# 
  5169  0190                     	;# 
  5170  0191                     	;# 
  5171  0192                     	;# 
  5172  0196                     	;# 
  5173  0197                     	;# 
  5174  0198                     	;# 
  5175  0199                     	;# 
  5176  019A                     	;# 
  5177  019B                     	;# 
  5178  019C                     	;# 
  5179  020C                     	;# 
  5180  020C                     	;# 
  5181  020D                     	;# 
  5182  020E                     	;# 
  5183  020F                     	;# 
  5184  020F                     	;# 
  5185  0210                     	;# 
  5186  0210                     	;# 
  5187  0211                     	;# 
  5188  0211                     	;# 
  5189  0212                     	;# 
  5190  0212                     	;# 
  5191  0213                     	;# 
  5192  0214                     	;# 
  5193  0215                     	;# 
  5194  0215                     	;# 
  5195  0216                     	;# 
  5196  0216                     	;# 
  5197  0217                     	;# 
  5198  0217                     	;# 
  5199  0218                     	;# 
  5200  0218                     	;# 
  5201  0219                     	;# 
  5202  021A                     	;# 
  5203  021B                     	;# 
  5204  021B                     	;# 
  5205  021C                     	;# 
  5206  021C                     	;# 
  5207  021D                     	;# 
  5208  021D                     	;# 
  5209  021E                     	;# 
  5210  021F                     	;# 
  5211  028C                     	;# 
  5212  028C                     	;# 
  5213  028D                     	;# 
  5214  028D                     	;# 
  5215  028E                     	;# 
  5216  028F                     	;# 
  5217  0290                     	;# 
  5218  0290                     	;# 
  5219  0291                     	;# 
  5220  0292                     	;# 
  5221  0292                     	;# 
  5222  0293                     	;# 
  5223  0293                     	;# 
  5224  0294                     	;# 
  5225  0295                     	;# 
  5226  0296                     	;# 
  5227  0296                     	;# 
  5228  0297                     	;# 
  5229  0298                     	;# 
  5230  0298                     	;# 
  5231  0299                     	;# 
  5232  0299                     	;# 
  5233  029A                     	;# 
  5234  029B                     	;# 
  5235  029C                     	;# 
  5236  029C                     	;# 
  5237  029D                     	;# 
  5238  030C                     	;# 
  5239  030C                     	;# 
  5240  030D                     	;# 
  5241  030E                     	;# 
  5242  030F                     	;# 
  5243  0310                     	;# 
  5244  0310                     	;# 
  5245  0311                     	;# 
  5246  0312                     	;# 
  5247  0313                     	;# 
  5248  0314                     	;# 
  5249  0314                     	;# 
  5250  0315                     	;# 
  5251  0316                     	;# 
  5252  0317                     	;# 
  5253  0318                     	;# 
  5254  0318                     	;# 
  5255  0319                     	;# 
  5256  031A                     	;# 
  5257  031B                     	;# 
  5258  031C                     	;# 
  5259  031C                     	;# 
  5260  031D                     	;# 
  5261  031E                     	;# 
  5262  031F                     	;# 
  5263  038C                     	;# 
  5264  038D                     	;# 
  5265  038E                     	;# 
  5266  0390                     	;# 
  5267  0391                     	;# 
  5268  0392                     	;# 
  5269  040C                     	;# 
  5270  040D                     	;# 
  5271  040E                     	;# 
  5272  040F                     	;# 
  5273  0410                     	;# 
  5274  0411                     	;# 
  5275  0416                     	;# 
  5276  0416                     	;# 
  5277  0417                     	;# 
  5278  0418                     	;# 
  5279  0418                     	;# 
  5280  0419                     	;# 
  5281  041A                     	;# 
  5282  041A                     	;# 
  5283  041B                     	;# 
  5284  041C                     	;# 
  5285  041C                     	;# 
  5286  041D                     	;# 
  5287  041E                     	;# 
  5288  041F                     	;# 
  5289  048C                     	;# 
  5290  048C                     	;# 
  5291  048D                     	;# 
  5292  048E                     	;# 
  5293  048F                     	;# 
  5294  048F                     	;# 
  5295  0490                     	;# 
  5296  0491                     	;# 
  5297  0492                     	;# 
  5298  0492                     	;# 
  5299  0493                     	;# 
  5300  0494                     	;# 
  5301  0495                     	;# 
  5302  0495                     	;# 
  5303  0496                     	;# 
  5304  0497                     	;# 
  5305  0498                     	;# 
  5306  0499                     	;# 
  5307  049A                     	;# 
  5308  049B                     	;# 
  5309  049C                     	;# 
  5310  049D                     	;# 
  5311  050C                     	;# 
  5312  050C                     	;# 
  5313  050D                     	;# 
  5314  050E                     	;# 
  5315  050F                     	;# 
  5316  050F                     	;# 
  5317  0510                     	;# 
  5318  0511                     	;# 
  5319  0512                     	;# 
  5320  0512                     	;# 
  5321  0513                     	;# 
  5322  0514                     	;# 
  5323  0515                     	;# 
  5324  0515                     	;# 
  5325  0516                     	;# 
  5326  0517                     	;# 
  5327  0518                     	;# 
  5328  0519                     	;# 
  5329  051A                     	;# 
  5330  051B                     	;# 
  5331  051C                     	;# 
  5332  051D                     	;# 
  5333  058C                     	;# 
  5334  058C                     	;# 
  5335  058D                     	;# 
  5336  058E                     	;# 
  5337  058F                     	;# 
  5338  058F                     	;# 
  5339  0590                     	;# 
  5340  0591                     	;# 
  5341  0592                     	;# 
  5342  0593                     	;# 
  5343  060C                     	;# 
  5344  060D                     	;# 
  5345  060E                     	;# 
  5346  060F                     	;# 
  5347  0610                     	;# 
  5348  0611                     	;# 
  5349  0612                     	;# 
  5350  0613                     	;# 
  5351  0614                     	;# 
  5352  0616                     	;# 
  5353  0617                     	;# 
  5354  0618                     	;# 
  5355  0619                     	;# 
  5356  061A                     	;# 
  5357  061B                     	;# 
  5358  061C                     	;# 
  5359  061D                     	;# 
  5360  061E                     	;# 
  5361  068C                     	;# 
  5362  068D                     	;# 
  5363  068E                     	;# 
  5364  068F                     	;# 
  5365  0690                     	;# 
  5366  0691                     	;# 
  5367  0692                     	;# 
  5368  0693                     	;# 
  5369  0694                     	;# 
  5370  070C                     	;# 
  5371  070D                     	;# 
  5372  070E                     	;# 
  5373  070F                     	;# 
  5374  0710                     	;# 
  5375  0711                     	;# 
  5376  0712                     	;# 
  5377  0713                     	;# 
  5378  0714                     	;# 
  5379  0716                     	;# 
  5380  0717                     	;# 
  5381  0718                     	;# 
  5382  0719                     	;# 
  5383  071A                     	;# 
  5384  071B                     	;# 
  5385  071C                     	;# 
  5386  071D                     	;# 
  5387  071E                     	;# 
  5388  0796                     	;# 
  5389  0797                     	;# 
  5390  0798                     	;# 
  5391  0799                     	;# 
  5392  079A                     	;# 
  5393  079B                     	;# 
  5394  080C                     	;# 
  5395  080D                     	;# 
  5396  080E                     	;# 
  5397  080F                     	;# 
  5398  0810                     	;# 
  5399  0811                     	;# 
  5400  0812                     	;# 
  5401  0813                     	;# 
  5402  0814                     	;# 
  5403  081A                     	;# 
  5404  081B                     	;# 
  5405  081C                     	;# 
  5406  081D                     	;# 
  5407  081E                     	;# 
  5408  081F                     	;# 
  5409  088C                     	;# 
  5410  088D                     	;# 
  5411  088E                     	;# 
  5412  088F                     	;# 
  5413  0890                     	;# 
  5414  0891                     	;# 
  5415  0892                     	;# 
  5416  0893                     	;# 
  5417  0895                     	;# 
  5418  0896                     	;# 
  5419  0897                     	;# 
  5420  0898                     	;# 
  5421  0899                     	;# 
  5422  089A                     	;# 
  5423  089B                     	;# 
  5424  090C                     	;# 
  5425  090E                     	;# 
  5426  090F                     	;# 
  5427  091F                     	;# 
  5428  098F                     	;# 
  5429  098F                     	;# 
  5430  0990                     	;# 
  5431  0991                     	;# 
  5432  0992                     	;# 
  5433  0993                     	;# 
  5434  0994                     	;# 
  5435  0995                     	;# 
  5436  0996                     	;# 
  5437  0997                     	;# 
  5438  1E0F                     	;# 
  5439  1E10                     	;# 
  5440  1E11                     	;# 
  5441  1E12                     	;# 
  5442  1E13                     	;# 
  5443  1E14                     	;# 
  5444  1E15                     	;# 
  5445  1E16                     	;# 
  5446  1E17                     	;# 
  5447  1E18                     	;# 
  5448  1E19                     	;# 
  5449  1E1A                     	;# 
  5450  1E1B                     	;# 
  5451  1E1C                     	;# 
  5452  1E1D                     	;# 
  5453  1E1E                     	;# 
  5454  1E1F                     	;# 
  5455  1E20                     	;# 
  5456  1E21                     	;# 
  5457  1E22                     	;# 
  5458  1E23                     	;# 
  5459  1E24                     	;# 
  5460  1E25                     	;# 
  5461  1E26                     	;# 
  5462  1E27                     	;# 
  5463  1E28                     	;# 
  5464  1E29                     	;# 
  5465  1E2A                     	;# 
  5466  1E2B                     	;# 
  5467  1E2C                     	;# 
  5468  1E2D                     	;# 
  5469  1E2E                     	;# 
  5470  1E2F                     	;# 
  5471  1E30                     	;# 
  5472  1E31                     	;# 
  5473  1E32                     	;# 
  5474  1E33                     	;# 
  5475  1E34                     	;# 
  5476  1E35                     	;# 
  5477  1E36                     	;# 
  5478  1E37                     	;# 
  5479  1E8F                     	;# 
  5480  1E90                     	;# 
  5481  1E91                     	;# 
  5482  1E92                     	;# 
  5483  1E93                     	;# 
  5484  1E94                     	;# 
  5485  1E95                     	;# 
  5486  1E96                     	;# 
  5487  1E97                     	;# 
  5488  1E9C                     	;# 
  5489  1E9D                     	;# 
  5490  1E9E                     	;# 
  5491  1EA1                     	;# 
  5492  1EA2                     	;# 
  5493  1EA3                     	;# 
  5494  1EA4                     	;# 
  5495  1EA5                     	;# 
  5496  1EA9                     	;# 
  5497  1EAA                     	;# 
  5498  1EAB                     	;# 
  5499  1EAC                     	;# 
  5500  1EB1                     	;# 
  5501  1EB2                     	;# 
  5502  1EB3                     	;# 
  5503  1EB8                     	;# 
  5504  1EB9                     	;# 
  5505  1EBA                     	;# 
  5506  1EBB                     	;# 
  5507  1EBC                     	;# 
  5508  1EBD                     	;# 
  5509  1EBE                     	;# 
  5510  1EC3                     	;# 
  5511  1EC5                     	;# 
  5512  1EC6                     	;# 
  5513  1EC7                     	;# 
  5514  1EC8                     	;# 
  5515  1EC9                     	;# 
  5516  1ECA                     	;# 
  5517  1ECB                     	;# 
  5518  1ECC                     	;# 
  5519  1F10                     	;# 
  5520  1F11                     	;# 
  5521  1F12                     	;# 
  5522  1F13                     	;# 
  5523  1F14                     	;# 
  5524  1F15                     	;# 
  5525  1F16                     	;# 
  5526  1F17                     	;# 
  5527  1F18                     	;# 
  5528  1F19                     	;# 
  5529  1F1A                     	;# 
  5530  1F1B                     	;# 
  5531  1F1C                     	;# 
  5532  1F1D                     	;# 
  5533  1F1E                     	;# 
  5534  1F1F                     	;# 
  5535  1F20                     	;# 
  5536  1F21                     	;# 
  5537  1F22                     	;# 
  5538  1F23                     	;# 
  5539  1F24                     	;# 
  5540  1F25                     	;# 
  5541  1F26                     	;# 
  5542  1F27                     	;# 
  5543  1F28                     	;# 
  5544  1F29                     	;# 
  5545  1F2A                     	;# 
  5546  1F2B                     	;# 
  5547  1F2C                     	;# 
  5548  1F2D                     	;# 
  5549  1F2E                     	;# 
  5550  1F2F                     	;# 
  5551  1F30                     	;# 
  5552  1F31                     	;# 
  5553  1F32                     	;# 
  5554  1F38                     	;# 
  5555  1F39                     	;# 
  5556  1F3A                     	;# 
  5557  1F3B                     	;# 
  5558  1F3C                     	;# 
  5559  1F3D                     	;# 
  5560  1F3E                     	;# 
  5561  1F3F                     	;# 
  5562  1F40                     	;# 
  5563  1F41                     	;# 
  5564  1F43                     	;# 
  5565  1F44                     	;# 
  5566  1F45                     	;# 
  5567  1F46                     	;# 
  5568  1F47                     	;# 
  5569  1F48                     	;# 
  5570  1F49                     	;# 
  5571  1F4A                     	;# 
  5572  1F4B                     	;# 
  5573  1F4C                     	;# 
  5574  1F4E                     	;# 
  5575  1F4F                     	;# 
  5576  1F50                     	;# 
  5577  1F51                     	;# 
  5578  1F52                     	;# 
  5579  1F53                     	;# 
  5580  1F54                     	;# 
  5581  1F55                     	;# 
  5582  1F56                     	;# 
  5583  1F57                     	;# 
  5584  1F59                     	;# 
  5585  1F5A                     	;# 
  5586  1F5B                     	;# 
  5587  1F5C                     	;# 
  5588  1F5D                     	;# 
  5589  1F61                     	;# 
  5590  1F62                     	;# 
  5591  1F64                     	;# 
  5592  1F65                     	;# 
  5593  1F66                     	;# 
  5594  1F67                     	;# 
  5595  1F68                     	;# 
  5596  1F69                     	;# 
  5597  1F6A                     	;# 
  5598  1F6B                     	;# 
  5599  1F6C                     	;# 
  5600  1F6D                     	;# 
  5601  1FE4                     	;# 
  5602  1FE5                     	;# 
  5603  1FE6                     	;# 
  5604  1FE7                     	;# 
  5605  1FE8                     	;# 
  5606  1FE9                     	;# 
  5607  1FEA                     	;# 
  5608  1FEB                     	;# 
  5609  1FED                     	;# 
  5610  1FEE                     	;# 
  5611  1FEF                     	;# 
  5612  0000                     	;# 
  5613  0001                     	;# 
  5614  0002                     	;# 
  5615  0003                     	;# 
  5616  0004                     	;# 
  5617  0005                     	;# 
  5618  0006                     	;# 
  5619  0007                     	;# 
  5620  0008                     	;# 
  5621  0009                     	;# 
  5622  000A                     	;# 
  5623  000B                     	;# 
  5624  000C                     	;# 
  5625  000D                     	;# 
  5626  000E                     	;# 
  5627  000F                     	;# 
  5628  0010                     	;# 
  5629  0011                     	;# 
  5630  0012                     	;# 
  5631  0013                     	;# 
  5632  0014                     	;# 
  5633  0015                     	;# 
  5634  0016                     	;# 
  5635  0017                     	;# 
  5636  0018                     	;# 
  5637  0019                     	;# 
  5638  001A                     	;# 
  5639  001C                     	;# 
  5640  001C                     	;# 
  5641  001D                     	;# 
  5642  001D                     	;# 
  5643  001E                     	;# 
  5644  001F                     	;# 
  5645  008C                     	;# 
  5646  008C                     	;# 
  5647  008D                     	;# 
  5648  008E                     	;# 
  5649  008E                     	;# 
  5650  008F                     	;# 
  5651  0090                     	;# 
  5652  0090                     	;# 
  5653  0091                     	;# 
  5654  0093                     	;# 
  5655  0094                     	;# 
  5656  0095                     	;# 
  5657  0096                     	;# 
  5658  0097                     	;# 
  5659  0098                     	;# 
  5660  0099                     	;# 
  5661  009A                     	;# 
  5662  009B                     	;# 
  5663  009C                     	;# 
  5664  009D                     	;# 
  5665  009E                     	;# 
  5666  010C                     	;# 
  5667  010D                     	;# 
  5668  010E                     	;# 
  5669  010E                     	;# 
  5670  010F                     	;# 
  5671  0110                     	;# 
  5672  0110                     	;# 
  5673  0111                     	;# 
  5674  0112                     	;# 
  5675  0112                     	;# 
  5676  0113                     	;# 
  5677  0114                     	;# 
  5678  0114                     	;# 
  5679  0115                     	;# 
  5680  0116                     	;# 
  5681  0116                     	;# 
  5682  0117                     	;# 
  5683  0119                     	;# 
  5684  0119                     	;# 
  5685  0119                     	;# 
  5686  011A                     	;# 
  5687  011A                     	;# 
  5688  011A                     	;# 
  5689  011B                     	;# 
  5690  011B                     	;# 
  5691  011B                     	;# 
  5692  011B                     	;# 
  5693  011B                     	;# 
  5694  011C                     	;# 
  5695  011C                     	;# 
  5696  011C                     	;# 
  5697  011D                     	;# 
  5698  011D                     	;# 
  5699  011D                     	;# 
  5700  011E                     	;# 
  5701  011E                     	;# 
  5702  011E                     	;# 
  5703  011F                     	;# 
  5704  011F                     	;# 
  5705  011F                     	;# 
  5706  011F                     	;# 
  5707  011F                     	;# 
  5708  018C                     	;# 
  5709  018D                     	;# 
  5710  018E                     	;# 
  5711  018F                     	;# 
  5712  0190                     	;# 
  5713  0191                     	;# 
  5714  0192                     	;# 
  5715  0196                     	;# 
  5716  0197                     	;# 
  5717  0198                     	;# 
  5718  0199                     	;# 
  5719  019A                     	;# 
  5720  019B                     	;# 
  5721  019C                     	;# 
  5722  020C                     	;# 
  5723  020C                     	;# 
  5724  020D                     	;# 
  5725  020E                     	;# 
  5726  020F                     	;# 
  5727  020F                     	;# 
  5728  0210                     	;# 
  5729  0210                     	;# 
  5730  0211                     	;# 
  5731  0211                     	;# 
  5732  0212                     	;# 
  5733  0212                     	;# 
  5734  0213                     	;# 
  5735  0214                     	;# 
  5736  0215                     	;# 
  5737  0215                     	;# 
  5738  0216                     	;# 
  5739  0216                     	;# 
  5740  0217                     	;# 
  5741  0217                     	;# 
  5742  0218                     	;# 
  5743  0218                     	;# 
  5744  0219                     	;# 
  5745  021A                     	;# 
  5746  021B                     	;# 
  5747  021B                     	;# 
  5748  021C                     	;# 
  5749  021C                     	;# 
  5750  021D                     	;# 
  5751  021D                     	;# 
  5752  021E                     	;# 
  5753  021F                     	;# 
  5754  028C                     	;# 
  5755  028C                     	;# 
  5756  028D                     	;# 
  5757  028D                     	;# 
  5758  028E                     	;# 
  5759  028F                     	;# 
  5760  0290                     	;# 
  5761  0290                     	;# 
  5762  0291                     	;# 
  5763  0292                     	;# 
  5764  0292                     	;# 
  5765  0293                     	;# 
  5766  0293                     	;# 
  5767  0294                     	;# 
  5768  0295                     	;# 
  5769  0296                     	;# 
  5770  0296                     	;# 
  5771  0297                     	;# 
  5772  0298                     	;# 
  5773  0298                     	;# 
  5774  0299                     	;# 
  5775  0299                     	;# 
  5776  029A                     	;# 
  5777  029B                     	;# 
  5778  029C                     	;# 
  5779  029C                     	;# 
  5780  029D                     	;# 
  5781  030C                     	;# 
  5782  030C                     	;# 
  5783  030D                     	;# 
  5784  030E                     	;# 
  5785  030F                     	;# 
  5786  0310                     	;# 
  5787  0310                     	;# 
  5788  0311                     	;# 
  5789  0312                     	;# 
  5790  0313                     	;# 
  5791  0314                     	;# 
  5792  0314                     	;# 
  5793  0315                     	;# 
  5794  0316                     	;# 
  5795  0317                     	;# 
  5796  0318                     	;# 
  5797  0318                     	;# 
  5798  0319                     	;# 
  5799  031A                     	;# 
  5800  031B                     	;# 
  5801  031C                     	;# 
  5802  031C                     	;# 
  5803  031D                     	;# 
  5804  031E                     	;# 
  5805  031F                     	;# 
  5806  038C                     	;# 
  5807  038D                     	;# 
  5808  038E                     	;# 
  5809  0390                     	;# 
  5810  0391                     	;# 
  5811  0392                     	;# 
  5812  040C                     	;# 
  5813  040D                     	;# 
  5814  040E                     	;# 
  5815  040F                     	;# 
  5816  0410                     	;# 
  5817  0411                     	;# 
  5818  0416                     	;# 
  5819  0416                     	;# 
  5820  0417                     	;# 
  5821  0418                     	;# 
  5822  0418                     	;# 
  5823  0419                     	;# 
  5824  041A                     	;# 
  5825  041A                     	;# 
  5826  041B                     	;# 
  5827  041C                     	;# 
  5828  041C                     	;# 
  5829  041D                     	;# 
  5830  041E                     	;# 
  5831  041F                     	;# 
  5832  048C                     	;# 
  5833  048C                     	;# 
  5834  048D                     	;# 
  5835  048E                     	;# 
  5836  048F                     	;# 
  5837  048F                     	;# 
  5838  0490                     	;# 
  5839  0491                     	;# 
  5840  0492                     	;# 
  5841  0492                     	;# 
  5842  0493                     	;# 
  5843  0494                     	;# 
  5844  0495                     	;# 
  5845  0495                     	;# 
  5846  0496                     	;# 
  5847  0497                     	;# 
  5848  0498                     	;# 
  5849  0499                     	;# 
  5850  049A                     	;# 
  5851  049B                     	;# 
  5852  049C                     	;# 
  5853  049D                     	;# 
  5854  050C                     	;# 
  5855  050C                     	;# 
  5856  050D                     	;# 
  5857  050E                     	;# 
  5858  050F                     	;# 
  5859  050F                     	;# 
  5860  0510                     	;# 
  5861  0511                     	;# 
  5862  0512                     	;# 
  5863  0512                     	;# 
  5864  0513                     	;# 
  5865  0514                     	;# 
  5866  0515                     	;# 
  5867  0515                     	;# 
  5868  0516                     	;# 
  5869  0517                     	;# 
  5870  0518                     	;# 
  5871  0519                     	;# 
  5872  051A                     	;# 
  5873  051B                     	;# 
  5874  051C                     	;# 
  5875  051D                     	;# 
  5876  058C                     	;# 
  5877  058C                     	;# 
  5878  058D                     	;# 
  5879  058E                     	;# 
  5880  058F                     	;# 
  5881  058F                     	;# 
  5882  0590                     	;# 
  5883  0591                     	;# 
  5884  0592                     	;# 
  5885  0593                     	;# 
  5886  060C                     	;# 
  5887  060D                     	;# 
  5888  060E                     	;# 
  5889  060F                     	;# 
  5890  0610                     	;# 
  5891  0611                     	;# 
  5892  0612                     	;# 
  5893  0613                     	;# 
  5894  0614                     	;# 
  5895  0616                     	;# 
  5896  0617                     	;# 
  5897  0618                     	;# 
  5898  0619                     	;# 
  5899  061A                     	;# 
  5900  061B                     	;# 
  5901  061C                     	;# 
  5902  061D                     	;# 
  5903  061E                     	;# 
  5904  068C                     	;# 
  5905  068D                     	;# 
  5906  068E                     	;# 
  5907  068F                     	;# 
  5908  0690                     	;# 
  5909  0691                     	;# 
  5910  0692                     	;# 
  5911  0693                     	;# 
  5912  0694                     	;# 
  5913  070C                     	;# 
  5914  070D                     	;# 
  5915  070E                     	;# 
  5916  070F                     	;# 
  5917  0710                     	;# 
  5918  0711                     	;# 
  5919  0712                     	;# 
  5920  0713                     	;# 
  5921  0714                     	;# 
  5922  0716                     	;# 
  5923  0717                     	;# 
  5924  0718                     	;# 
  5925  0719                     	;# 
  5926  071A                     	;# 
  5927  071B                     	;# 
  5928  071C                     	;# 
  5929  071D                     	;# 
  5930  071E                     	;# 
  5931  0796                     	;# 
  5932  0797                     	;# 
  5933  0798                     	;# 
  5934  0799                     	;# 
  5935  079A                     	;# 
  5936  079B                     	;# 
  5937  080C                     	;# 
  5938  080D                     	;# 
  5939  080E                     	;# 
  5940  080F                     	;# 
  5941  0810                     	;# 
  5942  0811                     	;# 
  5943  0812                     	;# 
  5944  0813                     	;# 
  5945  0814                     	;# 
  5946  081A                     	;# 
  5947  081B                     	;# 
  5948  081C                     	;# 
  5949  081D                     	;# 
  5950  081E                     	;# 
  5951  081F                     	;# 
  5952  088C                     	;# 
  5953  088D                     	;# 
  5954  088E                     	;# 
  5955  088F                     	;# 
  5956  0890                     	;# 
  5957  0891                     	;# 
  5958  0892                     	;# 
  5959  0893                     	;# 
  5960  0895                     	;# 
  5961  0896                     	;# 
  5962  0897                     	;# 
  5963  0898                     	;# 
  5964  0899                     	;# 
  5965  089A                     	;# 
  5966  089B                     	;# 
  5967  090C                     	;# 
  5968  090E                     	;# 
  5969  090F                     	;# 
  5970  091F                     	;# 
  5971  098F                     	;# 
  5972  098F                     	;# 
  5973  0990                     	;# 
  5974  0991                     	;# 
  5975  0992                     	;# 
  5976  0993                     	;# 
  5977  0994                     	;# 
  5978  0995                     	;# 
  5979  0996                     	;# 
  5980  0997                     	;# 
  5981  1E0F                     	;# 
  5982  1E10                     	;# 
  5983  1E11                     	;# 
  5984  1E12                     	;# 
  5985  1E13                     	;# 
  5986  1E14                     	;# 
  5987  1E15                     	;# 
  5988  1E16                     	;# 
  5989  1E17                     	;# 
  5990  1E18                     	;# 
  5991  1E19                     	;# 
  5992  1E1A                     	;# 
  5993  1E1B                     	;# 
  5994  1E1C                     	;# 
  5995  1E1D                     	;# 
  5996  1E1E                     	;# 
  5997  1E1F                     	;# 
  5998  1E20                     	;# 
  5999  1E21                     	;# 
  6000  1E22                     	;# 
  6001  1E23                     	;# 
  6002  1E24                     	;# 
  6003  1E25                     	;# 
  6004  1E26                     	;# 
  6005  1E27                     	;# 
  6006  1E28                     	;# 
  6007  1E29                     	;# 
  6008  1E2A                     	;# 
  6009  1E2B                     	;# 
  6010  1E2C                     	;# 
  6011  1E2D                     	;# 
  6012  1E2E                     	;# 
  6013  1E2F                     	;# 
  6014  1E30                     	;# 
  6015  1E31                     	;# 
  6016  1E32                     	;# 
  6017  1E33                     	;# 
  6018  1E34                     	;# 
  6019  1E35                     	;# 
  6020  1E36                     	;# 
  6021  1E37                     	;# 
  6022  1E8F                     	;# 
  6023  1E90                     	;# 
  6024  1E91                     	;# 
  6025  1E92                     	;# 
  6026  1E93                     	;# 
  6027  1E94                     	;# 
  6028  1E95                     	;# 
  6029  1E96                     	;# 
  6030  1E97                     	;# 
  6031  1E9C                     	;# 
  6032  1E9D                     	;# 
  6033  1E9E                     	;# 
  6034  1EA1                     	;# 
  6035  1EA2                     	;# 
  6036  1EA3                     	;# 
  6037  1EA4                     	;# 
  6038  1EA5                     	;# 
  6039  1EA9                     	;# 
  6040  1EAA                     	;# 
  6041  1EAB                     	;# 
  6042  1EAC                     	;# 
  6043  1EB1                     	;# 
  6044  1EB2                     	;# 
  6045  1EB3                     	;# 
  6046  1EB8                     	;# 
  6047  1EB9                     	;# 
  6048  1EBA                     	;# 
  6049  1EBB                     	;# 
  6050  1EBC                     	;# 
  6051  1EBD                     	;# 
  6052  1EBE                     	;# 
  6053  1EC3                     	;# 
  6054  1EC5                     	;# 
  6055  1EC6                     	;# 
  6056  1EC7                     	;# 
  6057  1EC8                     	;# 
  6058  1EC9                     	;# 
  6059  1ECA                     	;# 
  6060  1ECB                     	;# 
  6061  1ECC                     	;# 
  6062  1F10                     	;# 
  6063  1F11                     	;# 
  6064  1F12                     	;# 
  6065  1F13                     	;# 
  6066  1F14                     	;# 
  6067  1F15                     	;# 
  6068  1F16                     	;# 
  6069  1F17                     	;# 
  6070  1F18                     	;# 
  6071  1F19                     	;# 
  6072  1F1A                     	;# 
  6073  1F1B                     	;# 
  6074  1F1C                     	;# 
  6075  1F1D                     	;# 
  6076  1F1E                     	;# 
  6077  1F1F                     	;# 
  6078  1F20                     	;# 
  6079  1F21                     	;# 
  6080  1F22                     	;# 
  6081  1F23                     	;# 
  6082  1F24                     	;# 
  6083  1F25                     	;# 
  6084  1F26                     	;# 
  6085  1F27                     	;# 
  6086  1F28                     	;# 
  6087  1F29                     	;# 
  6088  1F2A                     	;# 
  6089  1F2B                     	;# 
  6090  1F2C                     	;# 
  6091  1F2D                     	;# 
  6092  1F2E                     	;# 
  6093  1F2F                     	;# 
  6094  1F30                     	;# 
  6095  1F31                     	;# 
  6096  1F32                     	;# 
  6097  1F38                     	;# 
  6098  1F39                     	;# 
  6099  1F3A                     	;# 
  6100  1F3B                     	;# 
  6101  1F3C                     	;# 
  6102  1F3D                     	;# 
  6103  1F3E                     	;# 
  6104  1F3F                     	;# 
  6105  1F40                     	;# 
  6106  1F41                     	;# 
  6107  1F43                     	;# 
  6108  1F44                     	;# 
  6109  1F45                     	;# 
  6110  1F46                     	;# 
  6111  1F47                     	;# 
  6112  1F48                     	;# 
  6113  1F49                     	;# 
  6114  1F4A                     	;# 
  6115  1F4B                     	;# 
  6116  1F4C                     	;# 
  6117  1F4E                     	;# 
  6118  1F4F                     	;# 
  6119  1F50                     	;# 
  6120  1F51                     	;# 
  6121  1F52                     	;# 
  6122  1F53                     	;# 
  6123  1F54                     	;# 
  6124  1F55                     	;# 
  6125  1F56                     	;# 
  6126  1F57                     	;# 
  6127  1F59                     	;# 
  6128  1F5A                     	;# 
  6129  1F5B                     	;# 
  6130  1F5C                     	;# 
  6131  1F5D                     	;# 
  6132  1F61                     	;# 
  6133  1F62                     	;# 
  6134  1F64                     	;# 
  6135  1F65                     	;# 
  6136  1F66                     	;# 
  6137  1F67                     	;# 
  6138  1F68                     	;# 
  6139  1F69                     	;# 
  6140  1F6A                     	;# 
  6141  1F6B                     	;# 
  6142  1F6C                     	;# 
  6143  1F6D                     	;# 
  6144  1FE4                     	;# 
  6145  1FE5                     	;# 
  6146  1FE6                     	;# 
  6147  1FE7                     	;# 
  6148  1FE8                     	;# 
  6149  1FE9                     	;# 
  6150  1FEA                     	;# 
  6151  1FEB                     	;# 
  6152  1FED                     	;# 
  6153  1FEE                     	;# 
  6154  1FEF                     	;# 
  6155  0000                     	;# 
  6156  0001                     	;# 
  6157  0002                     	;# 
  6158  0003                     	;# 
  6159  0004                     	;# 
  6160  0005                     	;# 
  6161  0006                     	;# 
  6162  0007                     	;# 
  6163  0008                     	;# 
  6164  0009                     	;# 
  6165  000A                     	;# 
  6166  000B                     	;# 
  6167  000C                     	;# 
  6168  000D                     	;# 
  6169  000E                     	;# 
  6170  000F                     	;# 
  6171  0010                     	;# 
  6172  0011                     	;# 
  6173  0012                     	;# 
  6174  0013                     	;# 
  6175  0014                     	;# 
  6176  0015                     	;# 
  6177  0016                     	;# 
  6178  0017                     	;# 
  6179  0018                     	;# 
  6180  0019                     	;# 
  6181  001A                     	;# 
  6182  001C                     	;# 
  6183  001C                     	;# 
  6184  001D                     	;# 
  6185  001D                     	;# 
  6186  001E                     	;# 
  6187  001F                     	;# 
  6188  008C                     	;# 
  6189  008C                     	;# 
  6190  008D                     	;# 
  6191  008E                     	;# 
  6192  008E                     	;# 
  6193  008F                     	;# 
  6194  0090                     	;# 
  6195  0090                     	;# 
  6196  0091                     	;# 
  6197  0093                     	;# 
  6198  0094                     	;# 
  6199  0095                     	;# 
  6200  0096                     	;# 
  6201  0097                     	;# 
  6202  0098                     	;# 
  6203  0099                     	;# 
  6204  009A                     	;# 
  6205  009B                     	;# 
  6206  009C                     	;# 
  6207  009D                     	;# 
  6208  009E                     	;# 
  6209  010C                     	;# 
  6210  010D                     	;# 
  6211  010E                     	;# 
  6212  010E                     	;# 
  6213  010F                     	;# 
  6214  0110                     	;# 
  6215  0110                     	;# 
  6216  0111                     	;# 
  6217  0112                     	;# 
  6218  0112                     	;# 
  6219  0113                     	;# 
  6220  0114                     	;# 
  6221  0114                     	;# 
  6222  0115                     	;# 
  6223  0116                     	;# 
  6224  0116                     	;# 
  6225  0117                     	;# 
  6226  0119                     	;# 
  6227  0119                     	;# 
  6228  0119                     	;# 
  6229  011A                     	;# 
  6230  011A                     	;# 
  6231  011A                     	;# 
  6232  011B                     	;# 
  6233  011B                     	;# 
  6234  011B                     	;# 
  6235  011B                     	;# 
  6236  011B                     	;# 
  6237  011C                     	;# 
  6238  011C                     	;# 
  6239  011C                     	;# 
  6240  011D                     	;# 
  6241  011D                     	;# 
  6242  011D                     	;# 
  6243  011E                     	;# 
  6244  011E                     	;# 
  6245  011E                     	;# 
  6246  011F                     	;# 
  6247  011F                     	;# 
  6248  011F                     	;# 
  6249  011F                     	;# 
  6250  011F                     	;# 
  6251  018C                     	;# 
  6252  018D                     	;# 
  6253  018E                     	;# 
  6254  018F                     	;# 
  6255  0190                     	;# 
  6256  0191                     	;# 
  6257  0192                     	;# 
  6258  0196                     	;# 
  6259  0197                     	;# 
  6260  0198                     	;# 
  6261  0199                     	;# 
  6262  019A                     	;# 
  6263  019B                     	;# 
  6264  019C                     	;# 
  6265  020C                     	;# 
  6266  020C                     	;# 
  6267  020D                     	;# 
  6268  020E                     	;# 
  6269  020F                     	;# 
  6270  020F                     	;# 
  6271  0210                     	;# 
  6272  0210                     	;# 
  6273  0211                     	;# 
  6274  0211                     	;# 
  6275  0212                     	;# 
  6276  0212                     	;# 
  6277  0213                     	;# 
  6278  0214                     	;# 
  6279  0215                     	;# 
  6280  0215                     	;# 
  6281  0216                     	;# 
  6282  0216                     	;# 
  6283  0217                     	;# 
  6284  0217                     	;# 
  6285  0218                     	;# 
  6286  0218                     	;# 
  6287  0219                     	;# 
  6288  021A                     	;# 
  6289  021B                     	;# 
  6290  021B                     	;# 
  6291  021C                     	;# 
  6292  021C                     	;# 
  6293  021D                     	;# 
  6294  021D                     	;# 
  6295  021E                     	;# 
  6296  021F                     	;# 
  6297  028C                     	;# 
  6298  028C                     	;# 
  6299  028D                     	;# 
  6300  028D                     	;# 
  6301  028E                     	;# 
  6302  028F                     	;# 
  6303  0290                     	;# 
  6304  0290                     	;# 
  6305  0291                     	;# 
  6306  0292                     	;# 
  6307  0292                     	;# 
  6308  0293                     	;# 
  6309  0293                     	;# 
  6310  0294                     	;# 
  6311  0295                     	;# 
  6312  0296                     	;# 
  6313  0296                     	;# 
  6314  0297                     	;# 
  6315  0298                     	;# 
  6316  0298                     	;# 
  6317  0299                     	;# 
  6318  0299                     	;# 
  6319  029A                     	;# 
  6320  029B                     	;# 
  6321  029C                     	;# 
  6322  029C                     	;# 
  6323  029D                     	;# 
  6324  030C                     	;# 
  6325  030C                     	;# 
  6326  030D                     	;# 
  6327  030E                     	;# 
  6328  030F                     	;# 
  6329  0310                     	;# 
  6330  0310                     	;# 
  6331  0311                     	;# 
  6332  0312                     	;# 
  6333  0313                     	;# 
  6334  0314                     	;# 
  6335  0314                     	;# 
  6336  0315                     	;# 
  6337  0316                     	;# 
  6338  0317                     	;# 
  6339  0318                     	;# 
  6340  0318                     	;# 
  6341  0319                     	;# 
  6342  031A                     	;# 
  6343  031B                     	;# 
  6344  031C                     	;# 
  6345  031C                     	;# 
  6346  031D                     	;# 
  6347  031E                     	;# 
  6348  031F                     	;# 
  6349  038C                     	;# 
  6350  038D                     	;# 
  6351  038E                     	;# 
  6352  0390                     	;# 
  6353  0391                     	;# 
  6354  0392                     	;# 
  6355  040C                     	;# 
  6356  040D                     	;# 
  6357  040E                     	;# 
  6358  040F                     	;# 
  6359  0410                     	;# 
  6360  0411                     	;# 
  6361  0416                     	;# 
  6362  0416                     	;# 
  6363  0417                     	;# 
  6364  0418                     	;# 
  6365  0418                     	;# 
  6366  0419                     	;# 
  6367  041A                     	;# 
  6368  041A                     	;# 
  6369  041B                     	;# 
  6370  041C                     	;# 
  6371  041C                     	;# 
  6372  041D                     	;# 
  6373  041E                     	;# 
  6374  041F                     	;# 
  6375  048C                     	;# 
  6376  048C                     	;# 
  6377  048D                     	;# 
  6378  048E                     	;# 
  6379  048F                     	;# 
  6380  048F                     	;# 
  6381  0490                     	;# 
  6382  0491                     	;# 
  6383  0492                     	;# 
  6384  0492                     	;# 
  6385  0493                     	;# 
  6386  0494                     	;# 
  6387  0495                     	;# 
  6388  0495                     	;# 
  6389  0496                     	;# 
  6390  0497                     	;# 
  6391  0498                     	;# 
  6392  0499                     	;# 
  6393  049A                     	;# 
  6394  049B                     	;# 
  6395  049C                     	;# 
  6396  049D                     	;# 
  6397  050C                     	;# 
  6398  050C                     	;# 
  6399  050D                     	;# 
  6400  050E                     	;# 
  6401  050F                     	;# 
  6402  050F                     	;# 
  6403  0510                     	;# 
  6404  0511                     	;# 
  6405  0512                     	;# 
  6406  0512                     	;# 
  6407  0513                     	;# 
  6408  0514                     	;# 
  6409  0515                     	;# 
  6410  0515                     	;# 
  6411  0516                     	;# 
  6412  0517                     	;# 
  6413  0518                     	;# 
  6414  0519                     	;# 
  6415  051A                     	;# 
  6416  051B                     	;# 
  6417  051C                     	;# 
  6418  051D                     	;# 
  6419  058C                     	;# 
  6420  058C                     	;# 
  6421  058D                     	;# 
  6422  058E                     	;# 
  6423  058F                     	;# 
  6424  058F                     	;# 
  6425  0590                     	;# 
  6426  0591                     	;# 
  6427  0592                     	;# 
  6428  0593                     	;# 
  6429  060C                     	;# 
  6430  060D                     	;# 
  6431  060E                     	;# 
  6432  060F                     	;# 
  6433  0610                     	;# 
  6434  0611                     	;# 
  6435  0612                     	;# 
  6436  0613                     	;# 
  6437  0614                     	;# 
  6438  0616                     	;# 
  6439  0617                     	;# 
  6440  0618                     	;# 
  6441  0619                     	;# 
  6442  061A                     	;# 
  6443  061B                     	;# 
  6444  061C                     	;# 
  6445  061D                     	;# 
  6446  061E                     	;# 
  6447  068C                     	;# 
  6448  068D                     	;# 
  6449  068E                     	;# 
  6450  068F                     	;# 
  6451  0690                     	;# 
  6452  0691                     	;# 
  6453  0692                     	;# 
  6454  0693                     	;# 
  6455  0694                     	;# 
  6456  070C                     	;# 
  6457  070D                     	;# 
  6458  070E                     	;# 
  6459  070F                     	;# 
  6460  0710                     	;# 
  6461  0711                     	;# 
  6462  0712                     	;# 
  6463  0713                     	;# 
  6464  0714                     	;# 
  6465  0716                     	;# 
  6466  0717                     	;# 
  6467  0718                     	;# 
  6468  0719                     	;# 
  6469  071A                     	;# 
  6470  071B                     	;# 
  6471  071C                     	;# 
  6472  071D                     	;# 
  6473  071E                     	;# 
  6474  0796                     	;# 
  6475  0797                     	;# 
  6476  0798                     	;# 
  6477  0799                     	;# 
  6478  079A                     	;# 
  6479  079B                     	;# 
  6480  080C                     	;# 
  6481  080D                     	;# 
  6482  080E                     	;# 
  6483  080F                     	;# 
  6484  0810                     	;# 
  6485  0811                     	;# 
  6486  0812                     	;# 
  6487  0813                     	;# 
  6488  0814                     	;# 
  6489  081A                     	;# 
  6490  081B                     	;# 
  6491  081C                     	;# 
  6492  081D                     	;# 
  6493  081E                     	;# 
  6494  081F                     	;# 
  6495  088C                     	;# 
  6496  088D                     	;# 
  6497  088E                     	;# 
  6498  088F                     	;# 
  6499  0890                     	;# 
  6500  0891                     	;# 
  6501  0892                     	;# 
  6502  0893                     	;# 
  6503  0895                     	;# 
  6504  0896                     	;# 
  6505  0897                     	;# 
  6506  0898                     	;# 
  6507  0899                     	;# 
  6508  089A                     	;# 
  6509  089B                     	;# 
  6510  090C                     	;# 
  6511  090E                     	;# 
  6512  090F                     	;# 
  6513  091F                     	;# 
  6514  098F                     	;# 
  6515  098F                     	;# 
  6516  0990                     	;# 
  6517  0991                     	;# 
  6518  0992                     	;# 
  6519  0993                     	;# 
  6520  0994                     	;# 
  6521  0995                     	;# 
  6522  0996                     	;# 
  6523  0997                     	;# 
  6524  1E0F                     	;# 
  6525  1E10                     	;# 
  6526  1E11                     	;# 
  6527  1E12                     	;# 
  6528  1E13                     	;# 
  6529  1E14                     	;# 
  6530  1E15                     	;# 
  6531  1E16                     	;# 
  6532  1E17                     	;# 
  6533  1E18                     	;# 
  6534  1E19                     	;# 
  6535  1E1A                     	;# 
  6536  1E1B                     	;# 
  6537  1E1C                     	;# 
  6538  1E1D                     	;# 
  6539  1E1E                     	;# 
  6540  1E1F                     	;# 
  6541  1E20                     	;# 
  6542  1E21                     	;# 
  6543  1E22                     	;# 
  6544  1E23                     	;# 
  6545  1E24                     	;# 
  6546  1E25                     	;# 
  6547  1E26                     	;# 
  6548  1E27                     	;# 
  6549  1E28                     	;# 
  6550  1E29                     	;# 
  6551  1E2A                     	;# 
  6552  1E2B                     	;# 
  6553  1E2C                     	;# 
  6554  1E2D                     	;# 
  6555  1E2E                     	;# 
  6556  1E2F                     	;# 
  6557  1E30                     	;# 
  6558  1E31                     	;# 
  6559  1E32                     	;# 
  6560  1E33                     	;# 
  6561  1E34                     	;# 
  6562  1E35                     	;# 
  6563  1E36                     	;# 
  6564  1E37                     	;# 
  6565  1E8F                     	;# 
  6566  1E90                     	;# 
  6567  1E91                     	;# 
  6568  1E92                     	;# 
  6569  1E93                     	;# 
  6570  1E94                     	;# 
  6571  1E95                     	;# 
  6572  1E96                     	;# 
  6573  1E97                     	;# 
  6574  1E9C                     	;# 
  6575  1E9D                     	;# 
  6576  1E9E                     	;# 
  6577  1EA1                     	;# 
  6578  1EA2                     	;# 
  6579  1EA3                     	;# 
  6580  1EA4                     	;# 
  6581  1EA5                     	;# 
  6582  1EA9                     	;# 
  6583  1EAA                     	;# 
  6584  1EAB                     	;# 
  6585  1EAC                     	;# 
  6586  1EB1                     	;# 
  6587  1EB2                     	;# 
  6588  1EB3                     	;# 
  6589  1EB8                     	;# 
  6590  1EB9                     	;# 
  6591  1EBA                     	;# 
  6592  1EBB                     	;# 
  6593  1EBC                     	;# 
  6594  1EBD                     	;# 
  6595  1EBE                     	;# 
  6596  1EC3                     	;# 
  6597  1EC5                     	;# 
  6598  1EC6                     	;# 
  6599  1EC7                     	;# 
  6600  1EC8                     	;# 
  6601  1EC9                     	;# 
  6602  1ECA                     	;# 
  6603  1ECB                     	;# 
  6604  1ECC                     	;# 
  6605  1F10                     	;# 
  6606  1F11                     	;# 
  6607  1F12                     	;# 
  6608  1F13                     	;# 
  6609  1F14                     	;# 
  6610  1F15                     	;# 
  6611  1F16                     	;# 
  6612  1F17                     	;# 
  6613  1F18                     	;# 
  6614  1F19                     	;# 
  6615  1F1A                     	;# 
  6616  1F1B                     	;# 
  6617  1F1C                     	;# 
  6618  1F1D                     	;# 
  6619  1F1E                     	;# 
  6620  1F1F                     	;# 
  6621  1F20                     	;# 
  6622  1F21                     	;# 
  6623  1F22                     	;# 
  6624  1F23                     	;# 
  6625  1F24                     	;# 
  6626  1F25                     	;# 
  6627  1F26                     	;# 
  6628  1F27                     	;# 
  6629  1F28                     	;# 
  6630  1F29                     	;# 
  6631  1F2A                     	;# 
  6632  1F2B                     	;# 
  6633  1F2C                     	;# 
  6634  1F2D                     	;# 
  6635  1F2E                     	;# 
  6636  1F2F                     	;# 
  6637  1F30                     	;# 
  6638  1F31                     	;# 
  6639  1F32                     	;# 
  6640  1F38                     	;# 
  6641  1F39                     	;# 
  6642  1F3A                     	;# 
  6643  1F3B                     	;# 
  6644  1F3C                     	;# 
  6645  1F3D                     	;# 
  6646  1F3E                     	;# 
  6647  1F3F                     	;# 
  6648  1F40                     	;# 
  6649  1F41                     	;# 
  6650  1F43                     	;# 
  6651  1F44                     	;# 
  6652  1F45                     	;# 
  6653  1F46                     	;# 
  6654  1F47                     	;# 
  6655  1F48                     	;# 
  6656  1F49                     	;# 
  6657  1F4A                     	;# 
  6658  1F4B                     	;# 
  6659  1F4C                     	;# 
  6660  1F4E                     	;# 
  6661  1F4F                     	;# 
  6662  1F50                     	;# 
  6663  1F51                     	;# 
  6664  1F52                     	;# 
  6665  1F53                     	;# 
  6666  1F54                     	;# 
  6667  1F55                     	;# 
  6668  1F56                     	;# 
  6669  1F57                     	;# 
  6670  1F59                     	;# 
  6671  1F5A                     	;# 
  6672  1F5B                     	;# 
  6673  1F5C                     	;# 
  6674  1F5D                     	;# 
  6675  1F61                     	;# 
  6676  1F62                     	;# 
  6677  1F64                     	;# 
  6678  1F65                     	;# 
  6679  1F66                     	;# 
  6680  1F67                     	;# 
  6681  1F68                     	;# 
  6682  1F69                     	;# 
  6683  1F6A                     	;# 
  6684  1F6B                     	;# 
  6685  1F6C                     	;# 
  6686  1F6D                     	;# 
  6687  1FE4                     	;# 
  6688  1FE5                     	;# 
  6689  1FE6                     	;# 
  6690  1FE7                     	;# 
  6691  1FE8                     	;# 
  6692  1FE9                     	;# 
  6693  1FEA                     	;# 
  6694  1FEB                     	;# 
  6695  1FED                     	;# 
  6696  1FEE                     	;# 
  6697  1FEF                     	;_crcTable
  6698                           
  6699                           	psect	idataBANK1
  6700  0801                     __pidataBANK1:	
  6701                           
  6702                           ;initializer for _pdw3000local
  6703  0801  34A0               	retlw	low (_DW3000local| (0+512))
  6704                           
  6705                           	psect	idataBANK2
  6706  2381                     __pidataBANK2:	
  6707                           
  6708                           ;initializer for process_pmic_status@F15205
  6709  2381  347F               	retlw	127
  6710  2382  3400               	retlw	0
  6711  2383  3400               	retlw	0
  6712  2384  3400               	retlw	0
  6713  2385  3400               	retlw	0
  6714                           
  6715                           ;initializer for process_pmic_status@F15203
  6716  2386  3481               	retlw	129
  6717  2387  3400               	retlw	0
  6718  2388  3400               	retlw	0
  6719  2389  3400               	retlw	0
  6720  238A  3400               	retlw	0
  6721                           
  6722                           ;initializer for process_pmic_status@F15201
  6723  238B  347F               	retlw	127
  6724  238C  3400               	retlw	0
  6725  238D  3400               	retlw	0
  6726  238E  3400               	retlw	0
  6727  238F  3400               	retlw	0
  6728                           
  6729                           ;initializer for process_pmic_status@F15199
  6730  2390  3482               	retlw	130
  6731  2391  3400               	retlw	0
  6732  2392  3400               	retlw	0
  6733  2393  3400               	retlw	0
  6734  2394  3400               	retlw	0
  6735                           
  6736                           ;initializer for process_pmic_status@F15197
  6737  2395  347F               	retlw	127
  6738  2396  3400               	retlw	0
  6739  2397  3400               	retlw	0
  6740  2398  3400               	retlw	0
  6741  2399  3400               	retlw	0
  6742                           
  6743                           ;initializer for process_pmic_status@F15195
  6744  239A  3483               	retlw	131
  6745  239B  3400               	retlw	0
  6746  239C  3400               	retlw	0
  6747  239D  3400               	retlw	0
  6748  239E  3400               	retlw	0
  6749                           
  6750                           ;initializer for process_pmic_status@F15193
  6751  239F  347F               	retlw	127
  6752  23A0  3400               	retlw	0
  6753  23A1  3400               	retlw	0
  6754  23A2  3400               	retlw	0
  6755  23A3  3400               	retlw	0
  6756                           
  6757                           ;initializer for _pmic_stat_read_time_count
  6758  23A4  341E               	retlw	30
  6759  23A5  3400               	retlw	0
  6760                           
  6761                           ;initializer for _pmic_stat_reg
  6762  23A6  340B               	retlw	11
  6763                           
  6764                           	psect	idataBANK3
  6765  211E                     __pidataBANK3:	
  6766                           
  6767                           ;initializer for _ADDR
  6768  211E  3402               	retlw	2
  6769  211F  3400               	retlw	0
  6770  2120  3400               	retlw	0
  6771  2121  3400               	retlw	0
  6772  2122  3453               	retlw	83
  6773  2123  34D6               	retlw	214
  6774  2124  34F5               	retlw	245
  6775  2125  34C8               	retlw	200
  6776                           
  6777                           ;initializer for _txconfig_options_ch9
  6778  2126  3434               	retlw	52
  6779  2127  34FE               	retlw	254
  6780  2128  34FE               	retlw	254
  6781  2129  34FE               	retlw	254
  6782  212A  34FE               	retlw	254
  6783  212B  3400               	retlw	0
  6784  212C  3400               	retlw	0
  6785                           
  6786                           	psect	idataBANK4
  6787  2526                     __pidataBANK4:	
  6788                           
  6789                           ;initializer for _tx_blink_msg
  6790  2526  3400               	retlw	0
  6791  2527  3438               	retlw	56
  6792  2528  3400               	retlw	0
  6793  2529  34CA               	retlw	202
  6794  252A  34DE               	retlw	222
  6795  252B  3400               	retlw	0
  6796  252C  3400               	retlw	0
  6797  252D  3400               	retlw	0
  6798  252E  3400               	retlw	0
  6799  252F  3400               	retlw	0
  6800  2530  3400               	retlw	0
  6801  2531  3400               	retlw	0
  6802  2532  3400               	retlw	0
  6803  2533  3400               	retlw	0
  6804  2534  3400               	retlw	0
  6805  2535  3400               	retlw	0
  6806  2536  3400               	retlw	0
  6807  2537  3400               	retlw	0
  6808  2538  3400               	retlw	0
  6809  2539  3400               	retlw	0
  6810  253A  3400               	retlw	0
  6811  253B  3400               	retlw	0
  6812  253C  3400               	retlw	0
  6813  253D  3400               	retlw	0
  6814  253E  3400               	retlw	0
  6815  253F  3400               	retlw	0
  6816  2540  3400               	retlw	0
  6817  2541  3400               	retlw	0
  6818  2542  3400               	retlw	0
  6819  2543  3400               	retlw	0
  6820  2544  3400               	retlw	0
  6821  2545  3400               	retlw	0
  6822  2546  3400               	retlw	0
  6823  2547  3400               	retlw	0
  6824  2548  3400               	retlw	0
  6825  2549  3400               	retlw	0
  6826                           
  6827                           ;initializer for _config
  6828  254A  3409               	retlw	9
  6829  254B  3402               	retlw	2
  6830  254C  3402               	retlw	2
  6831  254D  3409               	retlw	9
  6832  254E  3409               	retlw	9
  6833  254F  3401               	retlw	1
  6834  2550  3400               	retlw	0
  6835  2551  3400               	retlw	0
  6836  2552  3400               	retlw	0
  6837  2553  34E9               	retlw	233
  6838  2554  3403               	retlw	3
  6839  2555  3400               	retlw	0
  6840  2556  3401               	retlw	1
  6841  2557  3400               	retlw	0
  6842                           
  6843                           	psect	stringtext1
  6844  292D                     __pstringtext1:	
  6845  292D                     _sts_length_factors:	
  6846  292D  3400               	retlw	0
  6847  292E  3404               	retlw	4
  6848  292F  34A8               	retlw	168
  6849  2930  3405               	retlw	5
  6850  2931  3400               	retlw	0
  6851  2932  3408               	retlw	8
  6852  2933  3450               	retlw	80
  6853  2934  340B               	retlw	11
  6854  2935  3400               	retlw	0
  6855  2936  3410               	retlw	16
  6856  2937  34A1               	retlw	161
  6857  2938  3416               	retlw	22
  6858  2939  3400               	retlw	0
  6859  293A  3420               	retlw	32
  6860  293B                     __end_of_sts_length_factors:	
  6861                           
  6862                           	psect	stringtext2
  6863  296E                     __pstringtext2:	
  6864  296E                     _dpowers:	
  6865  296E  3401               	retlw	1
  6866  296F  3400               	retlw	0
  6867  2970  340A               	retlw	10
  6868  2971  3400               	retlw	0
  6869  2972  3464               	retlw	100
  6870  2973  3400               	retlw	0
  6871  2974  34E8               	retlw	232
  6872  2975  3403               	retlw	3
  6873  2976  3410               	retlw	16
  6874  2977  3427               	retlw	39
  6875  2978                     __end_of_dpowers:	
  6876                           
  6877                           	psect	stringtext3
  6878  299F                     __pstringtext3:	
  6879  299F                     _hexpowers:	
  6880  299F  3401               	retlw	1
  6881  29A0  3400               	retlw	0
  6882  29A1  3410               	retlw	16
  6883  29A2  3400               	retlw	0
  6884  29A3  3400               	retlw	0
  6885  29A4  3401               	retlw	1
  6886  29A5  3400               	retlw	0
  6887  29A6  3410               	retlw	16
  6888  29A7                     __end_of_hexpowers:	
  6889                           
  6890                           	psect	stringtext4
  6891  1800                     __pstringtext4:	
  6892  1800                     _spi1_configuration:	
  6893  1800  3400               	retlw	0
  6894  1801  3440               	retlw	64
  6895  1802  3401               	retlw	1
  6896  1803  3400               	retlw	0
  6897  1804                     __end_of_spi1_configuration:	
  6898  0017                     _LATBbits	set	23
  6899  0016                     _LATAbits	set	22
  6900  0013                     _TRISCbits	set	19
  6901  0014                     _TRISD	set	20
  6902  0013                     _TRISC	set	19
  6903  0012                     _TRISB	set	18
  6904  0011                     _TRISA	set	17
  6905  0015                     _TRISE	set	21
  6906  0018                     _LATC	set	24
  6907  0017                     _LATB	set	23
  6908  0016                     _LATA	set	22
  6909  0019                     _LATD	set	25
  6910  001A                     _LATE	set	26
  6911  005F                     _GIE	set	95
  6912  011A                     _TX1REG	set	282
  6913  0119                     _RC1REG	set	281
  6914  011D                     _RC1STAbits	set	285
  6915  011E                     _TX1STAbits	set	286
  6916  011C                     _SP1BRGH	set	284
  6917  011B                     _SP1BRGL	set	283
  6918  011E                     _TX1STA	set	286
  6919  011D                     _RC1STA	set	285
  6920  011F                     _BAUD1CON	set	287
  6921  018F                     _SSP1STATbits	set	399
  6922  0191                     _SSP1CON2bits	set	401
  6923  018E                     _SSP1MSK	set	398
  6924  0192                     _SSP1CON3	set	402
  6925  018C                     _SSP1BUF	set	396
  6926  0191                     _SSP1CON2	set	401
  6927  0190                     _SSP1CON1bits	set	400
  6928  018D                     _SSP1ADD	set	397
  6929  0190                     _SSP1CON1	set	400
  6930  018F                     _SSP1STAT	set	399
  6931  0719                     _PIE3bits	set	1817
  6932  070F                     _PIR3bits	set	1807
  6933  079B                     _PMD5	set	1947
  6934  079A                     _PMD4	set	1946
  6935  0799                     _PMD3	set	1945
  6936  0798                     _PMD2	set	1944
  6937  0797                     _PMD1	set	1943
  6938  0796                     _PMD0	set	1942
  6939  0892                     _OSCTUNE	set	2194
  6940  0893                     _OSCFRQ	set	2195
  6941  0891                     _OSCEN	set	2193
  6942  088F                     _OSCCON3	set	2191
  6943  088D                     _OSCCON1	set	2189
  6944  1EC6                     _SSP1DATPPS	set	7878
  6945  1EC5                     _SSP1CLKPPS	set	7877
  6946  1ECB                     _RXPPS	set	7883
  6947  1E8F                     _PPSLOCKbits	set	7823
  6948  1E8F                     _PPSLOCK	set	7823
  6949  1F24                     _RC4PPS	set	7972
  6950  1F23                     _RC3PPS	set	7971
  6951  1F45                     _ODCONBbits	set	8005
  6952  1F3A                     _ODCONAbits	set	7994
  6953  1F21                     _RC1PPS	set	7969
  6954  1F22                     _RC2PPS	set	7970
  6955  1F25                     _RC5PPS	set	7973
  6956  1F5B                     _ODCOND	set	8027
  6957  1F50                     _ODCONC	set	8016
  6958  1F45                     _ODCONB	set	8005
  6959  1F3A                     _ODCONA	set	7994
  6960  1F66                     _ODCONE	set	8038
  6961  1F4F                     _WPUC	set	8015
  6962  1F39                     _WPUA	set	7993
  6963  1F44                     _WPUB	set	8004
  6964  1F65                     _WPUE	set	8037
  6965  1F5A                     _WPUD	set	8026
  6966  1F38                     _ANSELA	set	7992
  6967  1F64                     _ANSELE	set	8036
  6968  1F43                     _ANSELB	set	8003
  6969  1F4E                     _ANSELC	set	8014
  6970  1F59                     _ANSELD	set	8025
  6971  1804                     STR_13:	
  6972  1804  346D               	retlw	109	;'m'
  6973  1805  346F               	retlw	111	;'o'
  6974  1806  3464               	retlw	100	;'d'
  6975  1807  3465               	retlw	101	;'e'
  6976  1808  3420               	retlw	32	;' '
  6977  1809  343D               	retlw	61	;'='
  6978  180A  343D               	retlw	61	;'='
  6979  180B  3420               	retlw	32	;' '
  6980  180C  3444               	retlw	68	;'D'
  6981  180D  3457               	retlw	87	;'W'
  6982  180E  3433               	retlw	51	;'3'
  6983  180F  3430               	retlw	48	;'0'
  6984  1810  3430               	retlw	48	;'0'
  6985  1811  3430               	retlw	48	;'0'
  6986  1812  345F               	retlw	95	;'_'
  6987  1813  3453               	retlw	83	;'S'
  6988  1814  3450               	retlw	80	;'P'
  6989  1815  3449               	retlw	73	;'I'
  6990  1816  345F               	retlw	95	;'_'
  6991  1817  3457               	retlw	87	;'W'
  6992  1818  3452               	retlw	82	;'R'
  6993  1819  345F               	retlw	95	;'_'
  6994  181A  3442               	retlw	66	;'B'
  6995  181B  3449               	retlw	73	;'I'
  6996  181C  3454               	retlw	84	;'T'
  6997  181D  3420               	retlw	32	;' '
  6998  181E  347C               	retlw	124	;'|'
  6999  181F  347C               	retlw	124	;'|'
  7000  1820  3420               	retlw	32	;' '
  7001  1821  346D               	retlw	109	;'m'
  7002  1822  346F               	retlw	111	;'o'
  7003  1823  3464               	retlw	100	;'d'
  7004  1824  3465               	retlw	101	;'e'
  7005  1825  3420               	retlw	32	;' '
  7006  1826  343D               	retlw	61	;'='
  7007  1827  343D               	retlw	61	;'='
  7008  1828  3420               	retlw	32	;' '
  7009  1829  3444               	retlw	68	;'D'
  7010  182A  3457               	retlw	87	;'W'
  7011  182B  3433               	retlw	51	;'3'
  7012  182C  3430               	retlw	48	;'0'
  7013  182D  3430               	retlw	48	;'0'
  7014  182E  3430               	retlw	48	;'0'
  7015  182F  345F               	retlw	95	;'_'
  7016  1830  3453               	retlw	83	;'S'
  7017  1831  3450               	retlw	80	;'P'
  7018  1832  3449               	retlw	73	;'I'
  7019  1833  345F               	retlw	95	;'_'
  7020  1834  3452               	retlw	82	;'R'
  7021  1835  3444               	retlw	68	;'D'
  7022  1836  345F               	retlw	95	;'_'
  7023  1837  3442               	retlw	66	;'B'
  7024  1838  3449               	retlw	73	;'I'
  7025  1839  3454               	retlw	84	;'T'
  7026  183A  3420               	retlw	32	;' '
  7027  183B  347C               	retlw	124	;'|'
  7028  183C  347C               	retlw	124	;'|'
  7029  183D  3420               	retlw	32	;' '
  7030  183E  346D               	retlw	109	;'m'
  7031  183F  346F               	retlw	111	;'o'
  7032  1840  3464               	retlw	100	;'d'
  7033  1841  3465               	retlw	101	;'e'
  7034  1842  3420               	retlw	32	;' '
  7035  1843  343D               	retlw	61	;'='
  7036  1844  343D               	retlw	61	;'='
  7037  1845  3420               	retlw	32	;' '
  7038  1846  3444               	retlw	68	;'D'
  7039  1847  3457               	retlw	87	;'W'
  7040  1848  3433               	retlw	51	;'3'
  7041  1849  3430               	retlw	48	;'0'
  7042  184A  3430               	retlw	48	;'0'
  7043  184B  3430               	retlw	48	;'0'
  7044  184C  345F               	retlw	95	;'_'
  7045  184D  3453               	retlw	83	;'S'
  7046  184E  3450               	retlw	80	;'P'
  7047  184F  3449               	retlw	73	;'I'
  7048  1850  345F               	retlw	95	;'_'
  7049  1851  3441               	retlw	65	;'A'
  7050  1852  344E               	retlw	78	;'N'
  7051  1853  3444               	retlw	68	;'D'
  7052  1854  345F               	retlw	95	;'_'
  7053  1855  344F               	retlw	79	;'O'
  7054  1856  3452               	retlw	82	;'R'
  7055  1857  345F               	retlw	95	;'_'
  7056  1858  3438               	retlw	56	;'8'
  7057  1859  3420               	retlw	32	;' '
  7058  185A  347C               	retlw	124	;'|'
  7059  185B  347C               	retlw	124	;'|'
  7060  185C  3420               	retlw	32	;' '
  7061  185D  346D               	retlw	109	;'m'
  7062  185E  346F               	retlw	111	;'o'
  7063  185F  3464               	retlw	100	;'d'
  7064  1860  3465               	retlw	101	;'e'
  7065  1861  3420               	retlw	32	;' '
  7066  1862  343D               	retlw	61	;'='
  7067  1863  343D               	retlw	61	;'='
  7068  1864  3420               	retlw	32	;' '
  7069  1865  3444               	retlw	68	;'D'
  7070  1866  3457               	retlw	87	;'W'
  7071  1867  3433               	retlw	51	;'3'
  7072  1868  3430               	retlw	48	;'0'
  7073  1869  3430               	retlw	48	;'0'
  7074  186A  3430               	retlw	48	;'0'
  7075  186B  345F               	retlw	95	;'_'
  7076  186C  3453               	retlw	83	;'S'
  7077  186D  3450               	retlw	80	;'P'
  7078  186E  3449               	retlw	73	;'I'
  7079  186F  345F               	retlw	95	;'_'
  7080  1870  3441               	retlw	65	;'A'
  7081  1871  344E               	retlw	78	;'N'
  7082  1872  3444               	retlw	68	;'D'
  7083  1873  345F               	retlw	95	;'_'
  7084  1874  344F               	retlw	79	;'O'
  7085  1875  3452               	retlw	82	;'R'
  7086  1876  345F               	retlw	95	;'_'
  7087  1877  3431               	retlw	49	;'1'
  7088  1878  3436               	retlw	54	;'6'
  7089  1879  3420               	retlw	32	;' '
  7090  187A  347C               	retlw	124	;'|'
  7091  187B  347C               	retlw	124	;'|'
  7092  187C  3420               	retlw	32	;' '
  7093  187D  346D               	retlw	109	;'m'
  7094  187E  346F               	retlw	111	;'o'
  7095  187F  3464               	retlw	100	;'d'
  7096  1880  3465               	retlw	101	;'e'
  7097  1881  3420               	retlw	32	;' '
  7098  1882  343D               	retlw	61	;'='
  7099  1883  343D               	retlw	61	;'='
  7100  1884  3420               	retlw	32	;' '
  7101  1885  3444               	retlw	68	;'D'
  7102  1886  3457               	retlw	87	;'W'
  7103  1887  3433               	retlw	51	;'3'
  7104  1888  3430               	retlw	48	;'0'
  7105  1889  3430               	retlw	48	;'0'
  7106  188A  3430               	retlw	48	;'0'
  7107  188B  345F               	retlw	95	;'_'
  7108  188C  3453               	retlw	83	;'S'
  7109  188D  3450               	retlw	80	;'P'
  7110  188E  3449               	retlw	73	;'I'
  7111  188F  345F               	retlw	95	;'_'
  7112  1890  3441               	retlw	65	;'A'
  7113  1891  344E               	retlw	78	;'N'
  7114  1892  3444               	retlw	68	;'D'
  7115  1893  345F               	retlw	95	;'_'
  7116  1894  344F               	retlw	79	;'O'
  7117  1895  3452               	retlw	82	;'R'
  7118  1896  345F               	retlw	95	;'_'
  7119  1897  3433               	retlw	51	;'3'
  7120  1898  3432               	retlw	50	;'2'
  7121  1899  3400               	retlw	0
  7122                           
  7123                           	psect	stringtext5
  7124  2800                     __pstringtext5:	
  7125  2800                     STR_31:	
  7126  2800  3441               	retlw	65	;'A'
  7127  2801  3473               	retlw	115	;'s'
  7128  2802  3473               	retlw	115	;'s'
  7129  2803  3465               	retlw	101	;'e'
  7130  2804  3472               	retlw	114	;'r'
  7131  2805  3474               	retlw	116	;'t'
  7132  2806  3469               	retlw	105	;'i'
  7133  2807  346F               	retlw	111	;'o'
  7134  2808  346E               	retlw	110	;'n'
  7135  2809  3420               	retlw	32	;' '
  7136  280A  3466               	retlw	102	;'f'
  7137  280B  3461               	retlw	97	;'a'
  7138  280C  3469               	retlw	105	;'i'
  7139  280D  346C               	retlw	108	;'l'
  7140  280E  3465               	retlw	101	;'e'
  7141  280F  3464               	retlw	100	;'d'
  7142  2810  343A               	retlw	58	;':'
  7143  2811  3420               	retlw	32	;' '
  7144  2812  3425               	retlw	37	;'%'
  7145  2813  3473               	retlw	115	;'s'
  7146  2814  3420               	retlw	32	;' '
  7147  2815  346C               	retlw	108	;'l'
  7148  2816  3469               	retlw	105	;'i'
  7149  2817  346E               	retlw	110	;'n'
  7150  2818  3465               	retlw	101	;'e'
  7151  2819  3420               	retlw	32	;' '
  7152  281A  3425               	retlw	37	;'%'
  7153  281B  3464               	retlw	100	;'d'
  7154  281C  343A               	retlw	58	;':'
  7155  281D  3420               	retlw	32	;' '
  7156  281E  3422               	retlw	34	;'"'
  7157  281F  3425               	retlw	37	;'%'
  7158  2820  3473               	retlw	115	;'s'
  7159  2821  3422               	retlw	34	;'"'
  7160  2822  340A               	retlw	10
  7161  2823  3400               	retlw	0
  7162                           
  7163                           	psect	stringtext6
  7164  2824                     __pstringtext6:	
  7165  2824                     STR_5:	
  7166  2824  340A               	retlw	10
  7167  2825  340D               	retlw	13
  7168  2826  3475               	retlw	117	;'u'
  7169  2827  3469               	retlw	105	;'i'
  7170  2828  346E               	retlw	110	;'n'
  7171  2829  3474               	retlw	116	;'t'
  7172  282A  3436               	retlw	54	;'6'
  7173  282B  3434               	retlw	52	;'4'
  7174  282C  345F               	retlw	95	;'_'
  7175  282D  346E               	retlw	110	;'n'
  7176  282E  3475               	retlw	117	;'u'
  7177  282F  346D               	retlw	109	;'m'
  7178  2830  343A               	retlw	58	;':'
  7179  2831  3420               	retlw	32	;' '
  7180  2832  3425               	retlw	37	;'%'
  7181  2833  3430               	retlw	48	;'0'
  7182  2834  3434               	retlw	52	;'4'
  7183  2835  3458               	retlw	88	;'X'
  7184  2836  3425               	retlw	37	;'%'
  7185  2837  3430               	retlw	48	;'0'
  7186  2838  3434               	retlw	52	;'4'
  7187  2839  3458               	retlw	88	;'X'
  7188  283A  3425               	retlw	37	;'%'
  7189  283B  3430               	retlw	48	;'0'
  7190  283C  3434               	retlw	52	;'4'
  7191  283D  3458               	retlw	88	;'X'
  7192  283E  3425               	retlw	37	;'%'
  7193  283F  3430               	retlw	48	;'0'
  7194  2840  3434               	retlw	52	;'4'
  7195  2841  3458               	retlw	88	;'X'
  7196  2842  3400               	retlw	0
  7197                           
  7198                           	psect	stringtext7
  7199  2843                     __pstringtext7:	
  7200  2843                     STR_27:	
  7201  2843  340A               	retlw	10
  7202  2844  340D               	retlw	13
  7203  2845  3470               	retlw	112	;'p'
  7204  2846  346D               	retlw	109	;'m'
  7205  2847  3469               	retlw	105	;'i'
  7206  2848  3463               	retlw	99	;'c'
  7207  2849  345F               	retlw	95	;'_'
  7208  284A  3462               	retlw	98	;'b'
  7209  284B  3461               	retlw	97	;'a'
  7210  284C  3474               	retlw	116	;'t'
  7211  284D  3474               	retlw	116	;'t'
  7212  284E  345F               	retlw	95	;'_'
  7213  284F  3472               	retlw	114	;'r'
  7214  2850  3465               	retlw	101	;'e'
  7215  2851  3461               	retlw	97	;'a'
  7216  2852  3464               	retlw	100	;'d'
  7217  2853  345F               	retlw	95	;'_'
  7218  2854  3461               	retlw	97	;'a'
  7219  2855  346E               	retlw	110	;'n'
  7220  2856  3464               	retlw	100	;'d'
  7221  2857  345F               	retlw	95	;'_'
  7222  2858  3477               	retlw	119	;'w'
  7223  2859  3464               	retlw	100	;'d'
  7224  285A  3474               	retlw	116	;'t'
  7225  285B  345F               	retlw	95	;'_'
  7226  285C  3463               	retlw	99	;'c'
  7227  285D  346C               	retlw	108	;'l'
  7228  285E  3472               	retlw	114	;'r'
  7229  285F  3400               	retlw	0
  7230                           
  7231                           	psect	stringtext8
  7232  2860                     __pstringtext8:	
  7233  2860                     STR_15:	
  7234  2860  346D               	retlw	109	;'m'
  7235  2861  346F               	retlw	111	;'o'
  7236  2862  3464               	retlw	100	;'d'
  7237  2863  3465               	retlw	101	;'e'
  7238  2864  3420               	retlw	32	;' '
  7239  2865  343D               	retlw	61	;'='
  7240  2866  343D               	retlw	61	;'='
  7241  2867  3420               	retlw	32	;' '
  7242  2868  3444               	retlw	68	;'D'
  7243  2869  3457               	retlw	87	;'W'
  7244  286A  3433               	retlw	51	;'3'
  7245  286B  3430               	retlw	48	;'0'
  7246  286C  3430               	retlw	48	;'0'
  7247  286D  3430               	retlw	48	;'0'
  7248  286E  345F               	retlw	95	;'_'
  7249  286F  3453               	retlw	83	;'S'
  7250  2870  3450               	retlw	80	;'P'
  7251  2871  3449               	retlw	73	;'I'
  7252  2872  345F               	retlw	95	;'_'
  7253  2873  3457               	retlw	87	;'W'
  7254  2874  3452               	retlw	82	;'R'
  7255  2875  345F               	retlw	95	;'_'
  7256  2876  3442               	retlw	66	;'B'
  7257  2877  3449               	retlw	73	;'I'
  7258  2878  3454               	retlw	84	;'T'
  7259  2879  3400               	retlw	0
  7260                           
  7261                           	psect	stringtext9
  7262  287A                     __pstringtext9:	
  7263  287A                     STR_1:	
  7264  287A  340A               	retlw	10
  7265  287B  340D               	retlw	13
  7266  287C  3455               	retlw	85	;'U'
  7267  287D  3457               	retlw	87	;'W'
  7268  287E  3442               	retlw	66	;'B'
  7269  287F  345F               	retlw	95	;'_'
  7270  2880  3454               	retlw	84	;'T'
  7271  2881  3441               	retlw	65	;'A'
  7272  2882  3447               	retlw	71	;'G'
  7273  2883  345F               	retlw	95	;'_'
  7274  2884  3444               	retlw	68	;'D'
  7275  2885  3457               	retlw	87	;'W'
  7276  2886  344D               	retlw	77	;'M'
  7277  2887  3433               	retlw	51	;'3'
  7278  2888  3430               	retlw	48	;'0'
  7279  2889  3430               	retlw	48	;'0'
  7280  288A  3430               	retlw	48	;'0'
  7281  288B  345F               	retlw	95	;'_'
  7282  288C  3450               	retlw	80	;'P'
  7283  288D  3449               	retlw	73	;'I'
  7284  288E  3443               	retlw	67	;'C'
  7285  288F  3400               	retlw	0
  7286                           
  7287                           	psect	stringtext10
  7288  2890                     __pstringtext10:	
  7289  2890                     STR_26:	
  7290  2890  340A               	retlw	10
  7291  2891  340D               	retlw	13
  7292  2892  344D               	retlw	77	;'M'
  7293  2893  3453               	retlw	83	;'S'
  7294  2894  3453               	retlw	83	;'S'
  7295  2895  3453               	retlw	83	;'S'
  7296  2896  3450               	retlw	80	;'P'
  7297  2897  3420               	retlw	32	;' '
  7298  2898  3473               	retlw	115	;'s'
  7299  2899  3465               	retlw	101	;'e'
  7300  289A  3474               	retlw	116	;'t'
  7301  289B  3420               	retlw	32	;' '
  7302  289C  3461               	retlw	97	;'a'
  7303  289D  3473               	retlw	115	;'s'
  7304  289E  3420               	retlw	32	;' '
  7305  289F  3449               	retlw	73	;'I'
  7306  28A0  3432               	retlw	50	;'2'
  7307  28A1  3443               	retlw	67	;'C'
  7308  28A2  3400               	retlw	0
  7309                           
  7310                           	psect	stringtext11
  7311  28A3                     __pstringtext11:	
  7312  28A3                     STR_25:	
  7313  28A3  340A               	retlw	10
  7314  28A4  340D               	retlw	13
  7315  28A5  344D               	retlw	77	;'M'
  7316  28A6  3453               	retlw	83	;'S'
  7317  28A7  3453               	retlw	83	;'S'
  7318  28A8  3453               	retlw	83	;'S'
  7319  28A9  3450               	retlw	80	;'P'
  7320  28AA  3420               	retlw	32	;' '
  7321  28AB  3473               	retlw	115	;'s'
  7322  28AC  3465               	retlw	101	;'e'
  7323  28AD  3474               	retlw	116	;'t'
  7324  28AE  3420               	retlw	32	;' '
  7325  28AF  3461               	retlw	97	;'a'
  7326  28B0  3473               	retlw	115	;'s'
  7327  28B1  3420               	retlw	32	;' '
  7328  28B2  3453               	retlw	83	;'S'
  7329  28B3  3450               	retlw	80	;'P'
  7330  28B4  3449               	retlw	73	;'I'
  7331  28B5  3400               	retlw	0
  7332                           
  7333                           	psect	stringtext12
  7334  28B6                     __pstringtext12:	
  7335  28B6                     STR_9:	
  7336  28B6  3472               	retlw	114	;'r'
  7337  28B7  3465               	retlw	101	;'e'
  7338  28B8  3467               	retlw	103	;'g'
  7339  28B9  345F               	retlw	95	;'_'
  7340  28BA  346F               	retlw	111	;'o'
  7341  28BB  3466               	retlw	102	;'f'
  7342  28BC  3466               	retlw	102	;'f'
  7343  28BD  3473               	retlw	115	;'s'
  7344  28BE  3465               	retlw	101	;'e'
  7345  28BF  3474               	retlw	116	;'t'
  7346  28C0  3420               	retlw	32	;' '
  7347  28C1  343C               	retlw	60	;'<'
  7348  28C2  343D               	retlw	61	;'='
  7349  28C3  3420               	retlw	32	;' '
  7350  28C4  3430               	retlw	48	;'0'
  7351  28C5  3478               	retlw	120	;'x'
  7352  28C6  3437               	retlw	55	;'7'
  7353  28C7  3446               	retlw	70	;'F'
  7354  28C8  3400               	retlw	0
  7355                           
  7356                           	psect	stringtext13
  7357  28C9                     __pstringtext13:	
  7358  28C9                     STR_28:	
  7359  28C9  340A               	retlw	10
  7360  28CA  340D               	retlw	13
  7361  28CB  3442               	retlw	66	;'B'
  7362  28CC  3451               	retlw	81	;'Q'
  7363  28CD  3432               	retlw	50	;'2'
  7364  28CE  3435               	retlw	53	;'5'
  7365  28CF  3438               	retlw	56	;'8'
  7366  28D0  3439               	retlw	57	;'9'
  7367  28D1  3435               	retlw	53	;'5'
  7368  28D2  345F               	retlw	95	;'_'
  7369  28D3  3472               	retlw	114	;'r'
  7370  28D4  3465               	retlw	101	;'e'
  7371  28D5  345F               	retlw	95	;'_'
  7372  28D6  3469               	retlw	105	;'i'
  7373  28D7  346E               	retlw	110	;'n'
  7374  28D8  3469               	retlw	105	;'i'
  7375  28D9  3474               	retlw	116	;'t'
  7376  28DA  3400               	retlw	0
  7377                           
  7378                           	psect	stringtext14
  7379  28DB                     __pstringtext14:	
  7380  28DB                     STR_30:	
  7381  28DB  3430               	retlw	48	;'0'
  7382  28DC  3431               	retlw	49	;'1'
  7383  28DD  3432               	retlw	50	;'2'
  7384  28DE  3433               	retlw	51	;'3'
  7385  28DF  3434               	retlw	52	;'4'
  7386  28E0  3435               	retlw	53	;'5'
  7387  28E1  3436               	retlw	54	;'6'
  7388  28E2  3437               	retlw	55	;'7'
  7389  28E3  3438               	retlw	56	;'8'
  7390  28E4  3439               	retlw	57	;'9'
  7391  28E5  3441               	retlw	65	;'A'
  7392  28E6  3442               	retlw	66	;'B'
  7393  28E7  3443               	retlw	67	;'C'
  7394  28E8  3444               	retlw	68	;'D'
  7395  28E9  3445               	retlw	69	;'E'
  7396  28EA  3446               	retlw	70	;'F'
  7397  28EB  3400               	retlw	0
  7398                           
  7399                           	psect	stringtext15
  7400  28EC                     __pstringtext15:	
  7401  28EC                     STR_21:	
  7402  28EC  340A               	retlw	10
  7403  28ED  340D               	retlw	13
  7404  28EE  3443               	retlw	67	;'C'
  7405  28EF  344F               	retlw	79	;'O'
  7406  28F0  344E               	retlw	78	;'N'
  7407  28F1  3446               	retlw	70	;'F'
  7408  28F2  3449               	retlw	73	;'I'
  7409  28F3  3447               	retlw	71	;'G'
  7410  28F4  345F               	retlw	95	;'_'
  7411  28F5  3453               	retlw	83	;'S'
  7412  28F6  3455               	retlw	85	;'U'
  7413  28F7  3443               	retlw	67	;'C'
  7414  28F8  3443               	retlw	67	;'C'
  7415  28F9  3445               	retlw	69	;'E'
  7416  28FA  3453               	retlw	83	;'S'
  7417  28FB  3453               	retlw	83	;'S'
  7418  28FC  3400               	retlw	0
  7419                           
  7420                           	psect	stringtext16
  7421  28FD                     __pstringtext16:	
  7422  28FD                     STR_7:	
  7423  28FD  3472               	retlw	114	;'r'
  7424  28FE  3465               	retlw	101	;'e'
  7425  28FF  3467               	retlw	103	;'g'
  7426  2900  345F               	retlw	95	;'_'
  7427  2901  3466               	retlw	102	;'f'
  7428  2902  3469               	retlw	105	;'i'
  7429  2903  346C               	retlw	108	;'l'
  7430  2904  3465               	retlw	101	;'e'
  7431  2905  3420               	retlw	32	;' '
  7432  2906  343C               	retlw	60	;'<'
  7433  2907  343D               	retlw	61	;'='
  7434  2908  3420               	retlw	32	;' '
  7435  2909  3430               	retlw	48	;'0'
  7436  290A  3478               	retlw	120	;'x'
  7437  290B  3431               	retlw	49	;'1'
  7438  290C  3446               	retlw	70	;'F'
  7439  290D  3400               	retlw	0
  7440                           
  7441                           	psect	stringtext17
  7442  290E                     __pstringtext17:	
  7443  290E                     STR_11:	
  7444  290E  346C               	retlw	108	;'l'
  7445  290F  3465               	retlw	101	;'e'
  7446  2910  346E               	retlw	110	;'n'
  7447  2911  3467               	retlw	103	;'g'
  7448  2912  3474               	retlw	116	;'t'
  7449  2913  3468               	retlw	104	;'h'
  7450  2914  3420               	retlw	32	;' '
  7451  2915  343C               	retlw	60	;'<'
  7452  2916  3420               	retlw	32	;' '
  7453  2917  3430               	retlw	48	;'0'
  7454  2918  3478               	retlw	120	;'x'
  7455  2919  3433               	retlw	51	;'3'
  7456  291A  3431               	retlw	49	;'1'
  7457  291B  3430               	retlw	48	;'0'
  7458  291C  3430               	retlw	48	;'0'
  7459  291D  3400               	retlw	0
  7460                           
  7461                           	psect	stringtext18
  7462  291E                     __pstringtext18:	
  7463  291E                     STR_20:	
  7464  291E  340A               	retlw	10
  7465  291F  340D               	retlw	13
  7466  2920  3443               	retlw	67	;'C'
  7467  2921  344F               	retlw	79	;'O'
  7468  2922  344E               	retlw	78	;'N'
  7469  2923  3446               	retlw	70	;'F'
  7470  2924  3449               	retlw	73	;'I'
  7471  2925  3447               	retlw	71	;'G'
  7472  2926  345F               	retlw	95	;'_'
  7473  2927  3445               	retlw	69	;'E'
  7474  2928  3452               	retlw	82	;'R'
  7475  2929  3452               	retlw	82	;'R'
  7476  292A  344F               	retlw	79	;'O'
  7477  292B  3452               	retlw	82	;'R'
  7478  292C  3400               	retlw	0
  7479                           
  7480                           	psect	stringtext19
  7481  293B                     __pstringtext19:	
  7482  293B                     STR_6:	
  7483  293B  3464               	retlw	100	;'d'
  7484  293C  3465               	retlw	101	;'e'
  7485  293D  3463               	retlw	99	;'c'
  7486  293E  3461               	retlw	97	;'a'
  7487  293F  345F               	retlw	95	;'_'
  7488  2940  3464               	retlw	100	;'d'
  7489  2941  3465               	retlw	101	;'e'
  7490  2942  3476               	retlw	118	;'v'
  7491  2943  3469               	retlw	105	;'i'
  7492  2944  3463               	retlw	99	;'c'
  7493  2945  3465               	retlw	101	;'e'
  7494  2946  342E               	retlw	46	;'.'
  7495  2947  3463               	retlw	99	;'c'
  7496  2948  3400               	retlw	0
  7497                           
  7498                           	psect	stringtext20
  7499  2949                     __pstringtext20:	
  7500  2949                     STR_4:	
  7501  2949  3476               	retlw	118	;'v'
  7502  294A  3461               	retlw	97	;'a'
  7503  294B  346C               	retlw	108	;'l'
  7504  294C  343A               	retlw	58	;':'
  7505  294D  3420               	retlw	32	;' '
  7506  294E  3425               	retlw	37	;'%'
  7507  294F  3430               	retlw	48	;'0'
  7508  2950  3434               	retlw	52	;'4'
  7509  2951  3458               	retlw	88	;'X'
  7510  2952  3425               	retlw	37	;'%'
  7511  2953  3430               	retlw	48	;'0'
  7512  2954  3434               	retlw	52	;'4'
  7513  2955  3458               	retlw	88	;'X'
  7514  2956  3400               	retlw	0
  7515                           
  7516                           	psect	stringtext21
  7517  2957                     __pstringtext21:	
  7518  2957                     STR_19:	
  7519  2957  340A               	retlw	10
  7520  2958  340D               	retlw	13
  7521  2959  3444               	retlw	68	;'D'
  7522  295A  3457               	retlw	87	;'W'
  7523  295B  344D               	retlw	77	;'M'
  7524  295C  345F               	retlw	95	;'_'
  7525  295D  3445               	retlw	69	;'E'
  7526  295E  3452               	retlw	82	;'R'
  7527  295F  3452               	retlw	82	;'R'
  7528  2960  344F               	retlw	79	;'O'
  7529  2961  3452               	retlw	82	;'R'
  7530  2962  3400               	retlw	0
  7531                           
  7532                           	psect	stringtext22
  7533  2963                     __pstringtext22:	
  7534  2963                     STR_23:	
  7535  2963  340A               	retlw	10
  7536  2964  340D               	retlw	13
  7537  2965  3444               	retlw	68	;'D'
  7538  2966  3461               	retlw	97	;'a'
  7539  2967  3474               	retlw	116	;'t'
  7540  2968  3461               	retlw	97	;'a'
  7541  2969  3453               	retlw	83	;'S'
  7542  296A  3465               	retlw	101	;'e'
  7543  296B  346E               	retlw	110	;'n'
  7544  296C  3464               	retlw	100	;'d'
  7545  296D  3400               	retlw	0
  7546                           
  7547                           	psect	stringtext23
  7548  2978                     __pstringtext23:	
  7549  2978                     STR_18:	
  7550  2978  340A               	retlw	10
  7551  2979  340D               	retlw	13
  7552  297A  3464               	retlw	100	;'d'
  7553  297B  3477               	retlw	119	;'w'
  7554  297C  345F               	retlw	95	;'_'
  7555  297D  346D               	retlw	109	;'m'
  7556  297E  3461               	retlw	97	;'a'
  7557  297F  3469               	retlw	105	;'i'
  7558  2980  346E               	retlw	110	;'n'
  7559  2981  3400               	retlw	0
  7560                           
  7561                           	psect	stringtext24
  7562  2982                     __pstringtext24:	
  7563  2982                     STR_2:	
  7564  2982  3476               	retlw	118	;'v'
  7565  2983  3461               	retlw	97	;'a'
  7566  2984  346C               	retlw	108	;'l'
  7567  2985  343A               	retlw	58	;':'
  7568  2986  3420               	retlw	32	;' '
  7569  2987  3425               	retlw	37	;'%'
  7570  2988  3430               	retlw	48	;'0'
  7571  2989  3432               	retlw	50	;'2'
  7572  298A  3458               	retlw	88	;'X'
  7573  298B  3400               	retlw	0
  7574                           
  7575                           	psect	stringtext25
  7576  298C                     __pstringtext25:	
  7577  298C                     STR_3:	
  7578  298C  3476               	retlw	118	;'v'
  7579  298D  3461               	retlw	97	;'a'
  7580  298E  346C               	retlw	108	;'l'
  7581  298F  343A               	retlw	58	;':'
  7582  2990  3420               	retlw	32	;' '
  7583  2991  3425               	retlw	37	;'%'
  7584  2992  3430               	retlw	48	;'0'
  7585  2993  3434               	retlw	52	;'4'
  7586  2994  3458               	retlw	88	;'X'
  7587  2995  3400               	retlw	0
  7588                           
  7589                           	psect	stringtext26
  7590  2996                     __pstringtext26:	
  7591  2996                     STR_22:	
  7592  2996  340A               	retlw	10
  7593  2997  340D               	retlw	13
  7594  2998  3444               	retlw	68	;'D'
  7595  2999  3457               	retlw	87	;'W'
  7596  299A  344D               	retlw	77	;'M'
  7597  299B  345F               	retlw	95	;'_'
  7598  299C  344F               	retlw	79	;'O'
  7599  299D  344B               	retlw	75	;'K'
  7600  299E  3400               	retlw	0
  7601                           
  7602                           	psect	stringtext27
  7603  29A7                     __pstringtext27:	
  7604  29A7                     STR_29:	
  7605  29A7  3428               	retlw	40	;'('
  7606  29A8  346E               	retlw	110	;'n'
  7607  29A9  3475               	retlw	117	;'u'
  7608  29AA  346C               	retlw	108	;'l'
  7609  29AB  346C               	retlw	108	;'l'
  7610  29AC  3429               	retlw	41	;')'
  7611  29AD  3400               	retlw	0
  7612                           
  7613                           	psect	stringtext28
  7614  0000                     __pstringtext28:	
  7615  291C                     
  7616                           ; #config settings
  7617  0000                     
  7618                           	psect	cinit
  7619  0797                     start_initialization:	
  7620  0797                     __initialization:		;BIGRAM
  7621                           
  7622                           ; Initialize objects allocated to BANK1
  7623  0797  0141               	movlb	1	; select bank1
  7624  0798  3188  2001  3187   	fcall	__pidataBANK1	;fetch initializer
  7625  079B  00EF               	movwf	__pdataBANK1& (0+127)
  7626                           
  7627                           ; Initialize objects allocated to BANK2
  7628  079C  3081               	movlw	low __pidataBANK2
  7629  079D  0084               	movwf	4
  7630  079E  30A3               	movlw	(high __pidataBANK2)| (0+128)
  7631  079F  0085               	movwf	5
  7632  07A0  3020               	movlw	low __pdataBANK2
  7633  07A1  0086               	movwf	6
  7634  07A2  3001               	movlw	high __pdataBANK2
  7635  07A3  0087               	movwf	7
  7636  07A4  3000               	movlw	0
  7637  07A5  00FF               	movwf	btemp+1
  7638  07A6  3026               	movlw	38
  7639  07A7  3180  2004  3187   	fcall	init_ram
  7640                           
  7641                           ; Initialize objects allocated to BANK3
  7642  07AA  301E               	movlw	low __pidataBANK3
  7643  07AB  0084               	movwf	4
  7644  07AC  30A1               	movlw	(high __pidataBANK3)| (0+128)
  7645  07AD  0085               	movwf	5
  7646  07AE  30DA               	movlw	low __pdataBANK3
  7647  07AF  0086               	movwf	6
  7648  07B0  3001               	movlw	high __pdataBANK3
  7649  07B1  0087               	movwf	7
  7650  07B2  3000               	movlw	0
  7651  07B3  00FF               	movwf	btemp+1
  7652  07B4  300F               	movlw	15
  7653  07B5  3180  2004  3187   	fcall	init_ram
  7654                           
  7655                           ; Initialize objects allocated to BANK4
  7656  07B8  3026               	movlw	low __pidataBANK4
  7657  07B9  0084               	movwf	4
  7658  07BA  30A5               	movlw	(high __pidataBANK4)| (0+128)
  7659  07BB  0085               	movwf	5
  7660  07BC  3020               	movlw	low __pdataBANK4
  7661  07BD  0086               	movwf	6
  7662  07BE  3002               	movlw	high __pdataBANK4
  7663  07BF  0087               	movwf	7
  7664  07C0  3000               	movlw	0
  7665  07C1  00FF               	movwf	btemp+1
  7666  07C2  3032               	movlw	50
  7667  07C3  3180  2004  3187   	fcall	init_ram
  7668                           
  7669                           ; Clear objects allocated to BIGRAM
  7670  07C6  30F0               	movlw	low (0+12016)
  7671  07C7  0084               	movwf	4
  7672  07C8  302E               	movlw	high (0+12016)
  7673  07C9  0085               	movwf	5
  7674  07CA  3000               	movlw	0
  7675  07CB  00FE               	movwf	btemp
  7676  07CC  3001               	movlw	1
  7677  07CD  00FF               	movwf	btemp+1
  7678  07CE  31A0  20F7  3187   	fcall	clear_ram0
  7679                           
  7680                           ; Clear objects allocated to BANK1
  7681  07D1  01EE               	clrf	__pbssBANK1& (0+127)
  7682                           
  7683                           ; Clear objects allocated to BANK2
  7684  07D2  3046               	movlw	low __pbssBANK2
  7685  07D3  0084               	movwf	4
  7686  07D4  3001               	movlw	high __pbssBANK2
  7687  07D5  0085               	movwf	5
  7688  07D6  3015               	movlw	21
  7689  07D7  00FE               	movwf	btemp
  7690  07D8  3000               	movlw	0
  7691  07D9  00FF               	movwf	btemp+1
  7692  07DA  31A0  20F7  3187   	fcall	clear_ram0
  7693                           
  7694                           ; Clear objects allocated to BANK3
  7695  07DD  30A0               	movlw	low __pbssBANK3
  7696  07DE  0084               	movwf	4
  7697  07DF  3001               	movlw	high __pbssBANK3
  7698  07E0  0085               	movwf	5
  7699  07E1  303A               	movlw	58
  7700  07E2  00FE               	movwf	btemp
  7701  07E3  3000               	movlw	0
  7702  07E4  00FF               	movwf	btemp+1
  7703  07E5  31A0  20F7  3187   	fcall	clear_ram0
  7704                           
  7705                           ; Clear objects allocated to BANK4
  7706  07E8  3052               	movlw	low __pbssBANK4
  7707  07E9  0084               	movwf	4
  7708  07EA  3002               	movlw	high __pbssBANK4
  7709  07EB  0085               	movwf	5
  7710  07EC  301D               	movlw	29
  7711  07ED  00FE               	movwf	btemp
  7712  07EE  3000               	movlw	0
  7713  07EF  00FF               	movwf	btemp+1
  7714  07F0  31A0  20F7  3187   	fcall	clear_ram0
  7715                           
  7716                           ; Clear objects allocated to BANK5
  7717  07F3  30A0               	movlw	low __pbssBANK5
  7718  07F4  0084               	movwf	4
  7719  07F5  3002               	movlw	high __pbssBANK5
  7720  07F6  0085               	movwf	5
  7721  07F7  302E               	movlw	46
  7722  07F8  00FE               	movwf	btemp
  7723  07F9  3000               	movlw	0
  7724  07FA  00FF               	movwf	btemp+1
  7725  07FB  31A0  20F7         	fcall	clear_ram0
  7726  07FD                     end_of_initialization:	
  7727                           ;End of C runtime variable initialization code
  7728                           
  7729  07FD                     __end_of__initialization:	
  7730  07FD  0140               	movlb	0
  7731  07FE  3199  291E         	ljmp	_main	;jump to C main() function
  7732                           
  7733                           	psect	bssBANK1
  7734  00EE                     __pbssBANK1:	
  7735  00EE                     _pic_active_mode:	
  7736  00EE                     	ds	1
  7737                           
  7738                           	psect	dataBANK1
  7739  00EF                     __pdataBANK1:	
  7740  00EF                     _pdw3000local:	
  7741  00EF                     	ds	1
  7742                           
  7743                           	psect	bssBANK2
  7744  0146                     __pbssBANK2:	
  7745  0146                     _status_reg:	
  7746  0146                     	ds	4
  7747  014A                     _dev_id:	
  7748  014A                     	ds	4
  7749  014E                     _RNG_ADDR:	
  7750  014E                     	ds	2
  7751  0150                     _TAG_ADDR:	
  7752  0150                     	ds	2
  7753  0152                     _EUSART_ErrorHandler:	
  7754  0152                     	ds	2
  7755  0154                     _EUSART_OverrunErrorHandler:	
  7756  0154                     	ds	2
  7757  0156                     _EUSART_FramingErrorHandler:	
  7758  0156                     	ds	2
  7759  0158                     set_MSSSP1_mode@current_mode:	
  7760  0158                     	ds	1
  7761  0159                     _battery_level:	
  7762  0159                     	ds	1
  7763  015A                     _eusartRxLastError:	
  7764  015A                     	ds	1
  7765                           
  7766                           	psect	dataBANK2
  7767  0120                     __pdataBANK2:	
  7768  0120                     process_pmic_status@F15205:	
  7769  0120                     	ds	5
  7770  0125                     process_pmic_status@F15203:	
  7771  0125                     	ds	5
  7772  012A                     process_pmic_status@F15201:	
  7773  012A                     	ds	5
  7774  012F                     process_pmic_status@F15199:	
  7775  012F                     	ds	5
  7776  0134                     process_pmic_status@F15197:	
  7777  0134                     	ds	5
  7778  0139                     process_pmic_status@F15195:	
  7779  0139                     	ds	5
  7780  013E                     process_pmic_status@F15193:	
  7781  013E                     	ds	5
  7782  0143                     _pmic_stat_read_time_count:	
  7783  0143                     	ds	2
  7784  0145                     _pmic_stat_reg:	
  7785  0145                     	ds	1
  7786                           
  7787                           	psect	bssBANK3
  7788  01A0                     __pbssBANK3:	
  7789  01A0                     get_rx_timestamp_u64@F15758:	
  7790  01A0                     	ds	8
  7791  01A8                     get_tx_timestamp_u64@F15754:	
  7792  01A8                     	ds	8
  7793  01B0                     get_sys_timestamp_u64@F15750:	
  7794  01B0                     	ds	8
  7795  01B8                     _prev_ts:	
  7796  01B8                     	ds	8
  7797  01C0                     _resp_rx_ts:	
  7798  01C0                     	ds	8
  7799  01C8                     _poll_tx_ts:	
  7800  01C8                     	ds	8
  7801  01D0                     _I2C_read_buff:	
  7802  01D0                     	ds	10
  7803                           
  7804                           	psect	dataBANK3
  7805  01DA                     __pdataBANK3:	
  7806  01DA                     _ADDR:	
  7807  01DA                     	ds	8
  7808  01E2                     _txconfig_options_ch9:	
  7809  01E2                     	ds	7
  7810                           
  7811                           	psect	bssBANK4
  7812  0252                     __pbssBANK4:	
  7813  0252                     _rx_buffer:	
  7814  0252                     	ds	21
  7815  0267                     _add_time:	
  7816  0267                     	ds	8
  7817                           
  7818                           	psect	dataBANK4
  7819  0220                     __pdataBANK4:	
  7820  0220                     _tx_blink_msg:	
  7821  0220                     	ds	36
  7822  0244                     _config:	
  7823  0244                     	ds	14
  7824                           
  7825                           	psect	bssBANK5
  7826  02A0                     __pbssBANK5:	
  7827  02A0                     _DW3000local:	
  7828  02A0                     	ds	46
  7829                           
  7830                           	psect	inittext
  7831  0004                     init_ram:	
  7832  0004  00FE               	movwf	126
  7833  0005                     initloop:	
  7834  0005  0012               	moviw fsr0++
  7835  0006  001E               	movwi fsr1++
  7836  0007  3001               	movlw	1
  7837  0008  02FE               	subwf	126,f
  7838  0009  3000               	movlw	0
  7839  000A  3BFF               	subwfb	127,f
  7840  000B  087F               	movf	127,w
  7841  000C  047E               	iorwf	126,w
  7842  000D  1903               	btfsc	3,2
  7843  000E  3400               	retlw	0
  7844  000F  2805               	goto	initloop
  7845                           
  7846                           	psect	clrtext
  7847  20F7                     clear_ram0:	
  7848                           ;	Called with FSR0 containing the base address, and
  7849                           ;	btemp/btemp+1 has the size to clear
  7850                           
  7851  20F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  7852  20F8                     clrloop0:	
  7853  20F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  7854  20F9  3101               	addfsr 0,1
  7855  20FA  3001               	movlw	1
  7856  20FB  02FE               	subwf	126,f
  7857  20FC  3000               	movlw	0
  7858  20FD  3BFF               	subwfb	127,f
  7859  20FE  087F               	movf	127,w
  7860  20FF  047E               	iorwf	126,w
  7861  2100  1903               	btfsc	3,2
  7862  2101  3400               	retlw	0	;all done for this memory range, return
  7863  2102  28F8               	goto	clrloop0	;have we reached the end yet?
  7864                           
  7865                           	psect	cstackBANK2
  7866  015B                     __pcstackBANK2:	
  7867  015B                     _dwt_configure$1143:	
  7868                           
  7869                           ; 2 bytes @ 0x0
  7870  015B                     	ds	2
  7871  015D                     dwt_configure@error:	
  7872                           
  7873                           ; 2 bytes @ 0x2
  7874  015D                     	ds	2
  7875  015F                     dwt_configure@sts_mnth:	
  7876                           
  7877                           ; 2 bytes @ 0x4
  7878  015F                     	ds	2
  7879  0161                     dwt_configure@scp:	
  7880                           
  7881                           ; 1 bytes @ 0x6
  7882  0161                     	ds	1
  7883  0162                     dwt_configure@mode:	
  7884                           
  7885                           ; 1 bytes @ 0x7
  7886  0162                     	ds	1
  7887  0163                     dwt_configure@flag:	
  7888                           
  7889                           ; 1 bytes @ 0x8
  7890  0163                     	ds	1
  7891  0164                     _dwt_configure$1141:	
  7892                           
  7893                           ; 1 bytes @ 0x9
  7894  0164                     	ds	1
  7895  0165                     dwt_configure@temp:	
  7896                           
  7897                           ; 4 bytes @ 0xA
  7898  0165                     	ds	4
  7899  0169                     dwt_configure@cnt:	
  7900                           
  7901                           ; 1 bytes @ 0xE
  7902  0169                     	ds	1
  7903  016A                     dwt_configure@sts_len:	
  7904                           
  7905                           ; 2 bytes @ 0xF
  7906  016A                     	ds	2
  7907  016C                     dwt_configure@preamble_len:	
  7908                           
  7909                           ; 2 bytes @ 0x11
  7910  016C                     	ds	2
  7911  016E                     dwt_configure@chan:	
  7912                           
  7913                           ; 1 bytes @ 0x13
  7914  016E                     	ds	1
  7915  016F                     dwt_configure@config:	
  7916                           
  7917                           ; 1 bytes @ 0x14
  7918  016F                     	ds	1
  7919                           
  7920                           	psect	cstackBANK1
  7921  00A0                     __pcstackBANK1:	
  7922  00A0                     ?_dwt_writetodevice:	
  7923  00A0                     ?_dwt_readfromdevice:	
  7924                           ; 1 bytes @ 0x0
  7925                           
  7926  00A0                     ?_dwt_modify32bitoffsetreg:	
  7927                           ; 1 bytes @ 0x0
  7928                           
  7929  00A0                     ?_dwt_modify16bitoffsetreg:	
  7930                           ; 1 bytes @ 0x0
  7931                           
  7932  00A0                     ?_dwt_modify8bitoffsetreg:	
  7933                           ; 1 bytes @ 0x0
  7934                           
  7935  00A0                     dwt_read8bitoffsetreg@regval:	
  7936                           ; 1 bytes @ 0x0
  7937                           
  7938  00A0                     dwt_writetodevice@regFileID:	
  7939                           ; 1 bytes @ 0x0
  7940                           
  7941  00A0                     dwt_readfromdevice@regFileID:	
  7942                           ; 4 bytes @ 0x0
  7943                           
  7944  00A0                     dwt_modify32bitoffsetreg@regFileID:	
  7945                           ; 4 bytes @ 0x0
  7946                           
  7947  00A0                     dwt_modify16bitoffsetreg@regFileID:	
  7948                           ; 4 bytes @ 0x0
  7949                           
  7950  00A0                     dwt_modify8bitoffsetreg@regFileID:	
  7951                           ; 4 bytes @ 0x0
  7952                           
  7953                           
  7954                           ; 4 bytes @ 0x0
  7955  00A0                     	ds	4
  7956  00A4                     dwt_writetodevice@index:	
  7957  00A4                     dwt_readfromdevice@index:	
  7958                           ; 2 bytes @ 0x4
  7959                           
  7960  00A4                     dwt_modify32bitoffsetreg@regOffset:	
  7961                           ; 2 bytes @ 0x4
  7962                           
  7963  00A4                     dwt_modify16bitoffsetreg@regOffset:	
  7964                           ; 4 bytes @ 0x4
  7965                           
  7966  00A4                     dwt_modify8bitoffsetreg@regOffset:	
  7967                           ; 4 bytes @ 0x4
  7968                           
  7969                           
  7970                           ; 4 bytes @ 0x4
  7971  00A4                     	ds	2
  7972  00A6                     dwt_writetodevice@length:	
  7973  00A6                     dwt_readfromdevice@length:	
  7974                           ; 4 bytes @ 0x6
  7975                           
  7976                           
  7977                           ; 4 bytes @ 0x6
  7978  00A6                     	ds	2
  7979  00A8                     dwt_modify8bitoffsetreg@_and:	
  7980  00A8                     dwt_modify16bitoffsetreg@_and:	
  7981                           ; 1 bytes @ 0x8
  7982                           
  7983  00A8                     dwt_modify32bitoffsetreg@_and:	
  7984                           ; 2 bytes @ 0x8
  7985                           
  7986                           
  7987                           ; 4 bytes @ 0x8
  7988  00A8                     	ds	1
  7989  00A9                     dwt_modify8bitoffsetreg@_or:	
  7990                           
  7991                           ; 1 bytes @ 0x9
  7992  00A9                     	ds	1
  7993  00AA                     dwt_readfromdevice@buffer:	
  7994  00AA                     dwt_writetodevice@buffer:	
  7995                           ; 1 bytes @ 0xA
  7996                           
  7997  00AA                     dwt_modify16bitoffsetreg@_or:	
  7998                           ; 2 bytes @ 0xA
  7999                           
  8000                           
  8001                           ; 2 bytes @ 0xA
  8002  00AA                     	ds	1
  8003  00AB                     ??_dwt_read32bitoffsetreg:	
  8004  00AB                     ??_dwt_read16bitoffsetreg:	
  8005                           ; 1 bytes @ 0xB
  8006                           
  8007                           
  8008                           ; 1 bytes @ 0xB
  8009  00AB                     	ds	1
  8010  00AC                     ?_dwt_write32bitoffsetreg:	
  8011  00AC                     ?_dwt_write16bitoffsetreg:	
  8012                           ; 1 bytes @ 0xC
  8013                           
  8014  00AC                     ?_dwt_write8bitoffsetreg:	
  8015                           ; 1 bytes @ 0xC
  8016                           
  8017  00AC                     dwt_write32bitoffsetreg@regFileID:	
  8018                           ; 1 bytes @ 0xC
  8019                           
  8020  00AC                     dwt_write16bitoffsetreg@regFileID:	
  8021                           ; 4 bytes @ 0xC
  8022                           
  8023  00AC                     dwt_write8bitoffsetreg@regFileID:	
  8024                           ; 4 bytes @ 0xC
  8025                           
  8026  00AC                     dwt_modify32bitoffsetreg@_or:	
  8027                           ; 4 bytes @ 0xC
  8028                           
  8029                           
  8030                           ; 4 bytes @ 0xC
  8031  00AC                     	ds	4
  8032  00B0                     dwt_read16bitoffsetreg@regval:	
  8033  00B0                     dwt_write32bitoffsetreg@regOffset:	
  8034                           ; 2 bytes @ 0x10
  8035                           
  8036  00B0                     dwt_write16bitoffsetreg@regOffset:	
  8037                           ; 4 bytes @ 0x10
  8038                           
  8039  00B0                     dwt_write8bitoffsetreg@regOffset:	
  8040                           ; 4 bytes @ 0x10
  8041                           
  8042  00B0                     dwt_modify32bitoffsetreg@buf:	
  8043                           ; 4 bytes @ 0x10
  8044                           
  8045                           
  8046                           ; 8 bytes @ 0x10
  8047  00B0                     	ds	2
  8048  00B2                     dwt_read16bitoffsetreg@buffer:	
  8049                           
  8050                           ; 2 bytes @ 0x12
  8051  00B2                     	ds	1
  8052  00B3                     dwt_read32bitoffsetreg@buffer:	
  8053                           
  8054                           ; 4 bytes @ 0x13
  8055  00B3                     	ds	1
  8056  00B4                     ??_dwt_checkidlerc:	
  8057  00B4                     dwt_write8bitoffsetreg@regval:	
  8058                           ; 1 bytes @ 0x14
  8059                           
  8060  00B4                     dwt_write16bitoffsetreg@regval:	
  8061                           ; 1 bytes @ 0x14
  8062                           
  8063  00B4                     dwt_write32bitoffsetreg@regval:	
  8064                           ; 2 bytes @ 0x14
  8065                           
  8066                           
  8067                           ; 4 bytes @ 0x14
  8068  00B4                     	ds	3
  8069  00B7                     dwt_read32bitoffsetreg@regval:	
  8070                           
  8071                           ; 4 bytes @ 0x17
  8072  00B7                     	ds	1
  8073  00B8                     ?_dwt_setdwstate:	
  8074  00B8                     ?_dwt_configmrxlut:	
  8075                           ; 1 bytes @ 0x18
  8076                           
  8077  00B8                     ?_dwt_writetxfctrl:	
  8078                           ; 1 bytes @ 0x18
  8079                           
  8080  00B8                     ?_dwt_enable_rf_tx:	
  8081                           ; 1 bytes @ 0x18
  8082                           
  8083  00B8                     ?_dwt_enable_rftx_blocks:	
  8084                           ; 1 bytes @ 0x18
  8085                           
  8086  00B8                     ?_dwt_writetxdata:	
  8087                           ; 1 bytes @ 0x18
  8088                           
  8089  00B8                     dwt_setdwstate@state:	
  8090                           ; 2 bytes @ 0x18
  8091                           
  8092  00B8                     dwt_configmrxlut@channel:	
  8093                           ; 2 bytes @ 0x18
  8094                           
  8095  00B8                     dwt_writetxdata@txDataLength:	
  8096                           ; 2 bytes @ 0x18
  8097                           
  8098  00B8                     dwt_writetxfctrl@txFrameLength:	
  8099                           ; 2 bytes @ 0x18
  8100                           
  8101  00B8                     dwt_checkidlerc@reg:	
  8102                           ; 2 bytes @ 0x18
  8103                           
  8104  00B8                     dwt_enable_rf_tx@channel:	
  8105                           ; 4 bytes @ 0x18
  8106                           
  8107  00B8                     dwt_enable_rftx_blocks@channel:	
  8108                           ; 4 bytes @ 0x18
  8109                           
  8110                           
  8111                           ; 4 bytes @ 0x18
  8112  00B8                     	ds	2
  8113  00BA                     ??_dwt_setdwstate:	
  8114  00BA                     dwt_writetxdata@txDataBytes:	
  8115                           ; 1 bytes @ 0x1A
  8116                           
  8117  00BA                     dwt_writetxfctrl@txBufferOffset:	
  8118                           ; 1 bytes @ 0x1A
  8119                           
  8120  00BA                     dwt_configmrxlut@lut0:	
  8121                           ; 2 bytes @ 0x1A
  8122                           
  8123                           
  8124                           ; 4 bytes @ 0x1A
  8125  00BA                     	ds	1
  8126  00BB                     dwt_read32bitoffsetreg@j:	
  8127  00BB                     dwt_writetxdata@txBufferOffset:	
  8128                           ; 2 bytes @ 0x1B
  8129                           
  8130                           
  8131                           ; 2 bytes @ 0x1B
  8132  00BB                     	ds	1
  8133  00BC                     dwt_writetxfctrl@ranging:	
  8134  00BC                     dwt_enable_rf_tx@switch_control:	
  8135                           ; 1 bytes @ 0x1C
  8136                           
  8137                           
  8138                           ; 1 bytes @ 0x1C
  8139  00BC                     	ds	1
  8140  00BD                     ?_dwt_calcbandwidthadj:	
  8141  00BD                     ??_dwt_writetxdata:	
  8142                           ; 1 bytes @ 0x1D
  8143                           
  8144  00BD                     ??_dwt_writetxfctrl:	
  8145                           ; 1 bytes @ 0x1D
  8146                           
  8147  00BD                     ??_dwt_starttx:	
  8148                           ; 1 bytes @ 0x1D
  8149                           
  8150  00BD                     ?_dwt_run_pgfcal:	
  8151                           ; 1 bytes @ 0x1D
  8152                           
  8153  00BD                     ?__dwt_otpread:	
  8154                           ; 2 bytes @ 0x1D
  8155                           
  8156  00BD                     ?_dwt_readdevid:	
  8157                           ; 4 bytes @ 0x1D
  8158                           
  8159  00BD                     __dwt_otpread@address:	
  8160                           ; 4 bytes @ 0x1D
  8161                           
  8162  00BD                     dwt_calcbandwidthadj@target_count:	
  8163                           ; 2 bytes @ 0x1D
  8164                           
  8165                           
  8166                           ; 2 bytes @ 0x1D
  8167  00BD                     	ds	1
  8168  00BE                     dwt_configmrxlut@lut1:	
  8169                           
  8170                           ; 4 bytes @ 0x1E
  8171  00BE                     	ds	1
  8172  00BF                     ??_dwt_run_pgfcal:	
  8173  00BF                     dwt_calcbandwidthadj@channel:	
  8174                           ; 1 bytes @ 0x1F
  8175                           
  8176  00BF                     dwt_starttx@sys_state:	
  8177                           ; 2 bytes @ 0x1F
  8178                           
  8179                           
  8180                           ; 4 bytes @ 0x1F
  8181  00BF                     	ds	2
  8182  00C1                     ??_dwt_calcbandwidthadj:	
  8183  00C1                     ?_dwt_check_dev_id:	
  8184                           ; 1 bytes @ 0x21
  8185                           
  8186  00C1                     dwt_run_pgfcal@data:	
  8187                           ; 2 bytes @ 0x21
  8188                           
  8189  00C1                     __dwt_otpread@ret_data:	
  8190                           ; 4 bytes @ 0x21
  8191                           
  8192                           
  8193                           ; 4 bytes @ 0x21
  8194  00C1                     	ds	1
  8195  00C2                     dwt_configmrxlut@lut2:	
  8196                           
  8197                           ; 4 bytes @ 0x22
  8198  00C2                     	ds	1
  8199  00C3                     ??_dwt_configuretxrf:	
  8200  00C3                     dwt_starttx@retval:	
  8201                           ; 1 bytes @ 0x23
  8202                           
  8203                           
  8204                           ; 2 bytes @ 0x23
  8205  00C3                     	ds	2
  8206  00C5                     ?_dwt_initialise:	
  8207  00C5                     dwt_configuretxrf@channel:	
  8208                           ; 2 bytes @ 0x25
  8209                           
  8210  00C5                     dwt_run_pgfcal@flag:	
  8211                           ; 1 bytes @ 0x25
  8212                           
  8213  00C5                     dwt_initialise@mode:	
  8214                           ; 1 bytes @ 0x25
  8215                           
  8216  00C5                     dwt_starttx@checkTxOK:	
  8217                           ; 2 bytes @ 0x25
  8218                           
  8219                           
  8220                           ; 2 bytes @ 0x25
  8221  00C5                     	ds	1
  8222  00C6                     dwt_configuretxrf@config:	
  8223  00C6                     dwt_run_pgfcal@result:	
  8224                           ; 1 bytes @ 0x26
  8225                           
  8226  00C6                     dwt_configmrxlut@lut3:	
  8227                           ; 2 bytes @ 0x26
  8228                           
  8229                           
  8230                           ; 4 bytes @ 0x26
  8231  00C6                     	ds	1
  8232  00C7                     ??_dwt_initialise:	
  8233  00C7                     dwt_starttx@mode:	
  8234                           ; 1 bytes @ 0x27
  8235                           
  8236                           
  8237                           ; 1 bytes @ 0x27
  8238  00C7                     	ds	1
  8239  00C8                     dwt_run_pgfcal@val:	
  8240                           
  8241                           ; 4 bytes @ 0x28
  8242  00C8                     	ds	2
  8243  00CA                     dwt_configmrxlut@lut4:	
  8244                           
  8245                           ; 4 bytes @ 0x2A
  8246  00CA                     	ds	1
  8247  00CB                     dwt_writetxfctrl@reg32:	
  8248                           
  8249                           ; 4 bytes @ 0x2B
  8250  00CB                     	ds	1
  8251  00CC                     dwt_run_pgfcal@cnt:	
  8252  00CC                     dwt_initialise@ldo_tune_lo:	
  8253                           ; 1 bytes @ 0x2C
  8254                           
  8255                           
  8256                           ; 4 bytes @ 0x2C
  8257  00CC                     	ds	1
  8258  00CD                     ?_dwt_pgf_cal:	
  8259  00CD                     dwt_pgf_cal@ldoen:	
  8260                           ; 2 bytes @ 0x2D
  8261                           
  8262                           
  8263                           ; 2 bytes @ 0x2D
  8264  00CD                     	ds	1
  8265  00CE                     dwt_configmrxlut@lut5:	
  8266                           
  8267                           ; 4 bytes @ 0x2E
  8268  00CE                     	ds	1
  8269  00CF                     ??_transmitt_beacon_pkt:	
  8270  00CF                     dwt_pgf_cal@temp:	
  8271                           ; 1 bytes @ 0x2F
  8272                           
  8273                           
  8274                           ; 2 bytes @ 0x2F
  8275  00CF                     	ds	1
  8276  00D0                     dwt_initialise@ldo_tune_hi:	
  8277                           
  8278                           ; 4 bytes @ 0x30
  8279  00D0                     	ds	1
  8280  00D1                     dwt_pgf_cal@val:	
  8281                           
  8282                           ; 2 bytes @ 0x31
  8283  00D1                     	ds	1
  8284  00D2                     dwt_configmrxlut@lut6:	
  8285                           
  8286                           ; 4 bytes @ 0x32
  8287  00D2                     	ds	4
  8288  00D6                     ?_dwt_configure:	
  8289                           
  8290                           ; 2 bytes @ 0x36
  8291  00D6                     	ds	2
  8292  00D8                     ??_dwt_configure:	
  8293                           
  8294                           ; 1 bytes @ 0x38
  8295  00D8                     	ds	19
  8296  00EB                     ??_dw_main:	
  8297                           
  8298                           ; 1 bytes @ 0x4B
  8299  00EB                     	ds	1
  8300  00EC                     ??_main:	
  8301                           
  8302                           ; 1 bytes @ 0x4C
  8303  00EC                     	ds	2
  8304                           
  8305                           	psect	cstackCOMMON
  8306  0070                     __pcstackCOMMON:	
  8307  0070                     ?_isdigit:	
  8308  0070                     ?_OSCILLATOR_Initialize:	
  8309                           ; 1 bit 
  8310                           
  8311  0070                     ??_OSCILLATOR_Initialize:	
  8312                           ; 1 bytes @ 0x0
  8313                           
  8314  0070                     ?_PMD_Initialize:	
  8315                           ; 1 bytes @ 0x0
  8316                           
  8317  0070                     ??_PMD_Initialize:	
  8318                           ; 1 bytes @ 0x0
  8319                           
  8320  0070                     ?_EUSART_Initialize:	
  8321                           ; 1 bytes @ 0x0
  8322                           
  8323  0070                     ??_EUSART_Initialize:	
  8324                           ; 1 bytes @ 0x0
  8325                           
  8326  0070                     ?_set_MSSSP1_mode:	
  8327                           ; 1 bytes @ 0x0
  8328                           
  8329  0070                     ?_init_bq25895:	
  8330                           ; 1 bytes @ 0x0
  8331                           
  8332  0070                     ?_dw_main:	
  8333                           ; 1 bytes @ 0x0
  8334                           
  8335  0070                     ?_pmic_status_read:	
  8336                           ; 1 bytes @ 0x0
  8337                           
  8338  0070                     ?_transmitt_beacon_pkt:	
  8339                           ; 1 bytes @ 0x0
  8340                           
  8341  0070                     ?_dwt_generatecrc8:	
  8342                           ; 1 bytes @ 0x0
  8343                           
  8344  0070                     ?_dwt_checkidlerc:	
  8345                           ; 1 bytes @ 0x0
  8346                           
  8347  0070                     ?_dwt_setplenfine:	
  8348                           ; 1 bytes @ 0x0
  8349                           
  8350  0070                     ?_i2c_start:	
  8351                           ; 1 bytes @ 0x0
  8352                           
  8353  0070                     ??_i2c_start:	
  8354                           ; 1 bytes @ 0x0
  8355                           
  8356  0070                     ?_i2c_write:	
  8357                           ; 1 bytes @ 0x0
  8358                           
  8359  0070                     ??_i2c_write:	
  8360                           ; 1 bytes @ 0x0
  8361                           
  8362  0070                     ?_i2c_stop:	
  8363                           ; 1 bytes @ 0x0
  8364                           
  8365  0070                     ??_i2c_stop:	
  8366                           ; 1 bytes @ 0x0
  8367                           
  8368  0070                     ?_i2c_restart:	
  8369                           ; 1 bytes @ 0x0
  8370                           
  8371  0070                     ??_i2c_restart:	
  8372                           ; 1 bytes @ 0x0
  8373                           
  8374  0070                     ?_i2c_read:	
  8375                           ; 1 bytes @ 0x0
  8376                           
  8377  0070                     ??_i2c_read:	
  8378                           ; 1 bytes @ 0x0
  8379                           
  8380  0070                     ?_i2c_init:	
  8381                           ; 1 bytes @ 0x0
  8382                           
  8383  0070                     ??_i2c_init:	
  8384                           ; 1 bytes @ 0x0
  8385                           
  8386  0070                     ?_memset:	
  8387                           ; 1 bytes @ 0x0
  8388                           
  8389  0070                     ??_isdigit:	
  8390                           ; 1 bytes @ 0x0
  8391                           
  8392  0070                     ?_PIN_MANAGER_Initialize:	
  8393                           ; 1 bytes @ 0x0
  8394                           
  8395  0070                     ??_PIN_MANAGER_Initialize:	
  8396                           ; 1 bytes @ 0x0
  8397                           
  8398  0070                     ?_SYSTEM_Initialize:	
  8399                           ; 1 bytes @ 0x0
  8400                           
  8401  0070                     ?_EUSART_Write:	
  8402                           ; 1 bytes @ 0x0
  8403                           
  8404  0070                     ??_EUSART_Write:	
  8405                           ; 1 bytes @ 0x0
  8406                           
  8407  0070                     ?_SPI1_Open:	
  8408                           ; 1 bytes @ 0x0
  8409                           
  8410  0070                     ??_SPI1_Open:	
  8411                           ; 1 bytes @ 0x0
  8412                           
  8413  0070                     ?_SPI1_ExchangeByte:	
  8414                           ; 1 bytes @ 0x0
  8415                           
  8416  0070                     ??_SPI1_ExchangeByte:	
  8417                           ; 1 bytes @ 0x0
  8418                           
  8419  0070                     ?_main:	
  8420                           ; 1 bytes @ 0x0
  8421                           
  8422  0070                     ?_Sleep:	
  8423                           ; 1 bytes @ 0x0
  8424                           
  8425  0070                     ?__dwt_prog_ldo_and_bias_tune:	
  8426                           ; 1 bytes @ 0x0
  8427                           
  8428  0070                     ?__dwt_kick_dgc_on_wakeup:	
  8429                           ; 1 bytes @ 0x0
  8430                           
  8431  0070                     ?_dwt_configuretxrf:	
  8432                           ; 1 bytes @ 0x0
  8433                           
  8434  0070                     ?_dwt_disable_rf_tx:	
  8435                           ; 1 bytes @ 0x0
  8436                           
  8437  0070                     ?_dwt_disable_rftx_blocks:	
  8438                           ; 1 bytes @ 0x0
  8439                           
  8440  0070                     ?_reset_DWIC:	
  8441                           ; 1 bytes @ 0x0
  8442                           
  8443  0070                     ?_copybits8:	
  8444                           ; 1 bytes @ 0x0
  8445                           
  8446  0070                     ?_bq25895_WDT_reset:	
  8447                           ; 1 bytes @ 0x0
  8448                           
  8449  0070                     ?_dwt_starttx:	
  8450                           ; 1 bytes @ 0x0
  8451                           
  8452  0070                     ?___wmul:	
  8453                           ; 2 bytes @ 0x0
  8454                           
  8455  0070                     ?___lwdiv:	
  8456                           ; 2 bytes @ 0x0
  8457                           
  8458  0070                     ?___ftpack:	
  8459                           ; 2 bytes @ 0x0
  8460                           
  8461  0070                     ?___lmul:	
  8462                           ; 3 bytes @ 0x0
  8463                           
  8464  0070                     PIN_MANAGER_Initialize@state:	
  8465                           ; 4 bytes @ 0x0
  8466                           
  8467  0070                     EUSART_Write@txData:	
  8468                           ; 1 bytes @ 0x0
  8469                           
  8470  0070                     SPI1_ExchangeByte@data:	
  8471                           ; 1 bytes @ 0x0
  8472                           
  8473  0070                     copybits8@mask:	
  8474                           ; 1 bytes @ 0x0
  8475                           
  8476  0070                     i2c_write@data:	
  8477                           ; 1 bytes @ 0x0
  8478                           
  8479  0070                     i2c_read@ack:	
  8480                           ; 1 bytes @ 0x0
  8481                           
  8482  0070                     _isdigit$2606:	
  8483                           ; 1 bytes @ 0x0
  8484                           
  8485  0070                     dwt_generatecrc8@byteArray:	
  8486                           ; 1 bytes @ 0x0
  8487                           
  8488  0070                     ___wmul@multiplier:	
  8489                           ; 2 bytes @ 0x0
  8490                           
  8491  0070                     ___lwdiv@divisor:	
  8492                           ; 2 bytes @ 0x0
  8493                           
  8494  0070                     memset@c:	
  8495                           ; 2 bytes @ 0x0
  8496                           
  8497  0070                     ___ftpack@arg:	
  8498                           ; 2 bytes @ 0x0
  8499                           
  8500  0070                     Sleep@time:	
  8501                           ; 3 bytes @ 0x0
  8502                           
  8503  0070                     ___lmul@multiplier:	
  8504                           ; 4 bytes @ 0x0
  8505                           
  8506                           
  8507                           ; 4 bytes @ 0x0
  8508  0070                     	ds	1
  8509  0071                     ?_i2c_multi_write:	
  8510  0071                     ?_i2c_single_read:	
  8511                           ; 1 bytes @ 0x1
  8512                           
  8513  0071                     ?_i2c_single_write:	
  8514                           ; 1 bytes @ 0x1
  8515                           
  8516  0071                     ??_SYSTEM_Initialize:	
  8517                           ; 1 bytes @ 0x1
  8518                           
  8519  0071                     ?_printf_string:	
  8520                           ; 1 bytes @ 0x1
  8521                           
  8522  0071                     ?_putch:	
  8523                           ; 1 bytes @ 0x1
  8524                           
  8525  0071                     ?_SPI1_WriteBlock:	
  8526                           ; 1 bytes @ 0x1
  8527                           
  8528  0071                     ?_SPI1_ReadBlock:	
  8529                           ; 1 bytes @ 0x1
  8530                           
  8531  0071                     ?_i2c_multi_read:	
  8532                           ; 1 bytes @ 0x1
  8533                           
  8534  0071                     putch@txData:	
  8535                           ; 2 bytes @ 0x1
  8536                           
  8537  0071                     copybits8@new_value:	
  8538                           ; 1 bytes @ 0x1
  8539                           
  8540  0071                     i2c_multi_write@reg_addr:	
  8541                           ; 1 bytes @ 0x1
  8542                           
  8543  0071                     i2c_multi_read@reg_addr:	
  8544                           ; 1 bytes @ 0x1
  8545                           
  8546  0071                     i2c_single_write@reg_addr:	
  8547                           ; 1 bytes @ 0x1
  8548                           
  8549  0071                     i2c_single_read@reg_addr:	
  8550                           ; 1 bytes @ 0x1
  8551                           
  8552  0071                     isdigit@c:	
  8553                           ; 1 bytes @ 0x1
  8554                           
  8555  0071                     printf_string@data:	
  8556                           ; 1 bytes @ 0x1
  8557                           
  8558  0071                     SPI1_WriteBlock@block:	
  8559                           ; 2 bytes @ 0x1
  8560                           
  8561  0071                     SPI1_ReadBlock@block:	
  8562                           ; 2 bytes @ 0x1
  8563                           
  8564                           
  8565                           ; 2 bytes @ 0x1
  8566  0071                     	ds	1
  8567  0072                     ??_i2c_single_read:	
  8568  0072                     ??_putch:	
  8569                           ; 1 bytes @ 0x2
  8570                           
  8571  0072                     ??_copybits8:	
  8572                           ; 1 bytes @ 0x2
  8573                           
  8574  0072                     copybits8@value:	
  8575                           ; 1 bytes @ 0x2
  8576                           
  8577  0072                     i2c_multi_write@data:	
  8578                           ; 1 bytes @ 0x2
  8579                           
  8580  0072                     i2c_single_write@data:	
  8581                           ; 1 bytes @ 0x2
  8582                           
  8583  0072                     dwt_generatecrc8@len:	
  8584                           ; 1 bytes @ 0x2
  8585                           
  8586  0072                     i2c_multi_read@data:	
  8587                           ; 2 bytes @ 0x2
  8588                           
  8589  0072                     ___wmul@multiplicand:	
  8590                           ; 2 bytes @ 0x2
  8591                           
  8592  0072                     ___lwdiv@dividend:	
  8593                           ; 2 bytes @ 0x2
  8594                           
  8595  0072                     memset@n:	
  8596                           ; 2 bytes @ 0x2
  8597                           
  8598                           
  8599                           ; 2 bytes @ 0x2
  8600  0072                     	ds	1
  8601  0073                     ??_i2c_single_write:	
  8602  0073                     ??_printf_string:	
  8603                           ; 1 bytes @ 0x3
  8604                           
  8605  0073                     i2c_multi_write@length:	
  8606                           ; 1 bytes @ 0x3
  8607                           
  8608  0073                     i2c_single_read@I2C_rsp:	
  8609                           ; 1 bytes @ 0x3
  8610                           
  8611  0073                     ___ftpack@exp:	
  8612                           ; 1 bytes @ 0x3
  8613                           
  8614  0073                     SPI1_WriteBlock@blockSize:	
  8615                           ; 1 bytes @ 0x3
  8616                           
  8617  0073                     SPI1_ReadBlock@blockSize:	
  8618                           ; 2 bytes @ 0x3
  8619                           
  8620                           
  8621                           ; 2 bytes @ 0x3
  8622  0073                     	ds	1
  8623  0074                     ??_i2c_multi_write:	
  8624  0074                     ??_memset:	
  8625                           ; 1 bytes @ 0x4
  8626                           
  8627  0074                     ??_Sleep:	
  8628                           ; 1 bytes @ 0x4
  8629                           
  8630  0074                     ??___wmul:	
  8631                           ; 1 bytes @ 0x4
  8632                           
  8633  0074                     ??___lwdiv:	
  8634                           ; 1 bytes @ 0x4
  8635                           
  8636  0074                     dwt_generatecrc8@crcRemainderInit:	
  8637                           ; 1 bytes @ 0x4
  8638                           
  8639  0074                     i2c_multi_read@length:	
  8640                           ; 1 bytes @ 0x4
  8641                           
  8642  0074                     i2c_single_write@I2C_rsp:	
  8643                           ; 1 bytes @ 0x4
  8644                           
  8645  0074                     i2c_single_read@I2C_data:	
  8646                           ; 1 bytes @ 0x4
  8647                           
  8648  0074                     ___ftpack@sign:	
  8649                           ; 1 bytes @ 0x4
  8650                           
  8651  0074                     ___wmul@product:	
  8652                           ; 1 bytes @ 0x4
  8653                           
  8654  0074                     ___lmul@multiplicand:	
  8655                           ; 2 bytes @ 0x4
  8656                           
  8657                           
  8658                           ; 4 bytes @ 0x4
  8659  0074                     	ds	1
  8660  0075                     ??_dwt_generatecrc8:	
  8661  0075                     ??_i2c_multi_read:	
  8662                           ; 1 bytes @ 0x5
  8663                           
  8664  0075                     ??___ftpack:	
  8665                           ; 1 bytes @ 0x5
  8666                           
  8667  0075                     ??_SPI1_WriteBlock:	
  8668                           ; 1 bytes @ 0x5
  8669                           
  8670  0075                     ??_SPI1_ReadBlock:	
  8671                           ; 1 bytes @ 0x5
  8672                           
  8673  0075                     SPI1_Open@spi1UniqueConfiguration:	
  8674                           ; 1 bytes @ 0x5
  8675                           
  8676  0075                     i2c_single_write@device_addr:	
  8677                           ; 1 bytes @ 0x5
  8678                           
  8679  0075                     i2c_single_read@device_addr:	
  8680                           ; 1 bytes @ 0x5
  8681                           
  8682  0075                     memset@p1:	
  8683                           ; 1 bytes @ 0x5
  8684                           
  8685  0075                     SPI1_WriteBlock@data:	
  8686                           ; 1 bytes @ 0x5
  8687                           
  8688  0075                     ___lwdiv@quotient:	
  8689                           ; 2 bytes @ 0x5
  8690                           
  8691  0075                     Sleep@i:	
  8692                           ; 2 bytes @ 0x5
  8693                           
  8694                           
  8695                           ; 4 bytes @ 0x5
  8696  0075                     	ds	1
  8697  0076                     ??_set_MSSSP1_mode:	
  8698  0076                     ??_bq25895_WDT_reset:	
  8699                           ; 1 bytes @ 0x6
  8700                           
  8701  0076                     dwt_generatecrc8@data:	
  8702                           ; 1 bytes @ 0x6
  8703                           
  8704  0076                     i2c_multi_write@device_addr:	
  8705                           ; 1 bytes @ 0x6
  8706                           
  8707  0076                     memset@p:	
  8708                           ; 1 bytes @ 0x6
  8709                           
  8710  0076                     SPI1_ReadBlock@data:	
  8711                           ; 1 bytes @ 0x6
  8712                           
  8713                           
  8714                           ; 2 bytes @ 0x6
  8715  0076                     	ds	1
  8716  0077                     ??_writetospiwithcrc:	
  8717  0077                     ??_writetospi:	
  8718                           ; 1 bytes @ 0x7
  8719                           
  8720  0077                     i2c_multi_write@I2C_rsp:	
  8721                           ; 1 bytes @ 0x7
  8722                           
  8723  0077                     set_MSSSP1_mode@state:	
  8724                           ; 1 bytes @ 0x7
  8725                           
  8726  0077                     ___lwdiv@counter:	
  8727                           ; 1 bytes @ 0x7
  8728                           
  8729  0077                     dwt_generatecrc8@byte:	
  8730                           ; 1 bytes @ 0x7
  8731                           
  8732                           
  8733                           ; 2 bytes @ 0x7
  8734  0077                     	ds	1
  8735  0078                     ??_readfromspi:	
  8736  0078                     ?_lipo_battery_level:	
  8737                           ; 1 bytes @ 0x8
  8738                           
  8739  0078                     ??___lmul:	
  8740                           ; 1 bytes @ 0x8
  8741                           
  8742  0078                     ?___lwmod:	
  8743                           ; 1 bytes @ 0x8
  8744                           
  8745  0078                     ?___lltoft:	
  8746                           ; 2 bytes @ 0x8
  8747                           
  8748  0078                     i2c_multi_write@j:	
  8749                           ; 3 bytes @ 0x8
  8750                           
  8751  0078                     set_MSSSP1_mode@mode:	
  8752                           ; 1 bytes @ 0x8
  8753                           
  8754  0078                     lipo_battery_level@battery_volt:	
  8755                           ; 1 bytes @ 0x8
  8756                           
  8757  0078                     ___lwmod@divisor:	
  8758                           ; 2 bytes @ 0x8
  8759                           
  8760  0078                     ___lmul@product:	
  8761                           ; 2 bytes @ 0x8
  8762                           
  8763  0078                     ___lltoft@c:	
  8764                           ; 4 bytes @ 0x8
  8765                           
  8766                           
  8767                           ; 4 bytes @ 0x8
  8768  0078                     	ds	1
  8769  0079                     ??_reset_DWIC:	
  8770  0079                     bq25895_WDT_reset@Reg_03_value:	
  8771                           ; 1 bytes @ 0x9
  8772                           
  8773                           
  8774                           ; 1 bytes @ 0x9
  8775  0079                     	ds	1
  8776  007A                     ??_lipo_battery_level:	
  8777  007A                     i2c_multi_read@I2C_rsp:	
  8778                           ; 1 bytes @ 0xA
  8779                           
  8780  007A                     ___lwmod@dividend:	
  8781                           ; 1 bytes @ 0xA
  8782                           
  8783                           
  8784                           ; 2 bytes @ 0xA
  8785  007A                     	ds	1
  8786  007B                     i2c_multi_read@device_addr:	
  8787  007B                     lipo_battery_level@battery_level_cal:	
  8788                           ; 1 bytes @ 0xB
  8789                           
  8790                           
  8791                           ; 1 bytes @ 0xB
  8792  007B                     	ds	1
  8793  007C                     ?_process_pmic_status:	
  8794  007C                     ??___lltoft:	
  8795                           ; 1 bytes @ 0xC
  8796                           
  8797  007C                     ??___lwmod:	
  8798                           ; 1 bytes @ 0xC
  8799                           
  8800  007C                     i2c_multi_read@j:	
  8801                           ; 1 bytes @ 0xC
  8802                           
  8803  007C                     process_pmic_status@length:	
  8804                           ; 1 bytes @ 0xC
  8805                           
  8806                           
  8807                           ; 1 bytes @ 0xC
  8808  007C                     	ds	1
  8809  007D                     ___lltoft@exp:	
  8810  007D                     ___lwmod@counter:	
  8811                           ; 1 bytes @ 0xD
  8812                           
  8813                           
  8814                           ; 1 bytes @ 0xD
  8815  007D                     	ds	1
  8816  007E                     ??__fassert:	
  8817  007E                     ??_dwt_check_dev_id:	
  8818                           ; 1 bytes @ 0xE
  8819                           
  8820  007E                     ??__dwt_otpread:	
  8821                           ; 1 bytes @ 0xE
  8822                           
  8823  007E                     ??_dwt_force_clocks:	
  8824                           ; 1 bytes @ 0xE
  8825                           
  8826  007E                     ??_dwt_pgf_cal:	
  8827                           ; 1 bytes @ 0xE
  8828                           
  8829  007E                     ??_dwt_writetodevice:	
  8830                           ; 1 bytes @ 0xE
  8831                           
  8832  007E                     ??_dwt_readfromdevice:	
  8833                           ; 1 bytes @ 0xE
  8834                           
  8835  007E                     ??_dwt_read8bitoffsetreg:	
  8836                           ; 1 bytes @ 0xE
  8837                           
  8838  007E                     ??_dwt_write8bitoffsetreg:	
  8839                           ; 1 bytes @ 0xE
  8840                           
  8841  007E                     ??__dwt_kick_dgc_on_wakeup:	
  8842                           ; 1 bytes @ 0xE
  8843                           
  8844  007E                     ??_dwt_readdevid:	
  8845                           ; 1 bytes @ 0xE
  8846                           
  8847  007E                     ??_dwt_configmrxlut:	
  8848                           ; 1 bytes @ 0xE
  8849                           
  8850  007E                     ??_dwt_setrxantennadelay:	
  8851                           ; 1 bytes @ 0xE
  8852                           
  8853  007E                     ??_dwt_settxantennadelay:	
  8854                           ; 1 bytes @ 0xE
  8855                           
  8856  007E                     ??_dwt_disable_rf_tx:	
  8857                           ; 1 bytes @ 0xE
  8858                           
  8859  007E                     ??_dwt_enable_rf_tx:	
  8860                           ; 1 bytes @ 0xE
  8861                           
  8862  007E                     ??_dwt_enable_rftx_blocks:	
  8863                           ; 1 bytes @ 0xE
  8864                           
  8865  007E                     ??_dwt_disable_rftx_blocks:	
  8866                           ; 1 bytes @ 0xE
  8867                           
  8868                           
  8869                           	psect	cstackBANK0
  8870  0020                     __pcstackBANK0:	
  8871                           ; 1 bytes @ 0xE
  8872                           
  8873  0020                     ??_init_bq25895:	
  8874  0020                     ??_process_pmic_status:	
  8875                           ; 1 bytes @ 0x0
  8876                           
  8877  0020                     ?_writetospiwithcrc:	
  8878                           ; 1 bytes @ 0x0
  8879                           
  8880  0020                     ?_writetospi:	
  8881                           ; 2 bytes @ 0x0
  8882                           
  8883  0020                     ?_readfromspi:	
  8884                           ; 2 bytes @ 0x0
  8885                           
  8886  0020                     ?_get_sts_mnth:	
  8887                           ; 2 bytes @ 0x0
  8888                           
  8889  0020                     ?__doprnt:	
  8890                           ; 2 bytes @ 0x0
  8891                           
  8892  0020                     ?___ftmul:	
  8893                           ; 2 bytes @ 0x0
  8894                           
  8895  0020                     get_sts_mnth@cipher:	
  8896                           ; 3 bytes @ 0x0
  8897                           
  8898  0020                     writetospiwithcrc@headerLength:	
  8899                           ; 2 bytes @ 0x0
  8900                           
  8901  0020                     writetospi@headerLength:	
  8902                           ; 2 bytes @ 0x0
  8903                           
  8904  0020                     readfromspi@headerLength:	
  8905                           ; 2 bytes @ 0x0
  8906                           
  8907  0020                     __doprnt@f:	
  8908                           ; 2 bytes @ 0x0
  8909                           
  8910  0020                     ___ftmul@f1:	
  8911                           ; 2 bytes @ 0x0
  8912                           
  8913                           
  8914                           ; 3 bytes @ 0x0
  8915  0020                     	ds	2
  8916  0022                     get_sts_mnth@threshold:	
  8917  0022                     writetospiwithcrc@headerBuffer:	
  8918                           ; 1 bytes @ 0x2
  8919                           
  8920  0022                     writetospi@headerBuffer:	
  8921                           ; 1 bytes @ 0x2
  8922                           
  8923  0022                     readfromspi@headerBuffer:	
  8924                           ; 1 bytes @ 0x2
  8925                           
  8926  0022                     __doprnt@ap:	
  8927                           ; 1 bytes @ 0x2
  8928                           
  8929  0022                     process_pmic_status@led_off:	
  8930                           ; 1 bytes @ 0x2
  8931                           
  8932                           
  8933                           ; 5 bytes @ 0x2
  8934  0022                     	ds	1
  8935  0023                     ??__doprnt:	
  8936  0023                     get_sts_mnth@shift_val:	
  8937                           ; 1 bytes @ 0x3
  8938                           
  8939  0023                     init_bq25895@I2C_rsp:	
  8940                           ; 1 bytes @ 0x3
  8941                           
  8942  0023                     ___ftmul@f2:	
  8943                           ; 1 bytes @ 0x3
  8944                           
  8945  0023                     writetospiwithcrc@bodyLength:	
  8946                           ; 3 bytes @ 0x3
  8947                           
  8948  0023                     writetospi@bodyLength:	
  8949                           ; 4 bytes @ 0x3
  8950                           
  8951  0023                     readfromspi@readlength:	
  8952                           ; 4 bytes @ 0x3
  8953                           
  8954                           
  8955                           ; 4 bytes @ 0x3
  8956  0023                     	ds	1
  8957  0024                     ??_get_sts_mnth:	
  8958  0024                     init_bq25895@I2c_buff:	
  8959                           ; 1 bytes @ 0x4
  8960                           
  8961                           
  8962                           ; 9 bytes @ 0x4
  8963  0024                     	ds	2
  8964  0026                     ??___ftmul:	
  8965                           
  8966                           ; 1 bytes @ 0x6
  8967  0026                     	ds	1
  8968  0027                     __doprnt@idx:	
  8969  0027                     writetospiwithcrc@bodyBuffer:	
  8970                           ; 1 bytes @ 0x7
  8971                           
  8972  0027                     writetospi@bodyBuffer:	
  8973                           ; 2 bytes @ 0x7
  8974                           
  8975  0027                     readfromspi@readBuffer:	
  8976                           ; 2 bytes @ 0x7
  8977                           
  8978  0027                     process_pmic_status@led_data:	
  8979                           ; 2 bytes @ 0x7
  8980                           
  8981                           
  8982                           ; 5 bytes @ 0x7
  8983  0027                     	ds	1
  8984  0028                     __doprnt@prec:	
  8985  0028                     get_sts_mnth@mod_val:	
  8986                           ; 1 bytes @ 0x8
  8987                           
  8988                           
  8989                           ; 2 bytes @ 0x8
  8990  0028                     	ds	1
  8991  0029                     writetospiwithcrc@crc8:	
  8992  0029                     __doprnt@len:	
  8993                           ; 1 bytes @ 0x9
  8994                           
  8995                           
  8996                           ; 2 bytes @ 0x9
  8997  0029                     	ds	1
  8998  002A                     ___ftmul@exp:	
  8999  002A                     get_sts_mnth@value:	
  9000                           ; 1 bytes @ 0xA
  9001                           
  9002                           
  9003                           ; 4 bytes @ 0xA
  9004  002A                     	ds	1
  9005  002B                     __doprnt@cp:	
  9006  002B                     ___ftmul@f3_as_product:	
  9007                           ; 2 bytes @ 0xB
  9008                           
  9009                           
  9010                           ; 3 bytes @ 0xB
  9011  002B                     	ds	1
  9012  002C                     process_pmic_status@led_off_1972:	
  9013                           
  9014                           ; 5 bytes @ 0xC
  9015  002C                     	ds	1
  9016  002D                     __doprnt@val:	
  9017                           
  9018                           ; 2 bytes @ 0xD
  9019  002D                     	ds	1
  9020  002E                     ___ftmul@cntr:	
  9021                           
  9022                           ; 1 bytes @ 0xE
  9023  002E                     	ds	1
  9024  002F                     __doprnt@flag:	
  9025  002F                     ___ftmul@sign:	
  9026                           ; 1 bytes @ 0xF
  9027                           
  9028                           
  9029                           ; 1 bytes @ 0xF
  9030  002F                     	ds	1
  9031  0030                     ?___fttol:	
  9032  0030                     __doprnt@width:	
  9033                           ; 4 bytes @ 0x10
  9034                           
  9035  0030                     ___fttol@f1:	
  9036                           ; 2 bytes @ 0x10
  9037                           
  9038                           
  9039                           ; 3 bytes @ 0x10
  9040  0030                     	ds	1
  9041  0031                     process_pmic_status@led_data_1974:	
  9042                           
  9043                           ; 5 bytes @ 0x11
  9044  0031                     	ds	1
  9045  0032                     __doprnt@c:	
  9046                           
  9047                           ; 1 bytes @ 0x12
  9048  0032                     	ds	1
  9049  0033                     __doprnt@pb:	
  9050                           
  9051                           ; 1 bytes @ 0x13
  9052  0033                     	ds	1
  9053  0034                     ??___fttol:	
  9054  0034                     ?_printf:	
  9055                           ; 1 bytes @ 0x14
  9056                           
  9057  0034                     printf@f:	
  9058                           ; 2 bytes @ 0x14
  9059                           
  9060                           
  9061                           ; 2 bytes @ 0x14
  9062  0034                     	ds	2
  9063  0036                     process_pmic_status@led_off_1976:	
  9064                           
  9065                           ; 5 bytes @ 0x16
  9066  0036                     	ds	2
  9067  0038                     ___fttol@sign1:	
  9068                           
  9069                           ; 1 bytes @ 0x18
  9070  0038                     	ds	1
  9071  0039                     ___fttol@lval:	
  9072                           
  9073                           ; 4 bytes @ 0x19
  9074  0039                     	ds	2
  9075  003B                     process_pmic_status@led_data_1978:	
  9076                           
  9077                           ; 5 bytes @ 0x1B
  9078  003B                     	ds	1
  9079  003C                     ??_printf:	
  9080                           
  9081                           ; 1 bytes @ 0x1C
  9082  003C                     	ds	1
  9083  003D                     ___fttol@exp1:	
  9084  003D                     printf@ap:	
  9085                           ; 1 bytes @ 0x1D
  9086                           
  9087                           
  9088                           ; 1 bytes @ 0x1D
  9089  003D                     	ds	1
  9090  003E                     printf@pb:	
  9091                           
  9092                           ; 3 bytes @ 0x1E
  9093  003E                     	ds	2
  9094  0040                     process_pmic_status@led_off_1980:	
  9095                           
  9096                           ; 5 bytes @ 0x20
  9097  0040                     	ds	1
  9098  0041                     ?__fassert:	
  9099  0041                     __fassert@line:	
  9100                           ; 1 bytes @ 0x21
  9101                           
  9102                           
  9103                           ; 2 bytes @ 0x21
  9104  0041                     	ds	2
  9105  0043                     __fassert@file:	
  9106                           
  9107                           ; 2 bytes @ 0x23
  9108  0043                     	ds	2
  9109  0045                     process_pmic_status@VBUS_STAT:	
  9110  0045                     __fassert@exp:	
  9111                           ; 1 bytes @ 0x25
  9112                           
  9113                           
  9114                           ; 2 bytes @ 0x25
  9115  0045                     	ds	1
  9116  0046                     process_pmic_status@SDP_STAT:	
  9117                           
  9118                           ; 1 bytes @ 0x26
  9119  0046                     	ds	1
  9120  0047                     ?_dwt_xfer3000:	
  9121  0047                     process_pmic_status@VSYS_STAT:	
  9122                           ; 1 bytes @ 0x27
  9123                           
  9124  0047                     dwt_xfer3000@regFileID:	
  9125                           ; 1 bytes @ 0x27
  9126                           
  9127                           
  9128                           ; 4 bytes @ 0x27
  9129  0047                     	ds	1
  9130  0048                     process_pmic_status@battery_volt:	
  9131                           
  9132                           ; 2 bytes @ 0x28
  9133  0048                     	ds	2
  9134  004A                     process_pmic_status@PG_STAT:	
  9135                           
  9136                           ; 1 bytes @ 0x2A
  9137  004A                     	ds	1
  9138  004B                     process_pmic_status@CHRG_STAT:	
  9139  004B                     dwt_xfer3000@indx:	
  9140                           ; 1 bytes @ 0x2B
  9141                           
  9142                           
  9143                           ; 2 bytes @ 0x2B
  9144  004B                     	ds	1
  9145  004C                     process_pmic_status@status:	
  9146                           
  9147                           ; 1 bytes @ 0x2C
  9148  004C                     	ds	1
  9149  004D                     ??_pmic_status_read:	
  9150  004D                     dwt_xfer3000@length:	
  9151                           ; 1 bytes @ 0x2D
  9152                           
  9153                           
  9154                           ; 4 bytes @ 0x2D
  9155  004D                     	ds	2
  9156  004F                     pmic_status_read@interrupt_state:	
  9157                           
  9158                           ; 1 bytes @ 0x2F
  9159  004F                     	ds	2
  9160  0051                     dwt_xfer3000@buffer:	
  9161                           
  9162                           ; 2 bytes @ 0x31
  9163  0051                     	ds	2
  9164  0053                     dwt_xfer3000@mode:	
  9165                           
  9166                           ; 2 bytes @ 0x33
  9167  0053                     	ds	2
  9168  0055                     ??_dwt_xfer3000:	
  9169                           
  9170                           ; 1 bytes @ 0x35
  9171  0055                     	ds	8
  9172  005D                     dwt_xfer3000@reg_file:	
  9173                           
  9174                           ; 2 bytes @ 0x3D
  9175  005D                     	ds	2
  9176  005F                     dwt_xfer3000@addr:	
  9177                           
  9178                           ; 2 bytes @ 0x3F
  9179  005F                     	ds	2
  9180  0061                     dwt_xfer3000@crc8:	
  9181                           
  9182                           ; 1 bytes @ 0x41
  9183  0061                     	ds	1
  9184  0062                     dwt_xfer3000@reg_offset:	
  9185                           
  9186                           ; 2 bytes @ 0x42
  9187  0062                     	ds	2
  9188  0064                     dwt_xfer3000@header:	
  9189                           
  9190                           ; 2 bytes @ 0x44
  9191  0064                     	ds	2
  9192  0066                     dwt_xfer3000@cnt:	
  9193                           
  9194                           ; 2 bytes @ 0x46
  9195  0066                     	ds	2
  9196  0068                     ??_dwt_setplenfine:	
  9197  0068                     ?_dwt_read8bitoffsetreg:	
  9198                           ; 1 bytes @ 0x48
  9199                           
  9200  0068                     ??_dwt_write32bitoffsetreg:	
  9201                           ; 1 bytes @ 0x48
  9202                           
  9203  0068                     ??_dwt_write16bitoffsetreg:	
  9204                           ; 1 bytes @ 0x48
  9205                           
  9206  0068                     ??_dwt_modify32bitoffsetreg:	
  9207                           ; 1 bytes @ 0x48
  9208                           
  9209  0068                     ??_dwt_modify16bitoffsetreg:	
  9210                           ; 1 bytes @ 0x48
  9211                           
  9212  0068                     ??_dwt_modify8bitoffsetreg:	
  9213                           ; 1 bytes @ 0x48
  9214                           
  9215  0068                     ?_dwt_read16bitoffsetreg:	
  9216                           ; 1 bytes @ 0x48
  9217                           
  9218  0068                     ?_dwt_read32bitoffsetreg:	
  9219                           ; 2 bytes @ 0x48
  9220                           
  9221  0068                     dwt_read32bitoffsetreg@regFileID:	
  9222                           ; 4 bytes @ 0x48
  9223                           
  9224  0068                     dwt_read16bitoffsetreg@regFileID:	
  9225                           ; 4 bytes @ 0x48
  9226                           
  9227  0068                     dwt_read8bitoffsetreg@regFileID:	
  9228                           ; 4 bytes @ 0x48
  9229                           
  9230                           
  9231                           ; 4 bytes @ 0x48
  9232  0068                     	ds	1
  9233  0069                     dwt_setplenfine@preambleLength:	
  9234  0069                     dwt_write16bitoffsetreg@buffer:	
  9235                           ; 1 bytes @ 0x49
  9236                           
  9237  0069                     dwt_modify8bitoffsetreg@buf:	
  9238                           ; 2 bytes @ 0x49
  9239                           
  9240  0069                     dwt_write32bitoffsetreg@buffer:	
  9241                           ; 2 bytes @ 0x49
  9242                           
  9243  0069                     dwt_modify16bitoffsetreg@buf:	
  9244                           ; 4 bytes @ 0x49
  9245                           
  9246                           
  9247                           ; 4 bytes @ 0x49
  9248  0069                     	ds	2
  9249  006B                     ?_dwt_force_clocks:	
  9250  006B                     ?_dwt_setrxantennadelay:	
  9251                           ; 1 bytes @ 0x4B
  9252                           
  9253  006B                     ?_dwt_settxantennadelay:	
  9254                           ; 1 bytes @ 0x4B
  9255                           
  9256  006B                     dwt_setrxantennadelay@rxDelay:	
  9257                           ; 1 bytes @ 0x4B
  9258                           
  9259  006B                     dwt_settxantennadelay@txDelay:	
  9260                           ; 2 bytes @ 0x4B
  9261                           
  9262  006B                     dwt_force_clocks@clocks:	
  9263                           ; 2 bytes @ 0x4B
  9264                           
  9265                           
  9266                           ; 2 bytes @ 0x4B
  9267  006B                     	ds	1
  9268  006C                     dwt_read32bitoffsetreg@regOffset:	
  9269  006C                     dwt_read16bitoffsetreg@regOffset:	
  9270                           ; 4 bytes @ 0x4C
  9271                           
  9272  006C                     dwt_read8bitoffsetreg@regOffset:	
  9273                           ; 4 bytes @ 0x4C
  9274                           
  9275                           
  9276                           ; 4 bytes @ 0x4C
  9277  006C                     	ds	1
  9278  006D                     ??__dwt_prog_ldo_and_bias_tune:	
  9279  006D                     __dwt_kick_dgc_on_wakeup@channel:	
  9280                           ; 1 bytes @ 0x4D
  9281                           
  9282  006D                     dwt_write32bitoffsetreg@j:	
  9283                           ; 1 bytes @ 0x4D
  9284                           
  9285  006D                     dwt_force_clocks@regvalue0:	
  9286                           ; 2 bytes @ 0x4D
  9287                           
  9288                           
  9289                           ; 2 bytes @ 0x4D
  9290  006D                     	ds	2
  9291  006F                     dwt_disable_rf_tx@switch_config:	
  9292                           
  9293                           ; 1 bytes @ 0x4F
  9294  006F                     	ds	1
  9295                           
  9296                           	psect	maintext
  9297  191E                     __pmaintext:	
  9298 ;;
  9299 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9300 ;;
  9301 ;; *************** function _main *****************
  9302 ;; Defined at:
  9303 ;;		line 66 in file "main.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : B3F/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9319 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9320 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9321 ;;Total ram usage:        2 bytes
  9322 ;; Hardware stack levels required when called:   12
  9323 ;; This function calls:
  9324 ;;		_SYSTEM_Initialize
  9325 ;;		_dw_main
  9326 ;;		_init_bq25895
  9327 ;;		_pmic_status_read
  9328 ;;		_printf_string
  9329 ;;		_set_MSSSP1_mode
  9330 ;;		_transmitt_beacon_pkt
  9331 ;; This function is called by:
  9332 ;;		Startup code after reset
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           
  9337                           ;psect for function _main
  9338  191E                     _main:	
  9339                           
  9340                           ;main.c: 68: SYSTEM_Initialize();
  9341                           
  9342                           ;incstack = 0
  9343                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9344  191E  31A0  20EB  3199   	fcall	_SYSTEM_Initialize
  9345                           
  9346                           ;main.c: 70: printf_string("\n\rUWB_TAG_DWM3000_PIC");
  9347  1921  307A               	movlw	low (STR_1| (0+32768))
  9348  1922  00F1               	movwf	printf_string@data
  9349  1923  30A8               	movlw	high (STR_1| (0+32768))
  9350  1924  00F2               	movwf	printf_string@data+1
  9351  1925  31A1  213D  3199   	fcall	_printf_string
  9352                           
  9353                           ;main.c: 72: set_MSSSP1_mode(2);
  9354  1928  3002               	movlw	2
  9355  1929  3190  2019  3199   	fcall	_set_MSSSP1_mode
  9356                           
  9357                           ;main.c: 73: init_bq25895();
  9358  192C  3190  20B3  3199   	fcall	_init_bq25895
  9359                           
  9360                           ;main.c: 74: _delay((unsigned long)((50)*(32000000/4000.0)));
  9361  192F  3003               	movlw	3
  9362  1930  0141               	movlb	1	; select bank1
  9363  1931  00ED               	movwf	(??_main^(0+128)+1)
  9364  1932  3008               	movlw	8
  9365  1933  00EC               	movwf	??_main^(0+128)
  9366  1934  3077               	movlw	119
  9367  1935                     u8527:	
  9368  1935  0B89               	decfsz	9,f
  9369  1936  2935               	goto	u8527
  9370  1937  0BEC               	decfsz	??_main^(0+128),f
  9371  1938  2935               	goto	u8527
  9372  1939  0BED               	decfsz	(??_main^(0+128)+1),f
  9373  193A  2935               	goto	u8527
  9374                           
  9375                           ;main.c: 76: do { ODCONAbits.ODCA6 = 0; } while(0);
  9376  193B  017E               	movlb	62	; select bank62
  9377  193C  133A               	bcf	58,6	;volatile
  9378                           
  9379                           ;main.c: 77: do { LATAbits.LATA6 = 0; } while(0);
  9380  193D  0140               	movlb	0	; select bank0
  9381  193E  1316               	bcf	22,6	;volatile
  9382                           
  9383                           ;main.c: 78: do { ODCONAbits.ODCA7 = 0; } while(0);
  9384  193F  017E               	movlb	62	; select bank62
  9385  1940  13BA               	bcf	58,7	;volatile
  9386                           
  9387                           ;main.c: 79: do { LATAbits.LATA7 = 1; } while(0);
  9388  1941  0140               	movlb	0	; select bank0
  9389  1942  1796               	bsf	22,7	;volatile
  9390                           
  9391                           ;main.c: 80: do { ODCONBbits.ODCB4 = 1; } while(0);
  9392  1943  017E               	movlb	62	; select bank62
  9393  1944  1645               	bsf	69,4	;volatile
  9394                           
  9395                           ;main.c: 81: do { LATBbits.LATB4 = 1; } while(0);
  9396  1945  0140               	movlb	0	; select bank0
  9397  1946  1617               	bsf	23,4	;volatile
  9398                           
  9399                           ;main.c: 83: set_MSSSP1_mode(1);
  9400  1947  3001               	movlw	1
  9401  1948  3190  2019  3199   	fcall	_set_MSSSP1_mode
  9402                           
  9403                           ;main.c: 84: _delay((unsigned long)((2)*(32000000/4000.0)));
  9404  194B  3015               	movlw	21
  9405  194C  0141               	movlb	1	; select bank1
  9406  194D  00EC               	movwf	??_main^(0+128)
  9407  194E  30C6               	movlw	198
  9408  194F                     u8537:	
  9409  194F  0B89               	decfsz	9,f
  9410  1950  294F               	goto	u8537
  9411  1951  0BEC               	decfsz	??_main^(0+128),f
  9412  1952  294F               	goto	u8537
  9413  1953  0000               	nop
  9414                           
  9415                           ;main.c: 85: dw_main();
  9416  1954  319A  22D2  3199   	fcall	_dw_main
  9417  1957                     l312:	
  9418                           ;main.c: 87: while(1)
  9419                           
  9420                           
  9421                           ;main.c: 88: {
  9422                           ;main.c: 89: pmic_status_read();
  9423  1957  319E  26DD  3199   	fcall	_pmic_status_read
  9424                           
  9425                           ;main.c: 90: set_MSSSP1_mode(1);
  9426  195A  3001               	movlw	1
  9427  195B  3190  2019  3199   	fcall	_set_MSSSP1_mode
  9428                           
  9429                           ;main.c: 91: transmitt_beacon_pkt();
  9430  195E  31A4  249E  3199   	fcall	_transmitt_beacon_pkt
  9431                           
  9432                           ;main.c: 92: _delay((unsigned long)((300)*(32000000/4000.0)));
  9433  1961  300D               	movlw	13
  9434  1962  0141               	movlb	1	; select bank1
  9435  1963  00ED               	movwf	(??_main^(0+128)+1)
  9436  1964  302D               	movlw	45
  9437  1965  00EC               	movwf	??_main^(0+128)
  9438  1966  30D7               	movlw	215
  9439  1967                     u8547:	
  9440  1967  0B89               	decfsz	9,f
  9441  1968  2967               	goto	u8547
  9442  1969  0BEC               	decfsz	??_main^(0+128),f
  9443  196A  2967               	goto	u8547
  9444  196B  0BED               	decfsz	(??_main^(0+128)+1),f
  9445  196C  2967               	goto	u8547
  9446  196D  3200               	nop2
  9447  196E  2957               	goto	l312
  9448  196F                     __end_of_main:	
  9449                           
  9450                           	psect	text1
  9451  249E                     __ptext1:	
  9452 ;; *************** function _transmitt_beacon_pkt *****************
  9453 ;; Defined at:
  9454 ;;		line 179 in file "decawave.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9470 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9471 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9472 ;;Total ram usage:        1 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    9
  9475 ;; This function calls:
  9476 ;;		_dwt_starttx
  9477 ;;		_dwt_writetxdata
  9478 ;;		_dwt_writetxfctrl
  9479 ;;		_printf_string
  9480 ;; This function is called by:
  9481 ;;		_main
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           
  9486                           ;psect for function _transmitt_beacon_pkt
  9487  249E                     _transmitt_beacon_pkt:	
  9488                           
  9489                           ;decawave.c: 182: printf_string("\n\rDataSend");
  9490                           
  9491                           ;incstack = 0
  9492                           ; Regs used in _transmitt_beacon_pkt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9493  249E  3063               	movlw	low (STR_23| (0+32768))
  9494  249F  00F1               	movwf	printf_string@data
  9495  24A0  30A9               	movlw	high (STR_23| (0+32768))
  9496  24A1  00F2               	movwf	printf_string@data+1
  9497  24A2  31A1  213D  31A4   	fcall	_printf_string
  9498                           
  9499                           ;decawave.c: 184: tx_blink_msg[2]++;
  9500  24A5  3001               	movlw	1
  9501  24A6  0141               	movlb	1	; select bank1
  9502  24A7  00CF               	movwf	??_transmitt_beacon_pkt^(0+128)
  9503  24A8  084F               	movf	??_transmitt_beacon_pkt^(0+128),w
  9504  24A9  0144               	movlb	4	; select bank4
  9505  24AA  07A2               	addwf	(_tx_blink_msg^(0+512)+2),f
  9506                           
  9507                           ;decawave.c: 185: dwt_writetxdata(sizeof(tx_blink_msg), tx_blink_msg, 0);
  9508  24AB  3024               	movlw	36
  9509  24AC  0141               	movlb	1	; select bank1
  9510  24AD  00B8               	movwf	dwt_writetxdata@txDataLength^(0+128)
  9511  24AE  3000               	movlw	0
  9512  24AF  00B9               	movwf	(dwt_writetxdata@txDataLength^(0+128)+1)
  9513  24B0  3020               	movlw	(low (_tx_blink_msg| (0+512)))& (0+255)
  9514  24B1  00CF               	movwf	??_transmitt_beacon_pkt^(0+128)
  9515  24B2  084F               	movf	??_transmitt_beacon_pkt^(0+128),w
  9516  24B3  00BA               	movwf	dwt_writetxdata@txDataBytes^(0+128)
  9517  24B4  3000               	movlw	0
  9518  24B5  00BB               	movwf	dwt_writetxdata@txBufferOffset^(0+128)
  9519  24B6  00BC               	movwf	(dwt_writetxdata@txBufferOffset+1)^(0+128)
  9520  24B7  319D  25D9  31A4   	fcall	_dwt_writetxdata
  9521                           
  9522                           ;decawave.c: 186: dwt_writetxfctrl(sizeof(tx_blink_msg), 0, 0);
  9523  24BA  3024               	movlw	36
  9524  24BB  0141               	movlb	1	; select bank1
  9525  24BC  00B8               	movwf	dwt_writetxfctrl@txFrameLength^(0+128)
  9526  24BD  3000               	movlw	0
  9527  24BE  00B9               	movwf	(dwt_writetxfctrl@txFrameLength^(0+128)+1)
  9528  24BF  3000               	movlw	0
  9529  24C0  00BA               	movwf	dwt_writetxfctrl@txBufferOffset^(0+128)
  9530  24C1  00BB               	movwf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128)
  9531  24C2  01BC               	clrf	dwt_writetxfctrl@ranging^(0+128)
  9532  24C3  3193  238F  31A4   	fcall	_dwt_writetxfctrl
  9533                           
  9534                           ;decawave.c: 187: dwt_starttx(0x00);
  9535  24C6  3000               	movlw	0
  9536  24C7  3188  2002         	fcall	_dwt_starttx
  9537  24C9  0008               	return
  9538  24CA                     __end_of_transmitt_beacon_pkt:	
  9539                           
  9540                           	psect	text2
  9541  1EDD                     __ptext2:	
  9542 ;; *************** function _pmic_status_read *****************
  9543 ;; Defined at:
  9544 ;;		line 94 in file "pic_control_fun.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  interrupt_st    1   47[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9561 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9562 ;;Total ram usage:        3 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    4
  9565 ;; This function calls:
  9566 ;;		_bq25895_WDT_reset
  9567 ;;		_i2c_multi_read
  9568 ;;		_i2c_single_read
  9569 ;;		_i2c_single_write
  9570 ;;		_init_bq25895
  9571 ;;		_memset
  9572 ;;		_printf
  9573 ;;		_process_pmic_status
  9574 ;;		_set_MSSSP1_mode
  9575 ;; This function is called by:
  9576 ;;		_main
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           
  9581                           ;psect for function _pmic_status_read
  9582  1EDD                     _pmic_status_read:	
  9583                           
  9584                           ;pic_control_fun.c: 97: bool interrupt_state = (bool)GIE;
  9585                           
  9586                           ;incstack = 0
  9587                           ; Regs used in _pmic_status_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9588  1EDD  3000               	movlw	0
  9589  1EDE  1B8B               	btfsc	11,7	;volatile
  9590  1EDF  3001               	movlw	1
  9591  1EE0  0140               	movlb	0	; select bank0
  9592  1EE1  00CF               	movwf	pmic_status_read@interrupt_state
  9593                           
  9594                           ;pic_control_fun.c: 99: pmic_stat_read_time_count += (300 / 100);
  9595  1EE2  3003               	movlw	3
  9596  1EE3  0142               	movlb	2	; select bank2
  9597  1EE4  07C3               	addwf	_pmic_stat_read_time_count^(0+256),f
  9598  1EE5  3000               	movlw	0
  9599  1EE6  3DC4               	addwfc	(_pmic_stat_read_time_count+1)^(0+256),f
  9600                           
  9601                           ;pic_control_fun.c: 101: if(pmic_stat_read_time_count >= 30)
  9602  1EE7  3000               	movlw	0
  9603  1EE8  0244               	subwf	(_pmic_stat_read_time_count+1)^(0+256),w
  9604  1EE9  301E               	movlw	30
  9605  1EEA  1903               	skipnz
  9606  1EEB  0243               	subwf	_pmic_stat_read_time_count^(0+256),w
  9607  1EEC  1C03               	skipc
  9608  1EED  0008               	return
  9609                           
  9610                           ;pic_control_fun.c: 102: {
  9611                           ;pic_control_fun.c: 104: printf("\n\rpmic_batt_read_and_wdt_clr");
  9612  1EEE  3043               	movlw	low (STR_27| (0+32768))
  9613  1EEF  0140               	movlb	0	; select bank0
  9614  1EF0  00B4               	movwf	printf@f
  9615  1EF1  30A8               	movlw	high (STR_27| (0+32768))
  9616  1EF2  00B5               	movwf	printf@f+1
  9617  1EF3  31A1  2151  319E   	fcall	_printf
  9618                           
  9619                           ;pic_control_fun.c: 106: pmic_stat_read_time_count = 0;
  9620  1EF6  0142               	movlb	2	; select bank2
  9621  1EF7  01C3               	clrf	_pmic_stat_read_time_count^(0+256)
  9622  1EF8  01C4               	clrf	(_pmic_stat_read_time_count+1)^(0+256)
  9623                           
  9624                           ;pic_control_fun.c: 107: set_MSSSP1_mode(2);
  9625  1EF9  3002               	movlw	2
  9626  1EFA  3190  2019  319E   	fcall	_set_MSSSP1_mode
  9627                           
  9628                           ;pic_control_fun.c: 109: interrupt_state = (bool)GIE;
  9629  1EFD  3000               	movlw	0
  9630  1EFE  1B8B               	btfsc	11,7	;volatile
  9631  1EFF  3001               	movlw	1
  9632  1F00  0140               	movlb	0	; select bank0
  9633  1F01  00CF               	movwf	pmic_status_read@interrupt_state
  9634                           
  9635                           ;pic_control_fun.c: 110: GIE = 0;
  9636  1F02  138B               	bcf	11,7	;volatile
  9637                           
  9638                           ;pic_control_fun.c: 111: I2C_read_buff[0] = i2c_single_read(0xD4, 0x02);
  9639  1F03  3002               	movlw	2
  9640  1F04  00CD               	movwf	??_pmic_status_read
  9641  1F05  084D               	movf	??_pmic_status_read,w
  9642  1F06  00F1               	movwf	i2c_single_read@reg_addr
  9643  1F07  30D4               	movlw	212
  9644  1F08  31A3  23F7  319E   	fcall	_i2c_single_read
  9645  1F0B  0140               	movlb	0	; select bank0
  9646  1F0C  00CE               	movwf	??_pmic_status_read+1
  9647  1F0D  084E               	movf	??_pmic_status_read+1,w
  9648  1F0E  0143               	movlb	3	; select bank3
  9649  1F0F  00D0               	movwf	_I2C_read_buff^(0+384)
  9650                           
  9651                           ;pic_control_fun.c: 112: if((I2C_read_buff[0] & 0b00000001) == 0x01)
  9652  1F10  1C50               	btfss	_I2C_read_buff^(0+384),0
  9653  1F11  2F26               	goto	l8057
  9654                           
  9655                           ;pic_control_fun.c: 113: {
  9656                           ;pic_control_fun.c: 115: printf("\n\rBQ25895_re_init");
  9657  1F12  30C9               	movlw	low (STR_28| (0+32768))
  9658  1F13  0140               	movlb	0	; select bank0
  9659  1F14  00B4               	movwf	printf@f
  9660  1F15  30A8               	movlw	high (STR_28| (0+32768))
  9661  1F16  00B5               	movwf	printf@f+1
  9662  1F17  31A1  2151  319E   	fcall	_printf
  9663                           
  9664                           ;pic_control_fun.c: 117: init_bq25895();
  9665  1F1A  3190  20B3  319E   	fcall	_init_bq25895
  9666                           
  9667                           ;pic_control_fun.c: 118: _delay((unsigned long)((5)*(32000000/4000.0)));
  9668  1F1D  3034               	movlw	52
  9669  1F1E  0140               	movlb	0	; select bank0
  9670  1F1F  00CD               	movwf	??_pmic_status_read
  9671  1F20  30F1               	movlw	241
  9672  1F21                     u8557:	
  9673  1F21  0B89               	decfsz	9,f
  9674  1F22  2F21               	goto	u8557
  9675  1F23  0BCD               	decfsz	??_pmic_status_read,f
  9676  1F24  2F21               	goto	u8557
  9677  1F25  3200               	nop2
  9678  1F26                     l8057:	
  9679                           
  9680                           ;pic_control_fun.c: 119: }
  9681                           ;pic_control_fun.c: 120: I2C_read_buff[0] = (uint8_t)((I2C_read_buff[0] & 0b00111111) | 
      +                          (uint8_t)0b10000000);
  9682  1F26  0143               	movlb	3	; select bank3
  9683  1F27  0850               	movf	_I2C_read_buff^(0+384),w
  9684  1F28  393F               	andlw	63
  9685  1F29  3880               	iorlw	128
  9686  1F2A  0140               	movlb	0	; select bank0
  9687  1F2B  00CD               	movwf	??_pmic_status_read
  9688  1F2C  084D               	movf	??_pmic_status_read,w
  9689  1F2D  0143               	movlb	3	; select bank3
  9690  1F2E  00D0               	movwf	_I2C_read_buff^(0+384)
  9691                           
  9692                           ;pic_control_fun.c: 121: i2c_single_write(0xD4, 0x02, I2C_read_buff[0]);
  9693  1F2F  3002               	movlw	2
  9694  1F30  0140               	movlb	0	; select bank0
  9695  1F31  00CD               	movwf	??_pmic_status_read
  9696  1F32  084D               	movf	??_pmic_status_read,w
  9697  1F33  00F1               	movwf	i2c_single_write@reg_addr
  9698  1F34  0143               	movlb	3	; select bank3
  9699  1F35  0850               	movf	_I2C_read_buff^(0+384),w
  9700  1F36  0140               	movlb	0	; select bank0
  9701  1F37  00CE               	movwf	??_pmic_status_read+1
  9702  1F38  084E               	movf	??_pmic_status_read+1,w
  9703  1F39  00F2               	movwf	i2c_single_write@data
  9704  1F3A  30D4               	movlw	212
  9705  1F3B  31A2  2293  319E   	fcall	_i2c_single_write
  9706                           
  9707                           ;pic_control_fun.c: 122: bq25895_WDT_reset();
  9708  1F3E  31A3  235B  319E   	fcall	_bq25895_WDT_reset
  9709                           
  9710                           ;pic_control_fun.c: 124: memset((void*)I2C_read_buff, 0, 10);
  9711  1F41  3000               	movlw	0
  9712  1F42  00F0               	movwf	memset@c
  9713  1F43  00F1               	movwf	memset@c+1
  9714  1F44  300A               	movlw	10
  9715  1F45  00F2               	movwf	memset@n
  9716  1F46  3000               	movlw	0
  9717  1F47  00F3               	movwf	memset@n+1
  9718  1F48  30D0               	movlw	(low (_I2C_read_buff| (0+256)))& (0+255)
  9719  1F49  31A1  21EC  319E   	fcall	_memset
  9720                           
  9721                           ;pic_control_fun.c: 125: i2c_multi_read(0xD4, pmic_stat_reg, I2C_read_buff, 10);
  9722  1F4C  0142               	movlb	2	; select bank2
  9723  1F4D  0845               	movf	_pmic_stat_reg^(0+256),w
  9724  1F4E  0140               	movlb	0	; select bank0
  9725  1F4F  00CD               	movwf	??_pmic_status_read
  9726  1F50  084D               	movf	??_pmic_status_read,w
  9727  1F51  00F1               	movwf	i2c_multi_read@reg_addr
  9728  1F52  30D0               	movlw	low _I2C_read_buff
  9729  1F53  00F2               	movwf	i2c_multi_read@data
  9730  1F54  3001               	movlw	high _I2C_read_buff
  9731  1F55  00F3               	movwf	i2c_multi_read@data+1
  9732  1F56  300A               	movlw	10
  9733  1F57  00CE               	movwf	??_pmic_status_read+1
  9734  1F58  084E               	movf	??_pmic_status_read+1,w
  9735  1F59  00F4               	movwf	i2c_multi_read@length
  9736  1F5A  30D4               	movlw	212
  9737  1F5B  3198  20D2  319E   	fcall	_i2c_multi_read
  9738                           
  9739                           ;pic_control_fun.c: 126: GIE = interrupt_state;
  9740  1F5E  0140               	movlb	0	; select bank0
  9741  1F5F  1C4F               	btfss	pmic_status_read@interrupt_state,0
  9742  1F60  2F63               	goto	u8500
  9743  1F61  178B               	bsf	11,7	;volatile
  9744  1F62  2F64               	goto	l8069
  9745  1F63                     u8500:	
  9746  1F63  138B               	bcf	11,7	;volatile
  9747  1F64                     l8069:	
  9748                           
  9749                           ;pic_control_fun.c: 128: process_pmic_status(I2C_read_buff, 10);
  9750  1F64  300A               	movlw	10
  9751  1F65  0140               	movlb	0	; select bank0
  9752  1F66  00CD               	movwf	??_pmic_status_read
  9753  1F67  084D               	movf	??_pmic_status_read,w
  9754  1F68  00FC               	movwf	process_pmic_status@length
  9755  1F69  30D0               	movlw	(low (_I2C_read_buff| (0+256)))& (0+255)
  9756  1F6A  3180  2010         	fcall	_process_pmic_status
  9757  1F6C  0008               	return
  9758  1F6D                     __end_of_pmic_status_read:	
  9759                           
  9760                           	psect	text3
  9761  1019                     __ptext3:	
  9762 ;; *************** function _set_MSSSP1_mode *****************
  9763 ;; Defined at:
  9764 ;;		line 14 in file "pic_control_fun.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  mode            1    wreg     unsigned char 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  mode            1    8[COMMON] unsigned char 
  9769 ;;  state           1    7[COMMON] unsigned char 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9783 ;;Total ram usage:        3 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    2
  9786 ;; This function calls:
  9787 ;;		_SPI1_Open
  9788 ;;		_i2c_init
  9789 ;;		_printf_string
  9790 ;; This function is called by:
  9791 ;;		_main
  9792 ;;		_pmic_status_read
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           
  9797                           ;psect for function _set_MSSSP1_mode
  9798  1019                     _set_MSSSP1_mode:	
  9799                           
  9800                           ;incstack = 0
  9801                           ; Regs used in _set_MSSSP1_mode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9802                           ;set_MSSSP1_mode@mode stored from wreg
  9803  1019  00F8               	movwf	set_MSSSP1_mode@mode
  9804                           
  9805                           ;pic_control_fun.c: 16: static uint8_t current_mode;
  9806                           ;pic_control_fun.c: 18: if(current_mode != mode)
  9807  101A  0142               	movlb	2	; select bank2
  9808  101B  0858               	movf	set_MSSSP1_mode@current_mode^(0+256),w
  9809  101C  0678               	xorwf	set_MSSSP1_mode@mode,w
  9810  101D  1903               	skipnz
  9811  101E  0008               	return
  9812                           
  9813                           ;pic_control_fun.c: 19: {
  9814                           ;pic_control_fun.c: 20: bool state = (bool)GIE;
  9815  101F  3000               	movlw	0
  9816  1020  1B8B               	btfsc	11,7	;volatile
  9817  1021  3001               	movlw	1
  9818  1022  00F7               	movwf	set_MSSSP1_mode@state
  9819                           
  9820                           ;pic_control_fun.c: 21: GIE = 0;
  9821  1023  138B               	bcf	11,7	;volatile
  9822                           
  9823                           ;pic_control_fun.c: 22: PPSLOCK = 0x55;
  9824  1024  3055               	movlw	85
  9825  1025  017D               	movlb	61	; select bank61
  9826  1026  008F               	movwf	15	;volsfr
  9827                           
  9828                           ;pic_control_fun.c: 23: PPSLOCK = 0xAA;
  9829  1027  30AA               	movlw	170
  9830  1028  008F               	movwf	15	;volsfr
  9831                           
  9832                           ;pic_control_fun.c: 24: PPSLOCKbits.PPSLOCKED = 0x00;
  9833  1029  100F               	bcf	15,0	;volsfr
  9834                           
  9835                           ;pic_control_fun.c: 25: if(mode == 1)
  9836  102A  0378               	decf	set_MSSSP1_mode@mode,w
  9837  102B  1D03               	btfss	3,2
  9838  102C  2872               	goto	l6199
  9839                           
  9840                           ;pic_control_fun.c: 26: {
  9841                           ;pic_control_fun.c: 28: printf_string("\n\rMSSSP set as SPI");
  9842  102D  30A3               	movlw	low (STR_25| (0+32768))
  9843  102E  00F1               	movwf	printf_string@data
  9844  102F  30A8               	movlw	high (STR_25| (0+32768))
  9845  1030  00F2               	movwf	printf_string@data+1
  9846  1031  31A1  213D  3190   	fcall	_printf_string
  9847                           
  9848                           ;pic_control_fun.c: 30: current_mode = 1;
  9849  1034  0142               	movlb	2	; select bank2
  9850  1035  01D8               	clrf	set_MSSSP1_mode@current_mode^(0+256)
  9851  1036  0AD8               	incf	set_MSSSP1_mode@current_mode^(0+256),f
  9852                           
  9853                           ;pic_control_fun.c: 32: RC3PPS = 0x0F;
  9854  1037  300F               	movlw	15
  9855  1038  017E               	movlb	62	; select bank62
  9856  1039  00A3               	movwf	35	;volatile
  9857                           
  9858                           ;pic_control_fun.c: 33: RC4PPS = 0x0F;
  9859  103A  300F               	movlw	15
  9860  103B  00A4               	movwf	36	;volatile
  9861                           
  9862                           ;pic_control_fun.c: 34: SSP1STAT = 0x00;
  9863  103C  0143               	movlb	3	; select bank3
  9864  103D  018F               	clrf	15	;volatile
  9865                           
  9866                           ;pic_control_fun.c: 35: SSP1CON1 = 0x00;
  9867  103E  0190               	clrf	16	;volatile
  9868                           
  9869                           ;pic_control_fun.c: 36: SSP1CON3 = 0x00;
  9870  103F  0192               	clrf	18	;volatile
  9871                           
  9872                           ;pic_control_fun.c: 37: SSP1ADD = 0x00;
  9873  1040  018D               	clrf	13	;volatile
  9874                           
  9875                           ;pic_control_fun.c: 38: PIR3bits.SSP1IF = 0;
  9876  1041  014E               	movlb	14	; select bank14
  9877  1042  100F               	bcf	15,0	;volatile
  9878                           
  9879                           ;pic_control_fun.c: 39: PIE3bits.SSP1IE = 0;
  9880  1043  1019               	bcf	25,0	;volatile
  9881                           
  9882                           ;pic_control_fun.c: 40: SSP1BUF = 0x00;
  9883  1044  0143               	movlb	3	; select bank3
  9884  1045  018C               	clrf	12	;volatile
  9885                           
  9886                           ;pic_control_fun.c: 41: SSP1MSK = 0x00;
  9887  1046  018E               	clrf	14	;volatile
  9888                           
  9889                           ;pic_control_fun.c: 44: SSP1CLKPPS = 0x12;
  9890  1047  3012               	movlw	18
  9891  1048  017D               	movlb	61	; select bank61
  9892  1049  00C5               	movwf	69	;volatile
  9893                           
  9894                           ;pic_control_fun.c: 45: RC1PPS = 0x15;
  9895  104A  3015               	movlw	21
  9896  104B  017E               	movlb	62	; select bank62
  9897  104C  00A1               	movwf	33	;volatile
  9898                           
  9899                           ;pic_control_fun.c: 46: RC2PPS = 0x14;
  9900  104D  3014               	movlw	20
  9901  104E  00A2               	movwf	34	;volatile
  9902                           
  9903                           ;pic_control_fun.c: 47: SSP1DATPPS = 0x10;
  9904  104F  3010               	movlw	16
  9905  1050  017D               	movlb	61	; select bank61
  9906  1051  00C6               	movwf	70	;volatile
  9907                           
  9908                           ;pic_control_fun.c: 50: SSP1STAT = 0x80;
  9909  1052  3080               	movlw	128
  9910  1053  0143               	movlb	3	; select bank3
  9911  1054  008F               	movwf	15	;volatile
  9912                           
  9913                           ;pic_control_fun.c: 51: SSP1CON1 = 0x00;
  9914  1055  0190               	clrf	16	;volatile
  9915                           
  9916                           ;pic_control_fun.c: 52: SSP1ADD = 0x01;
  9917  1056  3001               	movlw	1
  9918  1057  008D               	movwf	13	;volatile
  9919                           
  9920                           ;pic_control_fun.c: 54: TRISCbits.TRISC2 = 0;
  9921  1058  0140               	movlb	0	; select bank0
  9922  1059  1113               	bcf	19,2	;volatile
  9923                           
  9924                           ;pic_control_fun.c: 55: TRISCbits.TRISC0 = 1;
  9925  105A  1413               	bsf	19,0	;volatile
  9926                           
  9927                           ;pic_control_fun.c: 56: SSP1CON1bits.SSPEN = 0;
  9928  105B  0143               	movlb	3	; select bank3
  9929  105C  1290               	bcf	16,5	;volatile
  9930                           
  9931                           ;pic_control_fun.c: 57: _delay((unsigned long)((2)*(32000000/4000.0)));
  9932  105D  3015               	movlw	21
  9933  105E  00F6               	movwf	??_set_MSSSP1_mode
  9934  105F  30C6               	movlw	198
  9935  1060                     u8567:	
  9936  1060  0B89               	decfsz	9,f
  9937  1061  2860               	goto	u8567
  9938  1062  0BF6               	decfsz	??_set_MSSSP1_mode,f
  9939  1063  2860               	goto	u8567
  9940  1064  3200               	nop2
  9941                           
  9942                           ;pic_control_fun.c: 58: SPI1_Open(0);
  9943  1065  3000               	movlw	0
  9944  1066  319A  2272  3190   	fcall	_SPI1_Open
  9945                           
  9946                           ;pic_control_fun.c: 59: _delay((unsigned long)((2)*(32000000/4000.0)));
  9947  1069  3015               	movlw	21
  9948  106A  00F6               	movwf	??_set_MSSSP1_mode
  9949  106B  30C6               	movlw	198
  9950  106C                     u8577:	
  9951  106C  0B89               	decfsz	9,f
  9952  106D  286C               	goto	u8577
  9953  106E  0BF6               	decfsz	??_set_MSSSP1_mode,f
  9954  106F  286C               	goto	u8577
  9955  1070  3200               	nop2
  9956                           
  9957                           ;pic_control_fun.c: 60: }
  9958  1071  28A7               	goto	l6237
  9959  1072                     l6199:	
  9960                           
  9961                           ;pic_control_fun.c: 61: else if(mode == 2)
  9962  1072  3002               	movlw	2
  9963  1073  0678               	xorwf	set_MSSSP1_mode@mode,w
  9964  1074  1D03               	btfss	3,2
  9965  1075  28A7               	goto	l6237
  9966                           
  9967                           ;pic_control_fun.c: 62: {
  9968                           ;pic_control_fun.c: 64: printf_string("\n\rMSSSP set as I2C");
  9969  1076  3090               	movlw	low (STR_26| (0+32768))
  9970  1077  00F1               	movwf	printf_string@data
  9971  1078  30A8               	movlw	high (STR_26| (0+32768))
  9972  1079  00F2               	movwf	printf_string@data+1
  9973  107A  31A1  213D  3190   	fcall	_printf_string
  9974                           
  9975                           ;pic_control_fun.c: 66: current_mode = 2;
  9976  107D  3002               	movlw	2
  9977  107E  00F6               	movwf	??_set_MSSSP1_mode
  9978  107F  0876               	movf	??_set_MSSSP1_mode,w
  9979  1080  0142               	movlb	2	; select bank2
  9980  1081  00D8               	movwf	set_MSSSP1_mode@current_mode^(0+256)
  9981                           
  9982                           ;pic_control_fun.c: 68: RC1PPS = 0x0F;
  9983  1082  300F               	movlw	15
  9984  1083  017E               	movlb	62	; select bank62
  9985  1084  00A1               	movwf	33	;volatile
  9986                           
  9987                           ;pic_control_fun.c: 69: RC2PPS = 0x0F;
  9988  1085  300F               	movlw	15
  9989  1086  00A2               	movwf	34	;volatile
  9990                           
  9991                           ;pic_control_fun.c: 70: SSP1STAT = 0x00;
  9992  1087  0143               	movlb	3	; select bank3
  9993  1088  018F               	clrf	15	;volatile
  9994                           
  9995                           ;pic_control_fun.c: 71: SSP1CON1 = 0x00;
  9996  1089  0190               	clrf	16	;volatile
  9997                           
  9998                           ;pic_control_fun.c: 72: SSP1CON3 = 0x00;
  9999  108A  0192               	clrf	18	;volatile
 10000                           
 10001                           ;pic_control_fun.c: 73: SSP1ADD = 0x00;
 10002  108B  018D               	clrf	13	;volatile
 10003                           
 10004                           ;pic_control_fun.c: 74: PIR3bits.SSP1IF = 0;
 10005  108C  014E               	movlb	14	; select bank14
 10006  108D  100F               	bcf	15,0	;volatile
 10007                           
 10008                           ;pic_control_fun.c: 75: PIE3bits.SSP1IE = 0;
 10009  108E  1019               	bcf	25,0	;volatile
 10010                           
 10011                           ;pic_control_fun.c: 76: SSP1BUF = 0x00;
 10012  108F  0143               	movlb	3	; select bank3
 10013  1090  018C               	clrf	12	;volatile
 10014                           
 10015                           ;pic_control_fun.c: 77: SSP1MSK = 0x00;
 10016  1091  018E               	clrf	14	;volatile
 10017                           
 10018                           ;pic_control_fun.c: 79: RC3PPS = 0x14;
 10019  1092  3014               	movlw	20
 10020  1093  017E               	movlb	62	; select bank62
 10021  1094  00A3               	movwf	35	;volatile
 10022                           
 10023                           ;pic_control_fun.c: 80: RC4PPS = 0x15;
 10024  1095  3015               	movlw	21
 10025  1096  00A4               	movwf	36	;volatile
 10026                           
 10027                           ;pic_control_fun.c: 81: SSP1CLKPPS = 0x13;
 10028  1097  3013               	movlw	19
 10029  1098  017D               	movlb	61	; select bank61
 10030  1099  00C5               	movwf	69	;volatile
 10031                           
 10032                           ;pic_control_fun.c: 82: SSP1DATPPS = 0x14;
 10033  109A  3014               	movlw	20
 10034  109B  00C6               	movwf	70	;volatile
 10035                           
 10036                           ;pic_control_fun.c: 84: i2c_init();
 10037  109C  31A1  2103  3190   	fcall	_i2c_init
 10038                           
 10039                           ;pic_control_fun.c: 85: _delay((unsigned long)((2)*(32000000/4000.0)));
 10040  109F  3015               	movlw	21
 10041  10A0  00F6               	movwf	??_set_MSSSP1_mode
 10042  10A1  30C6               	movlw	198
 10043  10A2                     u8587:	
 10044  10A2  0B89               	decfsz	9,f
 10045  10A3  28A2               	goto	u8587
 10046  10A4  0BF6               	decfsz	??_set_MSSSP1_mode,f
 10047  10A5  28A2               	goto	u8587
 10048  10A6  3200               	nop2
 10049  10A7                     l6237:	
 10050                           
 10051                           ;pic_control_fun.c: 86: }
 10052                           ;pic_control_fun.c: 87: PPSLOCK = 0x55;
 10053  10A7  3055               	movlw	85
 10054  10A8  017D               	movlb	61	; select bank61
 10055  10A9  008F               	movwf	15	;volsfr
 10056                           
 10057                           ;pic_control_fun.c: 88: PPSLOCK = 0xAA;
 10058  10AA  30AA               	movlw	170
 10059  10AB  008F               	movwf	15	;volsfr
 10060                           
 10061                           ;pic_control_fun.c: 89: PPSLOCKbits.PPSLOCKED = 0x01;
 10062  10AC  140F               	bsf	15,0	;volsfr
 10063                           
 10064                           ;pic_control_fun.c: 90: GIE = state;
 10065  10AD  1C77               	btfss	set_MSSSP1_mode@state,0
 10066  10AE  28B1               	goto	u5870
 10067  10AF  178B               	bsf	11,7	;volatile
 10068  10B0  0008               	return
 10069  10B1                     u5870:	
 10070  10B1  138B               	bcf	11,7	;volatile
 10071  10B2  0008               	return
 10072  10B3                     __end_of_set_MSSSP1_mode:	
 10073                           
 10074                           	psect	text4
 10075  2103                     __ptext4:	
 10076 ;; *************** function _i2c_init *****************
 10077 ;; Defined at:
 10078 ;;		line 5 in file "pic_i2c.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;		None
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		wreg
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used:    1
 10098 ;; This function calls:
 10099 ;;		Nothing
 10100 ;; This function is called by:
 10101 ;;		_set_MSSSP1_mode
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           
 10106                           ;psect for function _i2c_init
 10107  2103                     _i2c_init:	
 10108                           
 10109                           ;pic_i2c.c: 8: SSP1STAT = 0x80;
 10110                           
 10111                           ;incstack = 0
 10112                           ; Regs used in _i2c_init: [wreg]
 10113  2103  3080               	movlw	128
 10114  2104  0143               	movlb	3	; select bank3
 10115  2105  008F               	movwf	15	;volatile
 10116                           
 10117                           ;pic_i2c.c: 10: SSP1CON1 = 0x28;
 10118  2106  3028               	movlw	40
 10119  2107  0090               	movwf	16	;volatile
 10120                           
 10121                           ;pic_i2c.c: 12: SSP1CON3 = 0x08;
 10122  2108  3008               	movlw	8
 10123  2109  0092               	movwf	18	;volatile
 10124                           
 10125                           ;pic_i2c.c: 15: SSP1ADD = 79;
 10126  210A  304F               	movlw	79
 10127  210B  008D               	movwf	13	;volatile
 10128                           
 10129                           ;pic_i2c.c: 18: PIR3bits.SSP1IF = 0;
 10130  210C  014E               	movlb	14	; select bank14
 10131  210D  100F               	bcf	15,0	;volatile
 10132                           
 10133                           ;pic_i2c.c: 20: PIE3bits.SSP1IE = 0;
 10134  210E  1019               	bcf	25,0	;volatile
 10135  210F  0008               	return
 10136  2110                     __end_of_i2c_init:	
 10137                           
 10138                           	psect	text5
 10139  1A72                     __ptext5:	
 10140 ;; *************** function _SPI1_Open *****************
 10141 ;; Defined at:
 10142 ;;		line 92 in file "mcc_generated_files/spi1.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  spi1UniqueCo    1    wreg     enum E92
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;  spi1UniqueCo    1    5[COMMON] enum E92
 10147 ;;  print_data     20    0        unsigned char [20]
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  1    wreg      unsigned char 
 10150 ;; Registers used:
 10151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10159 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10161 ;;Total ram usage:        6 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_set_MSSSP1_mode
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           
 10171                           ;psect for function _SPI1_Open
 10172  1A72                     _SPI1_Open:	
 10173                           
 10174                           ;incstack = 0
 10175                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 10176                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 10177  1A72  00F5               	movwf	SPI1_Open@spi1UniqueConfiguration
 10178                           
 10179                           ;spi1.c: 95: if(!SSP1CON1bits.SSPEN)
 10180  1A73  0143               	movlb	3	; select bank3
 10181  1A74  1A90               	btfsc	16,5	;volatile
 10182  1A75  0008               	return
 10183                           
 10184                           ;spi1.c: 96: {
 10185                           ;spi1.c: 97: char print_data[20];
 10186                           ;spi1.c: 98: SSP1STAT = spi1_configuration[spi1UniqueConfiguration].stat;
 10187  1A76  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 10188  1A77  00F0               	movwf	??_SPI1_Open
 10189  1A78  01F1               	clrf	??_SPI1_Open+1
 10190  1A79  35F0               	lslf	??_SPI1_Open,f
 10191  1A7A  0DF1               	rlf	??_SPI1_Open+1,f
 10192  1A7B  35F0               	lslf	??_SPI1_Open,f
 10193  1A7C  0DF1               	rlf	??_SPI1_Open+1,f
 10194  1A7D  0870               	movf	??_SPI1_Open,w
 10195  1A7E  3E01               	addlw	1
 10196  1A7F  00F2               	movwf	??_SPI1_Open+2
 10197  1A80  3000               	movlw	0
 10198  1A81  3D71               	addwfc	??_SPI1_Open+1,w
 10199  1A82  00F3               	movwf	??_SPI1_Open+3
 10200  1A83  3000               	movlw	low (_spi1_configuration| (0+32768))
 10201  1A84  0772               	addwf	??_SPI1_Open+2,w
 10202  1A85  0084               	movwf	4
 10203  1A86  3098               	movlw	high (_spi1_configuration| (0+32768))
 10204  1A87  3D73               	addwfc	??_SPI1_Open+3,w
 10205  1A88  0085               	movwf	5
 10206  1A89  0800               	movf	0,w	;code access
 10207  1A8A  008F               	movwf	15	;volatile
 10208                           
 10209                           ;spi1.c: 99: SSP1CON1 = spi1_configuration[spi1UniqueConfiguration].con1;
 10210  1A8B  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 10211  1A8C  00F0               	movwf	??_SPI1_Open
 10212  1A8D  01F1               	clrf	??_SPI1_Open+1
 10213  1A8E  35F0               	lslf	??_SPI1_Open,f
 10214  1A8F  0DF1               	rlf	??_SPI1_Open+1,f
 10215  1A90  35F0               	lslf	??_SPI1_Open,f
 10216  1A91  0DF1               	rlf	??_SPI1_Open+1,f
 10217  1A92  3000               	movlw	low (_spi1_configuration| (0+32768))
 10218  1A93  0770               	addwf	??_SPI1_Open,w
 10219  1A94  0084               	movwf	4
 10220  1A95  3098               	movlw	high (_spi1_configuration| (0+32768))
 10221  1A96  3D71               	addwfc	??_SPI1_Open+1,w
 10222  1A97  0085               	movwf	5
 10223  1A98  0800               	movf	0,w	;code access
 10224  1A99  0090               	movwf	16	;volatile
 10225                           
 10226                           ;spi1.c: 100: SSP1CON2 = 0x00;
 10227  1A9A  0191               	clrf	17	;volatile
 10228                           
 10229                           ;spi1.c: 101: SSP1ADD = spi1_configuration[spi1UniqueConfiguration].add;
 10230  1A9B  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 10231  1A9C  00F0               	movwf	??_SPI1_Open
 10232  1A9D  01F1               	clrf	??_SPI1_Open+1
 10233  1A9E  35F0               	lslf	??_SPI1_Open,f
 10234  1A9F  0DF1               	rlf	??_SPI1_Open+1,f
 10235  1AA0  35F0               	lslf	??_SPI1_Open,f
 10236  1AA1  0DF1               	rlf	??_SPI1_Open+1,f
 10237  1AA2  0870               	movf	??_SPI1_Open,w
 10238  1AA3  3E02               	addlw	2
 10239  1AA4  00F2               	movwf	??_SPI1_Open+2
 10240  1AA5  3000               	movlw	0
 10241  1AA6  3D71               	addwfc	??_SPI1_Open+1,w
 10242  1AA7  00F3               	movwf	??_SPI1_Open+3
 10243  1AA8  3000               	movlw	low (_spi1_configuration| (0+32768))
 10244  1AA9  0772               	addwf	??_SPI1_Open+2,w
 10245  1AAA  0084               	movwf	4
 10246  1AAB  3098               	movlw	high (_spi1_configuration| (0+32768))
 10247  1AAC  3D73               	addwfc	??_SPI1_Open+3,w
 10248  1AAD  0085               	movwf	5
 10249  1AAE  0800               	movf	0,w	;code access
 10250  1AAF  008D               	movwf	13	;volatile
 10251                           
 10252                           ;spi1.c: 102: TRISCbits.TRISC2 = spi1_configuration[spi1UniqueConfiguration].operation;
 10253  1AB0  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 10254  1AB1  00F0               	movwf	??_SPI1_Open
 10255  1AB2  01F1               	clrf	??_SPI1_Open+1
 10256  1AB3  35F0               	lslf	??_SPI1_Open,f
 10257  1AB4  0DF1               	rlf	??_SPI1_Open+1,f
 10258  1AB5  35F0               	lslf	??_SPI1_Open,f
 10259  1AB6  0DF1               	rlf	??_SPI1_Open+1,f
 10260  1AB7  0870               	movf	??_SPI1_Open,w
 10261  1AB8  3E03               	addlw	3
 10262  1AB9  00F2               	movwf	??_SPI1_Open+2
 10263  1ABA  3000               	movlw	0
 10264  1ABB  3D71               	addwfc	??_SPI1_Open+1,w
 10265  1ABC  00F3               	movwf	??_SPI1_Open+3
 10266  1ABD  3000               	movlw	low (_spi1_configuration| (0+32768))
 10267  1ABE  0772               	addwf	??_SPI1_Open+2,w
 10268  1ABF  0084               	movwf	4
 10269  1AC0  3098               	movlw	high (_spi1_configuration| (0+32768))
 10270  1AC1  3D73               	addwfc	??_SPI1_Open+3,w
 10271  1AC2  0085               	movwf	5
 10272  1AC3  0800               	movf	0,w	;code access
 10273  1AC4  00F4               	movwf	??_SPI1_Open+4
 10274  1AC5  0DF4               	rlf	??_SPI1_Open+4,f
 10275  1AC6  0DF4               	rlf	??_SPI1_Open+4,f
 10276  1AC7  0140               	movlb	0	; select bank0
 10277  1AC8  0813               	movf	19,w	;volatile
 10278  1AC9  0674               	xorwf	??_SPI1_Open+4,w
 10279  1ACA  39FB               	andlw	-5
 10280  1ACB  0674               	xorwf	??_SPI1_Open+4,w
 10281  1ACC  0093               	movwf	19	;volatile
 10282                           
 10283                           ;spi1.c: 103: TRISCbits.TRISC0 = 1;
 10284  1ACD  1413               	bsf	19,0	;volatile
 10285                           
 10286                           ;spi1.c: 104: TRISCbits.TRISC1 = 0;
 10287  1ACE  1093               	bcf	19,1	;volatile
 10288                           
 10289                           ;spi1.c: 105: SSP1CON1bits.SSPEN = 1;
 10290  1ACF  0143               	movlb	3	; select bank3
 10291  1AD0  1690               	bsf	16,5	;volatile
 10292                           
 10293                           ;spi1.c: 106: return 1;
 10294                           ;	Return value of _SPI1_Open is never used
 10295  1AD1  0008               	return
 10296  1AD2                     __end_of_SPI1_Open:	
 10297                           ;spi1.c: 107: }
 10298                           ;spi1.c: 108: return 0;
 10299                           ;	Return value of _SPI1_Open is never used
 10300                           
 10301                           
 10302                           	psect	text6
 10303  0010                     __ptext6:	
 10304 ;; *************** function _process_pmic_status *****************
 10305 ;; Defined at:
 10306 ;;		line 132 in file "pic_control_fun.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  status          1    wreg     PTR unsigned char 
 10309 ;;		 -> I2C_read_buff(10), 
 10310 ;;  length          1   12[COMMON] unsigned char 
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;  status          1   44[BANK0 ] PTR unsigned char 
 10313 ;;		 -> I2C_read_buff(10), 
 10314 ;;  led_data        5   27[BANK0 ] unsigned char [5]
 10315 ;;  led_off         5   22[BANK0 ] unsigned char [5]
 10316 ;;  led_data        5   17[BANK0 ] unsigned char [5]
 10317 ;;  led_off         5   12[BANK0 ] unsigned char [5]
 10318 ;;  led_data        5    7[BANK0 ] unsigned char [5]
 10319 ;;  led_off         5    2[BANK0 ] unsigned char [5]
 10320 ;;  led_off         5   32[BANK0 ] unsigned char [5]
 10321 ;;  battery_volt    2   40[BANK0 ] unsigned int 
 10322 ;;  CHRG_STAT       1   43[BANK0 ] unsigned char 
 10323 ;;  PG_STAT         1   42[BANK0 ] unsigned char 
 10324 ;;  VSYS_STAT       1   39[BANK0 ] unsigned char 
 10325 ;;  SDP_STAT        1   38[BANK0 ] unsigned char 
 10326 ;;  VBUS_STAT       1   37[BANK0 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10336 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10337 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10339 ;;      Totals:         1      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10340 ;;Total ram usage:       46 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:    2
 10343 ;; This function calls:
 10344 ;;		___wmul
 10345 ;;		_lipo_battery_level
 10346 ;; This function is called by:
 10347 ;;		_pmic_status_read
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           
 10352                           ;psect for function _process_pmic_status
 10353  0010                     _process_pmic_status:	
 10354                           
 10355                           ;incstack = 0
 10356                           ; Regs used in _process_pmic_status: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10357                           ;process_pmic_status@status stored from wreg
 10358  0010  0140               	movlb	0	; select bank0
 10359  0011  00CC               	movwf	process_pmic_status@status
 10360                           
 10361                           ;pic_control_fun.c: 134: uint8_t VBUS_STAT = 0;
 10362  0012  01C5               	clrf	process_pmic_status@VBUS_STAT
 10363                           
 10364                           ;pic_control_fun.c: 135: uint8_t CHRG_STAT = 0;
 10365  0013  01CB               	clrf	process_pmic_status@CHRG_STAT
 10366                           
 10367                           ;pic_control_fun.c: 136: uint8_t PG_STAT = 0;
 10368  0014  01CA               	clrf	process_pmic_status@PG_STAT
 10369                           
 10370                           ;pic_control_fun.c: 137: uint8_t SDP_STAT = 0;
 10371  0015  01C6               	clrf	process_pmic_status@SDP_STAT
 10372                           
 10373                           ;pic_control_fun.c: 138: uint8_t VSYS_STAT = 0;
 10374  0016  01C7               	clrf	process_pmic_status@VSYS_STAT
 10375                           
 10376                           ;pic_control_fun.c: 139: uint16_t battery_volt;
 10377                           ;pic_control_fun.c: 141: VBUS_STAT = (uint8_t)((status[0] & 0b11100000) >> 5);
 10378  0017  084C               	movf	process_pmic_status@status,w
 10379  0018  0086               	movwf	6
 10380  0019  3001               	movlw	1	; select bank2/3
 10381  001A  0087               	movwf	7
 10382  001B  0801               	movf	1,w
 10383  001C  00A0               	movwf	??_process_pmic_status
 10384  001D  3005               	movlw	5
 10385  001E                     u6585:	
 10386  001E  36A0               	lsrf	??_process_pmic_status,f
 10387  001F  0B89               	decfsz	9,f
 10388  0020  281E               	goto	u6585
 10389  0021  0820               	movf	??_process_pmic_status,w
 10390  0022  3907               	andlw	7
 10391  0023  00A1               	movwf	??_process_pmic_status+1
 10392  0024  0821               	movf	??_process_pmic_status+1,w
 10393  0025  00C5               	movwf	process_pmic_status@VBUS_STAT
 10394                           
 10395                           ;pic_control_fun.c: 142: CHRG_STAT = (uint8_t)((status[0] & 0b00011000) >> 3);
 10396  0026  084C               	movf	process_pmic_status@status,w
 10397  0027  0086               	movwf	6
 10398  0028  3001               	movlw	1	; select bank2/3
 10399  0029  0087               	movwf	7
 10400  002A  0801               	movf	1,w
 10401  002B  00A0               	movwf	??_process_pmic_status
 10402  002C  3003               	movlw	3
 10403  002D                     u6595:	
 10404  002D  36A0               	lsrf	??_process_pmic_status,f
 10405  002E  0B89               	decfsz	9,f
 10406  002F  282D               	goto	u6595
 10407  0030  0820               	movf	??_process_pmic_status,w
 10408  0031  3903               	andlw	3
 10409  0032  00A1               	movwf	??_process_pmic_status+1
 10410  0033  0821               	movf	??_process_pmic_status+1,w
 10411  0034  00CB               	movwf	process_pmic_status@CHRG_STAT
 10412                           
 10413                           ;pic_control_fun.c: 143: PG_STAT = (uint8_t)((status[0] & 0b00000100) >> 2);
 10414  0035  084C               	movf	process_pmic_status@status,w
 10415  0036  0086               	movwf	6
 10416  0037  3001               	movlw	1	; select bank2/3
 10417  0038  0087               	movwf	7
 10418  0039  0801               	movf	1,w
 10419  003A  00A0               	movwf	??_process_pmic_status
 10420  003B  3002               	movlw	2
 10421  003C                     u6605:	
 10422  003C  36A0               	lsrf	??_process_pmic_status,f
 10423  003D  0B89               	decfsz	9,f
 10424  003E  283C               	goto	u6605
 10425  003F  0820               	movf	??_process_pmic_status,w
 10426  0040  3901               	andlw	1
 10427  0041  00A1               	movwf	??_process_pmic_status+1
 10428  0042  0821               	movf	??_process_pmic_status+1,w
 10429  0043  00CA               	movwf	process_pmic_status@PG_STAT
 10430                           
 10431                           ;pic_control_fun.c: 144: SDP_STAT = (uint8_t)((status[0] & 0b00000010) >> 1);
 10432  0044  084C               	movf	process_pmic_status@status,w
 10433  0045  0086               	movwf	6
 10434  0046  3001               	movlw	1	; select bank2/3
 10435  0047  0087               	movwf	7
 10436  0048  3601               	lsrf	1,w
 10437  0049  3901               	andlw	1
 10438  004A  00A0               	movwf	??_process_pmic_status
 10439  004B  0820               	movf	??_process_pmic_status,w
 10440  004C  00C6               	movwf	process_pmic_status@SDP_STAT
 10441                           
 10442                           ;pic_control_fun.c: 145: VSYS_STAT = (uint8_t)((status[0] & 0b00000001));
 10443  004D  084C               	movf	process_pmic_status@status,w
 10444  004E  0086               	movwf	6
 10445  004F  3001               	movlw	1	; select bank2/3
 10446  0050  0087               	movwf	7
 10447  0051  0801               	movf	1,w
 10448  0052  3901               	andlw	1
 10449  0053  00A0               	movwf	??_process_pmic_status
 10450  0054  0820               	movf	??_process_pmic_status,w
 10451  0055  00C7               	movwf	process_pmic_status@VSYS_STAT
 10452                           
 10453                           ;pic_control_fun.c: 148: if(1 == PG_STAT)
 10454  0056  034A               	decf	process_pmic_status@PG_STAT,w
 10455  0057  1D03               	btfss	3,2
 10456  0058  28CA               	goto	l6651
 10457                           
 10458                           ;pic_control_fun.c: 149: {
 10459                           ;pic_control_fun.c: 150: if((0b00000001 == CHRG_STAT) || (0b00000010 == CHRG_STAT))
 10460  0059  034B               	decf	process_pmic_status@CHRG_STAT,w
 10461  005A  1903               	btfsc	3,2
 10462  005B  2860               	goto	l6637
 10463  005C  3002               	movlw	2
 10464  005D  064B               	xorwf	process_pmic_status@CHRG_STAT,w
 10465  005E  1D03               	btfss	3,2
 10466  005F  2882               	goto	l6641
 10467  0060                     l6637:	
 10468                           
 10469                           ;pic_control_fun.c: 151: {
 10470                           ;pic_control_fun.c: 152: if(pic_active_mode == 1)
 10471  0060  0141               	movlb	1	; select bank1
 10472  0061  036E               	decf	_pic_active_mode^(0+128),w
 10473  0062  1D03               	btfss	3,2
 10474  0063  28DD               	goto	l6655
 10475                           
 10476                           ;pic_control_fun.c: 153: {
 10477                           ;pic_control_fun.c: 156: uint8_t led_off[5]= {0b01111111, 0, 0, 0, 0};
 10478  0064  303E               	movlw	low process_pmic_status@F15193
 10479  0065  0086               	movwf	6
 10480  0066  3001               	movlw	high process_pmic_status@F15193
 10481  0067  0087               	movwf	7
 10482  0068  3022               	movlw	low process_pmic_status@led_off
 10483  0069  0084               	movwf	4
 10484  006A  3000               	movlw	high process_pmic_status@led_off
 10485  006B  0085               	movwf	5
 10486  006C  3005               	movlw	5
 10487  006D  0140               	movlb	0	; select bank0
 10488  006E  00A0               	movwf	??_process_pmic_status
 10489  006F                     u6650:	
 10490  006F  0016               	moviw fsr1++
 10491  0070  001A               	movwi fsr0++
 10492  0071  0BA0               	decfsz	??_process_pmic_status,f
 10493  0072  286F               	goto	u6650
 10494                           
 10495                           ;pic_control_fun.c: 157: uint8_t led_data[5]={0b10000011, 0, 0, 0, 0};
 10496  0073  3039               	movlw	low process_pmic_status@F15195
 10497  0074  0086               	movwf	6
 10498  0075  3001               	movlw	high process_pmic_status@F15195
 10499  0076  0087               	movwf	7
 10500  0077  3027               	movlw	low process_pmic_status@led_data
 10501  0078  0084               	movwf	4
 10502  0079  3000               	movlw	high process_pmic_status@led_data
 10503  007A  0085               	movwf	5
 10504  007B  3005               	movlw	5
 10505  007C  00A0               	movwf	??_process_pmic_status
 10506  007D                     u6660:	
 10507  007D  0016               	moviw fsr1++
 10508  007E  001A               	movwi fsr0++
 10509  007F  0BA0               	decfsz	??_process_pmic_status,f
 10510  0080  287D               	goto	u6660
 10511                           
 10512                           ;pic_control_fun.c: 160: }
 10513                           ;pic_control_fun.c: 161: }
 10514  0081  28DD               	goto	l6655
 10515  0082                     l6641:	
 10516                           
 10517                           ;pic_control_fun.c: 162: else if(0b00000011 == CHRG_STAT)
 10518  0082  3003               	movlw	3
 10519  0083  064B               	xorwf	process_pmic_status@CHRG_STAT,w
 10520  0084  1D03               	btfss	3,2
 10521  0085  28A8               	goto	l6647
 10522                           
 10523                           ;pic_control_fun.c: 163: {
 10524                           ;pic_control_fun.c: 164: if(pic_active_mode == 1)
 10525  0086  0141               	movlb	1	; select bank1
 10526  0087  036E               	decf	_pic_active_mode^(0+128),w
 10527  0088  1D03               	btfss	3,2
 10528  0089  28DD               	goto	l6655
 10529                           
 10530                           ;pic_control_fun.c: 165: {
 10531                           ;pic_control_fun.c: 168: uint8_t led_off[5]= {0b01111111, 0, 0, 0, 0};
 10532  008A  3034               	movlw	low process_pmic_status@F15197
 10533  008B  0086               	movwf	6
 10534  008C  3001               	movlw	high process_pmic_status@F15197
 10535  008D  0087               	movwf	7
 10536  008E  302C               	movlw	low process_pmic_status@led_off_1972
 10537  008F  0084               	movwf	4
 10538  0090  3000               	movlw	high process_pmic_status@led_off_1972
 10539  0091  0085               	movwf	5
 10540  0092  3005               	movlw	5
 10541  0093  0140               	movlb	0	; select bank0
 10542  0094  00A0               	movwf	??_process_pmic_status
 10543  0095                     u6690:	
 10544  0095  0016               	moviw fsr1++
 10545  0096  001A               	movwi fsr0++
 10546  0097  0BA0               	decfsz	??_process_pmic_status,f
 10547  0098  2895               	goto	u6690
 10548                           
 10549                           ;pic_control_fun.c: 169: uint8_t led_data[5]={0b10000010, 0, 0, 0, 0};
 10550  0099  302F               	movlw	low process_pmic_status@F15199
 10551  009A  0086               	movwf	6
 10552  009B  3001               	movlw	high process_pmic_status@F15199
 10553  009C  0087               	movwf	7
 10554  009D  3031               	movlw	low process_pmic_status@led_data_1974
 10555  009E  0084               	movwf	4
 10556  009F  3000               	movlw	high process_pmic_status@led_data_1974
 10557  00A0  0085               	movwf	5
 10558  00A1  3005               	movlw	5
 10559  00A2  00A0               	movwf	??_process_pmic_status
 10560  00A3                     u6700:	
 10561  00A3  0016               	moviw fsr1++
 10562  00A4  001A               	movwi fsr0++
 10563  00A5  0BA0               	decfsz	??_process_pmic_status,f
 10564  00A6  28A3               	goto	u6700
 10565                           
 10566                           ;pic_control_fun.c: 172: }
 10567                           ;pic_control_fun.c: 173: }
 10568  00A7  28DD               	goto	l6655
 10569  00A8                     l6647:	
 10570                           
 10571                           ;pic_control_fun.c: 174: else
 10572                           ;pic_control_fun.c: 175: {
 10573                           ;pic_control_fun.c: 176: if(pic_active_mode == 1)
 10574  00A8  0141               	movlb	1	; select bank1
 10575  00A9  036E               	decf	_pic_active_mode^(0+128),w
 10576  00AA  1D03               	btfss	3,2
 10577  00AB  28DD               	goto	l6655
 10578                           
 10579                           ;pic_control_fun.c: 177: {
 10580                           ;pic_control_fun.c: 180: uint8_t led_off[5]= {0b01111111, 0, 0, 0, 0};
 10581  00AC  302A               	movlw	low process_pmic_status@F15201
 10582  00AD  0086               	movwf	6
 10583  00AE  3001               	movlw	high process_pmic_status@F15201
 10584  00AF  0087               	movwf	7
 10585  00B0  3036               	movlw	low process_pmic_status@led_off_1976
 10586  00B1  0084               	movwf	4
 10587  00B2  3000               	movlw	high process_pmic_status@led_off_1976
 10588  00B3  0085               	movwf	5
 10589  00B4  3005               	movlw	5
 10590  00B5  0140               	movlb	0	; select bank0
 10591  00B6  00A0               	movwf	??_process_pmic_status
 10592  00B7                     u6720:	
 10593  00B7  0016               	moviw fsr1++
 10594  00B8  001A               	movwi fsr0++
 10595  00B9  0BA0               	decfsz	??_process_pmic_status,f
 10596  00BA  28B7               	goto	u6720
 10597                           
 10598                           ;pic_control_fun.c: 181: uint8_t led_data[5]={0b10000001, 0, 0, 0, 0};
 10599  00BB  3025               	movlw	low process_pmic_status@F15203
 10600  00BC  0086               	movwf	6
 10601  00BD  3001               	movlw	high process_pmic_status@F15203
 10602  00BE  0087               	movwf	7
 10603  00BF  303B               	movlw	low process_pmic_status@led_data_1978
 10604  00C0  0084               	movwf	4
 10605  00C1  3000               	movlw	high process_pmic_status@led_data_1978
 10606  00C2  0085               	movwf	5
 10607  00C3  3005               	movlw	5
 10608  00C4  00A0               	movwf	??_process_pmic_status
 10609  00C5                     u6730:	
 10610  00C5  0016               	moviw fsr1++
 10611  00C6  001A               	movwi fsr0++
 10612  00C7  0BA0               	decfsz	??_process_pmic_status,f
 10613  00C8  28C5               	goto	u6730
 10614                           
 10615                           ;pic_control_fun.c: 184: }
 10616                           ;pic_control_fun.c: 185: }
 10617                           ;pic_control_fun.c: 186: }
 10618  00C9  28DD               	goto	l6655
 10619  00CA                     l6651:	
 10620                           
 10621                           ;pic_control_fun.c: 187: else
 10622                           ;pic_control_fun.c: 188: {
 10623                           ;pic_control_fun.c: 189: if(pic_active_mode == 1)
 10624  00CA  0141               	movlb	1	; select bank1
 10625  00CB  036E               	decf	_pic_active_mode^(0+128),w
 10626  00CC  1D03               	btfss	3,2
 10627  00CD  28DD               	goto	l6655
 10628                           
 10629                           ;pic_control_fun.c: 190: {
 10630                           ;pic_control_fun.c: 193: uint8_t led_off[5]={0b01111111, 0, 0, 0, 0};
 10631  00CE  3020               	movlw	low process_pmic_status@F15205
 10632  00CF  0086               	movwf	6
 10633  00D0  3001               	movlw	high process_pmic_status@F15205
 10634  00D1  0087               	movwf	7
 10635  00D2  3040               	movlw	low process_pmic_status@led_off_1980
 10636  00D3  0084               	movwf	4
 10637  00D4  3000               	movlw	high process_pmic_status@led_off_1980
 10638  00D5  0085               	movwf	5
 10639  00D6  3005               	movlw	5
 10640  00D7  0140               	movlb	0	; select bank0
 10641  00D8  00A0               	movwf	??_process_pmic_status
 10642  00D9                     u6750:	
 10643  00D9  0016               	moviw fsr1++
 10644  00DA  001A               	movwi fsr0++
 10645  00DB  0BA0               	decfsz	??_process_pmic_status,f
 10646  00DC  28D9               	goto	u6750
 10647  00DD                     l6655:	
 10648                           
 10649                           ;pic_control_fun.c: 195: }
 10650                           ;pic_control_fun.c: 196: }
 10651                           ;pic_control_fun.c: 198: battery_volt = (uint16_t)((( status[3] & 0b01111111) * 20) + 23
      +                          04);
 10652  00DD  0140               	movlb	0	; select bank0
 10653  00DE  084C               	movf	process_pmic_status@status,w
 10654  00DF  3E03               	addlw	3
 10655  00E0  0086               	movwf	6
 10656  00E1  3001               	movlw	1	; select bank2/3
 10657  00E2  0087               	movwf	7
 10658  00E3  0801               	movf	1,w
 10659  00E4  397F               	andlw	127
 10660  00E5  00A0               	movwf	??_process_pmic_status
 10661  00E6  01A1               	clrf	??_process_pmic_status+1
 10662  00E7  0820               	movf	??_process_pmic_status,w
 10663  00E8  00F0               	movwf	___wmul@multiplier
 10664  00E9  0821               	movf	??_process_pmic_status+1,w
 10665  00EA  00F1               	movwf	___wmul@multiplier+1
 10666  00EB  3014               	movlw	20
 10667  00EC  00F2               	movwf	___wmul@multiplicand
 10668  00ED  3000               	movlw	0
 10669  00EE  00F3               	movwf	___wmul@multiplicand+1
 10670  00EF  31A1  219B  3180   	fcall	___wmul
 10671  00F2  0870               	movf	?___wmul,w
 10672  00F3  3E00               	addlw	0
 10673  00F4  0140               	movlb	0	; select bank0
 10674  00F5  00C8               	movwf	process_pmic_status@battery_volt
 10675  00F6  3009               	movlw	9
 10676  00F7  3D71               	addwfc	?___wmul+1,w
 10677  00F8  00C9               	movwf	process_pmic_status@battery_volt+1
 10678                           
 10679                           ;pic_control_fun.c: 199: battery_level = lipo_battery_level(battery_volt);
 10680  00F9  0849               	movf	process_pmic_status@battery_volt+1,w
 10681  00FA  00F9               	movwf	lipo_battery_level@battery_volt+1
 10682  00FB  0848               	movf	process_pmic_status@battery_volt,w
 10683  00FC  00F8               	movwf	lipo_battery_level@battery_volt
 10684  00FD  31A3  2311         	fcall	_lipo_battery_level
 10685  00FF  0140               	movlb	0	; select bank0
 10686  0100  00A0               	movwf	??_process_pmic_status
 10687  0101  0820               	movf	??_process_pmic_status,w
 10688  0102  0142               	movlb	2	; select bank2
 10689  0103  00D9               	movwf	_battery_level^(0+256)
 10690  0104  0008               	return
 10691  0105                     __end_of_process_pmic_status:	
 10692                           
 10693                           	psect	text7
 10694  2311                     __ptext7:	
 10695 ;; *************** function _lipo_battery_level *****************
 10696 ;; Defined at:
 10697 ;;		line 202 in file "pic_control_fun.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;  battery_volt    2    8[COMMON] unsigned int 
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;  battery_leve    1   11[COMMON] unsigned char 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      unsigned char 
 10704 ;; Registers used:
 10705 ;;		wreg, status,2, status,0, pclath, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10715 ;;Total ram usage:        4 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:    1
 10718 ;; This function calls:
 10719 ;;		___lwdiv
 10720 ;; This function is called by:
 10721 ;;		_process_pmic_status
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           
 10726                           ;psect for function _lipo_battery_level
 10727  2311                     _lipo_battery_level:	
 10728                           
 10729                           ;pic_control_fun.c: 204: uint8_t battery_level_cal;
 10730                           ;pic_control_fun.c: 206: if(3500 >= battery_volt)
 10731                           
 10732                           ;incstack = 0
 10733                           ; Regs used in _lipo_battery_level: [wreg+status,2+status,0+pclath+cstack]
 10734  2311  300D               	movlw	13
 10735  2312  0279               	subwf	lipo_battery_level@battery_volt+1,w
 10736  2313  30AD               	movlw	173
 10737  2314  1903               	skipnz
 10738  2315  0278               	subwf	lipo_battery_level@battery_volt,w
 10739  2316  1803               	skipnc
 10740  2317  2B1A               	goto	l6023
 10741                           
 10742                           ;pic_control_fun.c: 207: {
 10743                           ;pic_control_fun.c: 208: battery_level_cal = 0;
 10744  2318  01FB               	clrf	lipo_battery_level@battery_level_cal
 10745                           
 10746                           ;pic_control_fun.c: 209: }
 10747  2319  2B33               	goto	l6029
 10748  231A                     l6023:	
 10749                           
 10750                           ;pic_control_fun.c: 210: else if(4200 < battery_volt)
 10751  231A  3010               	movlw	16
 10752  231B  0279               	subwf	lipo_battery_level@battery_volt+1,w
 10753  231C  3069               	movlw	105
 10754  231D  1903               	skipnz
 10755  231E  0278               	subwf	lipo_battery_level@battery_volt,w
 10756  231F  1C03               	skipc
 10757  2320  2B23               	goto	l6027
 10758                           
 10759                           ;pic_control_fun.c: 211: {
 10760                           ;pic_control_fun.c: 212: battery_level_cal = 100;
 10761  2321  3064               	movlw	100
 10762  2322  2B30               	goto	L1
 10763  2323                     l6027:	
 10764                           ;pic_control_fun.c: 213: }
 10765                           
 10766                           
 10767                           ;pic_control_fun.c: 214: else
 10768                           ;pic_control_fun.c: 215: {
 10769                           ;pic_control_fun.c: 216: battery_level_cal = (battery_volt - 3500)/7;
 10770  2323  3007               	movlw	7
 10771  2324  00F0               	movwf	___lwdiv@divisor
 10772  2325  3000               	movlw	0
 10773  2326  00F1               	movwf	___lwdiv@divisor+1
 10774  2327  0878               	movf	lipo_battery_level@battery_volt,w
 10775  2328  3E54               	addlw	84
 10776  2329  00F2               	movwf	___lwdiv@dividend
 10777  232A  30F2               	movlw	242
 10778  232B  3D79               	addwfc	lipo_battery_level@battery_volt+1,w
 10779  232C  00F3               	movwf	___lwdiv@dividend+1
 10780  232D  31A5  258B         	fcall	___lwdiv
 10781  232F  0870               	movf	?___lwdiv,w
 10782  2330                     L1:	
 10783  2330  00FA               	movwf	??_lipo_battery_level
 10784  2331  087A               	movf	??_lipo_battery_level,w
 10785  2332  00FB               	movwf	lipo_battery_level@battery_level_cal
 10786  2333                     l6029:	
 10787                           
 10788                           ;pic_control_fun.c: 217: }
 10789                           ;pic_control_fun.c: 218: return battery_level_cal;
 10790  2333  087B               	movf	lipo_battery_level@battery_level_cal,w
 10791  2334  0008               	return
 10792  2335                     __end_of_lipo_battery_level:	
 10793                           
 10794                           	psect	text8
 10795  21EC                     __ptext8:	
 10796 ;; *************** function _memset *****************
 10797 ;; Defined at:
 10798 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  p1              1    wreg     PTR void 
 10801 ;;		 -> I2C_read_buff(10), 
 10802 ;;  c               2    0[COMMON] int 
 10803 ;;  n               2    2[COMMON] unsigned int 
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;  p1              1    5[COMMON] PTR void 
 10806 ;;		 -> I2C_read_buff(10), 
 10807 ;;  p               1    6[COMMON] PTR unsigned char 
 10808 ;;		 -> I2C_read_buff(10), 
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      PTR void 
 10811 ;; Registers used:
 10812 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10821 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10822 ;;Total ram usage:        7 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; This function calls:
 10825 ;;		Nothing
 10826 ;; This function is called by:
 10827 ;;		_pmic_status_read
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           
 10832                           ;psect for function _memset
 10833  21EC                     _memset:	
 10834                           
 10835                           ;incstack = 0
 10836                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 10837                           ;memset@p1 stored from wreg
 10838  21EC  00F5               	movwf	memset@p1
 10839  21ED  0875               	movf	memset@p1,w
 10840  21EE  00F4               	movwf	??_memset
 10841  21EF  0874               	movf	??_memset,w
 10842  21F0  00F6               	movwf	memset@p
 10843  21F1                     l6617:	
 10844  21F1  3001               	movlw	1
 10845  21F2  02F2               	subwf	memset@n,f
 10846  21F3  3000               	movlw	0
 10847  21F4  3BF3               	subwfb	memset@n+1,f
 10848  21F5  0A72               	incf	memset@n,w
 10849  21F6  1903               	btfsc	3,2
 10850  21F7  0A73               	incf	memset@n+1,w
 10851  21F8  1903               	btfsc	3,2
 10852  21F9  0008               	return
 10853  21FA  0870               	movf	memset@c,w
 10854  21FB  00F4               	movwf	??_memset
 10855  21FC  0876               	movf	memset@p,w
 10856  21FD  0086               	movwf	6
 10857  21FE  3001               	movlw	1	; select bank2/3
 10858  21FF  0087               	movwf	7
 10859  2200  0874               	movf	??_memset,w
 10860  2201  0081               	movwf	1
 10861  2202  3001               	movlw	1
 10862  2203  00F4               	movwf	??_memset
 10863  2204  0874               	movf	??_memset,w
 10864  2205  07F6               	addwf	memset@p,f
 10865  2206  29F1               	goto	l6617
 10866  2207                     __end_of_memset:	
 10867                           ;	Return value of _memset is never used
 10868                           
 10869                           
 10870                           	psect	text9
 10871  10B3                     __ptext9:	
 10872 ;; *************** function _init_bq25895 *****************
 10873 ;; Defined at:
 10874 ;;		line 11 in file "bq25895.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;		None
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;  I2c_buff        9    4[BANK0 ] unsigned char [9]
 10879 ;;  I2C_rsp         1    3[BANK0 ] unsigned char 
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      unsigned char 
 10882 ;; Registers used:
 10883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10890 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10891 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10892 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10893 ;;Total ram usage:       13 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:    2
 10896 ;; This function calls:
 10897 ;;		_copybits8
 10898 ;;		_i2c_multi_read
 10899 ;;		_i2c_multi_write
 10900 ;; This function is called by:
 10901 ;;		_main
 10902 ;;		_pmic_status_read
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           
 10907                           ;psect for function _init_bq25895
 10908  10B3                     _init_bq25895:	
 10909                           
 10910                           ;bq25895.c: 13: uint8_t I2C_rsp;
 10911                           ;bq25895.c: 14: uint8_t I2c_buff[9];
 10912                           ;bq25895.c: 16: i2c_multi_read(0xD4, 0x00, I2c_buff, 9);
 10913                           
 10914                           ;incstack = 0
 10915                           ; Regs used in _init_bq25895: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10916  10B3  01F1               	clrf	i2c_multi_read@reg_addr
 10917  10B4  3024               	movlw	low init_bq25895@I2c_buff
 10918  10B5  00F2               	movwf	i2c_multi_read@data
 10919  10B6  3000               	movlw	high init_bq25895@I2c_buff
 10920  10B7  00F3               	movwf	i2c_multi_read@data+1
 10921  10B8  3009               	movlw	9
 10922  10B9  0140               	movlb	0	; select bank0
 10923  10BA  00A0               	movwf	??_init_bq25895
 10924  10BB  0820               	movf	??_init_bq25895,w
 10925  10BC  00F4               	movwf	i2c_multi_read@length
 10926  10BD  30D4               	movlw	212
 10927  10BE  3198  20D2  3190   	fcall	_i2c_multi_read
 10928                           
 10929                           ;bq25895.c: 17: I2c_buff[0] = copybits8(I2c_buff[0], 0b01111111, 0b00010100);
 10930  10C1  307F               	movlw	127
 10931  10C2  0140               	movlb	0	; select bank0
 10932  10C3  00A0               	movwf	??_init_bq25895
 10933  10C4  0820               	movf	??_init_bq25895,w
 10934  10C5  00F0               	movwf	copybits8@mask
 10935  10C6  3014               	movlw	20
 10936  10C7  00A1               	movwf	??_init_bq25895+1
 10937  10C8  0821               	movf	??_init_bq25895+1,w
 10938  10C9  00F1               	movwf	copybits8@new_value
 10939  10CA  0824               	movf	init_bq25895@I2c_buff,w
 10940  10CB  31A0  209D  3190   	fcall	_copybits8
 10941  10CE  0140               	movlb	0	; select bank0
 10942  10CF  00A2               	movwf	??_init_bq25895+2
 10943  10D0  0822               	movf	??_init_bq25895+2,w
 10944  10D1  00A4               	movwf	init_bq25895@I2c_buff
 10945                           
 10946                           ;bq25895.c: 18: I2c_buff[1] = copybits8(I2c_buff[1], 0b00000000, 0b00000000);
 10947  10D2  01F0               	clrf	copybits8@mask
 10948  10D3  01F1               	clrf	copybits8@new_value
 10949  10D4  0825               	movf	init_bq25895@I2c_buff+1,w
 10950  10D5  31A0  209D  3190   	fcall	_copybits8
 10951  10D8  0140               	movlb	0	; select bank0
 10952  10D9  00A0               	movwf	??_init_bq25895
 10953  10DA  0820               	movf	??_init_bq25895,w
 10954  10DB  00A5               	movwf	init_bq25895@I2c_buff+1
 10955                           
 10956                           ;bq25895.c: 19: I2c_buff[2] = copybits8(I2c_buff[2], 0b00001101, 0b00000000);
 10957  10DC  300D               	movlw	13
 10958  10DD  00A0               	movwf	??_init_bq25895
 10959  10DE  0820               	movf	??_init_bq25895,w
 10960  10DF  00F0               	movwf	copybits8@mask
 10961  10E0  01F1               	clrf	copybits8@new_value
 10962  10E1  0826               	movf	init_bq25895@I2c_buff+2,w
 10963  10E2  31A0  209D  3190   	fcall	_copybits8
 10964  10E5  0140               	movlb	0	; select bank0
 10965  10E6  00A1               	movwf	??_init_bq25895+1
 10966  10E7  0821               	movf	??_init_bq25895+1,w
 10967  10E8  00A6               	movwf	init_bq25895@I2c_buff+2
 10968                           
 10969                           ;bq25895.c: 20: I2c_buff[3] = copybits8(I2c_buff[3], 0b01100000, 0b01000000);
 10970  10E9  3060               	movlw	96
 10971  10EA  00A0               	movwf	??_init_bq25895
 10972  10EB  0820               	movf	??_init_bq25895,w
 10973  10EC  00F0               	movwf	copybits8@mask
 10974  10ED  3040               	movlw	64
 10975  10EE  00A1               	movwf	??_init_bq25895+1
 10976  10EF  0821               	movf	??_init_bq25895+1,w
 10977  10F0  00F1               	movwf	copybits8@new_value
 10978  10F1  0827               	movf	init_bq25895@I2c_buff+3,w
 10979  10F2  31A0  209D  3190   	fcall	_copybits8
 10980  10F5  0140               	movlb	0	; select bank0
 10981  10F6  00A2               	movwf	??_init_bq25895+2
 10982  10F7  0822               	movf	??_init_bq25895+2,w
 10983  10F8  00A7               	movwf	init_bq25895@I2c_buff+3
 10984                           
 10985                           ;bq25895.c: 21: I2c_buff[4] = copybits8(I2c_buff[4], 0b01111111, 0b00010000);
 10986  10F9  307F               	movlw	127
 10987  10FA  00A0               	movwf	??_init_bq25895
 10988  10FB  0820               	movf	??_init_bq25895,w
 10989  10FC  00F0               	movwf	copybits8@mask
 10990  10FD  3010               	movlw	16
 10991  10FE  00A1               	movwf	??_init_bq25895+1
 10992  10FF  0821               	movf	??_init_bq25895+1,w
 10993  1100  00F1               	movwf	copybits8@new_value
 10994  1101  0828               	movf	init_bq25895@I2c_buff+4,w
 10995  1102  31A0  209D  3190   	fcall	_copybits8
 10996  1105  0140               	movlb	0	; select bank0
 10997  1106  00A2               	movwf	??_init_bq25895+2
 10998  1107  0822               	movf	??_init_bq25895+2,w
 10999  1108  00A8               	movwf	init_bq25895@I2c_buff+4
 11000                           
 11001                           ;bq25895.c: 22: I2c_buff[5] = copybits8(I2c_buff[5], 0b00001111, 0b00000011);
 11002  1109  300F               	movlw	15
 11003  110A  00A0               	movwf	??_init_bq25895
 11004  110B  0820               	movf	??_init_bq25895,w
 11005  110C  00F0               	movwf	copybits8@mask
 11006  110D  3003               	movlw	3
 11007  110E  00A1               	movwf	??_init_bq25895+1
 11008  110F  0821               	movf	??_init_bq25895+1,w
 11009  1110  00F1               	movwf	copybits8@new_value
 11010  1111  0829               	movf	init_bq25895@I2c_buff+5,w
 11011  1112  31A0  209D  3190   	fcall	_copybits8
 11012  1115  0140               	movlb	0	; select bank0
 11013  1116  00A2               	movwf	??_init_bq25895+2
 11014  1117  0822               	movf	??_init_bq25895+2,w
 11015  1118  00A9               	movwf	init_bq25895@I2c_buff+5
 11016                           
 11017                           ;bq25895.c: 23: I2c_buff[6] = copybits8(I2c_buff[6], 0b00000000, 0b00000000);
 11018  1119  01F0               	clrf	copybits8@mask
 11019  111A  01F1               	clrf	copybits8@new_value
 11020  111B  082A               	movf	init_bq25895@I2c_buff+6,w
 11021  111C  31A0  209D  3190   	fcall	_copybits8
 11022  111F  0140               	movlb	0	; select bank0
 11023  1120  00A0               	movwf	??_init_bq25895
 11024  1121  0820               	movf	??_init_bq25895,w
 11025  1122  00AA               	movwf	init_bq25895@I2c_buff+6
 11026                           
 11027                           ;bq25895.c: 24: I2c_buff[7] = copybits8(I2c_buff[7], 0b01000110, 0b00000100);
 11028  1123  3046               	movlw	70
 11029  1124  00A0               	movwf	??_init_bq25895
 11030  1125  0820               	movf	??_init_bq25895,w
 11031  1126  00F0               	movwf	copybits8@mask
 11032  1127  3004               	movlw	4
 11033  1128  00A1               	movwf	??_init_bq25895+1
 11034  1129  0821               	movf	??_init_bq25895+1,w
 11035  112A  00F1               	movwf	copybits8@new_value
 11036  112B  082B               	movf	init_bq25895@I2c_buff+7,w
 11037  112C  31A0  209D  3190   	fcall	_copybits8
 11038  112F  0140               	movlb	0	; select bank0
 11039  1130  00A2               	movwf	??_init_bq25895+2
 11040  1131  0822               	movf	??_init_bq25895+2,w
 11041  1132  00AB               	movwf	init_bq25895@I2c_buff+7
 11042                           
 11043                           ;bq25895.c: 25: I2c_buff[8] = copybits8(I2c_buff[8], 0b00000011, 0b00000000);
 11044  1133  3003               	movlw	3
 11045  1134  00A0               	movwf	??_init_bq25895
 11046  1135  0820               	movf	??_init_bq25895,w
 11047  1136  00F0               	movwf	copybits8@mask
 11048  1137  01F1               	clrf	copybits8@new_value
 11049  1138  082C               	movf	init_bq25895@I2c_buff+8,w
 11050  1139  31A0  209D  3190   	fcall	_copybits8
 11051  113C  0140               	movlb	0	; select bank0
 11052  113D  00A1               	movwf	??_init_bq25895+1
 11053  113E  0821               	movf	??_init_bq25895+1,w
 11054  113F  00AC               	movwf	init_bq25895@I2c_buff+8
 11055                           
 11056                           ;bq25895.c: 26: I2C_rsp = i2c_multi_write(0xD4, 0x00, I2c_buff, 9);
 11057  1140  01F1               	clrf	i2c_multi_write@reg_addr
 11058  1141  3024               	movlw	(low (init_bq25895@I2c_buff| 0))& (0+255)
 11059  1142  00A0               	movwf	??_init_bq25895
 11060  1143  0820               	movf	??_init_bq25895,w
 11061  1144  00F2               	movwf	i2c_multi_write@data
 11062  1145  3009               	movlw	9
 11063  1146  00A1               	movwf	??_init_bq25895+1
 11064  1147  0821               	movf	??_init_bq25895+1,w
 11065  1148  00F3               	movwf	i2c_multi_write@length
 11066  1149  30D4               	movlw	212
 11067  114A  31A4  24CA         	fcall	_i2c_multi_write
 11068  114C  0140               	movlb	0	; select bank0
 11069  114D  00A2               	movwf	??_init_bq25895+2
 11070  114E  0822               	movf	??_init_bq25895+2,w
 11071  114F  00A3               	movwf	init_bq25895@I2C_rsp
 11072  1150  0008               	return
 11073  1151                     __end_of_init_bq25895:	
 11074                           ;bq25895.c: 28: return I2C_rsp;
 11075                           ;	Return value of _init_bq25895 is never used
 11076                           
 11077                           
 11078                           	psect	text10
 11079  24CA                     __ptext10:	
 11080 ;; *************** function _i2c_multi_write *****************
 11081 ;; Defined at:
 11082 ;;		line 42 in file "bq25895.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  device_addr     1    wreg     unsigned char 
 11085 ;;  reg_addr        1    1[COMMON] unsigned char 
 11086 ;;  data            1    2[COMMON] PTR unsigned char 
 11087 ;;		 -> init_bq25895@I2c_buff(9), 
 11088 ;;  length          1    3[COMMON] unsigned char 
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  device_addr     1    6[COMMON] unsigned char 
 11091 ;;  j               1    8[COMMON] unsigned char 
 11092 ;;  I2C_rsp         1    7[COMMON] unsigned char 
 11093 ;; Return value:  Size  Location     Type
 11094 ;;                  1    wreg      unsigned char 
 11095 ;; Registers used:
 11096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11097 ;; Tracked objects:
 11098 ;;		On entry : 0/0
 11099 ;;		On exit  : 0/0
 11100 ;;		Unchanged: 0/0
 11101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11103 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11105 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11106 ;;Total ram usage:        8 bytes
 11107 ;; Hardware stack levels used:    1
 11108 ;; Hardware stack levels required when called:    1
 11109 ;; This function calls:
 11110 ;;		_i2c_start
 11111 ;;		_i2c_stop
 11112 ;;		_i2c_write
 11113 ;; This function is called by:
 11114 ;;		_init_bq25895
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118                           
 11119                           ;psect for function _i2c_multi_write
 11120  24CA                     _i2c_multi_write:	
 11121                           
 11122                           ;incstack = 0
 11123                           ; Regs used in _i2c_multi_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11124                           ;i2c_multi_write@device_addr stored from wreg
 11125  24CA  00F6               	movwf	i2c_multi_write@device_addr
 11126                           
 11127                           ;bq25895.c: 44: uint8_t I2C_rsp;
 11128                           ;bq25895.c: 45: uint8_t j;
 11129                           ;bq25895.c: 46: i2c_start();
 11130  24CB  31A0  20A7  31A4   	fcall	_i2c_start
 11131                           
 11132                           ;bq25895.c: 47: I2C_rsp = i2c_write(device_addr);
 11133  24CE  0876               	movf	i2c_multi_write@device_addr,w
 11134  24CF  31A0  20E0  31A4   	fcall	_i2c_write
 11135  24D2  00F4               	movwf	??_i2c_multi_write
 11136  24D3  0874               	movf	??_i2c_multi_write,w
 11137  24D4  00F7               	movwf	i2c_multi_write@I2C_rsp
 11138                           
 11139                           ;bq25895.c: 48: I2C_rsp = i2c_write(reg_addr);
 11140  24D5  0871               	movf	i2c_multi_write@reg_addr,w
 11141  24D6  31A0  20E0  31A4   	fcall	_i2c_write
 11142  24D9  00F4               	movwf	??_i2c_multi_write
 11143  24DA  0874               	movf	??_i2c_multi_write,w
 11144  24DB  00F7               	movwf	i2c_multi_write@I2C_rsp
 11145                           
 11146                           ;bq25895.c: 49: for(j=0; j<length; j++)
 11147  24DC  01F8               	clrf	i2c_multi_write@j
 11148  24DD                     l5977:	
 11149  24DD  0873               	movf	i2c_multi_write@length,w
 11150  24DE  0278               	subwf	i2c_multi_write@j,w
 11151  24DF  1803               	btfsc	3,0
 11152  24E0  2CF3               	goto	l5979
 11153                           
 11154                           ;bq25895.c: 50: {
 11155                           ;bq25895.c: 51: I2C_rsp = i2c_write(data[j]);
 11156  24E1  0878               	movf	i2c_multi_write@j,w
 11157  24E2  0772               	addwf	i2c_multi_write@data,w
 11158  24E3  00F4               	movwf	??_i2c_multi_write
 11159  24E4  0874               	movf	??_i2c_multi_write,w
 11160  24E5  0086               	movwf	6
 11161  24E6  0187               	clrf	7
 11162  24E7  0801               	movf	1,w
 11163  24E8  31A0  20E0  31A4   	fcall	_i2c_write
 11164  24EB  00F5               	movwf	??_i2c_multi_write+1
 11165  24EC  0875               	movf	??_i2c_multi_write+1,w
 11166  24ED  00F7               	movwf	i2c_multi_write@I2C_rsp
 11167  24EE  3001               	movlw	1
 11168  24EF  00F4               	movwf	??_i2c_multi_write
 11169  24F0  0874               	movf	??_i2c_multi_write,w
 11170  24F1  07F8               	addwf	i2c_multi_write@j,f
 11171  24F2  2CDD               	goto	l5977
 11172  24F3                     l5979:	
 11173                           
 11174                           ;bq25895.c: 52: }
 11175                           ;bq25895.c: 53: i2c_stop();
 11176  24F3  31A0  20AC         	fcall	_i2c_stop
 11177                           
 11178                           ;bq25895.c: 54: return I2C_rsp;
 11179  24F5  0877               	movf	i2c_multi_write@I2C_rsp,w
 11180  24F6  0008               	return
 11181  24F7                     __end_of_i2c_multi_write:	
 11182                           
 11183                           	psect	text11
 11184  18D2                     __ptext11:	
 11185 ;; *************** function _i2c_multi_read *****************
 11186 ;; Defined at:
 11187 ;;		line 57 in file "bq25895.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  device_addr     1    wreg     unsigned char 
 11190 ;;  reg_addr        1    1[COMMON] unsigned char 
 11191 ;;  data            2    2[COMMON] PTR unsigned char 
 11192 ;;		 -> I2C_read_buff(10), init_bq25895@I2c_buff(9), 
 11193 ;;  length          1    4[COMMON] unsigned char 
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;  device_addr     1   11[COMMON] unsigned char 
 11196 ;;  j               1   12[COMMON] unsigned char 
 11197 ;;  I2C_rsp         1   10[COMMON] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  2    1[COMMON] PTR unsigned char 
 11200 ;; Registers used:
 11201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11208 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11209 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11210 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11211 ;;Total ram usage:       12 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    1
 11214 ;; This function calls:
 11215 ;;		_i2c_read
 11216 ;;		_i2c_restart
 11217 ;;		_i2c_start
 11218 ;;		_i2c_stop
 11219 ;;		_i2c_write
 11220 ;; This function is called by:
 11221 ;;		_init_bq25895
 11222 ;;		_pmic_status_read
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           
 11227                           ;psect for function _i2c_multi_read
 11228  18D2                     _i2c_multi_read:	
 11229                           
 11230                           ;incstack = 0
 11231                           ; Regs used in _i2c_multi_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11232                           ;i2c_multi_read@device_addr stored from wreg
 11233  18D2  00FB               	movwf	i2c_multi_read@device_addr
 11234                           
 11235                           ;bq25895.c: 59: uint8_t I2C_rsp;
 11236                           ;bq25895.c: 60: uint8_t j;
 11237                           ;bq25895.c: 61: i2c_start();
 11238  18D3  31A0  20A7  3198   	fcall	_i2c_start
 11239                           
 11240                           ;bq25895.c: 62: I2C_rsp = i2c_write(device_addr);
 11241  18D6  087B               	movf	i2c_multi_read@device_addr,w
 11242  18D7  31A0  20E0  3198   	fcall	_i2c_write
 11243  18DA  00F5               	movwf	??_i2c_multi_read
 11244  18DB  0875               	movf	??_i2c_multi_read,w
 11245  18DC  00FA               	movwf	i2c_multi_read@I2C_rsp
 11246                           
 11247                           ;bq25895.c: 63: I2C_rsp = i2c_write(reg_addr);
 11248  18DD  0871               	movf	i2c_multi_read@reg_addr,w
 11249  18DE  31A0  20E0  3198   	fcall	_i2c_write
 11250  18E1  00F5               	movwf	??_i2c_multi_read
 11251  18E2  0875               	movf	??_i2c_multi_read,w
 11252  18E3  00FA               	movwf	i2c_multi_read@I2C_rsp
 11253                           
 11254                           ;bq25895.c: 64: i2c_restart();
 11255  18E4  31A0  20A2  3198   	fcall	_i2c_restart
 11256                           
 11257                           ;bq25895.c: 65: I2C_rsp = (uint8_t)i2c_write(device_addr + 1);
 11258  18E7  087B               	movf	i2c_multi_read@device_addr,w
 11259  18E8  3E01               	addlw	1
 11260  18E9  31A0  20E0  3198   	fcall	_i2c_write
 11261  18EC  00F5               	movwf	??_i2c_multi_read
 11262  18ED  0875               	movf	??_i2c_multi_read,w
 11263  18EE  00FA               	movwf	i2c_multi_read@I2C_rsp
 11264                           
 11265                           ;bq25895.c: 67: for(j=0; j<length; j++)
 11266  18EF  01FC               	clrf	i2c_multi_read@j
 11267  18F0                     l5959:	
 11268  18F0  0874               	movf	i2c_multi_read@length,w
 11269  18F1  027C               	subwf	i2c_multi_read@j,w
 11270  18F2  1803               	btfsc	3,0
 11271  18F3  291B               	goto	l5961
 11272                           
 11273                           ;bq25895.c: 68: {
 11274                           ;bq25895.c: 69: if(j == (length - 1))
 11275  18F4  0874               	movf	i2c_multi_read@length,w
 11276  18F5  3EFF               	addlw	255
 11277  18F6  00F5               	movwf	??_i2c_multi_read
 11278  18F7  30FF               	movlw	255
 11279  18F8  1803               	skipnc
 11280  18F9  3000               	movlw	0
 11281  18FA  00F6               	movwf	??_i2c_multi_read+1
 11282  18FB  087C               	movf	i2c_multi_read@j,w
 11283  18FC  0675               	xorwf	??_i2c_multi_read,w
 11284  18FD  0476               	iorwf	??_i2c_multi_read+1,w
 11285  18FE  1D03               	skipz
 11286  18FF  2902               	goto	l5955
 11287                           
 11288                           ;bq25895.c: 70: {
 11289                           ;bq25895.c: 71: data[j] = i2c_read(1);
 11290  1900  3001               	movlw	1
 11291  1901  2903               	goto	L3
 11292  1902                     l5955:	
 11293                           ;bq25895.c: 72: }
 11294                           
 11295                           
 11296                           ;bq25895.c: 73: else
 11297                           ;bq25895.c: 74: {
 11298                           ;bq25895.c: 75: data[j] = i2c_read(0);
 11299  1902  3000               	movlw	0
 11300  1903                     L3:	
 11301  1903  31A1  212D  3198   	fcall	_i2c_read
 11302  1906  00F5               	movwf	??_i2c_multi_read
 11303  1907  087C               	movf	i2c_multi_read@j,w
 11304  1908  00F6               	movwf	??_i2c_multi_read+1
 11305  1909  01F7               	clrf	??_i2c_multi_read+2
 11306  190A  0876               	movf	??_i2c_multi_read+1,w
 11307  190B  0772               	addwf	i2c_multi_read@data,w
 11308  190C  00F8               	movwf	??_i2c_multi_read+3
 11309  190D  0877               	movf	??_i2c_multi_read+2,w
 11310  190E  3D73               	addwfc	i2c_multi_read@data+1,w
 11311  190F  00F9               	movwf	??_i2c_multi_read+4
 11312  1910  0878               	movf	??_i2c_multi_read+3,w
 11313  1911  0086               	movwf	6
 11314  1912  0879               	movf	??_i2c_multi_read+4,w
 11315  1913  0087               	movwf	7
 11316  1914  0875               	movf	??_i2c_multi_read,w
 11317  1915  0081               	movwf	1
 11318  1916  3001               	movlw	1
 11319  1917  00F5               	movwf	??_i2c_multi_read
 11320  1918  0875               	movf	??_i2c_multi_read,w
 11321  1919  07FC               	addwf	i2c_multi_read@j,f
 11322  191A  28F0               	goto	l5959
 11323  191B                     l5961:	
 11324                           
 11325                           ;bq25895.c: 76: }
 11326                           ;bq25895.c: 77: }
 11327                           ;bq25895.c: 79: i2c_stop();
 11328  191B  31A0  20AC         	fcall	_i2c_stop
 11329  191D  0008               	return
 11330  191E                     __end_of_i2c_multi_read:	
 11331                           ;bq25895.c: 81: return data;
 11332                           ;	Return value of _i2c_multi_read is never used
 11333                           
 11334                           
 11335                           	psect	text12
 11336  235B                     __ptext12:	
 11337 ;; *************** function _bq25895_WDT_reset *****************
 11338 ;; Defined at:
 11339 ;;		line 30 in file "bq25895.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  Reg_03_value    1    9[COMMON] unsigned char 
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      unsigned char 
 11346 ;; Registers used:
 11347 ;;		wreg, status,2, status,0, pclath, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11355 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11357 ;;Total ram usage:        4 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:    2
 11360 ;; This function calls:
 11361 ;;		_copybits8
 11362 ;;		_i2c_single_read
 11363 ;;		_i2c_single_write
 11364 ;; This function is called by:
 11365 ;;		_pmic_status_read
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           
 11370                           ;psect for function _bq25895_WDT_reset
 11371  235B                     _bq25895_WDT_reset:	
 11372                           
 11373                           ;bq25895.c: 33: uint8_t Reg_03_value;
 11374                           ;bq25895.c: 34: Reg_03_value = i2c_single_read(0xD4, 0x03);
 11375                           
 11376                           ;incstack = 0
 11377                           ; Regs used in _bq25895_WDT_reset: [wreg+status,2+status,0+pclath+cstack]
 11378  235B  3003               	movlw	3
 11379  235C  00F6               	movwf	??_bq25895_WDT_reset
 11380  235D  0876               	movf	??_bq25895_WDT_reset,w
 11381  235E  00F1               	movwf	i2c_single_read@reg_addr
 11382  235F  30D4               	movlw	212
 11383  2360  31A3  23F7  31A3   	fcall	_i2c_single_read
 11384  2363  00F7               	movwf	??_bq25895_WDT_reset+1
 11385  2364  0877               	movf	??_bq25895_WDT_reset+1,w
 11386  2365  00F9               	movwf	bq25895_WDT_reset@Reg_03_value
 11387                           
 11388                           ;bq25895.c: 36: Reg_03_value = copybits8(Reg_03_value, 0b01100000, 0b01000000);
 11389  2366  3060               	movlw	96
 11390  2367  00F6               	movwf	??_bq25895_WDT_reset
 11391  2368  0876               	movf	??_bq25895_WDT_reset,w
 11392  2369  00F0               	movwf	copybits8@mask
 11393  236A  3040               	movlw	64
 11394  236B  00F7               	movwf	??_bq25895_WDT_reset+1
 11395  236C  0877               	movf	??_bq25895_WDT_reset+1,w
 11396  236D  00F1               	movwf	copybits8@new_value
 11397  236E  0879               	movf	bq25895_WDT_reset@Reg_03_value,w
 11398  236F  31A0  209D  31A3   	fcall	_copybits8
 11399  2372  00F8               	movwf	??_bq25895_WDT_reset+2
 11400  2373  0878               	movf	??_bq25895_WDT_reset+2,w
 11401  2374  00F9               	movwf	bq25895_WDT_reset@Reg_03_value
 11402                           
 11403                           ;bq25895.c: 38: i2c_single_write(0xD4, 0x03, Reg_03_value);
 11404  2375  3003               	movlw	3
 11405  2376  00F6               	movwf	??_bq25895_WDT_reset
 11406  2377  0876               	movf	??_bq25895_WDT_reset,w
 11407  2378  00F1               	movwf	i2c_single_write@reg_addr
 11408  2379  0879               	movf	bq25895_WDT_reset@Reg_03_value,w
 11409  237A  00F7               	movwf	??_bq25895_WDT_reset+1
 11410  237B  0877               	movf	??_bq25895_WDT_reset+1,w
 11411  237C  00F2               	movwf	i2c_single_write@data
 11412  237D  30D4               	movlw	212
 11413  237E  31A2  2293         	fcall	_i2c_single_write
 11414  2380  0008               	return
 11415  2381                     __end_of_bq25895_WDT_reset:	
 11416                           ;bq25895.c: 39: return 0;
 11417                           ;	Return value of _bq25895_WDT_reset is never used
 11418                           
 11419                           
 11420                           	psect	text13
 11421  2293                     __ptext13:	
 11422 ;; *************** function _i2c_single_write *****************
 11423 ;; Defined at:
 11424 ;;		line 84 in file "bq25895.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;  device_addr     1    wreg     unsigned char 
 11427 ;;  reg_addr        1    1[COMMON] unsigned char 
 11428 ;;  data            1    2[COMMON] unsigned char 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  device_addr     1    5[COMMON] unsigned char 
 11431 ;;  I2C_rsp         1    4[COMMON] unsigned char 
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      unsigned char 
 11434 ;; Registers used:
 11435 ;;		wreg, status,2, status,0, pclath, cstack
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11444 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11445 ;;Total ram usage:        5 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; Hardware stack levels required when called:    1
 11448 ;; This function calls:
 11449 ;;		_i2c_start
 11450 ;;		_i2c_stop
 11451 ;;		_i2c_write
 11452 ;; This function is called by:
 11453 ;;		_bq25895_WDT_reset
 11454 ;;		_pmic_status_read
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           
 11459                           ;psect for function _i2c_single_write
 11460  2293                     _i2c_single_write:	
 11461                           
 11462                           ;incstack = 0
 11463                           ; Regs used in _i2c_single_write: [wreg+status,2+status,0+pclath+cstack]
 11464                           ;i2c_single_write@device_addr stored from wreg
 11465  2293  00F5               	movwf	i2c_single_write@device_addr
 11466                           
 11467                           ;bq25895.c: 86: uint8_t I2C_rsp;
 11468                           ;bq25895.c: 87: i2c_start();
 11469  2294  31A0  20A7  31A2   	fcall	_i2c_start
 11470                           
 11471                           ;bq25895.c: 88: I2C_rsp = i2c_write(device_addr);
 11472  2297  0875               	movf	i2c_single_write@device_addr,w
 11473  2298  31A0  20E0  31A2   	fcall	_i2c_write
 11474  229B  00F3               	movwf	??_i2c_single_write
 11475  229C  0873               	movf	??_i2c_single_write,w
 11476  229D  00F4               	movwf	i2c_single_write@I2C_rsp
 11477                           
 11478                           ;bq25895.c: 89: I2C_rsp = i2c_write(reg_addr);
 11479  229E  0871               	movf	i2c_single_write@reg_addr,w
 11480  229F  31A0  20E0  31A2   	fcall	_i2c_write
 11481  22A2  00F3               	movwf	??_i2c_single_write
 11482  22A3  0873               	movf	??_i2c_single_write,w
 11483  22A4  00F4               	movwf	i2c_single_write@I2C_rsp
 11484                           
 11485                           ;bq25895.c: 90: I2C_rsp = i2c_write(data);
 11486  22A5  0872               	movf	i2c_single_write@data,w
 11487  22A6  31A0  20E0  31A2   	fcall	_i2c_write
 11488  22A9  00F3               	movwf	??_i2c_single_write
 11489  22AA  0873               	movf	??_i2c_single_write,w
 11490  22AB  00F4               	movwf	i2c_single_write@I2C_rsp
 11491                           
 11492                           ;bq25895.c: 91: i2c_stop();
 11493  22AC  31A0  20AC         	fcall	_i2c_stop
 11494  22AE  0008               	return
 11495  22AF                     __end_of_i2c_single_write:	
 11496                           ;bq25895.c: 92: return I2C_rsp;
 11497                           ;	Return value of _i2c_single_write is never used
 11498                           
 11499                           
 11500                           	psect	text14
 11501  23F7                     __ptext14:	
 11502 ;; *************** function _i2c_single_read *****************
 11503 ;; Defined at:
 11504 ;;		line 95 in file "bq25895.c"
 11505 ;; Parameters:    Size  Location     Type
 11506 ;;  device_addr     1    wreg     unsigned char 
 11507 ;;  reg_addr        1    1[COMMON] unsigned char 
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;  device_addr     1    5[COMMON] unsigned char 
 11510 ;;  I2C_data        1    4[COMMON] unsigned char 
 11511 ;;  I2C_rsp         1    3[COMMON] unsigned char 
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  1    wreg      unsigned char 
 11514 ;; Registers used:
 11515 ;;		wreg, status,2, status,0, pclath, cstack
 11516 ;; Tracked objects:
 11517 ;;		On entry : 0/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11521 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11522 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11524 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11525 ;;Total ram usage:        5 bytes
 11526 ;; Hardware stack levels used:    1
 11527 ;; Hardware stack levels required when called:    1
 11528 ;; This function calls:
 11529 ;;		_i2c_read
 11530 ;;		_i2c_restart
 11531 ;;		_i2c_start
 11532 ;;		_i2c_stop
 11533 ;;		_i2c_write
 11534 ;; This function is called by:
 11535 ;;		_bq25895_WDT_reset
 11536 ;;		_pmic_status_read
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           
 11541                           ;psect for function _i2c_single_read
 11542  23F7                     _i2c_single_read:	
 11543                           
 11544                           ;incstack = 0
 11545                           ; Regs used in _i2c_single_read: [wreg+status,2+status,0+pclath+cstack]
 11546                           ;i2c_single_read@device_addr stored from wreg
 11547  23F7  00F5               	movwf	i2c_single_read@device_addr
 11548                           
 11549                           ;bq25895.c: 97: uint8_t I2C_rsp;
 11550                           ;bq25895.c: 98: uint8_t I2C_data;
 11551                           ;bq25895.c: 99: i2c_start();
 11552  23F8  31A0  20A7  31A3   	fcall	_i2c_start
 11553                           
 11554                           ;bq25895.c: 100: I2C_rsp = i2c_write(device_addr);
 11555  23FB  0875               	movf	i2c_single_read@device_addr,w
 11556  23FC  31A0  20E0  31A3   	fcall	_i2c_write
 11557  23FF  00F2               	movwf	??_i2c_single_read
 11558  2400  0872               	movf	??_i2c_single_read,w
 11559  2401  00F3               	movwf	i2c_single_read@I2C_rsp
 11560                           
 11561                           ;bq25895.c: 101: I2C_rsp = i2c_write(reg_addr);
 11562  2402  0871               	movf	i2c_single_read@reg_addr,w
 11563  2403  31A0  20E0  31A3   	fcall	_i2c_write
 11564  2406  00F2               	movwf	??_i2c_single_read
 11565  2407  0872               	movf	??_i2c_single_read,w
 11566  2408  00F3               	movwf	i2c_single_read@I2C_rsp
 11567                           
 11568                           ;bq25895.c: 102: i2c_restart();
 11569  2409  31A0  20A2  31A3   	fcall	_i2c_restart
 11570                           
 11571                           ;bq25895.c: 103: I2C_rsp = (uint8_t)i2c_write(device_addr + 1);
 11572  240C  0875               	movf	i2c_single_read@device_addr,w
 11573  240D  3E01               	addlw	1
 11574  240E  31A0  20E0  31A3   	fcall	_i2c_write
 11575  2411  00F2               	movwf	??_i2c_single_read
 11576  2412  0872               	movf	??_i2c_single_read,w
 11577  2413  00F3               	movwf	i2c_single_read@I2C_rsp
 11578                           
 11579                           ;bq25895.c: 104: I2C_data = i2c_read(1);
 11580  2414  3001               	movlw	1
 11581  2415  31A1  212D  31A3   	fcall	_i2c_read
 11582  2418  00F2               	movwf	??_i2c_single_read
 11583  2419  0872               	movf	??_i2c_single_read,w
 11584  241A  00F4               	movwf	i2c_single_read@I2C_data
 11585                           
 11586                           ;bq25895.c: 105: i2c_stop();
 11587  241B  31A0  20AC         	fcall	_i2c_stop
 11588                           
 11589                           ;bq25895.c: 106: return I2C_data;
 11590  241D  0874               	movf	i2c_single_read@I2C_data,w
 11591  241E  0008               	return
 11592  241F                     __end_of_i2c_single_read:	
 11593                           
 11594                           	psect	text15
 11595  20E0                     __ptext15:	
 11596 ;; *************** function _i2c_write *****************
 11597 ;; Defined at:
 11598 ;;		line 49 in file "pic_i2c.c"
 11599 ;; Parameters:    Size  Location     Type
 11600 ;;  data            1    wreg     unsigned char 
 11601 ;; Auto vars:     Size  Location     Type
 11602 ;;  data            1    0[COMMON] unsigned char 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  1    wreg      unsigned char 
 11605 ;; Registers used:
 11606 ;;		wreg, status,2, status,0
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11616 ;;Total ram usage:        1 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_i2c_multi_write
 11622 ;;		_i2c_multi_read
 11623 ;;		_i2c_single_write
 11624 ;;		_i2c_single_read
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           
 11629                           ;psect for function _i2c_write
 11630  20E0                     _i2c_write:	
 11631                           
 11632                           ;incstack = 0
 11633                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
 11634                           ;i2c_write@data stored from wreg
 11635  20E0  00F0               	movwf	i2c_write@data
 11636                           
 11637                           ;pic_i2c.c: 51: SSP1BUF = data;
 11638  20E1  0870               	movf	i2c_write@data,w
 11639  20E2  0143               	movlb	3	; select bank3
 11640  20E3  008C               	movwf	12	;volatile
 11641  20E4                     l1580:	
 11642                           ;pic_i2c.c: 52: while(SSP1STATbits.RW);
 11643                           
 11644  20E4  190F               	btfsc	15,2	;volatile
 11645  20E5  28E4               	goto	l1580
 11646                           
 11647                           ;pic_i2c.c: 54: return SSP1CON2bits.ACKSTAT;
 11648  20E6  0E11               	swapf	17,w	;volatile
 11649  20E7  0C89               	rrf	9,f
 11650  20E8  0C89               	rrf	9,f
 11651  20E9  3901               	andlw	1
 11652  20EA  0008               	return
 11653  20EB                     __end_of_i2c_write:	
 11654                           
 11655                           	psect	text16
 11656  20AC                     __ptext16:	
 11657 ;; *************** function _i2c_stop *****************
 11658 ;; Defined at:
 11659 ;;		line 41 in file "pic_i2c.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;		None
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1    wreg      void 
 11666 ;; Registers used:
 11667 ;;		None
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/0
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11677 ;;Total ram usage:        0 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; This function calls:
 11680 ;;		Nothing
 11681 ;; This function is called by:
 11682 ;;		_i2c_multi_write
 11683 ;;		_i2c_multi_read
 11684 ;;		_i2c_single_write
 11685 ;;		_i2c_single_read
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           
 11689                           
 11690                           ;psect for function _i2c_stop
 11691  20AC                     _i2c_stop:	
 11692                           
 11693                           ;pic_i2c.c: 43: SSP1CON2bits.PEN = 1;
 11694                           
 11695                           ;incstack = 0
 11696                           ; Regs used in _i2c_stop: []
 11697  20AC  0143               	movlb	3	; select bank3
 11698  20AD  1511               	bsf	17,2	;volatile
 11699  20AE                     l1574:	
 11700                           ;pic_i2c.c: 44: while(SSP1CON2bits.PEN);
 11701                           
 11702  20AE  1D11               	btfss	17,2	;volatile
 11703  20AF  0008               	return
 11704  20B0  28AE               	goto	l1574
 11705  20B1                     __end_of_i2c_stop:	
 11706                           ;pic_i2c.c: 46: return;
 11707                           
 11708                           
 11709                           	psect	text17
 11710  20A7                     __ptext17:	
 11711 ;; *************** function _i2c_start *****************
 11712 ;; Defined at:
 11713 ;;		line 24 in file "pic_i2c.c"
 11714 ;; Parameters:    Size  Location     Type
 11715 ;;		None
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;		None
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  1    wreg      void 
 11720 ;; Registers used:
 11721 ;;		None
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11731 ;;Total ram usage:        0 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; This function calls:
 11734 ;;		Nothing
 11735 ;; This function is called by:
 11736 ;;		_i2c_multi_write
 11737 ;;		_i2c_multi_read
 11738 ;;		_i2c_single_write
 11739 ;;		_i2c_single_read
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           
 11744                           ;psect for function _i2c_start
 11745  20A7                     _i2c_start:	
 11746                           
 11747                           ;pic_i2c.c: 26: SSP1CON2bits.SEN = 1;
 11748                           
 11749                           ;incstack = 0
 11750                           ; Regs used in _i2c_start: []
 11751  20A7  0143               	movlb	3	; select bank3
 11752  20A8  1411               	bsf	17,0	;volatile
 11753  20A9                     l1562:	
 11754                           ;pic_i2c.c: 27: while(SSP1CON2bits.SEN);
 11755                           
 11756  20A9  1C11               	btfss	17,0	;volatile
 11757  20AA  0008               	return
 11758  20AB  28A9               	goto	l1562
 11759  20AC                     __end_of_i2c_start:	
 11760                           ;pic_i2c.c: 29: return;
 11761                           
 11762                           
 11763                           	psect	text18
 11764  20A2                     __ptext18:	
 11765 ;; *************** function _i2c_restart *****************
 11766 ;; Defined at:
 11767 ;;		line 32 in file "pic_i2c.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;		None
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1    wreg      void 
 11774 ;; Registers used:
 11775 ;;		None
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/0
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11785 ;;Total ram usage:        0 bytes
 11786 ;; Hardware stack levels used:    1
 11787 ;; This function calls:
 11788 ;;		Nothing
 11789 ;; This function is called by:
 11790 ;;		_i2c_multi_read
 11791 ;;		_i2c_single_read
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           
 11796                           ;psect for function _i2c_restart
 11797  20A2                     _i2c_restart:	
 11798                           
 11799                           ;pic_i2c.c: 34: SSP1CON2bits.RSEN = 1;
 11800                           
 11801                           ;incstack = 0
 11802                           ; Regs used in _i2c_restart: []
 11803  20A2  0143               	movlb	3	; select bank3
 11804  20A3  1491               	bsf	17,1	;volatile
 11805  20A4                     l1568:	
 11806                           ;pic_i2c.c: 35: while(SSP1CON2bits.RSEN);
 11807                           
 11808  20A4  1C91               	btfss	17,1	;volatile
 11809  20A5  0008               	return
 11810  20A6  28A4               	goto	l1568
 11811  20A7                     __end_of_i2c_restart:	
 11812                           ;pic_i2c.c: 37: return;
 11813                           
 11814                           
 11815                           	psect	text19
 11816  212D                     __ptext19:	
 11817 ;; *************** function _i2c_read *****************
 11818 ;; Defined at:
 11819 ;;		line 57 in file "pic_i2c.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  ack             1    wreg     unsigned char 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  ack             1    0[COMMON] unsigned char 
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      unsigned char 
 11826 ;; Registers used:
 11827 ;;		wreg, status,0
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11837 ;;Total ram usage:        1 bytes
 11838 ;; Hardware stack levels used:    1
 11839 ;; This function calls:
 11840 ;;		Nothing
 11841 ;; This function is called by:
 11842 ;;		_i2c_multi_read
 11843 ;;		_i2c_single_read
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           
 11848                           ;psect for function _i2c_read
 11849  212D                     _i2c_read:	
 11850                           
 11851                           ;incstack = 0
 11852                           ; Regs used in _i2c_read: [wreg+status,0]
 11853                           ;i2c_read@ack stored from wreg
 11854  212D  00F0               	movwf	i2c_read@ack
 11855                           
 11856                           ;pic_i2c.c: 59: SSP1CON2bits.RCEN = 1;
 11857  212E  0143               	movlb	3	; select bank3
 11858  212F  1591               	bsf	17,3	;volatile
 11859                           
 11860                           ;pic_i2c.c: 61: SSP1CON2bits.ACKDT = ack;
 11861  2130  0C70               	rrf	i2c_read@ack,w
 11862  2131  1C03               	skipc
 11863  2132  1291               	bcf	17,5	;volatile
 11864  2133  1803               	skipnc
 11865  2134  1691               	bsf	17,5	;volatile
 11866  2135                     l1586:	
 11867                           ;pic_i2c.c: 65: while(!SSP1STATbits.BF);
 11868                           
 11869  2135  1C0F               	btfss	15,0	;volatile
 11870  2136  2935               	goto	l1586
 11871                           
 11872                           ;pic_i2c.c: 67: SSP1CON2bits.RCEN = 0;
 11873  2137  1191               	bcf	17,3	;volatile
 11874                           
 11875                           ;pic_i2c.c: 69: SSP1CON2bits.ACKEN = 1;
 11876  2138  1611               	bsf	17,4	;volatile
 11877  2139                     l1589:	
 11878                           ;pic_i2c.c: 70: while(SSP1CON2bits.ACKEN);
 11879                           
 11880  2139  1A11               	btfsc	17,4	;volatile
 11881  213A  2939               	goto	l1589
 11882                           
 11883                           ;pic_i2c.c: 72: return SSP1BUF;
 11884  213B  080C               	movf	12,w	;volatile
 11885  213C  0008               	return
 11886  213D                     __end_of_i2c_read:	
 11887                           
 11888                           	psect	text20
 11889  209D                     __ptext20:	
 11890 ;; *************** function _copybits8 *****************
 11891 ;; Defined at:
 11892 ;;		line 8 in file "bq25895.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;  value           1    wreg     unsigned char 
 11895 ;;  mask            1    0[COMMON] unsigned char 
 11896 ;;  new_value       1    1[COMMON] unsigned char 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;  value           1    2[COMMON] unsigned char 
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      unsigned char 
 11901 ;; Registers used:
 11902 ;;		wreg, status,2, status,0
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11912 ;;Total ram usage:        3 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; This function calls:
 11915 ;;		Nothing
 11916 ;; This function is called by:
 11917 ;;		_init_bq25895
 11918 ;;		_bq25895_WDT_reset
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           
 11923                           ;psect for function _copybits8
 11924  209D                     _copybits8:	
 11925                           
 11926                           ;incstack = 0
 11927                           ; Regs used in _copybits8: [wreg+status,2+status,0]
 11928                           ;copybits8@value stored from wreg
 11929  209D  00F2               	movwf	copybits8@value
 11930  209E  0970               	comf	copybits8@mask,w
 11931  209F  0572               	andwf	copybits8@value,w
 11932  20A0  0471               	iorwf	copybits8@new_value,w
 11933  20A1  0008               	return
 11934  20A2                     __end_of_copybits8:	
 11935                           
 11936                           	psect	text21
 11937  1AD2                     __ptext21:	
 11938 ;; *************** function _dw_main *****************
 11939 ;; Defined at:
 11940 ;;		line 86 in file "decawave.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;  data           50    0        unsigned char [50]
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11956 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11957 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11958 ;;Total ram usage:        1 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:   11
 11961 ;; This function calls:
 11962 ;;		_Sleep
 11963 ;;		_dwt_configure
 11964 ;;		_dwt_configuretxrf
 11965 ;;		_dwt_initialise
 11966 ;;		_dwt_setrxantennadelay
 11967 ;;		_dwt_settxantennadelay
 11968 ;;		_dwt_starttx
 11969 ;;		_dwt_writetxdata
 11970 ;;		_dwt_writetxfctrl
 11971 ;;		_printf_string
 11972 ;;		_reset_DWIC
 11973 ;; This function is called by:
 11974 ;;		_main
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           
 11979                           ;psect for function _dw_main
 11980  1AD2                     _dw_main:	
 11981                           
 11982                           ;decawave.c: 88: char data[50];
 11983                           ;decawave.c: 90: printf_string("\n\rdw_main");
 11984                           
 11985                           ;incstack = 0
 11986                           ; Regs used in _dw_main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11987  1AD2  3078               	movlw	low (STR_18| (0+32768))
 11988  1AD3  00F1               	movwf	printf_string@data
 11989  1AD4  30A9               	movlw	high (STR_18| (0+32768))
 11990  1AD5  00F2               	movwf	printf_string@data+1
 11991  1AD6  31A1  213D  319A   	fcall	_printf_string
 11992                           
 11993                           ;decawave.c: 95: reset_DWIC();
 11994  1AD9  31A1  2181  319A   	fcall	_reset_DWIC
 11995                           
 11996                           ;decawave.c: 98: if (dwt_initialise(0x0) == (-1))
 11997  1ADC  3000               	movlw	0
 11998  1ADD  0141               	movlb	1	; select bank1
 11999  1ADE  00C5               	movwf	dwt_initialise@mode^(0+128)
 12000  1ADF  00C6               	movwf	(dwt_initialise@mode+1)^(0+128)
 12001  1AE0  318B  2307  319A   	fcall	_dwt_initialise
 12002  1AE3  0141               	movlb	1	; select bank1
 12003  1AE4  0A45               	incf	?_dwt_initialise^(0+128),w
 12004  1AE5  1D03               	skipz
 12005  1AE6  2AF2               	goto	l6667
 12006  1AE7  0A46               	incf	(?_dwt_initialise+1)^(0+128),w
 12007  1AE8  1D03               	btfss	3,2
 12008  1AE9  2AF2               	goto	l6667
 12009                           
 12010                           ;decawave.c: 99: {
 12011                           ;decawave.c: 101: printf_string("\n\rDWM_ERROR");
 12012  1AEA  3057               	movlw	low (STR_19| (0+32768))
 12013  1AEB  00F1               	movwf	printf_string@data
 12014  1AEC  30A9               	movlw	high (STR_19| (0+32768))
 12015  1AED  00F2               	movwf	printf_string@data+1
 12016  1AEE  31A1  213D  319A   	fcall	_printf_string
 12017  1AF1                     l1341:	
 12018                           ;decawave.c: 103: while (1)
 12019                           
 12020                           
 12021                           ;decawave.c: 104: { };
 12022  1AF1  2AF1               	goto	l1341
 12023  1AF2                     l6667:	
 12024                           
 12025                           ;decawave.c: 105: }
 12026                           ;decawave.c: 106: if(dwt_configure(&config) < 0)
 12027  1AF2  3044               	movlw	(low (_config| (0+512)))& (0+255)
 12028  1AF3  3181  2105  319A   	fcall	_dwt_configure
 12029  1AF6  0141               	movlb	1	; select bank1
 12030  1AF7  1FD7               	btfss	(?_dwt_configure+1)^(0+128),7
 12031  1AF8  2AFD               	goto	l6671
 12032                           
 12033                           ;decawave.c: 107: {
 12034                           ;decawave.c: 109: printf_string("\n\rCONFIG_ERROR");
 12035  1AF9  301E               	movlw	low (STR_20| (0+32768))
 12036  1AFA  00F1               	movwf	printf_string@data
 12037  1AFB  30A9               	movlw	high (STR_20| (0+32768))
 12038  1AFC  2B00               	goto	L4
 12039  1AFD                     l6671:	
 12040                           ;decawave.c: 111: }
 12041                           
 12042                           
 12043                           ;decawave.c: 112: else
 12044                           ;decawave.c: 113: {
 12045                           ;decawave.c: 115: printf_string("\n\rCONFIG_SUCCESS");
 12046  1AFD  30EC               	movlw	low (STR_21| (0+32768))
 12047  1AFE  00F1               	movwf	printf_string@data
 12048  1AFF  30A8               	movlw	high (STR_21| (0+32768))
 12049  1B00                     L4:	
 12050  1B00  00F2               	movwf	printf_string@data+1
 12051  1B01  31A1  213D  319A   	fcall	_printf_string
 12052                           
 12053                           ;decawave.c: 117: }
 12054                           ;decawave.c: 119: dwt_configuretxrf(&txconfig_options_ch9);
 12055  1B04  30E2               	movlw	(low (_txconfig_options_ch9| (0+256)))& (0+255)
 12056  1B05  319C  24E1  319A   	fcall	_dwt_configuretxrf
 12057                           
 12058                           ;decawave.c: 130: dwt_setrxantennadelay(16385);
 12059  1B08  3001               	movlw	1
 12060  1B09  0140               	movlb	0	; select bank0
 12061  1B0A  00EB               	movwf	dwt_setrxantennadelay@rxDelay
 12062  1B0B  3040               	movlw	64
 12063  1B0C  00EC               	movwf	dwt_setrxantennadelay@rxDelay+1
 12064  1B0D  31A2  225B  319A   	fcall	_dwt_setrxantennadelay
 12065                           
 12066                           ;decawave.c: 131: dwt_settxantennadelay(16385);
 12067  1B10  3001               	movlw	1
 12068  1B11  0140               	movlb	0	; select bank0
 12069  1B12  00EB               	movwf	dwt_settxantennadelay@txDelay
 12070  1B13  3040               	movlw	64
 12071  1B14  00EC               	movwf	dwt_settxantennadelay@txDelay+1
 12072  1B15  31A2  2277  319A   	fcall	_dwt_settxantennadelay
 12073                           
 12074                           ;decawave.c: 132: __builtin_memcpy(&tx_blink_msg[5],&ADDR,8);
 12075  1B18  30DA               	movlw	low (_ADDR| (0+256))
 12076  1B19  0084               	movwf	4
 12077  1B1A  3001               	movlw	1	; select bank3/4
 12078  1B1B  0085               	movwf	5
 12079  1B1C  3008               	movlw	8
 12080  1B1D  0141               	movlb	1	; select bank1
 12081  1B1E  00EB               	movwf	??_dw_main^(0+128)
 12082  1B1F  086B               	movf	??_dw_main^(0+128),w
 12083  1B20  1903               	skipnz
 12084  1B21  2B2C               	goto	l6681
 12085  1B22  3005               	movlw	5
 12086  1B23  3E20               	addlw	(low (_tx_blink_msg| (0+512)))& (0+255)
 12087  1B24  0086               	movwf	6
 12088  1B25  3002               	movlw	2	; select bank4/5
 12089  1B26  0087               	movwf	7
 12090  1B27                     u678m0:	
 12091  1B27  0012               	moviw fsr0++
 12092  1B28  001E               	movwi fsr1++
 12093  1B29  0141               	movlb	1	; select bank1
 12094  1B2A  0BEB               	decfsz	??_dw_main^(0+128),f
 12095  1B2B  2B27               	goto	u678m0
 12096  1B2C                     l6681:	
 12097                           
 12098                           ;decawave.c: 135: printf_string("\n\rDWM_OK");
 12099  1B2C  3096               	movlw	low (STR_22| (0+32768))
 12100  1B2D  00F1               	movwf	printf_string@data
 12101  1B2E  30A9               	movlw	high (STR_22| (0+32768))
 12102  1B2F  00F2               	movwf	printf_string@data+1
 12103  1B30  31A1  213D         	fcall	_printf_string
 12104                           
 12105                           ;decawave.c: 137: while (0)
 12106  1B32  0008               	return
 12107  1B33                     __end_of_dw_main:	
 12108                           ;decawave.c: 152: dwt_starttx(0x00);
 12109                           
 12110                           ;decawave.c: 151: dwt_writetxfctrl(sizeof(tx_blink_msg), 0, 0);
 12111                           
 12112                           ;decawave.c: 150: dwt_writetxdata(sizeof(tx_blink_msg), tx_blink_msg, 0);
 12113                           
 12114                           ;decawave.c: 149: tx_blink_msg[2]++;
 12115                           
 12116                           ;decawave.c: 147: printf_string("\n\rDataSend");
 12117                           
 12118                           ;decawave.c: 138: {
 12119                           ;decawave.c: 141: Sleep(1000);
 12120                           
 12121                           
 12122                           	psect	text22
 12123  2181                     __ptext22:	
 12124 ;; *************** function _reset_DWIC *****************
 12125 ;; Defined at:
 12126 ;;		line 129 in file "port.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;		None
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      void 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0, pclath, cstack
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12144 ;;Total ram usage:        0 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    1
 12147 ;; This function calls:
 12148 ;;		_Sleep
 12149 ;; This function is called by:
 12150 ;;		_dw_main
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           
 12155                           ;psect for function _reset_DWIC
 12156  2181                     _reset_DWIC:	
 12157                           
 12158                           ;incstack = 0
 12159                           ; Regs used in _reset_DWIC: [wreg+status,2+status,0+pclath+cstack]
 12160                           ;port.c: 131: do { LATBbits.LATB4 = 0; } while(0);
 12161  2181  0140               	movlb	0	; select bank0
 12162  2182  1217               	bcf	23,4	;volatile
 12163                           
 12164                           ;port.c: 132: Sleep(1);
 12165  2183  3000               	movlw	0
 12166  2184  00F3               	movwf	Sleep@time+3
 12167  2185  3000               	movlw	0
 12168  2186  00F2               	movwf	Sleep@time+2
 12169  2187  3000               	movlw	0
 12170  2188  00F1               	movwf	Sleep@time+1
 12171  2189  3001               	movlw	1
 12172  218A  00F0               	movwf	Sleep@time
 12173  218B  31A4  241F  31A1   	fcall	_Sleep
 12174                           
 12175                           ;port.c: 133: do { LATBbits.LATB4 = 1; } while(0);
 12176  218E  0140               	movlb	0	; select bank0
 12177  218F  1617               	bsf	23,4	;volatile
 12178                           
 12179                           ;port.c: 134: Sleep(2);
 12180  2190  3000               	movlw	0
 12181  2191  00F3               	movwf	Sleep@time+3
 12182  2192  3000               	movlw	0
 12183  2193  00F2               	movwf	Sleep@time+2
 12184  2194  3000               	movlw	0
 12185  2195  00F1               	movwf	Sleep@time+1
 12186  2196  3002               	movlw	2
 12187  2197  00F0               	movwf	Sleep@time
 12188  2198  31A4  241F         	fcall	_Sleep
 12189  219A  0008               	return
 12190  219B                     __end_of_reset_DWIC:	
 12191                           
 12192                           	psect	text23
 12193  213D                     __ptext23:	
 12194 ;; *************** function _printf_string *****************
 12195 ;; Defined at:
 12196 ;;		line 169 in file "mcc_generated_files/eusart.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  data            2    1[COMMON] PTR const unsigned char 
 12199 ;;		 -> STR_26(19), STR_25(19), STR_24(11), STR_23(11), 
 12200 ;;		 -> STR_22(9), STR_21(17), STR_20(15), STR_19(12), 
 12201 ;;		 -> STR_18(10), print_uint64_t@print_data(50), print_uint32_t@print_data(20), print_uint16_t@print_data(20), 
 12202 ;;		 -> print_uint8_t@print_data(20), STR_1(22), 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;		None
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12217 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12218 ;;Total ram usage:        3 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    1
 12221 ;; This function calls:
 12222 ;;		_EUSART_Write
 12223 ;; This function is called by:
 12224 ;;		_main
 12225 ;;		_dw_main
 12226 ;;		_transmitt_beacon_pkt
 12227 ;;		_set_MSSSP1_mode
 12228 ;;		_print_uint8_t
 12229 ;;		_print_uint16_t
 12230 ;;		_print_uint32_t
 12231 ;;		_print_uint64_t
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           
 12236                           ;psect for function _printf_string
 12237  213D                     _printf_string:	
 12238  213D                     l5799:	
 12239                           ;eusart.c: 171: while(*data)
 12240                           
 12241                           ;incstack = 0
 12242                           ; Regs used in _printf_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12243                           
 12244  213D  0871               	movf	printf_string@data,w
 12245  213E  0084               	movwf	4
 12246  213F  0872               	movf	printf_string@data+1,w
 12247  2140  0085               	movwf	5
 12248  2141  0012               	moviw fsr0++
 12249  2142  1903               	btfsc	3,2
 12250  2143  0008               	return
 12251                           
 12252                           ;eusart.c: 172: {
 12253                           ;eusart.c: 173: EUSART_Write(*data++);
 12254  2144  0871               	movf	printf_string@data,w
 12255  2145  0084               	movwf	4
 12256  2146  0872               	movf	printf_string@data+1,w
 12257  2147  0085               	movwf	5
 12258  2148  0800               	movf	0,w	;code access
 12259  2149  31A0  20B9  31A1   	fcall	_EUSART_Write
 12260  214C  3001               	movlw	1
 12261  214D  07F1               	addwf	printf_string@data,f
 12262  214E  3000               	movlw	0
 12263  214F  3DF2               	addwfc	printf_string@data+1,f
 12264  2150  293D               	goto	l5799
 12265  2151                     __end_of_printf_string:	
 12266                           
 12267                           	psect	text24
 12268  138F                     __ptext24:	
 12269 ;; *************** function _dwt_writetxfctrl *****************
 12270 ;; Defined at:
 12271 ;;		line 1773 in file "deca_device.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  txFrameLengt    2   24[BANK1 ] unsigned int 
 12274 ;;  txBufferOffs    2   26[BANK1 ] unsigned int 
 12275 ;;  ranging         1   28[BANK1 ] unsigned char 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;  reg32           4   43[BANK1 ] unsigned long 
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      void 
 12280 ;; Registers used:
 12281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12287 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12288 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12289 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12290 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12291 ;;Total ram usage:       23 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:    7
 12294 ;; This function calls:
 12295 ;;		_dwt_modify32bitoffsetreg
 12296 ;;		_dwt_read8bitoffsetreg
 12297 ;; This function is called by:
 12298 ;;		_dw_main
 12299 ;;		_transmitt_beacon_pkt
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           
 12304                           ;psect for function _dwt_writetxfctrl
 12305  138F                     _dwt_writetxfctrl:	
 12306                           
 12307                           ;deca_device.c: 1775: uint32_t reg32;
 12308                           ;deca_device.c: 1783: if(txBufferOffset <= 127)
 12309                           
 12310                           ;incstack = 0
 12311                           ; Regs used in _dwt_writetxfctrl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12312  138F  3000               	movlw	0
 12313  1390  0141               	movlb	1	; select bank1
 12314  1391  023B               	subwf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
 12315  1392  3080               	movlw	128
 12316  1393  1903               	skipnz
 12317  1394  023A               	subwf	dwt_writetxfctrl@txBufferOffset^(0+128),w
 12318  1395  1803               	skipnc
 12319  1396  2BED               	goto	l6533
 12320                           
 12321                           ;deca_device.c: 1784: {
 12322                           ;deca_device.c: 1786: reg32 = txFrameLength | ((uint32_t)(txBufferOffset) << (16U)) | ((
      +                          uint32_t)ranging << (11U));
 12323  1397  083C               	movf	dwt_writetxfctrl@ranging^(0+128),w
 12324  1398  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
 12325  1399  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
 12326  139A  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
 12327  139B  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
 12328  139C  300B               	movlw	11
 12329  139D                     u6375:	
 12330  139D  35BD               	lslf	??_dwt_writetxfctrl^(0+128),f
 12331  139E  0DBE               	rlf	(??_dwt_writetxfctrl^(0+128)+1),f
 12332  139F  0DBF               	rlf	(??_dwt_writetxfctrl^(0+128)+2),f
 12333  13A0  0DC0               	rlf	(??_dwt_writetxfctrl^(0+128)+3),f
 12334  13A1  0B89               	decfsz	9,f
 12335  13A2  2B9D               	goto	u6375
 12336  13A3  083A               	movf	dwt_writetxfctrl@txBufferOffset^(0+128),w
 12337  13A4  00C1               	movwf	(??_dwt_writetxfctrl+4)^(0+128)
 12338  13A5  083B               	movf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
 12339  13A6  00C2               	movwf	((??_dwt_writetxfctrl+4)^(0+128)+1)
 12340  13A7  01C3               	clrf	((??_dwt_writetxfctrl+4)^(0+128)+2)
 12341  13A8  01C4               	clrf	((??_dwt_writetxfctrl+4)^(0+128)+3)
 12342  13A9  3010               	movlw	16
 12343  13AA                     u6385:	
 12344  13AA  35C1               	lslf	(??_dwt_writetxfctrl+4)^(0+128),f
 12345  13AB  0DC2               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+1),f
 12346  13AC  0DC3               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+2),f
 12347  13AD  0DC4               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+3),f
 12348  13AE  0B89               	decfsz	9,f
 12349  13AF  2BAA               	goto	u6385
 12350  13B0  0838               	movf	dwt_writetxfctrl@txFrameLength^(0+128),w
 12351  13B1  00C5               	movwf	(??_dwt_writetxfctrl+8)^(0+128)
 12352  13B2  0839               	movf	(dwt_writetxfctrl@txFrameLength+1)^(0+128),w
 12353  13B3  00C6               	movwf	((??_dwt_writetxfctrl+8)^(0+128)+1)
 12354  13B4  01C7               	clrf	((??_dwt_writetxfctrl+8)^(0+128)+2)
 12355  13B5  01C8               	clrf	((??_dwt_writetxfctrl+8)^(0+128)+3)
 12356  13B6  0845               	movf	(??_dwt_writetxfctrl+8)^(0+128),w
 12357  13B7  04C1               	iorwf	(??_dwt_writetxfctrl+4)^(0+128),f
 12358  13B8  0846               	movf	(??_dwt_writetxfctrl+9)^(0+128),w
 12359  13B9  04C2               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+1),f
 12360  13BA  0847               	movf	(??_dwt_writetxfctrl+10)^(0+128),w
 12361  13BB  04C3               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+2),f
 12362  13BC  0848               	movf	(??_dwt_writetxfctrl+11)^(0+128),w
 12363  13BD  04C4               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+3),f
 12364  13BE  083D               	movf	??_dwt_writetxfctrl^(0+128),w
 12365  13BF  0441               	iorwf	(??_dwt_writetxfctrl+4)^(0+128),w
 12366  13C0  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
 12367  13C1  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
 12368  13C2  0442               	iorwf	(??_dwt_writetxfctrl+5)^(0+128),w
 12369  13C3  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
 12370  13C4  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
 12371  13C5  0443               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),w
 12372  13C6  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
 12373  13C7  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
 12374  13C8  0444               	iorwf	(??_dwt_writetxfctrl+7)^(0+128),w
 12375  13C9  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
 12376                           
 12377                           ;deca_device.c: 1787: dwt_modify32bitoffsetreg(0x24, 0, ~(0x3ff0000UL | 0x800U | 0x3ffU)
      +                          , reg32);
 12378  13CA  3000               	movlw	0
 12379  13CB  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 12380  13CC  3000               	movlw	0
 12381  13CD  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 12382  13CE  3000               	movlw	0
 12383  13CF  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 12384  13D0  3024               	movlw	36
 12385  13D1  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 12386  13D2  3000               	movlw	0
 12387  13D3  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 12388  13D4  3000               	movlw	0
 12389  13D5  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 12390  13D6  3000               	movlw	0
 12391  13D7  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 12392  13D8  3000               	movlw	0
 12393  13D9  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 12394  13DA  30FC               	movlw	252
 12395  13DB  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 12396  13DC  3000               	movlw	0
 12397  13DD  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 12398  13DE  30F4               	movlw	244
 12399  13DF  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 12400  13E0  3000               	movlw	0
 12401  13E1  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 12402  13E2  084E               	movf	(dwt_writetxfctrl@reg32+3)^(0+128),w
 12403  13E3  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 12404  13E4  084D               	movf	(dwt_writetxfctrl@reg32+2)^(0+128),w
 12405  13E5  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 12406  13E6  084C               	movf	(dwt_writetxfctrl@reg32+1)^(0+128),w
 12407  13E7  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 12408  13E8  084B               	movf	dwt_writetxfctrl@reg32^(0+128),w
 12409  13E9  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 12410  13EA  3192  22B6         	fcall	_dwt_modify32bitoffsetreg
 12411                           
 12412                           ;deca_device.c: 1788: }
 12413  13EC  0008               	return
 12414  13ED                     l6533:	
 12415                           
 12416                           ;deca_device.c: 1789: else
 12417                           ;deca_device.c: 1790: {
 12418                           ;deca_device.c: 1792: reg32 = txFrameLength | ((uint32_t)(txBufferOffset + 128) << (16U)
      +                          ) | ((uint32_t)ranging << (11U));
 12419  13ED  0141               	movlb	1	; select bank1
 12420  13EE  083C               	movf	dwt_writetxfctrl@ranging^(0+128),w
 12421  13EF  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
 12422  13F0  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
 12423  13F1  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
 12424  13F2  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
 12425  13F3  300B               	movlw	11
 12426  13F4                     u6395:	
 12427  13F4  35BD               	lslf	??_dwt_writetxfctrl^(0+128),f
 12428  13F5  0DBE               	rlf	(??_dwt_writetxfctrl^(0+128)+1),f
 12429  13F6  0DBF               	rlf	(??_dwt_writetxfctrl^(0+128)+2),f
 12430  13F7  0DC0               	rlf	(??_dwt_writetxfctrl^(0+128)+3),f
 12431  13F8  0B89               	decfsz	9,f
 12432  13F9  2BF4               	goto	u6395
 12433  13FA  083A               	movf	dwt_writetxfctrl@txBufferOffset^(0+128),w
 12434  13FB  3E80               	addlw	128
 12435  13FC  00C1               	movwf	(??_dwt_writetxfctrl+4)^(0+128)
 12436  13FD  3000               	movlw	0
 12437  13FE  3D3B               	addwfc	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
 12438  13FF  00C2               	movwf	(??_dwt_writetxfctrl+5)^(0+128)
 12439  1400  0841               	movf	(??_dwt_writetxfctrl+4)^(0+128),w
 12440  1401  00C3               	movwf	(??_dwt_writetxfctrl+6)^(0+128)
 12441  1402  0842               	movf	(??_dwt_writetxfctrl+5)^(0+128),w
 12442  1403  00C4               	movwf	((??_dwt_writetxfctrl+6)^(0+128)+1)
 12443  1404  01C5               	clrf	((??_dwt_writetxfctrl+6)^(0+128)+2)
 12444  1405  01C6               	clrf	((??_dwt_writetxfctrl+6)^(0+128)+3)
 12445  1406  3010               	movlw	16
 12446  1407                     u6405:	
 12447  1407  35C3               	lslf	(??_dwt_writetxfctrl+6)^(0+128),f
 12448  1408  0DC4               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+1),f
 12449  1409  0DC5               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+2),f
 12450  140A  0DC6               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+3),f
 12451  140B  0B89               	decfsz	9,f
 12452  140C  2C07               	goto	u6405
 12453  140D  0838               	movf	dwt_writetxfctrl@txFrameLength^(0+128),w
 12454  140E  00C7               	movwf	(??_dwt_writetxfctrl+10)^(0+128)
 12455  140F  0839               	movf	(dwt_writetxfctrl@txFrameLength+1)^(0+128),w
 12456  1410  00C8               	movwf	((??_dwt_writetxfctrl+10)^(0+128)+1)
 12457  1411  01C9               	clrf	((??_dwt_writetxfctrl+10)^(0+128)+2)
 12458  1412  01CA               	clrf	((??_dwt_writetxfctrl+10)^(0+128)+3)
 12459  1413  0847               	movf	(??_dwt_writetxfctrl+10)^(0+128),w
 12460  1414  04C3               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),f
 12461  1415  0848               	movf	(??_dwt_writetxfctrl+11)^(0+128),w
 12462  1416  04C4               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+1),f
 12463  1417  0849               	movf	(??_dwt_writetxfctrl+12)^(0+128),w
 12464  1418  04C5               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+2),f
 12465  1419  084A               	movf	(??_dwt_writetxfctrl+13)^(0+128),w
 12466  141A  04C6               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+3),f
 12467  141B  083D               	movf	??_dwt_writetxfctrl^(0+128),w
 12468  141C  0443               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),w
 12469  141D  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
 12470  141E  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
 12471  141F  0444               	iorwf	(??_dwt_writetxfctrl+7)^(0+128),w
 12472  1420  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
 12473  1421  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
 12474  1422  0445               	iorwf	(??_dwt_writetxfctrl+8)^(0+128),w
 12475  1423  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
 12476  1424  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
 12477  1425  0446               	iorwf	(??_dwt_writetxfctrl+9)^(0+128),w
 12478  1426  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
 12479                           
 12480                           ;deca_device.c: 1793: dwt_modify32bitoffsetreg(0x24, 0, ~(0x3ff0000UL | 0x800U | 0x3ffU)
      +                          , reg32);
 12481  1427  3000               	movlw	0
 12482  1428  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 12483  1429  3000               	movlw	0
 12484  142A  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 12485  142B  3000               	movlw	0
 12486  142C  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 12487  142D  3024               	movlw	36
 12488  142E  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 12489  142F  3000               	movlw	0
 12490  1430  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 12491  1431  3000               	movlw	0
 12492  1432  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 12493  1433  3000               	movlw	0
 12494  1434  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 12495  1435  3000               	movlw	0
 12496  1436  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 12497  1437  30FC               	movlw	252
 12498  1438  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 12499  1439  3000               	movlw	0
 12500  143A  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 12501  143B  30F4               	movlw	244
 12502  143C  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 12503  143D  3000               	movlw	0
 12504  143E  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 12505  143F  084E               	movf	(dwt_writetxfctrl@reg32+3)^(0+128),w
 12506  1440  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 12507  1441  084D               	movf	(dwt_writetxfctrl@reg32+2)^(0+128),w
 12508  1442  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 12509  1443  084C               	movf	(dwt_writetxfctrl@reg32+1)^(0+128),w
 12510  1444  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 12511  1445  084B               	movf	dwt_writetxfctrl@reg32^(0+128),w
 12512  1446  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 12513  1447  3192  22B6  3193   	fcall	_dwt_modify32bitoffsetreg
 12514                           
 12515                           ;deca_device.c: 1794: reg32 = dwt_read8bitoffsetreg(0x80000, 0);
 12516  144A  3000               	movlw	0
 12517  144B  0140               	movlb	0	; select bank0
 12518  144C  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 12519  144D  3008               	movlw	8
 12520  144E  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 12521  144F  3000               	movlw	0
 12522  1450  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 12523  1451  3000               	movlw	0
 12524  1452  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 12525  1453  3000               	movlw	0
 12526  1454  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 12527  1455  3000               	movlw	0
 12528  1456  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 12529  1457  3000               	movlw	0
 12530  1458  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 12531  1459  3000               	movlw	0
 12532  145A  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 12533  145B  31A2  22CC         	fcall	_dwt_read8bitoffsetreg
 12534  145D  0141               	movlb	1	; select bank1
 12535  145E  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
 12536  145F  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
 12537  1460  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
 12538  1461  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
 12539  1462  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
 12540  1463  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
 12541  1464  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
 12542  1465  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
 12543  1466  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
 12544  1467  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
 12545  1468  083D               	movf	??_dwt_writetxfctrl^(0+128),w
 12546  1469  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
 12547  146A  0008               	return
 12548  146B                     __end_of_dwt_writetxfctrl:	
 12549                           
 12550                           	psect	text25
 12551  1DD9                     __ptext25:	
 12552 ;; *************** function _dwt_writetxdata *****************
 12553 ;; Defined at:
 12554 ;;		line 1728 in file "deca_device.c"
 12555 ;; Parameters:    Size  Location     Type
 12556 ;;  txDataLength    2   24[BANK1 ] unsigned int 
 12557 ;;  txDataBytes     1   26[BANK1 ] PTR unsigned char 
 12558 ;;		 -> tx_blink_msg(36), 
 12559 ;;  txBufferOffs    2   27[BANK1 ] unsigned int 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;		None
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  2   24[BANK1 ] int 
 12564 ;; Registers used:
 12565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12571 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12573 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12574 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12575 ;;Total ram usage:        7 bytes
 12576 ;; Hardware stack levels used:    1
 12577 ;; Hardware stack levels required when called:    8
 12578 ;; This function calls:
 12579 ;;		_dwt_write32bitoffsetreg
 12580 ;;		_dwt_writetodevice
 12581 ;; This function is called by:
 12582 ;;		_dw_main
 12583 ;;		_transmitt_beacon_pkt
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           
 12588                           ;psect for function _dwt_writetxdata
 12589  1DD9                     _dwt_writetxdata:	
 12590                           
 12591                           ;deca_device.c: 1736: if ((txBufferOffset + txDataLength) < (1024))
 12592                           
 12593                           ;incstack = 0
 12594                           ; Regs used in _dwt_writetxdata: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12595  1DD9  0141               	movlb	1	; select bank1
 12596  1DDA  0838               	movf	dwt_writetxdata@txDataLength^(0+128),w
 12597  1DDB  073B               	addwf	dwt_writetxdata@txBufferOffset^(0+128),w
 12598  1DDC  00BD               	movwf	??_dwt_writetxdata^(0+128)
 12599  1DDD  0839               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
 12600  1DDE  3D3C               	addwfc	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 12601  1DDF  00BE               	movwf	(??_dwt_writetxdata+1)^(0+128)
 12602  1DE0  3004               	movlw	4
 12603  1DE1  023E               	subwf	(??_dwt_writetxdata+1)^(0+128),w
 12604  1DE2  3000               	movlw	0
 12605  1DE3  1903               	skipnz
 12606  1DE4  023D               	subwf	??_dwt_writetxdata^(0+128),w
 12607  1DE5  1803               	skipnc
 12608  1DE6  0008               	return
 12609                           
 12610                           ;deca_device.c: 1737: {
 12611                           ;deca_device.c: 1738: if(txBufferOffset <= (127))
 12612  1DE7  3000               	movlw	0
 12613  1DE8  023C               	subwf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 12614  1DE9  3080               	movlw	128
 12615  1DEA  1903               	skipnz
 12616  1DEB  023B               	subwf	dwt_writetxdata@txBufferOffset^(0+128),w
 12617  1DEC  1803               	skipnc
 12618  1DED  2E07               	goto	l6521
 12619                           
 12620                           ;deca_device.c: 1739: {
 12621                           ;deca_device.c: 1741: dwt_writetodevice(0x140000, txBufferOffset, txDataLength, txDataBy
      +                          tes);
 12622  1DEE  3000               	movlw	0
 12623  1DEF  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12624  1DF0  3014               	movlw	20
 12625  1DF1  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12626  1DF2  3000               	movlw	0
 12627  1DF3  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12628  1DF4  3000               	movlw	0
 12629  1DF5  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 12630  1DF6  083C               	movf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 12631  1DF7  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 12632  1DF8  083B               	movf	dwt_writetxdata@txBufferOffset^(0+128),w
 12633  1DF9  00A4               	movwf	dwt_writetodevice@index^(0+128)
 12634  1DFA  0838               	movf	dwt_writetxdata@txDataLength^(0+128),w
 12635  1DFB  00A6               	movwf	dwt_writetodevice@length^(0+128)
 12636  1DFC  0839               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
 12637  1DFD  00A7               	movwf	(dwt_writetodevice@length^(0+128)+1)
 12638  1DFE  01A8               	clrf	(dwt_writetodevice@length^(0+128)+2)
 12639  1DFF  01A9               	clrf	(dwt_writetodevice@length^(0+128)+3)
 12640  1E00  083A               	movf	dwt_writetxdata@txDataBytes^(0+128),w
 12641  1E01  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 12642  1E02  3002               	movlw	2
 12643  1E03  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 12644  1E04  31A5  25F3         	fcall	_dwt_writetodevice
 12645                           
 12646                           ;deca_device.c: 1742: }
 12647  1E06  0008               	return
 12648  1E07                     l6521:	
 12649                           
 12650                           ;deca_device.c: 1743: else
 12651                           ;deca_device.c: 1744: {
 12652                           ;deca_device.c: 1746: dwt_write32bitoffsetreg(0x1f0004,0,(0x140000 >> 16));
 12653  1E07  3000               	movlw	0
 12654  1E08  0141               	movlb	1	; select bank1
 12655  1E09  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12656  1E0A  301F               	movlw	31
 12657  1E0B  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12658  1E0C  3000               	movlw	0
 12659  1E0D  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12660  1E0E  3004               	movlw	4
 12661  1E0F  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12662  1E10  3000               	movlw	0
 12663  1E11  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12664  1E12  3000               	movlw	0
 12665  1E13  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12666  1E14  3000               	movlw	0
 12667  1E15  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12668  1E16  3000               	movlw	0
 12669  1E17  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12670  1E18  3000               	movlw	0
 12671  1E19  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 12672  1E1A  3000               	movlw	0
 12673  1E1B  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 12674  1E1C  3000               	movlw	0
 12675  1E1D  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 12676  1E1E  3014               	movlw	20
 12677  1E1F  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 12678  1E20  31A7  27B4  319D   	fcall	_dwt_write32bitoffsetreg
 12679                           
 12680                           ;deca_device.c: 1747: dwt_write32bitoffsetreg(0x1f0008,0,txBufferOffset);
 12681  1E23  3000               	movlw	0
 12682  1E24  0141               	movlb	1	; select bank1
 12683  1E25  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12684  1E26  301F               	movlw	31
 12685  1E27  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12686  1E28  3000               	movlw	0
 12687  1E29  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12688  1E2A  3008               	movlw	8
 12689  1E2B  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12690  1E2C  3000               	movlw	0
 12691  1E2D  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12692  1E2E  3000               	movlw	0
 12693  1E2F  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12694  1E30  3000               	movlw	0
 12695  1E31  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12696  1E32  3000               	movlw	0
 12697  1E33  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12698  1E34  083B               	movf	dwt_writetxdata@txBufferOffset^(0+128),w
 12699  1E35  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 12700  1E36  083C               	movf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 12701  1E37  00B5               	movwf	(dwt_write32bitoffsetreg@regval^(0+128)+1)
 12702  1E38  01B6               	clrf	(dwt_write32bitoffsetreg@regval^(0+128)+2)
 12703  1E39  01B7               	clrf	(dwt_write32bitoffsetreg@regval^(0+128)+3)
 12704  1E3A  31A7  27B4  319D   	fcall	_dwt_write32bitoffsetreg
 12705                           
 12706                           ;deca_device.c: 1750: dwt_writetodevice(0x1D0000, 0, txDataLength, txDataBytes);
 12707  1E3D  3000               	movlw	0
 12708  1E3E  0141               	movlb	1	; select bank1
 12709  1E3F  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12710  1E40  301D               	movlw	29
 12711  1E41  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12712  1E42  3000               	movlw	0
 12713  1E43  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12714  1E44  3000               	movlw	0
 12715  1E45  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 12716  1E46  3000               	movlw	0
 12717  1E47  00A4               	movwf	dwt_writetodevice@index^(0+128)
 12718  1E48  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 12719  1E49  0838               	movf	dwt_writetxdata@txDataLength^(0+128),w
 12720  1E4A  00A6               	movwf	dwt_writetodevice@length^(0+128)
 12721  1E4B  0839               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
 12722  1E4C  00A7               	movwf	(dwt_writetodevice@length^(0+128)+1)
 12723  1E4D  01A8               	clrf	(dwt_writetodevice@length^(0+128)+2)
 12724  1E4E  01A9               	clrf	(dwt_writetodevice@length^(0+128)+3)
 12725  1E4F  083A               	movf	dwt_writetxdata@txDataBytes^(0+128),w
 12726  1E50  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 12727  1E51  3002               	movlw	2
 12728  1E52  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 12729  1E53  31A5  25F3         	fcall	_dwt_writetodevice
 12730                           
 12731                           ;deca_device.c: 1754: else
 12732                           ;deca_device.c: 1755: return (-1);
 12733                           ;	Return value of _dwt_writetxdata is never used
 12734                           
 12735                           ;deca_device.c: 1753: }
 12736                           
 12737                           ;deca_device.c: 1751: }
 12738                           ;deca_device.c: 1752: return (0);
 12739                           ;	Return value of _dwt_writetxdata is never used
 12740  1E55  0008               	return
 12741  1E56                     __end_of_dwt_writetxdata:	
 12742                           
 12743                           	psect	text26
 12744  0802                     __ptext26:	
 12745 ;; *************** function _dwt_starttx *****************
 12746 ;; Defined at:
 12747 ;;		line 3688 in file "deca_device.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;  mode            1    wreg     unsigned char 
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;  mode            1   39[BANK1 ] unsigned char 
 12752 ;;  sys_state       4   31[BANK1 ] unsigned long 
 12753 ;;  checkTxOK       2   37[BANK1 ] unsigned int 
 12754 ;;  retval          2   35[BANK1 ] int 
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  2  947[None  ] int 
 12757 ;; Registers used:
 12758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12765 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12766 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12767 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12768 ;;Total ram usage:       11 bytes
 12769 ;; Hardware stack levels used:    1
 12770 ;; Hardware stack levels required when called:    8
 12771 ;; This function calls:
 12772 ;;		_dwt_read32bitoffsetreg
 12773 ;;		_dwt_read8bitoffsetreg
 12774 ;;		_dwt_writetodevice
 12775 ;; This function is called by:
 12776 ;;		_dw_main
 12777 ;;		_transmitt_beacon_pkt
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781                           
 12782                           ;psect for function _dwt_starttx
 12783  0802                     _dwt_starttx:	
 12784                           
 12785                           ;incstack = 0
 12786                           ; Regs used in _dwt_starttx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12787                           ;dwt_starttx@mode stored from wreg
 12788  0802  0141               	movlb	1	; select bank1
 12789  0803  00C7               	movwf	dwt_starttx@mode^(0+128)
 12790                           
 12791                           ;deca_device.c: 3690: int retval = (0) ;
 12792  0804  01C3               	clrf	dwt_starttx@retval^(0+128)
 12793  0805  01C4               	clrf	(dwt_starttx@retval+1)^(0+128)
 12794                           
 12795                           ;deca_device.c: 3691: uint16_t checkTxOK = 0 ;
 12796  0806  01C5               	clrf	dwt_starttx@checkTxOK^(0+128)
 12797  0807  01C6               	clrf	(dwt_starttx@checkTxOK+1)^(0+128)
 12798                           
 12799                           ;deca_device.c: 3692: uint32_t sys_state;
 12800                           ;deca_device.c: 3694: if ((mode & 0x01) || (mode & 0x04)
 12801                           ;deca_device.c: 3695: || (mode & 0x08) || (mode & 0x10))
 12802  0808  1C47               	btfss	dwt_starttx@mode^(0+128),0
 12803  0809  1947               	btfsc	dwt_starttx@mode^(0+128),2
 12804  080A  280F               	goto	l6551
 12805  080B  19C7               	btfsc	dwt_starttx@mode^(0+128),3
 12806  080C  280F               	goto	l6551
 12807  080D  1E47               	btfss	dwt_starttx@mode^(0+128),4
 12808  080E  28FC               	goto	l948
 12809  080F                     l6551:	
 12810                           
 12811                           ;deca_device.c: 3696: {
 12812                           ;deca_device.c: 3697: if(mode & 0x01)
 12813  080F  1C47               	btfss	dwt_starttx@mode^(0+128),0
 12814  0810  2824               	goto	l951
 12815                           
 12816                           ;deca_device.c: 3698: {
 12817                           ;deca_device.c: 3699: if(mode & 0x02)
 12818  0811  1CC7               	btfss	dwt_starttx@mode^(0+128),1
 12819  0812  281B               	goto	l6557
 12820                           
 12821                           ;deca_device.c: 3700: {
 12822                           ;deca_device.c: 3701: dwt_writetodevice(0xD,0,0,0);
 12823  0813  3000               	movlw	0
 12824  0814  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12825  0815  3000               	movlw	0
 12826  0816  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12827  0817  3000               	movlw	0
 12828  0818  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12829  0819  300D               	movlw	13
 12830  081A  2860               	goto	L5
 12831  081B                     l6557:	
 12832                           ;deca_device.c: 3702: }
 12833                           
 12834                           
 12835                           ;deca_device.c: 3703: else
 12836                           ;deca_device.c: 3704: {
 12837                           ;deca_device.c: 3705: dwt_writetodevice(0x3,0,0,0);
 12838  081B  3000               	movlw	0
 12839  081C  0141               	movlb	1	; select bank1
 12840  081D  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12841  081E  3000               	movlw	0
 12842  081F  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12843  0820  3000               	movlw	0
 12844  0821  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12845  0822  3003               	movlw	3
 12846  0823  2860               	goto	L5
 12847  0824                     l951:	
 12848                           ;deca_device.c: 3706: }
 12849                           ;deca_device.c: 3707: }
 12850                           
 12851                           
 12852                           ;deca_device.c: 3708: else if (mode & 0x08)
 12853  0824  1DC7               	btfss	dwt_starttx@mode^(0+128),3
 12854  0825  2839               	goto	l955
 12855                           
 12856                           ;deca_device.c: 3709: {
 12857                           ;deca_device.c: 3710: if(mode & 0x02)
 12858  0826  1CC7               	btfss	dwt_starttx@mode^(0+128),1
 12859  0827  2830               	goto	l6563
 12860                           
 12861                           ;deca_device.c: 3711: {
 12862                           ;deca_device.c: 3712: dwt_writetodevice(0xF,0,0,0);
 12863  0828  3000               	movlw	0
 12864  0829  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12865  082A  3000               	movlw	0
 12866  082B  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12867  082C  3000               	movlw	0
 12868  082D  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12869  082E  300F               	movlw	15
 12870  082F  2860               	goto	L5
 12871  0830                     l6563:	
 12872                           ;deca_device.c: 3713: }
 12873                           
 12874                           
 12875                           ;deca_device.c: 3714: else
 12876                           ;deca_device.c: 3715: {
 12877                           ;deca_device.c: 3716: dwt_writetodevice(0x7,0,0,0);
 12878  0830  3000               	movlw	0
 12879  0831  0141               	movlb	1	; select bank1
 12880  0832  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12881  0833  3000               	movlw	0
 12882  0834  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12883  0835  3000               	movlw	0
 12884  0836  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12885  0837  3007               	movlw	7
 12886  0838  2860               	goto	L5
 12887  0839                     l955:	
 12888                           ;deca_device.c: 3717: }
 12889                           ;deca_device.c: 3718: }
 12890                           
 12891                           
 12892                           ;deca_device.c: 3719: else if (mode & 0x10)
 12893  0839  1E47               	btfss	dwt_starttx@mode^(0+128),4
 12894  083A  284E               	goto	l959
 12895                           
 12896                           ;deca_device.c: 3720: {
 12897                           ;deca_device.c: 3721: if(mode & 0x02)
 12898  083B  1CC7               	btfss	dwt_starttx@mode^(0+128),1
 12899  083C  2845               	goto	l6569
 12900                           
 12901                           ;deca_device.c: 3722: {
 12902                           ;deca_device.c: 3723: dwt_writetodevice(0xE,0,0,0);
 12903  083D  3000               	movlw	0
 12904  083E  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12905  083F  3000               	movlw	0
 12906  0840  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12907  0841  3000               	movlw	0
 12908  0842  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12909  0843  300E               	movlw	14
 12910  0844  2860               	goto	L5
 12911  0845                     l6569:	
 12912                           ;deca_device.c: 3724: }
 12913                           
 12914                           
 12915                           ;deca_device.c: 3725: else
 12916                           ;deca_device.c: 3726: {
 12917                           ;deca_device.c: 3727: dwt_writetodevice(0x5,0,0,0);
 12918  0845  3000               	movlw	0
 12919  0846  0141               	movlb	1	; select bank1
 12920  0847  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12921  0848  3000               	movlw	0
 12922  0849  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12923  084A  3000               	movlw	0
 12924  084B  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12925  084C  3005               	movlw	5
 12926  084D  2860               	goto	L5
 12927  084E                     l959:	
 12928                           ;deca_device.c: 3728: }
 12929                           ;deca_device.c: 3729: }
 12930                           
 12931                           
 12932                           ;deca_device.c: 3730: else
 12933                           ;deca_device.c: 3731: {
 12934                           ;deca_device.c: 3732: if(mode & 0x02)
 12935  084E  1CC7               	btfss	dwt_starttx@mode^(0+128),1
 12936  084F  2858               	goto	l6573
 12937                           
 12938                           ;deca_device.c: 3733: {
 12939                           ;deca_device.c: 3734: dwt_writetodevice(0x10,0,0,0);
 12940  0850  3000               	movlw	0
 12941  0851  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12942  0852  3000               	movlw	0
 12943  0853  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12944  0854  3000               	movlw	0
 12945  0855  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12946  0856  3010               	movlw	16
 12947  0857  2860               	goto	L5
 12948  0858                     l6573:	
 12949                           ;deca_device.c: 3735: }
 12950                           
 12951                           
 12952                           ;deca_device.c: 3736: else
 12953                           ;deca_device.c: 3737: {
 12954                           ;deca_device.c: 3738: dwt_writetodevice(0x9,0,0,0);
 12955  0858  3000               	movlw	0
 12956  0859  0141               	movlb	1	; select bank1
 12957  085A  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 12958  085B  3000               	movlw	0
 12959  085C  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 12960  085D  3000               	movlw	0
 12961  085E  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 12962  085F  3009               	movlw	9
 12963  0860                     L5:	
 12964  0860  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 12965  0861  3000               	movlw	0
 12966  0862  00A4               	movwf	dwt_writetodevice@index^(0+128)
 12967  0863  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 12968  0864  3000               	movlw	0
 12969  0865  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 12970  0866  3000               	movlw	0
 12971  0867  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 12972  0868  3000               	movlw	0
 12973  0869  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 12974  086A  3000               	movlw	0
 12975  086B  00A6               	movwf	dwt_writetodevice@length^(0+128)
 12976  086C  3000               	movlw	0
 12977  086D  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 12978  086E  3000               	movlw	0
 12979  086F  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 12980  0870  31A5  25F3  3188   	fcall	_dwt_writetodevice
 12981                           
 12982                           ;deca_device.c: 3739: }
 12983                           ;deca_device.c: 3740: }
 12984                           ;deca_device.c: 3742: checkTxOK = dwt_read8bitoffsetreg(0x44, 3);
 12985  0873  3000               	movlw	0
 12986  0874  0140               	movlb	0	; select bank0
 12987  0875  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 12988  0876  3000               	movlw	0
 12989  0877  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 12990  0878  3000               	movlw	0
 12991  0879  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 12992  087A  3044               	movlw	68
 12993  087B  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 12994  087C  3000               	movlw	0
 12995  087D  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 12996  087E  3000               	movlw	0
 12997  087F  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 12998  0880  3000               	movlw	0
 12999  0881  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 13000  0882  3003               	movlw	3
 13001  0883  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 13002  0884  31A2  22CC  3188   	fcall	_dwt_read8bitoffsetreg
 13003  0887  0141               	movlb	1	; select bank1
 13004  0888  00BD               	movwf	??_dwt_starttx^(0+128)
 13005  0889  01BE               	clrf	(??_dwt_starttx^(0+128)+1)
 13006  088A  083D               	movf	??_dwt_starttx^(0+128),w
 13007  088B  00C5               	movwf	dwt_starttx@checkTxOK^(0+128)
 13008  088C  083E               	movf	(??_dwt_starttx+1)^(0+128),w
 13009  088D  00C6               	movwf	(dwt_starttx@checkTxOK+1)^(0+128)
 13010                           
 13011                           ;deca_device.c: 3743: if ((checkTxOK & (0x8000000UL>>24)) == 0)
 13012  088E  19C5               	btfsc	dwt_starttx@checkTxOK^(0+128),3
 13013  088F  28DD               	goto	l6587
 13014                           
 13015                           ;deca_device.c: 3744: {
 13016                           ;deca_device.c: 3745: sys_state = dwt_read32bitoffsetreg(0xf0030,0);
 13017  0890  3000               	movlw	0
 13018  0891  0140               	movlb	0	; select bank0
 13019  0892  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 13020  0893  300F               	movlw	15
 13021  0894  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 13022  0895  3000               	movlw	0
 13023  0896  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 13024  0897  3030               	movlw	48
 13025  0898  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 13026  0899  3000               	movlw	0
 13027  089A  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 13028  089B  3000               	movlw	0
 13029  089C  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 13030  089D  3000               	movlw	0
 13031  089E  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 13032  089F  3000               	movlw	0
 13033  08A0  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 13034  08A1  319C  246C  3188   	fcall	_dwt_read32bitoffsetreg
 13035  08A4  0140               	movlb	0	; select bank0
 13036  08A5  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 13037  08A6  0141               	movlb	1	; select bank1
 13038  08A7  00C2               	movwf	(dwt_starttx@sys_state+3)^(0+128)
 13039  08A8  0140               	movlb	0	; select bank0
 13040  08A9  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 13041  08AA  0141               	movlb	1	; select bank1
 13042  08AB  00C1               	movwf	(dwt_starttx@sys_state+2)^(0+128)
 13043  08AC  0140               	movlb	0	; select bank0
 13044  08AD  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 13045  08AE  0141               	movlb	1	; select bank1
 13046  08AF  00C0               	movwf	(dwt_starttx@sys_state+1)^(0+128)
 13047  08B0  0140               	movlb	0	; select bank0
 13048  08B1  0868               	movf	?_dwt_read32bitoffsetreg,w
 13049  08B2  0141               	movlb	1	; select bank1
 13050  08B3  00BF               	movwf	dwt_starttx@sys_state^(0+128)
 13051                           
 13052                           ;deca_device.c: 3746: if (sys_state == 0xD0000)
 13053  08B4  300D               	movlw	13
 13054  08B5  0641               	xorwf	(dwt_starttx@sys_state+2)^(0+128),w
 13055  08B6  043F               	iorwf	dwt_starttx@sys_state^(0+128),w
 13056  08B7  0440               	iorwf	(dwt_starttx@sys_state+1)^(0+128),w
 13057  08B8  0442               	iorwf	(dwt_starttx@sys_state+3)^(0+128),w
 13058  08B9  1D03               	btfss	3,2
 13059  08BA  28DA               	goto	l6585
 13060                           
 13061                           ;deca_device.c: 3747: {
 13062                           ;deca_device.c: 3748: dwt_writetodevice(0x0,0,0,0);
 13063  08BB  3000               	movlw	0
 13064  08BC  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13065  08BD  3000               	movlw	0
 13066  08BE  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13067  08BF  3000               	movlw	0
 13068  08C0  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13069  08C1  3000               	movlw	0
 13070  08C2  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13071  08C3  3000               	movlw	0
 13072  08C4  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13073  08C5  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13074  08C6  3000               	movlw	0
 13075  08C7  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 13076  08C8  3000               	movlw	0
 13077  08C9  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 13078  08CA  3000               	movlw	0
 13079  08CB  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 13080  08CC  3000               	movlw	0
 13081  08CD  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13082  08CE  3000               	movlw	0
 13083  08CF  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13084  08D0  3000               	movlw	0
 13085  08D1  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13086  08D2  31A5  25F3         	fcall	_dwt_writetodevice
 13087                           
 13088                           ;deca_device.c: 3749: retval = (-1) ;
 13089  08D4  30FF               	movlw	255
 13090  08D5  0141               	movlb	1	; select bank1
 13091  08D6  00C3               	movwf	dwt_starttx@retval^(0+128)
 13092  08D7  30FF               	movlw	255
 13093  08D8  00C4               	movwf	(dwt_starttx@retval^(0+128)+1)
 13094                           
 13095                           ;deca_device.c: 3750: }
 13096  08D9  0008               	return
 13097  08DA                     l6585:	
 13098                           
 13099                           ;deca_device.c: 3751: else
 13100                           ;deca_device.c: 3752: {
 13101                           ;deca_device.c: 3753: retval = (0) ;
 13102  08DA  01C3               	clrf	dwt_starttx@retval^(0+128)
 13103  08DB  01C4               	clrf	(dwt_starttx@retval+1)^(0+128)
 13104                           
 13105                           ;deca_device.c: 3754: }
 13106                           ;deca_device.c: 3755: }
 13107  08DC  0008               	return
 13108  08DD                     l6587:	
 13109                           
 13110                           ;deca_device.c: 3756: else
 13111                           ;deca_device.c: 3757: {
 13112                           ;deca_device.c: 3758: dwt_writetodevice(0x0,0,0,0);
 13113  08DD  3000               	movlw	0
 13114  08DE  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13115  08DF  3000               	movlw	0
 13116  08E0  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13117  08E1  3000               	movlw	0
 13118  08E2  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13119  08E3  3000               	movlw	0
 13120  08E4  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13121  08E5  3000               	movlw	0
 13122  08E6  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13123  08E7  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13124  08E8  3000               	movlw	0
 13125  08E9  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 13126  08EA  3000               	movlw	0
 13127  08EB  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 13128  08EC  3000               	movlw	0
 13129  08ED  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 13130  08EE  3000               	movlw	0
 13131  08EF  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13132  08F0  3000               	movlw	0
 13133  08F1  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13134  08F2  3000               	movlw	0
 13135  08F3  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13136  08F4  31A5  25F3         	fcall	_dwt_writetodevice
 13137                           
 13138                           ;deca_device.c: 3759: retval = (-1) ;
 13139  08F6  30FF               	movlw	255
 13140  08F7  0141               	movlb	1	; select bank1
 13141  08F8  00C3               	movwf	dwt_starttx@retval^(0+128)
 13142  08F9  30FF               	movlw	255
 13143  08FA  00C4               	movwf	(dwt_starttx@retval^(0+128)+1)
 13144                           
 13145                           ;deca_device.c: 3763: }
 13146                           ;deca_device.c: 3764: }
 13147  08FB  0008               	return
 13148  08FC                     l948:	
 13149                           
 13150                           ;deca_device.c: 3765: else if(mode & 0x20)
 13151  08FC  1EC7               	btfss	dwt_starttx@mode^(0+128),5
 13152  08FD  2935               	goto	l970
 13153                           
 13154                           ;deca_device.c: 3766: {
 13155                           ;deca_device.c: 3767: if(mode & 0x02)
 13156  08FE  1CC7               	btfss	dwt_starttx@mode^(0+128),1
 13157  08FF  291A               	goto	l6595
 13158                           
 13159                           ;deca_device.c: 3768: {
 13160                           ;deca_device.c: 3769: dwt_writetodevice(0x11,0,0,0);
 13161  0900  3000               	movlw	0
 13162  0901  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13163  0902  3000               	movlw	0
 13164  0903  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13165  0904  3000               	movlw	0
 13166  0905  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13167  0906  3011               	movlw	17
 13168  0907  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13169  0908  3000               	movlw	0
 13170  0909  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13171  090A  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13172  090B  3000               	movlw	0
 13173  090C  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 13174  090D  3000               	movlw	0
 13175  090E  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 13176  090F  3000               	movlw	0
 13177  0910  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 13178  0911  3000               	movlw	0
 13179  0912  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13180  0913  3000               	movlw	0
 13181  0914  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13182  0915  3000               	movlw	0
 13183  0916  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13184  0917  31A5  25F3         	fcall	_dwt_writetodevice
 13185                           
 13186                           ;deca_device.c: 3770: }
 13187  0919  0008               	return
 13188  091A                     l6595:	
 13189                           
 13190                           ;deca_device.c: 3771: else
 13191                           ;deca_device.c: 3772: {
 13192                           ;deca_device.c: 3773: dwt_writetodevice(0xB,0,0,0);
 13193  091A  3000               	movlw	0
 13194  091B  0141               	movlb	1	; select bank1
 13195  091C  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13196  091D  3000               	movlw	0
 13197  091E  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13198  091F  3000               	movlw	0
 13199  0920  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13200  0921  300B               	movlw	11
 13201  0922  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13202  0923  3000               	movlw	0
 13203  0924  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13204  0925  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13205  0926  3000               	movlw	0
 13206  0927  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 13207  0928  3000               	movlw	0
 13208  0929  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 13209  092A  3000               	movlw	0
 13210  092B  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 13211  092C  3000               	movlw	0
 13212  092D  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13213  092E  3000               	movlw	0
 13214  092F  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13215  0930  3000               	movlw	0
 13216  0931  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13217  0932  31A5  25F3         	fcall	_dwt_writetodevice
 13218                           
 13219                           ;deca_device.c: 3774: }
 13220                           ;deca_device.c: 3775: }
 13221  0934  0008               	return
 13222  0935                     l970:	
 13223                           
 13224                           ;deca_device.c: 3776: else
 13225                           ;deca_device.c: 3777: {
 13226                           ;deca_device.c: 3778: if(mode & 0x02)
 13227  0935  1CC7               	btfss	dwt_starttx@mode^(0+128),1
 13228  0936  2951               	goto	l6599
 13229                           
 13230                           ;deca_device.c: 3779: {
 13231                           ;deca_device.c: 3780: dwt_writetodevice(0xC,0,0,0);
 13232  0937  3000               	movlw	0
 13233  0938  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13234  0939  3000               	movlw	0
 13235  093A  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13236  093B  3000               	movlw	0
 13237  093C  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13238  093D  300C               	movlw	12
 13239  093E  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13240  093F  3000               	movlw	0
 13241  0940  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13242  0941  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13243  0942  3000               	movlw	0
 13244  0943  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 13245  0944  3000               	movlw	0
 13246  0945  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 13247  0946  3000               	movlw	0
 13248  0947  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 13249  0948  3000               	movlw	0
 13250  0949  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13251  094A  3000               	movlw	0
 13252  094B  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13253  094C  3000               	movlw	0
 13254  094D  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13255  094E  31A5  25F3         	fcall	_dwt_writetodevice
 13256                           
 13257                           ;deca_device.c: 3781: }
 13258  0950  0008               	return
 13259  0951                     l6599:	
 13260                           
 13261                           ;deca_device.c: 3782: else
 13262                           ;deca_device.c: 3783: {
 13263                           ;deca_device.c: 3784: dwt_writetodevice(0x1,0,0,0);
 13264  0951  3000               	movlw	0
 13265  0952  0141               	movlb	1	; select bank1
 13266  0953  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13267  0954  3000               	movlw	0
 13268  0955  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13269  0956  3000               	movlw	0
 13270  0957  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13271  0958  3001               	movlw	1
 13272  0959  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13273  095A  3000               	movlw	0
 13274  095B  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13275  095C  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13276  095D  3000               	movlw	0
 13277  095E  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 13278  095F  3000               	movlw	0
 13279  0960  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 13280  0961  3000               	movlw	0
 13281  0962  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 13282  0963  3000               	movlw	0
 13283  0964  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13284  0965  3000               	movlw	0
 13285  0966  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13286  0967  3000               	movlw	0
 13287  0968  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13288  0969  31A5  25F3         	fcall	_dwt_writetodevice
 13289  096B  0008               	return
 13290  096C                     __end_of_dwt_starttx:	
 13291                           ;deca_device.c: 3785: }
 13292                           ;deca_device.c: 3786: }
 13293                           ;deca_device.c: 3788: return retval;
 13294                           ;	Return value of _dwt_starttx is never used
 13295                           
 13296                           
 13297                           	psect	text27
 13298  2277                     __ptext27:	
 13299 ;; *************** function _dwt_settxantennadelay *****************
 13300 ;; Defined at:
 13301 ;;		line 1703 in file "deca_device.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  txDelay         2   75[BANK0 ] unsigned int 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;		None
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  1    wreg      void 
 13308 ;; Registers used:
 13309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13315 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13318 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13319 ;;Total ram usage:        2 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:    8
 13322 ;; This function calls:
 13323 ;;		_dwt_write16bitoffsetreg
 13324 ;; This function is called by:
 13325 ;;		_dw_main
 13326 ;; This function uses a non-reentrant model
 13327 ;;
 13328                           
 13329                           
 13330                           ;psect for function _dwt_settxantennadelay
 13331  2277                     _dwt_settxantennadelay:	
 13332                           
 13333                           ;deca_device.c: 1706: dwt_write16bitoffsetreg(0x10004, 0, txDelay);
 13334                           
 13335                           ;incstack = 0
 13336                           ; Regs used in _dwt_settxantennadelay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13337  2277  3000               	movlw	0
 13338  2278  0141               	movlb	1	; select bank1
 13339  2279  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 13340  227A  3001               	movlw	1
 13341  227B  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 13342  227C  3000               	movlw	0
 13343  227D  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 13344  227E  3004               	movlw	4
 13345  227F  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 13346  2280  3000               	movlw	0
 13347  2281  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 13348  2282  3000               	movlw	0
 13349  2283  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 13350  2284  3000               	movlw	0
 13351  2285  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 13352  2286  3000               	movlw	0
 13353  2287  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 13354  2288  0140               	movlb	0	; select bank0
 13355  2289  086C               	movf	dwt_settxantennadelay@txDelay+1,w
 13356  228A  0141               	movlb	1	; select bank1
 13357  228B  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 13358  228C  0140               	movlb	0	; select bank0
 13359  228D  086B               	movf	dwt_settxantennadelay@txDelay,w
 13360  228E  0141               	movlb	1	; select bank1
 13361  228F  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 13362  2290  31A3  23CF         	fcall	_dwt_write16bitoffsetreg
 13363  2292  0008               	return
 13364  2293                     __end_of_dwt_settxantennadelay:	
 13365                           
 13366                           	psect	text28
 13367  225B                     __ptext28:	
 13368 ;; *************** function _dwt_setrxantennadelay *****************
 13369 ;; Defined at:
 13370 ;;		line 1686 in file "deca_device.c"
 13371 ;; Parameters:    Size  Location     Type
 13372 ;;  rxDelay         2   75[BANK0 ] unsigned int 
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;		None
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  1    wreg      void 
 13377 ;; Registers used:
 13378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/0
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13388 ;;Total ram usage:        2 bytes
 13389 ;; Hardware stack levels used:    1
 13390 ;; Hardware stack levels required when called:    8
 13391 ;; This function calls:
 13392 ;;		_dwt_write16bitoffsetreg
 13393 ;; This function is called by:
 13394 ;;		_dw_main
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           
 13399                           ;psect for function _dwt_setrxantennadelay
 13400  225B                     _dwt_setrxantennadelay:	
 13401                           
 13402                           ;deca_device.c: 1689: dwt_write16bitoffsetreg(0xe0000, 0, rxDelay);
 13403                           
 13404                           ;incstack = 0
 13405                           ; Regs used in _dwt_setrxantennadelay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13406  225B  3000               	movlw	0
 13407  225C  0141               	movlb	1	; select bank1
 13408  225D  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 13409  225E  300E               	movlw	14
 13410  225F  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 13411  2260  3000               	movlw	0
 13412  2261  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 13413  2262  3000               	movlw	0
 13414  2263  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 13415  2264  3000               	movlw	0
 13416  2265  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 13417  2266  3000               	movlw	0
 13418  2267  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 13419  2268  3000               	movlw	0
 13420  2269  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 13421  226A  3000               	movlw	0
 13422  226B  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 13423  226C  0140               	movlb	0	; select bank0
 13424  226D  086C               	movf	dwt_setrxantennadelay@rxDelay+1,w
 13425  226E  0141               	movlb	1	; select bank1
 13426  226F  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 13427  2270  0140               	movlb	0	; select bank0
 13428  2271  086B               	movf	dwt_setrxantennadelay@rxDelay,w
 13429  2272  0141               	movlb	1	; select bank1
 13430  2273  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 13431  2274  31A3  23CF         	fcall	_dwt_write16bitoffsetreg
 13432  2276  0008               	return
 13433  2277                     __end_of_dwt_setrxantennadelay:	
 13434                           
 13435                           	psect	text29
 13436  0B07                     __ptext29:	
 13437 ;; *************** function _dwt_initialise *****************
 13438 ;; Defined at:
 13439 ;;		line 779 in file "deca_device.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;  mode            2   37[BANK1 ] int 
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;  ldo_tune_hi     4   48[BANK1 ] unsigned long 
 13444 ;;  ldo_tune_lo     4   44[BANK1 ] unsigned long 
 13445 ;; Return value:  Size  Location     Type
 13446 ;;                  2   37[BANK1 ] int 
 13447 ;; Registers used:
 13448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13449 ;; Tracked objects:
 13450 ;;		On entry : 0/0
 13451 ;;		On exit  : 0/0
 13452 ;;		Unchanged: 0/0
 13453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13454 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13455 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13456 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13457 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13458 ;;Total ram usage:       15 bytes
 13459 ;; Hardware stack levels used:    1
 13460 ;; Hardware stack levels required when called:   10
 13461 ;; This function calls:
 13462 ;;		_Sleep
 13463 ;;		__dwt_otpread
 13464 ;;		__dwt_prog_ldo_and_bias_tune
 13465 ;;		_dwt_check_dev_id
 13466 ;;		_dwt_checkidlerc
 13467 ;;		_dwt_write8bitoffsetreg
 13468 ;; This function is called by:
 13469 ;;		_dw_main
 13470 ;; This function uses a non-reentrant model
 13471 ;;
 13472                           
 13473                           
 13474                           ;psect for function _dwt_initialise
 13475  0B07                     _dwt_initialise:	
 13476                           
 13477                           ;deca_device.c: 782: uint32_t ldo_tune_lo;
 13478                           ;deca_device.c: 783: uint32_t ldo_tune_hi;
 13479                           ;deca_device.c: 784: pdw3000local->dblbuffon = 0x0;
 13480                           
 13481                           ;incstack = 0
 13482                           ; Regs used in _dwt_initialise: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13483  0B07  0141               	movlb	1	; select bank1
 13484  0B08  086F               	movf	_pdw3000local^(0+128),w
 13485  0B09  3E0F               	addlw	15
 13486  0B0A  0086               	movwf	6
 13487  0B0B  3002               	movlw	2	; select bank4/5
 13488  0B0C  0087               	movwf	7
 13489  0B0D  0181               	clrf	1
 13490                           
 13491                           ;deca_device.c: 785: pdw3000local->sleep_mode = 0x0002;
 13492  0B0E  086F               	movf	_pdw3000local^(0+128),w
 13493  0B0F  3E10               	addlw	16
 13494  0B10  0086               	movwf	6
 13495  0B11  3002               	movlw	2	; select bank4/5
 13496  0B12  0087               	movwf	7
 13497  0B13  3002               	movlw	2
 13498  0B14  3FC0               	movwi [0]fsr1
 13499  0B15  3000               	movlw	0
 13500  0B16  3FC1               	movwi [1]fsr1
 13501                           
 13502                           ;deca_device.c: 786: pdw3000local->spicrc = 0;
 13503  0B17  086F               	movf	_pdw3000local^(0+128),w
 13504  0B18  3E14               	addlw	20
 13505  0B19  0086               	movwf	6
 13506  0B1A  3002               	movlw	2	; select bank4/5
 13507  0B1B  0087               	movwf	7
 13508  0B1C  0181               	clrf	1
 13509                           
 13510                           ;deca_device.c: 787: pdw3000local->stsconfig = 0;
 13511  0B1D  086F               	movf	_pdw3000local^(0+128),w
 13512  0B1E  3E15               	addlw	21
 13513  0B1F  0086               	movwf	6
 13514  0B20  3002               	movlw	2	; select bank4/5
 13515  0B21  0087               	movwf	7
 13516  0B22  0181               	clrf	1
 13517                           
 13518                           ;deca_device.c: 788: pdw3000local->vBatP = 0;
 13519  0B23  086F               	movf	_pdw3000local^(0+128),w
 13520  0B24  3E0A               	addlw	10
 13521  0B25  0086               	movwf	6
 13522  0B26  3002               	movlw	2	; select bank4/5
 13523  0B27  0087               	movwf	7
 13524  0B28  0181               	clrf	1
 13525                           
 13526                           ;deca_device.c: 789: pdw3000local->tempP = 0;
 13527  0B29  086F               	movf	_pdw3000local^(0+128),w
 13528  0B2A  3E0B               	addlw	11
 13529  0B2B  0086               	movwf	6
 13530  0B2C  3002               	movlw	2	; select bank4/5
 13531  0B2D  0087               	movwf	7
 13532  0B2E  0181               	clrf	1
 13533                           
 13534                           ;deca_device.c: 791: pdw3000local->cbTxDone = (0);
 13535  0B2F  086F               	movf	_pdw3000local^(0+128),w
 13536  0B30  3E22               	addlw	34
 13537  0B31  0086               	movwf	6
 13538  0B32  3002               	movlw	2	; select bank4/5
 13539  0B33  0087               	movwf	7
 13540  0B34  3000               	movlw	0
 13541  0B35  3FC0               	movwi [0]fsr1
 13542  0B36  3FC1               	movwi [1]fsr1
 13543                           
 13544                           ;deca_device.c: 792: pdw3000local->cbRxOk = (0);
 13545  0B37  086F               	movf	_pdw3000local^(0+128),w
 13546  0B38  3E24               	addlw	36
 13547  0B39  0086               	movwf	6
 13548  0B3A  3002               	movlw	2	; select bank4/5
 13549  0B3B  0087               	movwf	7
 13550  0B3C  3000               	movlw	0
 13551  0B3D  3FC0               	movwi [0]fsr1
 13552  0B3E  3FC1               	movwi [1]fsr1
 13553                           
 13554                           ;deca_device.c: 793: pdw3000local->cbRxTo = (0);
 13555  0B3F  086F               	movf	_pdw3000local^(0+128),w
 13556  0B40  3E26               	addlw	38
 13557  0B41  0086               	movwf	6
 13558  0B42  3002               	movlw	2	; select bank4/5
 13559  0B43  0087               	movwf	7
 13560  0B44  3000               	movlw	0
 13561  0B45  3FC0               	movwi [0]fsr1
 13562  0B46  3FC1               	movwi [1]fsr1
 13563                           
 13564                           ;deca_device.c: 794: pdw3000local->cbRxErr = (0);
 13565  0B47  086F               	movf	_pdw3000local^(0+128),w
 13566  0B48  3E28               	addlw	40
 13567  0B49  0086               	movwf	6
 13568  0B4A  3002               	movlw	2	; select bank4/5
 13569  0B4B  0087               	movwf	7
 13570  0B4C  3000               	movlw	0
 13571  0B4D  3FC0               	movwi [0]fsr1
 13572  0B4E  3FC1               	movwi [1]fsr1
 13573                           
 13574                           ;deca_device.c: 795: pdw3000local->cbSPIRdy = (0);
 13575  0B4F  086F               	movf	_pdw3000local^(0+128),w
 13576  0B50  3E2C               	addlw	44
 13577  0B51  0086               	movwf	6
 13578  0B52  3002               	movlw	2	; select bank4/5
 13579  0B53  0087               	movwf	7
 13580  0B54  3000               	movlw	0
 13581  0B55  3FC0               	movwi [0]fsr1
 13582  0B56  3FC1               	movwi [1]fsr1
 13583                           
 13584                           ;deca_device.c: 796: pdw3000local->cbSPIErr = (0);
 13585  0B57  086F               	movf	_pdw3000local^(0+128),w
 13586  0B58  3E2A               	addlw	42
 13587  0B59  0086               	movwf	6
 13588  0B5A  3002               	movlw	2	; select bank4/5
 13589  0B5B  0087               	movwf	7
 13590  0B5C  3000               	movlw	0
 13591  0B5D  3FC0               	movwi [0]fsr1
 13592  0B5E  3FC1               	movwi [1]fsr1
 13593                           
 13594                           ;deca_device.c: 797: Sleep(2);
 13595  0B5F  3000               	movlw	0
 13596  0B60  00F3               	movwf	Sleep@time+3
 13597  0B61  3000               	movlw	0
 13598  0B62  00F2               	movwf	Sleep@time+2
 13599  0B63  3000               	movlw	0
 13600  0B64  00F1               	movwf	Sleep@time+1
 13601  0B65  3002               	movlw	2
 13602  0B66  00F0               	movwf	Sleep@time
 13603  0B67  31A4  241F  318B   	fcall	_Sleep
 13604                           
 13605                           ;deca_device.c: 800: if (dwt_check_dev_id()!=(0))
 13606  0B6A  3198  209B  318B   	fcall	_dwt_check_dev_id
 13607  0B6D  0141               	movlb	1	; select bank1
 13608  0B6E  0841               	movf	?_dwt_check_dev_id^(0+128),w
 13609  0B6F  0442               	iorwf	(?_dwt_check_dev_id+1)^(0+128),w
 13610  0B70  1903               	btfsc	3,2
 13611  0B71  2B77               	goto	l6279
 13612                           
 13613                           ;deca_device.c: 801: {
 13614                           ;deca_device.c: 805: return (-1);
 13615  0B72  30FF               	movlw	255
 13616  0B73  00C5               	movwf	?_dwt_initialise^(0+128)
 13617  0B74  30FF               	movlw	255
 13618  0B75  00C6               	movwf	(?_dwt_initialise^(0+128)+1)
 13619  0B76  0008               	return
 13620  0B77                     l6279:	
 13621                           ;deca_device.c: 809: { };
 13622                           
 13623                           ;deca_device.c: 806: }
 13624                           ;deca_device.c: 808: while (!dwt_checkidlerc())
 13625                           
 13626  0B77  31A5  2558  318B   	fcall	_dwt_checkidlerc
 13627  0B7A  3A00               	xorlw	0
 13628  0B7B  1903               	skipnz
 13629  0B7C  2B77               	goto	l6279
 13630                           
 13631                           ;deca_device.c: 811: ldo_tune_lo = _dwt_otpread((0x04));
 13632  0B7D  3004               	movlw	4
 13633  0B7E  0141               	movlb	1	; select bank1
 13634  0B7F  00BD               	movwf	__dwt_otpread@address^(0+128)
 13635  0B80  3000               	movlw	0
 13636  0B81  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13637  0B82  319D  255D  318B   	fcall	__dwt_otpread
 13638  0B85  0141               	movlb	1	; select bank1
 13639  0B86  0840               	movf	(?__dwt_otpread+3)^(0+128),w
 13640  0B87  00CF               	movwf	(dwt_initialise@ldo_tune_lo+3)^(0+128)
 13641  0B88  083F               	movf	(?__dwt_otpread+2)^(0+128),w
 13642  0B89  00CE               	movwf	(dwt_initialise@ldo_tune_lo+2)^(0+128)
 13643  0B8A  083E               	movf	(?__dwt_otpread+1)^(0+128),w
 13644  0B8B  00CD               	movwf	(dwt_initialise@ldo_tune_lo+1)^(0+128)
 13645  0B8C  083D               	movf	?__dwt_otpread^(0+128),w
 13646  0B8D  00CC               	movwf	dwt_initialise@ldo_tune_lo^(0+128)
 13647                           
 13648                           ;deca_device.c: 812: ldo_tune_hi = _dwt_otpread((0x05));
 13649  0B8E  3005               	movlw	5
 13650  0B8F  00BD               	movwf	__dwt_otpread@address^(0+128)
 13651  0B90  3000               	movlw	0
 13652  0B91  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13653  0B92  319D  255D  318B   	fcall	__dwt_otpread
 13654  0B95  0141               	movlb	1	; select bank1
 13655  0B96  0840               	movf	(?__dwt_otpread+3)^(0+128),w
 13656  0B97  00D3               	movwf	(dwt_initialise@ldo_tune_hi+3)^(0+128)
 13657  0B98  083F               	movf	(?__dwt_otpread+2)^(0+128),w
 13658  0B99  00D2               	movwf	(dwt_initialise@ldo_tune_hi+2)^(0+128)
 13659  0B9A  083E               	movf	(?__dwt_otpread+1)^(0+128),w
 13660  0B9B  00D1               	movwf	(dwt_initialise@ldo_tune_hi+1)^(0+128)
 13661  0B9C  083D               	movf	?__dwt_otpread^(0+128),w
 13662  0B9D  00D0               	movwf	dwt_initialise@ldo_tune_hi^(0+128)
 13663                           
 13664                           ;deca_device.c: 813: pdw3000local->bias_tune = (_dwt_otpread((0xA)) >> 16) & 0x1fU;
 13665  0B9E  300A               	movlw	10
 13666  0B9F  00BD               	movwf	__dwt_otpread@address^(0+128)
 13667  0BA0  3000               	movlw	0
 13668  0BA1  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13669  0BA2  319D  255D  318B   	fcall	__dwt_otpread
 13670  0BA5  0141               	movlb	1	; select bank1
 13671  0BA6  083D               	movf	?__dwt_otpread^(0+128),w
 13672  0BA7  00C7               	movwf	??_dwt_initialise^(0+128)
 13673  0BA8  083E               	movf	(?__dwt_otpread+1)^(0+128),w
 13674  0BA9  00C8               	movwf	(??_dwt_initialise^(0+128)+1)
 13675  0BAA  083F               	movf	(?__dwt_otpread+2)^(0+128),w
 13676  0BAB  00C9               	movwf	(??_dwt_initialise^(0+128)+2)
 13677  0BAC  0840               	movf	(?__dwt_otpread+3)^(0+128),w
 13678  0BAD  00CA               	movwf	(??_dwt_initialise^(0+128)+3)
 13679  0BAE  3010               	movlw	16
 13680  0BAF                     u5915:	
 13681  0BAF  36CA               	lsrf	(??_dwt_initialise^(0+128)+3),f
 13682  0BB0  0CC9               	rrf	(??_dwt_initialise^(0+128)+2),f
 13683  0BB1  0CC8               	rrf	(??_dwt_initialise^(0+128)+1),f
 13684  0BB2  0CC7               	rrf	??_dwt_initialise^(0+128),f
 13685  0BB3  0B89               	decfsz	9,f
 13686  0BB4  2BAF               	goto	u5915
 13687  0BB5  0847               	movf	??_dwt_initialise^(0+128),w
 13688  0BB6  391F               	andlw	31
 13689  0BB7  00CB               	movwf	(??_dwt_initialise+4)^(0+128)
 13690  0BB8  086F               	movf	_pdw3000local^(0+128),w
 13691  0BB9  3E08               	addlw	8
 13692  0BBA  0086               	movwf	6
 13693  0BBB  3002               	movlw	2	; select bank4/5
 13694  0BBC  0087               	movwf	7
 13695  0BBD  084B               	movf	(??_dwt_initialise+4)^(0+128),w
 13696  0BBE  0081               	movwf	1
 13697                           
 13698                           ;deca_device.c: 815: if ((ldo_tune_lo != 0) && (ldo_tune_hi != 0) && (pdw3000local->bias
      +                          _tune != 0))
 13699  0BBF  084F               	movf	(dwt_initialise@ldo_tune_lo+3)^(0+128),w
 13700  0BC0  044E               	iorwf	(dwt_initialise@ldo_tune_lo+2)^(0+128),w
 13701  0BC1  044D               	iorwf	(dwt_initialise@ldo_tune_lo+1)^(0+128),w
 13702  0BC2  044C               	iorwf	dwt_initialise@ldo_tune_lo^(0+128),w
 13703  0BC3  1903               	skipnz
 13704  0BC4  2BD6               	goto	l492
 13705  0BC5  0853               	movf	(dwt_initialise@ldo_tune_hi+3)^(0+128),w
 13706  0BC6  0452               	iorwf	(dwt_initialise@ldo_tune_hi+2)^(0+128),w
 13707  0BC7  0451               	iorwf	(dwt_initialise@ldo_tune_hi+1)^(0+128),w
 13708  0BC8  0450               	iorwf	dwt_initialise@ldo_tune_hi^(0+128),w
 13709  0BC9  1903               	skipnz
 13710  0BCA  2BD6               	goto	l492
 13711  0BCB  086F               	movf	_pdw3000local^(0+128),w
 13712  0BCC  3E08               	addlw	8
 13713  0BCD  0086               	movwf	6
 13714  0BCE  3002               	movlw	2	; select bank4/5
 13715  0BCF  0087               	movwf	7
 13716  0BD0  0801               	movf	1,w
 13717  0BD1  1903               	btfsc	3,2
 13718  0BD2  2BD6               	goto	l492
 13719                           
 13720                           ;deca_device.c: 816: {
 13721                           ;deca_device.c: 817: _dwt_prog_ldo_and_bias_tune();
 13722  0BD3  31A6  26E5  318B   	fcall	__dwt_prog_ldo_and_bias_tune
 13723  0BD6                     l492:	
 13724                           
 13725                           ;deca_device.c: 818: }
 13726                           ;deca_device.c: 821: if (_dwt_otpread((0x20)) == 0x10000240)
 13727  0BD6  3020               	movlw	32
 13728  0BD7  0141               	movlb	1	; select bank1
 13729  0BD8  00BD               	movwf	__dwt_otpread@address^(0+128)
 13730  0BD9  3000               	movlw	0
 13731  0BDA  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13732  0BDB  319D  255D  318B   	fcall	__dwt_otpread
 13733  0BDE  3040               	movlw	64
 13734  0BDF  0141               	movlb	1	; select bank1
 13735  0BE0  063D               	xorwf	?__dwt_otpread^(0+128),w
 13736  0BE1  3002               	movlw	2
 13737  0BE2  1903               	skipnz
 13738  0BE3  063E               	xorwf	(?__dwt_otpread+1)^(0+128),w
 13739  0BE4  3010               	movlw	16
 13740  0BE5  1903               	skipnz
 13741  0BE6  0640               	xorwf	(?__dwt_otpread+3)^(0+128),w
 13742  0BE7  043F               	iorwf	(?__dwt_otpread+2)^(0+128),w
 13743  0BE8  1D03               	btfss	3,2
 13744  0BE9  2BF2               	goto	l6293
 13745                           
 13746                           ;deca_device.c: 822: {
 13747                           ;deca_device.c: 823: pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_OTP;
 13748  0BEA  086F               	movf	_pdw3000local^(0+128),w
 13749  0BEB  3E09               	addlw	9
 13750  0BEC  0086               	movwf	6
 13751  0BED  3002               	movlw	2	; select bank4/5
 13752  0BEE  0087               	movwf	7
 13753  0BEF  0181               	clrf	1
 13754  0BF0  0A81               	incf	1,f
 13755                           
 13756                           ;deca_device.c: 824: }
 13757  0BF1  2BF8               	goto	l6295
 13758  0BF2                     l6293:	
 13759                           
 13760                           ;deca_device.c: 825: else
 13761                           ;deca_device.c: 826: {
 13762                           ;deca_device.c: 827: pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_SW;
 13763  0BF2  086F               	movf	_pdw3000local^(0+128),w
 13764  0BF3  3E09               	addlw	9
 13765  0BF4  0086               	movwf	6
 13766  0BF5  3002               	movlw	2	; select bank4/5
 13767  0BF6  0087               	movwf	7
 13768  0BF7  0181               	clrf	1
 13769  0BF8                     l6295:	
 13770                           
 13771                           ;deca_device.c: 828: }
 13772                           ;deca_device.c: 831: if(mode & 0x10)
 13773  0BF8  1E45               	btfss	dwt_initialise@mode^(0+128),4
 13774  0BF9  2C0E               	goto	l6299
 13775                           
 13776                           ;deca_device.c: 832: pdw3000local->partID = _dwt_otpread((0x06));
 13777  0BFA  3006               	movlw	6
 13778  0BFB  00BD               	movwf	__dwt_otpread@address^(0+128)
 13779  0BFC  3000               	movlw	0
 13780  0BFD  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13781  0BFE  319D  255D  318B   	fcall	__dwt_otpread
 13782  0C01  0141               	movlb	1	; select bank1
 13783  0C02  086F               	movf	_pdw3000local^(0+128),w
 13784  0C03  0086               	movwf	6
 13785  0C04  3002               	movlw	2	; select bank4/5
 13786  0C05  0087               	movwf	7
 13787  0C06  083D               	movf	?__dwt_otpread^(0+128),w
 13788  0C07  3FC0               	movwi [0]fsr1
 13789  0C08  083E               	movf	(?__dwt_otpread+1)^(0+128),w
 13790  0C09  3FC1               	movwi [1]fsr1
 13791  0C0A  083F               	movf	(?__dwt_otpread+2)^(0+128),w
 13792  0C0B  3FC2               	movwi [2]fsr1
 13793  0C0C  0840               	movf	(?__dwt_otpread+3)^(0+128),w
 13794  0C0D  3FC3               	movwi [3]fsr1
 13795  0C0E                     l6299:	
 13796                           
 13797                           ;deca_device.c: 833: if (mode & 0x20)
 13798  0C0E  1EC5               	btfss	dwt_initialise@mode^(0+128),5
 13799  0C0F  2C25               	goto	l6303
 13800                           
 13801                           ;deca_device.c: 834: pdw3000local->lotID = _dwt_otpread((0x07));
 13802  0C10  3007               	movlw	7
 13803  0C11  00BD               	movwf	__dwt_otpread@address^(0+128)
 13804  0C12  3000               	movlw	0
 13805  0C13  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13806  0C14  319D  255D  318B   	fcall	__dwt_otpread
 13807  0C17  0141               	movlb	1	; select bank1
 13808  0C18  086F               	movf	_pdw3000local^(0+128),w
 13809  0C19  3E04               	addlw	4
 13810  0C1A  0086               	movwf	6
 13811  0C1B  3002               	movlw	2	; select bank4/5
 13812  0C1C  0087               	movwf	7
 13813  0C1D  083D               	movf	?__dwt_otpread^(0+128),w
 13814  0C1E  3FC0               	movwi [0]fsr1
 13815  0C1F  083E               	movf	(?__dwt_otpread+1)^(0+128),w
 13816  0C20  3FC1               	movwi [1]fsr1
 13817  0C21  083F               	movf	(?__dwt_otpread+2)^(0+128),w
 13818  0C22  3FC2               	movwi [2]fsr1
 13819  0C23  0840               	movf	(?__dwt_otpread+3)^(0+128),w
 13820  0C24  3FC3               	movwi [3]fsr1
 13821  0C25                     l6303:	
 13822                           
 13823                           ;deca_device.c: 835: if (mode & 0x40)
 13824  0C25  1F45               	btfss	dwt_initialise@mode^(0+128),6
 13825  0C26  2C38               	goto	l6307
 13826                           
 13827                           ;deca_device.c: 836: pdw3000local->vBatP = (uint8_t)_dwt_otpread((0x08));
 13828  0C27  3008               	movlw	8
 13829  0C28  00BD               	movwf	__dwt_otpread@address^(0+128)
 13830  0C29  3000               	movlw	0
 13831  0C2A  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13832  0C2B  319D  255D  318B   	fcall	__dwt_otpread
 13833  0C2E  0141               	movlb	1	; select bank1
 13834  0C2F  083D               	movf	?__dwt_otpread^(0+128),w
 13835  0C30  00C7               	movwf	??_dwt_initialise^(0+128)
 13836  0C31  086F               	movf	_pdw3000local^(0+128),w
 13837  0C32  3E0A               	addlw	10
 13838  0C33  0086               	movwf	6
 13839  0C34  3002               	movlw	2	; select bank4/5
 13840  0C35  0087               	movwf	7
 13841  0C36  0847               	movf	??_dwt_initialise^(0+128),w
 13842  0C37  0081               	movwf	1
 13843  0C38                     l6307:	
 13844                           
 13845                           ;deca_device.c: 837: if (mode & 0x80)
 13846  0C38  1FC5               	btfss	dwt_initialise@mode^(0+128),7
 13847  0C39  2C4B               	goto	l6311
 13848                           
 13849                           ;deca_device.c: 838: pdw3000local->tempP = (uint8_t)_dwt_otpread((0x09));
 13850  0C3A  3009               	movlw	9
 13851  0C3B  00BD               	movwf	__dwt_otpread@address^(0+128)
 13852  0C3C  3000               	movlw	0
 13853  0C3D  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13854  0C3E  319D  255D  318B   	fcall	__dwt_otpread
 13855  0C41  0141               	movlb	1	; select bank1
 13856  0C42  083D               	movf	?__dwt_otpread^(0+128),w
 13857  0C43  00C7               	movwf	??_dwt_initialise^(0+128)
 13858  0C44  086F               	movf	_pdw3000local^(0+128),w
 13859  0C45  3E0B               	addlw	11
 13860  0C46  0086               	movwf	6
 13861  0C47  3002               	movlw	2	; select bank4/5
 13862  0C48  0087               	movwf	7
 13863  0C49  0847               	movf	??_dwt_initialise^(0+128),w
 13864  0C4A  0081               	movwf	1
 13865  0C4B                     l6311:	
 13866                           
 13867                           ;deca_device.c: 841: if(pdw3000local->tempP == 0)
 13868  0C4B  086F               	movf	_pdw3000local^(0+128),w
 13869  0C4C  3E0B               	addlw	11
 13870  0C4D  0086               	movwf	6
 13871  0C4E  3002               	movlw	2	; select bank4/5
 13872  0C4F  0087               	movwf	7
 13873  0C50  0801               	movf	1,w
 13874  0C51  1D03               	btfss	3,2
 13875  0C52  2C5C               	goto	l499
 13876                           
 13877                           ;deca_device.c: 842: {
 13878                           ;deca_device.c: 843: pdw3000local->tempP = 0x85 ;
 13879  0C53  3085               	movlw	133
 13880  0C54  00C7               	movwf	??_dwt_initialise^(0+128)
 13881  0C55  086F               	movf	_pdw3000local^(0+128),w
 13882  0C56  3E0B               	addlw	11
 13883  0C57  0086               	movwf	6
 13884  0C58  3002               	movlw	2	; select bank4/5
 13885  0C59  0087               	movwf	7
 13886  0C5A  0847               	movf	??_dwt_initialise^(0+128),w
 13887  0C5B  0081               	movwf	1
 13888  0C5C                     l499:	
 13889                           
 13890                           ;deca_device.c: 844: }
 13891                           ;deca_device.c: 846: if(pdw3000local->vBatP == 0)
 13892  0C5C  086F               	movf	_pdw3000local^(0+128),w
 13893  0C5D  3E0A               	addlw	10
 13894  0C5E  0086               	movwf	6
 13895  0C5F  3002               	movlw	2	; select bank4/5
 13896  0C60  0087               	movwf	7
 13897  0C61  0801               	movf	1,w
 13898  0C62  1D03               	btfss	3,2
 13899  0C63  2C6D               	goto	l6317
 13900                           
 13901                           ;deca_device.c: 847: {
 13902                           ;deca_device.c: 848: pdw3000local->vBatP = 0x74 ;
 13903  0C64  3074               	movlw	116
 13904  0C65  00C7               	movwf	??_dwt_initialise^(0+128)
 13905  0C66  086F               	movf	_pdw3000local^(0+128),w
 13906  0C67  3E0A               	addlw	10
 13907  0C68  0086               	movwf	6
 13908  0C69  3002               	movlw	2	; select bank4/5
 13909  0C6A  0087               	movwf	7
 13910  0C6B  0847               	movf	??_dwt_initialise^(0+128),w
 13911  0C6C  0081               	movwf	1
 13912  0C6D                     l6317:	
 13913                           
 13914                           ;deca_device.c: 849: }
 13915                           ;deca_device.c: 851: pdw3000local->otprev = (uint8_t) _dwt_otpread((0x1F));
 13916  0C6D  301F               	movlw	31
 13917  0C6E  00BD               	movwf	__dwt_otpread@address^(0+128)
 13918  0C6F  3000               	movlw	0
 13919  0C70  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13920  0C71  319D  255D  318B   	fcall	__dwt_otpread
 13921  0C74  0141               	movlb	1	; select bank1
 13922  0C75  083D               	movf	?__dwt_otpread^(0+128),w
 13923  0C76  00C7               	movwf	??_dwt_initialise^(0+128)
 13924  0C77  086F               	movf	_pdw3000local^(0+128),w
 13925  0C78  3E0D               	addlw	13
 13926  0C79  0086               	movwf	6
 13927  0C7A  3002               	movlw	2	; select bank4/5
 13928  0C7B  0087               	movwf	7
 13929  0C7C  0847               	movf	??_dwt_initialise^(0+128),w
 13930  0C7D  0081               	movwf	1
 13931                           
 13932                           ;deca_device.c: 853: pdw3000local->init_xtrim =_dwt_otpread((0x1E)) & 0x7f;
 13933  0C7E  301E               	movlw	30
 13934  0C7F  00BD               	movwf	__dwt_otpread@address^(0+128)
 13935  0C80  3000               	movlw	0
 13936  0C81  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
 13937  0C82  319D  255D  318B   	fcall	__dwt_otpread
 13938  0C85  0141               	movlb	1	; select bank1
 13939  0C86  083D               	movf	?__dwt_otpread^(0+128),w
 13940  0C87  397F               	andlw	127
 13941  0C88  00C7               	movwf	??_dwt_initialise^(0+128)
 13942  0C89  086F               	movf	_pdw3000local^(0+128),w
 13943  0C8A  3E0E               	addlw	14
 13944  0C8B  0086               	movwf	6
 13945  0C8C  3002               	movlw	2	; select bank4/5
 13946  0C8D  0087               	movwf	7
 13947  0C8E  0847               	movf	??_dwt_initialise^(0+128),w
 13948  0C8F  0081               	movwf	1
 13949                           
 13950                           ;deca_device.c: 854: if(pdw3000local->init_xtrim == 0)
 13951  0C90  086F               	movf	_pdw3000local^(0+128),w
 13952  0C91  3E0E               	addlw	14
 13953  0C92  0086               	movwf	6
 13954  0C93  3002               	movlw	2	; select bank4/5
 13955  0C94  0087               	movwf	7
 13956  0C95  0801               	movf	1,w
 13957  0C96  1D03               	btfss	3,2
 13958  0C97  2CA1               	goto	l6323
 13959                           
 13960                           ;deca_device.c: 855: {
 13961                           ;deca_device.c: 856: pdw3000local->init_xtrim = 0x2E ;
 13962  0C98  302E               	movlw	46
 13963  0C99  00C7               	movwf	??_dwt_initialise^(0+128)
 13964  0C9A  086F               	movf	_pdw3000local^(0+128),w
 13965  0C9B  3E0E               	addlw	14
 13966  0C9C  0086               	movwf	6
 13967  0C9D  3002               	movlw	2	; select bank4/5
 13968  0C9E  0087               	movwf	7
 13969  0C9F  0847               	movf	??_dwt_initialise^(0+128),w
 13970  0CA0  0081               	movwf	1
 13971  0CA1                     l6323:	
 13972                           
 13973                           ;deca_device.c: 857: }
 13974                           ;deca_device.c: 858: dwt_write8bitoffsetreg(0x90014, 0, pdw3000local->init_xtrim);
 13975  0CA1  3000               	movlw	0
 13976  0CA2  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 13977  0CA3  3009               	movlw	9
 13978  0CA4  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 13979  0CA5  3000               	movlw	0
 13980  0CA6  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 13981  0CA7  3014               	movlw	20
 13982  0CA8  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 13983  0CA9  3000               	movlw	0
 13984  0CAA  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 13985  0CAB  3000               	movlw	0
 13986  0CAC  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 13987  0CAD  3000               	movlw	0
 13988  0CAE  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 13989  0CAF  3000               	movlw	0
 13990  0CB0  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 13991  0CB1  086F               	movf	_pdw3000local^(0+128),w
 13992  0CB2  0086               	movwf	6
 13993  0CB3  3002               	movlw	2	; select bank4/5
 13994  0CB4  0087               	movwf	7
 13995  0CB5  3002               	movlw	2	; select bank4/5
 13996  0CB6  3F4E               	moviw [14]fsr1
 13997  0CB7  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 13998  0CB8  31A2  2207         	fcall	_dwt_write8bitoffsetreg
 13999                           
 14000                           ;deca_device.c: 861: return (0) ;
 14001  0CBA  0141               	movlb	1	; select bank1
 14002  0CBB  01C5               	clrf	?_dwt_initialise^(0+128)
 14003  0CBC  01C6               	clrf	(?_dwt_initialise+1)^(0+128)
 14004  0CBD  0008               	return
 14005  0CBE                     __end_of_dwt_initialise:	
 14006                           
 14007                           	psect	text30
 14008  2558                     __ptext30:	
 14009 ;; *************** function _dwt_checkidlerc *****************
 14010 ;; Defined at:
 14011 ;;		line 3294 in file "deca_device.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;		None
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;  reg             4   24[BANK1 ] unsigned long 
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      unsigned char 
 14018 ;; Registers used:
 14019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 0/0
 14022 ;;		On exit  : 0/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14026 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14027 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14028 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14029 ;;Total ram usage:        8 bytes
 14030 ;; Hardware stack levels used:    1
 14031 ;; Hardware stack levels required when called:    8
 14032 ;; This function calls:
 14033 ;;		_dwt_read16bitoffsetreg
 14034 ;; This function is called by:
 14035 ;;		_dwt_initialise
 14036 ;; This function uses a non-reentrant model
 14037 ;;
 14038                           
 14039                           
 14040                           ;psect for function _dwt_checkidlerc
 14041  2558                     _dwt_checkidlerc:	
 14042                           
 14043                           ;deca_device.c: 3298: uint32_t reg = ((uint32_t)dwt_read16bitoffsetreg(0x44, 2) << 16);
 14044                           
 14045                           ;incstack = 0
 14046                           ; Regs used in _dwt_checkidlerc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14047  2558  3000               	movlw	0
 14048  2559  0140               	movlb	0	; select bank0
 14049  255A  00EB               	movwf	dwt_read16bitoffsetreg@regFileID+3
 14050  255B  3000               	movlw	0
 14051  255C  00EA               	movwf	dwt_read16bitoffsetreg@regFileID+2
 14052  255D  3000               	movlw	0
 14053  255E  00E9               	movwf	dwt_read16bitoffsetreg@regFileID+1
 14054  255F  3044               	movlw	68
 14055  2560  00E8               	movwf	dwt_read16bitoffsetreg@regFileID
 14056  2561  3000               	movlw	0
 14057  2562  00EF               	movwf	dwt_read16bitoffsetreg@regOffset+3
 14058  2563  3000               	movlw	0
 14059  2564  00EE               	movwf	dwt_read16bitoffsetreg@regOffset+2
 14060  2565  3000               	movlw	0
 14061  2566  00ED               	movwf	dwt_read16bitoffsetreg@regOffset+1
 14062  2567  3002               	movlw	2
 14063  2568  00EC               	movwf	dwt_read16bitoffsetreg@regOffset
 14064  2569  31A6  2661  31A5   	fcall	_dwt_read16bitoffsetreg
 14065  256C  0140               	movlb	0	; select bank0
 14066  256D  0868               	movf	?_dwt_read16bitoffsetreg,w
 14067  256E  0141               	movlb	1	; select bank1
 14068  256F  00B4               	movwf	??_dwt_checkidlerc^(0+128)
 14069  2570  0140               	movlb	0	; select bank0
 14070  2571  0869               	movf	?_dwt_read16bitoffsetreg+1,w
 14071  2572  0141               	movlb	1	; select bank1
 14072  2573  00B5               	movwf	(??_dwt_checkidlerc^(0+128)+1)
 14073  2574  01B6               	clrf	(??_dwt_checkidlerc^(0+128)+2)
 14074  2575  01B7               	clrf	(??_dwt_checkidlerc^(0+128)+3)
 14075  2576  3010               	movlw	16
 14076  2577                     u5425:	
 14077  2577  35B4               	lslf	??_dwt_checkidlerc^(0+128),f
 14078  2578  0DB5               	rlf	(??_dwt_checkidlerc^(0+128)+1),f
 14079  2579  0DB6               	rlf	(??_dwt_checkidlerc^(0+128)+2),f
 14080  257A  0DB7               	rlf	(??_dwt_checkidlerc^(0+128)+3),f
 14081  257B  0B89               	decfsz	9,f
 14082  257C  2D77               	goto	u5425
 14083  257D  0837               	movf	(??_dwt_checkidlerc+3)^(0+128),w
 14084  257E  00BB               	movwf	(dwt_checkidlerc@reg+3)^(0+128)
 14085  257F  0836               	movf	(??_dwt_checkidlerc+2)^(0+128),w
 14086  2580  00BA               	movwf	(dwt_checkidlerc@reg+2)^(0+128)
 14087  2581  0835               	movf	(??_dwt_checkidlerc+1)^(0+128),w
 14088  2582  00B9               	movwf	(dwt_checkidlerc@reg+1)^(0+128)
 14089  2583  0834               	movf	??_dwt_checkidlerc^(0+128),w
 14090  2584  00B8               	movwf	dwt_checkidlerc@reg^(0+128)
 14091                           
 14092                           ;deca_device.c: 3299: return ( (reg & (0x1000000UL)) == (0x1000000UL));
 14093  2585  1C3B               	btfss	(dwt_checkidlerc@reg+3)^(0+128),0
 14094  2586  2D89               	goto	u5430
 14095  2587  3001               	movlw	1
 14096  2588  0008               	return
 14097  2589                     u5430:	
 14098  2589  3000               	movlw	0
 14099  258A  0008               	return
 14100  258B                     __end_of_dwt_checkidlerc:	
 14101                           
 14102                           	psect	text31
 14103  189B                     __ptext31:	
 14104 ;; *************** function _dwt_check_dev_id *****************
 14105 ;; Defined at:
 14106 ;;		line 3080 in file "deca_device.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;		None
 14109 ;; Auto vars:     Size  Location     Type
 14110 ;;		None
 14111 ;; Return value:  Size  Location     Type
 14112 ;;                  2   33[BANK1 ] int 
 14113 ;; Registers used:
 14114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14115 ;; Tracked objects:
 14116 ;;		On entry : 0/0
 14117 ;;		On exit  : 0/0
 14118 ;;		Unchanged: 0/0
 14119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14120 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14123 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14124 ;;Total ram usage:        2 bytes
 14125 ;; Hardware stack levels used:    1
 14126 ;; Hardware stack levels required when called:    9
 14127 ;; This function calls:
 14128 ;;		_dwt_readdevid
 14129 ;; This function is called by:
 14130 ;;		_dwt_initialise
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134                           
 14135                           ;psect for function _dwt_check_dev_id
 14136  189B                     _dwt_check_dev_id:	
 14137                           
 14138                           ;deca_device.c: 3084: dev_id = dwt_readdevid();
 14139                           
 14140                           ;incstack = 0
 14141                           ; Regs used in _dwt_check_dev_id: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14142  189B  31A2  22ED  3198   	fcall	_dwt_readdevid
 14143  189E  0141               	movlb	1	; select bank1
 14144  189F  0840               	movf	(?_dwt_readdevid+3)^(0+128),w
 14145  18A0  0142               	movlb	2	; select bank2
 14146  18A1  00CD               	movwf	(_dev_id+3)^(0+256)
 14147  18A2  0141               	movlb	1	; select bank1
 14148  18A3  083F               	movf	(?_dwt_readdevid+2)^(0+128),w
 14149  18A4  0142               	movlb	2	; select bank2
 14150  18A5  00CC               	movwf	(_dev_id+2)^(0+256)
 14151  18A6  0141               	movlb	1	; select bank1
 14152  18A7  083E               	movf	(?_dwt_readdevid+1)^(0+128),w
 14153  18A8  0142               	movlb	2	; select bank2
 14154  18A9  00CB               	movwf	(_dev_id+1)^(0+256)
 14155  18AA  0141               	movlb	1	; select bank1
 14156  18AB  083D               	movf	?_dwt_readdevid^(0+128),w
 14157  18AC  0142               	movlb	2	; select bank2
 14158  18AD  00CA               	movwf	_dev_id^(0+256)
 14159                           
 14160                           ;deca_device.c: 3086: if (!(((0xDECA0312) == dev_id) || ((0xDECA0302) == dev_id)))
 14161  18AE  3012               	movlw	18
 14162  18AF  064A               	xorwf	_dev_id^(0+256),w
 14163  18B0  3003               	movlw	3
 14164  18B1  1903               	skipnz
 14165  18B2  064B               	xorwf	(_dev_id+1)^(0+256),w
 14166  18B3  30CA               	movlw	202
 14167  18B4  1903               	skipnz
 14168  18B5  064C               	xorwf	(_dev_id+2)^(0+256),w
 14169  18B6  30DE               	movlw	222
 14170  18B7  1903               	skipnz
 14171  18B8  064D               	xorwf	(_dev_id+3)^(0+256),w
 14172  18B9  1903               	btfsc	3,2
 14173  18BA  28CE               	goto	l5839
 14174  18BB  3002               	movlw	2
 14175  18BC  064A               	xorwf	_dev_id^(0+256),w
 14176  18BD  3003               	movlw	3
 14177  18BE  1903               	skipnz
 14178  18BF  064B               	xorwf	(_dev_id+1)^(0+256),w
 14179  18C0  30CA               	movlw	202
 14180  18C1  1903               	skipnz
 14181  18C2  064C               	xorwf	(_dev_id+2)^(0+256),w
 14182  18C3  30DE               	movlw	222
 14183  18C4  1903               	skipnz
 14184  18C5  064D               	xorwf	(_dev_id+3)^(0+256),w
 14185  18C6  1903               	btfsc	3,2
 14186  18C7  28CE               	goto	l5839
 14187                           
 14188                           ;deca_device.c: 3087: {
 14189                           ;deca_device.c: 3088: return (-1);
 14190  18C8  30FF               	movlw	255
 14191  18C9  0141               	movlb	1	; select bank1
 14192  18CA  00C1               	movwf	?_dwt_check_dev_id^(0+128)
 14193  18CB  30FF               	movlw	255
 14194  18CC  00C2               	movwf	(?_dwt_check_dev_id^(0+128)+1)
 14195  18CD  0008               	return
 14196  18CE                     l5839:	
 14197                           
 14198                           ;deca_device.c: 3089: }
 14199                           ;deca_device.c: 3090: return (0);
 14200  18CE  0141               	movlb	1	; select bank1
 14201  18CF  01C1               	clrf	?_dwt_check_dev_id^(0+128)
 14202  18D0  01C2               	clrf	(?_dwt_check_dev_id+1)^(0+128)
 14203  18D1  0008               	return
 14204  18D2                     __end_of_dwt_check_dev_id:	
 14205                           
 14206                           	psect	text32
 14207  22ED                     __ptext32:	
 14208 ;; *************** function _dwt_readdevid *****************
 14209 ;; Defined at:
 14210 ;;		line 1081 in file "deca_device.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;		None
 14213 ;; Auto vars:     Size  Location     Type
 14214 ;;		None
 14215 ;; Return value:  Size  Location     Type
 14216 ;;                  4   29[BANK1 ] unsigned long 
 14217 ;; Registers used:
 14218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14219 ;; Tracked objects:
 14220 ;;		On entry : 0/0
 14221 ;;		On exit  : 0/0
 14222 ;;		Unchanged: 0/0
 14223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14224 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14227 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14228 ;;Total ram usage:        4 bytes
 14229 ;; Hardware stack levels used:    1
 14230 ;; Hardware stack levels required when called:    8
 14231 ;; This function calls:
 14232 ;;		_dwt_read32bitoffsetreg
 14233 ;; This function is called by:
 14234 ;;		_dwt_check_dev_id
 14235 ;; This function uses a non-reentrant model
 14236 ;;
 14237                           
 14238                           
 14239                           ;psect for function _dwt_readdevid
 14240  22ED                     _dwt_readdevid:	
 14241                           
 14242                           ;deca_device.c: 1083: return dwt_read32bitoffsetreg(0x0, 0);
 14243                           
 14244                           ;incstack = 0
 14245                           ; Regs used in _dwt_readdevid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14246  22ED  3000               	movlw	0
 14247  22EE  0140               	movlb	0	; select bank0
 14248  22EF  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 14249  22F0  3000               	movlw	0
 14250  22F1  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 14251  22F2  3000               	movlw	0
 14252  22F3  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 14253  22F4  3000               	movlw	0
 14254  22F5  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 14255  22F6  3000               	movlw	0
 14256  22F7  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 14257  22F8  3000               	movlw	0
 14258  22F9  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 14259  22FA  3000               	movlw	0
 14260  22FB  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 14261  22FC  3000               	movlw	0
 14262  22FD  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 14263  22FE  319C  246C         	fcall	_dwt_read32bitoffsetreg
 14264  2300  0140               	movlb	0	; select bank0
 14265  2301  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 14266  2302  0141               	movlb	1	; select bank1
 14267  2303  00C0               	movwf	(?_dwt_readdevid+3)^(0+128)
 14268  2304  0140               	movlb	0	; select bank0
 14269  2305  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 14270  2306  0141               	movlb	1	; select bank1
 14271  2307  00BF               	movwf	(?_dwt_readdevid+2)^(0+128)
 14272  2308  0140               	movlb	0	; select bank0
 14273  2309  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 14274  230A  0141               	movlb	1	; select bank1
 14275  230B  00BE               	movwf	(?_dwt_readdevid+1)^(0+128)
 14276  230C  0140               	movlb	0	; select bank0
 14277  230D  0868               	movf	?_dwt_read32bitoffsetreg,w
 14278  230E  0141               	movlb	1	; select bank1
 14279  230F  00BD               	movwf	?_dwt_readdevid^(0+128)
 14280  2310  0008               	return
 14281  2311                     __end_of_dwt_readdevid:	
 14282                           
 14283                           	psect	text33
 14284  26E5                     __ptext33:	
 14285 ;; *************** function __dwt_prog_ldo_and_bias_tune *****************
 14286 ;; Defined at:
 14287 ;;		line 696 in file "deca_device.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;		None
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      void 
 14294 ;; Registers used:
 14295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/0
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14304 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14305 ;;Total ram usage:        2 bytes
 14306 ;; Hardware stack levels used:    1
 14307 ;; Hardware stack levels required when called:    7
 14308 ;; This function calls:
 14309 ;;		_dwt_modify16bitoffsetreg
 14310 ;; This function is called by:
 14311 ;;		_dwt_initialise
 14312 ;;		_dwt_restoreconfig
 14313 ;; This function uses a non-reentrant model
 14314 ;;
 14315                           
 14316                           
 14317                           ;psect for function __dwt_prog_ldo_and_bias_tune
 14318  26E5                     __dwt_prog_ldo_and_bias_tune:	
 14319                           
 14320                           ;deca_device.c: 698: dwt_modify16bitoffsetreg(0xb0008, 0, -1, (0x180u));
 14321                           
 14322                           ;incstack = 0
 14323                           ; Regs used in __dwt_prog_ldo_and_bias_tune: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14324  26E5  3000               	movlw	0
 14325  26E6  0141               	movlb	1	; select bank1
 14326  26E7  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 14327  26E8  300B               	movlw	11
 14328  26E9  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 14329  26EA  3000               	movlw	0
 14330  26EB  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 14331  26EC  3008               	movlw	8
 14332  26ED  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 14333  26EE  3000               	movlw	0
 14334  26EF  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 14335  26F0  3000               	movlw	0
 14336  26F1  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 14337  26F2  3000               	movlw	0
 14338  26F3  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 14339  26F4  3000               	movlw	0
 14340  26F5  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 14341  26F6  30FF               	movlw	255
 14342  26F7  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 14343  26F8  30FF               	movlw	255
 14344  26F9  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 14345  26FA  3080               	movlw	128
 14346  26FB  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 14347  26FC  3001               	movlw	1
 14348  26FD  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 14349  26FE  31A6  26A2  31A6   	fcall	_dwt_modify16bitoffsetreg
 14350                           
 14351                           ;deca_device.c: 699: dwt_modify16bitoffsetreg(0x11001f,0,(uint16_t)~0x1fU,pdw3000local->
      +                          bias_tune);
 14352  2701  3000               	movlw	0
 14353  2702  0141               	movlb	1	; select bank1
 14354  2703  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 14355  2704  3011               	movlw	17
 14356  2705  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 14357  2706  3000               	movlw	0
 14358  2707  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 14359  2708  301F               	movlw	31
 14360  2709  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 14361  270A  3000               	movlw	0
 14362  270B  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 14363  270C  3000               	movlw	0
 14364  270D  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 14365  270E  3000               	movlw	0
 14366  270F  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 14367  2710  3000               	movlw	0
 14368  2711  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 14369  2712  30E0               	movlw	224
 14370  2713  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 14371  2714  30FF               	movlw	255
 14372  2715  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 14373  2716  086F               	movf	_pdw3000local^(0+128),w
 14374  2717  3E08               	addlw	8
 14375  2718  0086               	movwf	6
 14376  2719  3002               	movlw	2	; select bank4/5
 14377  271A  0087               	movwf	7
 14378  271B  0801               	movf	1,w
 14379  271C  0140               	movlb	0	; select bank0
 14380  271D  00ED               	movwf	??__dwt_prog_ldo_and_bias_tune
 14381  271E  01EE               	clrf	??__dwt_prog_ldo_and_bias_tune+1
 14382  271F  086D               	movf	??__dwt_prog_ldo_and_bias_tune,w
 14383  2720  0141               	movlb	1	; select bank1
 14384  2721  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 14385  2722  0140               	movlb	0	; select bank0
 14386  2723  086E               	movf	??__dwt_prog_ldo_and_bias_tune+1,w
 14387  2724  0141               	movlb	1	; select bank1
 14388  2725  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 14389  2726  31A6  26A2         	fcall	_dwt_modify16bitoffsetreg
 14390  2728  0008               	return
 14391  2729                     __end_of__dwt_prog_ldo_and_bias_tune:	
 14392                           
 14393                           	psect	text34
 14394  1D5D                     __ptext34:	
 14395 ;; *************** function __dwt_otpread *****************
 14396 ;; Defined at:
 14397 ;;		line 2724 in file "deca_device.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;  address         2   29[BANK1 ] unsigned int 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;  ret_data        4   33[BANK1 ] unsigned long 
 14402 ;; Return value:  Size  Location     Type
 14403 ;;                  4   29[BANK1 ] unsigned long 
 14404 ;; Registers used:
 14405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14406 ;; Tracked objects:
 14407 ;;		On entry : 0/0
 14408 ;;		On exit  : 0/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14411 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14412 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14414 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14415 ;;Total ram usage:        8 bytes
 14416 ;; Hardware stack levels used:    1
 14417 ;; Hardware stack levels required when called:    8
 14418 ;; This function calls:
 14419 ;;		_dwt_read32bitoffsetreg
 14420 ;;		_dwt_write16bitoffsetreg
 14421 ;; This function is called by:
 14422 ;;		_dwt_initialise
 14423 ;;		_dwt_otpread
 14424 ;;		_dwt_otpwriteandverify
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           
 14429                           ;psect for function __dwt_otpread
 14430  1D5D                     __dwt_otpread:	
 14431                           
 14432                           ;deca_device.c: 2726: uint32_t ret_data = 0;
 14433                           
 14434                           ;incstack = 0
 14435                           ; Regs used in __dwt_otpread: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14436  1D5D  3000               	movlw	0
 14437  1D5E  0141               	movlb	1	; select bank1
 14438  1D5F  00C4               	movwf	(__dwt_otpread@ret_data+3)^(0+128)
 14439  1D60  3000               	movlw	0
 14440  1D61  00C3               	movwf	(__dwt_otpread@ret_data+2)^(0+128)
 14441  1D62  3000               	movlw	0
 14442  1D63  00C2               	movwf	(__dwt_otpread@ret_data+1)^(0+128)
 14443  1D64  3000               	movlw	0
 14444  1D65  00C1               	movwf	__dwt_otpread@ret_data^(0+128)
 14445                           
 14446                           ;deca_device.c: 2729: dwt_write16bitoffsetreg(0xb0008, 0, 0x0001);
 14447  1D66  3000               	movlw	0
 14448  1D67  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 14449  1D68  300B               	movlw	11
 14450  1D69  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 14451  1D6A  3000               	movlw	0
 14452  1D6B  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 14453  1D6C  3008               	movlw	8
 14454  1D6D  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 14455  1D6E  3000               	movlw	0
 14456  1D6F  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 14457  1D70  3000               	movlw	0
 14458  1D71  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 14459  1D72  3000               	movlw	0
 14460  1D73  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 14461  1D74  3000               	movlw	0
 14462  1D75  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 14463  1D76  3001               	movlw	1
 14464  1D77  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 14465  1D78  3000               	movlw	0
 14466  1D79  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 14467  1D7A  31A3  23CF  319D   	fcall	_dwt_write16bitoffsetreg
 14468                           
 14469                           ;deca_device.c: 2731: dwt_write16bitoffsetreg(0xb0004, 0, address);
 14470  1D7D  3000               	movlw	0
 14471  1D7E  0141               	movlb	1	; select bank1
 14472  1D7F  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 14473  1D80  300B               	movlw	11
 14474  1D81  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 14475  1D82  3000               	movlw	0
 14476  1D83  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 14477  1D84  3004               	movlw	4
 14478  1D85  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 14479  1D86  3000               	movlw	0
 14480  1D87  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 14481  1D88  3000               	movlw	0
 14482  1D89  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 14483  1D8A  3000               	movlw	0
 14484  1D8B  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 14485  1D8C  3000               	movlw	0
 14486  1D8D  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 14487  1D8E  083E               	movf	(__dwt_otpread@address+1)^(0+128),w
 14488  1D8F  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 14489  1D90  083D               	movf	__dwt_otpread@address^(0+128),w
 14490  1D91  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 14491  1D92  31A3  23CF  319D   	fcall	_dwt_write16bitoffsetreg
 14492                           
 14493                           ;deca_device.c: 2733: dwt_write16bitoffsetreg(0xb0008, 0, 0x0002);
 14494  1D95  3000               	movlw	0
 14495  1D96  0141               	movlb	1	; select bank1
 14496  1D97  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 14497  1D98  300B               	movlw	11
 14498  1D99  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 14499  1D9A  3000               	movlw	0
 14500  1D9B  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 14501  1D9C  3008               	movlw	8
 14502  1D9D  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 14503  1D9E  3000               	movlw	0
 14504  1D9F  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 14505  1DA0  3000               	movlw	0
 14506  1DA1  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 14507  1DA2  3000               	movlw	0
 14508  1DA3  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 14509  1DA4  3000               	movlw	0
 14510  1DA5  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 14511  1DA6  3002               	movlw	2
 14512  1DA7  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 14513  1DA8  3000               	movlw	0
 14514  1DA9  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 14515  1DAA  31A3  23CF  319D   	fcall	_dwt_write16bitoffsetreg
 14516                           
 14517                           ;deca_device.c: 2735: ret_data = dwt_read32bitoffsetreg(0xb0010, 0);
 14518  1DAD  3000               	movlw	0
 14519  1DAE  0140               	movlb	0	; select bank0
 14520  1DAF  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 14521  1DB0  300B               	movlw	11
 14522  1DB1  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 14523  1DB2  3000               	movlw	0
 14524  1DB3  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 14525  1DB4  3010               	movlw	16
 14526  1DB5  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 14527  1DB6  3000               	movlw	0
 14528  1DB7  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 14529  1DB8  3000               	movlw	0
 14530  1DB9  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 14531  1DBA  3000               	movlw	0
 14532  1DBB  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 14533  1DBC  3000               	movlw	0
 14534  1DBD  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 14535  1DBE  319C  246C         	fcall	_dwt_read32bitoffsetreg
 14536  1DC0  0140               	movlb	0	; select bank0
 14537  1DC1  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 14538  1DC2  0141               	movlb	1	; select bank1
 14539  1DC3  00C4               	movwf	(__dwt_otpread@ret_data+3)^(0+128)
 14540  1DC4  0140               	movlb	0	; select bank0
 14541  1DC5  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 14542  1DC6  0141               	movlb	1	; select bank1
 14543  1DC7  00C3               	movwf	(__dwt_otpread@ret_data+2)^(0+128)
 14544  1DC8  0140               	movlb	0	; select bank0
 14545  1DC9  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 14546  1DCA  0141               	movlb	1	; select bank1
 14547  1DCB  00C2               	movwf	(__dwt_otpread@ret_data+1)^(0+128)
 14548  1DCC  0140               	movlb	0	; select bank0
 14549  1DCD  0868               	movf	?_dwt_read32bitoffsetreg,w
 14550  1DCE  0141               	movlb	1	; select bank1
 14551  1DCF  00C1               	movwf	__dwt_otpread@ret_data^(0+128)
 14552                           
 14553                           ;deca_device.c: 2738: return ret_data;
 14554  1DD0  0844               	movf	(__dwt_otpread@ret_data+3)^(0+128),w
 14555  1DD1  00C0               	movwf	(?__dwt_otpread+3)^(0+128)
 14556  1DD2  0843               	movf	(__dwt_otpread@ret_data+2)^(0+128),w
 14557  1DD3  00BF               	movwf	(?__dwt_otpread+2)^(0+128)
 14558  1DD4  0842               	movf	(__dwt_otpread@ret_data+1)^(0+128),w
 14559  1DD5  00BE               	movwf	(?__dwt_otpread+1)^(0+128)
 14560  1DD6  0841               	movf	__dwt_otpread@ret_data^(0+128),w
 14561  1DD7  00BD               	movwf	?__dwt_otpread^(0+128)
 14562  1DD8  0008               	return
 14563  1DD9                     __end_of__dwt_otpread:	
 14564                           
 14565                           	psect	text35
 14566  1CE1                     __ptext35:	
 14567 ;; *************** function _dwt_configuretxrf *****************
 14568 ;; Defined at:
 14569 ;;		line 1099 in file "deca_device.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;  config          1    wreg     PTR struct .
 14572 ;;		 -> txconfig_options_ch9(7), 
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;  config          1   38[BANK1 ] PTR struct .
 14575 ;;		 -> txconfig_options_ch9(7), 
 14576 ;;  channel         1   37[BANK1 ] unsigned char 
 14577 ;; Return value:  Size  Location     Type
 14578 ;;                  1    wreg      void 
 14579 ;; Registers used:
 14580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14587 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14588 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14589 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14590 ;;Total ram usage:        4 bytes
 14591 ;; Hardware stack levels used:    1
 14592 ;; Hardware stack levels required when called:   10
 14593 ;; This function calls:
 14594 ;;		_dwt_calcbandwidthadj
 14595 ;;		_dwt_read8bitoffsetreg
 14596 ;;		_dwt_write32bitoffsetreg
 14597 ;;		_dwt_write8bitoffsetreg
 14598 ;; This function is called by:
 14599 ;;		_dw_main
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           
 14604                           ;psect for function _dwt_configuretxrf
 14605  1CE1                     _dwt_configuretxrf:	
 14606                           
 14607                           ;incstack = 0
 14608                           ; Regs used in _dwt_configuretxrf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14609                           ;dwt_configuretxrf@config stored from wreg
 14610  1CE1  0141               	movlb	1	; select bank1
 14611  1CE2  00C6               	movwf	dwt_configuretxrf@config^(0+128)
 14612                           
 14613                           ;deca_device.c: 1101: if (config->PGcount == 0) {
 14614  1CE3  0846               	movf	dwt_configuretxrf@config^(0+128),w
 14615  1CE4  3E05               	addlw	5
 14616  1CE5  0086               	movwf	6
 14617  1CE6  3001               	movlw	1	; select bank2/3
 14618  1CE7  0087               	movwf	7
 14619  1CE8  0016               	moviw fsr1++
 14620  1CE9  0401               	iorwf	1,w
 14621  1CEA  1D03               	btfss	3,2
 14622  1CEB  2D08               	goto	l6339
 14623                           
 14624                           ;deca_device.c: 1103: dwt_write8bitoffsetreg(0x7001c, 0, config->PGdly);
 14625  1CEC  3000               	movlw	0
 14626  1CED  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 14627  1CEE  3007               	movlw	7
 14628  1CEF  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 14629  1CF0  3000               	movlw	0
 14630  1CF1  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 14631  1CF2  301C               	movlw	28
 14632  1CF3  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 14633  1CF4  3000               	movlw	0
 14634  1CF5  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 14635  1CF6  3000               	movlw	0
 14636  1CF7  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 14637  1CF8  3000               	movlw	0
 14638  1CF9  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 14639  1CFA  3000               	movlw	0
 14640  1CFB  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 14641  1CFC  0846               	movf	dwt_configuretxrf@config^(0+128),w
 14642  1CFD  0086               	movwf	6
 14643  1CFE  3001               	movlw	1	; select bank2/3
 14644  1CFF  0087               	movwf	7
 14645  1D00  0801               	movf	1,w
 14646  1D01  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 14647  1D02  0843               	movf	??_dwt_configuretxrf^(0+128),w
 14648  1D03  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 14649  1D04  31A2  2207  319C   	fcall	_dwt_write8bitoffsetreg
 14650                           
 14651                           ;deca_device.c: 1104: }
 14652  1D07  2D3D               	goto	l6347
 14653  1D08                     l6339:	
 14654                           
 14655                           ;deca_device.c: 1105: else
 14656                           ;deca_device.c: 1106: {
 14657                           ;deca_device.c: 1107: uint8_t channel = 5;
 14658  1D08  3005               	movlw	5
 14659  1D09  0141               	movlb	1	; select bank1
 14660  1D0A  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 14661  1D0B  0843               	movf	??_dwt_configuretxrf^(0+128),w
 14662  1D0C  00C5               	movwf	dwt_configuretxrf@channel^(0+128)
 14663                           
 14664                           ;deca_device.c: 1108: if (dwt_read8bitoffsetreg(0x10014, 0) & 0x1)
 14665  1D0D  3000               	movlw	0
 14666  1D0E  0140               	movlb	0	; select bank0
 14667  1D0F  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 14668  1D10  3001               	movlw	1
 14669  1D11  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 14670  1D12  3000               	movlw	0
 14671  1D13  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 14672  1D14  3014               	movlw	20
 14673  1D15  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 14674  1D16  3000               	movlw	0
 14675  1D17  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 14676  1D18  3000               	movlw	0
 14677  1D19  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 14678  1D1A  3000               	movlw	0
 14679  1D1B  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 14680  1D1C  3000               	movlw	0
 14681  1D1D  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 14682  1D1E  31A2  22CC  319C   	fcall	_dwt_read8bitoffsetreg
 14683  1D21  3901               	andlw	1
 14684  1D22  1903               	btfsc	3,2
 14685  1D23  2D29               	goto	l6345
 14686                           
 14687                           ;deca_device.c: 1109: {
 14688                           ;deca_device.c: 1110: channel = 9;
 14689  1D24  3009               	movlw	9
 14690  1D25  0141               	movlb	1	; select bank1
 14691  1D26  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 14692  1D27  0843               	movf	??_dwt_configuretxrf^(0+128),w
 14693  1D28  00C5               	movwf	dwt_configuretxrf@channel^(0+128)
 14694  1D29                     l6345:	
 14695                           
 14696                           ;deca_device.c: 1111: }
 14697                           ;deca_device.c: 1112: dwt_calcbandwidthadj(config->PGcount, channel);
 14698  1D29  0141               	movlb	1	; select bank1
 14699  1D2A  0846               	movf	dwt_configuretxrf@config^(0+128),w
 14700  1D2B  3E05               	addlw	5
 14701  1D2C  0086               	movwf	6
 14702  1D2D  3001               	movlw	1	; select bank2/3
 14703  1D2E  0087               	movwf	7
 14704  1D2F  3F40               	moviw [0]fsr1
 14705  1D30  00BD               	movwf	dwt_calcbandwidthadj@target_count^(0+128)
 14706  1D31  3F41               	moviw [1]fsr1
 14707  1D32  00BE               	movwf	(dwt_calcbandwidthadj@target_count+1)^(0+128)
 14708  1D33  0845               	movf	dwt_configuretxrf@channel^(0+128),w
 14709  1D34  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 14710  1D35  01C4               	clrf	(??_dwt_configuretxrf^(0+128)+1)
 14711  1D36  0843               	movf	??_dwt_configuretxrf^(0+128),w
 14712  1D37  00BF               	movwf	dwt_calcbandwidthadj@channel^(0+128)
 14713  1D38  0844               	movf	(??_dwt_configuretxrf+1)^(0+128),w
 14714  1D39  00C0               	movwf	(dwt_calcbandwidthadj@channel+1)^(0+128)
 14715  1D3A  319F  276D  319C   	fcall	_dwt_calcbandwidthadj
 14716  1D3D                     l6347:	
 14717                           
 14718                           ;deca_device.c: 1113: }
 14719                           ;deca_device.c: 1116: dwt_write32bitoffsetreg(0x1000c,0,config->power);
 14720  1D3D  3000               	movlw	0
 14721  1D3E  0141               	movlb	1	; select bank1
 14722  1D3F  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 14723  1D40  3001               	movlw	1
 14724  1D41  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 14725  1D42  3000               	movlw	0
 14726  1D43  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 14727  1D44  300C               	movlw	12
 14728  1D45  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 14729  1D46  3000               	movlw	0
 14730  1D47  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 14731  1D48  3000               	movlw	0
 14732  1D49  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 14733  1D4A  3000               	movlw	0
 14734  1D4B  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 14735  1D4C  3000               	movlw	0
 14736  1D4D  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 14737  1D4E  0A46               	incf	dwt_configuretxrf@config^(0+128),w
 14738  1D4F  0086               	movwf	6
 14739  1D50  3001               	movlw	1	; select bank2/3
 14740  1D51  0087               	movwf	7
 14741  1D52  3F40               	moviw [0]fsr1
 14742  1D53  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 14743  1D54  3F41               	moviw [1]fsr1
 14744  1D55  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 14745  1D56  3F42               	moviw [2]fsr1
 14746  1D57  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 14747  1D58  3F43               	moviw [3]fsr1
 14748  1D59  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 14749  1D5A  31A7  27B4         	fcall	_dwt_write32bitoffsetreg
 14750  1D5C  0008               	return
 14751  1D5D                     __end_of_dwt_configuretxrf:	
 14752                           
 14753                           	psect	text36
 14754  1F6D                     __ptext36:	
 14755 ;; *************** function _dwt_calcbandwidthadj *****************
 14756 ;; Defined at:
 14757 ;;		line 4478 in file "deca_device.c"
 14758 ;; Parameters:    Size  Location     Type
 14759 ;;  target_count    2   29[BANK1 ] unsigned int 
 14760 ;;  channel         2   31[BANK1 ] int 
 14761 ;; Auto vars:     Size  Location     Type
 14762 ;;		None
 14763 ;; Return value:  Size  Location     Type
 14764 ;;                  1    wreg      unsigned char 
 14765 ;; Registers used:
 14766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14767 ;; Tracked objects:
 14768 ;;		On entry : 0/0
 14769 ;;		On exit  : 0/0
 14770 ;;		Unchanged: 0/0
 14771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14772 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14774 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14775 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14776 ;;Total ram usage:        6 bytes
 14777 ;; Hardware stack levels used:    1
 14778 ;; Hardware stack levels required when called:    9
 14779 ;; This function calls:
 14780 ;;		_dwt_disable_rf_tx
 14781 ;;		_dwt_disable_rftx_blocks
 14782 ;;		_dwt_enable_rf_tx
 14783 ;;		_dwt_enable_rftx_blocks
 14784 ;;		_dwt_force_clocks
 14785 ;;		_dwt_modify8bitoffsetreg
 14786 ;;		_dwt_read8bitoffsetreg
 14787 ;;		_dwt_write16bitoffsetreg
 14788 ;; This function is called by:
 14789 ;;		_dwt_configuretxrf
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           
 14794                           ;psect for function _dwt_calcbandwidthadj
 14795  1F6D                     _dwt_calcbandwidthadj:	
 14796                           
 14797                           ;deca_device.c: 4481: dwt_force_clocks((1));
 14798                           
 14799                           ;incstack = 0
 14800                           ; Regs used in _dwt_calcbandwidthadj: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14801  1F6D  3001               	movlw	1
 14802  1F6E  0140               	movlb	0	; select bank0
 14803  1F6F  00EB               	movwf	dwt_force_clocks@clocks
 14804  1F70  3000               	movlw	0
 14805  1F71  00EC               	movwf	dwt_force_clocks@clocks+1
 14806  1F72  31A7  2729  319F   	fcall	_dwt_force_clocks
 14807                           
 14808                           ;deca_device.c: 4482: dwt_enable_rf_tx(channel, 0);
 14809  1F75  0141               	movlb	1	; select bank1
 14810  1F76  083F               	movf	dwt_calcbandwidthadj@channel^(0+128),w
 14811  1F77  00B8               	movwf	dwt_enable_rf_tx@channel^(0+128)
 14812  1F78  0840               	movf	(dwt_calcbandwidthadj@channel+1)^(0+128),w
 14813  1F79  00B9               	movwf	(dwt_enable_rf_tx@channel+1)^(0+128)
 14814  1F7A  0D89               	rlf	9,f
 14815  1F7B  3B89               	subwfb	9,f
 14816  1F7C  0989               	comf	9,f
 14817  1F7D  00BA               	movwf	(dwt_enable_rf_tx@channel+2)^(0+128)
 14818  1F7E  00BB               	movwf	(dwt_enable_rf_tx@channel+3)^(0+128)
 14819  1F7F  01BC               	clrf	dwt_enable_rf_tx@switch_control^(0+128)
 14820  1F80  3191  2151  319F   	fcall	_dwt_enable_rf_tx
 14821                           
 14822                           ;deca_device.c: 4483: dwt_enable_rftx_blocks(channel);
 14823  1F83  0141               	movlb	1	; select bank1
 14824  1F84  083F               	movf	dwt_calcbandwidthadj@channel^(0+128),w
 14825  1F85  00B8               	movwf	dwt_enable_rftx_blocks@channel^(0+128)
 14826  1F86  0840               	movf	(dwt_calcbandwidthadj@channel+1)^(0+128),w
 14827  1F87  00B9               	movwf	(dwt_enable_rftx_blocks@channel+1)^(0+128)
 14828  1F88  0D89               	rlf	9,f
 14829  1F89  3B89               	subwfb	9,f
 14830  1F8A  0989               	comf	9,f
 14831  1F8B  00BA               	movwf	(dwt_enable_rftx_blocks@channel+2)^(0+128)
 14832  1F8C  00BB               	movwf	(dwt_enable_rftx_blocks@channel+3)^(0+128)
 14833  1F8D  3199  21C2  319F   	fcall	_dwt_enable_rftx_blocks
 14834                           
 14835                           ;deca_device.c: 4486: dwt_write16bitoffsetreg(0x8001c, 0x0, target_count & 0xfffU);
 14836  1F90  3000               	movlw	0
 14837  1F91  0141               	movlb	1	; select bank1
 14838  1F92  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 14839  1F93  3008               	movlw	8
 14840  1F94  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 14841  1F95  3000               	movlw	0
 14842  1F96  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 14843  1F97  301C               	movlw	28
 14844  1F98  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 14845  1F99  3000               	movlw	0
 14846  1F9A  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 14847  1F9B  3000               	movlw	0
 14848  1F9C  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 14849  1F9D  3000               	movlw	0
 14850  1F9E  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 14851  1F9F  3000               	movlw	0
 14852  1FA0  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 14853  1FA1  30FF               	movlw	255
 14854  1FA2  053D               	andwf	dwt_calcbandwidthadj@target_count^(0+128),w
 14855  1FA3  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 14856  1FA4  300F               	movlw	15
 14857  1FA5  053E               	andwf	(dwt_calcbandwidthadj@target_count+1)^(0+128),w
 14858  1FA6  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 14859  1FA7  31A3  23CF  319F   	fcall	_dwt_write16bitoffsetreg
 14860                           
 14861                           ;deca_device.c: 4488: dwt_modify8bitoffsetreg(0x80010, 0x0, -1, (uint8_t)(0x1U | 0x2U));
 14862  1FAA  3000               	movlw	0
 14863  1FAB  0141               	movlb	1	; select bank1
 14864  1FAC  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 14865  1FAD  3008               	movlw	8
 14866  1FAE  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 14867  1FAF  3000               	movlw	0
 14868  1FB0  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 14869  1FB1  3010               	movlw	16
 14870  1FB2  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 14871  1FB3  3000               	movlw	0
 14872  1FB4  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 14873  1FB5  3000               	movlw	0
 14874  1FB6  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 14875  1FB7  3000               	movlw	0
 14876  1FB8  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 14877  1FB9  3000               	movlw	0
 14878  1FBA  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 14879  1FBB  30FF               	movlw	255
 14880  1FBC  00C1               	movwf	??_dwt_calcbandwidthadj^(0+128)
 14881  1FBD  0841               	movf	??_dwt_calcbandwidthadj^(0+128),w
 14882  1FBE  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 14883  1FBF  3003               	movlw	3
 14884  1FC0  00C2               	movwf	(??_dwt_calcbandwidthadj+1)^(0+128)
 14885  1FC1  0842               	movf	(??_dwt_calcbandwidthadj+1)^(0+128),w
 14886  1FC2  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 14887  1FC3  31A6  262A  319F   	fcall	_dwt_modify8bitoffsetreg
 14888  1FC6                     l5873:	
 14889                           ;deca_device.c: 4490: while (dwt_read8bitoffsetreg(0x80010, 0) & 0x1U);
 14890                           
 14891  1FC6  3000               	movlw	0
 14892  1FC7  0140               	movlb	0	; select bank0
 14893  1FC8  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 14894  1FC9  3008               	movlw	8
 14895  1FCA  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 14896  1FCB  3000               	movlw	0
 14897  1FCC  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 14898  1FCD  3010               	movlw	16
 14899  1FCE  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 14900  1FCF  3000               	movlw	0
 14901  1FD0  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 14902  1FD1  3000               	movlw	0
 14903  1FD2  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 14904  1FD3  3000               	movlw	0
 14905  1FD4  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 14906  1FD5  3000               	movlw	0
 14907  1FD6  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 14908  1FD7  31A2  22CC  319F   	fcall	_dwt_read8bitoffsetreg
 14909  1FDA  3901               	andlw	1
 14910  1FDB  1D03               	btfss	3,2
 14911  1FDC  2FC6               	goto	l5873
 14912                           
 14913                           ;deca_device.c: 4493: dwt_disable_rftx_blocks();
 14914  1FDD  31A2  223F  319F   	fcall	_dwt_disable_rftx_blocks
 14915                           
 14916                           ;deca_device.c: 4494: dwt_disable_rf_tx(0);
 14917  1FE0  3000               	movlw	0
 14918  1FE1  319A  2218  319F   	fcall	_dwt_disable_rf_tx
 14919                           
 14920                           ;deca_device.c: 4495: dwt_force_clocks((5));
 14921  1FE4  3005               	movlw	5
 14922  1FE5  0140               	movlb	0	; select bank0
 14923  1FE6  00EB               	movwf	dwt_force_clocks@clocks
 14924  1FE7  3000               	movlw	0
 14925  1FE8  00EC               	movwf	dwt_force_clocks@clocks+1
 14926  1FE9  31A7  2729  319F   	fcall	_dwt_force_clocks
 14927                           
 14928                           ;deca_device.c: 4497: return (dwt_read8bitoffsetreg(0x7001c, 0) & 0x3fU);
 14929                           ;	Return value of _dwt_calcbandwidthadj is never used
 14930  1FEC  3000               	movlw	0
 14931  1FED  0140               	movlb	0	; select bank0
 14932  1FEE  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 14933  1FEF  3007               	movlw	7
 14934  1FF0  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 14935  1FF1  3000               	movlw	0
 14936  1FF2  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 14937  1FF3  301C               	movlw	28
 14938  1FF4  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 14939  1FF5  3000               	movlw	0
 14940  1FF6  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 14941  1FF7  3000               	movlw	0
 14942  1FF8  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 14943  1FF9  3000               	movlw	0
 14944  1FFA  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 14945  1FFB  3000               	movlw	0
 14946  1FFC  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 14947  1FFD  31A2  22CC         	fcall	_dwt_read8bitoffsetreg
 14948  1FFF  0008               	return
 14949  2000                     __end_of_dwt_calcbandwidthadj:	
 14950                           
 14951                           	psect	text37
 14952  19C2                     __ptext37:	
 14953 ;; *************** function _dwt_enable_rftx_blocks *****************
 14954 ;; Defined at:
 14955 ;;		line 4262 in file "deca_device.c"
 14956 ;; Parameters:    Size  Location     Type
 14957 ;;  channel         4   24[BANK1 ] unsigned long 
 14958 ;; Auto vars:     Size  Location     Type
 14959 ;;		None
 14960 ;; Return value:  Size  Location     Type
 14961 ;;                  1    wreg      void 
 14962 ;; Registers used:
 14963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14964 ;; Tracked objects:
 14965 ;;		On entry : 0/0
 14966 ;;		On exit  : 0/0
 14967 ;;		Unchanged: 0/0
 14968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14969 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14972 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14973 ;;Total ram usage:        4 bytes
 14974 ;; Hardware stack levels used:    1
 14975 ;; Hardware stack levels required when called:    7
 14976 ;; This function calls:
 14977 ;;		_dwt_modify32bitoffsetreg
 14978 ;; This function is called by:
 14979 ;;		_dwt_calcbandwidthadj
 14980 ;;		_dwt_configcwmode
 14981 ;;		_dwt_configcontinuousframemode
 14982 ;;		_dwt_calcpgcount
 14983 ;; This function uses a non-reentrant model
 14984 ;;
 14985                           
 14986                           
 14987                           ;psect for function _dwt_enable_rftx_blocks
 14988  19C2                     _dwt_enable_rftx_blocks:	
 14989                           
 14990                           ;deca_device.c: 4264: if (channel == (5))
 14991                           
 14992                           ;incstack = 0
 14993                           ; Regs used in _dwt_enable_rftx_blocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14994  19C2  3005               	movlw	5
 14995  19C3  0141               	movlb	1	; select bank1
 14996  19C4  0638               	xorwf	dwt_enable_rftx_blocks@channel^(0+128),w
 14997  19C5  0439               	iorwf	(dwt_enable_rftx_blocks@channel+1)^(0+128),w
 14998  19C6  043A               	iorwf	(dwt_enable_rftx_blocks@channel+2)^(0+128),w
 14999  19C7  043B               	iorwf	(dwt_enable_rftx_blocks@channel+3)^(0+128),w
 15000  19C8  1D03               	btfss	3,2
 15001  19C9  29ED               	goto	l5721
 15002                           
 15003                           ;deca_device.c: 4265: {
 15004                           ;deca_device.c: 4266: dwt_modify32bitoffsetreg(0x70004, 0, -1, (0x2000000UL | 0x2000U | 
      +                          0x1000U | 0x800U | 0x400U));
 15005  19CA  3000               	movlw	0
 15006  19CB  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 15007  19CC  3007               	movlw	7
 15008  19CD  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 15009  19CE  3000               	movlw	0
 15010  19CF  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 15011  19D0  3004               	movlw	4
 15012  19D1  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 15013  19D2  3000               	movlw	0
 15014  19D3  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 15015  19D4  3000               	movlw	0
 15016  19D5  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 15017  19D6  3000               	movlw	0
 15018  19D7  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 15019  19D8  3000               	movlw	0
 15020  19D9  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 15021  19DA  30FF               	movlw	255
 15022  19DB  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 15023  19DC  30FF               	movlw	255
 15024  19DD  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 15025  19DE  30FF               	movlw	255
 15026  19DF  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 15027  19E0  30FF               	movlw	255
 15028  19E1  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 15029  19E2  3002               	movlw	2
 15030  19E3  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 15031  19E4  3000               	movlw	0
 15032  19E5  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 15033  19E6  303C               	movlw	60
 15034  19E7  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 15035  19E8  3000               	movlw	0
 15036  19E9  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 15037  19EA  3192  22B6         	fcall	_dwt_modify32bitoffsetreg
 15038                           
 15039                           ;deca_device.c: 4269: }
 15040  19EC  0008               	return
 15041  19ED                     l5721:	
 15042                           
 15043                           ;deca_device.c: 4270: else if (channel == (9))
 15044  19ED  3009               	movlw	9
 15045  19EE  0141               	movlb	1	; select bank1
 15046  19EF  0638               	xorwf	dwt_enable_rftx_blocks@channel^(0+128),w
 15047  19F0  0439               	iorwf	(dwt_enable_rftx_blocks@channel+1)^(0+128),w
 15048  19F1  043A               	iorwf	(dwt_enable_rftx_blocks@channel+2)^(0+128),w
 15049  19F2  043B               	iorwf	(dwt_enable_rftx_blocks@channel+3)^(0+128),w
 15050  19F3  1D03               	btfss	3,2
 15051  19F4  0008               	return
 15052                           
 15053                           ;deca_device.c: 4271: {
 15054                           ;deca_device.c: 4272: dwt_modify32bitoffsetreg(0x70004, 0, -1, (0x2000000UL | 0x1000U | 
      +                          0x800U | 0x400U));
 15055  19F5  3000               	movlw	0
 15056  19F6  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 15057  19F7  3007               	movlw	7
 15058  19F8  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 15059  19F9  3000               	movlw	0
 15060  19FA  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 15061  19FB  3004               	movlw	4
 15062  19FC  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 15063  19FD  3000               	movlw	0
 15064  19FE  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 15065  19FF  3000               	movlw	0
 15066  1A00  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 15067  1A01  3000               	movlw	0
 15068  1A02  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 15069  1A03  3000               	movlw	0
 15070  1A04  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 15071  1A05  30FF               	movlw	255
 15072  1A06  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 15073  1A07  30FF               	movlw	255
 15074  1A08  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 15075  1A09  30FF               	movlw	255
 15076  1A0A  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 15077  1A0B  30FF               	movlw	255
 15078  1A0C  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 15079  1A0D  3002               	movlw	2
 15080  1A0E  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 15081  1A0F  3000               	movlw	0
 15082  1A10  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 15083  1A11  301C               	movlw	28
 15084  1A12  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 15085  1A13  3000               	movlw	0
 15086  1A14  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 15087  1A15  3192  22B6         	fcall	_dwt_modify32bitoffsetreg
 15088  1A17  0008               	return
 15089  1A18                     __end_of_dwt_enable_rftx_blocks:	
 15090                           
 15091                           	psect	text38
 15092  1151                     __ptext38:	
 15093 ;; *************** function _dwt_enable_rf_tx *****************
 15094 ;; Defined at:
 15095 ;;		line 4169 in file "deca_device.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;  channel         4   24[BANK1 ] unsigned long 
 15098 ;;  switch_contr    1   28[BANK1 ] unsigned char 
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;		None
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  1    wreg      void 
 15103 ;; Registers used:
 15104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/0
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15110 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15113 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15114 ;;Total ram usage:        5 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:    8
 15117 ;; This function calls:
 15118 ;;		_dwt_modify32bitoffsetreg
 15119 ;;		_dwt_write32bitoffsetreg
 15120 ;; This function is called by:
 15121 ;;		_dwt_calcbandwidthadj
 15122 ;;		_dwt_configcwmode
 15123 ;;		_dwt_configcontinuousframemode
 15124 ;;		_dwt_calcpgcount
 15125 ;; This function uses a non-reentrant model
 15126 ;;
 15127                           
 15128                           
 15129                           ;psect for function _dwt_enable_rf_tx
 15130  1151                     _dwt_enable_rf_tx:	
 15131                           
 15132                           ;deca_device.c: 4172: dwt_modify32bitoffsetreg(0x70048, 0, -1, (0x8000000UL | 0x800U));
 15133                           
 15134                           ;incstack = 0
 15135                           ; Regs used in _dwt_enable_rf_tx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15136  1151  3000               	movlw	0
 15137  1152  0141               	movlb	1	; select bank1
 15138  1153  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 15139  1154  3007               	movlw	7
 15140  1155  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 15141  1156  3000               	movlw	0
 15142  1157  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 15143  1158  3048               	movlw	72
 15144  1159  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 15145  115A  3000               	movlw	0
 15146  115B  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 15147  115C  3000               	movlw	0
 15148  115D  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 15149  115E  3000               	movlw	0
 15150  115F  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 15151  1160  3000               	movlw	0
 15152  1161  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 15153  1162  30FF               	movlw	255
 15154  1163  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 15155  1164  30FF               	movlw	255
 15156  1165  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 15157  1166  30FF               	movlw	255
 15158  1167  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 15159  1168  30FF               	movlw	255
 15160  1169  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 15161  116A  3008               	movlw	8
 15162  116B  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 15163  116C  3000               	movlw	0
 15164  116D  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 15165  116E  3008               	movlw	8
 15166  116F  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 15167  1170  3000               	movlw	0
 15168  1171  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 15169  1172  3192  22B6  3191   	fcall	_dwt_modify32bitoffsetreg
 15170                           
 15171                           ;deca_device.c: 4174: dwt_modify32bitoffsetreg(0x70048, 0, -1, (0x400000UL | 0x200000UL 
      +                          | 0x40U | 0x20U));
 15172  1175  3000               	movlw	0
 15173  1176  0141               	movlb	1	; select bank1
 15174  1177  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 15175  1178  3007               	movlw	7
 15176  1179  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 15177  117A  3000               	movlw	0
 15178  117B  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 15179  117C  3048               	movlw	72
 15180  117D  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 15181  117E  3000               	movlw	0
 15182  117F  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 15183  1180  3000               	movlw	0
 15184  1181  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 15185  1182  3000               	movlw	0
 15186  1183  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 15187  1184  3000               	movlw	0
 15188  1185  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 15189  1186  30FF               	movlw	255
 15190  1187  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 15191  1188  30FF               	movlw	255
 15192  1189  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 15193  118A  30FF               	movlw	255
 15194  118B  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 15195  118C  30FF               	movlw	255
 15196  118D  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 15197  118E  3000               	movlw	0
 15198  118F  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 15199  1190  3060               	movlw	96
 15200  1191  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 15201  1192  3000               	movlw	0
 15202  1193  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 15203  1194  3060               	movlw	96
 15204  1195  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 15205  1196  3192  22B6  3191   	fcall	_dwt_modify32bitoffsetreg
 15206                           
 15207                           ;deca_device.c: 4180: if (channel == (5))
 15208  1199  3005               	movlw	5
 15209  119A  0141               	movlb	1	; select bank1
 15210  119B  0638               	xorwf	dwt_enable_rf_tx@channel^(0+128),w
 15211  119C  0439               	iorwf	(dwt_enable_rf_tx@channel+1)^(0+128),w
 15212  119D  043A               	iorwf	(dwt_enable_rf_tx@channel+2)^(0+128),w
 15213  119E  043B               	iorwf	(dwt_enable_rf_tx@channel+3)^(0+128),w
 15214  119F  1D03               	btfss	3,2
 15215  11A0  29BF               	goto	l5711
 15216                           
 15217                           ;deca_device.c: 4181: {
 15218                           ;deca_device.c: 4182: dwt_modify32bitoffsetreg(0x70000, 0, -1, (0x2000000UL | 0x2000U | 
      +                          0x1000U | 0x800U | 0x400U));
 15219  11A1  3000               	movlw	0
 15220  11A2  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 15221  11A3  3007               	movlw	7
 15222  11A4  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 15223  11A5  3000               	movlw	0
 15224  11A6  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 15225  11A7  3000               	movlw	0
 15226  11A8  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 15227  11A9  3000               	movlw	0
 15228  11AA  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 15229  11AB  3000               	movlw	0
 15230  11AC  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 15231  11AD  3000               	movlw	0
 15232  11AE  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 15233  11AF  3000               	movlw	0
 15234  11B0  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 15235  11B1  30FF               	movlw	255
 15236  11B2  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 15237  11B3  30FF               	movlw	255
 15238  11B4  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 15239  11B5  30FF               	movlw	255
 15240  11B6  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 15241  11B7  30FF               	movlw	255
 15242  11B8  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 15243  11B9  3002               	movlw	2
 15244  11BA  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 15245  11BB  3000               	movlw	0
 15246  11BC  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 15247  11BD  303C               	movlw	60
 15248  11BE  29DD               	goto	L6
 15249  11BF                     l5711:	
 15250                           ;deca_device.c: 4185: }
 15251                           
 15252                           
 15253                           ;deca_device.c: 4186: else
 15254                           ;deca_device.c: 4187: {
 15255                           ;deca_device.c: 4188: dwt_modify32bitoffsetreg(0x70000, 0, -1, (0x2000000UL | 0x1000U | 
      +                          0x800U | 0x400U));
 15256  11BF  3000               	movlw	0
 15257  11C0  0141               	movlb	1	; select bank1
 15258  11C1  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 15259  11C2  3007               	movlw	7
 15260  11C3  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 15261  11C4  3000               	movlw	0
 15262  11C5  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 15263  11C6  3000               	movlw	0
 15264  11C7  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 15265  11C8  3000               	movlw	0
 15266  11C9  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 15267  11CA  3000               	movlw	0
 15268  11CB  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 15269  11CC  3000               	movlw	0
 15270  11CD  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 15271  11CE  3000               	movlw	0
 15272  11CF  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 15273  11D0  30FF               	movlw	255
 15274  11D1  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 15275  11D2  30FF               	movlw	255
 15276  11D3  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 15277  11D4  30FF               	movlw	255
 15278  11D5  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 15279  11D6  30FF               	movlw	255
 15280  11D7  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 15281  11D8  3002               	movlw	2
 15282  11D9  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 15283  11DA  3000               	movlw	0
 15284  11DB  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 15285  11DC  301C               	movlw	28
 15286  11DD                     L6:	
 15287  11DD  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 15288  11DE  3000               	movlw	0
 15289  11DF  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 15290  11E0  3192  22B6  3191   	fcall	_dwt_modify32bitoffsetreg
 15291                           
 15292                           ;deca_device.c: 4191: }
 15293                           ;deca_device.c: 4193: if (switch_control)
 15294  11E3  0141               	movlb	1	; select bank1
 15295  11E4  083C               	movf	dwt_enable_rf_tx@switch_control^(0+128),w
 15296  11E5  1903               	btfsc	3,2
 15297  11E6  0008               	return
 15298                           
 15299                           ;deca_device.c: 4194: {
 15300                           ;deca_device.c: 4196: dwt_write32bitoffsetreg(0x70014, 0x0, 0x01011100);
 15301  11E7  3000               	movlw	0
 15302  11E8  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15303  11E9  3007               	movlw	7
 15304  11EA  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15305  11EB  3000               	movlw	0
 15306  11EC  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15307  11ED  3014               	movlw	20
 15308  11EE  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15309  11EF  3000               	movlw	0
 15310  11F0  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15311  11F1  3000               	movlw	0
 15312  11F2  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15313  11F3  3000               	movlw	0
 15314  11F4  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15315  11F5  3000               	movlw	0
 15316  11F6  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15317  11F7  3001               	movlw	1
 15318  11F8  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15319  11F9  3001               	movlw	1
 15320  11FA  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15321  11FB  3011               	movlw	17
 15322  11FC  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15323  11FD  3000               	movlw	0
 15324  11FE  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15325  11FF  31A7  27B4         	fcall	_dwt_write32bitoffsetreg
 15326  1201  0008               	return
 15327  1202                     __end_of_dwt_enable_rf_tx:	
 15328                           
 15329                           	psect	text39
 15330  223F                     __ptext39:	
 15331 ;; *************** function _dwt_disable_rftx_blocks *****************
 15332 ;; Defined at:
 15333 ;;		line 4290 in file "deca_device.c"
 15334 ;; Parameters:    Size  Location     Type
 15335 ;;		None
 15336 ;; Auto vars:     Size  Location     Type
 15337 ;;		None
 15338 ;; Return value:  Size  Location     Type
 15339 ;;                  1    wreg      void 
 15340 ;; Registers used:
 15341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15342 ;; Tracked objects:
 15343 ;;		On entry : 0/0
 15344 ;;		On exit  : 0/0
 15345 ;;		Unchanged: 0/0
 15346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15351 ;;Total ram usage:        0 bytes
 15352 ;; Hardware stack levels used:    1
 15353 ;; Hardware stack levels required when called:    8
 15354 ;; This function calls:
 15355 ;;		_dwt_write32bitoffsetreg
 15356 ;; This function is called by:
 15357 ;;		_dwt_calcbandwidthadj
 15358 ;;		_dwt_calcpgcount
 15359 ;; This function uses a non-reentrant model
 15360 ;;
 15361                           
 15362                           
 15363                           ;psect for function _dwt_disable_rftx_blocks
 15364  223F                     _dwt_disable_rftx_blocks:	
 15365                           
 15366                           ;deca_device.c: 4292: dwt_write32bitoffsetreg(0x70004, 0, 0x00000000);
 15367                           
 15368                           ;incstack = 0
 15369                           ; Regs used in _dwt_disable_rftx_blocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15370  223F  3000               	movlw	0
 15371  2240  0141               	movlb	1	; select bank1
 15372  2241  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15373  2242  3007               	movlw	7
 15374  2243  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15375  2244  3000               	movlw	0
 15376  2245  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15377  2246  3004               	movlw	4
 15378  2247  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15379  2248  3000               	movlw	0
 15380  2249  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15381  224A  3000               	movlw	0
 15382  224B  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15383  224C  3000               	movlw	0
 15384  224D  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15385  224E  3000               	movlw	0
 15386  224F  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15387  2250  3000               	movlw	0
 15388  2251  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15389  2252  3000               	movlw	0
 15390  2253  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15391  2254  3000               	movlw	0
 15392  2255  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15393  2256  3000               	movlw	0
 15394  2257  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15395  2258  31A7  27B4         	fcall	_dwt_write32bitoffsetreg
 15396  225A  0008               	return
 15397  225B                     __end_of_dwt_disable_rftx_blocks:	
 15398                           
 15399                           	psect	text40
 15400  1A18                     __ptext40:	
 15401 ;; *************** function _dwt_disable_rf_tx *****************
 15402 ;; Defined at:
 15403 ;;		line 4143 in file "deca_device.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;  switch_confi    1    wreg     unsigned char 
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;  switch_confi    1   79[BANK0 ] unsigned char 
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        1 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    8
 15424 ;; This function calls:
 15425 ;;		_dwt_write32bitoffsetreg
 15426 ;; This function is called by:
 15427 ;;		_dwt_calcbandwidthadj
 15428 ;;		_dwt_calcpgcount
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           
 15433                           ;psect for function _dwt_disable_rf_tx
 15434  1A18                     _dwt_disable_rf_tx:	
 15435                           
 15436                           ;incstack = 0
 15437                           ; Regs used in _dwt_disable_rf_tx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15438                           ;dwt_disable_rf_tx@switch_config stored from wreg
 15439  1A18  0140               	movlb	0	; select bank0
 15440  1A19  00EF               	movwf	dwt_disable_rf_tx@switch_config
 15441                           
 15442                           ;deca_device.c: 4146: dwt_write32bitoffsetreg(0x70048, 0, 0x00000000);
 15443  1A1A  3000               	movlw	0
 15444  1A1B  0141               	movlb	1	; select bank1
 15445  1A1C  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15446  1A1D  3007               	movlw	7
 15447  1A1E  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15448  1A1F  3000               	movlw	0
 15449  1A20  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15450  1A21  3048               	movlw	72
 15451  1A22  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15452  1A23  3000               	movlw	0
 15453  1A24  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15454  1A25  3000               	movlw	0
 15455  1A26  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15456  1A27  3000               	movlw	0
 15457  1A28  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15458  1A29  3000               	movlw	0
 15459  1A2A  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15460  1A2B  3000               	movlw	0
 15461  1A2C  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15462  1A2D  3000               	movlw	0
 15463  1A2E  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15464  1A2F  3000               	movlw	0
 15465  1A30  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15466  1A31  3000               	movlw	0
 15467  1A32  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15468  1A33  31A7  27B4  319A   	fcall	_dwt_write32bitoffsetreg
 15469                           
 15470                           ;deca_device.c: 4149: dwt_write32bitoffsetreg(0x70000, 0, 0x00000000);
 15471  1A36  3000               	movlw	0
 15472  1A37  0141               	movlb	1	; select bank1
 15473  1A38  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15474  1A39  3007               	movlw	7
 15475  1A3A  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15476  1A3B  3000               	movlw	0
 15477  1A3C  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15478  1A3D  3000               	movlw	0
 15479  1A3E  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15480  1A3F  3000               	movlw	0
 15481  1A40  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15482  1A41  3000               	movlw	0
 15483  1A42  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15484  1A43  3000               	movlw	0
 15485  1A44  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15486  1A45  3000               	movlw	0
 15487  1A46  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15488  1A47  3000               	movlw	0
 15489  1A48  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15490  1A49  3000               	movlw	0
 15491  1A4A  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15492  1A4B  3000               	movlw	0
 15493  1A4C  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15494  1A4D  3000               	movlw	0
 15495  1A4E  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15496  1A4F  31A7  27B4  319A   	fcall	_dwt_write32bitoffsetreg
 15497                           
 15498                           ;deca_device.c: 4151: if (switch_config)
 15499  1A52  0140               	movlb	0	; select bank0
 15500  1A53  086F               	movf	dwt_disable_rf_tx@switch_config,w
 15501  1A54  1903               	btfsc	3,2
 15502  1A55  0008               	return
 15503                           
 15504                           ;deca_device.c: 4152: {
 15505                           ;deca_device.c: 4154: dwt_write32bitoffsetreg(0x70014, 0x0, 0x1C000000);
 15506  1A56  3000               	movlw	0
 15507  1A57  0141               	movlb	1	; select bank1
 15508  1A58  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15509  1A59  3007               	movlw	7
 15510  1A5A  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15511  1A5B  3000               	movlw	0
 15512  1A5C  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15513  1A5D  3014               	movlw	20
 15514  1A5E  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15515  1A5F  3000               	movlw	0
 15516  1A60  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15517  1A61  3000               	movlw	0
 15518  1A62  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15519  1A63  3000               	movlw	0
 15520  1A64  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15521  1A65  3000               	movlw	0
 15522  1A66  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15523  1A67  301C               	movlw	28
 15524  1A68  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15525  1A69  3000               	movlw	0
 15526  1A6A  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15527  1A6B  3000               	movlw	0
 15528  1A6C  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15529  1A6D  3000               	movlw	0
 15530  1A6E  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15531  1A6F  31A7  27B4         	fcall	_dwt_write32bitoffsetreg
 15532  1A71  0008               	return
 15533  1A72                     __end_of_dwt_disable_rf_tx:	
 15534                           
 15535                           	psect	text41
 15536  0105                     __ptext41:	
 15537 ;; *************** function _dwt_configure *****************
 15538 ;; Defined at:
 15539 ;;		line 1335 in file "deca_device.c"
 15540 ;; Parameters:    Size  Location     Type
 15541 ;;  config          1    wreg     PTR struct .
 15542 ;;		 -> config(14), 
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;  config          1   20[BANK2 ] PTR struct .
 15545 ;;		 -> config(14), 
 15546 ;;  sts_mnth        2    4[BANK2 ] unsigned int 
 15547 ;;  temp            4   10[BANK2 ] unsigned long 
 15548 ;;  preamble_len    2   17[BANK2 ] int 
 15549 ;;  sts_len         2   15[BANK2 ] unsigned int 
 15550 ;;  error           2    2[BANK2 ] int 
 15551 ;;  chan            1   19[BANK2 ] unsigned char 
 15552 ;;  cnt             1   14[BANK2 ] unsigned char 
 15553 ;;  flag            1    8[BANK2 ] unsigned char 
 15554 ;;  mode            1    7[BANK2 ] unsigned char 
 15555 ;;  scp             1    6[BANK2 ] unsigned char 
 15556 ;; Return value:  Size  Location     Type
 15557 ;;                  2   54[BANK1 ] int 
 15558 ;; Registers used:
 15559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15560 ;; Tracked objects:
 15561 ;;		On entry : 0/0
 15562 ;;		On exit  : 0/0
 15563 ;;		Unchanged: 0/0
 15564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15565 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15566 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15567 ;;      Temps:          0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15568 ;;      Totals:         0       0      21      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15569 ;;Total ram usage:       42 bytes
 15570 ;; Hardware stack levels used:    1
 15571 ;; Hardware stack levels required when called:   10
 15572 ;; This function calls:
 15573 ;;		_Sleep
 15574 ;;		___ftmul
 15575 ;;		___fttol
 15576 ;;		___lltoft
 15577 ;;		__dwt_kick_dgc_on_wakeup
 15578 ;;		_dwt_configmrxlut
 15579 ;;		_dwt_modify16bitoffsetreg
 15580 ;;		_dwt_modify32bitoffsetreg
 15581 ;;		_dwt_modify8bitoffsetreg
 15582 ;;		_dwt_pgf_cal
 15583 ;;		_dwt_read32bitoffsetreg
 15584 ;;		_dwt_read8bitoffsetreg
 15585 ;;		_dwt_setdwstate
 15586 ;;		_dwt_setplenfine
 15587 ;;		_dwt_write16bitoffsetreg
 15588 ;;		_dwt_write32bitoffsetreg
 15589 ;;		_dwt_write8bitoffsetreg
 15590 ;;		_get_sts_mnth
 15591 ;; This function is called by:
 15592 ;;		_dw_main
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           
 15597                           ;psect for function _dwt_configure
 15598  0105                     _dwt_configure:	
 15599                           
 15600                           ;incstack = 0
 15601                           ; Regs used in _dwt_configure: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15602                           ;dwt_configure@config stored from wreg
 15603  0105  0142               	movlb	2	; select bank2
 15604  0106  00EF               	movwf	dwt_configure@config^(0+256)
 15605                           
 15606                           ;deca_device.c: 1337: uint8_t chan = config->chan,cnt,flag;
 15607  0107  086F               	movf	dwt_configure@config^(0+256),w
 15608  0108  0086               	movwf	6
 15609  0109  3002               	movlw	2	; select bank4/5
 15610  010A  0087               	movwf	7
 15611  010B  0801               	movf	1,w
 15612  010C  0141               	movlb	1	; select bank1
 15613  010D  00D8               	movwf	??_dwt_configure^(0+128)
 15614  010E  0858               	movf	??_dwt_configure^(0+128),w
 15615  010F  0142               	movlb	2	; select bank2
 15616  0110  00EE               	movwf	dwt_configure@chan^(0+256)
 15617                           
 15618                           ;deca_device.c: 1338: uint32_t temp;
 15619                           ;deca_device.c: 1339: uint8_t scp = ((config->rxCode > 24) || (config->txCode > 24)) ? 1
      +                           : 0;
 15620  0111  01E4               	clrf	_dwt_configure$1141^(0+256)
 15621  0112  0AE4               	incf	_dwt_configure$1141^(0+256),f
 15622  0113  086F               	movf	dwt_configure@config^(0+256),w
 15623  0114  3E04               	addlw	4
 15624  0115  0086               	movwf	6
 15625  0116  3002               	movlw	2	; select bank4/5
 15626  0117  0087               	movwf	7
 15627  0118  3019               	movlw	25
 15628  0119  0201               	subwf	1,w
 15629  011A  1803               	skipnc
 15630  011B  2925               	goto	l6359
 15631  011C  086F               	movf	dwt_configure@config^(0+256),w
 15632  011D  3E03               	addlw	3
 15633  011E  0086               	movwf	6
 15634  011F  3002               	movlw	2	; select bank4/5
 15635  0120  0087               	movwf	7
 15636  0121  3019               	movlw	25
 15637  0122  0201               	subwf	1,w
 15638  0123  1C03               	btfss	3,0
 15639  0124  01E4               	clrf	_dwt_configure$1141^(0+256)
 15640  0125                     l6359:	
 15641  0125  0864               	movf	_dwt_configure$1141^(0+256),w
 15642  0126  0141               	movlb	1	; select bank1
 15643  0127  00D8               	movwf	??_dwt_configure^(0+128)
 15644  0128  0858               	movf	??_dwt_configure^(0+128),w
 15645  0129  0142               	movlb	2	; select bank2
 15646  012A  00E1               	movwf	dwt_configure@scp^(0+256)
 15647                           
 15648                           ;deca_device.c: 1340: uint8_t mode = (config->phrMode == 0x1) ? 0x10U : 0;
 15649  012B  086F               	movf	dwt_configure@config^(0+256),w
 15650  012C  3E07               	addlw	7
 15651  012D  0086               	movwf	6
 15652  012E  3002               	movlw	2	; select bank4/5
 15653  012F  0087               	movwf	7
 15654  0130  0301               	decf	1,w
 15655  0131  1903               	btfsc	3,2
 15656  0132  2936               	goto	l6365
 15657  0133  01DB               	clrf	_dwt_configure$1143^(0+256)
 15658  0134  01DC               	clrf	(_dwt_configure$1143+1)^(0+256)
 15659  0135  293A               	goto	l589
 15660  0136                     l6365:	
 15661  0136  3010               	movlw	16
 15662  0137  00DB               	movwf	_dwt_configure$1143^(0+256)
 15663  0138  3000               	movlw	0
 15664  0139  00DC               	movwf	(_dwt_configure$1143^(0+256)+1)
 15665  013A                     l589:	
 15666  013A  085B               	movf	_dwt_configure$1143^(0+256),w
 15667  013B  0141               	movlb	1	; select bank1
 15668  013C  00D8               	movwf	??_dwt_configure^(0+128)
 15669  013D  0858               	movf	??_dwt_configure^(0+128),w
 15670  013E  0142               	movlb	2	; select bank2
 15671  013F  00E2               	movwf	dwt_configure@mode^(0+256)
 15672                           
 15673                           ;deca_device.c: 1341: uint16_t sts_len;
 15674                           ;deca_device.c: 1342: int error = (0);
 15675  0140  01DD               	clrf	dwt_configure@error^(0+256)
 15676  0141  01DE               	clrf	(dwt_configure@error+1)^(0+256)
 15677                           
 15678                           ;deca_device.c: 1365: int preamble_len;
 15679                           ;deca_device.c: 1367: switch (config->txPreambLength)
 15680  0142  2966               	goto	l6391
 15681  0143                     l6369:	
 15682                           ;deca_device.c: 1368: {
 15683                           ;deca_device.c: 1369: case 0x04:
 15684                           
 15685                           
 15686                           ;deca_device.c: 1370: preamble_len = 32;
 15687  0143  3020               	movlw	32
 15688  0144  294A               	goto	L9
 15689  0145                     l6371:	
 15690                           ;deca_device.c: 1372: case 0x01:
 15691                           
 15692                           ;deca_device.c: 1371: break;
 15693                           
 15694                           
 15695                           ;deca_device.c: 1373: preamble_len = 64;
 15696  0145  3040               	movlw	64
 15697  0146  294A               	goto	L9
 15698  0147                     l6373:	
 15699                           ;deca_device.c: 1375: case 0x07:
 15700                           
 15701                           ;deca_device.c: 1374: break;
 15702                           
 15703                           
 15704                           ;deca_device.c: 1376: preamble_len = 72;
 15705  0147  3048               	movlw	72
 15706  0148  294A               	goto	L9
 15707  0149                     l6375:	
 15708                           ;deca_device.c: 1378: case 0x05:
 15709                           
 15710                           ;deca_device.c: 1377: break;
 15711                           
 15712                           
 15713                           ;deca_device.c: 1379: preamble_len = 128;
 15714  0149  3080               	movlw	128
 15715  014A                     L9:	
 15716  014A  00EC               	movwf	dwt_configure@preamble_len^(0+256)
 15717  014B  3000               	movlw	0
 15718  014C  2964               	goto	L15
 15719  014D                     l6377:	
 15720                           ;deca_device.c: 1381: case 0x09:
 15721                           
 15722                           ;deca_device.c: 1380: break;
 15723                           
 15724                           
 15725                           ;deca_device.c: 1382: preamble_len = 256;
 15726  014D  3000               	movlw	0
 15727  014E  00EC               	movwf	dwt_configure@preamble_len^(0+256)
 15728  014F  3001               	movlw	1
 15729  0150  2964               	goto	L15
 15730  0151                     l6379:	
 15731                           ;deca_device.c: 1384: case 0x0d:
 15732                           
 15733                           ;deca_device.c: 1383: break;
 15734                           
 15735                           
 15736                           ;deca_device.c: 1385: preamble_len = 512;
 15737  0151  3000               	movlw	0
 15738  0152  00EC               	movwf	dwt_configure@preamble_len^(0+256)
 15739  0153  3002               	movlw	2
 15740  0154  2964               	goto	L15
 15741  0155                     l6381:	
 15742                           ;deca_device.c: 1387: case 0x02:
 15743                           
 15744                           ;deca_device.c: 1386: break;
 15745                           
 15746                           
 15747                           ;deca_device.c: 1388: preamble_len = 1024;
 15748  0155  3000               	movlw	0
 15749  0156  00EC               	movwf	dwt_configure@preamble_len^(0+256)
 15750  0157  3004               	movlw	4
 15751  0158  2964               	goto	L15
 15752  0159                     l6383:	
 15753                           ;deca_device.c: 1390: case 0x06:
 15754                           
 15755                           ;deca_device.c: 1389: break;
 15756                           
 15757                           
 15758                           ;deca_device.c: 1391: preamble_len = 1536;
 15759  0159  3000               	movlw	0
 15760  015A  00EC               	movwf	dwt_configure@preamble_len^(0+256)
 15761  015B  3006               	movlw	6
 15762  015C  2964               	goto	L15
 15763  015D                     l6385:	
 15764                           ;deca_device.c: 1393: case 0x0A:
 15765                           
 15766                           ;deca_device.c: 1392: break;
 15767                           
 15768                           
 15769                           ;deca_device.c: 1394: preamble_len = 2048;
 15770  015D  3000               	movlw	0
 15771  015E  00EC               	movwf	dwt_configure@preamble_len^(0+256)
 15772  015F  3008               	movlw	8
 15773  0160  2964               	goto	L15
 15774  0161                     l6387:	
 15775                           ;deca_device.c: 1396: default:
 15776                           
 15777                           ;deca_device.c: 1395: break;
 15778                           
 15779                           
 15780                           ;deca_device.c: 1397: preamble_len = 4096;
 15781  0161  3000               	movlw	0
 15782  0162  00EC               	movwf	dwt_configure@preamble_len^(0+256)
 15783  0163  3010               	movlw	16
 15784  0164                     L15:	
 15785  0164  00ED               	movwf	(dwt_configure@preamble_len^(0+256)+1)
 15786                           
 15787                           ;deca_device.c: 1399: }
 15788                           
 15789                           ;deca_device.c: 1398: break;
 15790  0165  2987               	goto	l6393
 15791  0166                     l6391:	
 15792  0166  0A6F               	incf	dwt_configure@config^(0+256),w
 15793  0167  0086               	movwf	6
 15794  0168  3002               	movlw	2	; select bank4/5
 15795  0169  0087               	movwf	7
 15796  016A  0801               	movf	1,w
 15797                           
 15798                           ; Switch size 1, requested type "space"
 15799                           ; Number of cases is 9, Range of values is 1 to 13
 15800                           ; switch strategies available:
 15801                           ; Name         Instructions Cycles
 15802                           ; simple_byte           28    15 (average)
 15803                           ; direct_byte           35     9 (fixed)
 15804                           ; jumptable            263     9 (fixed)
 15805                           ;	Chosen strategy is simple_byte
 15806  016B  3A01               	xorlw	1	; case 1
 15807  016C  1903               	skipnz
 15808  016D  2945               	goto	l6371
 15809  016E  3A03               	xorlw	3	; case 2
 15810  016F  1903               	skipnz
 15811  0170  2955               	goto	l6381
 15812  0171  3A06               	xorlw	6	; case 4
 15813  0172  1903               	skipnz
 15814  0173  2943               	goto	l6369
 15815  0174  3A01               	xorlw	1	; case 5
 15816  0175  1903               	skipnz
 15817  0176  2949               	goto	l6375
 15818  0177  3A03               	xorlw	3	; case 6
 15819  0178  1903               	skipnz
 15820  0179  2959               	goto	l6383
 15821  017A  3A01               	xorlw	1	; case 7
 15822  017B  1903               	skipnz
 15823  017C  2947               	goto	l6373
 15824  017D  3A0E               	xorlw	14	; case 9
 15825  017E  1903               	skipnz
 15826  017F  294D               	goto	l6377
 15827  0180  3A03               	xorlw	3	; case 10
 15828  0181  1903               	skipnz
 15829  0182  295D               	goto	l6385
 15830  0183  3A07               	xorlw	7	; case 13
 15831  0184  1903               	skipnz
 15832  0185  2951               	goto	l6379
 15833  0186  2961               	goto	l6387
 15834  0187                     l6393:	
 15835                           
 15836                           ;deca_device.c: 1401: pdw3000local->sleep_mode &= (~(0x0020 | 0x00C0));
 15837  0187  0141               	movlb	1	; select bank1
 15838  0188  086F               	movf	_pdw3000local^(0+128),w
 15839  0189  3E10               	addlw	16
 15840  018A  0086               	movwf	6
 15841  018B  3002               	movlw	2	; select bank4/5
 15842  018C  0087               	movwf	7
 15843  018D  301F               	movlw	31
 15844  018E  0581               	andwf	1,f
 15845  018F  3141               	addfsr 1,1
 15846  0190  30FF               	movlw	255
 15847  0191  0581               	andwf	1,f
 15848                           
 15849                           ;deca_device.c: 1402: pdw3000local->longFrames = config->phrMode ;
 15850  0192  0142               	movlb	2	; select bank2
 15851  0193  086F               	movf	dwt_configure@config^(0+256),w
 15852  0194  3E07               	addlw	7
 15853  0195  0086               	movwf	6
 15854  0196  3002               	movlw	2	; select bank4/5
 15855  0197  0087               	movwf	7
 15856  0198  0801               	movf	1,w
 15857  0199  0141               	movlb	1	; select bank1
 15858  019A  00D8               	movwf	??_dwt_configure^(0+128)
 15859  019B  086F               	movf	_pdw3000local^(0+128),w
 15860  019C  3E0C               	addlw	12
 15861  019D  0086               	movwf	6
 15862  019E  3002               	movlw	2	; select bank4/5
 15863  019F  0087               	movwf	7
 15864  01A0  0858               	movf	??_dwt_configure^(0+128),w
 15865  01A1  0081               	movwf	1
 15866                           
 15867                           ;deca_device.c: 1403: sts_len=((uint16_t)1<<(((uint16_t)(config->stsLength))+2));
 15868  01A2  3001               	movlw	1
 15869  01A3  00D8               	movwf	??_dwt_configure^(0+128)
 15870  01A4  3000               	movlw	0
 15871  01A5  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 15872  01A6  0142               	movlb	2	; select bank2
 15873  01A7  086F               	movf	dwt_configure@config^(0+256),w
 15874  01A8  3E0C               	addlw	12
 15875  01A9  0086               	movwf	6
 15876  01AA  3002               	movlw	2	; select bank4/5
 15877  01AB  0087               	movwf	7
 15878  01AC  0801               	movf	1,w
 15879  01AD  3E02               	addlw	2
 15880  01AE  0A89               	incf	9,f
 15881  01AF  0141               	movlb	1	; select bank1
 15882  01B0  29B3               	goto	u6094
 15883  01B1                     u6095:	
 15884  01B1  35D8               	lslf	??_dwt_configure^(0+128),f
 15885  01B2  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 15886  01B3                     u6094:	
 15887  01B3  0B89               	decfsz	9,f
 15888  01B4  29B1               	goto	u6095
 15889  01B5  0858               	movf	??_dwt_configure^(0+128),w
 15890  01B6  0142               	movlb	2	; select bank2
 15891  01B7  00EA               	movwf	dwt_configure@sts_len^(0+256)
 15892  01B8  0141               	movlb	1	; select bank1
 15893  01B9  0859               	movf	(??_dwt_configure+1)^(0+128),w
 15894  01BA  0142               	movlb	2	; select bank2
 15895  01BB  00EB               	movwf	(dwt_configure@sts_len+1)^(0+256)
 15896                           
 15897                           ;deca_device.c: 1404: pdw3000local->ststhreshold = (int16_t)((((uint32_t)sts_len) * 8) *
      +                           (0.90f));
 15898  01BC  086A               	movf	dwt_configure@sts_len^(0+256),w
 15899  01BD  0141               	movlb	1	; select bank1
 15900  01BE  00D8               	movwf	??_dwt_configure^(0+128)
 15901  01BF  0142               	movlb	2	; select bank2
 15902  01C0  086B               	movf	(dwt_configure@sts_len+1)^(0+256),w
 15903  01C1  0141               	movlb	1	; select bank1
 15904  01C2  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 15905  01C3  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 15906  01C4  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 15907  01C5  3003               	movlw	3
 15908  01C6                     u6105:	
 15909  01C6  35D8               	lslf	??_dwt_configure^(0+128),f
 15910  01C7  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 15911  01C8  0DDA               	rlf	(??_dwt_configure^(0+128)+2),f
 15912  01C9  0DDB               	rlf	(??_dwt_configure^(0+128)+3),f
 15913  01CA  0B89               	decfsz	9,f
 15914  01CB  29C6               	goto	u6105
 15915  01CC  085B               	movf	(??_dwt_configure+3)^(0+128),w
 15916  01CD  00FB               	movwf	___lltoft@c+3
 15917  01CE  085A               	movf	(??_dwt_configure+2)^(0+128),w
 15918  01CF  00FA               	movwf	___lltoft@c+2
 15919  01D0  0859               	movf	(??_dwt_configure+1)^(0+128),w
 15920  01D1  00F9               	movwf	___lltoft@c+1
 15921  01D2  0858               	movf	??_dwt_configure^(0+128),w
 15922  01D3  00F8               	movwf	___lltoft@c
 15923  01D4  31A3  23A7  3181   	fcall	___lltoft
 15924  01D7  0878               	movf	?___lltoft,w
 15925  01D8  0140               	movlb	0	; select bank0
 15926  01D9  00A3               	movwf	___ftmul@f2
 15927  01DA  0879               	movf	?___lltoft+1,w
 15928  01DB  00A4               	movwf	___ftmul@f2+1
 15929  01DC  087A               	movf	?___lltoft+2,w
 15930  01DD  00A5               	movwf	___ftmul@f2+2
 15931  01DE  3066               	movlw	102
 15932  01DF  00A0               	movwf	___ftmul@f1
 15933  01E0  3066               	movlw	102
 15934  01E1  00A1               	movwf	___ftmul@f1+1
 15935  01E2  303F               	movlw	63
 15936  01E3  00A2               	movwf	___ftmul@f1+2
 15937  01E4  3192  2202  3181   	fcall	___ftmul
 15938  01E7  0140               	movlb	0	; select bank0
 15939  01E8  0820               	movf	?___ftmul,w
 15940  01E9  00B0               	movwf	___fttol@f1
 15941  01EA  0821               	movf	?___ftmul+1,w
 15942  01EB  00B1               	movwf	___fttol@f1+1
 15943  01EC  0822               	movf	?___ftmul+2,w
 15944  01ED  00B2               	movwf	___fttol@f1+2
 15945  01EE  319E  2656  3181   	fcall	___fttol
 15946  01F1  0141               	movlb	1	; select bank1
 15947  01F2  086F               	movf	_pdw3000local^(0+128),w
 15948  01F3  3E12               	addlw	18
 15949  01F4  0086               	movwf	6
 15950  01F5  3002               	movlw	2	; select bank4/5
 15951  01F6  0087               	movwf	7
 15952  01F7  0140               	movlb	0	; select bank0
 15953  01F8  0830               	movf	?___fttol,w
 15954  01F9  3FC0               	movwi [0]fsr1
 15955  01FA  0831               	movf	?___fttol+1,w
 15956  01FB  3FC1               	movwi [1]fsr1
 15957                           
 15958                           ;deca_device.c: 1405: pdw3000local->stsconfig = config->stsMode;
 15959  01FC  0142               	movlb	2	; select bank2
 15960  01FD  086F               	movf	dwt_configure@config^(0+256),w
 15961  01FE  3E0B               	addlw	11
 15962  01FF  0086               	movwf	6
 15963  0200  3002               	movlw	2	; select bank4/5
 15964  0201  0087               	movwf	7
 15965  0202  0801               	movf	1,w
 15966  0203  0141               	movlb	1	; select bank1
 15967  0204  00D8               	movwf	??_dwt_configure^(0+128)
 15968  0205  086F               	movf	_pdw3000local^(0+128),w
 15969  0206  3E15               	addlw	21
 15970  0207  0086               	movwf	6
 15971  0208  3002               	movlw	2	; select bank4/5
 15972  0209  0087               	movwf	7
 15973  020A  0858               	movf	??_dwt_configure^(0+128),w
 15974  020B  0081               	movwf	1
 15975                           
 15976                           ;deca_device.c: 1411: dwt_modify32bitoffsetreg(0x10, 0, ~(0x10U | 0x20U | 0x3000U | 0x30
      +                          000UL | 0x8000U),
 15977                           ;deca_device.c: 1412: ((uint32_t)config->pdoaMode) << (16U)
 15978                           ;deca_device.c: 1413: | ((uint16_t)config->stsMode & 0xB) << (12U)
 15979                           ;deca_device.c: 1414: | (0x20U & ((uint32_t)config->phrRate << (5U)))
 15980                           ;deca_device.c: 1415: | mode);
 15981  020C  3000               	movlw	0
 15982  020D  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 15983  020E  3000               	movlw	0
 15984  020F  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 15985  0210  3000               	movlw	0
 15986  0211  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 15987  0212  3010               	movlw	16
 15988  0213  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 15989  0214  3000               	movlw	0
 15990  0215  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 15991  0216  3000               	movlw	0
 15992  0217  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 15993  0218  3000               	movlw	0
 15994  0219  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 15995  021A  3000               	movlw	0
 15996  021B  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 15997  021C  30FF               	movlw	255
 15998  021D  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 15999  021E  30FC               	movlw	252
 16000  021F  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16001  0220  304F               	movlw	79
 16002  0221  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16003  0222  30CF               	movlw	207
 16004  0223  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16005  0224  0142               	movlb	2	; select bank2
 16006  0225  0862               	movf	dwt_configure@mode^(0+256),w
 16007  0226  0141               	movlb	1	; select bank1
 16008  0227  00D8               	movwf	??_dwt_configure^(0+128)
 16009  0228  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 16010  0229  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 16011  022A  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 16012  022B  0142               	movlb	2	; select bank2
 16013  022C  086F               	movf	dwt_configure@config^(0+256),w
 16014  022D  3E08               	addlw	8
 16015  022E  0086               	movwf	6
 16016  022F  3002               	movlw	2	; select bank4/5
 16017  0230  0087               	movwf	7
 16018  0231  0801               	movf	1,w
 16019  0232  0141               	movlb	1	; select bank1
 16020  0233  00DC               	movwf	(??_dwt_configure+4)^(0+128)
 16021  0234  3004               	movlw	4
 16022  0235                     u6115:	
 16023  0235  35DC               	lslf	(??_dwt_configure+4)^(0+128),f
 16024  0236  3EFF               	addlw	-1
 16025  0237  1D03               	skipz
 16026  0238  2A35               	goto	u6115
 16027  0239  355C               	lslf	(??_dwt_configure+4)^(0+128),w
 16028  023A  3920               	andlw	32
 16029  023B  00DD               	movwf	(??_dwt_configure+5)^(0+128)
 16030  023C  01DE               	clrf	((??_dwt_configure+5)^(0+128)+1)
 16031  023D  01DF               	clrf	((??_dwt_configure+5)^(0+128)+2)
 16032  023E  01E0               	clrf	((??_dwt_configure+5)^(0+128)+3)
 16033  023F  0142               	movlb	2	; select bank2
 16034  0240  086F               	movf	dwt_configure@config^(0+256),w
 16035  0241  3E0B               	addlw	11
 16036  0242  0086               	movwf	6
 16037  0243  3002               	movlw	2	; select bank4/5
 16038  0244  0087               	movwf	7
 16039  0245  0801               	movf	1,w
 16040  0246  390B               	andlw	11
 16041  0247  0141               	movlb	1	; select bank1
 16042  0248  00E1               	movwf	(??_dwt_configure+9)^(0+128)
 16043  0249  01E2               	clrf	((??_dwt_configure+9)^(0+128)+1)
 16044  024A  0E61               	swapf	(??_dwt_configure+9)^(0+128),w
 16045  024B  39F0               	andlw	240
 16046  024C  00E2               	movwf	((??_dwt_configure+9)^(0+128)+1)
 16047  024D  01E1               	clrf	(??_dwt_configure+9)^(0+128)
 16048  024E  0861               	movf	(??_dwt_configure+9)^(0+128),w
 16049  024F  00E3               	movwf	(??_dwt_configure+11)^(0+128)
 16050  0250  0862               	movf	(??_dwt_configure+10)^(0+128),w
 16051  0251  00E4               	movwf	((??_dwt_configure+11)^(0+128)+1)
 16052  0252  01E5               	clrf	((??_dwt_configure+11)^(0+128)+2)
 16053  0253  01E6               	clrf	((??_dwt_configure+11)^(0+128)+3)
 16054  0254  0142               	movlb	2	; select bank2
 16055  0255  086F               	movf	dwt_configure@config^(0+256),w
 16056  0256  3E0D               	addlw	13
 16057  0257  0086               	movwf	6
 16058  0258  3002               	movlw	2	; select bank4/5
 16059  0259  0087               	movwf	7
 16060  025A  0801               	movf	1,w
 16061  025B  0141               	movlb	1	; select bank1
 16062  025C  00E7               	movwf	(??_dwt_configure+15)^(0+128)
 16063  025D  01E8               	clrf	((??_dwt_configure+15)^(0+128)+1)
 16064  025E  01E9               	clrf	((??_dwt_configure+15)^(0+128)+2)
 16065  025F  01EA               	clrf	((??_dwt_configure+15)^(0+128)+3)
 16066  0260  3010               	movlw	16
 16067  0261                     u6125:	
 16068  0261  35E7               	lslf	(??_dwt_configure+15)^(0+128),f
 16069  0262  0DE8               	rlf	((??_dwt_configure+15)^(0+128)+1),f
 16070  0263  0DE9               	rlf	((??_dwt_configure+15)^(0+128)+2),f
 16071  0264  0DEA               	rlf	((??_dwt_configure+15)^(0+128)+3),f
 16072  0265  0B89               	decfsz	9,f
 16073  0266  2A61               	goto	u6125
 16074  0267  0867               	movf	(??_dwt_configure+15)^(0+128),w
 16075  0268  04E3               	iorwf	(??_dwt_configure+11)^(0+128),f
 16076  0269  0868               	movf	(??_dwt_configure+16)^(0+128),w
 16077  026A  04E4               	iorwf	((??_dwt_configure+11)^(0+128)+1),f
 16078  026B  0869               	movf	(??_dwt_configure+17)^(0+128),w
 16079  026C  04E5               	iorwf	((??_dwt_configure+11)^(0+128)+2),f
 16080  026D  086A               	movf	(??_dwt_configure+18)^(0+128),w
 16081  026E  04E6               	iorwf	((??_dwt_configure+11)^(0+128)+3),f
 16082  026F  0863               	movf	(??_dwt_configure+11)^(0+128),w
 16083  0270  04DD               	iorwf	(??_dwt_configure+5)^(0+128),f
 16084  0271  0864               	movf	(??_dwt_configure+12)^(0+128),w
 16085  0272  04DE               	iorwf	((??_dwt_configure+5)^(0+128)+1),f
 16086  0273  0865               	movf	(??_dwt_configure+13)^(0+128),w
 16087  0274  04DF               	iorwf	((??_dwt_configure+5)^(0+128)+2),f
 16088  0275  0866               	movf	(??_dwt_configure+14)^(0+128),w
 16089  0276  04E0               	iorwf	((??_dwt_configure+5)^(0+128)+3),f
 16090  0277  0858               	movf	??_dwt_configure^(0+128),w
 16091  0278  045D               	iorwf	(??_dwt_configure+5)^(0+128),w
 16092  0279  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16093  027A  0859               	movf	(??_dwt_configure+1)^(0+128),w
 16094  027B  045E               	iorwf	(??_dwt_configure+6)^(0+128),w
 16095  027C  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16096  027D  085A               	movf	(??_dwt_configure+2)^(0+128),w
 16097  027E  045F               	iorwf	(??_dwt_configure+7)^(0+128),w
 16098  027F  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16099  0280  085B               	movf	(??_dwt_configure+3)^(0+128),w
 16100  0281  0460               	iorwf	(??_dwt_configure+8)^(0+128),w
 16101  0282  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16102  0283  3192  22B6  3181   	fcall	_dwt_modify32bitoffsetreg
 16103                           
 16104                           ;deca_device.c: 1417: if (scp)
 16105  0286  0142               	movlb	2	; select bank2
 16106  0287  0861               	movf	dwt_configure@scp^(0+256),w
 16107  0288  1903               	btfsc	3,2
 16108  0289  2B25               	goto	l6415
 16109                           
 16110                           ;deca_device.c: 1418: {
 16111                           ;deca_device.c: 1420: pdw3000local->sleep_mode |= 0x0020 | 0x0040;
 16112  028A  0141               	movlb	1	; select bank1
 16113  028B  086F               	movf	_pdw3000local^(0+128),w
 16114  028C  3E10               	addlw	16
 16115  028D  0086               	movwf	6
 16116  028E  3002               	movlw	2	; select bank4/5
 16117  028F  0087               	movwf	7
 16118  0290  3060               	movlw	96
 16119  0291  0481               	iorwf	1,f
 16120  0292  3141               	addfsr 1,1
 16121  0293  3000               	movlw	0
 16122  0294  0481               	iorwf	1,f
 16123                           
 16124                           ;deca_device.c: 1421: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x1<<11) | 0x400
      +                          U);
 16125  0295  3000               	movlw	0
 16126  0296  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16127  0297  300B               	movlw	11
 16128  0298  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16129  0299  3000               	movlw	0
 16130  029A  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16131  029B  3008               	movlw	8
 16132  029C  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16133  029D  3000               	movlw	0
 16134  029E  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16135  029F  3000               	movlw	0
 16136  02A0  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16137  02A1  3000               	movlw	0
 16138  02A2  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16139  02A3  3000               	movlw	0
 16140  02A4  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16141  02A5  3000               	movlw	0
 16142  02A6  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16143  02A7  3000               	movlw	0
 16144  02A8  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16145  02A9  30E7               	movlw	231
 16146  02AA  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16147  02AB  30FF               	movlw	255
 16148  02AC  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16149  02AD  3000               	movlw	0
 16150  02AE  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16151  02AF  3000               	movlw	0
 16152  02B0  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16153  02B1  300C               	movlw	12
 16154  02B2  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16155  02B3  3000               	movlw	0
 16156  02B4  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16157  02B5  3192  22B6  3181   	fcall	_dwt_modify32bitoffsetreg
 16158                           
 16159                           ;deca_device.c: 1423: dwt_write32bitoffsetreg(0xe000c, 0, 0x0306);
 16160  02B8  3000               	movlw	0
 16161  02B9  0141               	movlb	1	; select bank1
 16162  02BA  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16163  02BB  300E               	movlw	14
 16164  02BC  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16165  02BD  3000               	movlw	0
 16166  02BE  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16167  02BF  300C               	movlw	12
 16168  02C0  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16169  02C1  3000               	movlw	0
 16170  02C2  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16171  02C3  3000               	movlw	0
 16172  02C4  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16173  02C5  3000               	movlw	0
 16174  02C6  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16175  02C7  3000               	movlw	0
 16176  02C8  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16177  02C9  3000               	movlw	0
 16178  02CA  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16179  02CB  3000               	movlw	0
 16180  02CC  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16181  02CD  3003               	movlw	3
 16182  02CE  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16183  02CF  3006               	movlw	6
 16184  02D0  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16185  02D1  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 16186                           
 16187                           ;deca_device.c: 1424: dwt_write32bitoffsetreg(0xe000e, 0, 0x00000000);
 16188  02D4  3000               	movlw	0
 16189  02D5  0141               	movlb	1	; select bank1
 16190  02D6  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16191  02D7  300E               	movlw	14
 16192  02D8  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16193  02D9  3000               	movlw	0
 16194  02DA  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16195  02DB  300E               	movlw	14
 16196  02DC  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16197  02DD  3000               	movlw	0
 16198  02DE  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16199  02DF  3000               	movlw	0
 16200  02E0  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16201  02E1  3000               	movlw	0
 16202  02E2  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16203  02E3  3000               	movlw	0
 16204  02E4  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16205  02E5  3000               	movlw	0
 16206  02E6  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16207  02E7  3000               	movlw	0
 16208  02E8  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16209  02E9  3000               	movlw	0
 16210  02EA  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16211  02EB  3000               	movlw	0
 16212  02EC  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16213  02ED  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 16214                           
 16215                           ;deca_device.c: 1426: dwt_write32bitoffsetreg(0xe0012, 0, 0x000C5A0A);
 16216  02F0  3000               	movlw	0
 16217  02F1  0141               	movlb	1	; select bank1
 16218  02F2  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16219  02F3  300E               	movlw	14
 16220  02F4  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16221  02F5  3000               	movlw	0
 16222  02F6  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16223  02F7  3012               	movlw	18
 16224  02F8  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16225  02F9  3000               	movlw	0
 16226  02FA  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16227  02FB  3000               	movlw	0
 16228  02FC  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16229  02FD  3000               	movlw	0
 16230  02FE  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16231  02FF  3000               	movlw	0
 16232  0300  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16233  0301  3000               	movlw	0
 16234  0302  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16235  0303  300C               	movlw	12
 16236  0304  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16237  0305  305A               	movlw	90
 16238  0306  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16239  0307  300A               	movlw	10
 16240  0308  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16241  0309  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 16242                           
 16243                           ;deca_device.c: 1427: dwt_write8bitoffsetreg(0xe0016, 0, 0x7D);
 16244  030C  3000               	movlw	0
 16245  030D  0141               	movlb	1	; select bank1
 16246  030E  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 16247  030F  300E               	movlw	14
 16248  0310  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 16249  0311  3000               	movlw	0
 16250  0312  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 16251  0313  3016               	movlw	22
 16252  0314  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 16253  0315  3000               	movlw	0
 16254  0316  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 16255  0317  3000               	movlw	0
 16256  0318  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 16257  0319  3000               	movlw	0
 16258  031A  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 16259  031B  3000               	movlw	0
 16260  031C  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 16261  031D  307D               	movlw	125
 16262  031E  00D8               	movwf	??_dwt_configure^(0+128)
 16263  031F  0858               	movf	??_dwt_configure^(0+128),w
 16264  0320  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 16265  0321  31A2  2207  3181   	fcall	_dwt_write8bitoffsetreg
 16266                           
 16267                           ;deca_device.c: 1428: }
 16268  0324  2C1A               	goto	l603
 16269  0325                     l6415:	
 16270                           
 16271                           ;deca_device.c: 1429: else
 16272                           ;deca_device.c: 1430: {
 16273                           ;deca_device.c: 1431: uint16_t sts_mnth;
 16274                           ;deca_device.c: 1432: if (config->stsMode != 0x0)
 16275  0325  0142               	movlb	2	; select bank2
 16276  0326  086F               	movf	dwt_configure@config^(0+256),w
 16277  0327  3E0B               	addlw	11
 16278  0328  0086               	movwf	6
 16279  0329  3002               	movlw	2	; select bank4/5
 16280  032A  0087               	movwf	7
 16281  032B  0801               	movf	1,w
 16282  032C  1903               	btfsc	3,2
 16283  032D  2BBF               	goto	l6429
 16284                           
 16285                           ;deca_device.c: 1433: {
 16286                           ;deca_device.c: 1436: if ((config->pdoaMode == 0x1) || (config->pdoaMode == 0x0))
 16287  032E  086F               	movf	dwt_configure@config^(0+256),w
 16288  032F  3E0D               	addlw	13
 16289  0330  0086               	movwf	6
 16290  0331  3002               	movlw	2	; select bank4/5
 16291  0332  0087               	movwf	7
 16292  0333  0301               	decf	1,w
 16293  0334  1903               	btfsc	3,2
 16294  0335  2B3E               	goto	l6421
 16295  0336  086F               	movf	dwt_configure@config^(0+256),w
 16296  0337  3E0D               	addlw	13
 16297  0338  0086               	movwf	6
 16298  0339  3002               	movlw	2	; select bank4/5
 16299  033A  0087               	movwf	7
 16300  033B  0801               	movf	1,w
 16301  033C  1D03               	btfss	3,2
 16302  033D  2B5C               	goto	l6423
 16303  033E                     l6421:	
 16304                           
 16305                           ;deca_device.c: 1437: {
 16306                           ;deca_device.c: 1439: sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLeng
      +                          th)], (0x10), 3);
 16307  033E  086F               	movf	dwt_configure@config^(0+256),w
 16308  033F  3E0C               	addlw	12
 16309  0340  0086               	movwf	6
 16310  0341  3002               	movlw	2	; select bank4/5
 16311  0342  0087               	movwf	7
 16312  0343  0801               	movf	1,w
 16313  0344  0141               	movlb	1	; select bank1
 16314  0345  00D8               	movwf	??_dwt_configure^(0+128)
 16315  0346  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 16316  0347  35D8               	lslf	??_dwt_configure^(0+128),f
 16317  0348  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 16318  0349  302D               	movlw	low (_sts_length_factors| (0+32768))
 16319  034A  0758               	addwf	??_dwt_configure^(0+128),w
 16320  034B  0084               	movwf	4
 16321  034C  30A9               	movlw	high (_sts_length_factors| (0+32768))
 16322  034D  3D59               	addwfc	(??_dwt_configure+1)^(0+128),w
 16323  034E  0085               	movwf	5
 16324  034F  3F00               	moviw [0]fsr0
 16325  0350  0140               	movlb	0	; select bank0
 16326  0351  00A0               	movwf	get_sts_mnth@cipher
 16327  0352  3F01               	moviw [1]fsr0
 16328  0353  00A1               	movwf	get_sts_mnth@cipher+1
 16329  0354  3010               	movlw	16
 16330  0355  0141               	movlb	1	; select bank1
 16331  0356  00DA               	movwf	(??_dwt_configure+2)^(0+128)
 16332  0357  085A               	movf	(??_dwt_configure+2)^(0+128),w
 16333  0358  0140               	movlb	0	; select bank0
 16334  0359  00A2               	movwf	get_sts_mnth@threshold
 16335  035A  3003               	movlw	3
 16336  035B  2B79               	goto	L18
 16337  035C                     l6423:	
 16338                           ;deca_device.c: 1440: }
 16339                           
 16340                           
 16341                           ;deca_device.c: 1441: else
 16342                           ;deca_device.c: 1442: {
 16343                           ;deca_device.c: 1444: sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLeng
      +                          th)], (0x10), 4);
 16344  035C  086F               	movf	dwt_configure@config^(0+256),w
 16345  035D  3E0C               	addlw	12
 16346  035E  0086               	movwf	6
 16347  035F  3002               	movlw	2	; select bank4/5
 16348  0360  0087               	movwf	7
 16349  0361  0801               	movf	1,w
 16350  0362  0141               	movlb	1	; select bank1
 16351  0363  00D8               	movwf	??_dwt_configure^(0+128)
 16352  0364  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 16353  0365  35D8               	lslf	??_dwt_configure^(0+128),f
 16354  0366  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 16355  0367  302D               	movlw	low (_sts_length_factors| (0+32768))
 16356  0368  0758               	addwf	??_dwt_configure^(0+128),w
 16357  0369  0084               	movwf	4
 16358  036A  30A9               	movlw	high (_sts_length_factors| (0+32768))
 16359  036B  3D59               	addwfc	(??_dwt_configure+1)^(0+128),w
 16360  036C  0085               	movwf	5
 16361  036D  3F00               	moviw [0]fsr0
 16362  036E  0140               	movlb	0	; select bank0
 16363  036F  00A0               	movwf	get_sts_mnth@cipher
 16364  0370  3F01               	moviw [1]fsr0
 16365  0371  00A1               	movwf	get_sts_mnth@cipher+1
 16366  0372  3010               	movlw	16
 16367  0373  0141               	movlb	1	; select bank1
 16368  0374  00DA               	movwf	(??_dwt_configure+2)^(0+128)
 16369  0375  085A               	movf	(??_dwt_configure+2)^(0+128),w
 16370  0376  0140               	movlb	0	; select bank0
 16371  0377  00A2               	movwf	get_sts_mnth@threshold
 16372  0378  3004               	movlw	4
 16373  0379                     L18:	
 16374  0379  0141               	movlb	1	; select bank1
 16375  037A  00DB               	movwf	(??_dwt_configure+3)^(0+128)
 16376  037B  085B               	movf	(??_dwt_configure+3)^(0+128),w
 16377  037C  0140               	movlb	0	; select bank0
 16378  037D  00A3               	movwf	get_sts_mnth@shift_val
 16379  037E  319B  23FE  3181   	fcall	_get_sts_mnth
 16380  0381  0140               	movlb	0	; select bank0
 16381  0382  0821               	movf	?_get_sts_mnth+1,w
 16382  0383  0142               	movlb	2	; select bank2
 16383  0384  00E0               	movwf	(dwt_configure@sts_mnth+1)^(0+256)
 16384  0385  0140               	movlb	0	; select bank0
 16385  0386  0820               	movf	?_get_sts_mnth,w
 16386  0387  0142               	movlb	2	; select bank2
 16387  0388  00DF               	movwf	dwt_configure@sts_mnth^(0+256)
 16388                           
 16389                           ;deca_device.c: 1445: }
 16390                           ;deca_device.c: 1447: preamble_len += (sts_len) * 8;
 16391  0389  086B               	movf	(dwt_configure@sts_len+1)^(0+256),w
 16392  038A  0141               	movlb	1	; select bank1
 16393  038B  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 16394  038C  0142               	movlb	2	; select bank2
 16395  038D  086A               	movf	dwt_configure@sts_len^(0+256),w
 16396  038E  0141               	movlb	1	; select bank1
 16397  038F  00D8               	movwf	??_dwt_configure^(0+128)
 16398  0390  35D8               	lslf	??_dwt_configure^(0+128),f
 16399  0391  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 16400  0392  35D8               	lslf	??_dwt_configure^(0+128),f
 16401  0393  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 16402  0394  35D8               	lslf	??_dwt_configure^(0+128),f
 16403  0395  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 16404  0396  0858               	movf	??_dwt_configure^(0+128),w
 16405  0397  0142               	movlb	2	; select bank2
 16406  0398  07EC               	addwf	dwt_configure@preamble_len^(0+256),f
 16407  0399  0141               	movlb	1	; select bank1
 16408  039A  0859               	movf	(??_dwt_configure+1)^(0+128),w
 16409  039B  0142               	movlb	2	; select bank2
 16410  039C  3DED               	addwfc	(dwt_configure@preamble_len+1)^(0+256),f
 16411                           
 16412                           ;deca_device.c: 1449: dwt_modify16bitoffsetreg(0xe0012, 2, (uint16_t)~(0x7f0000UL >> 16)
      +                          , sts_mnth & 0x7F);
 16413  039D  3000               	movlw	0
 16414  039E  0141               	movlb	1	; select bank1
 16415  039F  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 16416  03A0  300E               	movlw	14
 16417  03A1  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 16418  03A2  3000               	movlw	0
 16419  03A3  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 16420  03A4  3012               	movlw	18
 16421  03A5  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 16422  03A6  3000               	movlw	0
 16423  03A7  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 16424  03A8  3000               	movlw	0
 16425  03A9  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 16426  03AA  3000               	movlw	0
 16427  03AB  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 16428  03AC  3002               	movlw	2
 16429  03AD  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 16430  03AE  3080               	movlw	128
 16431  03AF  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 16432  03B0  30FF               	movlw	255
 16433  03B1  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 16434  03B2  307F               	movlw	127
 16435  03B3  0142               	movlb	2	; select bank2
 16436  03B4  055F               	andwf	dwt_configure@sts_mnth^(0+256),w
 16437  03B5  0141               	movlb	1	; select bank1
 16438  03B6  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 16439  03B7  3000               	movlw	0
 16440  03B8  0142               	movlb	2	; select bank2
 16441  03B9  0560               	andwf	(dwt_configure@sts_mnth+1)^(0+256),w
 16442  03BA  0141               	movlb	1	; select bank1
 16443  03BB  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 16444  03BC  31A6  26A2  3181   	fcall	_dwt_modify16bitoffsetreg
 16445  03BF                     l6429:	
 16446                           
 16447                           ;deca_device.c: 1451: }
 16448                           ;deca_device.c: 1453: if (preamble_len >= 256)
 16449  03BF  0142               	movlb	2	; select bank2
 16450  03C0  086D               	movf	(dwt_configure@preamble_len+1)^(0+256),w
 16451  03C1  3A80               	xorlw	128
 16452  03C2  0141               	movlb	1	; select bank1
 16453  03C3  00D8               	movwf	??_dwt_configure^(0+128)
 16454  03C4  3081               	movlw	129
 16455  03C5  0258               	subwf	??_dwt_configure^(0+128),w
 16456  03C6  1D03               	skipz
 16457  03C7  2BCB               	goto	u6175
 16458  03C8  3000               	movlw	0
 16459  03C9  0142               	movlb	2	; select bank2
 16460  03CA  026C               	subwf	dwt_configure@preamble_len^(0+256),w
 16461  03CB                     u6175:	
 16462  03CB  1C03               	skipc
 16463  03CC  2BF6               	goto	l6435
 16464                           
 16465                           ;deca_device.c: 1454: {
 16466                           ;deca_device.c: 1455: pdw3000local->sleep_mode |= 0x0020 | 0x0000;
 16467  03CD  0141               	movlb	1	; select bank1
 16468  03CE  086F               	movf	_pdw3000local^(0+128),w
 16469  03CF  3E10               	addlw	16
 16470  03D0  0086               	movwf	6
 16471  03D1  3002               	movlw	2	; select bank4/5
 16472  03D2  0087               	movwf	7
 16473  03D3  3020               	movlw	32
 16474  03D4  0481               	iorwf	1,f
 16475  03D5  3141               	addfsr 1,1
 16476  03D6  3000               	movlw	0
 16477  03D7  0481               	iorwf	1,f
 16478                           
 16479                           ;deca_device.c: 1456: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x0<<11) | 0x400
      +                          U);
 16480  03D8  3000               	movlw	0
 16481  03D9  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16482  03DA  300B               	movlw	11
 16483  03DB  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16484  03DC  3000               	movlw	0
 16485  03DD  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16486  03DE  3008               	movlw	8
 16487  03DF  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16488  03E0  3000               	movlw	0
 16489  03E1  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16490  03E2  3000               	movlw	0
 16491  03E3  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16492  03E4  3000               	movlw	0
 16493  03E5  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16494  03E6  3000               	movlw	0
 16495  03E7  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16496  03E8  3000               	movlw	0
 16497  03E9  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16498  03EA  3000               	movlw	0
 16499  03EB  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16500  03EC  30E7               	movlw	231
 16501  03ED  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16502  03EE  30FF               	movlw	255
 16503  03EF  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16504  03F0  3000               	movlw	0
 16505  03F1  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16506  03F2  3000               	movlw	0
 16507  03F3  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16508  03F4  3004               	movlw	4
 16509  03F5  2C14               	goto	L19
 16510  03F6                     l6435:	
 16511                           ;deca_device.c: 1457: }
 16512                           
 16513                           
 16514                           ;deca_device.c: 1458: else
 16515                           ;deca_device.c: 1459: {
 16516                           ;deca_device.c: 1460: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x2<<11) | 0x400
      +                          U);
 16517  03F6  3000               	movlw	0
 16518  03F7  0141               	movlb	1	; select bank1
 16519  03F8  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16520  03F9  300B               	movlw	11
 16521  03FA  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16522  03FB  3000               	movlw	0
 16523  03FC  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16524  03FD  3008               	movlw	8
 16525  03FE  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16526  03FF  3000               	movlw	0
 16527  0400  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16528  0401  3000               	movlw	0
 16529  0402  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16530  0403  3000               	movlw	0
 16531  0404  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16532  0405  3000               	movlw	0
 16533  0406  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16534  0407  3000               	movlw	0
 16535  0408  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16536  0409  3000               	movlw	0
 16537  040A  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16538  040B  30E7               	movlw	231
 16539  040C  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16540  040D  30FF               	movlw	255
 16541  040E  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16542  040F  3000               	movlw	0
 16543  0410  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16544  0411  3000               	movlw	0
 16545  0412  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16546  0413  3014               	movlw	20
 16547  0414                     L19:	
 16548  0414  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16549  0415  3000               	movlw	0
 16550  0416  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16551  0417  3192  22B6  3181   	fcall	_dwt_modify32bitoffsetreg
 16552  041A                     l603:	
 16553                           
 16554                           ;deca_device.c: 1461: }
 16555                           ;deca_device.c: 1463: }
 16556                           ;deca_device.c: 1464: dwt_modify8bitoffsetreg(0x60000, 0, (uint8_t) ~0x3U, config->rxPAC
      +                          );
 16557  041A  3000               	movlw	0
 16558  041B  0141               	movlb	1	; select bank1
 16559  041C  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 16560  041D  3006               	movlw	6
 16561  041E  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 16562  041F  3000               	movlw	0
 16563  0420  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 16564  0421  3000               	movlw	0
 16565  0422  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 16566  0423  3000               	movlw	0
 16567  0424  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 16568  0425  3000               	movlw	0
 16569  0426  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 16570  0427  3000               	movlw	0
 16571  0428  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 16572  0429  3000               	movlw	0
 16573  042A  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 16574  042B  30FC               	movlw	252
 16575  042C  00D8               	movwf	??_dwt_configure^(0+128)
 16576  042D  0858               	movf	??_dwt_configure^(0+128),w
 16577  042E  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 16578  042F  0142               	movlb	2	; select bank2
 16579  0430  086F               	movf	dwt_configure@config^(0+256),w
 16580  0431  0086               	movwf	6
 16581  0432  3002               	movlw	2	; select bank4/5
 16582  0433  0087               	movwf	7
 16583  0434  3002               	movlw	2	; select bank4/5
 16584  0435  3F42               	moviw [2]fsr1
 16585  0436  0141               	movlb	1	; select bank1
 16586  0437  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 16587  0438  31A6  262A  3181   	fcall	_dwt_modify8bitoffsetreg
 16588                           
 16589                           ;deca_device.c: 1466: dwt_write8bitoffsetreg(0x20000, 0, sts_len-1);
 16590  043B  3000               	movlw	0
 16591  043C  0141               	movlb	1	; select bank1
 16592  043D  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 16593  043E  3002               	movlw	2
 16594  043F  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 16595  0440  3000               	movlw	0
 16596  0441  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 16597  0442  3000               	movlw	0
 16598  0443  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 16599  0444  3000               	movlw	0
 16600  0445  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 16601  0446  3000               	movlw	0
 16602  0447  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 16603  0448  3000               	movlw	0
 16604  0449  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 16605  044A  3000               	movlw	0
 16606  044B  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 16607  044C  0142               	movlb	2	; select bank2
 16608  044D  086A               	movf	dwt_configure@sts_len^(0+256),w
 16609  044E  3EFF               	addlw	255
 16610  044F  0141               	movlb	1	; select bank1
 16611  0450  00D8               	movwf	??_dwt_configure^(0+128)
 16612  0451  0858               	movf	??_dwt_configure^(0+128),w
 16613  0452  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 16614  0453  31A2  2207  3181   	fcall	_dwt_write8bitoffsetreg
 16615                           
 16616                           ;deca_device.c: 1468: if (config->txPreambLength == 0x07)
 16617  0456  0142               	movlb	2	; select bank2
 16618  0457  0A6F               	incf	dwt_configure@config^(0+256),w
 16619  0458  0086               	movwf	6
 16620  0459  3002               	movlw	2	; select bank4/5
 16621  045A  0087               	movwf	7
 16622  045B  3007               	movlw	7
 16623  045C  0601               	xorwf	1,w
 16624  045D  1D03               	btfss	3,2
 16625  045E  2C61               	goto	l6441
 16626                           
 16627                           ;deca_device.c: 1469: {
 16628                           ;deca_device.c: 1470: dwt_setplenfine(8);
 16629  045F  3008               	movlw	8
 16630  0460  2C62               	goto	L20
 16631  0461                     l6441:	
 16632                           ;deca_device.c: 1471: }
 16633                           
 16634                           
 16635                           ;deca_device.c: 1472: else
 16636                           ;deca_device.c: 1473: {
 16637                           ;deca_device.c: 1474: dwt_setplenfine(0);
 16638  0461  3000               	movlw	0
 16639  0462                     L20:	
 16640  0462  31A2  2223  3181   	fcall	_dwt_setplenfine
 16641                           
 16642                           ;deca_device.c: 1475: }
 16643                           ;deca_device.c: 1477: if((config->stsMode & 0x3) == 0x3)
 16644  0465  0142               	movlb	2	; select bank2
 16645  0466  086F               	movf	dwt_configure@config^(0+256),w
 16646  0467  3E0B               	addlw	11
 16647  0468  0086               	movwf	6
 16648  0469  3002               	movlw	2	; select bank4/5
 16649  046A  0087               	movwf	7
 16650  046B  3003               	movlw	3
 16651  046C  0501               	andwf	1,w
 16652  046D  0141               	movlb	1	; select bank1
 16653  046E  00D8               	movwf	??_dwt_configure^(0+128)
 16654  046F  3003               	movlw	3
 16655  0470  0658               	xorwf	??_dwt_configure^(0+128),w
 16656  0471  1D03               	btfss	3,2
 16657  0472  2C8B               	goto	l6447
 16658                           
 16659                           ;deca_device.c: 1478: {
 16660                           ;deca_device.c: 1480: dwt_write32bitoffsetreg(0x6000c, 0, 0xAF5F35CC);
 16661  0473  3000               	movlw	0
 16662  0474  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16663  0475  3006               	movlw	6
 16664  0476  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16665  0477  3000               	movlw	0
 16666  0478  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16667  0479  300C               	movlw	12
 16668  047A  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16669  047B  3000               	movlw	0
 16670  047C  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16671  047D  3000               	movlw	0
 16672  047E  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16673  047F  3000               	movlw	0
 16674  0480  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16675  0481  3000               	movlw	0
 16676  0482  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16677  0483  30AF               	movlw	175
 16678  0484  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16679  0485  305F               	movlw	95
 16680  0486  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16681  0487  3035               	movlw	53
 16682  0488  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16683  0489  30CC               	movlw	204
 16684  048A  2CA3               	goto	L17
 16685  048B                     l6447:	
 16686                           ;deca_device.c: 1481: }
 16687                           
 16688                           
 16689                           ;deca_device.c: 1482: else
 16690                           ;deca_device.c: 1483: {
 16691                           ;deca_device.c: 1485: dwt_write32bitoffsetreg(0x6000c, 0, 0xAF5F584C);
 16692  048B  3000               	movlw	0
 16693  048C  0141               	movlb	1	; select bank1
 16694  048D  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16695  048E  3006               	movlw	6
 16696  048F  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16697  0490  3000               	movlw	0
 16698  0491  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16699  0492  300C               	movlw	12
 16700  0493  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16701  0494  3000               	movlw	0
 16702  0495  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16703  0496  3000               	movlw	0
 16704  0497  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16705  0498  3000               	movlw	0
 16706  0499  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16707  049A  3000               	movlw	0
 16708  049B  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16709  049C  30AF               	movlw	175
 16710  049D  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16711  049E  305F               	movlw	95
 16712  049F  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16713  04A0  3058               	movlw	88
 16714  04A1  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16715  04A2  304C               	movlw	76
 16716  04A3                     L17:	
 16717  04A3  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16718  04A4  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 16719                           
 16720                           ;deca_device.c: 1486: }
 16721                           ;deca_device.c: 1489: temp = dwt_read32bitoffsetreg(0x10014, 0);
 16722  04A7  3000               	movlw	0
 16723  04A8  0140               	movlb	0	; select bank0
 16724  04A9  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 16725  04AA  3001               	movlw	1
 16726  04AB  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 16727  04AC  3000               	movlw	0
 16728  04AD  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 16729  04AE  3014               	movlw	20
 16730  04AF  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 16731  04B0  3000               	movlw	0
 16732  04B1  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 16733  04B2  3000               	movlw	0
 16734  04B3  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 16735  04B4  3000               	movlw	0
 16736  04B5  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 16737  04B6  3000               	movlw	0
 16738  04B7  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 16739  04B8  319C  246C  3181   	fcall	_dwt_read32bitoffsetreg
 16740  04BB  0140               	movlb	0	; select bank0
 16741  04BC  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 16742  04BD  0142               	movlb	2	; select bank2
 16743  04BE  00E8               	movwf	(dwt_configure@temp+3)^(0+256)
 16744  04BF  0140               	movlb	0	; select bank0
 16745  04C0  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 16746  04C1  0142               	movlb	2	; select bank2
 16747  04C2  00E7               	movwf	(dwt_configure@temp+2)^(0+256)
 16748  04C3  0140               	movlb	0	; select bank0
 16749  04C4  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 16750  04C5  0142               	movlb	2	; select bank2
 16751  04C6  00E6               	movwf	(dwt_configure@temp+1)^(0+256)
 16752  04C7  0140               	movlb	0	; select bank0
 16753  04C8  0868               	movf	?_dwt_read32bitoffsetreg,w
 16754  04C9  0142               	movlb	2	; select bank2
 16755  04CA  00E5               	movwf	dwt_configure@temp^(0+256)
 16756                           
 16757                           ;deca_device.c: 1490: temp &= (~(0x1f00U | 0xf8U | 0x6U | 0x1U));
 16758  04CB  3000               	movlw	0
 16759  04CC  05E5               	andwf	dwt_configure@temp^(0+256),f
 16760  04CD  30E0               	movlw	224
 16761  04CE  05E6               	andwf	(dwt_configure@temp+1)^(0+256),f
 16762  04CF  3000               	movlw	0
 16763  04D0  05E7               	andwf	(dwt_configure@temp+2)^(0+256),f
 16764  04D1  3000               	movlw	0
 16765  04D2  05E8               	andwf	(dwt_configure@temp+3)^(0+256),f
 16766                           
 16767                           ;deca_device.c: 1492: if (chan == 9) temp |= 0x1U;
 16768  04D3  3009               	movlw	9
 16769  04D4  066E               	xorwf	dwt_configure@chan^(0+256),w
 16770  04D5  1903               	btfsc	3,2
 16771  04D6  1465               	bsf	dwt_configure@temp^(0+256),0
 16772                           
 16773                           ;deca_device.c: 1494: temp |= (0x1f00U & ((uint32_t)config->rxCode << (8U)));
 16774  04D7  3000               	movlw	0
 16775  04D8  0141               	movlb	1	; select bank1
 16776  04D9  00D8               	movwf	??_dwt_configure^(0+128)
 16777  04DA  301F               	movlw	31
 16778  04DB  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 16779  04DC  3000               	movlw	0
 16780  04DD  00DA               	movwf	(??_dwt_configure^(0+128)+2)
 16781  04DE  3000               	movlw	0
 16782  04DF  00DB               	movwf	(??_dwt_configure^(0+128)+3)
 16783  04E0  0142               	movlb	2	; select bank2
 16784  04E1  086F               	movf	dwt_configure@config^(0+256),w
 16785  04E2  3E04               	addlw	4
 16786  04E3  0086               	movwf	6
 16787  04E4  3002               	movlw	2	; select bank4/5
 16788  04E5  0087               	movwf	7
 16789  04E6  0801               	movf	1,w
 16790  04E7  0141               	movlb	1	; select bank1
 16791  04E8  00DC               	movwf	(??_dwt_configure+4)^(0+128)
 16792  04E9  01DD               	clrf	((??_dwt_configure+4)^(0+128)+1)
 16793  04EA  01DE               	clrf	((??_dwt_configure+4)^(0+128)+2)
 16794  04EB  01DF               	clrf	((??_dwt_configure+4)^(0+128)+3)
 16795  04EC  3008               	movlw	8
 16796  04ED                     u6215:	
 16797  04ED  35DC               	lslf	(??_dwt_configure+4)^(0+128),f
 16798  04EE  0DDD               	rlf	((??_dwt_configure+4)^(0+128)+1),f
 16799  04EF  0DDE               	rlf	((??_dwt_configure+4)^(0+128)+2),f
 16800  04F0  0DDF               	rlf	((??_dwt_configure+4)^(0+128)+3),f
 16801  04F1  0B89               	decfsz	9,f
 16802  04F2  2CED               	goto	u6215
 16803  04F3  085C               	movf	(??_dwt_configure+4)^(0+128),w
 16804  04F4  05D8               	andwf	??_dwt_configure^(0+128),f
 16805  04F5  085D               	movf	(??_dwt_configure+5)^(0+128),w
 16806  04F6  05D9               	andwf	(??_dwt_configure^(0+128)+1),f
 16807  04F7  085E               	movf	(??_dwt_configure+6)^(0+128),w
 16808  04F8  05DA               	andwf	(??_dwt_configure^(0+128)+2),f
 16809  04F9  085F               	movf	(??_dwt_configure+7)^(0+128),w
 16810  04FA  05DB               	andwf	(??_dwt_configure^(0+128)+3),f
 16811  04FB  0858               	movf	??_dwt_configure^(0+128),w
 16812  04FC  0142               	movlb	2	; select bank2
 16813  04FD  04E5               	iorwf	dwt_configure@temp^(0+256),f
 16814  04FE  0141               	movlb	1	; select bank1
 16815  04FF  0859               	movf	(??_dwt_configure+1)^(0+128),w
 16816  0500  0142               	movlb	2	; select bank2
 16817  0501  04E6               	iorwf	(dwt_configure@temp+1)^(0+256),f
 16818  0502  0141               	movlb	1	; select bank1
 16819  0503  085A               	movf	(??_dwt_configure+2)^(0+128),w
 16820  0504  0142               	movlb	2	; select bank2
 16821  0505  04E7               	iorwf	(dwt_configure@temp+2)^(0+256),f
 16822  0506  0141               	movlb	1	; select bank1
 16823  0507  085B               	movf	(??_dwt_configure+3)^(0+128),w
 16824  0508  0142               	movlb	2	; select bank2
 16825  0509  04E8               	iorwf	(dwt_configure@temp+3)^(0+256),f
 16826                           
 16827                           ;deca_device.c: 1495: temp |= (0xf8U & ((uint32_t)config->txCode << (3U)));
 16828  050A  086F               	movf	dwt_configure@config^(0+256),w
 16829  050B  3E03               	addlw	3
 16830  050C  0086               	movwf	6
 16831  050D  3002               	movlw	2	; select bank4/5
 16832  050E  0087               	movwf	7
 16833  050F  0801               	movf	1,w
 16834  0510  0141               	movlb	1	; select bank1
 16835  0511  00D8               	movwf	??_dwt_configure^(0+128)
 16836  0512  3002               	movlw	2
 16837  0513                     u6225:	
 16838  0513  35D8               	lslf	??_dwt_configure^(0+128),f
 16839  0514  3EFF               	addlw	-1
 16840  0515  1D03               	skipz
 16841  0516  2D13               	goto	u6225
 16842  0517  3558               	lslf	??_dwt_configure^(0+128),w
 16843  0518  39F8               	andlw	248
 16844  0519  00D9               	movwf	(??_dwt_configure+1)^(0+128)
 16845  051A  01DA               	clrf	((??_dwt_configure+1)^(0+128)+1)
 16846  051B  01DB               	clrf	((??_dwt_configure+1)^(0+128)+2)
 16847  051C  01DC               	clrf	((??_dwt_configure+1)^(0+128)+3)
 16848  051D  0859               	movf	(??_dwt_configure+1)^(0+128),w
 16849  051E  0142               	movlb	2	; select bank2
 16850  051F  04E5               	iorwf	dwt_configure@temp^(0+256),f
 16851  0520  0141               	movlb	1	; select bank1
 16852  0521  085A               	movf	(??_dwt_configure+2)^(0+128),w
 16853  0522  0142               	movlb	2	; select bank2
 16854  0523  04E6               	iorwf	(dwt_configure@temp+1)^(0+256),f
 16855  0524  0141               	movlb	1	; select bank1
 16856  0525  085B               	movf	(??_dwt_configure+3)^(0+128),w
 16857  0526  0142               	movlb	2	; select bank2
 16858  0527  04E7               	iorwf	(dwt_configure@temp+2)^(0+256),f
 16859  0528  0141               	movlb	1	; select bank1
 16860  0529  085C               	movf	(??_dwt_configure+4)^(0+128),w
 16861  052A  0142               	movlb	2	; select bank2
 16862  052B  04E8               	iorwf	(dwt_configure@temp+3)^(0+256),f
 16863                           
 16864                           ;deca_device.c: 1496: temp |= (0x6U & ((uint32_t)config->sfdType << (1U)));
 16865  052C  086F               	movf	dwt_configure@config^(0+256),w
 16866  052D  3E05               	addlw	5
 16867  052E  0086               	movwf	6
 16868  052F  3002               	movlw	2	; select bank4/5
 16869  0530  0087               	movwf	7
 16870  0531  3501               	lslf	1,w
 16871  0532  3906               	andlw	6
 16872  0533  0141               	movlb	1	; select bank1
 16873  0534  00D8               	movwf	??_dwt_configure^(0+128)
 16874  0535  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 16875  0536  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 16876  0537  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 16877  0538  0858               	movf	??_dwt_configure^(0+128),w
 16878  0539  0142               	movlb	2	; select bank2
 16879  053A  04E5               	iorwf	dwt_configure@temp^(0+256),f
 16880  053B  0141               	movlb	1	; select bank1
 16881  053C  0859               	movf	(??_dwt_configure+1)^(0+128),w
 16882  053D  0142               	movlb	2	; select bank2
 16883  053E  04E6               	iorwf	(dwt_configure@temp+1)^(0+256),f
 16884  053F  0141               	movlb	1	; select bank1
 16885  0540  085A               	movf	(??_dwt_configure+2)^(0+128),w
 16886  0541  0142               	movlb	2	; select bank2
 16887  0542  04E7               	iorwf	(dwt_configure@temp+2)^(0+256),f
 16888  0543  0141               	movlb	1	; select bank1
 16889  0544  085B               	movf	(??_dwt_configure+3)^(0+128),w
 16890  0545  0142               	movlb	2	; select bank2
 16891  0546  04E8               	iorwf	(dwt_configure@temp+3)^(0+256),f
 16892                           
 16893                           ;deca_device.c: 1498: dwt_write32bitoffsetreg(0x10014, 0, temp);
 16894  0547  3000               	movlw	0
 16895  0548  0141               	movlb	1	; select bank1
 16896  0549  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16897  054A  3001               	movlw	1
 16898  054B  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16899  054C  3000               	movlw	0
 16900  054D  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16901  054E  3014               	movlw	20
 16902  054F  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16903  0550  3000               	movlw	0
 16904  0551  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16905  0552  3000               	movlw	0
 16906  0553  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16907  0554  3000               	movlw	0
 16908  0555  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16909  0556  3000               	movlw	0
 16910  0557  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16911  0558  0142               	movlb	2	; select bank2
 16912  0559  0868               	movf	(dwt_configure@temp+3)^(0+256),w
 16913  055A  0141               	movlb	1	; select bank1
 16914  055B  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16915  055C  0142               	movlb	2	; select bank2
 16916  055D  0867               	movf	(dwt_configure@temp+2)^(0+256),w
 16917  055E  0141               	movlb	1	; select bank1
 16918  055F  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16919  0560  0142               	movlb	2	; select bank2
 16920  0561  0866               	movf	(dwt_configure@temp+1)^(0+256),w
 16921  0562  0141               	movlb	1	; select bank1
 16922  0563  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16923  0564  0142               	movlb	2	; select bank2
 16924  0565  0865               	movf	dwt_configure@temp^(0+256),w
 16925  0566  0141               	movlb	1	; select bank1
 16926  0567  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16927  0568  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 16928                           
 16929                           ;deca_device.c: 1502: dwt_modify32bitoffsetreg(0x24, 0, ~(0x400U | 0xf000U),
 16930                           ;deca_device.c: 1503: ((uint32_t)config->dataRate << (10U))
 16931                           ;deca_device.c: 1504: | ((uint32_t) config->txPreambLength) << (12U));
 16932  056B  3000               	movlw	0
 16933  056C  0141               	movlb	1	; select bank1
 16934  056D  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16935  056E  3000               	movlw	0
 16936  056F  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16937  0570  3000               	movlw	0
 16938  0571  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16939  0572  3024               	movlw	36
 16940  0573  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16941  0574  3000               	movlw	0
 16942  0575  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16943  0576  3000               	movlw	0
 16944  0577  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16945  0578  3000               	movlw	0
 16946  0579  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16947  057A  3000               	movlw	0
 16948  057B  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16949  057C  3000               	movlw	0
 16950  057D  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16951  057E  3000               	movlw	0
 16952  057F  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16953  0580  300B               	movlw	11
 16954  0581  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16955  0582  30FF               	movlw	255
 16956  0583  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16957  0584  0142               	movlb	2	; select bank2
 16958  0585  0A6F               	incf	dwt_configure@config^(0+256),w
 16959  0586  0086               	movwf	6
 16960  0587  3002               	movlw	2	; select bank4/5
 16961  0588  0087               	movwf	7
 16962  0589  0801               	movf	1,w
 16963  058A  0141               	movlb	1	; select bank1
 16964  058B  00D8               	movwf	??_dwt_configure^(0+128)
 16965  058C  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 16966  058D  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 16967  058E  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 16968  058F  300C               	movlw	12
 16969  0590                     u6235:	
 16970  0590  35D8               	lslf	??_dwt_configure^(0+128),f
 16971  0591  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 16972  0592  0DDA               	rlf	(??_dwt_configure^(0+128)+2),f
 16973  0593  0DDB               	rlf	(??_dwt_configure^(0+128)+3),f
 16974  0594  0B89               	decfsz	9,f
 16975  0595  2D90               	goto	u6235
 16976  0596  0142               	movlb	2	; select bank2
 16977  0597  086F               	movf	dwt_configure@config^(0+256),w
 16978  0598  3E06               	addlw	6
 16979  0599  0086               	movwf	6
 16980  059A  3002               	movlw	2	; select bank4/5
 16981  059B  0087               	movwf	7
 16982  059C  0801               	movf	1,w
 16983  059D  0141               	movlb	1	; select bank1
 16984  059E  00DC               	movwf	(??_dwt_configure+4)^(0+128)
 16985  059F  01DD               	clrf	((??_dwt_configure+4)^(0+128)+1)
 16986  05A0  01DE               	clrf	((??_dwt_configure+4)^(0+128)+2)
 16987  05A1  01DF               	clrf	((??_dwt_configure+4)^(0+128)+3)
 16988  05A2  300A               	movlw	10
 16989  05A3                     u6245:	
 16990  05A3  35DC               	lslf	(??_dwt_configure+4)^(0+128),f
 16991  05A4  0DDD               	rlf	((??_dwt_configure+4)^(0+128)+1),f
 16992  05A5  0DDE               	rlf	((??_dwt_configure+4)^(0+128)+2),f
 16993  05A6  0DDF               	rlf	((??_dwt_configure+4)^(0+128)+3),f
 16994  05A7  0B89               	decfsz	9,f
 16995  05A8  2DA3               	goto	u6245
 16996  05A9  0858               	movf	??_dwt_configure^(0+128),w
 16997  05AA  045C               	iorwf	(??_dwt_configure+4)^(0+128),w
 16998  05AB  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16999  05AC  0859               	movf	(??_dwt_configure+1)^(0+128),w
 17000  05AD  045D               	iorwf	(??_dwt_configure+5)^(0+128),w
 17001  05AE  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 17002  05AF  085A               	movf	(??_dwt_configure+2)^(0+128),w
 17003  05B0  045E               	iorwf	(??_dwt_configure+6)^(0+128),w
 17004  05B1  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 17005  05B2  085B               	movf	(??_dwt_configure+3)^(0+128),w
 17006  05B3  045F               	iorwf	(??_dwt_configure+7)^(0+128),w
 17007  05B4  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 17008  05B5  3192  22B6  3181   	fcall	_dwt_modify32bitoffsetreg
 17009                           
 17010                           ;deca_device.c: 1507: if (config->sfdTO == 0)
 17011  05B8  0142               	movlb	2	; select bank2
 17012  05B9  086F               	movf	dwt_configure@config^(0+256),w
 17013  05BA  3E09               	addlw	9
 17014  05BB  0086               	movwf	6
 17015  05BC  3002               	movlw	2	; select bank4/5
 17016  05BD  0087               	movwf	7
 17017  05BE  0016               	moviw fsr1++
 17018  05BF  0401               	iorwf	1,w
 17019  05C0  1D03               	btfss	3,2
 17020  05C1  2DCB               	goto	l6463
 17021                           
 17022                           ;deca_device.c: 1508: {
 17023                           ;deca_device.c: 1509: config->sfdTO = 129;
 17024  05C2  086F               	movf	dwt_configure@config^(0+256),w
 17025  05C3  3E09               	addlw	9
 17026  05C4  0086               	movwf	6
 17027  05C5  3002               	movlw	2	; select bank4/5
 17028  05C6  0087               	movwf	7
 17029  05C7  3081               	movlw	129
 17030  05C8  3FC0               	movwi [0]fsr1
 17031  05C9  3000               	movlw	0
 17032  05CA  3FC1               	movwi [1]fsr1
 17033  05CB                     l6463:	
 17034                           
 17035                           ;deca_device.c: 1510: }
 17036                           ;deca_device.c: 1511: dwt_write16bitoffsetreg(0x60000, 2, config->sfdTO);
 17037  05CB  3000               	movlw	0
 17038  05CC  0141               	movlb	1	; select bank1
 17039  05CD  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 17040  05CE  3006               	movlw	6
 17041  05CF  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 17042  05D0  3000               	movlw	0
 17043  05D1  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 17044  05D2  3000               	movlw	0
 17045  05D3  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 17046  05D4  3000               	movlw	0
 17047  05D5  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 17048  05D6  3000               	movlw	0
 17049  05D7  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 17050  05D8  3000               	movlw	0
 17051  05D9  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 17052  05DA  3002               	movlw	2
 17053  05DB  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 17054  05DC  0142               	movlb	2	; select bank2
 17055  05DD  086F               	movf	dwt_configure@config^(0+256),w
 17056  05DE  3E09               	addlw	9
 17057  05DF  0086               	movwf	6
 17058  05E0  3002               	movlw	2	; select bank4/5
 17059  05E1  0087               	movwf	7
 17060  05E2  3F40               	moviw [0]fsr1
 17061  05E3  0141               	movlb	1	; select bank1
 17062  05E4  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 17063  05E5  3F41               	moviw [1]fsr1
 17064  05E6  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 17065  05E7  31A3  23CF  3181   	fcall	_dwt_write16bitoffsetreg
 17066                           
 17067                           ;deca_device.c: 1514: if (chan == 9)
 17068  05EA  3009               	movlw	9
 17069  05EB  0142               	movlb	2	; select bank2
 17070  05EC  066E               	xorwf	dwt_configure@chan^(0+256),w
 17071  05ED  1D03               	btfss	3,2
 17072  05EE  2E40               	goto	l6469
 17073                           
 17074                           ;deca_device.c: 1515: {
 17075                           ;deca_device.c: 1517: dwt_write32bitoffsetreg(0x7001c, 0, 0x1C010034UL);
 17076  05EF  3000               	movlw	0
 17077  05F0  0141               	movlb	1	; select bank1
 17078  05F1  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17079  05F2  3007               	movlw	7
 17080  05F3  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17081  05F4  3000               	movlw	0
 17082  05F5  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17083  05F6  301C               	movlw	28
 17084  05F7  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17085  05F8  3000               	movlw	0
 17086  05F9  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17087  05FA  3000               	movlw	0
 17088  05FB  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17089  05FC  3000               	movlw	0
 17090  05FD  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17091  05FE  3000               	movlw	0
 17092  05FF  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17093  0600  301C               	movlw	28
 17094  0601  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17095  0602  3001               	movlw	1
 17096  0603  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17097  0604  3000               	movlw	0
 17098  0605  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17099  0606  3034               	movlw	52
 17100  0607  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 17101  0608  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 17102                           
 17103                           ;deca_device.c: 1518: dwt_write16bitoffsetreg(0x90000, 0, 0x0F3C);
 17104  060B  3000               	movlw	0
 17105  060C  0141               	movlb	1	; select bank1
 17106  060D  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 17107  060E  3009               	movlw	9
 17108  060F  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 17109  0610  3000               	movlw	0
 17110  0611  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 17111  0612  3000               	movlw	0
 17112  0613  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 17113  0614  3000               	movlw	0
 17114  0615  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 17115  0616  3000               	movlw	0
 17116  0617  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 17117  0618  3000               	movlw	0
 17118  0619  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 17119  061A  3000               	movlw	0
 17120  061B  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 17121  061C  303C               	movlw	60
 17122  061D  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 17123  061E  300F               	movlw	15
 17124  061F  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 17125  0620  31A3  23CF  3181   	fcall	_dwt_write16bitoffsetreg
 17126                           
 17127                           ;deca_device.c: 1520: dwt_write32bitoffsetreg(0x70010, 0, 0x08B5A833UL);
 17128  0623  3000               	movlw	0
 17129  0624  0141               	movlb	1	; select bank1
 17130  0625  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17131  0626  3007               	movlw	7
 17132  0627  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17133  0628  3000               	movlw	0
 17134  0629  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17135  062A  3010               	movlw	16
 17136  062B  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17137  062C  3000               	movlw	0
 17138  062D  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17139  062E  3000               	movlw	0
 17140  062F  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17141  0630  3000               	movlw	0
 17142  0631  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17143  0632  3000               	movlw	0
 17144  0633  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17145  0634  3008               	movlw	8
 17146  0635  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17147  0636  30B5               	movlw	181
 17148  0637  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17149  0638  30A8               	movlw	168
 17150  0639  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17151  063A  3033               	movlw	51
 17152  063B  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 17153  063C  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 17154                           
 17155                           ;deca_device.c: 1521: }
 17156  063F  2E74               	goto	l618
 17157  0640                     l6469:	
 17158                           
 17159                           ;deca_device.c: 1522: else
 17160                           ;deca_device.c: 1523: {
 17161                           ;deca_device.c: 1525: dwt_write32bitoffsetreg(0x7001c, 0, 0x1C071134UL);
 17162  0640  3000               	movlw	0
 17163  0641  0141               	movlb	1	; select bank1
 17164  0642  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17165  0643  3007               	movlw	7
 17166  0644  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17167  0645  3000               	movlw	0
 17168  0646  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17169  0647  301C               	movlw	28
 17170  0648  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17171  0649  3000               	movlw	0
 17172  064A  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17173  064B  3000               	movlw	0
 17174  064C  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17175  064D  3000               	movlw	0
 17176  064E  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17177  064F  3000               	movlw	0
 17178  0650  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17179  0651  301C               	movlw	28
 17180  0652  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17181  0653  3007               	movlw	7
 17182  0654  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17183  0655  3011               	movlw	17
 17184  0656  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17185  0657  3034               	movlw	52
 17186  0658  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 17187  0659  31A7  27B4  3181   	fcall	_dwt_write32bitoffsetreg
 17188                           
 17189                           ;deca_device.c: 1526: dwt_write16bitoffsetreg(0x90000, 0, 0x1F3C);
 17190  065C  3000               	movlw	0
 17191  065D  0141               	movlb	1	; select bank1
 17192  065E  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 17193  065F  3009               	movlw	9
 17194  0660  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 17195  0661  3000               	movlw	0
 17196  0662  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 17197  0663  3000               	movlw	0
 17198  0664  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 17199  0665  3000               	movlw	0
 17200  0666  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 17201  0667  3000               	movlw	0
 17202  0668  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 17203  0669  3000               	movlw	0
 17204  066A  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 17205  066B  3000               	movlw	0
 17206  066C  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 17207  066D  303C               	movlw	60
 17208  066E  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 17209  066F  301F               	movlw	31
 17210  0670  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 17211  0671  31A3  23CF  3181   	fcall	_dwt_write16bitoffsetreg
 17212  0674                     l618:	
 17213                           
 17214                           ;deca_device.c: 1527: }
 17215                           ;deca_device.c: 1529: dwt_write8bitoffsetreg(0x70050, 1, 0x14);
 17216  0674  3000               	movlw	0
 17217  0675  0141               	movlb	1	; select bank1
 17218  0676  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 17219  0677  3007               	movlw	7
 17220  0678  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 17221  0679  3000               	movlw	0
 17222  067A  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 17223  067B  3050               	movlw	80
 17224  067C  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 17225  067D  3000               	movlw	0
 17226  067E  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 17227  067F  3000               	movlw	0
 17228  0680  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 17229  0681  3000               	movlw	0
 17230  0682  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 17231  0683  3001               	movlw	1
 17232  0684  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 17233  0685  3014               	movlw	20
 17234  0686  00D8               	movwf	??_dwt_configure^(0+128)
 17235  0687  0858               	movf	??_dwt_configure^(0+128),w
 17236  0688  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 17237  0689  31A2  2207  3181   	fcall	_dwt_write8bitoffsetreg
 17238                           
 17239                           ;deca_device.c: 1530: dwt_write8bitoffsetreg(0x70018, 2, 0x0E);
 17240  068C  3000               	movlw	0
 17241  068D  0141               	movlb	1	; select bank1
 17242  068E  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 17243  068F  3007               	movlw	7
 17244  0690  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 17245  0691  3000               	movlw	0
 17246  0692  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 17247  0693  3018               	movlw	24
 17248  0694  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 17249  0695  3000               	movlw	0
 17250  0696  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 17251  0697  3000               	movlw	0
 17252  0698  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 17253  0699  3000               	movlw	0
 17254  069A  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 17255  069B  3002               	movlw	2
 17256  069C  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 17257  069D  300E               	movlw	14
 17258  069E  00D8               	movwf	??_dwt_configure^(0+128)
 17259  069F  0858               	movf	??_dwt_configure^(0+128),w
 17260  06A0  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 17261  06A1  31A2  2207  3181   	fcall	_dwt_write8bitoffsetreg
 17262                           
 17263                           ;deca_device.c: 1531: dwt_write8bitoffsetreg(0x90008, 0, 0x81);
 17264  06A4  3000               	movlw	0
 17265  06A5  0141               	movlb	1	; select bank1
 17266  06A6  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 17267  06A7  3009               	movlw	9
 17268  06A8  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 17269  06A9  3000               	movlw	0
 17270  06AA  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 17271  06AB  3008               	movlw	8
 17272  06AC  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 17273  06AD  3000               	movlw	0
 17274  06AE  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 17275  06AF  3000               	movlw	0
 17276  06B0  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 17277  06B1  3000               	movlw	0
 17278  06B2  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 17279  06B3  3000               	movlw	0
 17280  06B4  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 17281  06B5  3081               	movlw	129
 17282  06B6  00D8               	movwf	??_dwt_configure^(0+128)
 17283  06B7  0858               	movf	??_dwt_configure^(0+128),w
 17284  06B8  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 17285  06B9  31A2  2207  3181   	fcall	_dwt_write8bitoffsetreg
 17286                           
 17287                           ;deca_device.c: 1534: dwt_write8bitoffsetreg(0x44, 0, 0x2U);
 17288  06BC  3000               	movlw	0
 17289  06BD  0141               	movlb	1	; select bank1
 17290  06BE  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 17291  06BF  3000               	movlw	0
 17292  06C0  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 17293  06C1  3000               	movlw	0
 17294  06C2  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 17295  06C3  3044               	movlw	68
 17296  06C4  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 17297  06C5  3000               	movlw	0
 17298  06C6  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 17299  06C7  3000               	movlw	0
 17300  06C8  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 17301  06C9  3000               	movlw	0
 17302  06CA  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 17303  06CB  3000               	movlw	0
 17304  06CC  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 17305  06CD  3002               	movlw	2
 17306  06CE  00D8               	movwf	??_dwt_configure^(0+128)
 17307  06CF  0858               	movf	??_dwt_configure^(0+128),w
 17308  06D0  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 17309  06D1  31A2  2207  3181   	fcall	_dwt_write8bitoffsetreg
 17310                           
 17311                           ;deca_device.c: 1537: dwt_setdwstate(0x1);
 17312  06D4  3001               	movlw	1
 17313  06D5  0141               	movlb	1	; select bank1
 17314  06D6  00B8               	movwf	dwt_setdwstate@state^(0+128)
 17315  06D7  3000               	movlw	0
 17316  06D8  00B9               	movwf	(dwt_setdwstate@state^(0+128)+1)
 17317  06D9  3194  246B  3181   	fcall	_dwt_setdwstate
 17318                           
 17319                           ;deca_device.c: 1539: for (flag=1,cnt=0;cnt<(6);cnt++)
 17320  06DC  0142               	movlb	2	; select bank2
 17321  06DD  01E3               	clrf	dwt_configure@flag^(0+256)
 17322  06DE  0AE3               	incf	dwt_configure@flag^(0+256),f
 17323  06DF  01E9               	clrf	dwt_configure@cnt^(0+256)
 17324  06E0  3006               	movlw	6
 17325  06E1  0269               	subwf	dwt_configure@cnt^(0+256),w
 17326  06E2  1803               	btfsc	3,0
 17327  06E3  2F13               	goto	l6489
 17328  06E4                     l6479:	
 17329                           
 17330                           ;deca_device.c: 1540: {
 17331                           ;deca_device.c: 1541: Sleep(1);
 17332  06E4  3000               	movlw	0
 17333  06E5  00F3               	movwf	Sleep@time+3
 17334  06E6  3000               	movlw	0
 17335  06E7  00F2               	movwf	Sleep@time+2
 17336  06E8  3000               	movlw	0
 17337  06E9  00F1               	movwf	Sleep@time+1
 17338  06EA  3001               	movlw	1
 17339  06EB  00F0               	movwf	Sleep@time
 17340  06EC  31A4  241F  3181   	fcall	_Sleep
 17341                           
 17342                           ;deca_device.c: 1542: if ((dwt_read8bitoffsetreg(0x44, 0) & 0x2U))
 17343  06EF  3000               	movlw	0
 17344  06F0  0140               	movlb	0	; select bank0
 17345  06F1  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 17346  06F2  3000               	movlw	0
 17347  06F3  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 17348  06F4  3000               	movlw	0
 17349  06F5  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 17350  06F6  3044               	movlw	68
 17351  06F7  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 17352  06F8  3000               	movlw	0
 17353  06F9  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 17354  06FA  3000               	movlw	0
 17355  06FB  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 17356  06FC  3000               	movlw	0
 17357  06FD  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 17358  06FE  3000               	movlw	0
 17359  06FF  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 17360  0700  31A2  22CC  3181   	fcall	_dwt_read8bitoffsetreg
 17361  0703  3902               	andlw	2
 17362  0704  1903               	btfsc	3,2
 17363  0705  2F09               	goto	l6485
 17364                           
 17365                           ;deca_device.c: 1543: {
 17366                           ;deca_device.c: 1544: flag=0;
 17367  0706  0142               	movlb	2	; select bank2
 17368  0707  01E3               	clrf	dwt_configure@flag^(0+256)
 17369                           
 17370                           ;deca_device.c: 1545: break;
 17371  0708  2F13               	goto	l6489
 17372  0709                     l6485:	
 17373  0709  3001               	movlw	1
 17374  070A  0141               	movlb	1	; select bank1
 17375  070B  00D8               	movwf	??_dwt_configure^(0+128)
 17376  070C  0858               	movf	??_dwt_configure^(0+128),w
 17377  070D  0142               	movlb	2	; select bank2
 17378  070E  07E9               	addwf	dwt_configure@cnt^(0+256),f
 17379  070F  3006               	movlw	6
 17380  0710  0269               	subwf	dwt_configure@cnt^(0+256),w
 17381  0711  1C03               	skipc
 17382  0712  2EE4               	goto	l6479
 17383  0713                     l6489:	
 17384                           
 17385                           ;deca_device.c: 1546: }
 17386                           ;deca_device.c: 1547: }
 17387                           ;deca_device.c: 1548: if (flag)
 17388  0713  0863               	movf	dwt_configure@flag^(0+256),w
 17389  0714  1903               	btfsc	3,2
 17390  0715  2F1C               	goto	l6495
 17391                           
 17392                           ;deca_device.c: 1549: {
 17393                           ;deca_device.c: 1550: return (-1);
 17394  0716  30FF               	movlw	255
 17395  0717  0141               	movlb	1	; select bank1
 17396  0718  00D6               	movwf	?_dwt_configure^(0+128)
 17397  0719  30FF               	movlw	255
 17398  071A  00D7               	movwf	(?_dwt_configure^(0+128)+1)
 17399  071B  0008               	return
 17400  071C                     l6495:	
 17401                           
 17402                           ;deca_device.c: 1551: }
 17403                           ;deca_device.c: 1553: if ((config->rxCode >= 9) && (config->rxCode <= 24))
 17404  071C  0142               	movlb	2	; select bank2
 17405  071D  086F               	movf	dwt_configure@config^(0+256),w
 17406  071E  3E04               	addlw	4
 17407  071F  0086               	movwf	6
 17408  0720  3002               	movlw	2	; select bank4/5
 17409  0721  0087               	movwf	7
 17410  0722  3009               	movlw	9
 17411  0723  0201               	subwf	1,w
 17412  0724  1C03               	skipc
 17413  0725  2F67               	goto	l6505
 17414  0726  086F               	movf	dwt_configure@config^(0+256),w
 17415  0727  3E04               	addlw	4
 17416  0728  0086               	movwf	6
 17417  0729  3002               	movlw	2	; select bank4/5
 17418  072A  0087               	movwf	7
 17419  072B  3019               	movlw	25
 17420  072C  0201               	subwf	1,w
 17421  072D  1803               	skipnc
 17422  072E  2F67               	goto	l6505
 17423                           
 17424                           ;deca_device.c: 1554: {
 17425                           ;deca_device.c: 1557: if (pdw3000local->dgc_otp_set == DWT_DGC_LOAD_FROM_OTP)
 17426  072F  0141               	movlb	1	; select bank1
 17427  0730  086F               	movf	_pdw3000local^(0+128),w
 17428  0731  3E09               	addlw	9
 17429  0732  0086               	movwf	6
 17430  0733  3002               	movlw	2	; select bank4/5
 17431  0734  0087               	movwf	7
 17432  0735  0301               	decf	1,w
 17433  0736  1D03               	btfss	3,2
 17434  0737  2F3E               	goto	l6503
 17435                           
 17436                           ;deca_device.c: 1558: {
 17437                           ;deca_device.c: 1559: _dwt_kick_dgc_on_wakeup(chan);
 17438  0738  0142               	movlb	2	; select bank2
 17439  0739  086E               	movf	dwt_configure@chan^(0+256),w
 17440  073A  3199  216F  3181   	fcall	__dwt_kick_dgc_on_wakeup
 17441                           
 17442                           ;deca_device.c: 1560: }
 17443  073D  2F4A               	goto	l626
 17444  073E                     l6503:	
 17445                           
 17446                           ;deca_device.c: 1562: else
 17447                           ;deca_device.c: 1563: {
 17448                           ;deca_device.c: 1564: dwt_configmrxlut(chan);
 17449  073E  0142               	movlb	2	; select bank2
 17450  073F  086E               	movf	dwt_configure@chan^(0+256),w
 17451  0740  0141               	movlb	1	; select bank1
 17452  0741  00D8               	movwf	??_dwt_configure^(0+128)
 17453  0742  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 17454  0743  0858               	movf	??_dwt_configure^(0+128),w
 17455  0744  00B8               	movwf	dwt_configmrxlut@channel^(0+128)
 17456  0745  0859               	movf	(??_dwt_configure+1)^(0+128),w
 17457  0746  00B9               	movwf	(dwt_configmrxlut@channel+1)^(0+128)
 17458  0747  3196  2687  3181   	fcall	_dwt_configmrxlut
 17459  074A                     l626:	
 17460                           
 17461                           ;deca_device.c: 1565: }
 17462                           ;deca_device.c: 1566: dwt_modify16bitoffsetreg(0x30018, 0x0, (uint16_t)~0x7e00U, 0x32 <<
      +                           (9U));
 17463  074A  3000               	movlw	0
 17464  074B  0141               	movlb	1	; select bank1
 17465  074C  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 17466  074D  3003               	movlw	3
 17467  074E  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 17468  074F  3000               	movlw	0
 17469  0750  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 17470  0751  3018               	movlw	24
 17471  0752  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 17472  0753  3000               	movlw	0
 17473  0754  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 17474  0755  3000               	movlw	0
 17475  0756  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 17476  0757  3000               	movlw	0
 17477  0758  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 17478  0759  3000               	movlw	0
 17479  075A  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 17480  075B  30FF               	movlw	255
 17481  075C  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 17482  075D  3081               	movlw	129
 17483  075E  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 17484  075F  3000               	movlw	0
 17485  0760  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 17486  0761  3064               	movlw	100
 17487  0762  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 17488  0763  31A6  26A2  3181   	fcall	_dwt_modify16bitoffsetreg
 17489                           
 17490                           ;deca_device.c: 1567: }
 17491  0766  2F80               	goto	l627
 17492  0767                     l6505:	
 17493                           
 17494                           ;deca_device.c: 1568: else
 17495                           ;deca_device.c: 1569: {
 17496                           ;deca_device.c: 1570: dwt_modify8bitoffsetreg(0x30018, 0x0, (uint8_t)~0x1U, 0);
 17497  0767  3000               	movlw	0
 17498  0768  0141               	movlb	1	; select bank1
 17499  0769  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 17500  076A  3003               	movlw	3
 17501  076B  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 17502  076C  3000               	movlw	0
 17503  076D  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 17504  076E  3018               	movlw	24
 17505  076F  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 17506  0770  3000               	movlw	0
 17507  0771  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 17508  0772  3000               	movlw	0
 17509  0773  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 17510  0774  3000               	movlw	0
 17511  0775  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 17512  0776  3000               	movlw	0
 17513  0777  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 17514  0778  30FE               	movlw	254
 17515  0779  00D8               	movwf	??_dwt_configure^(0+128)
 17516  077A  0858               	movf	??_dwt_configure^(0+128),w
 17517  077B  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 17518  077C  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 17519  077D  31A6  262A  3181   	fcall	_dwt_modify8bitoffsetreg
 17520  0780                     l627:	
 17521                           
 17522                           ;deca_device.c: 1571: }
 17523                           ;deca_device.c: 1575: error = dwt_pgf_cal(1);
 17524  0780  3001               	movlw	1
 17525  0781  0141               	movlb	1	; select bank1
 17526  0782  00CD               	movwf	dwt_pgf_cal@ldoen^(0+128)
 17527  0783  3000               	movlw	0
 17528  0784  00CE               	movwf	(dwt_pgf_cal@ldoen^(0+128)+1)
 17529  0785  319B  2397         	fcall	_dwt_pgf_cal
 17530  0787  0141               	movlb	1	; select bank1
 17531  0788  084E               	movf	(?_dwt_pgf_cal+1)^(0+128),w
 17532  0789  0142               	movlb	2	; select bank2
 17533  078A  00DE               	movwf	(dwt_configure@error+1)^(0+256)
 17534  078B  0141               	movlb	1	; select bank1
 17535  078C  084D               	movf	?_dwt_pgf_cal^(0+128),w
 17536  078D  0142               	movlb	2	; select bank2
 17537  078E  00DD               	movwf	dwt_configure@error^(0+256)
 17538                           
 17539                           ;deca_device.c: 1578: return error;
 17540  078F  085E               	movf	(dwt_configure@error+1)^(0+256),w
 17541  0790  0141               	movlb	1	; select bank1
 17542  0791  00D7               	movwf	(?_dwt_configure+1)^(0+128)
 17543  0792  0142               	movlb	2	; select bank2
 17544  0793  085D               	movf	dwt_configure@error^(0+256),w
 17545  0794  0141               	movlb	1	; select bank1
 17546  0795  00D6               	movwf	?_dwt_configure^(0+128)
 17547  0796  0008               	return
 17548  0797                     __end_of_dwt_configure:	
 17549                           
 17550                           	psect	text42
 17551  1BFE                     __ptext42:	
 17552 ;; *************** function _get_sts_mnth *****************
 17553 ;; Defined at:
 17554 ;;		line 1174 in file "deca_device.c"
 17555 ;; Parameters:    Size  Location     Type
 17556 ;;  cipher          2    0[BANK0 ] unsigned int 
 17557 ;;  threshold       1    2[BANK0 ] unsigned char 
 17558 ;;  shift_val       1    3[BANK0 ] unsigned char 
 17559 ;; Auto vars:     Size  Location     Type
 17560 ;;  value           4   10[BANK0 ] unsigned long 
 17561 ;;  mod_val         2    8[BANK0 ] unsigned int 
 17562 ;; Return value:  Size  Location     Type
 17563 ;;                  2    0[BANK0 ] unsigned int 
 17564 ;; Registers used:
 17565 ;;		wreg, status,2, status,0, pclath, cstack
 17566 ;; Tracked objects:
 17567 ;;		On entry : 0/0
 17568 ;;		On exit  : 0/0
 17569 ;;		Unchanged: 0/0
 17570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17572 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17574 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17575 ;;Total ram usage:       14 bytes
 17576 ;; Hardware stack levels used:    1
 17577 ;; Hardware stack levels required when called:    1
 17578 ;; This function calls:
 17579 ;;		___lmul
 17580 ;; This function is called by:
 17581 ;;		_dwt_configure
 17582 ;; This function uses a non-reentrant model
 17583 ;;
 17584                           
 17585                           
 17586                           ;psect for function _get_sts_mnth
 17587  1BFE                     _get_sts_mnth:	
 17588                           
 17589                           ;deca_device.c: 1176: uint32_t value;
 17590                           ;deca_device.c: 1177: uint16_t mod_val;
 17591                           ;deca_device.c: 1179: value = cipher* (uint32_t)threshold;
 17592                           
 17593                           ;incstack = 0
 17594                           ; Regs used in _get_sts_mnth: [wreg+status,2+status,0+pclath+cstack]
 17595  1BFE  0140               	movlb	0	; select bank0
 17596  1BFF  0820               	movf	get_sts_mnth@cipher,w
 17597  1C00  00F0               	movwf	___lmul@multiplier
 17598  1C01  0821               	movf	get_sts_mnth@cipher+1,w
 17599  1C02  00F1               	movwf	___lmul@multiplier+1
 17600  1C03  01F2               	clrf	___lmul@multiplier+2
 17601  1C04  01F3               	clrf	___lmul@multiplier+3
 17602  1C05  0822               	movf	get_sts_mnth@threshold,w
 17603  1C06  00A4               	movwf	??_get_sts_mnth
 17604  1C07  01A5               	clrf	??_get_sts_mnth+1
 17605  1C08  01A6               	clrf	??_get_sts_mnth+2
 17606  1C09  01A7               	clrf	??_get_sts_mnth+3
 17607  1C0A  0827               	movf	??_get_sts_mnth+3,w
 17608  1C0B  00F7               	movwf	___lmul@multiplicand+3
 17609  1C0C  0826               	movf	??_get_sts_mnth+2,w
 17610  1C0D  00F6               	movwf	___lmul@multiplicand+2
 17611  1C0E  0825               	movf	??_get_sts_mnth+1,w
 17612  1C0F  00F5               	movwf	___lmul@multiplicand+1
 17613  1C10  0824               	movf	??_get_sts_mnth,w
 17614  1C11  00F4               	movwf	___lmul@multiplicand
 17615  1C12  31A4  24F7  319B   	fcall	___lmul
 17616  1C15  0873               	movf	?___lmul+3,w
 17617  1C16  0140               	movlb	0	; select bank0
 17618  1C17  00AD               	movwf	get_sts_mnth@value+3
 17619  1C18  0872               	movf	?___lmul+2,w
 17620  1C19  00AC               	movwf	get_sts_mnth@value+2
 17621  1C1A  0871               	movf	?___lmul+1,w
 17622  1C1B  00AB               	movwf	get_sts_mnth@value+1
 17623  1C1C  0870               	movf	?___lmul,w
 17624  1C1D  00AA               	movwf	get_sts_mnth@value
 17625                           
 17626                           ;deca_device.c: 1180: if (shift_val == 3)
 17627  1C1E  3003               	movlw	3
 17628  1C1F  0623               	xorwf	get_sts_mnth@shift_val,w
 17629  1C20  1D03               	btfss	3,2
 17630  1C21  2C45               	goto	l5887
 17631                           
 17632                           ;deca_device.c: 1181: {
 17633                           ;deca_device.c: 1182: value *= 181;
 17634  1C22  3000               	movlw	0
 17635  1C23  00F3               	movwf	___lmul@multiplier+3
 17636  1C24  3000               	movlw	0
 17637  1C25  00F2               	movwf	___lmul@multiplier+2
 17638  1C26  3000               	movlw	0
 17639  1C27  00F1               	movwf	___lmul@multiplier+1
 17640  1C28  30B5               	movlw	181
 17641  1C29  00F0               	movwf	___lmul@multiplier
 17642  1C2A  082D               	movf	get_sts_mnth@value+3,w
 17643  1C2B  00F7               	movwf	___lmul@multiplicand+3
 17644  1C2C  082C               	movf	get_sts_mnth@value+2,w
 17645  1C2D  00F6               	movwf	___lmul@multiplicand+2
 17646  1C2E  082B               	movf	get_sts_mnth@value+1,w
 17647  1C2F  00F5               	movwf	___lmul@multiplicand+1
 17648  1C30  082A               	movf	get_sts_mnth@value,w
 17649  1C31  00F4               	movwf	___lmul@multiplicand
 17650  1C32  31A4  24F7  319B   	fcall	___lmul
 17651  1C35  0873               	movf	?___lmul+3,w
 17652  1C36  0140               	movlb	0	; select bank0
 17653  1C37  00AD               	movwf	get_sts_mnth@value+3
 17654  1C38  0872               	movf	?___lmul+2,w
 17655  1C39  00AC               	movwf	get_sts_mnth@value+2
 17656  1C3A  0871               	movf	?___lmul+1,w
 17657  1C3B  00AB               	movwf	get_sts_mnth@value+1
 17658  1C3C  0870               	movf	?___lmul,w
 17659  1C3D  00AA               	movwf	get_sts_mnth@value
 17660                           
 17661                           ;deca_device.c: 1183: value >>= 7;
 17662  1C3E  3007               	movlw	7
 17663  1C3F                     u5495:	
 17664  1C3F  36AD               	lsrf	get_sts_mnth@value+3,f
 17665  1C40  0CAC               	rrf	get_sts_mnth@value+2,f
 17666  1C41  0CAB               	rrf	get_sts_mnth@value+1,f
 17667  1C42  0CAA               	rrf	get_sts_mnth@value,f
 17668  1C43  0B89               	decfsz	9,f
 17669  1C44  2C3F               	goto	u5495
 17670  1C45                     l5887:	
 17671                           
 17672                           ;deca_device.c: 1184: }
 17673                           ;deca_device.c: 1186: mod_val = value % 2048+ (2048>>1);
 17674  1C45  30FF               	movlw	255
 17675  1C46  052A               	andwf	get_sts_mnth@value,w
 17676  1C47  00A4               	movwf	??_get_sts_mnth
 17677  1C48  3007               	movlw	7
 17678  1C49  052B               	andwf	get_sts_mnth@value+1,w
 17679  1C4A  00A5               	movwf	??_get_sts_mnth+1
 17680  1C4B  0824               	movf	??_get_sts_mnth,w
 17681  1C4C  3E00               	addlw	0
 17682  1C4D  00A8               	movwf	get_sts_mnth@mod_val
 17683  1C4E  3004               	movlw	4
 17684  1C4F  3D25               	addwfc	??_get_sts_mnth+1,w
 17685  1C50  00A9               	movwf	get_sts_mnth@mod_val+1
 17686                           
 17687                           ;deca_device.c: 1187: value >>= 11;
 17688  1C51  300B               	movlw	11
 17689  1C52                     u5505:	
 17690  1C52  36AD               	lsrf	get_sts_mnth@value+3,f
 17691  1C53  0CAC               	rrf	get_sts_mnth@value+2,f
 17692  1C54  0CAB               	rrf	get_sts_mnth@value+1,f
 17693  1C55  0CAA               	rrf	get_sts_mnth@value,f
 17694  1C56  0B89               	decfsz	9,f
 17695  1C57  2C52               	goto	u5505
 17696                           
 17697                           ;deca_device.c: 1189: if (mod_val >= 2048)
 17698  1C58  3008               	movlw	8
 17699  1C59  0229               	subwf	get_sts_mnth@mod_val+1,w
 17700  1C5A  3000               	movlw	0
 17701  1C5B  1903               	skipnz
 17702  1C5C  0228               	subwf	get_sts_mnth@mod_val,w
 17703  1C5D  1C03               	skipc
 17704  1C5E  2C67               	goto	l562
 17705                           
 17706                           ;deca_device.c: 1190: value += 1;
 17707  1C5F  3001               	movlw	1
 17708  1C60  07AA               	addwf	get_sts_mnth@value,f
 17709  1C61  3000               	movlw	0
 17710  1C62  3DAB               	addwfc	get_sts_mnth@value+1,f
 17711  1C63  3000               	movlw	0
 17712  1C64  3DAC               	addwfc	get_sts_mnth@value+2,f
 17713  1C65  3000               	movlw	0
 17714  1C66  3DAD               	addwfc	get_sts_mnth@value+3,f
 17715  1C67                     l562:	
 17716                           
 17717                           ;deca_device.c: 1192: return (uint16_t)value;
 17718  1C67  082B               	movf	get_sts_mnth@value+1,w
 17719  1C68  00A1               	movwf	?_get_sts_mnth+1
 17720  1C69  082A               	movf	get_sts_mnth@value,w
 17721  1C6A  00A0               	movwf	?_get_sts_mnth
 17722  1C6B  0008               	return
 17723  1C6C                     __end_of_get_sts_mnth:	
 17724                           
 17725                           	psect	text43
 17726  24F7                     __ptext43:	
 17727 ;; *************** function ___lmul *****************
 17728 ;; Defined at:
 17729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 17730 ;; Parameters:    Size  Location     Type
 17731 ;;  multiplier      4    0[COMMON] unsigned long 
 17732 ;;  multiplicand    4    4[COMMON] unsigned long 
 17733 ;; Auto vars:     Size  Location     Type
 17734 ;;  product         4    8[COMMON] unsigned long 
 17735 ;; Return value:  Size  Location     Type
 17736 ;;                  4    0[COMMON] unsigned long 
 17737 ;; Registers used:
 17738 ;;		wreg, status,2, status,0
 17739 ;; Tracked objects:
 17740 ;;		On entry : 0/0
 17741 ;;		On exit  : 0/0
 17742 ;;		Unchanged: 0/0
 17743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17744 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17745 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17747 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17748 ;;Total ram usage:       12 bytes
 17749 ;; Hardware stack levels used:    1
 17750 ;; This function calls:
 17751 ;;		Nothing
 17752 ;; This function is called by:
 17753 ;;		_get_sts_mnth
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           
 17758                           ;psect for function ___lmul
 17759  24F7                     ___lmul:	
 17760                           
 17761                           ;incstack = 0
 17762                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 17763  24F7  3000               	movlw	0
 17764  24F8  00FB               	movwf	___lmul@product+3
 17765  24F9  3000               	movlw	0
 17766  24FA  00FA               	movwf	___lmul@product+2
 17767  24FB  3000               	movlw	0
 17768  24FC  00F9               	movwf	___lmul@product+1
 17769  24FD  3000               	movlw	0
 17770  24FE  00F8               	movwf	___lmul@product
 17771  24FF                     l5749:	
 17772  24FF  1C70               	btfss	___lmul@multiplier,0
 17773  2500  2D09               	goto	l5753
 17774  2501  0874               	movf	___lmul@multiplicand,w
 17775  2502  07F8               	addwf	___lmul@product,f
 17776  2503  0875               	movf	___lmul@multiplicand+1,w
 17777  2504  3DF9               	addwfc	___lmul@product+1,f
 17778  2505  0876               	movf	___lmul@multiplicand+2,w
 17779  2506  3DFA               	addwfc	___lmul@product+2,f
 17780  2507  0877               	movf	___lmul@multiplicand+3,w
 17781  2508  3DFB               	addwfc	___lmul@product+3,f
 17782  2509                     l5753:	
 17783  2509  3001               	movlw	1
 17784  250A                     u5215:	
 17785  250A  35F4               	lslf	___lmul@multiplicand,f
 17786  250B  0DF5               	rlf	___lmul@multiplicand+1,f
 17787  250C  0DF6               	rlf	___lmul@multiplicand+2,f
 17788  250D  0DF7               	rlf	___lmul@multiplicand+3,f
 17789  250E  0B89               	decfsz	9,f
 17790  250F  2D0A               	goto	u5215
 17791  2510  3001               	movlw	1
 17792  2511                     u5225:	
 17793  2511  36F3               	lsrf	___lmul@multiplier+3,f
 17794  2512  0CF2               	rrf	___lmul@multiplier+2,f
 17795  2513  0CF1               	rrf	___lmul@multiplier+1,f
 17796  2514  0CF0               	rrf	___lmul@multiplier,f
 17797  2515  0B89               	decfsz	9,f
 17798  2516  2D11               	goto	u5225
 17799  2517  0873               	movf	___lmul@multiplier+3,w
 17800  2518  0472               	iorwf	___lmul@multiplier+2,w
 17801  2519  0471               	iorwf	___lmul@multiplier+1,w
 17802  251A  0470               	iorwf	___lmul@multiplier,w
 17803  251B  1D03               	skipz
 17804  251C  2CFF               	goto	l5749
 17805  251D  087B               	movf	___lmul@product+3,w
 17806  251E  00F3               	movwf	?___lmul+3
 17807  251F  087A               	movf	___lmul@product+2,w
 17808  2520  00F2               	movwf	?___lmul+2
 17809  2521  0879               	movf	___lmul@product+1,w
 17810  2522  00F1               	movwf	?___lmul+1
 17811  2523  0878               	movf	___lmul@product,w
 17812  2524  00F0               	movwf	?___lmul
 17813  2525  0008               	return
 17814  2526                     __end_of___lmul:	
 17815                           
 17816                           	psect	text44
 17817  2223                     __ptext44:	
 17818 ;; *************** function _dwt_setplenfine *****************
 17819 ;; Defined at:
 17820 ;;		line 1811 in file "deca_device.c"
 17821 ;; Parameters:    Size  Location     Type
 17822 ;;  preambleLeng    1    wreg     unsigned char 
 17823 ;; Auto vars:     Size  Location     Type
 17824 ;;  preambleLeng    1   73[BANK0 ] unsigned char 
 17825 ;; Return value:  Size  Location     Type
 17826 ;;                  1    wreg      void 
 17827 ;; Registers used:
 17828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17829 ;; Tracked objects:
 17830 ;;		On entry : 0/0
 17831 ;;		On exit  : 0/0
 17832 ;;		Unchanged: 0/0
 17833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17838 ;;Total ram usage:        2 bytes
 17839 ;; Hardware stack levels used:    1
 17840 ;; Hardware stack levels required when called:    8
 17841 ;; This function calls:
 17842 ;;		_dwt_write8bitoffsetreg
 17843 ;; This function is called by:
 17844 ;;		_dwt_configure
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           
 17849                           ;psect for function _dwt_setplenfine
 17850  2223                     _dwt_setplenfine:	
 17851                           
 17852                           ;incstack = 0
 17853                           ; Regs used in _dwt_setplenfine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17854                           ;dwt_setplenfine@preambleLength stored from wreg
 17855  2223  0140               	movlb	0	; select bank0
 17856  2224  00E9               	movwf	dwt_setplenfine@preambleLength
 17857                           
 17858                           ;deca_device.c: 1813: dwt_write8bitoffsetreg(0x28, 1, preambleLength);
 17859  2225  3000               	movlw	0
 17860  2226  0141               	movlb	1	; select bank1
 17861  2227  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 17862  2228  3000               	movlw	0
 17863  2229  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 17864  222A  3000               	movlw	0
 17865  222B  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 17866  222C  3028               	movlw	40
 17867  222D  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 17868  222E  3000               	movlw	0
 17869  222F  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 17870  2230  3000               	movlw	0
 17871  2231  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 17872  2232  3000               	movlw	0
 17873  2233  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 17874  2234  3001               	movlw	1
 17875  2235  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 17876  2236  0140               	movlb	0	; select bank0
 17877  2237  0869               	movf	dwt_setplenfine@preambleLength,w
 17878  2238  00E8               	movwf	??_dwt_setplenfine
 17879  2239  0868               	movf	??_dwt_setplenfine,w
 17880  223A  0141               	movlb	1	; select bank1
 17881  223B  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 17882  223C  31A2  2207         	fcall	_dwt_write8bitoffsetreg
 17883  223E  0008               	return
 17884  223F                     __end_of_dwt_setplenfine:	
 17885                           
 17886                           	psect	text45
 17887  146B                     __ptext45:	
 17888 ;; *************** function _dwt_setdwstate *****************
 17889 ;; Defined at:
 17890 ;;		line 876 in file "deca_device.c"
 17891 ;; Parameters:    Size  Location     Type
 17892 ;;  state           2   24[BANK1 ] int 
 17893 ;; Auto vars:     Size  Location     Type
 17894 ;;		None
 17895 ;; Return value:  Size  Location     Type
 17896 ;;                  1    wreg      void 
 17897 ;; Registers used:
 17898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17899 ;; Tracked objects:
 17900 ;;		On entry : 0/0
 17901 ;;		On exit  : 0/0
 17902 ;;		Unchanged: 0/0
 17903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17904 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17906 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17907 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17908 ;;Total ram usage:        4 bytes
 17909 ;; Hardware stack levels used:    1
 17910 ;; Hardware stack levels required when called:    9
 17911 ;; This function calls:
 17912 ;;		_dwt_force_clocks
 17913 ;;		_dwt_modify32bitoffsetreg
 17914 ;;		_dwt_modify8bitoffsetreg
 17915 ;; This function is called by:
 17916 ;;		_dwt_configure
 17917 ;; This function uses a non-reentrant model
 17918 ;;
 17919                           
 17920                           
 17921                           ;psect for function _dwt_setdwstate
 17922  146B                     _dwt_setdwstate:	
 17923                           
 17924                           ;deca_device.c: 878: if (state == 0x1)
 17925                           
 17926                           ;incstack = 0
 17927                           ; Regs used in _dwt_setdwstate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17928  146B  0141               	movlb	1	; select bank1
 17929  146C  0338               	decf	dwt_setdwstate@state^(0+128),w
 17930  146D  0439               	iorwf	(dwt_setdwstate@state+1)^(0+128),w
 17931  146E  1D03               	btfss	3,2
 17932  146F  2C92               	goto	l5865
 17933                           
 17934                           ;deca_device.c: 880: {
 17935                           ;deca_device.c: 882: dwt_force_clocks((5));
 17936  1470  3005               	movlw	5
 17937  1471  0140               	movlb	0	; select bank0
 17938  1472  00EB               	movwf	dwt_force_clocks@clocks
 17939  1473  3000               	movlw	0
 17940  1474  00EC               	movwf	dwt_force_clocks@clocks+1
 17941  1475  31A7  2729  3194   	fcall	_dwt_force_clocks
 17942                           
 17943                           ;deca_device.c: 883: dwt_modify8bitoffsetreg(0x110008, 0x01, -1, 0x100U>>8);
 17944  1478  3000               	movlw	0
 17945  1479  0141               	movlb	1	; select bank1
 17946  147A  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 17947  147B  3011               	movlw	17
 17948  147C  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 17949  147D  3000               	movlw	0
 17950  147E  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 17951  147F  3008               	movlw	8
 17952  1480  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 17953  1481  3000               	movlw	0
 17954  1482  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 17955  1483  3000               	movlw	0
 17956  1484  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 17957  1485  3000               	movlw	0
 17958  1486  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 17959  1487  3001               	movlw	1
 17960  1488  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 17961  1489  30FF               	movlw	255
 17962  148A  00BA               	movwf	??_dwt_setdwstate^(0+128)
 17963  148B  083A               	movf	??_dwt_setdwstate^(0+128),w
 17964  148C  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 17965  148D  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 17966  148E  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 17967  148F  31A6  262A         	fcall	_dwt_modify8bitoffsetreg
 17968                           
 17969                           ;deca_device.c: 884: }
 17970  1491  0008               	return
 17971  1492                     l5865:	
 17972                           
 17973                           ;deca_device.c: 885: else if(state == 0x2)
 17974  1492  3002               	movlw	2
 17975  1493  0141               	movlb	1	; select bank1
 17976  1494  0638               	xorwf	dwt_setdwstate@state^(0+128),w
 17977  1495  0439               	iorwf	(dwt_setdwstate@state+1)^(0+128),w
 17978  1496  1D03               	btfss	3,2
 17979  1497  2CF8               	goto	l5869
 17980                           
 17981                           ;deca_device.c: 886: {
 17982                           ;deca_device.c: 888: dwt_modify8bitoffsetreg(0x110004, 0, -1, (3));
 17983  1498  3000               	movlw	0
 17984  1499  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 17985  149A  3011               	movlw	17
 17986  149B  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 17987  149C  3000               	movlw	0
 17988  149D  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 17989  149E  3004               	movlw	4
 17990  149F  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 17991  14A0  3000               	movlw	0
 17992  14A1  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 17993  14A2  3000               	movlw	0
 17994  14A3  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 17995  14A4  3000               	movlw	0
 17996  14A5  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 17997  14A6  3000               	movlw	0
 17998  14A7  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 17999  14A8  30FF               	movlw	255
 18000  14A9  00BA               	movwf	??_dwt_setdwstate^(0+128)
 18001  14AA  083A               	movf	??_dwt_setdwstate^(0+128),w
 18002  14AB  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 18003  14AC  3003               	movlw	3
 18004  14AD  00BB               	movwf	(??_dwt_setdwstate+1)^(0+128)
 18005  14AE  083B               	movf	(??_dwt_setdwstate+1)^(0+128),w
 18006  14AF  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 18007  14B0  31A6  262A  3194   	fcall	_dwt_modify8bitoffsetreg
 18008                           
 18009                           ;deca_device.c: 890: dwt_modify32bitoffsetreg(0x110008, 0x0, (uint32_t) ~0x100U, 0x80000
      +                          0UL);
 18010  14B3  3000               	movlw	0
 18011  14B4  0141               	movlb	1	; select bank1
 18012  14B5  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 18013  14B6  3011               	movlw	17
 18014  14B7  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 18015  14B8  3000               	movlw	0
 18016  14B9  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 18017  14BA  3008               	movlw	8
 18018  14BB  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 18019  14BC  3000               	movlw	0
 18020  14BD  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 18021  14BE  3000               	movlw	0
 18022  14BF  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 18023  14C0  3000               	movlw	0
 18024  14C1  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 18025  14C2  3000               	movlw	0
 18026  14C3  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 18027  14C4  3000               	movlw	0
 18028  14C5  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 18029  14C6  3000               	movlw	0
 18030  14C7  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 18031  14C8  30FE               	movlw	254
 18032  14C9  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 18033  14CA  30FF               	movlw	255
 18034  14CB  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 18035  14CC  3000               	movlw	0
 18036  14CD  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 18037  14CE  3080               	movlw	128
 18038  14CF  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 18039  14D0  3000               	movlw	0
 18040  14D1  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 18041  14D2  3000               	movlw	0
 18042  14D3  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 18043  14D4  3192  22B6  3194   	fcall	_dwt_modify32bitoffsetreg
 18044                           
 18045                           ;deca_device.c: 892: dwt_modify8bitoffsetreg(0x110008, 0x2, (uint8_t) ~(0x800000UL>>16),
      +                           0);
 18046  14D7  3000               	movlw	0
 18047  14D8  0141               	movlb	1	; select bank1
 18048  14D9  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 18049  14DA  3011               	movlw	17
 18050  14DB  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 18051  14DC  3000               	movlw	0
 18052  14DD  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 18053  14DE  3008               	movlw	8
 18054  14DF  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 18055  14E0  3000               	movlw	0
 18056  14E1  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 18057  14E2  3000               	movlw	0
 18058  14E3  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 18059  14E4  3000               	movlw	0
 18060  14E5  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 18061  14E6  3002               	movlw	2
 18062  14E7  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 18063  14E8  307F               	movlw	127
 18064  14E9  00BA               	movwf	??_dwt_setdwstate^(0+128)
 18065  14EA  083A               	movf	??_dwt_setdwstate^(0+128),w
 18066  14EB  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 18067  14EC  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 18068  14ED  31A6  262A  3194   	fcall	_dwt_modify8bitoffsetreg
 18069                           
 18070                           ;deca_device.c: 894: dwt_force_clocks((5));
 18071  14F0  3005               	movlw	5
 18072  14F1  0140               	movlb	0	; select bank0
 18073  14F2  00EB               	movwf	dwt_force_clocks@clocks
 18074  14F3  3000               	movlw	0
 18075  14F4  00EC               	movwf	dwt_force_clocks@clocks+1
 18076  14F5  31A7  2729         	fcall	_dwt_force_clocks
 18077                           
 18078                           ;deca_device.c: 895: }
 18079  14F7  0008               	return
 18080  14F8                     l5869:	
 18081                           
 18082                           ;deca_device.c: 896: else
 18083                           ;deca_device.c: 898: {
 18084                           ;deca_device.c: 899: dwt_modify8bitoffsetreg(0x110004, 0, -1, (1));
 18085  14F8  3000               	movlw	0
 18086  14F9  0141               	movlb	1	; select bank1
 18087  14FA  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 18088  14FB  3011               	movlw	17
 18089  14FC  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 18090  14FD  3000               	movlw	0
 18091  14FE  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 18092  14FF  3004               	movlw	4
 18093  1500  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 18094  1501  3000               	movlw	0
 18095  1502  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 18096  1503  3000               	movlw	0
 18097  1504  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 18098  1505  3000               	movlw	0
 18099  1506  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 18100  1507  3000               	movlw	0
 18101  1508  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 18102  1509  30FF               	movlw	255
 18103  150A  00BA               	movwf	??_dwt_setdwstate^(0+128)
 18104  150B  083A               	movf	??_dwt_setdwstate^(0+128),w
 18105  150C  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 18106  150D  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 18107  150E  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 18108  150F  31A6  262A  3194   	fcall	_dwt_modify8bitoffsetreg
 18109                           
 18110                           ;deca_device.c: 901: dwt_modify32bitoffsetreg(0x110008, 0x0, (uint32_t) ~0x100U, 0x80000
      +                          0UL);
 18111  1512  3000               	movlw	0
 18112  1513  0141               	movlb	1	; select bank1
 18113  1514  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 18114  1515  3011               	movlw	17
 18115  1516  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 18116  1517  3000               	movlw	0
 18117  1518  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 18118  1519  3008               	movlw	8
 18119  151A  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 18120  151B  3000               	movlw	0
 18121  151C  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 18122  151D  3000               	movlw	0
 18123  151E  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 18124  151F  3000               	movlw	0
 18125  1520  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 18126  1521  3000               	movlw	0
 18127  1522  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 18128  1523  3000               	movlw	0
 18129  1524  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 18130  1525  3000               	movlw	0
 18131  1526  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 18132  1527  30FE               	movlw	254
 18133  1528  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 18134  1529  30FF               	movlw	255
 18135  152A  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 18136  152B  3000               	movlw	0
 18137  152C  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 18138  152D  3080               	movlw	128
 18139  152E  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 18140  152F  3000               	movlw	0
 18141  1530  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 18142  1531  3000               	movlw	0
 18143  1532  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 18144  1533  3192  22B6  3194   	fcall	_dwt_modify32bitoffsetreg
 18145                           
 18146                           ;deca_device.c: 902: dwt_modify8bitoffsetreg(0x110008, 0x2, (uint8_t) ~(0x800000UL>>16),
      +                           0);
 18147  1536  3000               	movlw	0
 18148  1537  0141               	movlb	1	; select bank1
 18149  1538  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 18150  1539  3011               	movlw	17
 18151  153A  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 18152  153B  3000               	movlw	0
 18153  153C  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 18154  153D  3008               	movlw	8
 18155  153E  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 18156  153F  3000               	movlw	0
 18157  1540  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 18158  1541  3000               	movlw	0
 18159  1542  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 18160  1543  3000               	movlw	0
 18161  1544  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 18162  1545  3002               	movlw	2
 18163  1546  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 18164  1547  307F               	movlw	127
 18165  1548  00BA               	movwf	??_dwt_setdwstate^(0+128)
 18166  1549  083A               	movf	??_dwt_setdwstate^(0+128),w
 18167  154A  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 18168  154B  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 18169  154C  31A6  262A         	fcall	_dwt_modify8bitoffsetreg
 18170  154E  0008               	return
 18171  154F                     __end_of_dwt_setdwstate:	
 18172                           
 18173                           	psect	text46
 18174  2729                     __ptext46:	
 18175 ;; *************** function _dwt_force_clocks *****************
 18176 ;; Defined at:
 18177 ;;		line 3612 in file "deca_device.c"
 18178 ;; Parameters:    Size  Location     Type
 18179 ;;  clocks          2   75[BANK0 ] int 
 18180 ;; Auto vars:     Size  Location     Type
 18181 ;;  regvalue0       2   77[BANK0 ] unsigned int 
 18182 ;; Return value:  Size  Location     Type
 18183 ;;                  1    wreg      void 
 18184 ;; Registers used:
 18185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18186 ;; Tracked objects:
 18187 ;;		On entry : 0/0
 18188 ;;		On exit  : 0/0
 18189 ;;		Unchanged: 0/0
 18190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18195 ;;Total ram usage:        4 bytes
 18196 ;; Hardware stack levels used:    1
 18197 ;; Hardware stack levels required when called:    8
 18198 ;; This function calls:
 18199 ;;		_dwt_write16bitoffsetreg
 18200 ;; This function is called by:
 18201 ;;		_dwt_setdwstate
 18202 ;;		_dwt_calcbandwidthadj
 18203 ;;		_dwt_configcwmode
 18204 ;;		_dwt_configcontinuousframemode
 18205 ;;		_dwt_calcpgcount
 18206 ;; This function uses a non-reentrant model
 18207 ;;
 18208                           
 18209                           
 18210                           ;psect for function _dwt_force_clocks
 18211  2729                     _dwt_force_clocks:	
 18212                           
 18213                           ;deca_device.c: 3615: if (clocks == (1))
 18214                           
 18215                           ;incstack = 0
 18216                           ; Regs used in _dwt_force_clocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18217  2729  0140               	movlb	0	; select bank0
 18218  272A  036B               	decf	dwt_force_clocks@clocks,w
 18219  272B  046C               	iorwf	dwt_force_clocks@clocks+1,w
 18220  272C  1D03               	btfss	3,2
 18221  272D  2F50               	goto	l5641
 18222                           
 18223                           ;deca_device.c: 3616: {
 18224                           ;deca_device.c: 3617: uint16_t regvalue0 = 0x1000U | 0x800U;
 18225  272E  3000               	movlw	0
 18226  272F  00ED               	movwf	dwt_force_clocks@regvalue0
 18227  2730  3018               	movlw	24
 18228  2731  00EE               	movwf	dwt_force_clocks@regvalue0+1
 18229                           
 18230                           ;deca_device.c: 3620: regvalue0 |= ((uint16_t) (2)) << (0U);
 18231  2732  14ED               	bsf	dwt_force_clocks@regvalue0,1
 18232                           
 18233                           ;deca_device.c: 3623: regvalue0 |= ((uint16_t) (2)) << (4U);
 18234  2733  16ED               	bsf	dwt_force_clocks@regvalue0,5
 18235                           
 18236                           ;deca_device.c: 3625: dwt_write16bitoffsetreg(0x110004, 0x0, regvalue0);
 18237  2734  3000               	movlw	0
 18238  2735  0141               	movlb	1	; select bank1
 18239  2736  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 18240  2737  3011               	movlw	17
 18241  2738  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 18242  2739  3000               	movlw	0
 18243  273A  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 18244  273B  3004               	movlw	4
 18245  273C  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 18246  273D  3000               	movlw	0
 18247  273E  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 18248  273F  3000               	movlw	0
 18249  2740  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 18250  2741  3000               	movlw	0
 18251  2742  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 18252  2743  3000               	movlw	0
 18253  2744  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 18254  2745  0140               	movlb	0	; select bank0
 18255  2746  086E               	movf	dwt_force_clocks@regvalue0+1,w
 18256  2747  0141               	movlb	1	; select bank1
 18257  2748  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 18258  2749  0140               	movlb	0	; select bank0
 18259  274A  086D               	movf	dwt_force_clocks@regvalue0,w
 18260  274B  0141               	movlb	1	; select bank1
 18261  274C  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 18262  274D  31A3  23CF  31A7   	fcall	_dwt_write16bitoffsetreg
 18263  2750                     l5641:	
 18264                           
 18265                           ;deca_device.c: 3627: }
 18266                           ;deca_device.c: 3629: if (clocks == (5))
 18267  2750  3005               	movlw	5
 18268  2751  0140               	movlb	0	; select bank0
 18269  2752  066B               	xorwf	dwt_force_clocks@clocks,w
 18270  2753  046C               	iorwf	dwt_force_clocks@clocks+1,w
 18271  2754  1D03               	btfss	3,2
 18272  2755  0008               	return
 18273                           
 18274                           ;deca_device.c: 3630: {
 18275                           ;deca_device.c: 3632: dwt_write16bitoffsetreg(0x110004, 0x0, (uint16_t) (0x200 | 0x20000
      +                          0 | 0x100000));
 18276  2756  3000               	movlw	0
 18277  2757  0141               	movlb	1	; select bank1
 18278  2758  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 18279  2759  3011               	movlw	17
 18280  275A  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 18281  275B  3000               	movlw	0
 18282  275C  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 18283  275D  3004               	movlw	4
 18284  275E  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 18285  275F  3000               	movlw	0
 18286  2760  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 18287  2761  3000               	movlw	0
 18288  2762  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 18289  2763  3000               	movlw	0
 18290  2764  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 18291  2765  3000               	movlw	0
 18292  2766  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 18293  2767  3000               	movlw	0
 18294  2768  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 18295  2769  3002               	movlw	2
 18296  276A  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 18297  276B  31A3  23CF         	fcall	_dwt_write16bitoffsetreg
 18298  276D  0008               	return
 18299  276E                     __end_of_dwt_force_clocks:	
 18300                           
 18301                           	psect	text47
 18302  23CF                     __ptext47:	
 18303 ;; *************** function _dwt_write16bitoffsetreg *****************
 18304 ;; Defined at:
 18305 ;;		line 493 in file "deca_device.c"
 18306 ;; Parameters:    Size  Location     Type
 18307 ;;  regFileID       4   12[BANK1 ] unsigned long 
 18308 ;;  regOffset       4   16[BANK1 ] unsigned long 
 18309 ;;  regval          2   20[BANK1 ] unsigned int 
 18310 ;; Auto vars:     Size  Location     Type
 18311 ;;  buffer          2   73[BANK0 ] unsigned char [2]
 18312 ;; Return value:  Size  Location     Type
 18313 ;;                  1    wreg      void 
 18314 ;; Registers used:
 18315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18316 ;; Tracked objects:
 18317 ;;		On entry : 0/0
 18318 ;;		On exit  : 0/0
 18319 ;;		Unchanged: 0/0
 18320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18321 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18322 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18323 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18324 ;;      Totals:         0       3      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18325 ;;Total ram usage:       13 bytes
 18326 ;; Hardware stack levels used:    1
 18327 ;; Hardware stack levels required when called:    7
 18328 ;; This function calls:
 18329 ;;		_dwt_writetodevice
 18330 ;; This function is called by:
 18331 ;;		_dwt_configure
 18332 ;;		_dwt_setrxantennadelay
 18333 ;;		_dwt_settxantennadelay
 18334 ;;		__dwt_otpread
 18335 ;;		_dwt_force_clocks
 18336 ;;		_dwt_calcbandwidthadj
 18337 ;;		_dwt_configureframefilter
 18338 ;;		_dwt_setpanid
 18339 ;;		_dwt_setaddress16
 18340 ;;		_dwt_aon_read
 18341 ;;		_dwt_aon_write
 18342 ;;		___dwt_otp_write_wdata_id_reg
 18343 ;;		__dwt_otpprogword32
 18344 ;;		_dwt_configuresleep
 18345 ;;		_dwt_clearaonconfig
 18346 ;;		_dwt_isr
 18347 ;;		_dwt_setsniffmode
 18348 ;;		_dwt_setpreambledetecttimeout
 18349 ;;		_dwt_configure_aes
 18350 ;;		_dwt_configure_le_address
 18351 ;; This function uses a non-reentrant model
 18352 ;;
 18353                           
 18354                           
 18355                           ;psect for function _dwt_write16bitoffsetreg
 18356  23CF                     _dwt_write16bitoffsetreg:	
 18357                           
 18358                           ;deca_device.c: 495: uint8_t buffer[2] ;
 18359                           ;deca_device.c: 497: buffer[0] = (uint8_t)regval;
 18360                           
 18361                           ;incstack = 0
 18362                           ; Regs used in _dwt_write16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18363  23CF  0141               	movlb	1	; select bank1
 18364  23D0  0834               	movf	dwt_write16bitoffsetreg@regval^(0+128),w
 18365  23D1  0140               	movlb	0	; select bank0
 18366  23D2  00E8               	movwf	??_dwt_write16bitoffsetreg
 18367  23D3  0868               	movf	??_dwt_write16bitoffsetreg,w
 18368  23D4  00E9               	movwf	dwt_write16bitoffsetreg@buffer
 18369                           
 18370                           ;deca_device.c: 498: buffer[1] = regval >> 8 ;
 18371  23D5  0141               	movlb	1	; select bank1
 18372  23D6  0835               	movf	(dwt_write16bitoffsetreg@regval+1)^(0+128),w
 18373  23D7  0140               	movlb	0	; select bank0
 18374  23D8  00E8               	movwf	??_dwt_write16bitoffsetreg
 18375  23D9  0868               	movf	??_dwt_write16bitoffsetreg,w
 18376  23DA  00EA               	movwf	dwt_write16bitoffsetreg@buffer+1
 18377                           
 18378                           ;deca_device.c: 500: dwt_writetodevice(regFileID,regOffset,2,buffer);
 18379  23DB  0141               	movlb	1	; select bank1
 18380  23DC  082F               	movf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128),w
 18381  23DD  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 18382  23DE  082E               	movf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128),w
 18383  23DF  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 18384  23E0  082D               	movf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128),w
 18385  23E1  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 18386  23E2  082C               	movf	dwt_write16bitoffsetreg@regFileID^(0+128),w
 18387  23E3  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 18388  23E4  0831               	movf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128),w
 18389  23E5  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 18390  23E6  0830               	movf	dwt_write16bitoffsetreg@regOffset^(0+128),w
 18391  23E7  00A4               	movwf	dwt_writetodevice@index^(0+128)
 18392  23E8  3000               	movlw	0
 18393  23E9  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 18394  23EA  3000               	movlw	0
 18395  23EB  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 18396  23EC  3000               	movlw	0
 18397  23ED  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 18398  23EE  3002               	movlw	2
 18399  23EF  00A6               	movwf	dwt_writetodevice@length^(0+128)
 18400  23F0  3069               	movlw	low dwt_write16bitoffsetreg@buffer
 18401  23F1  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 18402  23F2  3000               	movlw	high dwt_write16bitoffsetreg@buffer
 18403  23F3  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 18404  23F4  31A5  25F3         	fcall	_dwt_writetodevice
 18405  23F6  0008               	return
 18406  23F7                     __end_of_dwt_write16bitoffsetreg:	
 18407                           
 18408                           	psect	text48
 18409  1B97                     __ptext48:	
 18410 ;; *************** function _dwt_pgf_cal *****************
 18411 ;; Defined at:
 18412 ;;		line 1592 in file "deca_device.c"
 18413 ;; Parameters:    Size  Location     Type
 18414 ;;  ldoen           2   45[BANK1 ] int 
 18415 ;; Auto vars:     Size  Location     Type
 18416 ;;  val             2   49[BANK1 ] unsigned int 
 18417 ;;  temp            2   47[BANK1 ] int 
 18418 ;; Return value:  Size  Location     Type
 18419 ;;                  2   45[BANK1 ] int 
 18420 ;; Registers used:
 18421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18422 ;; Tracked objects:
 18423 ;;		On entry : 0/0
 18424 ;;		On exit  : 0/0
 18425 ;;		Unchanged: 0/0
 18426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18427 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18428 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18430 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18431 ;;Total ram usage:        6 bytes
 18432 ;; Hardware stack levels used:    1
 18433 ;; Hardware stack levels required when called:    9
 18434 ;; This function calls:
 18435 ;;		_dwt_modify16bitoffsetreg
 18436 ;;		_dwt_read16bitoffsetreg
 18437 ;;		_dwt_run_pgfcal
 18438 ;; This function is called by:
 18439 ;;		_dwt_configure
 18440 ;; This function uses a non-reentrant model
 18441 ;;
 18442                           
 18443                           
 18444                           ;psect for function _dwt_pgf_cal
 18445  1B97                     _dwt_pgf_cal:	
 18446                           
 18447                           ;deca_device.c: 1594: int temp;
 18448                           ;deca_device.c: 1595: uint16_t val;
 18449                           ;deca_device.c: 1598: if (ldoen == 1)
 18450                           
 18451                           ;incstack = 0
 18452                           ; Regs used in _dwt_pgf_cal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18453  1B97  0141               	movlb	1	; select bank1
 18454  1B98  034D               	decf	dwt_pgf_cal@ldoen^(0+128),w
 18455  1B99  044E               	iorwf	(dwt_pgf_cal@ldoen+1)^(0+128),w
 18456  1B9A  1D03               	btfss	3,2
 18457  1B9B  2BD3               	goto	l630
 18458                           
 18459                           ;deca_device.c: 1599: {
 18460                           ;deca_device.c: 1600: val = dwt_read16bitoffsetreg(0x70048, 0);
 18461  1B9C  3000               	movlw	0
 18462  1B9D  0140               	movlb	0	; select bank0
 18463  1B9E  00EB               	movwf	dwt_read16bitoffsetreg@regFileID+3
 18464  1B9F  3007               	movlw	7
 18465  1BA0  00EA               	movwf	dwt_read16bitoffsetreg@regFileID+2
 18466  1BA1  3000               	movlw	0
 18467  1BA2  00E9               	movwf	dwt_read16bitoffsetreg@regFileID+1
 18468  1BA3  3048               	movlw	72
 18469  1BA4  00E8               	movwf	dwt_read16bitoffsetreg@regFileID
 18470  1BA5  3000               	movlw	0
 18471  1BA6  00EF               	movwf	dwt_read16bitoffsetreg@regOffset+3
 18472  1BA7  3000               	movlw	0
 18473  1BA8  00EE               	movwf	dwt_read16bitoffsetreg@regOffset+2
 18474  1BA9  3000               	movlw	0
 18475  1BAA  00ED               	movwf	dwt_read16bitoffsetreg@regOffset+1
 18476  1BAB  3000               	movlw	0
 18477  1BAC  00EC               	movwf	dwt_read16bitoffsetreg@regOffset
 18478  1BAD  31A6  2661  319B   	fcall	_dwt_read16bitoffsetreg
 18479  1BB0  0140               	movlb	0	; select bank0
 18480  1BB1  0869               	movf	?_dwt_read16bitoffsetreg+1,w
 18481  1BB2  0141               	movlb	1	; select bank1
 18482  1BB3  00D2               	movwf	(dwt_pgf_cal@val+1)^(0+128)
 18483  1BB4  0140               	movlb	0	; select bank0
 18484  1BB5  0868               	movf	?_dwt_read16bitoffsetreg,w
 18485  1BB6  0141               	movlb	1	; select bank1
 18486  1BB7  00D1               	movwf	dwt_pgf_cal@val^(0+128)
 18487                           
 18488                           ;deca_device.c: 1602: dwt_modify16bitoffsetreg(0x70048, 0, -1, ( 0x100U | 0x4U | 0x1U));
 18489  1BB8  3000               	movlw	0
 18490  1BB9  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 18491  1BBA  3007               	movlw	7
 18492  1BBB  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 18493  1BBC  3000               	movlw	0
 18494  1BBD  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 18495  1BBE  3048               	movlw	72
 18496  1BBF  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 18497  1BC0  3000               	movlw	0
 18498  1BC1  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 18499  1BC2  3000               	movlw	0
 18500  1BC3  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 18501  1BC4  3000               	movlw	0
 18502  1BC5  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 18503  1BC6  3000               	movlw	0
 18504  1BC7  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 18505  1BC8  30FF               	movlw	255
 18506  1BC9  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 18507  1BCA  30FF               	movlw	255
 18508  1BCB  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 18509  1BCC  3005               	movlw	5
 18510  1BCD  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 18511  1BCE  3001               	movlw	1
 18512  1BCF  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 18513  1BD0  31A6  26A2  319B   	fcall	_dwt_modify16bitoffsetreg
 18514  1BD3                     l630:	
 18515                           
 18516                           ;deca_device.c: 1606: }
 18517                           ;deca_device.c: 1609: temp = dwt_run_pgfcal();
 18518  1BD3  3195  254F  319B   	fcall	_dwt_run_pgfcal
 18519  1BD6  0141               	movlb	1	; select bank1
 18520  1BD7  083E               	movf	(?_dwt_run_pgfcal+1)^(0+128),w
 18521  1BD8  00D0               	movwf	(dwt_pgf_cal@temp+1)^(0+128)
 18522  1BD9  083D               	movf	?_dwt_run_pgfcal^(0+128),w
 18523  1BDA  00CF               	movwf	dwt_pgf_cal@temp^(0+128)
 18524                           
 18525                           ;deca_device.c: 1612: if (ldoen == 1)
 18526  1BDB  034D               	decf	dwt_pgf_cal@ldoen^(0+128),w
 18527  1BDC  044E               	iorwf	(dwt_pgf_cal@ldoen+1)^(0+128),w
 18528  1BDD  1D03               	btfss	3,2
 18529  1BDE  2BF8               	goto	l5933
 18530                           
 18531                           ;deca_device.c: 1613: {
 18532                           ;deca_device.c: 1614: dwt_modify16bitoffsetreg(0x70048, 0, val, 0);
 18533  1BDF  3000               	movlw	0
 18534  1BE0  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 18535  1BE1  3007               	movlw	7
 18536  1BE2  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 18537  1BE3  3000               	movlw	0
 18538  1BE4  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 18539  1BE5  3048               	movlw	72
 18540  1BE6  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 18541  1BE7  3000               	movlw	0
 18542  1BE8  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 18543  1BE9  3000               	movlw	0
 18544  1BEA  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 18545  1BEB  3000               	movlw	0
 18546  1BEC  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 18547  1BED  3000               	movlw	0
 18548  1BEE  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 18549  1BEF  0852               	movf	(dwt_pgf_cal@val+1)^(0+128),w
 18550  1BF0  00A9               	movwf	(dwt_modify16bitoffsetreg@_and+1)^(0+128)
 18551  1BF1  0851               	movf	dwt_pgf_cal@val^(0+128),w
 18552  1BF2  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 18553  1BF3  3000               	movlw	0
 18554  1BF4  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 18555  1BF5  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 18556  1BF6  31A6  26A2         	fcall	_dwt_modify16bitoffsetreg
 18557  1BF8                     l5933:	
 18558                           
 18559                           ;deca_device.c: 1615: }
 18560                           ;deca_device.c: 1616: return temp;
 18561  1BF8  0141               	movlb	1	; select bank1
 18562  1BF9  0850               	movf	(dwt_pgf_cal@temp+1)^(0+128),w
 18563  1BFA  00CE               	movwf	(?_dwt_pgf_cal+1)^(0+128)
 18564  1BFB  084F               	movf	dwt_pgf_cal@temp^(0+128),w
 18565  1BFC  00CD               	movwf	?_dwt_pgf_cal^(0+128)
 18566  1BFD  0008               	return
 18567  1BFE                     __end_of_dwt_pgf_cal:	
 18568                           
 18569                           	psect	text49
 18570  154F                     __ptext49:	
 18571 ;; *************** function _dwt_run_pgfcal *****************
 18572 ;; Defined at:
 18573 ;;		line 1628 in file "deca_device.c"
 18574 ;; Parameters:    Size  Location     Type
 18575 ;;		None
 18576 ;; Auto vars:     Size  Location     Type
 18577 ;;  val             4   40[BANK1 ] unsigned long 
 18578 ;;  data            4   33[BANK1 ] unsigned long 
 18579 ;;  result          2   38[BANK1 ] int 
 18580 ;;  cnt             1   44[BANK1 ] unsigned char 
 18581 ;;  flag            1   37[BANK1 ] unsigned char 
 18582 ;; Return value:  Size  Location     Type
 18583 ;;                  2   29[BANK1 ] int 
 18584 ;; Registers used:
 18585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18586 ;; Tracked objects:
 18587 ;;		On entry : 0/0
 18588 ;;		On exit  : 0/0
 18589 ;;		Unchanged: 0/0
 18590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18591 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18592 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18593 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18594 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18595 ;;Total ram usage:       16 bytes
 18596 ;; Hardware stack levels used:    1
 18597 ;; Hardware stack levels required when called:    8
 18598 ;; This function calls:
 18599 ;;		_Sleep
 18600 ;;		_dwt_modify8bitoffsetreg
 18601 ;;		_dwt_read32bitoffsetreg
 18602 ;;		_dwt_read8bitoffsetreg
 18603 ;;		_dwt_write32bitoffsetreg
 18604 ;;		_dwt_write8bitoffsetreg
 18605 ;; This function is called by:
 18606 ;;		_dwt_pgf_cal
 18607 ;; This function uses a non-reentrant model
 18608 ;;
 18609                           
 18610                           
 18611                           ;psect for function _dwt_run_pgfcal
 18612  154F                     _dwt_run_pgfcal:	
 18613                           
 18614                           ;deca_device.c: 1630: int result = (0);
 18615                           
 18616                           ;incstack = 0
 18617                           ; Regs used in _dwt_run_pgfcal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18618  154F  0141               	movlb	1	; select bank1
 18619  1550  01C6               	clrf	dwt_run_pgfcal@result^(0+128)
 18620  1551  01C7               	clrf	(dwt_run_pgfcal@result+1)^(0+128)
 18621                           
 18622                           ;deca_device.c: 1631: uint32_t data;
 18623                           ;deca_device.c: 1632: uint32_t val = 0;
 18624  1552  3000               	movlw	0
 18625  1553  00CB               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 18626  1554  3000               	movlw	0
 18627  1555  00CA               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 18628  1556  3000               	movlw	0
 18629  1557  00C9               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 18630  1558  3000               	movlw	0
 18631  1559  00C8               	movwf	dwt_run_pgfcal@val^(0+128)
 18632                           
 18633                           ;deca_device.c: 1633: uint8_t cnt,flag;
 18634                           ;deca_device.c: 1636: data = (((uint32_t)0x02) << (16U)) | (0x3U & 0x1);
 18635  155A  3000               	movlw	0
 18636  155B  00C4               	movwf	(dwt_run_pgfcal@data+3)^(0+128)
 18637  155C  3002               	movlw	2
 18638  155D  00C3               	movwf	(dwt_run_pgfcal@data+2)^(0+128)
 18639  155E  3000               	movlw	0
 18640  155F  00C2               	movwf	(dwt_run_pgfcal@data+1)^(0+128)
 18641  1560  3001               	movlw	1
 18642  1561  00C1               	movwf	dwt_run_pgfcal@data^(0+128)
 18643                           
 18644                           ;deca_device.c: 1637: dwt_write32bitoffsetreg(0x4000c, 0x0, data);
 18645  1562  3000               	movlw	0
 18646  1563  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 18647  1564  3004               	movlw	4
 18648  1565  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 18649  1566  3000               	movlw	0
 18650  1567  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 18651  1568  300C               	movlw	12
 18652  1569  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 18653  156A  3000               	movlw	0
 18654  156B  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 18655  156C  3000               	movlw	0
 18656  156D  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 18657  156E  3000               	movlw	0
 18658  156F  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 18659  1570  3000               	movlw	0
 18660  1571  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 18661  1572  0844               	movf	(dwt_run_pgfcal@data+3)^(0+128),w
 18662  1573  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 18663  1574  0843               	movf	(dwt_run_pgfcal@data+2)^(0+128),w
 18664  1575  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 18665  1576  0842               	movf	(dwt_run_pgfcal@data+1)^(0+128),w
 18666  1577  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 18667  1578  0841               	movf	dwt_run_pgfcal@data^(0+128),w
 18668  1579  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 18669  157A  31A7  27B4  3195   	fcall	_dwt_write32bitoffsetreg
 18670                           
 18671                           ;deca_device.c: 1639: dwt_modify8bitoffsetreg(0x4000c, 0x0, -1, 0x10U);
 18672  157D  3000               	movlw	0
 18673  157E  0141               	movlb	1	; select bank1
 18674  157F  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 18675  1580  3004               	movlw	4
 18676  1581  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 18677  1582  3000               	movlw	0
 18678  1583  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 18679  1584  300C               	movlw	12
 18680  1585  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 18681  1586  3000               	movlw	0
 18682  1587  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 18683  1588  3000               	movlw	0
 18684  1589  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 18685  158A  3000               	movlw	0
 18686  158B  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 18687  158C  3000               	movlw	0
 18688  158D  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 18689  158E  30FF               	movlw	255
 18690  158F  00BF               	movwf	??_dwt_run_pgfcal^(0+128)
 18691  1590  083F               	movf	??_dwt_run_pgfcal^(0+128),w
 18692  1591  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 18693  1592  3010               	movlw	16
 18694  1593  00C0               	movwf	(??_dwt_run_pgfcal+1)^(0+128)
 18695  1594  0840               	movf	(??_dwt_run_pgfcal+1)^(0+128),w
 18696  1595  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 18697  1596  31A6  262A  3195   	fcall	_dwt_modify8bitoffsetreg
 18698                           
 18699                           ;deca_device.c: 1641: for (flag=1,cnt=0;cnt<(3);cnt++)
 18700  1599  0141               	movlb	1	; select bank1
 18701  159A  01C5               	clrf	dwt_run_pgfcal@flag^(0+128)
 18702  159B  0AC5               	incf	dwt_run_pgfcal@flag^(0+128),f
 18703  159C  01CC               	clrf	dwt_run_pgfcal@cnt^(0+128)
 18704  159D  3003               	movlw	3
 18705  159E  024C               	subwf	dwt_run_pgfcal@cnt^(0+128),w
 18706  159F  1803               	btfsc	3,0
 18707  15A0  2DCF               	goto	l5675
 18708  15A1                     l5665:	
 18709                           
 18710                           ;deca_device.c: 1642: {
 18711                           ;deca_device.c: 1643: Sleep(1);
 18712  15A1  3000               	movlw	0
 18713  15A2  00F3               	movwf	Sleep@time+3
 18714  15A3  3000               	movlw	0
 18715  15A4  00F2               	movwf	Sleep@time+2
 18716  15A5  3000               	movlw	0
 18717  15A6  00F1               	movwf	Sleep@time+1
 18718  15A7  3001               	movlw	1
 18719  15A8  00F0               	movwf	Sleep@time
 18720  15A9  31A4  241F  3195   	fcall	_Sleep
 18721                           
 18722                           ;deca_device.c: 1644: if(dwt_read8bitoffsetreg(0x40020, 0x0) == 1)
 18723  15AC  3000               	movlw	0
 18724  15AD  0140               	movlb	0	; select bank0
 18725  15AE  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 18726  15AF  3004               	movlw	4
 18727  15B0  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 18728  15B1  3000               	movlw	0
 18729  15B2  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 18730  15B3  3020               	movlw	32
 18731  15B4  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 18732  15B5  3000               	movlw	0
 18733  15B6  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 18734  15B7  3000               	movlw	0
 18735  15B8  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 18736  15B9  3000               	movlw	0
 18737  15BA  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 18738  15BB  3000               	movlw	0
 18739  15BC  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 18740  15BD  31A2  22CC  3195   	fcall	_dwt_read8bitoffsetreg
 18741  15C0  3A01               	xorlw	1
 18742  15C1  1D03               	skipz
 18743  15C2  2DC6               	goto	l5671
 18744                           
 18745                           ;deca_device.c: 1645: {
 18746                           ;deca_device.c: 1646: flag=0;
 18747  15C3  0141               	movlb	1	; select bank1
 18748  15C4  01C5               	clrf	dwt_run_pgfcal@flag^(0+128)
 18749                           
 18750                           ;deca_device.c: 1647: break;
 18751  15C5  2DCF               	goto	l5675
 18752  15C6                     l5671:	
 18753  15C6  3001               	movlw	1
 18754  15C7  0141               	movlb	1	; select bank1
 18755  15C8  00BF               	movwf	??_dwt_run_pgfcal^(0+128)
 18756  15C9  083F               	movf	??_dwt_run_pgfcal^(0+128),w
 18757  15CA  07CC               	addwf	dwt_run_pgfcal@cnt^(0+128),f
 18758  15CB  3003               	movlw	3
 18759  15CC  024C               	subwf	dwt_run_pgfcal@cnt^(0+128),w
 18760  15CD  1C03               	skipc
 18761  15CE  2DA1               	goto	l5665
 18762  15CF                     l5675:	
 18763                           
 18764                           ;deca_device.c: 1648: }
 18765                           ;deca_device.c: 1649: }
 18766                           ;deca_device.c: 1650: if (flag)
 18767  15CF  0845               	movf	dwt_run_pgfcal@flag^(0+128),w
 18768  15D0  1903               	btfsc	3,2
 18769  15D1  2DD6               	goto	l5679
 18770                           
 18771                           ;deca_device.c: 1651: {
 18772                           ;deca_device.c: 1652: result = (-1);
 18773  15D2  30FF               	movlw	255
 18774  15D3  00C6               	movwf	dwt_run_pgfcal@result^(0+128)
 18775  15D4  30FF               	movlw	255
 18776  15D5  00C7               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 18777  15D6                     l5679:	
 18778                           
 18779                           ;deca_device.c: 1653: }
 18780                           ;deca_device.c: 1656: dwt_write8bitoffsetreg(0x4000c, 0x0, 0);
 18781  15D6  3000               	movlw	0
 18782  15D7  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 18783  15D8  3004               	movlw	4
 18784  15D9  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 18785  15DA  3000               	movlw	0
 18786  15DB  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 18787  15DC  300C               	movlw	12
 18788  15DD  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 18789  15DE  3000               	movlw	0
 18790  15DF  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 18791  15E0  3000               	movlw	0
 18792  15E1  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 18793  15E2  3000               	movlw	0
 18794  15E3  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 18795  15E4  3000               	movlw	0
 18796  15E5  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 18797  15E6  01B4               	clrf	dwt_write8bitoffsetreg@regval^(0+128)
 18798  15E7  31A2  2207  3195   	fcall	_dwt_write8bitoffsetreg
 18799                           
 18800                           ;deca_device.c: 1657: dwt_write8bitoffsetreg(0x40020, 0x0, 1);
 18801  15EA  3000               	movlw	0
 18802  15EB  0141               	movlb	1	; select bank1
 18803  15EC  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 18804  15ED  3004               	movlw	4
 18805  15EE  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 18806  15EF  3000               	movlw	0
 18807  15F0  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 18808  15F1  3020               	movlw	32
 18809  15F2  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 18810  15F3  3000               	movlw	0
 18811  15F4  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 18812  15F5  3000               	movlw	0
 18813  15F6  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 18814  15F7  3000               	movlw	0
 18815  15F8  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 18816  15F9  3000               	movlw	0
 18817  15FA  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 18818  15FB  01B4               	clrf	dwt_write8bitoffsetreg@regval^(0+128)
 18819  15FC  0AB4               	incf	dwt_write8bitoffsetreg@regval^(0+128),f
 18820  15FD  31A2  2207  3195   	fcall	_dwt_write8bitoffsetreg
 18821                           
 18822                           ;deca_device.c: 1658: dwt_modify8bitoffsetreg(0x4000c, 0x2, -1, 0x1);
 18823  1600  3000               	movlw	0
 18824  1601  0141               	movlb	1	; select bank1
 18825  1602  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 18826  1603  3004               	movlw	4
 18827  1604  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 18828  1605  3000               	movlw	0
 18829  1606  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 18830  1607  300C               	movlw	12
 18831  1608  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 18832  1609  3000               	movlw	0
 18833  160A  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 18834  160B  3000               	movlw	0
 18835  160C  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 18836  160D  3000               	movlw	0
 18837  160E  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 18838  160F  3002               	movlw	2
 18839  1610  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 18840  1611  30FF               	movlw	255
 18841  1612  00BF               	movwf	??_dwt_run_pgfcal^(0+128)
 18842  1613  083F               	movf	??_dwt_run_pgfcal^(0+128),w
 18843  1614  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 18844  1615  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 18845  1616  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 18846  1617  31A6  262A  3195   	fcall	_dwt_modify8bitoffsetreg
 18847                           
 18848                           ;deca_device.c: 1659: val = dwt_read32bitoffsetreg(0x40014, 0x0);
 18849  161A  3000               	movlw	0
 18850  161B  0140               	movlb	0	; select bank0
 18851  161C  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 18852  161D  3004               	movlw	4
 18853  161E  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 18854  161F  3000               	movlw	0
 18855  1620  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 18856  1621  3014               	movlw	20
 18857  1622  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 18858  1623  3000               	movlw	0
 18859  1624  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 18860  1625  3000               	movlw	0
 18861  1626  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 18862  1627  3000               	movlw	0
 18863  1628  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 18864  1629  3000               	movlw	0
 18865  162A  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 18866  162B  319C  246C  3195   	fcall	_dwt_read32bitoffsetreg
 18867  162E  0140               	movlb	0	; select bank0
 18868  162F  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 18869  1630  0141               	movlb	1	; select bank1
 18870  1631  00CB               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 18871  1632  0140               	movlb	0	; select bank0
 18872  1633  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 18873  1634  0141               	movlb	1	; select bank1
 18874  1635  00CA               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 18875  1636  0140               	movlb	0	; select bank0
 18876  1637  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 18877  1638  0141               	movlb	1	; select bank1
 18878  1639  00C9               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 18879  163A  0140               	movlb	0	; select bank0
 18880  163B  0868               	movf	?_dwt_read32bitoffsetreg,w
 18881  163C  0141               	movlb	1	; select bank1
 18882  163D  00C8               	movwf	dwt_run_pgfcal@val^(0+128)
 18883                           
 18884                           ;deca_device.c: 1660: if (val == 0x1fffffff)
 18885  163E  0A48               	incf	dwt_run_pgfcal@val^(0+128),w
 18886  163F  1D03               	skipz
 18887  1640  2E4E               	goto	l5691
 18888  1641  0A49               	incf	(dwt_run_pgfcal@val+1)^(0+128),w
 18889  1642  1D03               	skipz
 18890  1643  2E4E               	goto	l5691
 18891  1644  0A4A               	incf	(dwt_run_pgfcal@val+2)^(0+128),w
 18892  1645  301F               	movlw	31
 18893  1646  1903               	skipnz
 18894  1647  064B               	xorwf	(dwt_run_pgfcal@val+3)^(0+128),w
 18895  1648  1D03               	btfss	3,2
 18896  1649  2E4E               	goto	l5691
 18897                           
 18898                           ;deca_device.c: 1661: {
 18899                           ;deca_device.c: 1663: result = (-1);
 18900  164A  30FF               	movlw	255
 18901  164B  00C6               	movwf	dwt_run_pgfcal@result^(0+128)
 18902  164C  30FF               	movlw	255
 18903  164D  00C7               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 18904  164E                     l5691:	
 18905                           
 18906                           ;deca_device.c: 1664: }
 18907                           ;deca_device.c: 1665: val = dwt_read32bitoffsetreg(0x4001c, 0x0);
 18908  164E  3000               	movlw	0
 18909  164F  0140               	movlb	0	; select bank0
 18910  1650  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 18911  1651  3004               	movlw	4
 18912  1652  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 18913  1653  3000               	movlw	0
 18914  1654  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 18915  1655  301C               	movlw	28
 18916  1656  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 18917  1657  3000               	movlw	0
 18918  1658  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 18919  1659  3000               	movlw	0
 18920  165A  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 18921  165B  3000               	movlw	0
 18922  165C  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 18923  165D  3000               	movlw	0
 18924  165E  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 18925  165F  319C  246C  3195   	fcall	_dwt_read32bitoffsetreg
 18926  1662  0140               	movlb	0	; select bank0
 18927  1663  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 18928  1664  0141               	movlb	1	; select bank1
 18929  1665  00CB               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 18930  1666  0140               	movlb	0	; select bank0
 18931  1667  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 18932  1668  0141               	movlb	1	; select bank1
 18933  1669  00CA               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 18934  166A  0140               	movlb	0	; select bank0
 18935  166B  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 18936  166C  0141               	movlb	1	; select bank1
 18937  166D  00C9               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 18938  166E  0140               	movlb	0	; select bank0
 18939  166F  0868               	movf	?_dwt_read32bitoffsetreg,w
 18940  1670  0141               	movlb	1	; select bank1
 18941  1671  00C8               	movwf	dwt_run_pgfcal@val^(0+128)
 18942                           
 18943                           ;deca_device.c: 1666: if (val == 0x1fffffff)
 18944  1672  0A48               	incf	dwt_run_pgfcal@val^(0+128),w
 18945  1673  1D03               	skipz
 18946  1674  2E82               	goto	l640
 18947  1675  0A49               	incf	(dwt_run_pgfcal@val+1)^(0+128),w
 18948  1676  1D03               	skipz
 18949  1677  2E82               	goto	l640
 18950  1678  0A4A               	incf	(dwt_run_pgfcal@val+2)^(0+128),w
 18951  1679  301F               	movlw	31
 18952  167A  1903               	skipnz
 18953  167B  064B               	xorwf	(dwt_run_pgfcal@val+3)^(0+128),w
 18954  167C  1D03               	btfss	3,2
 18955  167D  2E82               	goto	l640
 18956                           
 18957                           ;deca_device.c: 1667: {
 18958                           ;deca_device.c: 1669: result = (-1);
 18959  167E  30FF               	movlw	255
 18960  167F  00C6               	movwf	dwt_run_pgfcal@result^(0+128)
 18961  1680  30FF               	movlw	255
 18962  1681  00C7               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 18963  1682                     l640:	
 18964                           
 18965                           ;deca_device.c: 1670: }
 18966                           ;deca_device.c: 1672: return result;
 18967  1682  0847               	movf	(dwt_run_pgfcal@result+1)^(0+128),w
 18968  1683  00BE               	movwf	(?_dwt_run_pgfcal+1)^(0+128)
 18969  1684  0846               	movf	dwt_run_pgfcal@result^(0+128),w
 18970  1685  00BD               	movwf	?_dwt_run_pgfcal^(0+128)
 18971  1686  0008               	return
 18972  1687                     __end_of_dwt_run_pgfcal:	
 18973                           
 18974                           	psect	text50
 18975  2207                     __ptext50:	
 18976 ;; *************** function _dwt_write8bitoffsetreg *****************
 18977 ;; Defined at:
 18978 ;;		line 515 in file "deca_device.c"
 18979 ;; Parameters:    Size  Location     Type
 18980 ;;  regFileID       4   12[BANK1 ] unsigned long 
 18981 ;;  regOffset       4   16[BANK1 ] unsigned long 
 18982 ;;  regval          1   20[BANK1 ] unsigned char 
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;		None
 18985 ;; Return value:  Size  Location     Type
 18986 ;;                  1    wreg      void 
 18987 ;; Registers used:
 18988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 0/0
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18994 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18997 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18998 ;;Total ram usage:        9 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; Hardware stack levels required when called:    7
 19001 ;; This function calls:
 19002 ;;		_dwt_writetodevice
 19003 ;; This function is called by:
 19004 ;;		_dwt_initialise
 19005 ;;		_dwt_configuretxrf
 19006 ;;		_dwt_configure
 19007 ;;		_dwt_run_pgfcal
 19008 ;;		_dwt_setplenfine
 19009 ;;		_dwt_restoreconfig
 19010 ;;		_dwt_aon_read
 19011 ;;		_dwt_aon_write
 19012 ;;		_dwt_entersleep
 19013 ;;		_dwt_configuresleep
 19014 ;;		_dwt_clearaonconfig
 19015 ;;		_dwt_configciadiag
 19016 ;;		_dwt_enableautoack
 19017 ;;		_dwt_isr
 19018 ;;		_dwt_configeventcounters
 19019 ;;		_dwt_softreset
 19020 ;;		_dwt_setxtaltrim
 19021 ;;		_dwt_readtempvbat
 19022 ;;		_dwt_calcpgcount
 19023 ;;		_dwt_wait_aes_poll
 19024 ;;		_dwt_do_aes
 19025 ;; This function uses a non-reentrant model
 19026 ;;
 19027                           
 19028                           
 19029                           ;psect for function _dwt_write8bitoffsetreg
 19030  2207                     _dwt_write8bitoffsetreg:	
 19031                           
 19032                           ;deca_device.c: 519: dwt_writetodevice(regFileID, regOffset, 1, &regval);
 19033                           
 19034                           ;incstack = 0
 19035                           ; Regs used in _dwt_write8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19036  2207  0141               	movlb	1	; select bank1
 19037  2208  082F               	movf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128),w
 19038  2209  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 19039  220A  082E               	movf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128),w
 19040  220B  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 19041  220C  082D               	movf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128),w
 19042  220D  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 19043  220E  082C               	movf	dwt_write8bitoffsetreg@regFileID^(0+128),w
 19044  220F  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 19045  2210  0831               	movf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128),w
 19046  2211  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 19047  2212  0830               	movf	dwt_write8bitoffsetreg@regOffset^(0+128),w
 19048  2213  00A4               	movwf	dwt_writetodevice@index^(0+128)
 19049  2214  3000               	movlw	0
 19050  2215  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 19051  2216  3000               	movlw	0
 19052  2217  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 19053  2218  3000               	movlw	0
 19054  2219  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 19055  221A  3001               	movlw	1
 19056  221B  00A6               	movwf	dwt_writetodevice@length^(0+128)
 19057  221C  30B4               	movlw	low dwt_write8bitoffsetreg@regval
 19058  221D  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 19059  221E  3000               	movlw	high dwt_write8bitoffsetreg@regval
 19060  221F  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 19061  2220  31A5  25F3         	fcall	_dwt_writetodevice
 19062  2222  0008               	return
 19063  2223                     __end_of_dwt_write8bitoffsetreg:	
 19064                           
 19065                           	psect	text51
 19066  22CC                     __ptext51:	
 19067 ;; *************** function _dwt_read8bitoffsetreg *****************
 19068 ;; Defined at:
 19069 ;;		line 446 in file "deca_device.c"
 19070 ;; Parameters:    Size  Location     Type
 19071 ;;  regFileID       4   72[BANK0 ] unsigned long 
 19072 ;;  regOffset       4   76[BANK0 ] unsigned long 
 19073 ;; Auto vars:     Size  Location     Type
 19074 ;;  regval          1    0[BANK1 ] unsigned char 
 19075 ;; Return value:  Size  Location     Type
 19076 ;;                  1    wreg      unsigned char 
 19077 ;; Registers used:
 19078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19079 ;; Tracked objects:
 19080 ;;		On entry : 0/0
 19081 ;;		On exit  : 0/0
 19082 ;;		Unchanged: 0/0
 19083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19084 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19085 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19087 ;;      Totals:         0       8       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19088 ;;Total ram usage:        9 bytes
 19089 ;; Hardware stack levels used:    1
 19090 ;; Hardware stack levels required when called:    6
 19091 ;; This function calls:
 19092 ;;		_dwt_xfer3000
 19093 ;; This function is called by:
 19094 ;;		_dwt_configuretxrf
 19095 ;;		_dwt_configure
 19096 ;;		_dwt_run_pgfcal
 19097 ;;		_dwt_writetxfctrl
 19098 ;;		_dwt_starttx
 19099 ;;		_dwt_calcbandwidthadj
 19100 ;;		_dwt_readpgdelay
 19101 ;;		_dwt_aon_read
 19102 ;;		_dwt_checkirq
 19103 ;;		_dwt_isr
 19104 ;;		_dwt_rxenable
 19105 ;;		_dwt_readtempvbat
 19106 ;;		_dwt_readwakeuptemp
 19107 ;;		_dwt_readwakeupvbat
 19108 ;;		_dwt_calcpgcount
 19109 ;;		_dwt_wait_aes_poll
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           
 19114                           ;psect for function _dwt_read8bitoffsetreg
 19115  22CC                     _dwt_read8bitoffsetreg:	
 19116                           
 19117                           ;deca_device.c: 448: uint8_t regval;
 19118                           ;deca_device.c: 449: dwt_xfer3000(regFileID, regOffset, 1, &regval, DW3000_SPI_RD_BIT);
 19119                           
 19120                           ;incstack = 0
 19121                           ; Regs used in _dwt_read8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19122  22CC  0140               	movlb	0	; select bank0
 19123  22CD  086B               	movf	dwt_read8bitoffsetreg@regFileID+3,w
 19124  22CE  00CA               	movwf	dwt_xfer3000@regFileID+3
 19125  22CF  086A               	movf	dwt_read8bitoffsetreg@regFileID+2,w
 19126  22D0  00C9               	movwf	dwt_xfer3000@regFileID+2
 19127  22D1  0869               	movf	dwt_read8bitoffsetreg@regFileID+1,w
 19128  22D2  00C8               	movwf	dwt_xfer3000@regFileID+1
 19129  22D3  0868               	movf	dwt_read8bitoffsetreg@regFileID,w
 19130  22D4  00C7               	movwf	dwt_xfer3000@regFileID
 19131  22D5  086D               	movf	dwt_read8bitoffsetreg@regOffset+1,w
 19132  22D6  00CC               	movwf	dwt_xfer3000@indx+1
 19133  22D7  086C               	movf	dwt_read8bitoffsetreg@regOffset,w
 19134  22D8  00CB               	movwf	dwt_xfer3000@indx
 19135  22D9  3000               	movlw	0
 19136  22DA  00D0               	movwf	dwt_xfer3000@length+3
 19137  22DB  3000               	movlw	0
 19138  22DC  00CF               	movwf	dwt_xfer3000@length+2
 19139  22DD  3000               	movlw	0
 19140  22DE  00CE               	movwf	dwt_xfer3000@length+1
 19141  22DF  3001               	movlw	1
 19142  22E0  00CD               	movwf	dwt_xfer3000@length
 19143  22E1  30A0               	movlw	low dwt_read8bitoffsetreg@regval
 19144  22E2  00D1               	movwf	dwt_xfer3000@buffer
 19145  22E3  3000               	movlw	high dwt_read8bitoffsetreg@regval
 19146  22E4  00D2               	movwf	dwt_xfer3000@buffer+1
 19147  22E5  3000               	movlw	0
 19148  22E6  00D3               	movwf	dwt_xfer3000@mode
 19149  22E7  00D4               	movwf	dwt_xfer3000@mode+1
 19150  22E8  3189  216C         	fcall	_dwt_xfer3000
 19151                           
 19152                           ;deca_device.c: 452: return regval ;
 19153  22EA  0141               	movlb	1	; select bank1
 19154  22EB  0820               	movf	dwt_read8bitoffsetreg@regval^(0+128),w
 19155  22EC  0008               	return
 19156  22ED                     __end_of_dwt_read8bitoffsetreg:	
 19157                           
 19158                           	psect	text52
 19159  1C6C                     __ptext52:	
 19160 ;; *************** function _dwt_read32bitoffsetreg *****************
 19161 ;; Defined at:
 19162 ;;		line 394 in file "deca_device.c"
 19163 ;; Parameters:    Size  Location     Type
 19164 ;;  regFileID       4   72[BANK0 ] unsigned long 
 19165 ;;  regOffset       4   76[BANK0 ] unsigned long 
 19166 ;; Auto vars:     Size  Location     Type
 19167 ;;  buffer          4   19[BANK1 ] unsigned char [4]
 19168 ;;  regval          4   23[BANK1 ] unsigned long 
 19169 ;;  j               2   27[BANK1 ] int 
 19170 ;; Return value:  Size  Location     Type
 19171 ;;                  4   72[BANK0 ] unsigned long 
 19172 ;; Registers used:
 19173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19174 ;; Tracked objects:
 19175 ;;		On entry : 0/0
 19176 ;;		On exit  : 0/0
 19177 ;;		Unchanged: 0/0
 19178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19179 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19180 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19181 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19182 ;;      Totals:         0       8      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19183 ;;Total ram usage:       26 bytes
 19184 ;; Hardware stack levels used:    1
 19185 ;; Hardware stack levels required when called:    7
 19186 ;; This function calls:
 19187 ;;		_dwt_readfromdevice
 19188 ;; This function is called by:
 19189 ;;		_dwt_readdevid
 19190 ;;		_dwt_configure
 19191 ;;		_dwt_run_pgfcal
 19192 ;;		__dwt_otpread
 19193 ;;		_dwt_starttx
 19194 ;;		_dwt_setlnapamode
 19195 ;;		_dwt_readtxtimestamphi32
 19196 ;;		_dwt_readtxtimestamplo32
 19197 ;;		_dwt_readrxtimestamphi32
 19198 ;;		_dwt_readrxtimestamplo32
 19199 ;;		_dwt_readsystimestamphi32
 19200 ;;		__dwt_otpprogword32
 19201 ;;		_dwt_setrxaftertxdelay
 19202 ;;		_dwt_isr
 19203 ;;		_dwt_readeventcounters
 19204 ;; This function uses a non-reentrant model
 19205 ;;
 19206                           
 19207                           
 19208                           ;psect for function _dwt_read32bitoffsetreg
 19209  1C6C                     _dwt_read32bitoffsetreg:	
 19210                           
 19211                           ;deca_device.c: 396: int j ;
 19212                           ;deca_device.c: 397: uint32_t regval = 0 ;
 19213                           
 19214                           ;incstack = 0
 19215                           ; Regs used in _dwt_read32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19216  1C6C  3000               	movlw	0
 19217  1C6D  0141               	movlb	1	; select bank1
 19218  1C6E  00BA               	movwf	(dwt_read32bitoffsetreg@regval+3)^(0+128)
 19219  1C6F  3000               	movlw	0
 19220  1C70  00B9               	movwf	(dwt_read32bitoffsetreg@regval+2)^(0+128)
 19221  1C71  3000               	movlw	0
 19222  1C72  00B8               	movwf	(dwt_read32bitoffsetreg@regval+1)^(0+128)
 19223  1C73  3000               	movlw	0
 19224  1C74  00B7               	movwf	dwt_read32bitoffsetreg@regval^(0+128)
 19225                           
 19226                           ;deca_device.c: 398: uint8_t buffer[4] ;
 19227                           ;deca_device.c: 400: dwt_readfromdevice(regFileID,regOffset,4,buffer);
 19228  1C75  0140               	movlb	0	; select bank0
 19229  1C76  086B               	movf	dwt_read32bitoffsetreg@regFileID+3,w
 19230  1C77  0141               	movlb	1	; select bank1
 19231  1C78  00A3               	movwf	(dwt_readfromdevice@regFileID+3)^(0+128)
 19232  1C79  0140               	movlb	0	; select bank0
 19233  1C7A  086A               	movf	dwt_read32bitoffsetreg@regFileID+2,w
 19234  1C7B  0141               	movlb	1	; select bank1
 19235  1C7C  00A2               	movwf	(dwt_readfromdevice@regFileID+2)^(0+128)
 19236  1C7D  0140               	movlb	0	; select bank0
 19237  1C7E  0869               	movf	dwt_read32bitoffsetreg@regFileID+1,w
 19238  1C7F  0141               	movlb	1	; select bank1
 19239  1C80  00A1               	movwf	(dwt_readfromdevice@regFileID+1)^(0+128)
 19240  1C81  0140               	movlb	0	; select bank0
 19241  1C82  0868               	movf	dwt_read32bitoffsetreg@regFileID,w
 19242  1C83  0141               	movlb	1	; select bank1
 19243  1C84  00A0               	movwf	dwt_readfromdevice@regFileID^(0+128)
 19244  1C85  0140               	movlb	0	; select bank0
 19245  1C86  086D               	movf	dwt_read32bitoffsetreg@regOffset+1,w
 19246  1C87  0141               	movlb	1	; select bank1
 19247  1C88  00A5               	movwf	(dwt_readfromdevice@index+1)^(0+128)
 19248  1C89  0140               	movlb	0	; select bank0
 19249  1C8A  086C               	movf	dwt_read32bitoffsetreg@regOffset,w
 19250  1C8B  0141               	movlb	1	; select bank1
 19251  1C8C  00A4               	movwf	dwt_readfromdevice@index^(0+128)
 19252  1C8D  3000               	movlw	0
 19253  1C8E  00A9               	movwf	(dwt_readfromdevice@length+3)^(0+128)
 19254  1C8F  3000               	movlw	0
 19255  1C90  00A8               	movwf	(dwt_readfromdevice@length+2)^(0+128)
 19256  1C91  3000               	movlw	0
 19257  1C92  00A7               	movwf	(dwt_readfromdevice@length+1)^(0+128)
 19258  1C93  3004               	movlw	4
 19259  1C94  00A6               	movwf	dwt_readfromdevice@length^(0+128)
 19260  1C95  30B3               	movlw	(low (dwt_read32bitoffsetreg@buffer| 0))& (0+255)
 19261  1C96  00AB               	movwf	??_dwt_read32bitoffsetreg^(0+128)
 19262  1C97  082B               	movf	??_dwt_read32bitoffsetreg^(0+128),w
 19263  1C98  00AA               	movwf	dwt_readfromdevice@buffer^(0+128)
 19264  1C99  31A5  25BF  319C   	fcall	_dwt_readfromdevice
 19265                           
 19266                           ;deca_device.c: 403: for (j = 3 ; j >= 0 ; j --)
 19267  1C9C  3003               	movlw	3
 19268  1C9D  0141               	movlb	1	; select bank1
 19269  1C9E  00BB               	movwf	dwt_read32bitoffsetreg@j^(0+128)
 19270  1C9F  3000               	movlw	0
 19271  1CA0  00BC               	movwf	(dwt_read32bitoffsetreg@j^(0+128)+1)
 19272  1CA1  1BBC               	btfsc	(dwt_read32bitoffsetreg@j+1)^(0+128),7
 19273  1CA2  2CD1               	goto	l5563
 19274  1CA3                     l5557:	
 19275                           
 19276                           ;deca_device.c: 404: {
 19277                           ;deca_device.c: 405: regval = (regval << 8) + buffer[j] ;
 19278  1CA3  083B               	movf	dwt_read32bitoffsetreg@j^(0+128),w
 19279  1CA4  3EB3               	addlw	(low (dwt_read32bitoffsetreg@buffer| 0))& (0+255)
 19280  1CA5  0086               	movwf	6
 19281  1CA6  0187               	clrf	7
 19282  1CA7  0801               	movf	1,w
 19283  1CA8  00AB               	movwf	??_dwt_read32bitoffsetreg^(0+128)
 19284  1CA9  01AC               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+1)
 19285  1CAA  01AD               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+2)
 19286  1CAB  01AE               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+3)
 19287  1CAC  0837               	movf	dwt_read32bitoffsetreg@regval^(0+128),w
 19288  1CAD  00AF               	movwf	(??_dwt_read32bitoffsetreg+4)^(0+128)
 19289  1CAE  0838               	movf	(dwt_read32bitoffsetreg@regval+1)^(0+128),w
 19290  1CAF  00B0               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+1)
 19291  1CB0  0839               	movf	(dwt_read32bitoffsetreg@regval+2)^(0+128),w
 19292  1CB1  00B1               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+2)
 19293  1CB2  083A               	movf	(dwt_read32bitoffsetreg@regval+3)^(0+128),w
 19294  1CB3  00B2               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+3)
 19295  1CB4  3008               	movlw	8
 19296  1CB5                     u4905:	
 19297  1CB5  35AF               	lslf	(??_dwt_read32bitoffsetreg+4)^(0+128),f
 19298  1CB6  0DB0               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+1),f
 19299  1CB7  0DB1               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+2),f
 19300  1CB8  0DB2               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+3),f
 19301  1CB9  0B89               	decfsz	9,f
 19302  1CBA  2CB5               	goto	u4905
 19303  1CBB  082F               	movf	(??_dwt_read32bitoffsetreg+4)^(0+128),w
 19304  1CBC  07AB               	addwf	??_dwt_read32bitoffsetreg^(0+128),f
 19305  1CBD  0830               	movf	(??_dwt_read32bitoffsetreg+5)^(0+128),w
 19306  1CBE  3DAC               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+1),f
 19307  1CBF  0831               	movf	(??_dwt_read32bitoffsetreg+6)^(0+128),w
 19308  1CC0  3DAD               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+2),f
 19309  1CC1  0832               	movf	(??_dwt_read32bitoffsetreg+7)^(0+128),w
 19310  1CC2  3DAE               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+3),f
 19311  1CC3  082E               	movf	(??_dwt_read32bitoffsetreg+3)^(0+128),w
 19312  1CC4  00BA               	movwf	(dwt_read32bitoffsetreg@regval+3)^(0+128)
 19313  1CC5  082D               	movf	(??_dwt_read32bitoffsetreg+2)^(0+128),w
 19314  1CC6  00B9               	movwf	(dwt_read32bitoffsetreg@regval+2)^(0+128)
 19315  1CC7  082C               	movf	(??_dwt_read32bitoffsetreg+1)^(0+128),w
 19316  1CC8  00B8               	movwf	(dwt_read32bitoffsetreg@regval+1)^(0+128)
 19317  1CC9  082B               	movf	??_dwt_read32bitoffsetreg^(0+128),w
 19318  1CCA  00B7               	movwf	dwt_read32bitoffsetreg@regval^(0+128)
 19319  1CCB  30FF               	movlw	255
 19320  1CCC  07BB               	addwf	dwt_read32bitoffsetreg@j^(0+128),f
 19321  1CCD  30FF               	movlw	255
 19322  1CCE  3DBC               	addwfc	(dwt_read32bitoffsetreg@j+1)^(0+128),f
 19323  1CCF  1FBC               	btfss	(dwt_read32bitoffsetreg@j+1)^(0+128),7
 19324  1CD0  2CA3               	goto	l5557
 19325  1CD1                     l5563:	
 19326                           
 19327                           ;deca_device.c: 406: }
 19328                           ;deca_device.c: 408: return (regval);
 19329  1CD1  083A               	movf	(dwt_read32bitoffsetreg@regval+3)^(0+128),w
 19330  1CD2  0140               	movlb	0	; select bank0
 19331  1CD3  00EB               	movwf	?_dwt_read32bitoffsetreg+3
 19332  1CD4  0141               	movlb	1	; select bank1
 19333  1CD5  0839               	movf	(dwt_read32bitoffsetreg@regval+2)^(0+128),w
 19334  1CD6  0140               	movlb	0	; select bank0
 19335  1CD7  00EA               	movwf	?_dwt_read32bitoffsetreg+2
 19336  1CD8  0141               	movlb	1	; select bank1
 19337  1CD9  0838               	movf	(dwt_read32bitoffsetreg@regval+1)^(0+128),w
 19338  1CDA  0140               	movlb	0	; select bank0
 19339  1CDB  00E9               	movwf	?_dwt_read32bitoffsetreg+1
 19340  1CDC  0141               	movlb	1	; select bank1
 19341  1CDD  0837               	movf	dwt_read32bitoffsetreg@regval^(0+128),w
 19342  1CDE  0140               	movlb	0	; select bank0
 19343  1CDF  00E8               	movwf	?_dwt_read32bitoffsetreg
 19344  1CE0  0008               	return
 19345  1CE1                     __end_of_dwt_read32bitoffsetreg:	
 19346                           
 19347                           	psect	text53
 19348  262A                     __ptext53:	
 19349 ;; *************** function _dwt_modify8bitoffsetreg *****************
 19350 ;; Defined at:
 19351 ;;		line 576 in file "deca_device.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 19354 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 19355 ;;  _and            1    8[BANK1 ] const unsigned char 
 19356 ;;  _or             1    9[BANK1 ] const unsigned char 
 19357 ;; Auto vars:     Size  Location     Type
 19358 ;;  buf             2   73[BANK0 ] unsigned char [2]
 19359 ;; Return value:  Size  Location     Type
 19360 ;;                  1    wreg      void 
 19361 ;; Registers used:
 19362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19363 ;; Tracked objects:
 19364 ;;		On entry : 0/0
 19365 ;;		On exit  : 0/0
 19366 ;;		Unchanged: 0/0
 19367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19368 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19371 ;;      Totals:         0       3      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19372 ;;Total ram usage:       13 bytes
 19373 ;; Hardware stack levels used:    1
 19374 ;; Hardware stack levels required when called:    6
 19375 ;; This function calls:
 19376 ;;		_dwt_xfer3000
 19377 ;; This function is called by:
 19378 ;;		_dwt_setdwstate
 19379 ;;		_dwt_configure
 19380 ;;		_dwt_run_pgfcal
 19381 ;;		_dwt_calcbandwidthadj
 19382 ;;		_dwt_enablespicrccheck
 19383 ;;		_dwt_configurestsloadiv
 19384 ;;		_dwt_configureframefilter
 19385 ;;		_dwt_entersleep
 19386 ;;		_dwt_calibratesleepcnt
 19387 ;;		_dwt_configciadiag
 19388 ;;		_dwt_softreset
 19389 ;;		_dwt_repeated_frames
 19390 ;;		_dwt_readtempvbat
 19391 ;;		_dwt_calcpgcount
 19392 ;; This function uses a non-reentrant model
 19393 ;;
 19394                           
 19395                           
 19396                           ;psect for function _dwt_modify8bitoffsetreg
 19397  262A                     _dwt_modify8bitoffsetreg:	
 19398                           
 19399                           ;deca_device.c: 578: uint8_t buf[2];
 19400                           ;deca_device.c: 579: buf[0] = _and;
 19401                           
 19402                           ;incstack = 0
 19403                           ; Regs used in _dwt_modify8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19404  262A  0141               	movlb	1	; select bank1
 19405  262B  0828               	movf	dwt_modify8bitoffsetreg@_and^(0+128),w
 19406  262C  0140               	movlb	0	; select bank0
 19407  262D  00E8               	movwf	??_dwt_modify8bitoffsetreg
 19408  262E  0868               	movf	??_dwt_modify8bitoffsetreg,w
 19409  262F  00E9               	movwf	dwt_modify8bitoffsetreg@buf
 19410                           
 19411                           ;deca_device.c: 580: buf[1] = _or;
 19412  2630  0141               	movlb	1	; select bank1
 19413  2631  0829               	movf	dwt_modify8bitoffsetreg@_or^(0+128),w
 19414  2632  0140               	movlb	0	; select bank0
 19415  2633  00E8               	movwf	??_dwt_modify8bitoffsetreg
 19416  2634  0868               	movf	??_dwt_modify8bitoffsetreg,w
 19417  2635  00EA               	movwf	dwt_modify8bitoffsetreg@buf+1
 19418                           
 19419                           ;deca_device.c: 581: dwt_xfer3000(regFileID, regOffset, sizeof(buf),buf, DW3000_SPI_AND_
      +                          OR_8);
 19420  2636  0141               	movlb	1	; select bank1
 19421  2637  0823               	movf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128),w
 19422  2638  0140               	movlb	0	; select bank0
 19423  2639  00CA               	movwf	dwt_xfer3000@regFileID+3
 19424  263A  0141               	movlb	1	; select bank1
 19425  263B  0822               	movf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128),w
 19426  263C  0140               	movlb	0	; select bank0
 19427  263D  00C9               	movwf	dwt_xfer3000@regFileID+2
 19428  263E  0141               	movlb	1	; select bank1
 19429  263F  0821               	movf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128),w
 19430  2640  0140               	movlb	0	; select bank0
 19431  2641  00C8               	movwf	dwt_xfer3000@regFileID+1
 19432  2642  0141               	movlb	1	; select bank1
 19433  2643  0820               	movf	dwt_modify8bitoffsetreg@regFileID^(0+128),w
 19434  2644  0140               	movlb	0	; select bank0
 19435  2645  00C7               	movwf	dwt_xfer3000@regFileID
 19436  2646  0141               	movlb	1	; select bank1
 19437  2647  0825               	movf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128),w
 19438  2648  0140               	movlb	0	; select bank0
 19439  2649  00CC               	movwf	dwt_xfer3000@indx+1
 19440  264A  0141               	movlb	1	; select bank1
 19441  264B  0824               	movf	dwt_modify8bitoffsetreg@regOffset^(0+128),w
 19442  264C  0140               	movlb	0	; select bank0
 19443  264D  00CB               	movwf	dwt_xfer3000@indx
 19444  264E  3000               	movlw	0
 19445  264F  00D0               	movwf	dwt_xfer3000@length+3
 19446  2650  3000               	movlw	0
 19447  2651  00CF               	movwf	dwt_xfer3000@length+2
 19448  2652  3000               	movlw	0
 19449  2653  00CE               	movwf	dwt_xfer3000@length+1
 19450  2654  3002               	movlw	2
 19451  2655  00CD               	movwf	dwt_xfer3000@length
 19452  2656  3069               	movlw	low dwt_modify8bitoffsetreg@buf
 19453  2657  00D1               	movwf	dwt_xfer3000@buffer
 19454  2658  3000               	movlw	high dwt_modify8bitoffsetreg@buf
 19455  2659  00D2               	movwf	dwt_xfer3000@buffer+1
 19456  265A  3001               	movlw	1
 19457  265B  00D3               	movwf	dwt_xfer3000@mode
 19458  265C  3080               	movlw	128
 19459  265D  00D4               	movwf	dwt_xfer3000@mode+1
 19460  265E  3189  216C         	fcall	_dwt_xfer3000
 19461  2660  0008               	return
 19462  2661                     __end_of_dwt_modify8bitoffsetreg:	
 19463                           
 19464                           	psect	text54
 19465  241F                     __ptext54:	
 19466 ;; *************** function _Sleep *****************
 19467 ;; Defined at:
 19468 ;;		line 235 in file "main.c"
 19469 ;; Parameters:    Size  Location     Type
 19470 ;;  time            4    0[COMMON] unsigned long 
 19471 ;; Auto vars:     Size  Location     Type
 19472 ;;  i               4    5[COMMON] volatile unsigned long 
 19473 ;; Return value:  Size  Location     Type
 19474 ;;                  1    wreg      void 
 19475 ;; Registers used:
 19476 ;;		wreg
 19477 ;; Tracked objects:
 19478 ;;		On entry : 0/0
 19479 ;;		On exit  : 0/0
 19480 ;;		Unchanged: 0/0
 19481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19485 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19486 ;;Total ram usage:        9 bytes
 19487 ;; Hardware stack levels used:    1
 19488 ;; This function calls:
 19489 ;;		Nothing
 19490 ;; This function is called by:
 19491 ;;		_dwt_initialise
 19492 ;;		_dwt_configure
 19493 ;;		_dwt_run_pgfcal
 19494 ;;		_reset_DWIC
 19495 ;;		_dw_main
 19496 ;;		_deca_sleep
 19497 ;;		_spi_cs_low_delay
 19498 ;;		_wakeup_device_with_io
 19499 ;;		_port_wakeup_dw_ic
 19500 ;; This function uses a non-reentrant model
 19501 ;;
 19502                           
 19503                           
 19504                           ;psect for function _Sleep
 19505  241F                     _Sleep:	
 19506                           
 19507                           ;main.c: 237: for(volatile uint32_t i=0; i<time; i++)
 19508                           
 19509                           ;incstack = 0
 19510                           ; Regs used in _Sleep: [wreg]
 19511  241F  3000               	movlw	0
 19512  2420  00F8               	movwf	Sleep@i+3	;volatile
 19513  2421  3000               	movlw	0
 19514  2422  00F7               	movwf	Sleep@i+2	;volatile
 19515  2423  3000               	movlw	0
 19516  2424  00F6               	movwf	Sleep@i+1	;volatile
 19517  2425  3000               	movlw	0
 19518  2426  00F5               	movwf	Sleep@i	;volatile
 19519  2427                     l330:	
 19520  2427  0873               	movf	Sleep@time+3,w
 19521  2428  0278               	subwf	Sleep@i+3,w	;volatile
 19522  2429  1D03               	skipz
 19523  242A  2C35               	goto	u4885
 19524  242B  0872               	movf	Sleep@time+2,w
 19525  242C  0277               	subwf	Sleep@i+2,w	;volatile
 19526  242D  1D03               	skipz
 19527  242E  2C35               	goto	u4885
 19528  242F  0871               	movf	Sleep@time+1,w
 19529  2430  0276               	subwf	Sleep@i+1,w	;volatile
 19530  2431  1D03               	skipz
 19531  2432  2C35               	goto	u4885
 19532  2433  0870               	movf	Sleep@time,w
 19533  2434  0275               	subwf	Sleep@i,w	;volatile
 19534  2435                     u4885:	
 19535  2435  1803               	btfsc	3,0
 19536  2436  0008               	return
 19537                           
 19538                           ;main.c: 238: {
 19539                           ;main.c: 239: _delay((unsigned long)((1)*(32000000/4000.0)));
 19540  2437  300B               	movlw	11
 19541  2438  00F4               	movwf	??_Sleep
 19542  2439  3062               	movlw	98
 19543  243A                     u8597:	
 19544  243A  0B89               	decfsz	9,f
 19545  243B  2C3A               	goto	u8597
 19546  243C  0BF4               	decfsz	??_Sleep,f
 19547  243D  2C3A               	goto	u8597
 19548  243E  3200               	nop2
 19549  243F  3001               	movlw	1
 19550  2440  07F5               	addwf	Sleep@i,f	;volatile
 19551  2441  3000               	movlw	0
 19552  2442  3DF6               	addwfc	Sleep@i+1,f	;volatile
 19553  2443  3000               	movlw	0
 19554  2444  3DF7               	addwfc	Sleep@i+2,f	;volatile
 19555  2445  3000               	movlw	0
 19556  2446  3DF8               	addwfc	Sleep@i+3,f	;volatile
 19557  2447  2C27               	goto	l330
 19558  2448                     __end_of_Sleep:	
 19559                           
 19560                           	psect	text55
 19561  2661                     __ptext55:	
 19562 ;; *************** function _dwt_read16bitoffsetreg *****************
 19563 ;; Defined at:
 19564 ;;		line 423 in file "deca_device.c"
 19565 ;; Parameters:    Size  Location     Type
 19566 ;;  regFileID       4   72[BANK0 ] unsigned long 
 19567 ;;  regOffset       4   76[BANK0 ] unsigned long 
 19568 ;; Auto vars:     Size  Location     Type
 19569 ;;  buffer          2   18[BANK1 ] unsigned char [2]
 19570 ;;  regval          2   16[BANK1 ] unsigned int 
 19571 ;; Return value:  Size  Location     Type
 19572 ;;                  2   72[BANK0 ] unsigned int 
 19573 ;; Registers used:
 19574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19575 ;; Tracked objects:
 19576 ;;		On entry : 0/0
 19577 ;;		On exit  : 0/0
 19578 ;;		Unchanged: 0/0
 19579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19580 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19581 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19582 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19583 ;;      Totals:         0       8       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19584 ;;Total ram usage:       17 bytes
 19585 ;; Hardware stack levels used:    1
 19586 ;; Hardware stack levels required when called:    7
 19587 ;; This function calls:
 19588 ;;		_dwt_readfromdevice
 19589 ;; This function is called by:
 19590 ;;		_dwt_pgf_cal
 19591 ;;		_dwt_checkidlerc
 19592 ;;		_dwt_restoreconfig
 19593 ;;		_dwt_readclockoffset
 19594 ;;		_dwt_readstsquality
 19595 ;;		_dwt_readstsstatus
 19596 ;;		_dwt_readpdoa
 19597 ;;		_dwt_isr
 19598 ;;		_dwt_readtempvbat
 19599 ;;		_dwt_calcpgcount
 19600 ;; This function uses a non-reentrant model
 19601 ;;
 19602                           
 19603                           
 19604                           ;psect for function _dwt_read16bitoffsetreg
 19605  2661                     _dwt_read16bitoffsetreg:	
 19606                           
 19607                           ;deca_device.c: 425: uint16_t regval = 0 ;
 19608                           
 19609                           ;incstack = 0
 19610                           ; Regs used in _dwt_read16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19611  2661  0141               	movlb	1	; select bank1
 19612  2662  01B0               	clrf	dwt_read16bitoffsetreg@regval^(0+128)
 19613  2663  01B1               	clrf	(dwt_read16bitoffsetreg@regval+1)^(0+128)
 19614                           
 19615                           ;deca_device.c: 426: uint8_t buffer[2] ;
 19616                           ;deca_device.c: 428: dwt_readfromdevice(regFileID,regOffset,2,buffer);
 19617  2664  0140               	movlb	0	; select bank0
 19618  2665  086B               	movf	dwt_read16bitoffsetreg@regFileID+3,w
 19619  2666  0141               	movlb	1	; select bank1
 19620  2667  00A3               	movwf	(dwt_readfromdevice@regFileID+3)^(0+128)
 19621  2668  0140               	movlb	0	; select bank0
 19622  2669  086A               	movf	dwt_read16bitoffsetreg@regFileID+2,w
 19623  266A  0141               	movlb	1	; select bank1
 19624  266B  00A2               	movwf	(dwt_readfromdevice@regFileID+2)^(0+128)
 19625  266C  0140               	movlb	0	; select bank0
 19626  266D  0869               	movf	dwt_read16bitoffsetreg@regFileID+1,w
 19627  266E  0141               	movlb	1	; select bank1
 19628  266F  00A1               	movwf	(dwt_readfromdevice@regFileID+1)^(0+128)
 19629  2670  0140               	movlb	0	; select bank0
 19630  2671  0868               	movf	dwt_read16bitoffsetreg@regFileID,w
 19631  2672  0141               	movlb	1	; select bank1
 19632  2673  00A0               	movwf	dwt_readfromdevice@regFileID^(0+128)
 19633  2674  0140               	movlb	0	; select bank0
 19634  2675  086D               	movf	dwt_read16bitoffsetreg@regOffset+1,w
 19635  2676  0141               	movlb	1	; select bank1
 19636  2677  00A5               	movwf	(dwt_readfromdevice@index+1)^(0+128)
 19637  2678  0140               	movlb	0	; select bank0
 19638  2679  086C               	movf	dwt_read16bitoffsetreg@regOffset,w
 19639  267A  0141               	movlb	1	; select bank1
 19640  267B  00A4               	movwf	dwt_readfromdevice@index^(0+128)
 19641  267C  3000               	movlw	0
 19642  267D  00A9               	movwf	(dwt_readfromdevice@length+3)^(0+128)
 19643  267E  3000               	movlw	0
 19644  267F  00A8               	movwf	(dwt_readfromdevice@length+2)^(0+128)
 19645  2680  3000               	movlw	0
 19646  2681  00A7               	movwf	(dwt_readfromdevice@length+1)^(0+128)
 19647  2682  3002               	movlw	2
 19648  2683  00A6               	movwf	dwt_readfromdevice@length^(0+128)
 19649  2684  30B2               	movlw	(low (dwt_read16bitoffsetreg@buffer| 0))& (0+255)
 19650  2685  00AB               	movwf	??_dwt_read16bitoffsetreg^(0+128)
 19651  2686  082B               	movf	??_dwt_read16bitoffsetreg^(0+128),w
 19652  2687  00AA               	movwf	dwt_readfromdevice@buffer^(0+128)
 19653  2688  31A5  25BF         	fcall	_dwt_readfromdevice
 19654                           
 19655                           ;deca_device.c: 430: regval = ((uint16_t)buffer[1] << 8) + buffer[0] ;
 19656  268A  0141               	movlb	1	; select bank1
 19657  268B  0832               	movf	dwt_read16bitoffsetreg@buffer^(0+128),w
 19658  268C  00AB               	movwf	??_dwt_read16bitoffsetreg^(0+128)
 19659  268D  01AC               	clrf	(??_dwt_read16bitoffsetreg^(0+128)+1)
 19660  268E  0833               	movf	(dwt_read16bitoffsetreg@buffer^(0+128)+1),w
 19661  268F  00AD               	movwf	(??_dwt_read16bitoffsetreg+2)^(0+128)
 19662  2690  01AE               	clrf	((??_dwt_read16bitoffsetreg+2)^(0+128)+1)
 19663  2691  082D               	movf	(??_dwt_read16bitoffsetreg+2)^(0+128),w
 19664  2692  00AE               	movwf	((??_dwt_read16bitoffsetreg+2)^(0+128)+1)
 19665  2693  01AD               	clrf	(??_dwt_read16bitoffsetreg+2)^(0+128)
 19666  2694  082B               	movf	??_dwt_read16bitoffsetreg^(0+128),w
 19667  2695  072D               	addwf	(??_dwt_read16bitoffsetreg+2)^(0+128),w
 19668  2696  00B0               	movwf	dwt_read16bitoffsetreg@regval^(0+128)
 19669  2697  082C               	movf	(??_dwt_read16bitoffsetreg+1)^(0+128),w
 19670  2698  3D2E               	addwfc	(??_dwt_read16bitoffsetreg+3)^(0+128),w
 19671  2699  00B1               	movwf	(dwt_read16bitoffsetreg@regval+1)^(0+128)
 19672                           
 19673                           ;deca_device.c: 431: return regval ;
 19674  269A  0831               	movf	(dwt_read16bitoffsetreg@regval+1)^(0+128),w
 19675  269B  0140               	movlb	0	; select bank0
 19676  269C  00E9               	movwf	?_dwt_read16bitoffsetreg+1
 19677  269D  0141               	movlb	1	; select bank1
 19678  269E  0830               	movf	dwt_read16bitoffsetreg@regval^(0+128),w
 19679  269F  0140               	movlb	0	; select bank0
 19680  26A0  00E8               	movwf	?_dwt_read16bitoffsetreg
 19681  26A1  0008               	return
 19682  26A2                     __end_of_dwt_read16bitoffsetreg:	
 19683                           
 19684                           	psect	text56
 19685  25BF                     __ptext56:	
 19686 ;; *************** function _dwt_readfromdevice *****************
 19687 ;; Defined at:
 19688 ;;		line 372 in file "deca_device.c"
 19689 ;; Parameters:    Size  Location     Type
 19690 ;;  regFileID       4    0[BANK1 ] unsigned long 
 19691 ;;  index           2    4[BANK1 ] unsigned int 
 19692 ;;  length          4    6[BANK1 ] unsigned long 
 19693 ;;  buffer          1   10[BANK1 ] PTR unsigned char 
 19694 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), dwt_readcarrierintegrator@buffer(3), dwt_read16bitoffse
      +treg@buffer(2), 
 19695 ;;		 -> dwt_read32bitoffsetreg@buffer(4), 
 19696 ;; Auto vars:     Size  Location     Type
 19697 ;;		None
 19698 ;; Return value:  Size  Location     Type
 19699 ;;                  1    wreg      void 
 19700 ;; Registers used:
 19701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19702 ;; Tracked objects:
 19703 ;;		On entry : 0/0
 19704 ;;		On exit  : 0/0
 19705 ;;		Unchanged: 0/0
 19706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19707 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19710 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19711 ;;Total ram usage:       11 bytes
 19712 ;; Hardware stack levels used:    1
 19713 ;; Hardware stack levels required when called:    6
 19714 ;; This function calls:
 19715 ;;		_dwt_xfer3000
 19716 ;; This function is called by:
 19717 ;;		_dwt_read32bitoffsetreg
 19718 ;;		_dwt_read16bitoffsetreg
 19719 ;;		_dwt_read_rx_scratch_data
 19720 ;;		_dwt_readrxdata
 19721 ;;		_dwt_readaccdata
 19722 ;;		_dwt_readcarrierintegrator
 19723 ;;		_dwt_readtxtimestamp
 19724 ;;		_dwt_readtdoa
 19725 ;;		_dwt_readrxtimestamp
 19726 ;;		_dwt_readrxtimestampunadj
 19727 ;;		_dwt_readrxtimestamp_ipatov
 19728 ;;		_dwt_readrxtimestamp_sts
 19729 ;;		_dwt_readsystime
 19730 ;;		_dwt_geteui
 19731 ;;		_dwt_do_aes
 19732 ;; This function uses a non-reentrant model
 19733 ;;
 19734                           
 19735                           
 19736                           ;psect for function _dwt_readfromdevice
 19737  25BF                     _dwt_readfromdevice:	
 19738                           
 19739                           ;deca_device.c: 380: dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_RD_BIT);
 19740                           
 19741                           ;incstack = 0
 19742                           ; Regs used in _dwt_readfromdevice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19743  25BF  0141               	movlb	1	; select bank1
 19744  25C0  0823               	movf	(dwt_readfromdevice@regFileID+3)^(0+128),w
 19745  25C1  0140               	movlb	0	; select bank0
 19746  25C2  00CA               	movwf	dwt_xfer3000@regFileID+3
 19747  25C3  0141               	movlb	1	; select bank1
 19748  25C4  0822               	movf	(dwt_readfromdevice@regFileID+2)^(0+128),w
 19749  25C5  0140               	movlb	0	; select bank0
 19750  25C6  00C9               	movwf	dwt_xfer3000@regFileID+2
 19751  25C7  0141               	movlb	1	; select bank1
 19752  25C8  0821               	movf	(dwt_readfromdevice@regFileID+1)^(0+128),w
 19753  25C9  0140               	movlb	0	; select bank0
 19754  25CA  00C8               	movwf	dwt_xfer3000@regFileID+1
 19755  25CB  0141               	movlb	1	; select bank1
 19756  25CC  0820               	movf	dwt_readfromdevice@regFileID^(0+128),w
 19757  25CD  0140               	movlb	0	; select bank0
 19758  25CE  00C7               	movwf	dwt_xfer3000@regFileID
 19759  25CF  0141               	movlb	1	; select bank1
 19760  25D0  0825               	movf	(dwt_readfromdevice@index+1)^(0+128),w
 19761  25D1  0140               	movlb	0	; select bank0
 19762  25D2  00CC               	movwf	dwt_xfer3000@indx+1
 19763  25D3  0141               	movlb	1	; select bank1
 19764  25D4  0824               	movf	dwt_readfromdevice@index^(0+128),w
 19765  25D5  0140               	movlb	0	; select bank0
 19766  25D6  00CB               	movwf	dwt_xfer3000@indx
 19767  25D7  0141               	movlb	1	; select bank1
 19768  25D8  0829               	movf	(dwt_readfromdevice@length+3)^(0+128),w
 19769  25D9  0140               	movlb	0	; select bank0
 19770  25DA  00D0               	movwf	dwt_xfer3000@length+3
 19771  25DB  0141               	movlb	1	; select bank1
 19772  25DC  0828               	movf	(dwt_readfromdevice@length+2)^(0+128),w
 19773  25DD  0140               	movlb	0	; select bank0
 19774  25DE  00CF               	movwf	dwt_xfer3000@length+2
 19775  25DF  0141               	movlb	1	; select bank1
 19776  25E0  0827               	movf	(dwt_readfromdevice@length+1)^(0+128),w
 19777  25E1  0140               	movlb	0	; select bank0
 19778  25E2  00CE               	movwf	dwt_xfer3000@length+1
 19779  25E3  0141               	movlb	1	; select bank1
 19780  25E4  0826               	movf	dwt_readfromdevice@length^(0+128),w
 19781  25E5  0140               	movlb	0	; select bank0
 19782  25E6  00CD               	movwf	dwt_xfer3000@length
 19783  25E7  0141               	movlb	1	; select bank1
 19784  25E8  082A               	movf	dwt_readfromdevice@buffer^(0+128),w
 19785  25E9  0140               	movlb	0	; select bank0
 19786  25EA  00D1               	movwf	dwt_xfer3000@buffer
 19787  25EB  3000               	movlw	0
 19788  25EC  00D2               	movwf	dwt_xfer3000@buffer+1
 19789  25ED  3000               	movlw	0
 19790  25EE  00D3               	movwf	dwt_xfer3000@mode
 19791  25EF  00D4               	movwf	dwt_xfer3000@mode+1
 19792  25F0  3189  216C         	fcall	_dwt_xfer3000
 19793  25F2  0008               	return
 19794  25F3                     __end_of_dwt_readfromdevice:	
 19795                           
 19796                           	psect	text57
 19797  26A2                     __ptext57:	
 19798 ;; *************** function _dwt_modify16bitoffsetreg *****************
 19799 ;; Defined at:
 19800 ;;		line 556 in file "deca_device.c"
 19801 ;; Parameters:    Size  Location     Type
 19802 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 19803 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 19804 ;;  _and            2    8[BANK1 ] const unsigned int 
 19805 ;;  _or             2   10[BANK1 ] const unsigned int 
 19806 ;; Auto vars:     Size  Location     Type
 19807 ;;  buf             4   73[BANK0 ] unsigned char [4]
 19808 ;; Return value:  Size  Location     Type
 19809 ;;                  1    wreg      void 
 19810 ;; Registers used:
 19811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19812 ;; Tracked objects:
 19813 ;;		On entry : 0/0
 19814 ;;		On exit  : 0/0
 19815 ;;		Unchanged: 0/0
 19816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19817 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19818 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19820 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19821 ;;Total ram usage:       17 bytes
 19822 ;; Hardware stack levels used:    1
 19823 ;; Hardware stack levels required when called:    6
 19824 ;; This function calls:
 19825 ;;		_dwt_xfer3000
 19826 ;; This function is called by:
 19827 ;;		__dwt_prog_ldo_and_bias_tune
 19828 ;;		_dwt_configure
 19829 ;;		_dwt_pgf_cal
 19830 ;;		_dwt_readaccdata
 19831 ;;		_dwt_entersleepaftertx
 19832 ;;		_dwt_enableautoack
 19833 ;;		_dwt_setleds
 19834 ;;		_dwt_setrxtimeout
 19835 ;; This function uses a non-reentrant model
 19836 ;;
 19837                           
 19838                           
 19839                           ;psect for function _dwt_modify16bitoffsetreg
 19840  26A2                     _dwt_modify16bitoffsetreg:	
 19841                           
 19842                           ;deca_device.c: 558: uint8_t buf[4];
 19843                           ;deca_device.c: 559: buf[0] = (uint8_t)_and;
 19844                           
 19845                           ;incstack = 0
 19846                           ; Regs used in _dwt_modify16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19847  26A2  0141               	movlb	1	; select bank1
 19848  26A3  0828               	movf	dwt_modify16bitoffsetreg@_and^(0+128),w
 19849  26A4  0140               	movlb	0	; select bank0
 19850  26A5  00E8               	movwf	??_dwt_modify16bitoffsetreg
 19851  26A6  0868               	movf	??_dwt_modify16bitoffsetreg,w
 19852  26A7  00E9               	movwf	dwt_modify16bitoffsetreg@buf
 19853                           
 19854                           ;deca_device.c: 560: buf[1] = (uint8_t)(_and>>8);
 19855  26A8  0141               	movlb	1	; select bank1
 19856  26A9  0829               	movf	(dwt_modify16bitoffsetreg@_and+1)^(0+128),w
 19857  26AA  0140               	movlb	0	; select bank0
 19858  26AB  00E8               	movwf	??_dwt_modify16bitoffsetreg
 19859  26AC  0868               	movf	??_dwt_modify16bitoffsetreg,w
 19860  26AD  00EA               	movwf	dwt_modify16bitoffsetreg@buf+1
 19861                           
 19862                           ;deca_device.c: 561: buf[2] = (uint8_t)_or;
 19863  26AE  0141               	movlb	1	; select bank1
 19864  26AF  082A               	movf	dwt_modify16bitoffsetreg@_or^(0+128),w
 19865  26B0  0140               	movlb	0	; select bank0
 19866  26B1  00E8               	movwf	??_dwt_modify16bitoffsetreg
 19867  26B2  0868               	movf	??_dwt_modify16bitoffsetreg,w
 19868  26B3  00EB               	movwf	dwt_modify16bitoffsetreg@buf+2
 19869                           
 19870                           ;deca_device.c: 562: buf[3] = (uint8_t)(_or>>8);
 19871  26B4  0141               	movlb	1	; select bank1
 19872  26B5  082B               	movf	(dwt_modify16bitoffsetreg@_or+1)^(0+128),w
 19873  26B6  0140               	movlb	0	; select bank0
 19874  26B7  00E8               	movwf	??_dwt_modify16bitoffsetreg
 19875  26B8  0868               	movf	??_dwt_modify16bitoffsetreg,w
 19876  26B9  00EC               	movwf	dwt_modify16bitoffsetreg@buf+3
 19877                           
 19878                           ;deca_device.c: 563: dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND
      +                          _OR_16);
 19879  26BA  0141               	movlb	1	; select bank1
 19880  26BB  0823               	movf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128),w
 19881  26BC  0140               	movlb	0	; select bank0
 19882  26BD  00CA               	movwf	dwt_xfer3000@regFileID+3
 19883  26BE  0141               	movlb	1	; select bank1
 19884  26BF  0822               	movf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128),w
 19885  26C0  0140               	movlb	0	; select bank0
 19886  26C1  00C9               	movwf	dwt_xfer3000@regFileID+2
 19887  26C2  0141               	movlb	1	; select bank1
 19888  26C3  0821               	movf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128),w
 19889  26C4  0140               	movlb	0	; select bank0
 19890  26C5  00C8               	movwf	dwt_xfer3000@regFileID+1
 19891  26C6  0141               	movlb	1	; select bank1
 19892  26C7  0820               	movf	dwt_modify16bitoffsetreg@regFileID^(0+128),w
 19893  26C8  0140               	movlb	0	; select bank0
 19894  26C9  00C7               	movwf	dwt_xfer3000@regFileID
 19895  26CA  0141               	movlb	1	; select bank1
 19896  26CB  0825               	movf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128),w
 19897  26CC  0140               	movlb	0	; select bank0
 19898  26CD  00CC               	movwf	dwt_xfer3000@indx+1
 19899  26CE  0141               	movlb	1	; select bank1
 19900  26CF  0824               	movf	dwt_modify16bitoffsetreg@regOffset^(0+128),w
 19901  26D0  0140               	movlb	0	; select bank0
 19902  26D1  00CB               	movwf	dwt_xfer3000@indx
 19903  26D2  3000               	movlw	0
 19904  26D3  00D0               	movwf	dwt_xfer3000@length+3
 19905  26D4  3000               	movlw	0
 19906  26D5  00CF               	movwf	dwt_xfer3000@length+2
 19907  26D6  3000               	movlw	0
 19908  26D7  00CE               	movwf	dwt_xfer3000@length+1
 19909  26D8  3004               	movlw	4
 19910  26D9  00CD               	movwf	dwt_xfer3000@length
 19911  26DA  3069               	movlw	low dwt_modify16bitoffsetreg@buf
 19912  26DB  00D1               	movwf	dwt_xfer3000@buffer
 19913  26DC  3000               	movlw	high dwt_modify16bitoffsetreg@buf
 19914  26DD  00D2               	movwf	dwt_xfer3000@buffer+1
 19915  26DE  3002               	movlw	2
 19916  26DF  00D3               	movwf	dwt_xfer3000@mode
 19917  26E0  3080               	movlw	128
 19918  26E1  00D4               	movwf	dwt_xfer3000@mode+1
 19919  26E2  3189  216C         	fcall	_dwt_xfer3000
 19920  26E4  0008               	return
 19921  26E5                     __end_of_dwt_modify16bitoffsetreg:	
 19922                           
 19923                           	psect	text58
 19924  1687                     __ptext58:	
 19925 ;; *************** function _dwt_configmrxlut *****************
 19926 ;; Defined at:
 19927 ;;		line 1203 in file "deca_device.c"
 19928 ;; Parameters:    Size  Location     Type
 19929 ;;  channel         2   24[BANK1 ] int 
 19930 ;; Auto vars:     Size  Location     Type
 19931 ;;  lut6            4   50[BANK1 ] unsigned long 
 19932 ;;  lut5            4   46[BANK1 ] unsigned long 
 19933 ;;  lut4            4   42[BANK1 ] unsigned long 
 19934 ;;  lut3            4   38[BANK1 ] unsigned long 
 19935 ;;  lut2            4   34[BANK1 ] unsigned long 
 19936 ;;  lut1            4   30[BANK1 ] unsigned long 
 19937 ;;  lut0            4   26[BANK1 ] unsigned long 
 19938 ;; Return value:  Size  Location     Type
 19939 ;;                  1    wreg      void 
 19940 ;; Registers used:
 19941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19942 ;; Tracked objects:
 19943 ;;		On entry : 0/0
 19944 ;;		On exit  : 0/0
 19945 ;;		Unchanged: 0/0
 19946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19947 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19948 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19950 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19951 ;;Total ram usage:       30 bytes
 19952 ;; Hardware stack levels used:    1
 19953 ;; Hardware stack levels required when called:    8
 19954 ;; This function calls:
 19955 ;;		_dwt_write32bitoffsetreg
 19956 ;; This function is called by:
 19957 ;;		_dwt_configure
 19958 ;;		_dwt_restoreconfig
 19959 ;; This function uses a non-reentrant model
 19960 ;;
 19961                           
 19962                           
 19963                           ;psect for function _dwt_configmrxlut
 19964  1687                     _dwt_configmrxlut:	
 19965                           
 19966                           ;deca_device.c: 1205: uint32_t lut0, lut1, lut2, lut3, lut4, lut5, lut6 = 0;
 19967                           
 19968                           ;incstack = 0
 19969                           ; Regs used in _dwt_configmrxlut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19970  1687  3000               	movlw	0
 19971  1688  0141               	movlb	1	; select bank1
 19972  1689  00D5               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 19973  168A  3000               	movlw	0
 19974  168B  00D4               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 19975  168C  3000               	movlw	0
 19976  168D  00D3               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 19977  168E  3000               	movlw	0
 19978  168F  00D2               	movwf	dwt_configmrxlut@lut6^(0+128)
 19979                           
 19980                           ;deca_device.c: 1207: if (channel == 5)
 19981  1690  3005               	movlw	5
 19982  1691  0638               	xorwf	dwt_configmrxlut@channel^(0+128),w
 19983  1692  0439               	iorwf	(dwt_configmrxlut@channel+1)^(0+128),w
 19984  1693  1D03               	btfss	3,2
 19985  1694  2ECD               	goto	l5903
 19986                           
 19987                           ;deca_device.c: 1208: {
 19988                           ;deca_device.c: 1209: lut0 = (uint32_t)CH5_DGC_LUT_0;
 19989  1695  3000               	movlw	0
 19990  1696  00BD               	movwf	(dwt_configmrxlut@lut0+3)^(0+128)
 19991  1697  3000               	movlw	0
 19992  1698  00BC               	movwf	(dwt_configmrxlut@lut0+2)^(0+128)
 19993  1699  30C0               	movlw	192
 19994  169A  00BB               	movwf	(dwt_configmrxlut@lut0+1)^(0+128)
 19995  169B  30FD               	movlw	253
 19996  169C  00BA               	movwf	dwt_configmrxlut@lut0^(0+128)
 19997                           
 19998                           ;deca_device.c: 1210: lut1 = (uint32_t)CH5_DGC_LUT_1;
 19999  169D  3000               	movlw	0
 20000  169E  00C1               	movwf	(dwt_configmrxlut@lut1+3)^(0+128)
 20001  169F  3000               	movlw	0
 20002  16A0  00C0               	movwf	(dwt_configmrxlut@lut1+2)^(0+128)
 20003  16A1  30C4               	movlw	196
 20004  16A2  00BF               	movwf	(dwt_configmrxlut@lut1+1)^(0+128)
 20005  16A3  303E               	movlw	62
 20006  16A4  00BE               	movwf	dwt_configmrxlut@lut1^(0+128)
 20007                           
 20008                           ;deca_device.c: 1211: lut2 = (uint32_t)CH5_DGC_LUT_2;
 20009  16A5  3000               	movlw	0
 20010  16A6  00C5               	movwf	(dwt_configmrxlut@lut2+3)^(0+128)
 20011  16A7  3000               	movlw	0
 20012  16A8  00C4               	movwf	(dwt_configmrxlut@lut2+2)^(0+128)
 20013  16A9  30C6               	movlw	198
 20014  16AA  00C3               	movwf	(dwt_configmrxlut@lut2+1)^(0+128)
 20015  16AB  30BE               	movlw	190
 20016  16AC  00C2               	movwf	dwt_configmrxlut@lut2^(0+128)
 20017                           
 20018                           ;deca_device.c: 1212: lut3 = (uint32_t)CH5_DGC_LUT_3;
 20019  16AD  3000               	movlw	0
 20020  16AE  00C9               	movwf	(dwt_configmrxlut@lut3+3)^(0+128)
 20021  16AF  3000               	movlw	0
 20022  16B0  00C8               	movwf	(dwt_configmrxlut@lut3+2)^(0+128)
 20023  16B1  30C7               	movlw	199
 20024  16B2  00C7               	movwf	(dwt_configmrxlut@lut3+1)^(0+128)
 20025  16B3  307E               	movlw	126
 20026  16B4  00C6               	movwf	dwt_configmrxlut@lut3^(0+128)
 20027                           
 20028                           ;deca_device.c: 1213: lut4 = (uint32_t)CH5_DGC_LUT_4;
 20029  16B5  3000               	movlw	0
 20030  16B6  00CD               	movwf	(dwt_configmrxlut@lut4+3)^(0+128)
 20031  16B7  3000               	movlw	0
 20032  16B8  00CC               	movwf	(dwt_configmrxlut@lut4+2)^(0+128)
 20033  16B9  30CF               	movlw	207
 20034  16BA  00CB               	movwf	(dwt_configmrxlut@lut4+1)^(0+128)
 20035  16BB  3036               	movlw	54
 20036  16BC  00CA               	movwf	dwt_configmrxlut@lut4^(0+128)
 20037                           
 20038                           ;deca_device.c: 1214: lut5 = (uint32_t)CH5_DGC_LUT_5;
 20039  16BD  3000               	movlw	0
 20040  16BE  00D1               	movwf	(dwt_configmrxlut@lut5+3)^(0+128)
 20041  16BF  3000               	movlw	0
 20042  16C0  00D0               	movwf	(dwt_configmrxlut@lut5+2)^(0+128)
 20043  16C1  30CF               	movlw	207
 20044  16C2  00CF               	movwf	(dwt_configmrxlut@lut5+1)^(0+128)
 20045  16C3  30B5               	movlw	181
 20046  16C4  00CE               	movwf	dwt_configmrxlut@lut5^(0+128)
 20047                           
 20048                           ;deca_device.c: 1215: lut6 = (uint32_t)CH5_DGC_LUT_6;
 20049  16C5  3000               	movlw	0
 20050  16C6  00D5               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 20051  16C7  3000               	movlw	0
 20052  16C8  00D4               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 20053  16C9  30CF               	movlw	207
 20054  16CA  00D3               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 20055  16CB  30F5               	movlw	245
 20056  16CC  2F04               	goto	L21
 20057  16CD                     l5903:	
 20058                           ;deca_device.c: 1216: }
 20059                           
 20060                           
 20061                           ;deca_device.c: 1217: else
 20062                           ;deca_device.c: 1218: {
 20063                           ;deca_device.c: 1219: lut0 = (uint32_t)CH9_DGC_LUT_0;
 20064  16CD  3000               	movlw	0
 20065  16CE  00BD               	movwf	(dwt_configmrxlut@lut0+3)^(0+128)
 20066  16CF  3000               	movlw	0
 20067  16D0  00BC               	movwf	(dwt_configmrxlut@lut0+2)^(0+128)
 20068  16D1  30A8               	movlw	168
 20069  16D2  00BB               	movwf	(dwt_configmrxlut@lut0+1)^(0+128)
 20070  16D3  30FE               	movlw	254
 20071  16D4  00BA               	movwf	dwt_configmrxlut@lut0^(0+128)
 20072                           
 20073                           ;deca_device.c: 1220: lut1 = (uint32_t)CH9_DGC_LUT_1;
 20074  16D5  3000               	movlw	0
 20075  16D6  00C1               	movwf	(dwt_configmrxlut@lut1+3)^(0+128)
 20076  16D7  3000               	movlw	0
 20077  16D8  00C0               	movwf	(dwt_configmrxlut@lut1+2)^(0+128)
 20078  16D9  30AC               	movlw	172
 20079  16DA  00BF               	movwf	(dwt_configmrxlut@lut1+1)^(0+128)
 20080  16DB  3036               	movlw	54
 20081  16DC  00BE               	movwf	dwt_configmrxlut@lut1^(0+128)
 20082                           
 20083                           ;deca_device.c: 1221: lut2 = (uint32_t)CH9_DGC_LUT_2;
 20084  16DD  3000               	movlw	0
 20085  16DE  00C5               	movwf	(dwt_configmrxlut@lut2+3)^(0+128)
 20086  16DF  3000               	movlw	0
 20087  16E0  00C4               	movwf	(dwt_configmrxlut@lut2+2)^(0+128)
 20088  16E1  30A5               	movlw	165
 20089  16E2  00C3               	movwf	(dwt_configmrxlut@lut2+1)^(0+128)
 20090  16E3  30FE               	movlw	254
 20091  16E4  00C2               	movwf	dwt_configmrxlut@lut2^(0+128)
 20092                           
 20093                           ;deca_device.c: 1222: lut3 = (uint32_t)CH9_DGC_LUT_3;
 20094  16E5  3000               	movlw	0
 20095  16E6  00C9               	movwf	(dwt_configmrxlut@lut3+3)^(0+128)
 20096  16E7  3000               	movlw	0
 20097  16E8  00C8               	movwf	(dwt_configmrxlut@lut3+2)^(0+128)
 20098  16E9  30AF               	movlw	175
 20099  16EA  00C7               	movwf	(dwt_configmrxlut@lut3+1)^(0+128)
 20100  16EB  303E               	movlw	62
 20101  16EC  00C6               	movwf	dwt_configmrxlut@lut3^(0+128)
 20102                           
 20103                           ;deca_device.c: 1223: lut4 = (uint32_t)CH9_DGC_LUT_4;
 20104  16ED  3000               	movlw	0
 20105  16EE  00CD               	movwf	(dwt_configmrxlut@lut4+3)^(0+128)
 20106  16EF  3000               	movlw	0
 20107  16F0  00CC               	movwf	(dwt_configmrxlut@lut4+2)^(0+128)
 20108  16F1  30AF               	movlw	175
 20109  16F2  00CB               	movwf	(dwt_configmrxlut@lut4+1)^(0+128)
 20110  16F3  307D               	movlw	125
 20111  16F4  00CA               	movwf	dwt_configmrxlut@lut4^(0+128)
 20112                           
 20113                           ;deca_device.c: 1224: lut5 = (uint32_t)CH9_DGC_LUT_5;
 20114  16F5  3000               	movlw	0
 20115  16F6  00D1               	movwf	(dwt_configmrxlut@lut5+3)^(0+128)
 20116  16F7  3000               	movlw	0
 20117  16F8  00D0               	movwf	(dwt_configmrxlut@lut5+2)^(0+128)
 20118  16F9  30AF               	movlw	175
 20119  16FA  00CF               	movwf	(dwt_configmrxlut@lut5+1)^(0+128)
 20120  16FB  30B5               	movlw	181
 20121  16FC  00CE               	movwf	dwt_configmrxlut@lut5^(0+128)
 20122                           
 20123                           ;deca_device.c: 1225: lut6 = (uint32_t)CH9_DGC_LUT_6;
 20124  16FD  3000               	movlw	0
 20125  16FE  00D5               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 20126  16FF  3000               	movlw	0
 20127  1700  00D4               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 20128  1701  30AF               	movlw	175
 20129  1702  00D3               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 20130  1703  30B5               	movlw	181
 20131  1704                     L21:	
 20132  1704  00D2               	movwf	dwt_configmrxlut@lut6^(0+128)
 20133                           
 20134                           ;deca_device.c: 1226: }
 20135                           ;deca_device.c: 1227: dwt_write32bitoffsetreg(0x30038, 0x0, lut0);
 20136  1705  3000               	movlw	0
 20137  1706  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20138  1707  3003               	movlw	3
 20139  1708  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20140  1709  3000               	movlw	0
 20141  170A  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20142  170B  3038               	movlw	56
 20143  170C  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20144  170D  3000               	movlw	0
 20145  170E  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20146  170F  3000               	movlw	0
 20147  1710  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20148  1711  3000               	movlw	0
 20149  1712  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20150  1713  3000               	movlw	0
 20151  1714  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20152  1715  083D               	movf	(dwt_configmrxlut@lut0+3)^(0+128),w
 20153  1716  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20154  1717  083C               	movf	(dwt_configmrxlut@lut0+2)^(0+128),w
 20155  1718  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20156  1719  083B               	movf	(dwt_configmrxlut@lut0+1)^(0+128),w
 20157  171A  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20158  171B  083A               	movf	dwt_configmrxlut@lut0^(0+128),w
 20159  171C  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20160  171D  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20161                           
 20162                           ;deca_device.c: 1228: dwt_write32bitoffsetreg(0x3003c, 0x0, lut1);
 20163  1720  3000               	movlw	0
 20164  1721  0141               	movlb	1	; select bank1
 20165  1722  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20166  1723  3003               	movlw	3
 20167  1724  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20168  1725  3000               	movlw	0
 20169  1726  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20170  1727  303C               	movlw	60
 20171  1728  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20172  1729  3000               	movlw	0
 20173  172A  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20174  172B  3000               	movlw	0
 20175  172C  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20176  172D  3000               	movlw	0
 20177  172E  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20178  172F  3000               	movlw	0
 20179  1730  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20180  1731  0841               	movf	(dwt_configmrxlut@lut1+3)^(0+128),w
 20181  1732  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20182  1733  0840               	movf	(dwt_configmrxlut@lut1+2)^(0+128),w
 20183  1734  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20184  1735  083F               	movf	(dwt_configmrxlut@lut1+1)^(0+128),w
 20185  1736  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20186  1737  083E               	movf	dwt_configmrxlut@lut1^(0+128),w
 20187  1738  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20188  1739  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20189                           
 20190                           ;deca_device.c: 1229: dwt_write32bitoffsetreg(0x30040, 0x0, lut2);
 20191  173C  3000               	movlw	0
 20192  173D  0141               	movlb	1	; select bank1
 20193  173E  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20194  173F  3003               	movlw	3
 20195  1740  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20196  1741  3000               	movlw	0
 20197  1742  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20198  1743  3040               	movlw	64
 20199  1744  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20200  1745  3000               	movlw	0
 20201  1746  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20202  1747  3000               	movlw	0
 20203  1748  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20204  1749  3000               	movlw	0
 20205  174A  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20206  174B  3000               	movlw	0
 20207  174C  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20208  174D  0845               	movf	(dwt_configmrxlut@lut2+3)^(0+128),w
 20209  174E  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20210  174F  0844               	movf	(dwt_configmrxlut@lut2+2)^(0+128),w
 20211  1750  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20212  1751  0843               	movf	(dwt_configmrxlut@lut2+1)^(0+128),w
 20213  1752  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20214  1753  0842               	movf	dwt_configmrxlut@lut2^(0+128),w
 20215  1754  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20216  1755  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20217                           
 20218                           ;deca_device.c: 1230: dwt_write32bitoffsetreg(0x30044, 0x0, lut3);
 20219  1758  3000               	movlw	0
 20220  1759  0141               	movlb	1	; select bank1
 20221  175A  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20222  175B  3003               	movlw	3
 20223  175C  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20224  175D  3000               	movlw	0
 20225  175E  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20226  175F  3044               	movlw	68
 20227  1760  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20228  1761  3000               	movlw	0
 20229  1762  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20230  1763  3000               	movlw	0
 20231  1764  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20232  1765  3000               	movlw	0
 20233  1766  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20234  1767  3000               	movlw	0
 20235  1768  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20236  1769  0849               	movf	(dwt_configmrxlut@lut3+3)^(0+128),w
 20237  176A  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20238  176B  0848               	movf	(dwt_configmrxlut@lut3+2)^(0+128),w
 20239  176C  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20240  176D  0847               	movf	(dwt_configmrxlut@lut3+1)^(0+128),w
 20241  176E  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20242  176F  0846               	movf	dwt_configmrxlut@lut3^(0+128),w
 20243  1770  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20244  1771  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20245                           
 20246                           ;deca_device.c: 1231: dwt_write32bitoffsetreg(0x30048, 0x0, lut4);
 20247  1774  3000               	movlw	0
 20248  1775  0141               	movlb	1	; select bank1
 20249  1776  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20250  1777  3003               	movlw	3
 20251  1778  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20252  1779  3000               	movlw	0
 20253  177A  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20254  177B  3048               	movlw	72
 20255  177C  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20256  177D  3000               	movlw	0
 20257  177E  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20258  177F  3000               	movlw	0
 20259  1780  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20260  1781  3000               	movlw	0
 20261  1782  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20262  1783  3000               	movlw	0
 20263  1784  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20264  1785  084D               	movf	(dwt_configmrxlut@lut4+3)^(0+128),w
 20265  1786  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20266  1787  084C               	movf	(dwt_configmrxlut@lut4+2)^(0+128),w
 20267  1788  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20268  1789  084B               	movf	(dwt_configmrxlut@lut4+1)^(0+128),w
 20269  178A  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20270  178B  084A               	movf	dwt_configmrxlut@lut4^(0+128),w
 20271  178C  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20272  178D  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20273                           
 20274                           ;deca_device.c: 1232: dwt_write32bitoffsetreg(0x3004c, 0x0, lut5);
 20275  1790  3000               	movlw	0
 20276  1791  0141               	movlb	1	; select bank1
 20277  1792  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20278  1793  3003               	movlw	3
 20279  1794  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20280  1795  3000               	movlw	0
 20281  1796  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20282  1797  304C               	movlw	76
 20283  1798  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20284  1799  3000               	movlw	0
 20285  179A  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20286  179B  3000               	movlw	0
 20287  179C  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20288  179D  3000               	movlw	0
 20289  179E  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20290  179F  3000               	movlw	0
 20291  17A0  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20292  17A1  0851               	movf	(dwt_configmrxlut@lut5+3)^(0+128),w
 20293  17A2  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20294  17A3  0850               	movf	(dwt_configmrxlut@lut5+2)^(0+128),w
 20295  17A4  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20296  17A5  084F               	movf	(dwt_configmrxlut@lut5+1)^(0+128),w
 20297  17A6  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20298  17A7  084E               	movf	dwt_configmrxlut@lut5^(0+128),w
 20299  17A8  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20300  17A9  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20301                           
 20302                           ;deca_device.c: 1233: dwt_write32bitoffsetreg(0x30050, 0x0, lut6);
 20303  17AC  3000               	movlw	0
 20304  17AD  0141               	movlb	1	; select bank1
 20305  17AE  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20306  17AF  3003               	movlw	3
 20307  17B0  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20308  17B1  3000               	movlw	0
 20309  17B2  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20310  17B3  3050               	movlw	80
 20311  17B4  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20312  17B5  3000               	movlw	0
 20313  17B6  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20314  17B7  3000               	movlw	0
 20315  17B8  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20316  17B9  3000               	movlw	0
 20317  17BA  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20318  17BB  3000               	movlw	0
 20319  17BC  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20320  17BD  0855               	movf	(dwt_configmrxlut@lut6+3)^(0+128),w
 20321  17BE  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20322  17BF  0854               	movf	(dwt_configmrxlut@lut6+2)^(0+128),w
 20323  17C0  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20324  17C1  0853               	movf	(dwt_configmrxlut@lut6+1)^(0+128),w
 20325  17C2  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20326  17C3  0852               	movf	dwt_configmrxlut@lut6^(0+128),w
 20327  17C4  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20328  17C5  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20329                           
 20330                           ;deca_device.c: 1234: dwt_write32bitoffsetreg(0x3001c, 0x0, 0x10000240);
 20331  17C8  3000               	movlw	0
 20332  17C9  0141               	movlb	1	; select bank1
 20333  17CA  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20334  17CB  3003               	movlw	3
 20335  17CC  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20336  17CD  3000               	movlw	0
 20337  17CE  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20338  17CF  301C               	movlw	28
 20339  17D0  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20340  17D1  3000               	movlw	0
 20341  17D2  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20342  17D3  3000               	movlw	0
 20343  17D4  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20344  17D5  3000               	movlw	0
 20345  17D6  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20346  17D7  3000               	movlw	0
 20347  17D8  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20348  17D9  3010               	movlw	16
 20349  17DA  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20350  17DB  3000               	movlw	0
 20351  17DC  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20352  17DD  3002               	movlw	2
 20353  17DE  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20354  17DF  3040               	movlw	64
 20355  17E0  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20356  17E1  31A7  27B4  3196   	fcall	_dwt_write32bitoffsetreg
 20357                           
 20358                           ;deca_device.c: 1235: dwt_write32bitoffsetreg(0x30020, 0x0, 0x1b6da489);
 20359  17E4  3000               	movlw	0
 20360  17E5  0141               	movlb	1	; select bank1
 20361  17E6  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 20362  17E7  3003               	movlw	3
 20363  17E8  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 20364  17E9  3000               	movlw	0
 20365  17EA  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 20366  17EB  3020               	movlw	32
 20367  17EC  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 20368  17ED  3000               	movlw	0
 20369  17EE  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 20370  17EF  3000               	movlw	0
 20371  17F0  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 20372  17F1  3000               	movlw	0
 20373  17F2  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 20374  17F3  3000               	movlw	0
 20375  17F4  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 20376  17F5  301B               	movlw	27
 20377  17F6  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 20378  17F7  306D               	movlw	109
 20379  17F8  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 20380  17F9  30A4               	movlw	164
 20381  17FA  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 20382  17FB  3089               	movlw	137
 20383  17FC  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 20384  17FD  31A7  27B4         	fcall	_dwt_write32bitoffsetreg
 20385  17FF  0008               	return
 20386  1800                     __end_of_dwt_configmrxlut:	
 20387                           
 20388                           	psect	text59
 20389  27B4                     __ptext59:	
 20390 ;; *************** function _dwt_write32bitoffsetreg *****************
 20391 ;; Defined at:
 20392 ;;		line 467 in file "deca_device.c"
 20393 ;; Parameters:    Size  Location     Type
 20394 ;;  regFileID       4   12[BANK1 ] unsigned long 
 20395 ;;  regOffset       4   16[BANK1 ] unsigned long 
 20396 ;;  regval          4   20[BANK1 ] unsigned long 
 20397 ;; Auto vars:     Size  Location     Type
 20398 ;;  buffer          4   73[BANK0 ] unsigned char [4]
 20399 ;;  j               2   77[BANK0 ] int 
 20400 ;; Return value:  Size  Location     Type
 20401 ;;                  1    wreg      void 
 20402 ;; Registers used:
 20403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20404 ;; Tracked objects:
 20405 ;;		On entry : 0/0
 20406 ;;		On exit  : 0/0
 20407 ;;		Unchanged: 0/0
 20408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20409 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20410 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20412 ;;      Totals:         0       7      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20413 ;;Total ram usage:       19 bytes
 20414 ;; Hardware stack levels used:    1
 20415 ;; Hardware stack levels required when called:    7
 20416 ;; This function calls:
 20417 ;;		_dwt_writetodevice
 20418 ;; This function is called by:
 20419 ;;		_dwt_configuretxrf
 20420 ;;		_dwt_configmrxlut
 20421 ;;		_dwt_configure
 20422 ;;		_dwt_run_pgfcal
 20423 ;;		_dwt_writetxdata
 20424 ;;		_dwt_disable_rf_tx
 20425 ;;		_dwt_enable_rf_tx
 20426 ;;		_dwt_disable_rftx_blocks
 20427 ;;		_dwt_setfinegraintxseq
 20428 ;;		_dwt_setlnapamode
 20429 ;;		_dwt_configurestskey
 20430 ;;		_dwt_configurestsiv
 20431 ;;		_dwt_restoreconfig
 20432 ;;		_dwt_configurestsmode
 20433 ;;		_dwt_readrxdata
 20434 ;;		_dwt_readaccdata
 20435 ;;		__dwt_otpprogword32
 20436 ;;		_dwt_setdblrxbuffmode
 20437 ;;		_dwt_setrxaftertxdelay
 20438 ;;		_dwt_isr
 20439 ;;		_dwt_setleds
 20440 ;;		_dwt_setreferencetrxtime
 20441 ;;		_dwt_setdelayedtrxtime
 20442 ;;		_dwt_setrxtimeout
 20443 ;;		_dwt_setinterrupt
 20444 ;;		_dwt_repeated_cw
 20445 ;;		_dwt_repeated_frames
 20446 ;;		_dwt_set_keyreg_128
 20447 ;;		_dwt_do_aes
 20448 ;; This function uses a non-reentrant model
 20449 ;;
 20450                           
 20451                           
 20452                           ;psect for function _dwt_write32bitoffsetreg
 20453  27B4                     _dwt_write32bitoffsetreg:	
 20454                           
 20455                           ;deca_device.c: 469: int j ;
 20456                           ;deca_device.c: 470: uint8_t buffer[4] ;
 20457                           ;deca_device.c: 472: for ( j = 0 ; j < 4 ; j++ )
 20458                           
 20459                           ;incstack = 0
 20460                           ; Regs used in _dwt_write32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20461  27B4  0140               	movlb	0	; select bank0
 20462  27B5  01ED               	clrf	dwt_write32bitoffsetreg@j
 20463  27B6  01EE               	clrf	dwt_write32bitoffsetreg@j+1
 20464  27B7  086E               	movf	dwt_write32bitoffsetreg@j+1,w
 20465  27B8  3A80               	xorlw	128
 20466  27B9  00E8               	movwf	??_dwt_write32bitoffsetreg
 20467  27BA  3080               	movlw	128
 20468  27BB  0268               	subwf	??_dwt_write32bitoffsetreg,w
 20469  27BC  1D03               	skipz
 20470  27BD  2FC0               	goto	u4925
 20471  27BE  3004               	movlw	4
 20472  27BF  026D               	subwf	dwt_write32bitoffsetreg@j,w
 20473  27C0                     u4925:	
 20474  27C0  1803               	btfsc	3,0
 20475  27C1  2FE4               	goto	l5587
 20476  27C2                     l5579:	
 20477                           
 20478                           ;deca_device.c: 473: {
 20479                           ;deca_device.c: 474: buffer[j] = (uint8_t)regval;
 20480  27C2  0141               	movlb	1	; select bank1
 20481  27C3  0834               	movf	dwt_write32bitoffsetreg@regval^(0+128),w
 20482  27C4  0140               	movlb	0	; select bank0
 20483  27C5  00E8               	movwf	??_dwt_write32bitoffsetreg
 20484  27C6  086D               	movf	dwt_write32bitoffsetreg@j,w
 20485  27C7  3E69               	addlw	(low (dwt_write32bitoffsetreg@buffer| 0))& (0+255)
 20486  27C8  0086               	movwf	6
 20487  27C9  0187               	clrf	7
 20488  27CA  0868               	movf	??_dwt_write32bitoffsetreg,w
 20489  27CB  0081               	movwf	1
 20490                           
 20491                           ;deca_device.c: 475: regval >>= 8 ;
 20492  27CC  3008               	movlw	8
 20493  27CD                     u4935:	
 20494  27CD  0141               	movlb	1	; select bank1
 20495  27CE  36B7               	lsrf	(dwt_write32bitoffsetreg@regval+3)^(0+128),f
 20496  27CF  0CB6               	rrf	(dwt_write32bitoffsetreg@regval+2)^(0+128),f
 20497  27D0  0CB5               	rrf	(dwt_write32bitoffsetreg@regval+1)^(0+128),f
 20498  27D1  0CB4               	rrf	dwt_write32bitoffsetreg@regval^(0+128),f
 20499  27D2  0B89               	decfsz	9,f
 20500  27D3  2FCD               	goto	u4935
 20501  27D4  3001               	movlw	1
 20502  27D5  0140               	movlb	0	; select bank0
 20503  27D6  07ED               	addwf	dwt_write32bitoffsetreg@j,f
 20504  27D7  3000               	movlw	0
 20505  27D8  3DEE               	addwfc	dwt_write32bitoffsetreg@j+1,f
 20506  27D9  086E               	movf	dwt_write32bitoffsetreg@j+1,w
 20507  27DA  3A80               	xorlw	128
 20508  27DB  00E8               	movwf	??_dwt_write32bitoffsetreg
 20509  27DC  3080               	movlw	128
 20510  27DD  0268               	subwf	??_dwt_write32bitoffsetreg,w
 20511  27DE  1D03               	skipz
 20512  27DF  2FE2               	goto	u4945
 20513  27E0  3004               	movlw	4
 20514  27E1  026D               	subwf	dwt_write32bitoffsetreg@j,w
 20515  27E2                     u4945:	
 20516  27E2  1C03               	skipc
 20517  27E3  2FC2               	goto	l5579
 20518  27E4                     l5587:	
 20519                           
 20520                           ;deca_device.c: 476: }
 20521                           ;deca_device.c: 478: dwt_writetodevice(regFileID,regOffset,4,buffer);
 20522  27E4  0141               	movlb	1	; select bank1
 20523  27E5  082F               	movf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128),w
 20524  27E6  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 20525  27E7  082E               	movf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128),w
 20526  27E8  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 20527  27E9  082D               	movf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128),w
 20528  27EA  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 20529  27EB  082C               	movf	dwt_write32bitoffsetreg@regFileID^(0+128),w
 20530  27EC  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 20531  27ED  0831               	movf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128),w
 20532  27EE  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 20533  27EF  0830               	movf	dwt_write32bitoffsetreg@regOffset^(0+128),w
 20534  27F0  00A4               	movwf	dwt_writetodevice@index^(0+128)
 20535  27F1  3000               	movlw	0
 20536  27F2  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 20537  27F3  3000               	movlw	0
 20538  27F4  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 20539  27F5  3000               	movlw	0
 20540  27F6  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 20541  27F7  3004               	movlw	4
 20542  27F8  00A6               	movwf	dwt_writetodevice@length^(0+128)
 20543  27F9  3069               	movlw	low dwt_write32bitoffsetreg@buffer
 20544  27FA  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 20545  27FB  3000               	movlw	high dwt_write32bitoffsetreg@buffer
 20546  27FC  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 20547  27FD  31A5  25F3         	fcall	_dwt_writetodevice
 20548  27FF  0008               	return
 20549  2800                     __end_of_dwt_write32bitoffsetreg:	
 20550                           
 20551                           	psect	text60
 20552  25F3                     __ptext60:	
 20553 ;; *************** function _dwt_writetodevice *****************
 20554 ;; Defined at:
 20555 ;;		line 332 in file "deca_device.c"
 20556 ;; Parameters:    Size  Location     Type
 20557 ;;  regFileID       4    0[BANK1 ] unsigned long 
 20558 ;;  index           2    4[BANK1 ] unsigned int 
 20559 ;;  length          4    6[BANK1 ] unsigned long 
 20560 ;;  buffer          2   10[BANK1 ] PTR unsigned char 
 20561 ;;		 -> tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), NULL(0), dwt_write8bitoffsetreg@regval(1), 
 20562 ;;		 -> dwt_write16bitoffsetreg@buffer(2), dwt_write32bitoffsetreg@buffer(4), 
 20563 ;; Auto vars:     Size  Location     Type
 20564 ;;		None
 20565 ;; Return value:  Size  Location     Type
 20566 ;;                  1    wreg      void 
 20567 ;; Registers used:
 20568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20569 ;; Tracked objects:
 20570 ;;		On entry : 0/0
 20571 ;;		On exit  : 0/0
 20572 ;;		Unchanged: 0/0
 20573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20574 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20577 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20578 ;;Total ram usage:       12 bytes
 20579 ;; Hardware stack levels used:    1
 20580 ;; Hardware stack levels required when called:    6
 20581 ;; This function calls:
 20582 ;;		_dwt_xfer3000
 20583 ;; This function is called by:
 20584 ;;		_dwt_write32bitoffsetreg
 20585 ;;		_dwt_write16bitoffsetreg
 20586 ;;		_dwt_write8bitoffsetreg
 20587 ;;		_dwt_writetxdata
 20588 ;;		_dwt_starttx
 20589 ;;		_dwt_seteui
 20590 ;;		_dwt_signal_rx_buff_free
 20591 ;;		_dwt_forcetrxoff
 20592 ;;		_dwt_rxenable
 20593 ;;		_dwt_update_nonce_CCM
 20594 ;;		_dwt_update_nonce_GCM
 20595 ;;		_dwt_do_aes
 20596 ;; This function uses a non-reentrant model
 20597 ;;
 20598                           
 20599                           
 20600                           ;psect for function _dwt_writetodevice
 20601  25F3                     _dwt_writetodevice:	
 20602                           
 20603                           ;deca_device.c: 340: dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_WR_BIT);
 20604                           
 20605                           ;incstack = 0
 20606                           ; Regs used in _dwt_writetodevice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20607  25F3  0141               	movlb	1	; select bank1
 20608  25F4  0823               	movf	(dwt_writetodevice@regFileID+3)^(0+128),w
 20609  25F5  0140               	movlb	0	; select bank0
 20610  25F6  00CA               	movwf	dwt_xfer3000@regFileID+3
 20611  25F7  0141               	movlb	1	; select bank1
 20612  25F8  0822               	movf	(dwt_writetodevice@regFileID+2)^(0+128),w
 20613  25F9  0140               	movlb	0	; select bank0
 20614  25FA  00C9               	movwf	dwt_xfer3000@regFileID+2
 20615  25FB  0141               	movlb	1	; select bank1
 20616  25FC  0821               	movf	(dwt_writetodevice@regFileID+1)^(0+128),w
 20617  25FD  0140               	movlb	0	; select bank0
 20618  25FE  00C8               	movwf	dwt_xfer3000@regFileID+1
 20619  25FF  0141               	movlb	1	; select bank1
 20620  2600  0820               	movf	dwt_writetodevice@regFileID^(0+128),w
 20621  2601  0140               	movlb	0	; select bank0
 20622  2602  00C7               	movwf	dwt_xfer3000@regFileID
 20623  2603  0141               	movlb	1	; select bank1
 20624  2604  0825               	movf	(dwt_writetodevice@index+1)^(0+128),w
 20625  2605  0140               	movlb	0	; select bank0
 20626  2606  00CC               	movwf	dwt_xfer3000@indx+1
 20627  2607  0141               	movlb	1	; select bank1
 20628  2608  0824               	movf	dwt_writetodevice@index^(0+128),w
 20629  2609  0140               	movlb	0	; select bank0
 20630  260A  00CB               	movwf	dwt_xfer3000@indx
 20631  260B  0141               	movlb	1	; select bank1
 20632  260C  0829               	movf	(dwt_writetodevice@length+3)^(0+128),w
 20633  260D  0140               	movlb	0	; select bank0
 20634  260E  00D0               	movwf	dwt_xfer3000@length+3
 20635  260F  0141               	movlb	1	; select bank1
 20636  2610  0828               	movf	(dwt_writetodevice@length+2)^(0+128),w
 20637  2611  0140               	movlb	0	; select bank0
 20638  2612  00CF               	movwf	dwt_xfer3000@length+2
 20639  2613  0141               	movlb	1	; select bank1
 20640  2614  0827               	movf	(dwt_writetodevice@length+1)^(0+128),w
 20641  2615  0140               	movlb	0	; select bank0
 20642  2616  00CE               	movwf	dwt_xfer3000@length+1
 20643  2617  0141               	movlb	1	; select bank1
 20644  2618  0826               	movf	dwt_writetodevice@length^(0+128),w
 20645  2619  0140               	movlb	0	; select bank0
 20646  261A  00CD               	movwf	dwt_xfer3000@length
 20647  261B  0141               	movlb	1	; select bank1
 20648  261C  082B               	movf	(dwt_writetodevice@buffer+1)^(0+128),w
 20649  261D  0140               	movlb	0	; select bank0
 20650  261E  00D2               	movwf	dwt_xfer3000@buffer+1
 20651  261F  0141               	movlb	1	; select bank1
 20652  2620  082A               	movf	dwt_writetodevice@buffer^(0+128),w
 20653  2621  0140               	movlb	0	; select bank0
 20654  2622  00D1               	movwf	dwt_xfer3000@buffer
 20655  2623  3000               	movlw	0
 20656  2624  00D3               	movwf	dwt_xfer3000@mode
 20657  2625  3080               	movlw	128
 20658  2626  00D4               	movwf	dwt_xfer3000@mode+1
 20659  2627  3189  216C         	fcall	_dwt_xfer3000
 20660  2629  0008               	return
 20661  262A                     __end_of_dwt_writetodevice:	
 20662                           
 20663                           	psect	text61
 20664  196F                     __ptext61:	
 20665 ;; *************** function __dwt_kick_dgc_on_wakeup *****************
 20666 ;; Defined at:
 20667 ;;		line 746 in file "deca_device.c"
 20668 ;; Parameters:    Size  Location     Type
 20669 ;;  channel         1    wreg     char 
 20670 ;; Auto vars:     Size  Location     Type
 20671 ;;  channel         1   77[BANK0 ] char 
 20672 ;; Return value:  Size  Location     Type
 20673 ;;                  1    wreg      void 
 20674 ;; Registers used:
 20675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20676 ;; Tracked objects:
 20677 ;;		On entry : 0/0
 20678 ;;		On exit  : 0/0
 20679 ;;		Unchanged: 0/0
 20680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20684 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20685 ;;Total ram usage:        1 bytes
 20686 ;; Hardware stack levels used:    1
 20687 ;; Hardware stack levels required when called:    7
 20688 ;; This function calls:
 20689 ;;		_dwt_modify32bitoffsetreg
 20690 ;; This function is called by:
 20691 ;;		_dwt_configure
 20692 ;;		_dwt_restoreconfig
 20693 ;; This function uses a non-reentrant model
 20694 ;;
 20695                           
 20696                           
 20697                           ;psect for function __dwt_kick_dgc_on_wakeup
 20698  196F                     __dwt_kick_dgc_on_wakeup:	
 20699                           
 20700                           ;incstack = 0
 20701                           ; Regs used in __dwt_kick_dgc_on_wakeup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20702                           ;__dwt_kick_dgc_on_wakeup@channel stored from wreg
 20703  196F  0140               	movlb	0	; select bank0
 20704  1970  00ED               	movwf	__dwt_kick_dgc_on_wakeup@channel
 20705                           
 20706                           ;deca_device.c: 749: if (channel == 5)
 20707  1971  3005               	movlw	5
 20708  1972  066D               	xorwf	__dwt_kick_dgc_on_wakeup@channel,w
 20709  1973  1D03               	btfss	3,2
 20710  1974  2999               	goto	l5825
 20711                           
 20712                           ;deca_device.c: 750: {
 20713                           ;deca_device.c: 751: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x2000U),
 20714                           ;deca_device.c: 752: (DWT_DGC_SEL_CH5 << (13U)) | 0x40U);
 20715  1975  3000               	movlw	0
 20716  1976  0141               	movlb	1	; select bank1
 20717  1977  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 20718  1978  300B               	movlw	11
 20719  1979  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 20720  197A  3000               	movlw	0
 20721  197B  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 20722  197C  3008               	movlw	8
 20723  197D  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 20724  197E  3000               	movlw	0
 20725  197F  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 20726  1980  3000               	movlw	0
 20727  1981  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 20728  1982  3000               	movlw	0
 20729  1983  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 20730  1984  3000               	movlw	0
 20731  1985  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 20732  1986  3000               	movlw	0
 20733  1987  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 20734  1988  3000               	movlw	0
 20735  1989  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 20736  198A  30DF               	movlw	223
 20737  198B  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 20738  198C  30FF               	movlw	255
 20739  198D  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 20740  198E  3000               	movlw	0
 20741  198F  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 20742  1990  3000               	movlw	0
 20743  1991  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 20744  1992  3000               	movlw	0
 20745  1993  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 20746  1994  3040               	movlw	64
 20747  1995  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 20748  1996  3192  22B6         	fcall	_dwt_modify32bitoffsetreg
 20749                           
 20750                           ;deca_device.c: 753: }
 20751  1998  0008               	return
 20752  1999                     l5825:	
 20753                           
 20754                           ;deca_device.c: 754: else if (channel == 9)
 20755  1999  3009               	movlw	9
 20756  199A  0140               	movlb	0	; select bank0
 20757  199B  066D               	xorwf	__dwt_kick_dgc_on_wakeup@channel,w
 20758  199C  1D03               	btfss	3,2
 20759  199D  0008               	return
 20760                           
 20761                           ;deca_device.c: 755: {
 20762                           ;deca_device.c: 756: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x2000U),
 20763                           ;deca_device.c: 757: (DWT_DGC_SEL_CH9 << (13U)) | 0x40U);
 20764  199E  3000               	movlw	0
 20765  199F  0141               	movlb	1	; select bank1
 20766  19A0  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 20767  19A1  300B               	movlw	11
 20768  19A2  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 20769  19A3  3000               	movlw	0
 20770  19A4  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 20771  19A5  3008               	movlw	8
 20772  19A6  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 20773  19A7  3000               	movlw	0
 20774  19A8  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 20775  19A9  3000               	movlw	0
 20776  19AA  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 20777  19AB  3000               	movlw	0
 20778  19AC  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 20779  19AD  3000               	movlw	0
 20780  19AE  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 20781  19AF  3000               	movlw	0
 20782  19B0  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 20783  19B1  3000               	movlw	0
 20784  19B2  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 20785  19B3  30DF               	movlw	223
 20786  19B4  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 20787  19B5  30FF               	movlw	255
 20788  19B6  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 20789  19B7  3000               	movlw	0
 20790  19B8  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 20791  19B9  3000               	movlw	0
 20792  19BA  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 20793  19BB  3020               	movlw	32
 20794  19BC  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 20795  19BD  3040               	movlw	64
 20796  19BE  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 20797  19BF  3192  22B6         	fcall	_dwt_modify32bitoffsetreg
 20798  19C1  0008               	return
 20799  19C2                     __end_of__dwt_kick_dgc_on_wakeup:	
 20800                           
 20801                           	psect	text62
 20802  12B6                     __ptext62:	
 20803 ;; *************** function _dwt_modify32bitoffsetreg *****************
 20804 ;; Defined at:
 20805 ;;		line 532 in file "deca_device.c"
 20806 ;; Parameters:    Size  Location     Type
 20807 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 20808 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 20809 ;;  _and            4    8[BANK1 ] const unsigned long 
 20810 ;;  _or             4   12[BANK1 ] const unsigned long 
 20811 ;; Auto vars:     Size  Location     Type
 20812 ;;  buf             8   16[BANK1 ] unsigned char [8]
 20813 ;; Return value:  Size  Location     Type
 20814 ;;                  1    wreg      void 
 20815 ;; Registers used:
 20816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20817 ;; Tracked objects:
 20818 ;;		On entry : 0/0
 20819 ;;		On exit  : 0/0
 20820 ;;		Unchanged: 0/0
 20821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20822 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20823 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20824 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20825 ;;      Totals:         0       5      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20826 ;;Total ram usage:       29 bytes
 20827 ;; Hardware stack levels used:    1
 20828 ;; Hardware stack levels required when called:    6
 20829 ;; This function calls:
 20830 ;;		_dwt_xfer3000
 20831 ;; This function is called by:
 20832 ;;		__dwt_kick_dgc_on_wakeup
 20833 ;;		_dwt_setdwstate
 20834 ;;		_dwt_configure
 20835 ;;		_dwt_writetxfctrl
 20836 ;;		_dwt_enable_rf_tx
 20837 ;;		_dwt_enable_rftx_blocks
 20838 ;;		__dwt_kick_ops_table_on_wakeup
 20839 ;;		_dwt_enablegpioclocks
 20840 ;;		_dwt_configurestsmode
 20841 ;;		__dwt_otpprogword32
 20842 ;;		_dwt_enableautoack
 20843 ;;		_dwt_setdblrxbuffmode
 20844 ;;		_dwt_setleds
 20845 ;;		_dwt_setinterrupt
 20846 ;;		_dwt_configuresfdtype
 20847 ;; This function uses a non-reentrant model
 20848 ;;
 20849                           
 20850                           
 20851                           ;psect for function _dwt_modify32bitoffsetreg
 20852  12B6                     _dwt_modify32bitoffsetreg:	
 20853                           
 20854                           ;deca_device.c: 534: uint8_t buf[8];
 20855                           ;deca_device.c: 535: buf[0] = (uint8_t)_and;
 20856                           
 20857                           ;incstack = 0
 20858                           ; Regs used in _dwt_modify32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20859  12B6  0141               	movlb	1	; select bank1
 20860  12B7  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 20861  12B8  0140               	movlb	0	; select bank0
 20862  12B9  00E8               	movwf	??_dwt_modify32bitoffsetreg
 20863  12BA  0868               	movf	??_dwt_modify32bitoffsetreg,w
 20864  12BB  0141               	movlb	1	; select bank1
 20865  12BC  00B0               	movwf	dwt_modify32bitoffsetreg@buf^(0+128)
 20866                           
 20867                           ;deca_device.c: 536: buf[1] = (uint8_t)(_and>>8);
 20868  12BD  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 20869  12BE  0140               	movlb	0	; select bank0
 20870  12BF  00E8               	movwf	??_dwt_modify32bitoffsetreg
 20871  12C0  0141               	movlb	1	; select bank1
 20872  12C1  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 20873  12C2  0140               	movlb	0	; select bank0
 20874  12C3  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 20875  12C4  0141               	movlb	1	; select bank1
 20876  12C5  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 20877  12C6  0140               	movlb	0	; select bank0
 20878  12C7  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 20879  12C8  0141               	movlb	1	; select bank1
 20880  12C9  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 20881  12CA  0140               	movlb	0	; select bank0
 20882  12CB  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 20883  12CC  3008               	movlw	8
 20884  12CD                     u4955:	
 20885  12CD  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 20886  12CE  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 20887  12CF  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 20888  12D0  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 20889  12D1  0B89               	decfsz	9,f
 20890  12D2  2ACD               	goto	u4955
 20891  12D3  0868               	movf	??_dwt_modify32bitoffsetreg,w
 20892  12D4  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 20893  12D5  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 20894  12D6  0141               	movlb	1	; select bank1
 20895  12D7  00B1               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+1)
 20896                           
 20897                           ;deca_device.c: 537: buf[2] = (uint8_t)(_and>>16);
 20898  12D8  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 20899  12D9  0140               	movlb	0	; select bank0
 20900  12DA  00E8               	movwf	??_dwt_modify32bitoffsetreg
 20901  12DB  0141               	movlb	1	; select bank1
 20902  12DC  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 20903  12DD  0140               	movlb	0	; select bank0
 20904  12DE  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 20905  12DF  0141               	movlb	1	; select bank1
 20906  12E0  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 20907  12E1  0140               	movlb	0	; select bank0
 20908  12E2  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 20909  12E3  0141               	movlb	1	; select bank1
 20910  12E4  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 20911  12E5  0140               	movlb	0	; select bank0
 20912  12E6  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 20913  12E7  3010               	movlw	16
 20914  12E8                     u4965:	
 20915  12E8  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 20916  12E9  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 20917  12EA  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 20918  12EB  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 20919  12EC  0B89               	decfsz	9,f
 20920  12ED  2AE8               	goto	u4965
 20921  12EE  0868               	movf	??_dwt_modify32bitoffsetreg,w
 20922  12EF  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 20923  12F0  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 20924  12F1  0141               	movlb	1	; select bank1
 20925  12F2  00B2               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+2)
 20926                           
 20927                           ;deca_device.c: 538: buf[3] = (uint8_t)(_and>>24);
 20928  12F3  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 20929  12F4  0140               	movlb	0	; select bank0
 20930  12F5  00E8               	movwf	??_dwt_modify32bitoffsetreg
 20931  12F6  0141               	movlb	1	; select bank1
 20932  12F7  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 20933  12F8  0140               	movlb	0	; select bank0
 20934  12F9  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 20935  12FA  0141               	movlb	1	; select bank1
 20936  12FB  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 20937  12FC  0140               	movlb	0	; select bank0
 20938  12FD  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 20939  12FE  0141               	movlb	1	; select bank1
 20940  12FF  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 20941  1300  0140               	movlb	0	; select bank0
 20942  1301  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 20943  1302  3018               	movlw	24
 20944  1303                     u4975:	
 20945  1303  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 20946  1304  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 20947  1305  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 20948  1306  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 20949  1307  0B89               	decfsz	9,f
 20950  1308  2B03               	goto	u4975
 20951  1309  0868               	movf	??_dwt_modify32bitoffsetreg,w
 20952  130A  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 20953  130B  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 20954  130C  0141               	movlb	1	; select bank1
 20955  130D  00B3               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+3)
 20956                           
 20957                           ;deca_device.c: 539: buf[4] = (uint8_t)_or;
 20958  130E  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 20959  130F  0140               	movlb	0	; select bank0
 20960  1310  00E8               	movwf	??_dwt_modify32bitoffsetreg
 20961  1311  0868               	movf	??_dwt_modify32bitoffsetreg,w
 20962  1312  0141               	movlb	1	; select bank1
 20963  1313  00B4               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+4)
 20964                           
 20965                           ;deca_device.c: 540: buf[5] = (uint8_t)(_or>>8);
 20966  1314  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 20967  1315  0140               	movlb	0	; select bank0
 20968  1316  00E8               	movwf	??_dwt_modify32bitoffsetreg
 20969  1317  0141               	movlb	1	; select bank1
 20970  1318  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 20971  1319  0140               	movlb	0	; select bank0
 20972  131A  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 20973  131B  0141               	movlb	1	; select bank1
 20974  131C  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 20975  131D  0140               	movlb	0	; select bank0
 20976  131E  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 20977  131F  0141               	movlb	1	; select bank1
 20978  1320  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 20979  1321  0140               	movlb	0	; select bank0
 20980  1322  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 20981  1323  3008               	movlw	8
 20982  1324                     u4985:	
 20983  1324  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 20984  1325  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 20985  1326  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 20986  1327  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 20987  1328  0B89               	decfsz	9,f
 20988  1329  2B24               	goto	u4985
 20989  132A  0868               	movf	??_dwt_modify32bitoffsetreg,w
 20990  132B  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 20991  132C  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 20992  132D  0141               	movlb	1	; select bank1
 20993  132E  00B5               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+5)
 20994                           
 20995                           ;deca_device.c: 541: buf[6] = (uint8_t)(_or>>16);
 20996  132F  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 20997  1330  0140               	movlb	0	; select bank0
 20998  1331  00E8               	movwf	??_dwt_modify32bitoffsetreg
 20999  1332  0141               	movlb	1	; select bank1
 21000  1333  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 21001  1334  0140               	movlb	0	; select bank0
 21002  1335  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 21003  1336  0141               	movlb	1	; select bank1
 21004  1337  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 21005  1338  0140               	movlb	0	; select bank0
 21006  1339  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 21007  133A  0141               	movlb	1	; select bank1
 21008  133B  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 21009  133C  0140               	movlb	0	; select bank0
 21010  133D  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 21011  133E  3010               	movlw	16
 21012  133F                     u4995:	
 21013  133F  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 21014  1340  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 21015  1341  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 21016  1342  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 21017  1343  0B89               	decfsz	9,f
 21018  1344  2B3F               	goto	u4995
 21019  1345  0868               	movf	??_dwt_modify32bitoffsetreg,w
 21020  1346  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 21021  1347  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 21022  1348  0141               	movlb	1	; select bank1
 21023  1349  00B6               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+6)
 21024                           
 21025                           ;deca_device.c: 542: buf[7] = (uint8_t)(_or>>24);
 21026  134A  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 21027  134B  0140               	movlb	0	; select bank0
 21028  134C  00E8               	movwf	??_dwt_modify32bitoffsetreg
 21029  134D  0141               	movlb	1	; select bank1
 21030  134E  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 21031  134F  0140               	movlb	0	; select bank0
 21032  1350  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 21033  1351  0141               	movlb	1	; select bank1
 21034  1352  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 21035  1353  0140               	movlb	0	; select bank0
 21036  1354  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 21037  1355  0141               	movlb	1	; select bank1
 21038  1356  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 21039  1357  0140               	movlb	0	; select bank0
 21040  1358  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 21041  1359  3018               	movlw	24
 21042  135A                     u5005:	
 21043  135A  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 21044  135B  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 21045  135C  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 21046  135D  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 21047  135E  0B89               	decfsz	9,f
 21048  135F  2B5A               	goto	u5005
 21049  1360  0868               	movf	??_dwt_modify32bitoffsetreg,w
 21050  1361  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 21051  1362  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 21052  1363  0141               	movlb	1	; select bank1
 21053  1364  00B7               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+7)
 21054                           
 21055                           ;deca_device.c: 543: dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND
      +                          _OR_32);
 21056  1365  0823               	movf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128),w
 21057  1366  0140               	movlb	0	; select bank0
 21058  1367  00CA               	movwf	dwt_xfer3000@regFileID+3
 21059  1368  0141               	movlb	1	; select bank1
 21060  1369  0822               	movf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128),w
 21061  136A  0140               	movlb	0	; select bank0
 21062  136B  00C9               	movwf	dwt_xfer3000@regFileID+2
 21063  136C  0141               	movlb	1	; select bank1
 21064  136D  0821               	movf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128),w
 21065  136E  0140               	movlb	0	; select bank0
 21066  136F  00C8               	movwf	dwt_xfer3000@regFileID+1
 21067  1370  0141               	movlb	1	; select bank1
 21068  1371  0820               	movf	dwt_modify32bitoffsetreg@regFileID^(0+128),w
 21069  1372  0140               	movlb	0	; select bank0
 21070  1373  00C7               	movwf	dwt_xfer3000@regFileID
 21071  1374  0141               	movlb	1	; select bank1
 21072  1375  0825               	movf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128),w
 21073  1376  0140               	movlb	0	; select bank0
 21074  1377  00CC               	movwf	dwt_xfer3000@indx+1
 21075  1378  0141               	movlb	1	; select bank1
 21076  1379  0824               	movf	dwt_modify32bitoffsetreg@regOffset^(0+128),w
 21077  137A  0140               	movlb	0	; select bank0
 21078  137B  00CB               	movwf	dwt_xfer3000@indx
 21079  137C  3000               	movlw	0
 21080  137D  00D0               	movwf	dwt_xfer3000@length+3
 21081  137E  3000               	movlw	0
 21082  137F  00CF               	movwf	dwt_xfer3000@length+2
 21083  1380  3000               	movlw	0
 21084  1381  00CE               	movwf	dwt_xfer3000@length+1
 21085  1382  3008               	movlw	8
 21086  1383  00CD               	movwf	dwt_xfer3000@length
 21087  1384  30B0               	movlw	low dwt_modify32bitoffsetreg@buf
 21088  1385  00D1               	movwf	dwt_xfer3000@buffer
 21089  1386  3000               	movlw	high dwt_modify32bitoffsetreg@buf
 21090  1387  00D2               	movwf	dwt_xfer3000@buffer+1
 21091  1388  3003               	movlw	3
 21092  1389  00D3               	movwf	dwt_xfer3000@mode
 21093  138A  3080               	movlw	128
 21094  138B  00D4               	movwf	dwt_xfer3000@mode+1
 21095  138C  3189  216C         	fcall	_dwt_xfer3000
 21096  138E  0008               	return
 21097  138F                     __end_of_dwt_modify32bitoffsetreg:	
 21098                           
 21099                           	psect	text63
 21100  096C                     __ptext63:	
 21101 ;; *************** function _dwt_xfer3000 *****************
 21102 ;; Defined at:
 21103 ;;		line 207 in file "deca_device.c"
 21104 ;; Parameters:    Size  Location     Type
 21105 ;;  regFileID       4   39[BANK0 ] const unsigned long 
 21106 ;;  indx            2   43[BANK0 ] const unsigned int 
 21107 ;;  length          4   45[BANK0 ] const unsigned long 
 21108 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 21109 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 21110 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 21111 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 21112 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 21113 ;;  mode            2   51[BANK0 ] const enum E265
 21114 ;; Auto vars:     Size  Location     Type
 21115 ;;  crc8            1   65[BANK0 ] unsigned char 
 21116 ;;  header          2   68[BANK0 ] unsigned char [2]
 21117 ;;  cnt             2   70[BANK0 ] unsigned int 
 21118 ;;  reg_offset      2   66[BANK0 ] unsigned int 
 21119 ;;  addr            2   63[BANK0 ] unsigned int 
 21120 ;;  reg_file        2   61[BANK0 ] unsigned int 
 21121 ;; Return value:  Size  Location     Type
 21122 ;;                  1    wreg      void 
 21123 ;; Registers used:
 21124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21125 ;; Tracked objects:
 21126 ;;		On entry : 0/0
 21127 ;;		On exit  : 0/0
 21128 ;;		Unchanged: 0/0
 21129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21130 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21131 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21132 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21133 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21134 ;;Total ram usage:       33 bytes
 21135 ;; Hardware stack levels used:    1
 21136 ;; Hardware stack levels required when called:    5
 21137 ;; This function calls:
 21138 ;;		__fassert
 21139 ;;		_dwt_generatecrc8
 21140 ;;		_readfromspi
 21141 ;;		_writetospi
 21142 ;;		_writetospiwithcrc
 21143 ;; This function is called by:
 21144 ;;		_dwt_writetodevice
 21145 ;;		_dwt_readfromdevice
 21146 ;;		_dwt_read8bitoffsetreg
 21147 ;;		_dwt_modify32bitoffsetreg
 21148 ;;		_dwt_modify16bitoffsetreg
 21149 ;;		_dwt_modify8bitoffsetreg
 21150 ;; This function uses a non-reentrant model
 21151 ;;
 21152                           
 21153                           
 21154                           ;psect for function _dwt_xfer3000
 21155  096C                     _dwt_xfer3000:	
 21156                           
 21157                           ;deca_device.c: 216: uint8_t header[2];
 21158                           ;deca_device.c: 217: uint16_t cnt = 0;
 21159                           
 21160                           ;incstack = 0
 21161                           ; Regs used in _dwt_xfer3000: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21162  096C  0140               	movlb	0	; select bank0
 21163  096D  01E6               	clrf	dwt_xfer3000@cnt
 21164  096E  01E7               	clrf	dwt_xfer3000@cnt+1
 21165                           
 21166                           ;deca_device.c: 218: uint16_t reg_file = 0x1F & ((regFileID + indx) >> 16);
 21167  096F  0847               	movf	dwt_xfer3000@regFileID,w
 21168  0970  00D5               	movwf	??_dwt_xfer3000
 21169  0971  0848               	movf	dwt_xfer3000@regFileID+1,w
 21170  0972  00D6               	movwf	??_dwt_xfer3000+1
 21171  0973  0849               	movf	dwt_xfer3000@regFileID+2,w
 21172  0974  00D7               	movwf	??_dwt_xfer3000+2
 21173  0975  084A               	movf	dwt_xfer3000@regFileID+3,w
 21174  0976  00D8               	movwf	??_dwt_xfer3000+3
 21175  0977  084B               	movf	dwt_xfer3000@indx,w
 21176  0978  00D9               	movwf	??_dwt_xfer3000+4
 21177  0979  084C               	movf	dwt_xfer3000@indx+1,w
 21178  097A  00DA               	movwf	??_dwt_xfer3000+5
 21179  097B  01DB               	clrf	??_dwt_xfer3000+6
 21180  097C  01DC               	clrf	??_dwt_xfer3000+7
 21181  097D  0859               	movf	??_dwt_xfer3000+4,w
 21182  097E  07D5               	addwf	??_dwt_xfer3000,f
 21183  097F  085A               	movf	??_dwt_xfer3000+5,w
 21184  0980  3DD6               	addwfc	??_dwt_xfer3000+1,f
 21185  0981  085B               	movf	??_dwt_xfer3000+6,w
 21186  0982  3DD7               	addwfc	??_dwt_xfer3000+2,f
 21187  0983  085C               	movf	??_dwt_xfer3000+7,w
 21188  0984  3DD8               	addwfc	??_dwt_xfer3000+3,f
 21189  0985  3010               	movlw	16
 21190  0986                     u4725:	
 21191  0986  36D8               	lsrf	??_dwt_xfer3000+3,f
 21192  0987  0CD7               	rrf	??_dwt_xfer3000+2,f
 21193  0988  0CD6               	rrf	??_dwt_xfer3000+1,f
 21194  0989  0CD5               	rrf	??_dwt_xfer3000,f
 21195  098A  0B89               	decfsz	9,f
 21196  098B  2986               	goto	u4725
 21197  098C  301F               	movlw	31
 21198  098D  0555               	andwf	??_dwt_xfer3000,w
 21199  098E  00DD               	movwf	dwt_xfer3000@reg_file
 21200  098F  3000               	movlw	0
 21201  0990  0556               	andwf	??_dwt_xfer3000+1,w
 21202  0991  00DE               	movwf	dwt_xfer3000@reg_file+1
 21203                           
 21204                           ;deca_device.c: 219: uint16_t reg_offset = 0x7F & (regFileID + indx);
 21205  0992  0847               	movf	dwt_xfer3000@regFileID,w
 21206  0993  074B               	addwf	dwt_xfer3000@indx,w
 21207  0994  00D5               	movwf	??_dwt_xfer3000
 21208  0995  0848               	movf	dwt_xfer3000@regFileID+1,w
 21209  0996  3D4C               	addwfc	dwt_xfer3000@indx+1,w
 21210  0997  00D6               	movwf	??_dwt_xfer3000+1
 21211  0998  307F               	movlw	127
 21212  0999  0555               	andwf	??_dwt_xfer3000,w
 21213  099A  00E2               	movwf	dwt_xfer3000@reg_offset
 21214  099B  3000               	movlw	0
 21215  099C  0556               	andwf	??_dwt_xfer3000+1,w
 21216  099D  00E3               	movwf	dwt_xfer3000@reg_offset+1
 21217                           
 21218                           ;deca_device.c: 222: if(!(reg_file <= 0x1F)) {_fassert(222, "deca_device.c", "reg_file <
      +                          = 0x1F");};
 21219  099E  3000               	movlw	0
 21220  099F  025E               	subwf	dwt_xfer3000@reg_file+1,w
 21221  09A0  3020               	movlw	32
 21222  09A1  1903               	skipnz
 21223  09A2  025D               	subwf	dwt_xfer3000@reg_file,w
 21224  09A3  1C03               	skipc
 21225  09A4  29B4               	goto	l5471
 21226  09A5  30DE               	movlw	222
 21227  09A6  00C1               	movwf	__fassert@line
 21228  09A7  3000               	movlw	0
 21229  09A8  00C2               	movwf	__fassert@line+1
 21230  09A9  303B               	movlw	low (STR_6| (0+32768))
 21231  09AA  00C3               	movwf	__fassert@file
 21232  09AB  30A9               	movlw	high (STR_6| (0+32768))
 21233  09AC  00C4               	movwf	__fassert@file+1
 21234  09AD  30FD               	movlw	low (STR_7| (0+32768))
 21235  09AE  00C5               	movwf	__fassert@exp
 21236  09AF  30A8               	movlw	high (STR_7| (0+32768))
 21237  09B0  00C6               	movwf	__fassert@exp+1
 21238  09B1  3190  2003  3189   	fcall	__fassert
 21239  09B4                     l5471:	
 21240                           
 21241                           ;deca_device.c: 223: if(!(reg_offset <= 0x7F)) {_fassert(223, "deca_device.c", "reg_offs
      +                          et <= 0x7F");};
 21242  09B4  3000               	movlw	0
 21243  09B5  0140               	movlb	0	; select bank0
 21244  09B6  0263               	subwf	dwt_xfer3000@reg_offset+1,w
 21245  09B7  3080               	movlw	128
 21246  09B8  1903               	skipnz
 21247  09B9  0262               	subwf	dwt_xfer3000@reg_offset,w
 21248  09BA  1C03               	skipc
 21249  09BB  29CB               	goto	l5475
 21250  09BC  30DF               	movlw	223
 21251  09BD  00C1               	movwf	__fassert@line
 21252  09BE  3000               	movlw	0
 21253  09BF  00C2               	movwf	__fassert@line+1
 21254  09C0  303B               	movlw	low (STR_6| (0+32768))
 21255  09C1  00C3               	movwf	__fassert@file
 21256  09C2  30A9               	movlw	high (STR_6| (0+32768))
 21257  09C3  00C4               	movwf	__fassert@file+1
 21258  09C4  30B6               	movlw	low (STR_9| (0+32768))
 21259  09C5  00C5               	movwf	__fassert@exp
 21260  09C6  30A8               	movlw	high (STR_9| (0+32768))
 21261  09C7  00C6               	movwf	__fassert@exp+1
 21262  09C8  3190  2003  3189   	fcall	__fassert
 21263  09CB                     l5475:	
 21264                           
 21265                           ;deca_device.c: 224: if(!(length < 0x3100)) {_fassert(224, "deca_device.c", "length < 0x
      +                          3100");};
 21266  09CB  0140               	movlb	0	; select bank0
 21267  09CC  0850               	movf	dwt_xfer3000@length+3,w
 21268  09CD  1D03               	btfss	3,2
 21269  09CE  29D6               	goto	l5477
 21270  09CF  084F               	movf	dwt_xfer3000@length+2,w
 21271  09D0  1D03               	btfss	3,2
 21272  09D1  29D6               	goto	l5477
 21273  09D2  3031               	movlw	49
 21274  09D3  024E               	subwf	dwt_xfer3000@length+1,w
 21275  09D4  1C03               	btfss	3,0
 21276  09D5  29E5               	goto	l5479
 21277  09D6                     l5477:	
 21278  09D6  30E0               	movlw	224
 21279  09D7  00C1               	movwf	__fassert@line
 21280  09D8  3000               	movlw	0
 21281  09D9  00C2               	movwf	__fassert@line+1
 21282  09DA  303B               	movlw	low (STR_6| (0+32768))
 21283  09DB  00C3               	movwf	__fassert@file
 21284  09DC  30A9               	movlw	high (STR_6| (0+32768))
 21285  09DD  00C4               	movwf	__fassert@file+1
 21286  09DE  300E               	movlw	low (STR_11| (0+32768))
 21287  09DF  00C5               	movwf	__fassert@exp
 21288  09E0  30A9               	movlw	high (STR_11| (0+32768))
 21289  09E1  00C6               	movwf	__fassert@exp+1
 21290  09E2  3190  2003  3189   	fcall	__fassert
 21291  09E5                     l5479:	
 21292                           
 21293                           ;deca_device.c: 225: if(!(mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_RD_BIT || mode
      +                           == DW3000_SPI_AND_OR_8 || mode == DW3000_SPI_AND_OR_16 || mode == DW3000_SPI_AND_OR_32)
      +                          ) {_fassert(229, "deca_device.c", "mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_RD_BI
      +                          T || mo
 21294  09E5  3080               	movlw	128
 21295  09E6  0140               	movlb	0	; select bank0
 21296  09E7  0654               	xorwf	dwt_xfer3000@mode+1,w
 21297  09E8  0453               	iorwf	dwt_xfer3000@mode,w
 21298  09E9  1903               	btfsc	3,2
 21299  09EA  2A12               	goto	l5491
 21300  09EB  0853               	movf	dwt_xfer3000@mode,w
 21301  09EC  0454               	iorwf	dwt_xfer3000@mode+1,w
 21302  09ED  1903               	btfsc	3,2
 21303  09EE  2A12               	goto	l5491
 21304  09EF  0353               	decf	dwt_xfer3000@mode,w
 21305  09F0  3080               	movlw	128
 21306  09F1  1903               	skipnz
 21307  09F2  0654               	xorwf	dwt_xfer3000@mode+1,w
 21308  09F3  1903               	btfsc	3,2
 21309  09F4  2A12               	goto	l5491
 21310  09F5  3002               	movlw	2
 21311  09F6  0653               	xorwf	dwt_xfer3000@mode,w
 21312  09F7  3080               	movlw	128
 21313  09F8  1903               	skipnz
 21314  09F9  0654               	xorwf	dwt_xfer3000@mode+1,w
 21315  09FA  1903               	btfsc	3,2
 21316  09FB  2A12               	goto	l5491
 21317  09FC  3003               	movlw	3
 21318  09FD  0653               	xorwf	dwt_xfer3000@mode,w
 21319  09FE  3080               	movlw	128
 21320  09FF  1903               	skipnz
 21321  0A00  0654               	xorwf	dwt_xfer3000@mode+1,w
 21322  0A01  1903               	btfsc	3,2
 21323  0A02  2A12               	goto	l5491
 21324  0A03  30E5               	movlw	229
 21325  0A04  00C1               	movwf	__fassert@line
 21326  0A05  3000               	movlw	0
 21327  0A06  00C2               	movwf	__fassert@line+1
 21328  0A07  303B               	movlw	low (STR_6| (0+32768))
 21329  0A08  00C3               	movwf	__fassert@file
 21330  0A09  30A9               	movlw	high (STR_6| (0+32768))
 21331  0A0A  00C4               	movwf	__fassert@file+1
 21332  0A0B  3004               	movlw	low (STR_13| (0+32768))
 21333  0A0C  00C5               	movwf	__fassert@exp
 21334  0A0D  3098               	movlw	high (STR_13| (0+32768))
 21335  0A0E  00C6               	movwf	__fassert@exp+1
 21336  0A0F  3190  2003  3189   	fcall	__fassert
 21337  0A12                     l5491:	
 21338                           
 21339                           ;deca_device.c: 232: uint16_t addr;
 21340                           ;deca_device.c: 233: addr = (reg_file << 9) | (reg_offset << 2);
 21341  0A12  0140               	movlb	0	; select bank0
 21342  0A13  0863               	movf	dwt_xfer3000@reg_offset+1,w
 21343  0A14  00D6               	movwf	??_dwt_xfer3000+1
 21344  0A15  0862               	movf	dwt_xfer3000@reg_offset,w
 21345  0A16  00D5               	movwf	??_dwt_xfer3000
 21346  0A17  35D5               	lslf	??_dwt_xfer3000,f
 21347  0A18  0DD6               	rlf	??_dwt_xfer3000+1,f
 21348  0A19  35D5               	lslf	??_dwt_xfer3000,f
 21349  0A1A  0DD6               	rlf	??_dwt_xfer3000+1,f
 21350  0A1B  085E               	movf	dwt_xfer3000@reg_file+1,w
 21351  0A1C  00D8               	movwf	??_dwt_xfer3000+3
 21352  0A1D  085D               	movf	dwt_xfer3000@reg_file,w
 21353  0A1E  00D7               	movwf	??_dwt_xfer3000+2
 21354  0A1F  3009               	movlw	9
 21355  0A20                     u4815:	
 21356  0A20  35D7               	lslf	??_dwt_xfer3000+2,f
 21357  0A21  0DD8               	rlf	??_dwt_xfer3000+3,f
 21358  0A22  0B89               	decfsz	9,f
 21359  0A23  2A20               	goto	u4815
 21360  0A24  0855               	movf	??_dwt_xfer3000,w
 21361  0A25  0457               	iorwf	??_dwt_xfer3000+2,w
 21362  0A26  00DF               	movwf	dwt_xfer3000@addr
 21363  0A27  0856               	movf	??_dwt_xfer3000+1,w
 21364  0A28  0458               	iorwf	??_dwt_xfer3000+3,w
 21365  0A29  00E0               	movwf	dwt_xfer3000@addr+1
 21366                           
 21367                           ;deca_device.c: 234: header[0] = (uint8_t)((mode | addr) >> 8);
 21368  0A2A  085F               	movf	dwt_xfer3000@addr,w
 21369  0A2B  0453               	iorwf	dwt_xfer3000@mode,w
 21370  0A2C  00D5               	movwf	??_dwt_xfer3000
 21371  0A2D  0860               	movf	dwt_xfer3000@addr+1,w
 21372  0A2E  0454               	iorwf	dwt_xfer3000@mode+1,w
 21373  0A2F  00D6               	movwf	??_dwt_xfer3000+1
 21374  0A30  0856               	movf	??_dwt_xfer3000+1,w
 21375  0A31  00D7               	movwf	??_dwt_xfer3000+2
 21376  0A32  0857               	movf	??_dwt_xfer3000+2,w
 21377  0A33  00E4               	movwf	dwt_xfer3000@header
 21378                           
 21379                           ;deca_device.c: 235: header[1] = (uint8_t)(addr | (mode & 0x03));
 21380  0A34  0853               	movf	dwt_xfer3000@mode,w
 21381  0A35  3903               	andlw	3
 21382  0A36  045F               	iorwf	dwt_xfer3000@addr,w
 21383  0A37  00D5               	movwf	??_dwt_xfer3000
 21384  0A38  0855               	movf	??_dwt_xfer3000,w
 21385  0A39  00E5               	movwf	dwt_xfer3000@header+1
 21386                           
 21387                           ;deca_device.c: 236: if ( length == 0)
 21388  0A3A  0850               	movf	dwt_xfer3000@length+3,w
 21389  0A3B  044F               	iorwf	dwt_xfer3000@length+2,w
 21390  0A3C  044E               	iorwf	dwt_xfer3000@length+1,w
 21391  0A3D  044D               	iorwf	dwt_xfer3000@length,w
 21392  0A3E  1D03               	skipz
 21393  0A3F  2A5B               	goto	l5507
 21394                           
 21395                           ;deca_device.c: 237: {
 21396                           ;deca_device.c: 241: if(!(mode == DW3000_SPI_WR_BIT)) {_fassert(241, "deca_device.c", "m
      +                          ode == DW3000_SPI_WR_BIT");};
 21397  0A40  3080               	movlw	128
 21398  0A41  0654               	xorwf	dwt_xfer3000@mode+1,w
 21399  0A42  0453               	iorwf	dwt_xfer3000@mode,w
 21400  0A43  1903               	btfsc	3,2
 21401  0A44  2A54               	goto	l5503
 21402  0A45  30F1               	movlw	241
 21403  0A46  00C1               	movwf	__fassert@line
 21404  0A47  3000               	movlw	0
 21405  0A48  00C2               	movwf	__fassert@line+1
 21406  0A49  303B               	movlw	low (STR_6| (0+32768))
 21407  0A4A  00C3               	movwf	__fassert@file
 21408  0A4B  30A9               	movlw	high (STR_6| (0+32768))
 21409  0A4C  00C4               	movwf	__fassert@file+1
 21410  0A4D  3060               	movlw	low (STR_15| (0+32768))
 21411  0A4E  00C5               	movwf	__fassert@exp
 21412  0A4F  30A8               	movlw	high (STR_15| (0+32768))
 21413  0A50  00C6               	movwf	__fassert@exp+1
 21414  0A51  3190  2003  3189   	fcall	__fassert
 21415  0A54                     l5503:	
 21416                           
 21417                           ;deca_device.c: 243: header[0] = (uint8_t)((DW3000_SPI_WR_BIT>>8) | (regFileID<<1) | (0<
      +                          <6 | 1<<0));
 21418  0A54  0140               	movlb	0	; select bank0
 21419  0A55  3547               	lslf	dwt_xfer3000@regFileID,w
 21420  0A56  3881               	iorlw	129
 21421  0A57  00D5               	movwf	??_dwt_xfer3000
 21422  0A58  0855               	movf	??_dwt_xfer3000,w
 21423  0A59  00E4               	movwf	dwt_xfer3000@header
 21424  0A5A  2A68               	goto	l5513
 21425  0A5B                     l5507:	
 21426                           ;deca_device.c: 245: }
 21427                           
 21428                           ;deca_device.c: 244: cnt = 1;
 21429                           
 21430                           
 21431                           ;deca_device.c: 246: else if (reg_offset == 0 && (mode == DW3000_SPI_WR_BIT || mode == D
      +                          W3000_SPI_RD_BIT))
 21432  0A5B  0862               	movf	dwt_xfer3000@reg_offset,w
 21433  0A5C  0463               	iorwf	dwt_xfer3000@reg_offset+1,w
 21434  0A5D  1D03               	btfss	3,2
 21435  0A5E  2A6A               	goto	l398
 21436  0A5F  3080               	movlw	128
 21437  0A60  0654               	xorwf	dwt_xfer3000@mode+1,w
 21438  0A61  0453               	iorwf	dwt_xfer3000@mode,w
 21439  0A62  1903               	btfsc	3,2
 21440  0A63  2A68               	goto	l5513
 21441  0A64  0853               	movf	dwt_xfer3000@mode,w
 21442  0A65  0454               	iorwf	dwt_xfer3000@mode+1,w
 21443  0A66  1D03               	btfss	3,2
 21444  0A67  2A6A               	goto	l398
 21445  0A68                     l5513:	
 21446                           ;deca_device.c: 247: {
 21447                           ;deca_device.c: 250: header[0] |= (0<<6 | 0<<0);
 21448                           
 21449                           
 21450                           ;deca_device.c: 251: cnt = 1;
 21451  0A68  3001               	movlw	1
 21452  0A69  2A6C               	goto	L22
 21453  0A6A                     l398:	
 21454                           ;deca_device.c: 252: }
 21455                           
 21456                           
 21457                           ;deca_device.c: 253: else
 21458                           ;deca_device.c: 254: {
 21459                           ;deca_device.c: 258: header[0] |= (1<<6);
 21460  0A6A  1764               	bsf	dwt_xfer3000@header,6
 21461                           
 21462                           ;deca_device.c: 259: cnt = 2;
 21463  0A6B  3002               	movlw	2
 21464  0A6C                     L22:	
 21465  0A6C  00E6               	movwf	dwt_xfer3000@cnt
 21466  0A6D  3000               	movlw	0
 21467  0A6E  00E7               	movwf	dwt_xfer3000@cnt+1
 21468                           
 21469                           ;deca_device.c: 260: }
 21470                           ;deca_device.c: 261: switch (mode)
 21471  0A6F  2AEA               	goto	l5529
 21472  0A70                     l5517:	
 21473                           ;deca_device.c: 262: {
 21474                           ;deca_device.c: 263: case DW3000_SPI_AND_OR_8:
 21475                           
 21476                           
 21477                           ;deca_device.c: 264: case DW3000_SPI_AND_OR_16:
 21478                           ;deca_device.c: 265: case DW3000_SPI_AND_OR_32:
 21479                           ;deca_device.c: 266: case DW3000_SPI_WR_BIT:
 21480                           ;deca_device.c: 267: {
 21481                           ;deca_device.c: 268: uint8_t crc8 = 0;
 21482  0A70  01E1               	clrf	dwt_xfer3000@crc8
 21483                           
 21484                           ;deca_device.c: 269: if (pdw3000local->spicrc != DWT_SPI_CRC_MODE_NO)
 21485  0A71  0141               	movlb	1	; select bank1
 21486  0A72  086F               	movf	_pdw3000local^(0+128),w
 21487  0A73  3E14               	addlw	20
 21488  0A74  0086               	movwf	6
 21489  0A75  3002               	movlw	2	; select bank4/5
 21490  0A76  0087               	movwf	7
 21491  0A77  0801               	movf	1,w
 21492  0A78  1903               	btfsc	3,2
 21493  0A79  2AB9               	goto	l5523
 21494                           
 21495                           ;deca_device.c: 270: {
 21496                           ;deca_device.c: 272: crc8 = dwt_generatecrc8(header, cnt, 0);
 21497  0A7A  3064               	movlw	low dwt_xfer3000@header
 21498  0A7B  00F0               	movwf	dwt_generatecrc8@byteArray
 21499  0A7C  3000               	movlw	high dwt_xfer3000@header
 21500  0A7D  00F1               	movwf	dwt_generatecrc8@byteArray+1
 21501  0A7E  0140               	movlb	0	; select bank0
 21502  0A7F  0867               	movf	dwt_xfer3000@cnt+1,w
 21503  0A80  00F3               	movwf	dwt_generatecrc8@len+1
 21504  0A81  0866               	movf	dwt_xfer3000@cnt,w
 21505  0A82  00F2               	movwf	dwt_generatecrc8@len
 21506  0A83  01F4               	clrf	dwt_generatecrc8@crcRemainderInit
 21507  0A84  31A4  2448  3189   	fcall	_dwt_generatecrc8
 21508  0A87  0140               	movlb	0	; select bank0
 21509  0A88  00D5               	movwf	??_dwt_xfer3000
 21510  0A89  0855               	movf	??_dwt_xfer3000,w
 21511  0A8A  00E1               	movwf	dwt_xfer3000@crc8
 21512                           
 21513                           ;deca_device.c: 273: crc8 = dwt_generatecrc8(buffer, length, crc8);
 21514  0A8B  0852               	movf	dwt_xfer3000@buffer+1,w
 21515  0A8C  00F1               	movwf	dwt_generatecrc8@byteArray+1
 21516  0A8D  0851               	movf	dwt_xfer3000@buffer,w
 21517  0A8E  00F0               	movwf	dwt_generatecrc8@byteArray
 21518  0A8F  084E               	movf	dwt_xfer3000@length+1,w
 21519  0A90  00F3               	movwf	dwt_generatecrc8@len+1
 21520  0A91  084D               	movf	dwt_xfer3000@length,w
 21521  0A92  00F2               	movwf	dwt_generatecrc8@len
 21522  0A93  0861               	movf	dwt_xfer3000@crc8,w
 21523  0A94  00D5               	movwf	??_dwt_xfer3000
 21524  0A95  0855               	movf	??_dwt_xfer3000,w
 21525  0A96  00F4               	movwf	dwt_generatecrc8@crcRemainderInit
 21526  0A97  31A4  2448  3189   	fcall	_dwt_generatecrc8
 21527  0A9A  0140               	movlb	0	; select bank0
 21528  0A9B  00D6               	movwf	??_dwt_xfer3000+1
 21529  0A9C  0856               	movf	??_dwt_xfer3000+1,w
 21530  0A9D  00E1               	movwf	dwt_xfer3000@crc8
 21531                           
 21532                           ;deca_device.c: 276: writetospiwithcrc(cnt, header, length, buffer, crc8);
 21533  0A9E  0867               	movf	dwt_xfer3000@cnt+1,w
 21534  0A9F  00A1               	movwf	writetospiwithcrc@headerLength+1
 21535  0AA0  0866               	movf	dwt_xfer3000@cnt,w
 21536  0AA1  00A0               	movwf	writetospiwithcrc@headerLength
 21537  0AA2  3064               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 21538  0AA3  00D5               	movwf	??_dwt_xfer3000
 21539  0AA4  0855               	movf	??_dwt_xfer3000,w
 21540  0AA5  00A2               	movwf	writetospiwithcrc@headerBuffer
 21541  0AA6  0850               	movf	dwt_xfer3000@length+3,w
 21542  0AA7  00A6               	movwf	writetospiwithcrc@bodyLength+3
 21543  0AA8  084F               	movf	dwt_xfer3000@length+2,w
 21544  0AA9  00A5               	movwf	writetospiwithcrc@bodyLength+2
 21545  0AAA  084E               	movf	dwt_xfer3000@length+1,w
 21546  0AAB  00A4               	movwf	writetospiwithcrc@bodyLength+1
 21547  0AAC  084D               	movf	dwt_xfer3000@length,w
 21548  0AAD  00A3               	movwf	writetospiwithcrc@bodyLength
 21549  0AAE  0852               	movf	dwt_xfer3000@buffer+1,w
 21550  0AAF  00A8               	movwf	writetospiwithcrc@bodyBuffer+1
 21551  0AB0  0851               	movf	dwt_xfer3000@buffer,w
 21552  0AB1  00A7               	movwf	writetospiwithcrc@bodyBuffer
 21553  0AB2  0861               	movf	dwt_xfer3000@crc8,w
 21554  0AB3  00D6               	movwf	??_dwt_xfer3000+1
 21555  0AB4  0856               	movf	??_dwt_xfer3000+1,w
 21556  0AB5  00A9               	movwf	writetospiwithcrc@crc8
 21557  0AB6  31A3  2335         	fcall	_writetospiwithcrc
 21558                           
 21559                           ;deca_device.c: 277: }
 21560  0AB8  0008               	return
 21561  0AB9                     l5523:	
 21562                           
 21563                           ;deca_device.c: 278: else
 21564                           ;deca_device.c: 279: {
 21565                           ;deca_device.c: 281: writetospi(cnt, header, length, buffer);
 21566  0AB9  0140               	movlb	0	; select bank0
 21567  0ABA  0867               	movf	dwt_xfer3000@cnt+1,w
 21568  0ABB  00A1               	movwf	writetospi@headerLength+1
 21569  0ABC  0866               	movf	dwt_xfer3000@cnt,w
 21570  0ABD  00A0               	movwf	writetospi@headerLength
 21571  0ABE  3064               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 21572  0ABF  00D5               	movwf	??_dwt_xfer3000
 21573  0AC0  0855               	movf	??_dwt_xfer3000,w
 21574  0AC1  00A2               	movwf	writetospi@headerBuffer
 21575  0AC2  0850               	movf	dwt_xfer3000@length+3,w
 21576  0AC3  00A6               	movwf	writetospi@bodyLength+3
 21577  0AC4  084F               	movf	dwt_xfer3000@length+2,w
 21578  0AC5  00A5               	movwf	writetospi@bodyLength+2
 21579  0AC6  084E               	movf	dwt_xfer3000@length+1,w
 21580  0AC7  00A4               	movwf	writetospi@bodyLength+1
 21581  0AC8  084D               	movf	dwt_xfer3000@length,w
 21582  0AC9  00A3               	movwf	writetospi@bodyLength
 21583  0ACA  0852               	movf	dwt_xfer3000@buffer+1,w
 21584  0ACB  00A8               	movwf	writetospi@bodyBuffer+1
 21585  0ACC  0851               	movf	dwt_xfer3000@buffer,w
 21586  0ACD  00A7               	movwf	writetospi@bodyBuffer
 21587  0ACE  31A1  21D1         	fcall	_writetospi
 21588                           
 21589                           ;deca_device.c: 282: }
 21590                           ;deca_device.c: 283: break;
 21591  0AD0  0008               	return
 21592  0AD1                     l5525:	
 21593                           ;deca_device.c: 284: }
 21594                           ;deca_device.c: 285: case DW3000_SPI_RD_BIT:
 21595                           
 21596                           
 21597                           ;deca_device.c: 286: {
 21598                           ;deca_device.c: 287: readfromspi(cnt, header, length, buffer);
 21599  0AD1  0140               	movlb	0	; select bank0
 21600  0AD2  0867               	movf	dwt_xfer3000@cnt+1,w
 21601  0AD3  00A1               	movwf	readfromspi@headerLength+1
 21602  0AD4  0866               	movf	dwt_xfer3000@cnt,w
 21603  0AD5  00A0               	movwf	readfromspi@headerLength
 21604  0AD6  3064               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 21605  0AD7  00D5               	movwf	??_dwt_xfer3000
 21606  0AD8  0855               	movf	??_dwt_xfer3000,w
 21607  0AD9  00A2               	movwf	readfromspi@headerBuffer
 21608  0ADA  0850               	movf	dwt_xfer3000@length+3,w
 21609  0ADB  00A6               	movwf	readfromspi@readlength+3
 21610  0ADC  084F               	movf	dwt_xfer3000@length+2,w
 21611  0ADD  00A5               	movwf	readfromspi@readlength+2
 21612  0ADE  084E               	movf	dwt_xfer3000@length+1,w
 21613  0ADF  00A4               	movwf	readfromspi@readlength+1
 21614  0AE0  084D               	movf	dwt_xfer3000@length,w
 21615  0AE1  00A3               	movwf	readfromspi@readlength
 21616  0AE2  0852               	movf	dwt_xfer3000@buffer+1,w
 21617  0AE3  00A8               	movwf	readfromspi@readBuffer+1
 21618  0AE4  0851               	movf	dwt_xfer3000@buffer,w
 21619  0AE5  00A7               	movwf	readfromspi@readBuffer
 21620  0AE6  31A1  21B6         	fcall	_readfromspi
 21621                           
 21622                           ;deca_device.c: 309: break;
 21623  0AE8  0008               	return
 21624  0AE9                     l412:	
 21625                           ;deca_device.c: 312: while(1);
 21626                           
 21627                           ;deca_device.c: 310: }
 21628                           ;deca_device.c: 311: default:
 21629                           
 21630  0AE9  2AE9               	goto	l412
 21631  0AEA                     l5529:	
 21632                           ;deca_device.c: 314: }
 21633                           
 21634                           ;deca_device.c: 313: break;
 21635                           
 21636                           
 21637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21638                           ; Switch size 1, requested type "space"
 21639                           ; Number of cases is 2, Range of values is 0 to 128
 21640                           ; switch strategies available:
 21641                           ; Name         Instructions Cycles
 21642                           ; simple_byte            7     4 (average)
 21643                           ; jumptable            260     6 (fixed)
 21644                           ;	Chosen strategy is simple_byte
 21645  0AEA  0140               	movlb	0	; select bank0
 21646  0AEB  0854               	movf	dwt_xfer3000@mode+1,w
 21647  0AEC  3A00               	xorlw	0	; case 0
 21648  0AED  1903               	skipnz
 21649  0AEE  2AF3               	goto	l8143
 21650  0AEF  3A80               	xorlw	128	; case 128
 21651  0AF0  1903               	skipnz
 21652  0AF1  2AF8               	goto	l8145
 21653  0AF2  2AE9               	goto	l412
 21654  0AF3                     l8143:	
 21655                           
 21656                           ; Switch size 1, requested type "space"
 21657                           ; Number of cases is 1, Range of values is 0 to 0
 21658                           ; switch strategies available:
 21659                           ; Name         Instructions Cycles
 21660                           ; simple_byte            4     3 (average)
 21661                           ; direct_byte            8     6 (fixed)
 21662                           ; jumptable            260     6 (fixed)
 21663                           ;	Chosen strategy is simple_byte
 21664  0AF3  0853               	movf	dwt_xfer3000@mode,w
 21665  0AF4  3A00               	xorlw	0	; case 0
 21666  0AF5  1903               	skipnz
 21667  0AF6  2AD1               	goto	l5525
 21668  0AF7  2AE9               	goto	l412
 21669  0AF8                     l8145:	
 21670                           
 21671                           ; Switch size 1, requested type "space"
 21672                           ; Number of cases is 4, Range of values is 0 to 3
 21673                           ; switch strategies available:
 21674                           ; Name         Instructions Cycles
 21675                           ; simple_byte           13     7 (average)
 21676                           ; direct_byte           14     6 (fixed)
 21677                           ; jumptable            260     6 (fixed)
 21678                           ;	Chosen strategy is simple_byte
 21679  0AF8  0853               	movf	dwt_xfer3000@mode,w
 21680  0AF9  3A00               	xorlw	0	; case 0
 21681  0AFA  1903               	skipnz
 21682  0AFB  2A70               	goto	l5517
 21683  0AFC  3A01               	xorlw	1	; case 1
 21684  0AFD  1903               	skipnz
 21685  0AFE  2A70               	goto	l5517
 21686  0AFF  3A03               	xorlw	3	; case 2
 21687  0B00  1903               	skipnz
 21688  0B01  2A70               	goto	l5517
 21689  0B02  3A01               	xorlw	1	; case 3
 21690  0B03  1903               	skipnz
 21691  0B04  2A70               	goto	l5517
 21692  0B05  2AE9               	goto	l412
 21693  0B06  0008               	return
 21694  0B07                     __end_of_dwt_xfer3000:	
 21695                           
 21696                           	psect	text64
 21697  2335                     __ptext64:	
 21698 ;; *************** function _writetospiwithcrc *****************
 21699 ;; Defined at:
 21700 ;;		line 61 in file "deca_spi.c"
 21701 ;; Parameters:    Size  Location     Type
 21702 ;;  headerLength    2    0[BANK0 ] unsigned int 
 21703 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 21704 ;;		 -> dwt_xfer3000@header(2), 
 21705 ;;  bodyLength      4    3[BANK0 ] unsigned long 
 21706 ;;  bodyBuffer      2    7[BANK0 ] PTR const unsigned char 
 21707 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 21708 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 21709 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 21710 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 21711 ;;  crc8            1    9[BANK0 ] unsigned char 
 21712 ;; Auto vars:     Size  Location     Type
 21713 ;;		None
 21714 ;; Return value:  Size  Location     Type
 21715 ;;                  2    0[BANK0 ] int 
 21716 ;; Registers used:
 21717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21718 ;; Tracked objects:
 21719 ;;		On entry : 0/0
 21720 ;;		On exit  : 0/0
 21721 ;;		Unchanged: 0/0
 21722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21723 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21726 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21727 ;;Total ram usage:       10 bytes
 21728 ;; Hardware stack levels used:    1
 21729 ;; Hardware stack levels required when called:    2
 21730 ;; This function calls:
 21731 ;;		_SPI1_WriteBlock
 21732 ;; This function is called by:
 21733 ;;		_dwt_xfer3000
 21734 ;; This function uses a non-reentrant model
 21735 ;;
 21736                           
 21737                           
 21738                           ;psect for function _writetospiwithcrc
 21739  2335                     _writetospiwithcrc:	
 21740                           
 21741                           ;incstack = 0
 21742                           ; Regs used in _writetospiwithcrc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21743                           ;deca_spi.c: 69: do { LATAbits.LATA7 = 0; } while(0);
 21744  2335  0140               	movlb	0	; select bank0
 21745  2336  1396               	bcf	22,7	;volatile
 21746                           
 21747                           ;deca_spi.c: 70: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 21748  2337  0822               	movf	writetospiwithcrc@headerBuffer,w
 21749  2338  00F1               	movwf	SPI1_WriteBlock@block
 21750  2339  3000               	movlw	0
 21751  233A  00F2               	movwf	SPI1_WriteBlock@block+1
 21752  233B  0821               	movf	writetospiwithcrc@headerLength+1,w
 21753  233C  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 21754  233D  0820               	movf	writetospiwithcrc@headerLength,w
 21755  233E  00F3               	movwf	SPI1_WriteBlock@blockSize
 21756  233F  31A1  2167  31A3   	fcall	_SPI1_WriteBlock
 21757                           
 21758                           ;deca_spi.c: 71: SPI1_WriteBlock((uint8_t *)bodyBuffer, bodyLength);
 21759  2342  0140               	movlb	0	; select bank0
 21760  2343  0828               	movf	writetospiwithcrc@bodyBuffer+1,w
 21761  2344  00F2               	movwf	SPI1_WriteBlock@block+1
 21762  2345  0827               	movf	writetospiwithcrc@bodyBuffer,w
 21763  2346  00F1               	movwf	SPI1_WriteBlock@block
 21764  2347  0824               	movf	writetospiwithcrc@bodyLength+1,w
 21765  2348  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 21766  2349  0823               	movf	writetospiwithcrc@bodyLength,w
 21767  234A  00F3               	movwf	SPI1_WriteBlock@blockSize
 21768  234B  31A1  2167  31A3   	fcall	_SPI1_WriteBlock
 21769                           
 21770                           ;deca_spi.c: 72: SPI1_WriteBlock((uint8_t *)&crc8, 1);
 21771  234E  3029               	movlw	low writetospiwithcrc@crc8
 21772  234F  00F1               	movwf	SPI1_WriteBlock@block
 21773  2350  3000               	movlw	high writetospiwithcrc@crc8
 21774  2351  00F2               	movwf	SPI1_WriteBlock@block+1
 21775  2352  3001               	movlw	1
 21776  2353  00F3               	movwf	SPI1_WriteBlock@blockSize
 21777  2354  3000               	movlw	0
 21778  2355  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 21779  2356  31A1  2167         	fcall	_SPI1_WriteBlock
 21780                           
 21781                           ;deca_spi.c: 73: do { LATAbits.LATA7 = 1; } while(0);
 21782  2358  0140               	movlb	0	; select bank0
 21783  2359  1796               	bsf	22,7	;volatile
 21784  235A  0008               	return
 21785  235B                     __end_of_writetospiwithcrc:	
 21786                           ;deca_spi.c: 74: return 0;
 21787                           ;	Return value of _writetospiwithcrc is never used
 21788                           
 21789                           
 21790                           	psect	text65
 21791  21D1                     __ptext65:	
 21792 ;; *************** function _writetospi *****************
 21793 ;; Defined at:
 21794 ;;		line 85 in file "deca_spi.c"
 21795 ;; Parameters:    Size  Location     Type
 21796 ;;  headerLength    2    0[BANK0 ] unsigned int 
 21797 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 21798 ;;		 -> dwt_xfer3000@header(2), 
 21799 ;;  bodyLength      4    3[BANK0 ] unsigned long 
 21800 ;;  bodyBuffer      2    7[BANK0 ] PTR const unsigned char 
 21801 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 21802 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 21803 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 21804 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;		None
 21807 ;; Return value:  Size  Location     Type
 21808 ;;                  2    0[BANK0 ] int 
 21809 ;; Registers used:
 21810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21811 ;; Tracked objects:
 21812 ;;		On entry : 0/0
 21813 ;;		On exit  : 0/0
 21814 ;;		Unchanged: 0/0
 21815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21816 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21819 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21820 ;;Total ram usage:        9 bytes
 21821 ;; Hardware stack levels used:    1
 21822 ;; Hardware stack levels required when called:    2
 21823 ;; This function calls:
 21824 ;;		_SPI1_WriteBlock
 21825 ;; This function is called by:
 21826 ;;		_dwt_xfer3000
 21827 ;; This function uses a non-reentrant model
 21828 ;;
 21829                           
 21830                           
 21831                           ;psect for function _writetospi
 21832  21D1                     _writetospi:	
 21833                           
 21834                           ;incstack = 0
 21835                           ; Regs used in _writetospi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21836                           ;deca_spi.c: 90: do { LATAbits.LATA7 = 0; } while(0);
 21837  21D1  0140               	movlb	0	; select bank0
 21838  21D2  1396               	bcf	22,7	;volatile
 21839                           
 21840                           ;deca_spi.c: 91: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 21841  21D3  0822               	movf	writetospi@headerBuffer,w
 21842  21D4  00F1               	movwf	SPI1_WriteBlock@block
 21843  21D5  3000               	movlw	0
 21844  21D6  00F2               	movwf	SPI1_WriteBlock@block+1
 21845  21D7  0821               	movf	writetospi@headerLength+1,w
 21846  21D8  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 21847  21D9  0820               	movf	writetospi@headerLength,w
 21848  21DA  00F3               	movwf	SPI1_WriteBlock@blockSize
 21849  21DB  31A1  2167  31A1   	fcall	_SPI1_WriteBlock
 21850                           
 21851                           ;deca_spi.c: 92: SPI1_WriteBlock((uint8_t *)bodyBuffer, bodyLength);
 21852  21DE  0140               	movlb	0	; select bank0
 21853  21DF  0828               	movf	writetospi@bodyBuffer+1,w
 21854  21E0  00F2               	movwf	SPI1_WriteBlock@block+1
 21855  21E1  0827               	movf	writetospi@bodyBuffer,w
 21856  21E2  00F1               	movwf	SPI1_WriteBlock@block
 21857  21E3  0824               	movf	writetospi@bodyLength+1,w
 21858  21E4  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 21859  21E5  0823               	movf	writetospi@bodyLength,w
 21860  21E6  00F3               	movwf	SPI1_WriteBlock@blockSize
 21861  21E7  31A1  2167         	fcall	_SPI1_WriteBlock
 21862                           
 21863                           ;deca_spi.c: 93: do { LATAbits.LATA7 = 1; } while(0);
 21864  21E9  0140               	movlb	0	; select bank0
 21865  21EA  1796               	bsf	22,7	;volatile
 21866  21EB  0008               	return
 21867  21EC                     __end_of_writetospi:	
 21868                           ;deca_spi.c: 94: return 0;
 21869                           ;	Return value of _writetospi is never used
 21870                           
 21871                           
 21872                           	psect	text66
 21873  21B6                     __ptext66:	
 21874 ;; *************** function _readfromspi *****************
 21875 ;; Defined at:
 21876 ;;		line 104 in file "deca_spi.c"
 21877 ;; Parameters:    Size  Location     Type
 21878 ;;  headerLength    2    0[BANK0 ] unsigned int 
 21879 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 21880 ;;		 -> dwt_xfer3000@header(2), 
 21881 ;;  readlength      4    3[BANK0 ] unsigned long 
 21882 ;;  readBuffer      2    7[BANK0 ] PTR unsigned char 
 21883 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 21884 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 21885 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 21886 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 21887 ;; Auto vars:     Size  Location     Type
 21888 ;;		None
 21889 ;; Return value:  Size  Location     Type
 21890 ;;                  2    0[BANK0 ] int 
 21891 ;; Registers used:
 21892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21893 ;; Tracked objects:
 21894 ;;		On entry : 0/0
 21895 ;;		On exit  : 0/0
 21896 ;;		Unchanged: 0/0
 21897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21898 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21901 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21902 ;;Total ram usage:        9 bytes
 21903 ;; Hardware stack levels used:    1
 21904 ;; Hardware stack levels required when called:    2
 21905 ;; This function calls:
 21906 ;;		_SPI1_ReadBlock
 21907 ;;		_SPI1_WriteBlock
 21908 ;; This function is called by:
 21909 ;;		_dwt_xfer3000
 21910 ;; This function uses a non-reentrant model
 21911 ;;
 21912                           
 21913                           
 21914                           ;psect for function _readfromspi
 21915  21B6                     _readfromspi:	
 21916                           
 21917                           ;incstack = 0
 21918                           ; Regs used in _readfromspi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21919                           ;deca_spi.c: 109: do { LATAbits.LATA7 = 0; } while(0);
 21920  21B6  0140               	movlb	0	; select bank0
 21921  21B7  1396               	bcf	22,7	;volatile
 21922                           
 21923                           ;deca_spi.c: 111: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 21924  21B8  0822               	movf	readfromspi@headerBuffer,w
 21925  21B9  00F1               	movwf	SPI1_WriteBlock@block
 21926  21BA  3000               	movlw	0
 21927  21BB  00F2               	movwf	SPI1_WriteBlock@block+1
 21928  21BC  0821               	movf	readfromspi@headerLength+1,w
 21929  21BD  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 21930  21BE  0820               	movf	readfromspi@headerLength,w
 21931  21BF  00F3               	movwf	SPI1_WriteBlock@blockSize
 21932  21C0  31A1  2167  31A1   	fcall	_SPI1_WriteBlock
 21933                           
 21934                           ;deca_spi.c: 113: SPI1_ReadBlock(readBuffer, readlength);
 21935  21C3  0140               	movlb	0	; select bank0
 21936  21C4  0828               	movf	readfromspi@readBuffer+1,w
 21937  21C5  00F2               	movwf	SPI1_ReadBlock@block+1
 21938  21C6  0827               	movf	readfromspi@readBuffer,w
 21939  21C7  00F1               	movwf	SPI1_ReadBlock@block
 21940  21C8  0824               	movf	readfromspi@readlength+1,w
 21941  21C9  00F4               	movwf	SPI1_ReadBlock@blockSize+1
 21942  21CA  0823               	movf	readfromspi@readlength,w
 21943  21CB  00F3               	movwf	SPI1_ReadBlock@blockSize
 21944  21CC  31A2  22AF         	fcall	_SPI1_ReadBlock
 21945                           
 21946                           ;deca_spi.c: 115: do { LATAbits.LATA7 = 1; } while(0);
 21947  21CE  0140               	movlb	0	; select bank0
 21948  21CF  1796               	bsf	22,7	;volatile
 21949  21D0  0008               	return
 21950  21D1                     __end_of_readfromspi:	
 21951                           ;deca_spi.c: 117: return 0;
 21952                           ;	Return value of _readfromspi is never used
 21953                           
 21954                           
 21955                           	psect	text67
 21956  2167                     __ptext67:	
 21957 ;; *************** function _SPI1_WriteBlock *****************
 21958 ;; Defined at:
 21959 ;;		line 137 in file "mcc_generated_files/spi1.c"
 21960 ;; Parameters:    Size  Location     Type
 21961 ;;  block           2    1[COMMON] PTR void 
 21962 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), writetospiwithcrc@crc8(1), 
 21963 ;;		 -> dwt_update_nonce_CCM@iv(16), NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), 
 21964 ;;		 -> dwt_modify16bitoffsetreg@buf(4), dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16b
      +itoffsetreg@buffer(2), 
 21965 ;;		 -> dwt_write32bitoffsetreg@buffer(4), dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32
      +bitoffsetreg@buffer(4), 
 21966 ;;		 -> dwt_xfer3000@header(2), 
 21967 ;;  blockSize       2    3[COMMON] unsigned int 
 21968 ;; Auto vars:     Size  Location     Type
 21969 ;;  data            2    5[COMMON] PTR unsigned char 
 21970 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), writetospiwithcrc@crc8(1), 
 21971 ;;		 -> dwt_update_nonce_CCM@iv(16), NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), 
 21972 ;;		 -> dwt_modify16bitoffsetreg@buf(4), dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16b
      +itoffsetreg@buffer(2), 
 21973 ;;		 -> dwt_write32bitoffsetreg@buffer(4), dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32
      +bitoffsetreg@buffer(4), 
 21974 ;;		 -> dwt_xfer3000@header(2), 
 21975 ;; Return value:  Size  Location     Type
 21976 ;;                  1    wreg      void 
 21977 ;; Registers used:
 21978 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21979 ;; Tracked objects:
 21980 ;;		On entry : 0/0
 21981 ;;		On exit  : 0/0
 21982 ;;		Unchanged: 0/0
 21983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21988 ;;Total ram usage:        6 bytes
 21989 ;; Hardware stack levels used:    1
 21990 ;; Hardware stack levels required when called:    1
 21991 ;; This function calls:
 21992 ;;		_SPI1_ExchangeByte
 21993 ;; This function is called by:
 21994 ;;		_writetospiwithcrc
 21995 ;;		_writetospi
 21996 ;;		_readfromspi
 21997 ;; This function uses a non-reentrant model
 21998 ;;
 21999                           
 22000                           
 22001                           ;psect for function _SPI1_WriteBlock
 22002  2167                     _SPI1_WriteBlock:	
 22003                           
 22004                           ;spi1.c: 139: uint8_t *data = block;
 22005                           
 22006                           ;incstack = 0
 22007                           ; Regs used in _SPI1_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22008  2167  0872               	movf	SPI1_WriteBlock@block+1,w
 22009  2168  00F6               	movwf	SPI1_WriteBlock@data+1
 22010  2169  0871               	movf	SPI1_WriteBlock@block,w
 22011  216A  00F5               	movwf	SPI1_WriteBlock@data
 22012  216B                     l5409:	
 22013                           ;spi1.c: 140: while(blockSize--)
 22014                           
 22015  216B  3001               	movlw	1
 22016  216C  02F3               	subwf	SPI1_WriteBlock@blockSize,f
 22017  216D  3000               	movlw	0
 22018  216E  3BF4               	subwfb	SPI1_WriteBlock@blockSize+1,f
 22019  216F  0A73               	incf	SPI1_WriteBlock@blockSize,w
 22020  2170  1903               	btfsc	3,2
 22021  2171  0A74               	incf	SPI1_WriteBlock@blockSize+1,w
 22022  2172  1903               	btfsc	3,2
 22023  2173  0008               	return
 22024                           
 22025                           ;spi1.c: 141: {
 22026                           ;spi1.c: 142: SPI1_ExchangeByte(*data++);
 22027  2174  0875               	movf	SPI1_WriteBlock@data,w
 22028  2175  0086               	movwf	6
 22029  2176  0876               	movf	SPI1_WriteBlock@data+1,w
 22030  2177  0087               	movwf	7
 22031  2178  0801               	movf	1,w
 22032  2179  31A0  20D5  31A1   	fcall	_SPI1_ExchangeByte
 22033  217C  3001               	movlw	1
 22034  217D  07F5               	addwf	SPI1_WriteBlock@data,f
 22035  217E  3000               	movlw	0
 22036  217F  3DF6               	addwfc	SPI1_WriteBlock@data+1,f
 22037  2180  296B               	goto	l5409
 22038  2181                     __end_of_SPI1_WriteBlock:	
 22039                           
 22040                           	psect	text68
 22041  22AF                     __ptext68:	
 22042 ;; *************** function _SPI1_ReadBlock *****************
 22043 ;; Defined at:
 22044 ;;		line 146 in file "mcc_generated_files/spi1.c"
 22045 ;; Parameters:    Size  Location     Type
 22046 ;;  block           2    1[COMMON] PTR void 
 22047 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 22048 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 22049 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 22050 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 22051 ;;  blockSize       2    3[COMMON] unsigned int 
 22052 ;; Auto vars:     Size  Location     Type
 22053 ;;  data            2    6[COMMON] PTR unsigned char 
 22054 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 22055 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 22056 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 22057 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 22058 ;; Return value:  Size  Location     Type
 22059 ;;                  1    wreg      void 
 22060 ;; Registers used:
 22061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22062 ;; Tracked objects:
 22063 ;;		On entry : 0/0
 22064 ;;		On exit  : 0/0
 22065 ;;		Unchanged: 0/0
 22066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22070 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22071 ;;Total ram usage:        7 bytes
 22072 ;; Hardware stack levels used:    1
 22073 ;; Hardware stack levels required when called:    1
 22074 ;; This function calls:
 22075 ;;		_SPI1_ExchangeByte
 22076 ;; This function is called by:
 22077 ;;		_readfromspi
 22078 ;; This function uses a non-reentrant model
 22079 ;;
 22080                           
 22081                           
 22082                           ;psect for function _SPI1_ReadBlock
 22083  22AF                     _SPI1_ReadBlock:	
 22084                           
 22085                           ;spi1.c: 148: uint8_t *data = block;
 22086                           
 22087                           ;incstack = 0
 22088                           ; Regs used in _SPI1_ReadBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22089  22AF  0872               	movf	SPI1_ReadBlock@block+1,w
 22090  22B0  00F7               	movwf	SPI1_ReadBlock@data+1
 22091  22B1  0871               	movf	SPI1_ReadBlock@block,w
 22092  22B2  00F6               	movwf	SPI1_ReadBlock@data
 22093  22B3                     l5417:	
 22094                           ;spi1.c: 149: while(blockSize--)
 22095                           
 22096  22B3  3001               	movlw	1
 22097  22B4  02F3               	subwf	SPI1_ReadBlock@blockSize,f
 22098  22B5  3000               	movlw	0
 22099  22B6  3BF4               	subwfb	SPI1_ReadBlock@blockSize+1,f
 22100  22B7  0A73               	incf	SPI1_ReadBlock@blockSize,w
 22101  22B8  1903               	btfsc	3,2
 22102  22B9  0A74               	incf	SPI1_ReadBlock@blockSize+1,w
 22103  22BA  1903               	btfsc	3,2
 22104  22BB  0008               	return
 22105                           
 22106                           ;spi1.c: 150: {
 22107                           ;spi1.c: 151: *data++ = SPI1_ExchangeByte(0);
 22108  22BC  3000               	movlw	0
 22109  22BD  31A0  20D5  31A2   	fcall	_SPI1_ExchangeByte
 22110  22C0  00F5               	movwf	??_SPI1_ReadBlock
 22111  22C1  0876               	movf	SPI1_ReadBlock@data,w
 22112  22C2  0086               	movwf	6
 22113  22C3  0877               	movf	SPI1_ReadBlock@data+1,w
 22114  22C4  0087               	movwf	7
 22115  22C5  0875               	movf	??_SPI1_ReadBlock,w
 22116  22C6  0081               	movwf	1
 22117  22C7  3001               	movlw	1
 22118  22C8  07F6               	addwf	SPI1_ReadBlock@data,f
 22119  22C9  3000               	movlw	0
 22120  22CA  3DF7               	addwfc	SPI1_ReadBlock@data+1,f
 22121  22CB  2AB3               	goto	l5417
 22122  22CC                     __end_of_SPI1_ReadBlock:	
 22123                           
 22124                           	psect	text69
 22125  20D5                     __ptext69:	
 22126 ;; *************** function _SPI1_ExchangeByte *****************
 22127 ;; Defined at:
 22128 ;;		line 116 in file "mcc_generated_files/spi1.c"
 22129 ;; Parameters:    Size  Location     Type
 22130 ;;  data            1    wreg     unsigned char 
 22131 ;; Auto vars:     Size  Location     Type
 22132 ;;  data            1    0[COMMON] unsigned char 
 22133 ;; Return value:  Size  Location     Type
 22134 ;;                  1    wreg      unsigned char 
 22135 ;; Registers used:
 22136 ;;		wreg
 22137 ;; Tracked objects:
 22138 ;;		On entry : 0/0
 22139 ;;		On exit  : 0/0
 22140 ;;		Unchanged: 0/0
 22141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22146 ;;Total ram usage:        1 bytes
 22147 ;; Hardware stack levels used:    1
 22148 ;; This function calls:
 22149 ;;		Nothing
 22150 ;; This function is called by:
 22151 ;;		_SPI1_WriteBlock
 22152 ;;		_SPI1_ReadBlock
 22153 ;; This function uses a non-reentrant model
 22154 ;;
 22155                           
 22156                           
 22157                           ;psect for function _SPI1_ExchangeByte
 22158  20D5                     _SPI1_ExchangeByte:	
 22159                           
 22160                           ;incstack = 0
 22161                           ; Regs used in _SPI1_ExchangeByte: [wreg]
 22162                           ;SPI1_ExchangeByte@data stored from wreg
 22163  20D5  00F0               	movwf	SPI1_ExchangeByte@data
 22164                           
 22165                           ;spi1.c: 118: SSP1BUF = data;
 22166  20D6  0870               	movf	SPI1_ExchangeByte@data,w
 22167  20D7  0143               	movlb	3	; select bank3
 22168  20D8  008C               	movwf	12	;volatile
 22169  20D9                     l237:	
 22170                           ;spi1.c: 119: while(!PIR3bits.SSP1IF);
 22171                           
 22172  20D9  014E               	movlb	14	; select bank14
 22173  20DA  1C0F               	btfss	15,0	;volatile
 22174  20DB  28D9               	goto	l237
 22175                           
 22176                           ;spi1.c: 120: PIR3bits.SSP1IF = 0;
 22177  20DC  100F               	bcf	15,0	;volatile
 22178                           
 22179                           ;spi1.c: 121: return SSP1BUF;
 22180  20DD  0143               	movlb	3	; select bank3
 22181  20DE  080C               	movf	12,w	;volatile
 22182  20DF  0008               	return
 22183  20E0                     __end_of_SPI1_ExchangeByte:	
 22184                           
 22185                           	psect	text70
 22186  2448                     __ptext70:	
 22187 ;; *************** function _dwt_generatecrc8 *****************
 22188 ;; Defined at:
 22189 ;;		line 639 in file "deca_device.c"
 22190 ;; Parameters:    Size  Location     Type
 22191 ;;  byteArray       2    0[COMMON] PTR const unsigned char 
 22192 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 22193 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 22194 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 22195 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), dwt_xfer300
      +0@header(2), 
 22196 ;;  len             2    2[COMMON] int 
 22197 ;;  crcRemainder    1    4[COMMON] unsigned char 
 22198 ;; Auto vars:     Size  Location     Type
 22199 ;;  byte            2    7[COMMON] int 
 22200 ;;  data            1    6[COMMON] unsigned char 
 22201 ;; Return value:  Size  Location     Type
 22202 ;;                  1    wreg      unsigned char 
 22203 ;; Registers used:
 22204 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22205 ;; Tracked objects:
 22206 ;;		On entry : 0/0
 22207 ;;		On exit  : 0/0
 22208 ;;		Unchanged: 0/0
 22209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22210 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22211 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22214 ;;Total ram usage:        9 bytes
 22215 ;; Hardware stack levels used:    1
 22216 ;; This function calls:
 22217 ;;		Nothing
 22218 ;; This function is called by:
 22219 ;;		_dwt_xfer3000
 22220 ;; This function uses a non-reentrant model
 22221 ;;
 22222                           
 22223                           
 22224                           ;psect for function _dwt_generatecrc8
 22225  2448                     _dwt_generatecrc8:	
 22226                           
 22227                           ;deca_device.c: 641: uint8_t data;
 22228                           ;deca_device.c: 642: int byte;
 22229                           ;deca_device.c: 647: for (byte = 0; byte < len; ++byte)
 22230                           
 22231                           ;incstack = 0
 22232                           ; Regs used in _dwt_generatecrc8: [wreg+fsr1l+fsr1h+status,2+status,0]
 22233  2448  01F7               	clrf	dwt_generatecrc8@byte
 22234  2449  01F8               	clrf	dwt_generatecrc8@byte+1
 22235  244A                     l5437:	
 22236  244A  0878               	movf	dwt_generatecrc8@byte+1,w
 22237  244B  3A80               	xorlw	128
 22238  244C  00F5               	movwf	??_dwt_generatecrc8
 22239  244D  0873               	movf	dwt_generatecrc8@len+1,w
 22240  244E  3A80               	xorlw	128
 22241  244F  0275               	subwf	??_dwt_generatecrc8,w
 22242  2450  1D03               	skipz
 22243  2451  2C54               	goto	u4715
 22244  2452  0872               	movf	dwt_generatecrc8@len,w
 22245  2453  0277               	subwf	dwt_generatecrc8@byte,w
 22246  2454                     u4715:	
 22247  2454  1803               	btfsc	3,0
 22248  2455  2C70               	goto	l5439
 22249                           
 22250                           ;deca_device.c: 648: {
 22251                           ;deca_device.c: 649: data = byteArray[byte] ^ crcRemainderInit;
 22252  2456  0877               	movf	dwt_generatecrc8@byte,w
 22253  2457  0770               	addwf	dwt_generatecrc8@byteArray,w
 22254  2458  0086               	movwf	6
 22255  2459  0878               	movf	dwt_generatecrc8@byte+1,w
 22256  245A  3D71               	addwfc	dwt_generatecrc8@byteArray+1,w
 22257  245B  0087               	movwf	7
 22258  245C  0801               	movf	1,w
 22259  245D  0674               	xorwf	dwt_generatecrc8@crcRemainderInit,w
 22260  245E  00F5               	movwf	??_dwt_generatecrc8
 22261  245F  0875               	movf	??_dwt_generatecrc8,w
 22262  2460  00F6               	movwf	dwt_generatecrc8@data
 22263                           
 22264                           ;deca_device.c: 650: crcRemainderInit = crcTable[data];
 22265  2461  0876               	movf	dwt_generatecrc8@data,w
 22266  2462  3EF0               	addlw	240
 22267  2463  0086               	movwf	6
 22268  2464  0187               	clrf	7
 22269  2465  302E               	movlw	46
 22270  2466  3D87               	addwfc	7,f
 22271  2467  0801               	movf	1,w
 22272  2468  00F5               	movwf	??_dwt_generatecrc8
 22273  2469  0875               	movf	??_dwt_generatecrc8,w
 22274  246A  00F4               	movwf	dwt_generatecrc8@crcRemainderInit
 22275  246B  3001               	movlw	1
 22276  246C  07F7               	addwf	dwt_generatecrc8@byte,f
 22277  246D  3000               	movlw	0
 22278  246E  3DF8               	addwfc	dwt_generatecrc8@byte+1,f
 22279  246F  2C4A               	goto	l5437
 22280  2470                     l5439:	
 22281                           
 22282                           ;deca_device.c: 651: }
 22283                           ;deca_device.c: 656: return(crcRemainderInit);
 22284  2470  0874               	movf	dwt_generatecrc8@crcRemainderInit,w
 22285  2471  0008               	return
 22286  2472                     __end_of_dwt_generatecrc8:	
 22287                           
 22288                           	psect	text71
 22289  1003                     __ptext71:	
 22290 ;; *************** function __fassert *****************
 22291 ;; Defined at:
 22292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\assert.c"
 22293 ;; Parameters:    Size  Location     Type
 22294 ;;  line            2   33[BANK0 ] int 
 22295 ;;  file            2   35[BANK0 ] PTR const unsigned char 
 22296 ;;		 -> STR_16(14), STR_14(14), STR_12(14), STR_10(14), 
 22297 ;;		 -> STR_8(14), STR_6(14), 
 22298 ;;  exp             2   37[BANK0 ] PTR const unsigned char 
 22299 ;;		 -> STR_17(2), STR_15(26), STR_13(150), STR_11(16), 
 22300 ;;		 -> STR_9(19), STR_7(17), 
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;		None
 22303 ;; Return value:  Size  Location     Type
 22304 ;;                  1    wreg      void 
 22305 ;; Registers used:
 22306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22307 ;; Tracked objects:
 22308 ;;		On entry : 0/0
 22309 ;;		On exit  : 0/0
 22310 ;;		Unchanged: 0/0
 22311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22312 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22315 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22316 ;;Total ram usage:        6 bytes
 22317 ;; Hardware stack levels used:    1
 22318 ;; Hardware stack levels required when called:    4
 22319 ;; This function calls:
 22320 ;;		_printf
 22321 ;; This function is called by:
 22322 ;;		_dwt_xfer3000
 22323 ;;		_dwt_readaccdata
 22324 ;; This function uses a non-reentrant model
 22325 ;;
 22326                           
 22327                           
 22328                           ;psect for function __fassert
 22329  1003                     __fassert:	
 22330                           
 22331                           ;incstack = 0
 22332                           ; Regs used in __fassert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22333  1003  3000               	movlw	low (STR_31| (0+32768))
 22334  1004  0140               	movlb	0	; select bank0
 22335  1005  00B4               	movwf	printf@f
 22336  1006  30A8               	movlw	high (STR_31| (0+32768))
 22337  1007  00B5               	movwf	printf@f+1
 22338  1008  0844               	movf	__fassert@file+1,w
 22339  1009  00B7               	movwf	(low ((?_printf| 0+2))+1)
 22340  100A  0843               	movf	__fassert@file,w
 22341  100B  00B6               	movwf	low ((?_printf| 0+2))
 22342  100C  0842               	movf	__fassert@line+1,w
 22343  100D  00B9               	movwf	?_printf+5
 22344  100E  0841               	movf	__fassert@line,w
 22345  100F  00B8               	movwf	?_printf+4
 22346  1010  0846               	movf	__fassert@exp+1,w
 22347  1011  00BB               	movwf	(low ((?_printf| 0+6))+1)
 22348  1012  0845               	movf	__fassert@exp,w
 22349  1013  00BA               	movwf	low ((?_printf| 0+6))
 22350  1014  31A1  2151         	fcall	_printf
 22351  1016  3190  2803         	ljmp	$	;# 
 22352  1018  0008               	return
 22353  1019                     __end_of__fassert:	
 22354                           
 22355                           	psect	text72
 22356  2151                     __ptext72:	
 22357 ;; *************** function _printf *****************
 22358 ;; Defined at:
 22359 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 22360 ;; Parameters:    Size  Location     Type
 22361 ;;  f               2   20[BANK0 ] PTR const unsigned char 
 22362 ;;		 -> STR_31(36), STR_28(18), STR_27(29), 
 22363 ;; Auto vars:     Size  Location     Type
 22364 ;;  pb              3   30[BANK0 ] struct __prbuf
 22365 ;;  ap              1   29[BANK0 ] PTR void [1]
 22366 ;;		 -> ?_sprintf(2), ?_printf(2), 
 22367 ;; Return value:  Size  Location     Type
 22368 ;;                  2   20[BANK0 ] int 
 22369 ;; Registers used:
 22370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22371 ;; Tracked objects:
 22372 ;;		On entry : 0/0
 22373 ;;		On exit  : 0/0
 22374 ;;		Unchanged: 0/0
 22375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22376 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22379 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22380 ;;Total ram usage:       13 bytes
 22381 ;; Hardware stack levels used:    1
 22382 ;; Hardware stack levels required when called:    3
 22383 ;; This function calls:
 22384 ;;		__doprnt
 22385 ;; This function is called by:
 22386 ;;		_pmic_status_read
 22387 ;;		__fassert
 22388 ;; This function uses a non-reentrant model
 22389 ;;
 22390                           
 22391                           
 22392                           ;psect for function _printf
 22393  2151                     _printf:	
 22394                           
 22395                           ;incstack = 0
 22396                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22397  2151  0140               	movlb	0	; select bank0
 22398  2152  01BE               	clrf	printf@pb
 22399  2153  3099               	movlw	low _putch
 22400  2154  00BF               	movwf	low ((printf@pb| 0+1))
 22401  2155  3020               	movlw	high _putch
 22402  2156  00C0               	movwf	(low ((printf@pb| 0+1))+1)
 22403  2157  3036               	movlw	(low ((?_printf| 0+2)))& (0+255)
 22404  2158  00BC               	movwf	??_printf
 22405  2159  083C               	movf	??_printf,w
 22406  215A  00BD               	movwf	printf@ap
 22407                           
 22408                           ;	Return value of _printf is never used
 22409  215B  0835               	movf	printf@f+1,w
 22410  215C  00A1               	movwf	__doprnt@f+1
 22411  215D  0834               	movf	printf@f,w
 22412  215E  00A0               	movwf	__doprnt@f
 22413  215F  303D               	movlw	(low (printf@ap| 0))& (0+255)
 22414  2160  00BC               	movwf	??_printf
 22415  2161  083C               	movf	??_printf,w
 22416  2162  00A2               	movwf	__doprnt@ap
 22417  2163  303E               	movlw	(low (printf@pb| 0))& (0+255)
 22418  2164  318C  24BE         	fcall	__doprnt
 22419  2166  0008               	return
 22420  2167                     __end_of_printf:	
 22421                           
 22422                           	psect	text73
 22423  0CBE                     __ptext73:	
 22424 ;; *************** function __doprnt *****************
 22425 ;; Defined at:
 22426 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 22427 ;; Parameters:    Size  Location     Type
 22428 ;;  pb              1    wreg     PTR struct __prbuf
 22429 ;;		 -> sprintf@pb(3), printf@pb(3), 
 22430 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 22431 ;;		 -> STR_31(36), STR_28(18), STR_27(29), STR_5(31), 
 22432 ;;		 -> STR_4(14), STR_3(10), STR_2(10), 
 22433 ;;  ap              1    2[BANK0 ] PTR PTR void 
 22434 ;;		 -> sprintf@ap(1), printf@ap(1), 
 22435 ;; Auto vars:     Size  Location     Type
 22436 ;;  pb              1   19[BANK0 ] PTR struct __prbuf
 22437 ;;		 -> sprintf@pb(3), printf@pb(3), 
 22438 ;;  idx             1    7[BANK0 ] unsigned char 
 22439 ;;  tmpval          4    0        struct .
 22440 ;;  width           2   16[BANK0 ] int 
 22441 ;;  val             2   13[BANK0 ] unsigned int 
 22442 ;;  cp              2   11[BANK0 ] PTR const unsigned char 
 22443 ;;		 -> ?_sprintf(2), ?_printf(2), STR_29(7), NULL(0), 
 22444 ;;		 -> STR_17(2), STR_16(14), STR_15(26), STR_14(14), 
 22445 ;;		 -> STR_13(150), STR_12(14), STR_11(16), STR_10(14), 
 22446 ;;		 -> STR_9(19), STR_8(14), STR_7(17), STR_6(14), 
 22447 ;;		 -> print_uint64_t@print_data(50), print_uint32_t@print_data(20), print_uint16_t@print_data(20), print_uint8_t@print
      +_data(20), 
 22448 ;;  len             2    9[BANK0 ] unsigned int 
 22449 ;;  c               1   18[BANK0 ] char 
 22450 ;;  flag            1   15[BANK0 ] unsigned char 
 22451 ;;  prec            1    8[BANK0 ] char 
 22452 ;; Return value:  Size  Location     Type
 22453 ;;                  2    0[BANK0 ] int 
 22454 ;; Registers used:
 22455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22456 ;; Tracked objects:
 22457 ;;		On entry : 0/0
 22458 ;;		On exit  : 0/0
 22459 ;;		Unchanged: 0/0
 22460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22461 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22462 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22463 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22464 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22465 ;;Total ram usage:       20 bytes
 22466 ;; Hardware stack levels used:    1
 22467 ;; Hardware stack levels required when called:    2
 22468 ;; This function calls:
 22469 ;;		Absolute function
 22470 ;;		___lwdiv
 22471 ;;		___lwmod
 22472 ;;		___wmul
 22473 ;;		_isdigit
 22474 ;;		_putch
 22475 ;; This function is called by:
 22476 ;;		_printf
 22477 ;; This function uses a non-reentrant model
 22478 ;;
 22479                           
 22480                           
 22481                           ;psect for function __doprnt
 22482  0CBE                     __doprnt:	
 22483                           
 22484                           ;incstack = 0
 22485                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22486                           ;__doprnt@pb stored from wreg
 22487  0CBE  0140               	movlb	0	; select bank0
 22488  0CBF  00B3               	movwf	__doprnt@pb
 22489  0CC0                     l5397:	
 22490                           ;doprnt.c: 499: signed char c;
 22491                           ;doprnt.c: 501: int width;
 22492                           ;doprnt.c: 506: signed char prec;
 22493                           ;doprnt.c: 508: unsigned char flag;
 22494                           ;doprnt.c: 523: union {
 22495                           ;doprnt.c: 524: unsigned long vd;
 22496                           ;doprnt.c: 525: double integ;
 22497                           ;doprnt.c: 526: } tmpval;
 22498                           ;doprnt.c: 528: unsigned int val;
 22499                           ;doprnt.c: 529: unsigned len;
 22500                           ;doprnt.c: 530: const char * cp;
 22501                           ;doprnt.c: 536: while(c = *f++) {
 22502                           
 22503  0CC0  0140               	movlb	0	; select bank0
 22504  0CC1  0821               	movf	__doprnt@f+1,w
 22505  0CC2  00A4               	movwf	??__doprnt+1
 22506  0CC3  0820               	movf	__doprnt@f,w
 22507  0CC4  00A3               	movwf	??__doprnt
 22508  0CC5  0AA0               	incf	__doprnt@f,f
 22509  0CC6  1903               	skipnz
 22510  0CC7  0AA1               	incf	__doprnt@f+1,f
 22511  0CC8  0823               	movf	??__doprnt,w
 22512  0CC9  0084               	movwf	4
 22513  0CCA  0824               	movf	??__doprnt+1,w
 22514  0CCB  0085               	movwf	5
 22515  0CCC  0800               	movf	0,w	;code access
 22516  0CCD  00A5               	movwf	??__doprnt+2
 22517  0CCE  0825               	movf	??__doprnt+2,w
 22518  0CCF  00B2               	movwf	__doprnt@c
 22519  0CD0  0832               	movf	__doprnt@c,w
 22520  0CD1  1903               	btfsc	3,2
 22521  0CD2  2FFC               	goto	l5399
 22522                           
 22523                           ;doprnt.c: 538: if(c != '%')
 22524  0CD3  3025               	movlw	37
 22525  0CD4  0632               	xorwf	__doprnt@c,w
 22526  0CD5  1903               	btfsc	3,2
 22527  0CD6  2CFE               	goto	l5219
 22528                           
 22529                           ;doprnt.c: 540: {
 22530                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 22531  0CD7  0A33               	incf	__doprnt@pb,w
 22532  0CD8  0086               	movwf	6
 22533  0CD9  0187               	clrf	7
 22534  0CDA  0016               	moviw fsr1++
 22535  0CDB  0401               	iorwf	1,w
 22536  0CDC  1903               	btfsc	3,2
 22537  0CDD  2CEB               	goto	l5215
 22538  0CDE  0832               	movf	__doprnt@c,w
 22539  0CDF  00A3               	movwf	??__doprnt
 22540  0CE0  0823               	movf	??__doprnt,w
 22541  0CE1  00F1               	movwf	putch@txData
 22542  0CE2  0A33               	incf	__doprnt@pb,w
 22543  0CE3  0086               	movwf	6
 22544  0CE4  0187               	clrf	7
 22545  0CE5  3F41               	moviw [1]fsr1
 22546  0CE6  008A               	movwf	10
 22547  0CE7  3F40               	moviw [0]fsr1
 22548  0CE8  000A               	callw
 22549  0CE9  318C               	pagesel	$
 22550  0CEA  2CC0               	goto	l5397
 22551  0CEB                     l5215:	
 22552  0CEB  0140               	movlb	0	; select bank0
 22553  0CEC  0832               	movf	__doprnt@c,w
 22554  0CED  00A3               	movwf	??__doprnt
 22555  0CEE  0833               	movf	__doprnt@pb,w
 22556  0CEF  0086               	movwf	6
 22557  0CF0  0187               	clrf	7
 22558  0CF1  0801               	movf	1,w
 22559  0CF2  0086               	movwf	6
 22560  0CF3  0187               	clrf	7
 22561  0CF4  0823               	movf	??__doprnt,w
 22562  0CF5  0081               	movwf	1
 22563  0CF6  3001               	movlw	1
 22564  0CF7  00A3               	movwf	??__doprnt
 22565  0CF8  0833               	movf	__doprnt@pb,w
 22566  0CF9  0086               	movwf	6
 22567  0CFA  0187               	clrf	7
 22568  0CFB  0823               	movf	??__doprnt,w
 22569  0CFC  0781               	addwf	1,f
 22570                           
 22571                           ;doprnt.c: 542: continue;
 22572  0CFD  2CC0               	goto	l5397
 22573  0CFE                     l5219:	
 22574                           
 22575                           ;doprnt.c: 543: }
 22576                           ;doprnt.c: 546: width = 0;
 22577  0CFE  01B0               	clrf	__doprnt@width
 22578  0CFF  01B1               	clrf	__doprnt@width+1
 22579                           
 22580                           ;doprnt.c: 548: flag = 0;
 22581  0D00  01AF               	clrf	__doprnt@flag
 22582                           
 22583                           ;doprnt.c: 551: switch(*f) {
 22584                           
 22585                           ;doprnt.c: 550: for(;;) {
 22586  0D01  2D07               	goto	l5225
 22587  0D02                     l1610:	
 22588                           ;doprnt.c: 579: case '0':
 22589                           
 22590                           
 22591                           ;doprnt.c: 580: flag |= 0x04;
 22592  0D02  152F               	bsf	__doprnt@flag,2
 22593                           
 22594                           ;doprnt.c: 581: f++;
 22595  0D03  3001               	movlw	1
 22596  0D04  07A0               	addwf	__doprnt@f,f
 22597  0D05  3000               	movlw	0
 22598  0D06  3DA1               	addwfc	__doprnt@f+1,f
 22599  0D07                     l5225:	
 22600                           ;doprnt.c: 584: }
 22601                           
 22602                           ;doprnt.c: 582: continue;
 22603                           
 22604  0D07  0820               	movf	__doprnt@f,w
 22605  0D08  0084               	movwf	4
 22606  0D09  0821               	movf	__doprnt@f+1,w
 22607  0D0A  0085               	movwf	5
 22608  0D0B  0800               	movf	0,w	;code access
 22609                           
 22610                           ; Switch size 1, requested type "space"
 22611                           ; Number of cases is 1, Range of values is 48 to 48
 22612                           ; switch strategies available:
 22613                           ; Name         Instructions Cycles
 22614                           ; simple_byte            4     3 (average)
 22615                           ; direct_byte           11     9 (fixed)
 22616                           ; jumptable            263     9 (fixed)
 22617                           ;	Chosen strategy is simple_byte
 22618  0D0C  3A30               	xorlw	48	; case 48
 22619  0D0D  1903               	skipnz
 22620  0D0E  2D02               	goto	l1610
 22621  0D0F  2D10               	goto	l5227
 22622  0D10                     l5227:	
 22623                           ;doprnt.c: 586: }
 22624                           
 22625                           ;doprnt.c: 585: break;
 22626                           
 22627                           
 22628                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 22629  0D10  0820               	movf	__doprnt@f,w
 22630  0D11  0084               	movwf	4
 22631  0D12  0821               	movf	__doprnt@f+1,w
 22632  0D13  0085               	movwf	5
 22633  0D14  0800               	movf	0,w	;code access
 22634  0D15  31A1  2110  318C   	fcall	_isdigit
 22635  0D18  1C03               	btfss	3,0
 22636  0D19  2DF4               	goto	l5283
 22637                           
 22638                           ;doprnt.c: 598: width = 0;
 22639  0D1A  0140               	movlb	0	; select bank0
 22640  0D1B  01B0               	clrf	__doprnt@width
 22641  0D1C  01B1               	clrf	__doprnt@width+1
 22642  0D1D                     l5231:	
 22643                           ;doprnt.c: 599: do {
 22644                           
 22645                           
 22646                           ;doprnt.c: 600: width *= 10;
 22647  0D1D  300A               	movlw	10
 22648  0D1E  00F0               	movwf	___wmul@multiplier
 22649  0D1F  3000               	movlw	0
 22650  0D20  00F1               	movwf	___wmul@multiplier+1
 22651  0D21  0140               	movlb	0	; select bank0
 22652  0D22  0831               	movf	__doprnt@width+1,w
 22653  0D23  00F3               	movwf	___wmul@multiplicand+1
 22654  0D24  0830               	movf	__doprnt@width,w
 22655  0D25  00F2               	movwf	___wmul@multiplicand
 22656  0D26  31A1  219B  318C   	fcall	___wmul
 22657  0D29  0871               	movf	?___wmul+1,w
 22658  0D2A  0140               	movlb	0	; select bank0
 22659  0D2B  00B1               	movwf	__doprnt@width+1
 22660  0D2C  0870               	movf	?___wmul,w
 22661  0D2D  00B0               	movwf	__doprnt@width
 22662                           
 22663                           ;doprnt.c: 601: width += *f++ - '0';
 22664  0D2E  0820               	movf	__doprnt@f,w
 22665  0D2F  0084               	movwf	4
 22666  0D30  0821               	movf	__doprnt@f+1,w
 22667  0D31  0085               	movwf	5
 22668  0D32  0800               	movf	0,w	;code access
 22669  0D33  3ED0               	addlw	208
 22670  0D34  00A3               	movwf	??__doprnt
 22671  0D35  30FF               	movlw	255
 22672  0D36  1803               	skipnc
 22673  0D37  3000               	movlw	0
 22674  0D38  00A4               	movwf	??__doprnt+1
 22675  0D39  0823               	movf	??__doprnt,w
 22676  0D3A  07B0               	addwf	__doprnt@width,f
 22677  0D3B  0824               	movf	??__doprnt+1,w
 22678  0D3C  3DB1               	addwfc	__doprnt@width+1,f
 22679  0D3D  3001               	movlw	1
 22680  0D3E  07A0               	addwf	__doprnt@f,f
 22681  0D3F  3000               	movlw	0
 22682  0D40  3DA1               	addwfc	__doprnt@f+1,f
 22683                           
 22684                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 22685  0D41  0820               	movf	__doprnt@f,w
 22686  0D42  0084               	movwf	4
 22687  0D43  0821               	movf	__doprnt@f+1,w
 22688  0D44  0085               	movwf	5
 22689  0D45  0800               	movf	0,w	;code access
 22690  0D46  31A1  2110  318C   	fcall	_isdigit
 22691  0D49  1C03               	btfss	3,0
 22692  0D4A  2DF4               	goto	l5283
 22693  0D4B  2D1D               	goto	l5231
 22694  0D4C                     l1624:	
 22695                           ;doprnt.c: 712: case 'X':
 22696                           
 22697                           ;doprnt.c: 698: case 'i':
 22698                           ;doprnt.c: 699: break;
 22699                           
 22700                           ;doprnt.c: 697: case 'd':
 22701                           
 22702                           ;doprnt.c: 638: goto alldone;
 22703                           
 22704                           ;doprnt.c: 637: case 0:
 22705                           
 22706                           ;doprnt.c: 608: }
 22707                           ;doprnt.c: 635: switch(c = *f++) {
 22708                           
 22709                           
 22710                           ;doprnt.c: 718: case 'x':
 22711                           ;doprnt.c: 721: flag |= 0x80;
 22712  0D4C  0140               	movlb	0	; select bank0
 22713  0D4D  17AF               	bsf	__doprnt@flag,7
 22714                           
 22715                           ;doprnt.c: 723: break;
 22716  0D4E  2E15               	goto	l1622
 22717  0D4F                     l5239:	
 22718                           ;doprnt.c: 728: case 's':
 22719                           
 22720                           
 22721                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 22722  0D4F  0822               	movf	__doprnt@ap,w
 22723  0D50  0086               	movwf	6
 22724  0D51  0187               	clrf	7
 22725  0D52  0801               	movf	1,w
 22726  0D53  0084               	movwf	4
 22727  0D54  0185               	clrf	5
 22728  0D55  3002               	movlw	2
 22729  0D56  0781               	addwf	1,f
 22730  0D57  3F00               	moviw [0]fsr0
 22731  0D58  00AB               	movwf	__doprnt@cp
 22732  0D59  3F01               	moviw [1]fsr0
 22733  0D5A  00AC               	movwf	__doprnt@cp+1
 22734                           
 22735                           ;doprnt.c: 740: if(!cp)
 22736  0D5B  082B               	movf	__doprnt@cp,w
 22737  0D5C  042C               	iorwf	__doprnt@cp+1,w
 22738  0D5D  1D03               	btfss	3,2
 22739  0D5E  2D63               	goto	l5245
 22740                           
 22741                           ;doprnt.c: 741: cp = "(null)";
 22742  0D5F  30A7               	movlw	low (STR_29| (0+32768))
 22743  0D60  00AB               	movwf	__doprnt@cp
 22744  0D61  30A9               	movlw	high (STR_29| (0+32768))
 22745  0D62  00AC               	movwf	__doprnt@cp+1
 22746  0D63                     l5245:	
 22747                           
 22748                           ;doprnt.c: 745: len = 0;
 22749  0D63  01A9               	clrf	__doprnt@len
 22750  0D64  01AA               	clrf	__doprnt@len+1
 22751  0D65                     l5249:	
 22752                           ;doprnt.c: 746: while(cp[len])
 22753                           
 22754  0D65  082B               	movf	__doprnt@cp,w
 22755  0D66  0729               	addwf	__doprnt@len,w
 22756  0D67  0084               	movwf	4
 22757  0D68  082C               	movf	__doprnt@cp+1,w
 22758  0D69  3D2A               	addwfc	__doprnt@len+1,w
 22759  0D6A  0085               	movwf	5
 22760  0D6B  0012               	moviw fsr0++
 22761  0D6C  1903               	btfsc	3,2
 22762  0D6D  2D73               	goto	l5251
 22763                           
 22764                           ;doprnt.c: 747: len++;
 22765  0D6E  3001               	movlw	1
 22766  0D6F  07A9               	addwf	__doprnt@len,f
 22767  0D70  3000               	movlw	0
 22768  0D71  3DAA               	addwfc	__doprnt@len+1,f
 22769  0D72  2D65               	goto	l5249
 22770  0D73                     l5251:	
 22771                           
 22772                           ;doprnt.c: 757: if(width > len)
 22773  0D73  0831               	movf	__doprnt@width+1,w
 22774  0D74  022A               	subwf	__doprnt@len+1,w
 22775  0D75  1D03               	skipz
 22776  0D76  2D79               	goto	u4395
 22777  0D77  0830               	movf	__doprnt@width,w
 22778  0D78  0229               	subwf	__doprnt@len,w
 22779  0D79                     u4395:	
 22780  0D79  1803               	skipnc
 22781  0D7A  2D80               	goto	l5255
 22782                           
 22783                           ;doprnt.c: 758: width -= len;
 22784  0D7B  0829               	movf	__doprnt@len,w
 22785  0D7C  02B0               	subwf	__doprnt@width,f
 22786  0D7D  082A               	movf	__doprnt@len+1,w
 22787  0D7E  3BB1               	subwfb	__doprnt@width+1,f
 22788  0D7F  2D82               	goto	l5265
 22789  0D80                     l5255:	
 22790                           
 22791                           ;doprnt.c: 759: else
 22792                           ;doprnt.c: 760: width = 0;
 22793  0D80  01B0               	clrf	__doprnt@width
 22794  0D81  01B1               	clrf	__doprnt@width+1
 22795  0D82                     l5265:	
 22796                           ;doprnt.c: 764: while(width--)
 22797                           
 22798  0D82  30FF               	movlw	255
 22799  0D83  0140               	movlb	0	; select bank0
 22800  0D84  07B0               	addwf	__doprnt@width,f
 22801  0D85  30FF               	movlw	255
 22802  0D86  3DB1               	addwfc	__doprnt@width+1,f
 22803  0D87  0A30               	incf	__doprnt@width,w
 22804  0D88  1903               	btfsc	3,2
 22805  0D89  0A31               	incf	__doprnt@width+1,w
 22806  0D8A  1903               	btfsc	3,2
 22807  0D8B  2DE9               	goto	l5279
 22808                           
 22809                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 22810  0D8C  0A33               	incf	__doprnt@pb,w
 22811  0D8D  0086               	movwf	6
 22812  0D8E  0187               	clrf	7
 22813  0D8F  0016               	moviw fsr1++
 22814  0D90  0401               	iorwf	1,w
 22815  0D91  1903               	btfsc	3,2
 22816  0D92  2DA0               	goto	l5261
 22817  0D93  3020               	movlw	32
 22818  0D94  00A3               	movwf	??__doprnt
 22819  0D95  0823               	movf	??__doprnt,w
 22820  0D96  00F1               	movwf	putch@txData
 22821  0D97  0A33               	incf	__doprnt@pb,w
 22822  0D98  0086               	movwf	6
 22823  0D99  0187               	clrf	7
 22824  0D9A  3F41               	moviw [1]fsr1
 22825  0D9B  008A               	movwf	10
 22826  0D9C  3F40               	moviw [0]fsr1
 22827  0D9D  000A               	callw
 22828  0D9E  318C               	pagesel	$
 22829  0D9F  2D82               	goto	l5265
 22830  0DA0                     l5261:	
 22831  0DA0  3020               	movlw	32
 22832  0DA1  0140               	movlb	0	; select bank0
 22833  0DA2  00A3               	movwf	??__doprnt
 22834  0DA3  0833               	movf	__doprnt@pb,w
 22835  0DA4  0086               	movwf	6
 22836  0DA5  0187               	clrf	7
 22837  0DA6  0801               	movf	1,w
 22838  0DA7  0086               	movwf	6
 22839  0DA8  0187               	clrf	7
 22840  0DA9  0823               	movf	??__doprnt,w
 22841  0DAA  0081               	movwf	1
 22842  0DAB  3001               	movlw	1
 22843  0DAC  00A3               	movwf	??__doprnt
 22844  0DAD  0833               	movf	__doprnt@pb,w
 22845  0DAE  0086               	movwf	6
 22846  0DAF  0187               	clrf	7
 22847  0DB0  0823               	movf	??__doprnt,w
 22848  0DB1  0781               	addwf	1,f
 22849  0DB2  2D82               	goto	l5265
 22850  0DB3                     l5267:	
 22851                           ;doprnt.c: 767: while(len--)
 22852                           
 22853                           
 22854                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 22855  0DB3  0A33               	incf	__doprnt@pb,w
 22856  0DB4  0086               	movwf	6
 22857  0DB5  0187               	clrf	7
 22858  0DB6  0016               	moviw fsr1++
 22859  0DB7  0401               	iorwf	1,w
 22860  0DB8  1903               	btfsc	3,2
 22861  0DB9  2DD0               	goto	l5273
 22862  0DBA  082B               	movf	__doprnt@cp,w
 22863  0DBB  0084               	movwf	4
 22864  0DBC  082C               	movf	__doprnt@cp+1,w
 22865  0DBD  0085               	movwf	5
 22866  0DBE  0800               	movf	0,w	;code access
 22867  0DBF  00A3               	movwf	??__doprnt
 22868  0DC0  0823               	movf	??__doprnt,w
 22869  0DC1  00F1               	movwf	putch@txData
 22870  0DC2  0A33               	incf	__doprnt@pb,w
 22871  0DC3  0086               	movwf	6
 22872  0DC4  0187               	clrf	7
 22873  0DC5  3F41               	moviw [1]fsr1
 22874  0DC6  008A               	movwf	10
 22875  0DC7  3F40               	moviw [0]fsr1
 22876  0DC8  000A               	callw
 22877  0DC9  318C               	pagesel	$
 22878  0DCA  3001               	movlw	1
 22879  0DCB  0140               	movlb	0	; select bank0
 22880  0DCC  07AB               	addwf	__doprnt@cp,f
 22881  0DCD  3000               	movlw	0
 22882  0DCE  3DAC               	addwfc	__doprnt@cp+1,f
 22883  0DCF  2DE9               	goto	l5279
 22884  0DD0                     l5273:	
 22885  0DD0  082B               	movf	__doprnt@cp,w
 22886  0DD1  0084               	movwf	4
 22887  0DD2  082C               	movf	__doprnt@cp+1,w
 22888  0DD3  0085               	movwf	5
 22889  0DD4  0800               	movf	0,w	;code access
 22890  0DD5  00A3               	movwf	??__doprnt
 22891  0DD6  0833               	movf	__doprnt@pb,w
 22892  0DD7  0086               	movwf	6
 22893  0DD8  0187               	clrf	7
 22894  0DD9  0801               	movf	1,w
 22895  0DDA  0086               	movwf	6
 22896  0DDB  0187               	clrf	7
 22897  0DDC  0823               	movf	??__doprnt,w
 22898  0DDD  0081               	movwf	1
 22899  0DDE  3001               	movlw	1
 22900  0DDF  07AB               	addwf	__doprnt@cp,f
 22901  0DE0  3000               	movlw	0
 22902  0DE1  3DAC               	addwfc	__doprnt@cp+1,f
 22903  0DE2  3001               	movlw	1
 22904  0DE3  00A3               	movwf	??__doprnt
 22905  0DE4  0833               	movf	__doprnt@pb,w
 22906  0DE5  0086               	movwf	6
 22907  0DE6  0187               	clrf	7
 22908  0DE7  0823               	movf	??__doprnt,w
 22909  0DE8  0781               	addwf	1,f
 22910  0DE9                     l5279:	
 22911  0DE9  3001               	movlw	1
 22912  0DEA  02A9               	subwf	__doprnt@len,f
 22913  0DEB  3000               	movlw	0
 22914  0DEC  3BAA               	subwfb	__doprnt@len+1,f
 22915  0DED  0A29               	incf	__doprnt@len,w
 22916  0DEE  1D03               	skipz
 22917  0DEF  2DB3               	goto	l5267
 22918  0DF0  0A2A               	incf	__doprnt@len+1,w
 22919  0DF1  1903               	btfsc	3,2
 22920  0DF2  2CC0               	goto	l5397
 22921  0DF3  2DB3               	goto	l5267
 22922  0DF4                     l5283:	
 22923                           ;doprnt.c: 822: }
 22924                           
 22925                           ;doprnt.c: 813: continue;
 22926                           
 22927                           ;doprnt.c: 802: default:
 22928                           
 22929                           ;doprnt.c: 774: continue;
 22930                           
 22931  0DF4  0140               	movlb	0	; select bank0
 22932  0DF5  0821               	movf	__doprnt@f+1,w
 22933  0DF6  00A4               	movwf	??__doprnt+1
 22934  0DF7  0820               	movf	__doprnt@f,w
 22935  0DF8  00A3               	movwf	??__doprnt
 22936  0DF9  0AA0               	incf	__doprnt@f,f
 22937  0DFA  1903               	skipnz
 22938  0DFB  0AA1               	incf	__doprnt@f+1,f
 22939  0DFC  0823               	movf	??__doprnt,w
 22940  0DFD  0084               	movwf	4
 22941  0DFE  0824               	movf	??__doprnt+1,w
 22942  0DFF  0085               	movwf	5
 22943  0E00  0800               	movf	0,w	;code access
 22944  0E01  00B2               	movwf	__doprnt@c
 22945                           
 22946                           ; Switch size 1, requested type "space"
 22947                           ; Number of cases is 6, Range of values is 0 to 120
 22948                           ; switch strategies available:
 22949                           ; Name         Instructions Cycles
 22950                           ; simple_byte           19    10 (average)
 22951                           ; direct_byte          248     6 (fixed)
 22952                           ; jumptable            260     6 (fixed)
 22953                           ;	Chosen strategy is simple_byte
 22954  0E02  3A00               	xorlw	0	; case 0
 22955  0E03  1903               	skipnz
 22956  0E04  2FFC               	goto	l5399
 22957  0E05  3A58               	xorlw	88	; case 88
 22958  0E06  1903               	skipnz
 22959  0E07  2D4C               	goto	l1624
 22960  0E08  3A3C               	xorlw	60	; case 100
 22961  0E09  1903               	skipnz
 22962  0E0A  2E15               	goto	l1622
 22963  0E0B  3A0D               	xorlw	13	; case 105
 22964  0E0C  1903               	skipnz
 22965  0E0D  2E15               	goto	l1622
 22966  0E0E  3A1A               	xorlw	26	; case 115
 22967  0E0F  1903               	skipnz
 22968  0E10  2D4F               	goto	l5239
 22969  0E11  3A0B               	xorlw	11	; case 120
 22970  0E12  1903               	skipnz
 22971  0E13  2D4C               	goto	l1624
 22972  0E14  2CC0               	goto	l5397
 22973  0E15                     l1622:	
 22974                           
 22975                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 22976  0E15  0140               	movlb	0	; select bank0
 22977  0E16  1BAF               	btfsc	__doprnt@flag,7
 22978  0E17  2E30               	goto	l5293
 22979                           
 22980                           ;doprnt.c: 1253: {
 22981                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 22982  0E18  0822               	movf	__doprnt@ap,w
 22983  0E19  0086               	movwf	6
 22984  0E1A  0187               	clrf	7
 22985  0E1B  0801               	movf	1,w
 22986  0E1C  0084               	movwf	4
 22987  0E1D  0185               	clrf	5
 22988  0E1E  3002               	movlw	2
 22989  0E1F  0781               	addwf	1,f
 22990  0E20  3F00               	moviw [0]fsr0
 22991  0E21  00AD               	movwf	__doprnt@val
 22992  0E22  3F01               	moviw [1]fsr0
 22993  0E23  00AE               	movwf	__doprnt@val+1
 22994                           
 22995                           ;doprnt.c: 1261: if((int)val < 0) {
 22996  0E24  1FAE               	btfss	__doprnt@val+1,7
 22997  0E25  2E81               	goto	l5317
 22998                           
 22999                           ;doprnt.c: 1262: flag |= 0x03;
 23000  0E26  3003               	movlw	3
 23001  0E27  00A3               	movwf	??__doprnt
 23002  0E28  0823               	movf	??__doprnt,w
 23003  0E29  04AF               	iorwf	__doprnt@flag,f
 23004                           
 23005                           ;doprnt.c: 1263: val = -val;
 23006  0E2A  09AD               	comf	__doprnt@val,f
 23007  0E2B  09AE               	comf	__doprnt@val+1,f
 23008  0E2C  0AAD               	incf	__doprnt@val,f
 23009  0E2D  1903               	skipnz
 23010  0E2E  0AAE               	incf	__doprnt@val+1,f
 23011                           
 23012                           ;doprnt.c: 1264: }
 23013                           ;doprnt.c: 1266: }
 23014  0E2F  2E81               	goto	l5317
 23015  0E30                     l5293:	
 23016                           
 23017                           ;doprnt.c: 1268: else
 23018                           ;doprnt.c: 1273: {
 23019                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 23020  0E30  0822               	movf	__doprnt@ap,w
 23021  0E31  0086               	movwf	6
 23022  0E32  0187               	clrf	7
 23023  0E33  0801               	movf	1,w
 23024  0E34  0084               	movwf	4
 23025  0E35  0185               	clrf	5
 23026  0E36  3002               	movlw	2
 23027  0E37  0781               	addwf	1,f
 23028  0E38  3F00               	moviw [0]fsr0
 23029  0E39  00AD               	movwf	__doprnt@val
 23030  0E3A  3F01               	moviw [1]fsr0
 23031  0E3B  00AE               	movwf	__doprnt@val+1
 23032                           
 23033                           ;doprnt.c: 1287: }
 23034                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 23035  0E3C  2E81               	goto	l5317
 23036  0E3D                     l1647:	
 23037                           ;doprnt.c: 1299: case 0x00:
 23038                           
 23039                           
 23040                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 23041  0E3D  01B2               	clrf	__doprnt@c
 23042  0E3E  0AB2               	incf	__doprnt@c,f
 23043  0E3F                     L25:	
 23044  0E3F  3005               	movlw	5
 23045  0E40  0632               	xorwf	__doprnt@c,w
 23046  0E41  1903               	btfsc	3,2
 23047  0E42  2E8A               	goto	l5319
 23048                           
 23049                           ;doprnt.c: 1306: if(val < dpowers[c])
 23050  0E43  0832               	movf	__doprnt@c,w
 23051  0E44  00A3               	movwf	??__doprnt
 23052  0E45  01A4               	clrf	??__doprnt+1
 23053  0E46  35A3               	lslf	??__doprnt,f
 23054  0E47  0DA4               	rlf	??__doprnt+1,f
 23055  0E48  306E               	movlw	low (_dpowers| (0+32768))
 23056  0E49  0723               	addwf	??__doprnt,w
 23057  0E4A  0084               	movwf	4
 23058  0E4B  30A9               	movlw	high (_dpowers| (0+32768))
 23059  0E4C  3D24               	addwfc	??__doprnt+1,w
 23060  0E4D  0085               	movwf	5
 23061  0E4E  3F00               	moviw [0]fsr0
 23062  0E4F  00A5               	movwf	??__doprnt+2
 23063  0E50  3F01               	moviw [1]fsr0
 23064  0E51  00A6               	movwf	??__doprnt+3
 23065  0E52  0826               	movf	??__doprnt+3,w
 23066  0E53  022E               	subwf	__doprnt@val+1,w
 23067  0E54  1D03               	skipz
 23068  0E55  2E58               	goto	u4475
 23069  0E56  0825               	movf	??__doprnt+2,w
 23070  0E57  022D               	subwf	__doprnt@val,w
 23071  0E58                     u4475:	
 23072  0E58  1C03               	btfss	3,0
 23073  0E59  2E8A               	goto	l5319
 23074                           
 23075                           ;doprnt.c: 1307: break;
 23076  0E5A  3001               	movlw	1
 23077  0E5B  00A3               	movwf	??__doprnt
 23078  0E5C  0823               	movf	??__doprnt,w
 23079  0E5D  07B2               	addwf	__doprnt@c,f
 23080  0E5E  2E3F               	goto	L25
 23081  0E5F                     l1652:	
 23082                           ;doprnt.c: 1314: case 0x80:
 23083                           
 23084                           ;doprnt.c: 1309: break;
 23085                           
 23086                           
 23087                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 23088  0E5F  01B2               	clrf	__doprnt@c
 23089  0E60  0AB2               	incf	__doprnt@c,f
 23090  0E61                     L26:	
 23091  0E61  3004               	movlw	4
 23092  0E62  0632               	xorwf	__doprnt@c,w
 23093  0E63  1903               	btfsc	3,2
 23094  0E64  2E8A               	goto	l5319
 23095                           
 23096                           ;doprnt.c: 1317: if(val < hexpowers[c])
 23097  0E65  0832               	movf	__doprnt@c,w
 23098  0E66  00A3               	movwf	??__doprnt
 23099  0E67  01A4               	clrf	??__doprnt+1
 23100  0E68  35A3               	lslf	??__doprnt,f
 23101  0E69  0DA4               	rlf	??__doprnt+1,f
 23102  0E6A  309F               	movlw	low (_hexpowers| (0+32768))
 23103  0E6B  0723               	addwf	??__doprnt,w
 23104  0E6C  0084               	movwf	4
 23105  0E6D  30A9               	movlw	high (_hexpowers| (0+32768))
 23106  0E6E  3D24               	addwfc	??__doprnt+1,w
 23107  0E6F  0085               	movwf	5
 23108  0E70  3F00               	moviw [0]fsr0
 23109  0E71  00A5               	movwf	??__doprnt+2
 23110  0E72  3F01               	moviw [1]fsr0
 23111  0E73  00A6               	movwf	??__doprnt+3
 23112  0E74  0826               	movf	??__doprnt+3,w
 23113  0E75  022E               	subwf	__doprnt@val+1,w
 23114  0E76  1D03               	skipz
 23115  0E77  2E7A               	goto	u4505
 23116  0E78  0825               	movf	??__doprnt+2,w
 23117  0E79  022D               	subwf	__doprnt@val,w
 23118  0E7A                     u4505:	
 23119  0E7A  1C03               	btfss	3,0
 23120  0E7B  2E8A               	goto	l5319
 23121                           
 23122                           ;doprnt.c: 1318: break;
 23123  0E7C  3001               	movlw	1
 23124  0E7D  00A3               	movwf	??__doprnt
 23125  0E7E  0823               	movf	??__doprnt,w
 23126  0E7F  07B2               	addwf	__doprnt@c,f
 23127  0E80  2E61               	goto	L26
 23128  0E81                     l5317:	
 23129                           ;doprnt.c: 1336: }
 23130                           
 23131                           ;doprnt.c: 1320: break;
 23132                           
 23133  0E81  082F               	movf	__doprnt@flag,w
 23134  0E82  3980               	andlw	128
 23135                           
 23136                           ; Switch size 1, requested type "space"
 23137                           ; Number of cases is 2, Range of values is 0 to 128
 23138                           ; switch strategies available:
 23139                           ; Name         Instructions Cycles
 23140                           ; simple_byte            7     4 (average)
 23141                           ; jumptable            260     6 (fixed)
 23142                           ;	Chosen strategy is simple_byte
 23143  0E83  3A00               	xorlw	0	; case 0
 23144  0E84  1903               	skipnz
 23145  0E85  2E3D               	goto	l1647
 23146  0E86  3A80               	xorlw	128	; case 128
 23147  0E87  1903               	skipnz
 23148  0E88  2E5F               	goto	l1652
 23149  0E89  2E8A               	goto	l5319
 23150  0E8A                     l5319:	
 23151                           
 23152                           ;doprnt.c: 1345: if(width && flag & 0x03)
 23153  0E8A  0830               	movf	__doprnt@width,w
 23154  0E8B  0431               	iorwf	__doprnt@width+1,w
 23155  0E8C  1903               	btfsc	3,2
 23156  0E8D  2E96               	goto	l1656
 23157  0E8E  082F               	movf	__doprnt@flag,w
 23158  0E8F  3903               	andlw	3
 23159  0E90  1903               	btfsc	3,2
 23160  0E91  2E96               	goto	l1656
 23161                           
 23162                           ;doprnt.c: 1346: width--;
 23163  0E92  30FF               	movlw	255
 23164  0E93  07B0               	addwf	__doprnt@width,f
 23165  0E94  30FF               	movlw	255
 23166  0E95  3DB1               	addwfc	__doprnt@width+1,f
 23167  0E96                     l1656:	
 23168                           
 23169                           ;doprnt.c: 1381: if(width > c)
 23170  0E96  0832               	movf	__doprnt@c,w
 23171  0E97  00A3               	movwf	??__doprnt
 23172  0E98  01A4               	clrf	??__doprnt+1
 23173  0E99  1BA3               	btfsc	??__doprnt,7
 23174  0E9A  03A4               	decf	??__doprnt+1,f
 23175  0E9B  0824               	movf	??__doprnt+1,w
 23176  0E9C  3A80               	xorlw	128
 23177  0E9D  00A5               	movwf	??__doprnt+2
 23178  0E9E  0831               	movf	__doprnt@width+1,w
 23179  0E9F  3A80               	xorlw	128
 23180  0EA0  0225               	subwf	??__doprnt+2,w
 23181  0EA1  1D03               	skipz
 23182  0EA2  2EA5               	goto	u4545
 23183  0EA3  0830               	movf	__doprnt@width,w
 23184  0EA4  0223               	subwf	??__doprnt,w
 23185  0EA5                     u4545:	
 23186  0EA5  1803               	skipnc
 23187  0EA6  2EB2               	goto	l5327
 23188                           
 23189                           ;doprnt.c: 1382: width -= c;
 23190  0EA7  0140               	movlb	0	; select bank0
 23191  0EA8  0832               	movf	__doprnt@c,w
 23192  0EA9  00A3               	movwf	??__doprnt
 23193  0EAA  01A4               	clrf	??__doprnt+1
 23194  0EAB  1BA3               	btfsc	??__doprnt,7
 23195  0EAC  03A4               	decf	??__doprnt+1,f
 23196  0EAD  0823               	movf	??__doprnt,w
 23197  0EAE  02B0               	subwf	__doprnt@width,f
 23198  0EAF  0824               	movf	??__doprnt+1,w
 23199  0EB0  3BB1               	subwfb	__doprnt@width+1,f
 23200  0EB1  2EB5               	goto	l5329
 23201  0EB2                     l5327:	
 23202                           
 23203                           ;doprnt.c: 1383: else
 23204                           ;doprnt.c: 1384: width = 0;
 23205  0EB2  0140               	movlb	0	; select bank0
 23206  0EB3  01B0               	clrf	__doprnt@width
 23207  0EB4  01B1               	clrf	__doprnt@width+1
 23208  0EB5                     l5329:	
 23209                           
 23210                           ;doprnt.c: 1387: if(flag & 0x04) {
 23211  0EB5  1D2F               	btfss	__doprnt@flag,2
 23212  0EB6  2F12               	goto	l5353
 23213                           
 23214                           ;doprnt.c: 1392: if(flag & 0x03)
 23215  0EB7  082F               	movf	__doprnt@flag,w
 23216  0EB8  3903               	andlw	3
 23217  0EB9  1903               	btfsc	3,2
 23218  0EBA  2EE1               	goto	l5341
 23219                           
 23220                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 23221  0EBB  0A33               	incf	__doprnt@pb,w
 23222  0EBC  0086               	movwf	6
 23223  0EBD  0187               	clrf	7
 23224  0EBE  0016               	moviw fsr1++
 23225  0EBF  0401               	iorwf	1,w
 23226  0EC0  1903               	btfsc	3,2
 23227  0EC1  2ECF               	goto	l5337
 23228  0EC2  302D               	movlw	45
 23229  0EC3  00A3               	movwf	??__doprnt
 23230  0EC4  0823               	movf	??__doprnt,w
 23231  0EC5  00F1               	movwf	putch@txData
 23232  0EC6  0A33               	incf	__doprnt@pb,w
 23233  0EC7  0086               	movwf	6
 23234  0EC8  0187               	clrf	7
 23235  0EC9  3F41               	moviw [1]fsr1
 23236  0ECA  008A               	movwf	10
 23237  0ECB  3F40               	moviw [0]fsr1
 23238  0ECC  000A               	callw
 23239  0ECD  318C               	pagesel	$
 23240  0ECE  2EE1               	goto	l5341
 23241  0ECF                     l5337:	
 23242  0ECF  302D               	movlw	45
 23243  0ED0  0140               	movlb	0	; select bank0
 23244  0ED1  00A3               	movwf	??__doprnt
 23245  0ED2  0833               	movf	__doprnt@pb,w
 23246  0ED3  0086               	movwf	6
 23247  0ED4  0187               	clrf	7
 23248  0ED5  0801               	movf	1,w
 23249  0ED6  0086               	movwf	6
 23250  0ED7  0187               	clrf	7
 23251  0ED8  0823               	movf	??__doprnt,w
 23252  0ED9  0081               	movwf	1
 23253  0EDA  3001               	movlw	1
 23254  0EDB  00A3               	movwf	??__doprnt
 23255  0EDC  0833               	movf	__doprnt@pb,w
 23256  0EDD  0086               	movwf	6
 23257  0EDE  0187               	clrf	7
 23258  0EDF  0823               	movf	??__doprnt,w
 23259  0EE0  0781               	addwf	1,f
 23260  0EE1                     l5341:	
 23261                           
 23262                           ;doprnt.c: 1415: if(width)
 23263  0EE1  0140               	movlb	0	; select bank0
 23264  0EE2                     L27:	
 23265  0EE2  0830               	movf	__doprnt@width,w
 23266  0EE3  0431               	iorwf	__doprnt@width+1,w
 23267  0EE4  1903               	btfsc	3,2
 23268  0EE5  2F6F               	goto	l5375
 23269                           
 23270                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 23271                           
 23272                           ;doprnt.c: 1416: do
 23273  0EE6  0A33               	incf	__doprnt@pb,w
 23274  0EE7  0086               	movwf	6
 23275  0EE8  0187               	clrf	7
 23276  0EE9  0016               	moviw fsr1++
 23277  0EEA  0401               	iorwf	1,w
 23278  0EEB  1903               	btfsc	3,2
 23279  0EEC  2EFA               	goto	l5347
 23280  0EED  3030               	movlw	48
 23281  0EEE  00A3               	movwf	??__doprnt
 23282  0EEF  0823               	movf	??__doprnt,w
 23283  0EF0  00F1               	movwf	putch@txData
 23284  0EF1  0A33               	incf	__doprnt@pb,w
 23285  0EF2  0086               	movwf	6
 23286  0EF3  0187               	clrf	7
 23287  0EF4  3F41               	moviw [1]fsr1
 23288  0EF5  008A               	movwf	10
 23289  0EF6  3F40               	moviw [0]fsr1
 23290  0EF7  000A               	callw
 23291  0EF8  318C               	pagesel	$
 23292  0EF9  2F0C               	goto	l5351
 23293  0EFA                     l5347:	
 23294  0EFA  3030               	movlw	48
 23295  0EFB  0140               	movlb	0	; select bank0
 23296  0EFC  00A3               	movwf	??__doprnt
 23297  0EFD  0833               	movf	__doprnt@pb,w
 23298  0EFE  0086               	movwf	6
 23299  0EFF  0187               	clrf	7
 23300  0F00  0801               	movf	1,w
 23301  0F01  0086               	movwf	6
 23302  0F02  0187               	clrf	7
 23303  0F03  0823               	movf	??__doprnt,w
 23304  0F04  0081               	movwf	1
 23305  0F05  3001               	movlw	1
 23306  0F06  00A3               	movwf	??__doprnt
 23307  0F07  0833               	movf	__doprnt@pb,w
 23308  0F08  0086               	movwf	6
 23309  0F09  0187               	clrf	7
 23310  0F0A  0823               	movf	??__doprnt,w
 23311  0F0B  0781               	addwf	1,f
 23312  0F0C                     l5351:	
 23313                           
 23314                           ;doprnt.c: 1418: while(--width);
 23315  0F0C  30FF               	movlw	255
 23316  0F0D  0140               	movlb	0	; select bank0
 23317  0F0E  07B0               	addwf	__doprnt@width,f
 23318  0F0F  30FF               	movlw	255
 23319  0F10  3DB1               	addwfc	__doprnt@width+1,f
 23320  0F11  2EE2               	goto	L27
 23321  0F12                     l5353:	
 23322                           ;doprnt.c: 1420: } else
 23323                           
 23324                           
 23325                           ;doprnt.c: 1422: {
 23326                           ;doprnt.c: 1424: if(width
 23327                           ;doprnt.c: 1428: )
 23328  0F12  0830               	movf	__doprnt@width,w
 23329  0F13  0431               	iorwf	__doprnt@width+1,w
 23330  0F14  1903               	btfsc	3,2
 23331  0F15  2F45               	goto	l5365
 23332  0F16                     l5355:	
 23333                           ;doprnt.c: 1429: do
 23334                           
 23335                           
 23336                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 23337  0F16  0A33               	incf	__doprnt@pb,w
 23338  0F17  0086               	movwf	6
 23339  0F18  0187               	clrf	7
 23340  0F19  0016               	moviw fsr1++
 23341  0F1A  0401               	iorwf	1,w
 23342  0F1B  1903               	btfsc	3,2
 23343  0F1C  2F2A               	goto	l5359
 23344  0F1D  3020               	movlw	32
 23345  0F1E  00A3               	movwf	??__doprnt
 23346  0F1F  0823               	movf	??__doprnt,w
 23347  0F20  00F1               	movwf	putch@txData
 23348  0F21  0A33               	incf	__doprnt@pb,w
 23349  0F22  0086               	movwf	6
 23350  0F23  0187               	clrf	7
 23351  0F24  3F41               	moviw [1]fsr1
 23352  0F25  008A               	movwf	10
 23353  0F26  3F40               	moviw [0]fsr1
 23354  0F27  000A               	callw
 23355  0F28  318C               	pagesel	$
 23356  0F29  2F3C               	goto	l5363
 23357  0F2A                     l5359:	
 23358  0F2A  3020               	movlw	32
 23359  0F2B  0140               	movlb	0	; select bank0
 23360  0F2C  00A3               	movwf	??__doprnt
 23361  0F2D  0833               	movf	__doprnt@pb,w
 23362  0F2E  0086               	movwf	6
 23363  0F2F  0187               	clrf	7
 23364  0F30  0801               	movf	1,w
 23365  0F31  0086               	movwf	6
 23366  0F32  0187               	clrf	7
 23367  0F33  0823               	movf	??__doprnt,w
 23368  0F34  0081               	movwf	1
 23369  0F35  3001               	movlw	1
 23370  0F36  00A3               	movwf	??__doprnt
 23371  0F37  0833               	movf	__doprnt@pb,w
 23372  0F38  0086               	movwf	6
 23373  0F39  0187               	clrf	7
 23374  0F3A  0823               	movf	??__doprnt,w
 23375  0F3B  0781               	addwf	1,f
 23376  0F3C                     l5363:	
 23377                           
 23378                           ;doprnt.c: 1431: while(--width);
 23379  0F3C  30FF               	movlw	255
 23380  0F3D  0140               	movlb	0	; select bank0
 23381  0F3E  07B0               	addwf	__doprnt@width,f
 23382  0F3F  30FF               	movlw	255
 23383  0F40  3DB1               	addwfc	__doprnt@width+1,f
 23384  0F41  0830               	movf	__doprnt@width,w
 23385  0F42  0431               	iorwf	__doprnt@width+1,w
 23386  0F43  1D03               	btfss	3,2
 23387  0F44  2F16               	goto	l5355
 23388  0F45                     l5365:	
 23389                           
 23390                           ;doprnt.c: 1438: if(flag & 0x03)
 23391  0F45  082F               	movf	__doprnt@flag,w
 23392  0F46  3903               	andlw	3
 23393  0F47  1903               	btfsc	3,2
 23394  0F48  2F6F               	goto	l5375
 23395                           
 23396                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 23397  0F49  0A33               	incf	__doprnt@pb,w
 23398  0F4A  0086               	movwf	6
 23399  0F4B  0187               	clrf	7
 23400  0F4C  0016               	moviw fsr1++
 23401  0F4D  0401               	iorwf	1,w
 23402  0F4E  1903               	btfsc	3,2
 23403  0F4F  2F5D               	goto	l5371
 23404  0F50  302D               	movlw	45
 23405  0F51  00A3               	movwf	??__doprnt
 23406  0F52  0823               	movf	??__doprnt,w
 23407  0F53  00F1               	movwf	putch@txData
 23408  0F54  0A33               	incf	__doprnt@pb,w
 23409  0F55  0086               	movwf	6
 23410  0F56  0187               	clrf	7
 23411  0F57  3F41               	moviw [1]fsr1
 23412  0F58  008A               	movwf	10
 23413  0F59  3F40               	moviw [0]fsr1
 23414  0F5A  000A               	callw
 23415  0F5B  318C               	pagesel	$
 23416  0F5C  2F6F               	goto	l5375
 23417  0F5D                     l5371:	
 23418  0F5D  302D               	movlw	45
 23419  0F5E  0140               	movlb	0	; select bank0
 23420  0F5F  00A3               	movwf	??__doprnt
 23421  0F60  0833               	movf	__doprnt@pb,w
 23422  0F61  0086               	movwf	6
 23423  0F62  0187               	clrf	7
 23424  0F63  0801               	movf	1,w
 23425  0F64  0086               	movwf	6
 23426  0F65  0187               	clrf	7
 23427  0F66  0823               	movf	??__doprnt,w
 23428  0F67  0081               	movwf	1
 23429  0F68  3001               	movlw	1
 23430  0F69  00A3               	movwf	??__doprnt
 23431  0F6A  0833               	movf	__doprnt@pb,w
 23432  0F6B  0086               	movwf	6
 23433  0F6C  0187               	clrf	7
 23434  0F6D  0823               	movf	??__doprnt,w
 23435  0F6E  0781               	addwf	1,f
 23436  0F6F                     l5375:	
 23437                           
 23438                           ;doprnt.c: 1469: }
 23439                           ;doprnt.c: 1472: prec = c;
 23440  0F6F  0140               	movlb	0	; select bank0
 23441  0F70  0832               	movf	__doprnt@c,w
 23442  0F71  00A3               	movwf	??__doprnt
 23443  0F72  0823               	movf	??__doprnt,w
 23444  0F73  00A8               	movwf	__doprnt@prec
 23445                           
 23446                           ;doprnt.c: 1474: while(prec--) {
 23447  0F74  2FF3               	goto	l5395
 23448  0F75                     l5377:	
 23449                           ;doprnt.c: 1478: {
 23450                           ;doprnt.c: 1483: case 0x00:
 23451                           
 23452                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 23453                           
 23454                           
 23455                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 23456  0F75  300A               	movlw	10
 23457  0F76  00F8               	movwf	___lwmod@divisor
 23458  0F77  3000               	movlw	0
 23459  0F78  00F9               	movwf	___lwmod@divisor+1
 23460  0F79  0828               	movf	__doprnt@prec,w
 23461  0F7A  00A3               	movwf	??__doprnt
 23462  0F7B  01A4               	clrf	??__doprnt+1
 23463  0F7C  35A3               	lslf	??__doprnt,f
 23464  0F7D  0DA4               	rlf	??__doprnt+1,f
 23465  0F7E  306E               	movlw	low (_dpowers| (0+32768))
 23466  0F7F  0723               	addwf	??__doprnt,w
 23467  0F80  0084               	movwf	4
 23468  0F81  30A9               	movlw	high (_dpowers| (0+32768))
 23469  0F82  3D24               	addwfc	??__doprnt+1,w
 23470  0F83  0085               	movwf	5
 23471  0F84  3F00               	moviw [0]fsr0
 23472  0F85  00F0               	movwf	___lwdiv@divisor
 23473  0F86  3F01               	moviw [1]fsr0
 23474  0F87  00F1               	movwf	___lwdiv@divisor+1
 23475  0F88  082E               	movf	__doprnt@val+1,w
 23476  0F89  00F3               	movwf	___lwdiv@dividend+1
 23477  0F8A  082D               	movf	__doprnt@val,w
 23478  0F8B  00F2               	movwf	___lwdiv@dividend
 23479  0F8C  31A5  258B  318C   	fcall	___lwdiv
 23480  0F8F  0871               	movf	?___lwdiv+1,w
 23481  0F90  00FB               	movwf	___lwmod@dividend+1
 23482  0F91  0870               	movf	?___lwdiv,w
 23483  0F92  00FA               	movwf	___lwmod@dividend
 23484  0F93  31A4  2472  318C   	fcall	___lwmod
 23485  0F96  0878               	movf	?___lwmod,w
 23486  0F97  3E30               	addlw	48
 23487  0F98  0140               	movlb	0	; select bank0
 23488  0F99  00A5               	movwf	??__doprnt+2
 23489  0F9A  0825               	movf	??__doprnt+2,w
 23490  0F9B  2FC2               	goto	L24
 23491  0F9C                     l5379:	
 23492                           ;doprnt.c: 1497: case 0x80:
 23493                           
 23494                           ;doprnt.c: 1491: break;
 23495                           
 23496                           
 23497                           ;doprnt.c: 1499: {
 23498                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 23499  0F9C  0828               	movf	__doprnt@prec,w
 23500  0F9D  00A3               	movwf	??__doprnt
 23501  0F9E  01A4               	clrf	??__doprnt+1
 23502  0F9F  35A3               	lslf	??__doprnt,f
 23503  0FA0  0DA4               	rlf	??__doprnt+1,f
 23504  0FA1  309F               	movlw	low (_hexpowers| (0+32768))
 23505  0FA2  0723               	addwf	??__doprnt,w
 23506  0FA3  0084               	movwf	4
 23507  0FA4  30A9               	movlw	high (_hexpowers| (0+32768))
 23508  0FA5  3D24               	addwfc	??__doprnt+1,w
 23509  0FA6  0085               	movwf	5
 23510  0FA7  3F00               	moviw [0]fsr0
 23511  0FA8  00F0               	movwf	___lwdiv@divisor
 23512  0FA9  3F01               	moviw [1]fsr0
 23513  0FAA  00F1               	movwf	___lwdiv@divisor+1
 23514  0FAB  082E               	movf	__doprnt@val+1,w
 23515  0FAC  00F3               	movwf	___lwdiv@dividend+1
 23516  0FAD  082D               	movf	__doprnt@val,w
 23517  0FAE  00F2               	movwf	___lwdiv@dividend
 23518  0FAF  31A5  258B  318C   	fcall	___lwdiv
 23519  0FB2  0870               	movf	?___lwdiv,w
 23520  0FB3  390F               	andlw	15
 23521  0FB4  0140               	movlb	0	; select bank0
 23522  0FB5  00A5               	movwf	??__doprnt+2
 23523  0FB6  0825               	movf	??__doprnt+2,w
 23524  0FB7  00A7               	movwf	__doprnt@idx
 23525                           
 23526                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 23527  0FB8  0827               	movf	__doprnt@idx,w
 23528  0FB9  3EDB               	addlw	low (STR_30| (0+32768))
 23529  0FBA  0084               	movwf	4
 23530  0FBB  30A8               	movlw	high (STR_30| (0+32768))
 23531  0FBC  1803               	skipnc
 23532  0FBD  3E01               	addlw	1
 23533  0FBE  0085               	movwf	5
 23534  0FBF  0800               	movf	0,w	;code access
 23535  0FC0  00A3               	movwf	??__doprnt
 23536  0FC1  0823               	movf	??__doprnt,w
 23537  0FC2                     L24:	
 23538  0FC2  00B2               	movwf	__doprnt@c
 23539                           
 23540                           ;doprnt.c: 1523: }
 23541                           
 23542                           ;doprnt.c: 1508: }
 23543                           ;doprnt.c: 1510: break;
 23544  0FC3  2FCD               	goto	l5387
 23545  0FC4                     l5385:	
 23546  0FC4  082F               	movf	__doprnt@flag,w
 23547  0FC5  3980               	andlw	128
 23548                           
 23549                           ; Switch size 1, requested type "space"
 23550                           ; Number of cases is 2, Range of values is 0 to 128
 23551                           ; switch strategies available:
 23552                           ; Name         Instructions Cycles
 23553                           ; simple_byte            7     4 (average)
 23554                           ; jumptable            260     6 (fixed)
 23555                           ;	Chosen strategy is simple_byte
 23556  0FC6  3A00               	xorlw	0	; case 0
 23557  0FC7  1903               	skipnz
 23558  0FC8  2F75               	goto	l5377
 23559  0FC9  3A80               	xorlw	128	; case 128
 23560  0FCA  1903               	skipnz
 23561  0FCB  2F9C               	goto	l5379
 23562  0FCC  2FCD               	goto	l5387
 23563  0FCD                     l5387:	
 23564                           
 23565                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 23566  0FCD  0A33               	incf	__doprnt@pb,w
 23567  0FCE  0086               	movwf	6
 23568  0FCF  0187               	clrf	7
 23569  0FD0  0016               	moviw fsr1++
 23570  0FD1  0401               	iorwf	1,w
 23571  0FD2  1903               	btfsc	3,2
 23572  0FD3  2FE1               	goto	l5391
 23573  0FD4  0832               	movf	__doprnt@c,w
 23574  0FD5  00A3               	movwf	??__doprnt
 23575  0FD6  0823               	movf	??__doprnt,w
 23576  0FD7  00F1               	movwf	putch@txData
 23577  0FD8  0A33               	incf	__doprnt@pb,w
 23578  0FD9  0086               	movwf	6
 23579  0FDA  0187               	clrf	7
 23580  0FDB  3F41               	moviw [1]fsr1
 23581  0FDC  008A               	movwf	10
 23582  0FDD  3F40               	moviw [0]fsr1
 23583  0FDE  000A               	callw
 23584  0FDF  318C               	pagesel	$
 23585  0FE0  2FF3               	goto	l5395
 23586  0FE1                     l5391:	
 23587  0FE1  0140               	movlb	0	; select bank0
 23588  0FE2  0832               	movf	__doprnt@c,w
 23589  0FE3  00A3               	movwf	??__doprnt
 23590  0FE4  0833               	movf	__doprnt@pb,w
 23591  0FE5  0086               	movwf	6
 23592  0FE6  0187               	clrf	7
 23593  0FE7  0801               	movf	1,w
 23594  0FE8  0086               	movwf	6
 23595  0FE9  0187               	clrf	7
 23596  0FEA  0823               	movf	??__doprnt,w
 23597  0FEB  0081               	movwf	1
 23598  0FEC  3001               	movlw	1
 23599  0FED  00A3               	movwf	??__doprnt
 23600  0FEE  0833               	movf	__doprnt@pb,w
 23601  0FEF  0086               	movwf	6
 23602  0FF0  0187               	clrf	7
 23603  0FF1  0823               	movf	??__doprnt,w
 23604  0FF2  0781               	addwf	1,f
 23605  0FF3                     l5395:	
 23606  0FF3  30FF               	movlw	255
 23607  0FF4  0140               	movlb	0	; select bank0
 23608  0FF5  00A3               	movwf	??__doprnt
 23609  0FF6  0823               	movf	??__doprnt,w
 23610  0FF7  07A8               	addwf	__doprnt@prec,f
 23611  0FF8  0A28               	incf	__doprnt@prec,w
 23612  0FF9  1903               	btfsc	3,2
 23613  0FFA  2CC0               	goto	l5397
 23614  0FFB  2FC4               	goto	l5385
 23615  0FFC                     l5399:	
 23616                           ;doprnt.c: 1525: }
 23617                           ;doprnt.c: 1533: }
 23618                           ;doprnt.c: 1535: alldone:
 23619                           
 23620                           
 23621                           ;doprnt.c: 1540: return 0;
 23622  0FFC  0140               	movlb	0	; select bank0
 23623  0FFD  01A0               	clrf	?__doprnt
 23624  0FFE  01A1               	clrf	?__doprnt+1
 23625  0FFF  0008               	return
 23626  1000                     __end_of__doprnt:	
 23627                           
 23628                           	psect	text74
 23629  2099                     __ptext74:	
 23630 ;; *************** function _putch *****************
 23631 ;; Defined at:
 23632 ;;		line 183 in file "mcc_generated_files/eusart.c"
 23633 ;; Parameters:    Size  Location     Type
 23634 ;;  txData          1    1[COMMON] unsigned char 
 23635 ;; Auto vars:     Size  Location     Type
 23636 ;;		None
 23637 ;; Return value:  Size  Location     Type
 23638 ;;                  1    wreg      void 
 23639 ;; Registers used:
 23640 ;;		wreg, status,2, status,0, pclath, cstack
 23641 ;; Tracked objects:
 23642 ;;		On entry : 0/0
 23643 ;;		On exit  : 0/0
 23644 ;;		Unchanged: 0/0
 23645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23646 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23650 ;;Total ram usage:        1 bytes
 23651 ;; Hardware stack levels used:    1
 23652 ;; Hardware stack levels required when called:    1
 23653 ;; This function calls:
 23654 ;;		_EUSART_Write
 23655 ;; This function is called by:
 23656 ;;		_printf
 23657 ;;		__doprnt
 23658 ;; This function uses a non-reentrant model
 23659 ;;
 23660                           
 23661                           
 23662                           ;psect for function _putch
 23663  2099                     _putch:	
 23664                           
 23665                           ;eusart.c: 185: EUSART_Write(txData);
 23666                           
 23667                           ;incstack = 0
 23668                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 23669  2099  0871               	movf	putch@txData,w
 23670  209A  31A0  20B9         	fcall	_EUSART_Write
 23671  209C  0008               	return
 23672  209D                     __end_of_putch:	
 23673                           
 23674                           	psect	text75
 23675  20B9                     __ptext75:	
 23676 ;; *************** function _EUSART_Write *****************
 23677 ;; Defined at:
 23678 ;;		line 132 in file "mcc_generated_files/eusart.c"
 23679 ;; Parameters:    Size  Location     Type
 23680 ;;  txData          1    wreg     unsigned char 
 23681 ;; Auto vars:     Size  Location     Type
 23682 ;;  txData          1    0[COMMON] unsigned char 
 23683 ;; Return value:  Size  Location     Type
 23684 ;;                  1    wreg      void 
 23685 ;; Registers used:
 23686 ;;		wreg
 23687 ;; Tracked objects:
 23688 ;;		On entry : 0/0
 23689 ;;		On exit  : 0/0
 23690 ;;		Unchanged: 0/0
 23691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23696 ;;Total ram usage:        1 bytes
 23697 ;; Hardware stack levels used:    1
 23698 ;; This function calls:
 23699 ;;		Nothing
 23700 ;; This function is called by:
 23701 ;;		_printf_string
 23702 ;;		_putch
 23703 ;; This function uses a non-reentrant model
 23704 ;;
 23705                           
 23706                           
 23707                           ;psect for function _EUSART_Write
 23708  20B9                     _EUSART_Write:	
 23709                           
 23710                           ;incstack = 0
 23711                           ; Regs used in _EUSART_Write: [wreg]
 23712                           ;EUSART_Write@txData stored from wreg
 23713  20B9  00F0               	movwf	EUSART_Write@txData
 23714  20BA                     l162:	
 23715                           ;eusart.c: 135: {
 23716                           
 23717                           ;eusart.c: 134: while(0 == PIR3bits.TXIF)
 23718                           
 23719  20BA  014E               	movlb	14	; select bank14
 23720  20BB  1E0F               	btfss	15,4	;volatile
 23721  20BC  28BA               	goto	l162
 23722                           
 23723                           ;eusart.c: 136: }
 23724                           ;eusart.c: 138: TX1REG = txData;
 23725  20BD  0870               	movf	EUSART_Write@txData,w
 23726  20BE  0142               	movlb	2	; select bank2
 23727  20BF  009A               	movwf	26	;volatile
 23728  20C0  0008               	return
 23729  20C1                     __end_of_EUSART_Write:	
 23730                           
 23731                           	psect	text76
 23732  2110                     __ptext76:	
 23733 ;; *************** function _isdigit *****************
 23734 ;; Defined at:
 23735 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 23736 ;; Parameters:    Size  Location     Type
 23737 ;;  c               1    wreg     unsigned char 
 23738 ;; Auto vars:     Size  Location     Type
 23739 ;;  c               1    1[COMMON] unsigned char 
 23740 ;; Return value:  Size  Location     Type
 23741 ;;		None               void
 23742 ;; Registers used:
 23743 ;;		wreg, status,2, status,0
 23744 ;; Tracked objects:
 23745 ;;		On entry : 0/0
 23746 ;;		On exit  : 0/0
 23747 ;;		Unchanged: 0/0
 23748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23753 ;;Total ram usage:        2 bytes
 23754 ;; Hardware stack levels used:    1
 23755 ;; This function calls:
 23756 ;;		Nothing
 23757 ;; This function is called by:
 23758 ;;		__doprnt
 23759 ;; This function uses a non-reentrant model
 23760 ;;
 23761                           
 23762                           
 23763                           ;psect for function _isdigit
 23764  2110                     _isdigit:	
 23765                           
 23766                           ;incstack = 0
 23767                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 23768                           ;isdigit@c stored from wreg
 23769  2110  00F1               	movwf	isdigit@c
 23770  2111  01F0               	clrf	_isdigit$2606
 23771  2112  303A               	movlw	58
 23772  2113  0271               	subwf	isdigit@c,w
 23773  2114  1803               	skipnc
 23774  2115  291C               	goto	l5135
 23775  2116  3030               	movlw	48
 23776  2117  0271               	subwf	isdigit@c,w
 23777  2118  1C03               	skipc
 23778  2119  291C               	goto	l5135
 23779  211A  01F0               	clrf	_isdigit$2606
 23780  211B  0AF0               	incf	_isdigit$2606,f
 23781  211C                     l5135:	
 23782  211C  0C70               	rrf	_isdigit$2606,w
 23783  211D  0008               	return
 23784  211E                     __end_of_isdigit:	
 23785                           
 23786                           	psect	text77
 23787  219B                     __ptext77:	
 23788 ;; *************** function ___wmul *****************
 23789 ;; Defined at:
 23790 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 23791 ;; Parameters:    Size  Location     Type
 23792 ;;  multiplier      2    0[COMMON] unsigned int 
 23793 ;;  multiplicand    2    2[COMMON] unsigned int 
 23794 ;; Auto vars:     Size  Location     Type
 23795 ;;  product         2    4[COMMON] unsigned int 
 23796 ;; Return value:  Size  Location     Type
 23797 ;;                  2    0[COMMON] unsigned int 
 23798 ;; Registers used:
 23799 ;;		wreg, status,2, status,0
 23800 ;; Tracked objects:
 23801 ;;		On entry : 0/0
 23802 ;;		On exit  : 0/0
 23803 ;;		Unchanged: 0/0
 23804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23808 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23809 ;;Total ram usage:        6 bytes
 23810 ;; Hardware stack levels used:    1
 23811 ;; This function calls:
 23812 ;;		Nothing
 23813 ;; This function is called by:
 23814 ;;		_process_pmic_status
 23815 ;;		__doprnt
 23816 ;; This function uses a non-reentrant model
 23817 ;;
 23818                           
 23819                           
 23820                           ;psect for function ___wmul
 23821  219B                     ___wmul:	
 23822                           
 23823                           ;incstack = 0
 23824                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 23825  219B  01F4               	clrf	___wmul@product
 23826  219C  01F5               	clrf	___wmul@product+1
 23827  219D                     l5141:	
 23828  219D  1C70               	btfss	___wmul@multiplier,0
 23829  219E  29A3               	goto	l1769
 23830  219F  0872               	movf	___wmul@multiplicand,w
 23831  21A0  07F4               	addwf	___wmul@product,f
 23832  21A1  0873               	movf	___wmul@multiplicand+1,w
 23833  21A2  3DF5               	addwfc	___wmul@product+1,f
 23834  21A3                     l1769:	
 23835  21A3  3001               	movlw	1
 23836  21A4                     u4165:	
 23837  21A4  35F2               	lslf	___wmul@multiplicand,f
 23838  21A5  0DF3               	rlf	___wmul@multiplicand+1,f
 23839  21A6  0B89               	decfsz	9,f
 23840  21A7  29A4               	goto	u4165
 23841  21A8  3001               	movlw	1
 23842  21A9                     u4175:	
 23843  21A9  36F1               	lsrf	___wmul@multiplier+1,f
 23844  21AA  0CF0               	rrf	___wmul@multiplier,f
 23845  21AB  0B89               	decfsz	9,f
 23846  21AC  29A9               	goto	u4175
 23847  21AD  0870               	movf	___wmul@multiplier,w
 23848  21AE  0471               	iorwf	___wmul@multiplier+1,w
 23849  21AF  1D03               	btfss	3,2
 23850  21B0  299D               	goto	l5141
 23851  21B1  0875               	movf	___wmul@product+1,w
 23852  21B2  00F1               	movwf	?___wmul+1
 23853  21B3  0874               	movf	___wmul@product,w
 23854  21B4  00F0               	movwf	?___wmul
 23855  21B5  0008               	return
 23856  21B6                     __end_of___wmul:	
 23857                           
 23858                           	psect	text78
 23859  2472                     __ptext78:	
 23860 ;; *************** function ___lwmod *****************
 23861 ;; Defined at:
 23862 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 23863 ;; Parameters:    Size  Location     Type
 23864 ;;  divisor         2    8[COMMON] unsigned int 
 23865 ;;  dividend        2   10[COMMON] unsigned int 
 23866 ;; Auto vars:     Size  Location     Type
 23867 ;;  counter         1   13[COMMON] unsigned char 
 23868 ;; Return value:  Size  Location     Type
 23869 ;;                  2    8[COMMON] unsigned int 
 23870 ;; Registers used:
 23871 ;;		wreg, status,2, status,0
 23872 ;; Tracked objects:
 23873 ;;		On entry : 0/0
 23874 ;;		On exit  : 0/0
 23875 ;;		Unchanged: 0/0
 23876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23880 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23881 ;;Total ram usage:        6 bytes
 23882 ;; Hardware stack levels used:    1
 23883 ;; This function calls:
 23884 ;;		Nothing
 23885 ;; This function is called by:
 23886 ;;		__doprnt
 23887 ;; This function uses a non-reentrant model
 23888 ;;
 23889                           
 23890                           
 23891                           ;psect for function ___lwmod
 23892  2472                     ___lwmod:	
 23893                           
 23894                           ;incstack = 0
 23895                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 23896  2472  0878               	movf	___lwmod@divisor,w
 23897  2473  0479               	iorwf	___lwmod@divisor+1,w
 23898  2474  1903               	btfsc	3,2
 23899  2475  2C99               	goto	l5197
 23900  2476  01FD               	clrf	___lwmod@counter
 23901  2477  0AFD               	incf	___lwmod@counter,f
 23902  2478                     l5187:	
 23903  2478  1BF9               	btfsc	___lwmod@divisor+1,7
 23904  2479  2C84               	goto	l5189
 23905  247A  3001               	movlw	1
 23906  247B                     u4275:	
 23907  247B  35F8               	lslf	___lwmod@divisor,f
 23908  247C  0DF9               	rlf	___lwmod@divisor+1,f
 23909  247D  0B89               	decfsz	9,f
 23910  247E  2C7B               	goto	u4275
 23911  247F  3001               	movlw	1
 23912  2480  00FC               	movwf	??___lwmod
 23913  2481  087C               	movf	??___lwmod,w
 23914  2482  07FD               	addwf	___lwmod@counter,f
 23915  2483  2C78               	goto	l5187
 23916  2484                     l5189:	
 23917  2484  0879               	movf	___lwmod@divisor+1,w
 23918  2485  027B               	subwf	___lwmod@dividend+1,w
 23919  2486  1D03               	skipz
 23920  2487  2C8A               	goto	u4295
 23921  2488  0878               	movf	___lwmod@divisor,w
 23922  2489  027A               	subwf	___lwmod@dividend,w
 23923  248A                     u4295:	
 23924  248A  1C03               	skipc
 23925  248B  2C90               	goto	l5193
 23926  248C  0878               	movf	___lwmod@divisor,w
 23927  248D  02FA               	subwf	___lwmod@dividend,f
 23928  248E  0879               	movf	___lwmod@divisor+1,w
 23929  248F  3BFB               	subwfb	___lwmod@dividend+1,f
 23930  2490                     l5193:	
 23931  2490  3001               	movlw	1
 23932  2491                     u4305:	
 23933  2491  36F9               	lsrf	___lwmod@divisor+1,f
 23934  2492  0CF8               	rrf	___lwmod@divisor,f
 23935  2493  0B89               	decfsz	9,f
 23936  2494  2C91               	goto	u4305
 23937  2495  3001               	movlw	1
 23938  2496  02FD               	subwf	___lwmod@counter,f
 23939  2497  1D03               	btfss	3,2
 23940  2498  2C84               	goto	l5189
 23941  2499                     l5197:	
 23942  2499  087B               	movf	___lwmod@dividend+1,w
 23943  249A  00F9               	movwf	?___lwmod+1
 23944  249B  087A               	movf	___lwmod@dividend,w
 23945  249C  00F8               	movwf	?___lwmod
 23946  249D  0008               	return
 23947  249E                     __end_of___lwmod:	
 23948                           
 23949                           	psect	text79
 23950  258B                     __ptext79:	
 23951 ;; *************** function ___lwdiv *****************
 23952 ;; Defined at:
 23953 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 23954 ;; Parameters:    Size  Location     Type
 23955 ;;  divisor         2    0[COMMON] unsigned int 
 23956 ;;  dividend        2    2[COMMON] unsigned int 
 23957 ;; Auto vars:     Size  Location     Type
 23958 ;;  quotient        2    5[COMMON] unsigned int 
 23959 ;;  counter         1    7[COMMON] unsigned char 
 23960 ;; Return value:  Size  Location     Type
 23961 ;;                  2    0[COMMON] unsigned int 
 23962 ;; Registers used:
 23963 ;;		wreg, status,2, status,0
 23964 ;; Tracked objects:
 23965 ;;		On entry : 0/0
 23966 ;;		On exit  : 0/0
 23967 ;;		Unchanged: 0/0
 23968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23970 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23972 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23973 ;;Total ram usage:        8 bytes
 23974 ;; Hardware stack levels used:    1
 23975 ;; This function calls:
 23976 ;;		Nothing
 23977 ;; This function is called by:
 23978 ;;		_lipo_battery_level
 23979 ;;		__doprnt
 23980 ;; This function uses a non-reentrant model
 23981 ;;
 23982                           
 23983                           
 23984                           ;psect for function ___lwdiv
 23985  258B                     ___lwdiv:	
 23986                           
 23987                           ;incstack = 0
 23988                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 23989  258B  01F5               	clrf	___lwdiv@quotient
 23990  258C  01F6               	clrf	___lwdiv@quotient+1
 23991  258D  0870               	movf	___lwdiv@divisor,w
 23992  258E  0471               	iorwf	___lwdiv@divisor+1,w
 23993  258F  1903               	btfsc	3,2
 23994  2590  2DBA               	goto	l5175
 23995  2591  01F7               	clrf	___lwdiv@counter
 23996  2592  0AF7               	incf	___lwdiv@counter,f
 23997  2593                     l5163:	
 23998  2593  1BF1               	btfsc	___lwdiv@divisor+1,7
 23999  2594  2D9F               	goto	l5165
 24000  2595  3001               	movlw	1
 24001  2596                     u4205:	
 24002  2596  35F0               	lslf	___lwdiv@divisor,f
 24003  2597  0DF1               	rlf	___lwdiv@divisor+1,f
 24004  2598  0B89               	decfsz	9,f
 24005  2599  2D96               	goto	u4205
 24006  259A  3001               	movlw	1
 24007  259B  00F4               	movwf	??___lwdiv
 24008  259C  0874               	movf	??___lwdiv,w
 24009  259D  07F7               	addwf	___lwdiv@counter,f
 24010  259E  2D93               	goto	l5163
 24011  259F                     l5165:	
 24012  259F  3001               	movlw	1
 24013  25A0                     u4225:	
 24014  25A0  35F5               	lslf	___lwdiv@quotient,f
 24015  25A1  0DF6               	rlf	___lwdiv@quotient+1,f
 24016  25A2  0B89               	decfsz	9,f
 24017  25A3  2DA0               	goto	u4225
 24018  25A4  0871               	movf	___lwdiv@divisor+1,w
 24019  25A5  0273               	subwf	___lwdiv@dividend+1,w
 24020  25A6  1D03               	skipz
 24021  25A7  2DAA               	goto	u4235
 24022  25A8  0870               	movf	___lwdiv@divisor,w
 24023  25A9  0272               	subwf	___lwdiv@dividend,w
 24024  25AA                     u4235:	
 24025  25AA  1C03               	skipc
 24026  25AB  2DB1               	goto	l5171
 24027  25AC  0870               	movf	___lwdiv@divisor,w
 24028  25AD  02F2               	subwf	___lwdiv@dividend,f
 24029  25AE  0871               	movf	___lwdiv@divisor+1,w
 24030  25AF  3BF3               	subwfb	___lwdiv@dividend+1,f
 24031  25B0  1475               	bsf	___lwdiv@quotient,0
 24032  25B1                     l5171:	
 24033  25B1  3001               	movlw	1
 24034  25B2                     u4245:	
 24035  25B2  36F1               	lsrf	___lwdiv@divisor+1,f
 24036  25B3  0CF0               	rrf	___lwdiv@divisor,f
 24037  25B4  0B89               	decfsz	9,f
 24038  25B5  2DB2               	goto	u4245
 24039  25B6  3001               	movlw	1
 24040  25B7  02F7               	subwf	___lwdiv@counter,f
 24041  25B8  1D03               	btfss	3,2
 24042  25B9  2D9F               	goto	l5165
 24043  25BA                     l5175:	
 24044  25BA  0876               	movf	___lwdiv@quotient+1,w
 24045  25BB  00F1               	movwf	?___lwdiv+1
 24046  25BC  0875               	movf	___lwdiv@quotient,w
 24047  25BD  00F0               	movwf	?___lwdiv
 24048  25BE  0008               	return
 24049  25BF                     __end_of___lwdiv:	
 24050                           
 24051                           	psect	text80
 24052  23A7                     __ptext80:	
 24053 ;; *************** function ___lltoft *****************
 24054 ;; Defined at:
 24055 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;  c               4    8[COMMON] unsigned long 
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;  exp             1   13[COMMON] unsigned char 
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  3    8[COMMON] float 
 24062 ;; Registers used:
 24063 ;;		wreg, status,2, status,0, pclath, cstack
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24072 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24073 ;;Total ram usage:        6 bytes
 24074 ;; Hardware stack levels used:    1
 24075 ;; Hardware stack levels required when called:    1
 24076 ;; This function calls:
 24077 ;;		___ftpack
 24078 ;; This function is called by:
 24079 ;;		_dwt_configure
 24080 ;; This function uses a non-reentrant model
 24081 ;;
 24082                           
 24083                           
 24084                           ;psect for function ___lltoft
 24085  23A7                     ___lltoft:	
 24086                           
 24087                           ;incstack = 0
 24088                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 24089  23A7  308E               	movlw	142
 24090  23A8  00FC               	movwf	??___lltoft
 24091  23A9  087C               	movf	??___lltoft,w
 24092  23AA  00FD               	movwf	___lltoft@exp
 24093  23AB                     l6129:	
 24094  23AB  30FF               	movlw	255
 24095  23AC  057B               	andwf	___lltoft@c+3,w
 24096  23AD  1903               	btfsc	3,2
 24097  23AE  2BBB               	goto	l6131
 24098  23AF  3001               	movlw	1
 24099  23B0                     u5825:	
 24100  23B0  36FB               	lsrf	___lltoft@c+3,f
 24101  23B1  0CFA               	rrf	___lltoft@c+2,f
 24102  23B2  0CF9               	rrf	___lltoft@c+1,f
 24103  23B3  0CF8               	rrf	___lltoft@c,f
 24104  23B4  0B89               	decfsz	9,f
 24105  23B5  2BB0               	goto	u5825
 24106  23B6  3001               	movlw	1
 24107  23B7  00FC               	movwf	??___lltoft
 24108  23B8  087C               	movf	??___lltoft,w
 24109  23B9  07FD               	addwf	___lltoft@exp,f
 24110  23BA  2BAB               	goto	l6129
 24111  23BB                     l6131:	
 24112  23BB  0878               	movf	___lltoft@c,w
 24113  23BC  00F0               	movwf	___ftpack@arg
 24114  23BD  0879               	movf	___lltoft@c+1,w
 24115  23BE  00F1               	movwf	___ftpack@arg+1
 24116  23BF  087A               	movf	___lltoft@c+2,w
 24117  23C0  00F2               	movwf	___ftpack@arg+2
 24118  23C1  087D               	movf	___lltoft@exp,w
 24119  23C2  00FC               	movwf	??___lltoft
 24120  23C3  087C               	movf	??___lltoft,w
 24121  23C4  00F3               	movwf	___ftpack@exp
 24122  23C5  01F4               	clrf	___ftpack@sign
 24123  23C6  319B  2333         	fcall	___ftpack
 24124  23C8  0870               	movf	?___ftpack,w
 24125  23C9  00F8               	movwf	?___lltoft
 24126  23CA  0871               	movf	?___ftpack+1,w
 24127  23CB  00F9               	movwf	?___lltoft+1
 24128  23CC  0872               	movf	?___ftpack+2,w
 24129  23CD  00FA               	movwf	?___lltoft+2
 24130  23CE  0008               	return
 24131  23CF                     __end_of___lltoft:	
 24132                           
 24133                           	psect	text81
 24134  1E56                     __ptext81:	
 24135 ;; *************** function ___fttol *****************
 24136 ;; Defined at:
 24137 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 24138 ;; Parameters:    Size  Location     Type
 24139 ;;  f1              3   16[BANK0 ] float 
 24140 ;; Auto vars:     Size  Location     Type
 24141 ;;  lval            4   25[BANK0 ] unsigned long 
 24142 ;;  exp1            1   29[BANK0 ] unsigned char 
 24143 ;;  sign1           1   24[BANK0 ] unsigned char 
 24144 ;; Return value:  Size  Location     Type
 24145 ;;                  4   16[BANK0 ] long 
 24146 ;; Registers used:
 24147 ;;		wreg, status,2, status,0
 24148 ;; Tracked objects:
 24149 ;;		On entry : 0/0
 24150 ;;		On exit  : 0/0
 24151 ;;		Unchanged: 0/0
 24152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24153 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24154 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24155 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24156 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24157 ;;Total ram usage:       14 bytes
 24158 ;; Hardware stack levels used:    1
 24159 ;; This function calls:
 24160 ;;		Nothing
 24161 ;; This function is called by:
 24162 ;;		_dwt_configure
 24163 ;; This function uses a non-reentrant model
 24164 ;;
 24165                           
 24166                           
 24167                           ;psect for function ___fttol
 24168  1E56                     ___fttol:	
 24169                           
 24170                           ;incstack = 0
 24171                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 24172  1E56  0140               	movlb	0	; select bank0
 24173  1E57  0830               	movf	___fttol@f1,w
 24174  1E58  00B4               	movwf	??___fttol
 24175  1E59  0831               	movf	___fttol@f1+1,w
 24176  1E5A  00B5               	movwf	??___fttol+1
 24177  1E5B  0832               	movf	___fttol@f1+2,w
 24178  1E5C  00B6               	movwf	??___fttol+2
 24179  1E5D  1003               	clrc
 24180  1E5E  0D35               	rlf	??___fttol+1,w
 24181  1E5F  0D36               	rlf	??___fttol+2,w
 24182  1E60  00B7               	movwf	??___fttol+3
 24183  1E61  0837               	movf	??___fttol+3,w
 24184  1E62  00BD               	movwf	___fttol@exp1
 24185  1E63  083D               	movf	___fttol@exp1,w
 24186  1E64  1D03               	btfss	3,2
 24187  1E65  2E6F               	goto	l6089
 24188  1E66  3000               	movlw	0
 24189  1E67  00B3               	movwf	?___fttol+3
 24190  1E68  3000               	movlw	0
 24191  1E69  00B2               	movwf	?___fttol+2
 24192  1E6A  3000               	movlw	0
 24193  1E6B  00B1               	movwf	?___fttol+1
 24194  1E6C  3000               	movlw	0
 24195  1E6D  00B0               	movwf	?___fttol
 24196  1E6E  0008               	return
 24197  1E6F                     l6089:	
 24198  1E6F  0830               	movf	___fttol@f1,w
 24199  1E70  00B4               	movwf	??___fttol
 24200  1E71  0831               	movf	___fttol@f1+1,w
 24201  1E72  00B5               	movwf	??___fttol+1
 24202  1E73  0832               	movf	___fttol@f1+2,w
 24203  1E74  00B6               	movwf	??___fttol+2
 24204  1E75  3017               	movlw	23
 24205  1E76                     u5735:	
 24206  1E76  36B6               	lsrf	??___fttol+2,f
 24207  1E77  0CB5               	rrf	??___fttol+1,f
 24208  1E78  0CB4               	rrf	??___fttol,f
 24209  1E79  0B89               	decfsz	9,f
 24210  1E7A  2E76               	goto	u5735
 24211  1E7B  0834               	movf	??___fttol,w
 24212  1E7C  00B7               	movwf	??___fttol+3
 24213  1E7D  0837               	movf	??___fttol+3,w
 24214  1E7E  00B8               	movwf	___fttol@sign1
 24215  1E7F  17B1               	bsf	___fttol@f1+1,7
 24216  1E80  30FF               	movlw	255
 24217  1E81  05B0               	andwf	___fttol@f1,f
 24218  1E82  30FF               	movlw	255
 24219  1E83  05B1               	andwf	___fttol@f1+1,f
 24220  1E84  3000               	movlw	0
 24221  1E85  05B2               	andwf	___fttol@f1+2,f
 24222  1E86  0830               	movf	___fttol@f1,w
 24223  1E87  00B9               	movwf	___fttol@lval
 24224  1E88  0831               	movf	___fttol@f1+1,w
 24225  1E89  00BA               	movwf	___fttol@lval+1
 24226  1E8A  0832               	movf	___fttol@f1+2,w
 24227  1E8B  00BB               	movwf	___fttol@lval+2
 24228  1E8C  01BC               	clrf	___fttol@lval+3
 24229  1E8D  308E               	movlw	142
 24230  1E8E  02BD               	subwf	___fttol@exp1,f
 24231  1E8F  1FBD               	btfss	___fttol@exp1,7
 24232  1E90  2EAD               	goto	l6109
 24233  1E91  083D               	movf	___fttol@exp1,w
 24234  1E92  3A80               	xorlw	128
 24235  1E93  3E8F               	addlw	143
 24236  1E94  1803               	skipnc
 24237  1E95  2E9F               	goto	l6107
 24238  1E96  3000               	movlw	0
 24239  1E97  00B3               	movwf	?___fttol+3
 24240  1E98  3000               	movlw	0
 24241  1E99  00B2               	movwf	?___fttol+2
 24242  1E9A  3000               	movlw	0
 24243  1E9B  00B1               	movwf	?___fttol+1
 24244  1E9C  3000               	movlw	0
 24245  1E9D  00B0               	movwf	?___fttol
 24246  1E9E  0008               	return
 24247  1E9F                     l6107:	
 24248  1E9F  3001               	movlw	1
 24249  1EA0                     u5765:	
 24250  1EA0  36BC               	lsrf	___fttol@lval+3,f
 24251  1EA1  0CBB               	rrf	___fttol@lval+2,f
 24252  1EA2  0CBA               	rrf	___fttol@lval+1,f
 24253  1EA3  0CB9               	rrf	___fttol@lval,f
 24254  1EA4  0B89               	decfsz	9,f
 24255  1EA5  2EA0               	goto	u5765
 24256  1EA6  3001               	movlw	1
 24257  1EA7  00B4               	movwf	??___fttol
 24258  1EA8  0834               	movf	??___fttol,w
 24259  1EA9  07BD               	addwf	___fttol@exp1,f
 24260  1EAA  1903               	btfsc	3,2
 24261  1EAB  2EC6               	goto	l6117
 24262  1EAC  2E9F               	goto	l6107
 24263  1EAD                     l6109:	
 24264  1EAD  3018               	movlw	24
 24265  1EAE  023D               	subwf	___fttol@exp1,w
 24266  1EAF  1C03               	skipc
 24267  1EB0  2EC3               	goto	l2028
 24268  1EB1  3000               	movlw	0
 24269  1EB2  00B3               	movwf	?___fttol+3
 24270  1EB3  3000               	movlw	0
 24271  1EB4  00B2               	movwf	?___fttol+2
 24272  1EB5  3000               	movlw	0
 24273  1EB6  00B1               	movwf	?___fttol+1
 24274  1EB7  3000               	movlw	0
 24275  1EB8  00B0               	movwf	?___fttol
 24276  1EB9  0008               	return
 24277  1EBA                     l6115:	
 24278  1EBA  3001               	movlw	1
 24279  1EBB                     u5795:	
 24280  1EBB  35B9               	lslf	___fttol@lval,f
 24281  1EBC  0DBA               	rlf	___fttol@lval+1,f
 24282  1EBD  0DBB               	rlf	___fttol@lval+2,f
 24283  1EBE  0DBC               	rlf	___fttol@lval+3,f
 24284  1EBF  0B89               	decfsz	9,f
 24285  1EC0  2EBB               	goto	u5795
 24286  1EC1  3001               	movlw	1
 24287  1EC2  02BD               	subwf	___fttol@exp1,f
 24288  1EC3                     l2028:	
 24289  1EC3  083D               	movf	___fttol@exp1,w
 24290  1EC4  1D03               	btfss	3,2
 24291  1EC5  2EBA               	goto	l6115
 24292  1EC6                     l6117:	
 24293  1EC6  0838               	movf	___fttol@sign1,w
 24294  1EC7  1903               	btfsc	3,2
 24295  1EC8  2ED4               	goto	l6121
 24296  1EC9  09B9               	comf	___fttol@lval,f
 24297  1ECA  09BA               	comf	___fttol@lval+1,f
 24298  1ECB  09BB               	comf	___fttol@lval+2,f
 24299  1ECC  09BC               	comf	___fttol@lval+3,f
 24300  1ECD  0AB9               	incf	___fttol@lval,f
 24301  1ECE  1903               	skipnz
 24302  1ECF  0ABA               	incf	___fttol@lval+1,f
 24303  1ED0  1903               	skipnz
 24304  1ED1  0ABB               	incf	___fttol@lval+2,f
 24305  1ED2  1903               	skipnz
 24306  1ED3  0ABC               	incf	___fttol@lval+3,f
 24307  1ED4                     l6121:	
 24308  1ED4  083C               	movf	___fttol@lval+3,w
 24309  1ED5  00B3               	movwf	?___fttol+3
 24310  1ED6  083B               	movf	___fttol@lval+2,w
 24311  1ED7  00B2               	movwf	?___fttol+2
 24312  1ED8  083A               	movf	___fttol@lval+1,w
 24313  1ED9  00B1               	movwf	?___fttol+1
 24314  1EDA  0839               	movf	___fttol@lval,w
 24315  1EDB  00B0               	movwf	?___fttol
 24316  1EDC  0008               	return
 24317  1EDD                     __end_of___fttol:	
 24318                           
 24319                           	psect	text82
 24320  1202                     __ptext82:	
 24321 ;; *************** function ___ftmul *****************
 24322 ;; Defined at:
 24323 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 24324 ;; Parameters:    Size  Location     Type
 24325 ;;  f1              3    0[BANK0 ] float 
 24326 ;;  f2              3    3[BANK0 ] float 
 24327 ;; Auto vars:     Size  Location     Type
 24328 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 24329 ;;  sign            1   15[BANK0 ] unsigned char 
 24330 ;;  cntr            1   14[BANK0 ] unsigned char 
 24331 ;;  exp             1   10[BANK0 ] unsigned char 
 24332 ;; Return value:  Size  Location     Type
 24333 ;;                  3    0[BANK0 ] float 
 24334 ;; Registers used:
 24335 ;;		wreg, status,2, status,0, pclath, cstack
 24336 ;; Tracked objects:
 24337 ;;		On entry : 0/0
 24338 ;;		On exit  : 0/0
 24339 ;;		Unchanged: 0/0
 24340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24341 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24342 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24343 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24344 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24345 ;;Total ram usage:       16 bytes
 24346 ;; Hardware stack levels used:    1
 24347 ;; Hardware stack levels required when called:    1
 24348 ;; This function calls:
 24349 ;;		___ftpack
 24350 ;; This function is called by:
 24351 ;;		_dwt_configure
 24352 ;;		_dwt_convertrawtemperature
 24353 ;;		_dwt_convertrawvoltage
 24354 ;; This function uses a non-reentrant model
 24355 ;;
 24356                           
 24357                           
 24358                           ;psect for function ___ftmul
 24359  1202                     ___ftmul:	
 24360                           
 24361                           ;incstack = 0
 24362                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 24363  1202  0140               	movlb	0	; select bank0
 24364  1203  0820               	movf	___ftmul@f1,w
 24365  1204  00A6               	movwf	??___ftmul
 24366  1205  0821               	movf	___ftmul@f1+1,w
 24367  1206  00A7               	movwf	??___ftmul+1
 24368  1207  0822               	movf	___ftmul@f1+2,w
 24369  1208  00A8               	movwf	??___ftmul+2
 24370  1209  1003               	clrc
 24371  120A  0D27               	rlf	??___ftmul+1,w
 24372  120B  0D28               	rlf	??___ftmul+2,w
 24373  120C  00A9               	movwf	??___ftmul+3
 24374  120D  0829               	movf	??___ftmul+3,w
 24375  120E  00AA               	movwf	___ftmul@exp
 24376  120F  082A               	movf	___ftmul@exp,w
 24377  1210  1D03               	btfss	3,2
 24378  1211  2A19               	goto	l6039
 24379  1212  3000               	movlw	0
 24380  1213  00A0               	movwf	?___ftmul
 24381  1214  3000               	movlw	0
 24382  1215  00A1               	movwf	?___ftmul+1
 24383  1216  3000               	movlw	0
 24384  1217  00A2               	movwf	?___ftmul+2
 24385  1218  0008               	return
 24386  1219                     l6039:	
 24387  1219  0823               	movf	___ftmul@f2,w
 24388  121A  00A6               	movwf	??___ftmul
 24389  121B  0824               	movf	___ftmul@f2+1,w
 24390  121C  00A7               	movwf	??___ftmul+1
 24391  121D  0825               	movf	___ftmul@f2+2,w
 24392  121E  00A8               	movwf	??___ftmul+2
 24393  121F  1003               	clrc
 24394  1220  0D27               	rlf	??___ftmul+1,w
 24395  1221  0D28               	rlf	??___ftmul+2,w
 24396  1222  00A9               	movwf	??___ftmul+3
 24397  1223  0829               	movf	??___ftmul+3,w
 24398  1224  00AF               	movwf	___ftmul@sign
 24399  1225  082F               	movf	___ftmul@sign,w
 24400  1226  1D03               	btfss	3,2
 24401  1227  2A2F               	goto	l6045
 24402  1228  3000               	movlw	0
 24403  1229  00A0               	movwf	?___ftmul
 24404  122A  3000               	movlw	0
 24405  122B  00A1               	movwf	?___ftmul+1
 24406  122C  3000               	movlw	0
 24407  122D  00A2               	movwf	?___ftmul+2
 24408  122E  0008               	return
 24409  122F                     l6045:	
 24410  122F  082F               	movf	___ftmul@sign,w
 24411  1230  3E7B               	addlw	123
 24412  1231  00A6               	movwf	??___ftmul
 24413  1232  0826               	movf	??___ftmul,w
 24414  1233  07AA               	addwf	___ftmul@exp,f
 24415  1234  0820               	movf	___ftmul@f1,w
 24416  1235  00A6               	movwf	??___ftmul
 24417  1236  0821               	movf	___ftmul@f1+1,w
 24418  1237  00A7               	movwf	??___ftmul+1
 24419  1238  0822               	movf	___ftmul@f1+2,w
 24420  1239  00A8               	movwf	??___ftmul+2
 24421  123A  3010               	movlw	16
 24422  123B                     u5625:	
 24423  123B  36A8               	lsrf	??___ftmul+2,f
 24424  123C  0CA7               	rrf	??___ftmul+1,f
 24425  123D  0CA6               	rrf	??___ftmul,f
 24426  123E  0B89               	decfsz	9,f
 24427  123F  2A3B               	goto	u5625
 24428  1240  0826               	movf	??___ftmul,w
 24429  1241  00A9               	movwf	??___ftmul+3
 24430  1242  0829               	movf	??___ftmul+3,w
 24431  1243  00AF               	movwf	___ftmul@sign
 24432  1244  0823               	movf	___ftmul@f2,w
 24433  1245  00A6               	movwf	??___ftmul
 24434  1246  0824               	movf	___ftmul@f2+1,w
 24435  1247  00A7               	movwf	??___ftmul+1
 24436  1248  0825               	movf	___ftmul@f2+2,w
 24437  1249  00A8               	movwf	??___ftmul+2
 24438  124A  3010               	movlw	16
 24439  124B                     u5635:	
 24440  124B  36A8               	lsrf	??___ftmul+2,f
 24441  124C  0CA7               	rrf	??___ftmul+1,f
 24442  124D  0CA6               	rrf	??___ftmul,f
 24443  124E  0B89               	decfsz	9,f
 24444  124F  2A4B               	goto	u5635
 24445  1250  0826               	movf	??___ftmul,w
 24446  1251  00A9               	movwf	??___ftmul+3
 24447  1252  0829               	movf	??___ftmul+3,w
 24448  1253  06AF               	xorwf	___ftmul@sign,f
 24449  1254  3080               	movlw	128
 24450  1255  00A6               	movwf	??___ftmul
 24451  1256  0826               	movf	??___ftmul,w
 24452  1257  05AF               	andwf	___ftmul@sign,f
 24453  1258  17A1               	bsf	___ftmul@f1+1,7
 24454  1259  17A4               	bsf	___ftmul@f2+1,7
 24455  125A  30FF               	movlw	255
 24456  125B  05A3               	andwf	___ftmul@f2,f
 24457  125C  30FF               	movlw	255
 24458  125D  05A4               	andwf	___ftmul@f2+1,f
 24459  125E  3000               	movlw	0
 24460  125F  05A5               	andwf	___ftmul@f2+2,f
 24461  1260  3000               	movlw	0
 24462  1261  00AB               	movwf	___ftmul@f3_as_product
 24463  1262  3000               	movlw	0
 24464  1263  00AC               	movwf	___ftmul@f3_as_product+1
 24465  1264  3000               	movlw	0
 24466  1265  00AD               	movwf	___ftmul@f3_as_product+2
 24467  1266  3007               	movlw	7
 24468  1267  00A6               	movwf	??___ftmul
 24469  1268  0826               	movf	??___ftmul,w
 24470  1269  00AE               	movwf	___ftmul@cntr
 24471  126A                     l6057:	
 24472  126A  1C20               	btfss	___ftmul@f1,0
 24473  126B  2A72               	goto	l6061
 24474  126C  0823               	movf	___ftmul@f2,w
 24475  126D  07AB               	addwf	___ftmul@f3_as_product,f
 24476  126E  0824               	movf	___ftmul@f2+1,w
 24477  126F  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 24478  1270  0825               	movf	___ftmul@f2+2,w
 24479  1271  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 24480  1272                     l6061:	
 24481  1272  3001               	movlw	1
 24482  1273                     u5655:	
 24483  1273  36A2               	lsrf	___ftmul@f1+2,f
 24484  1274  0CA1               	rrf	___ftmul@f1+1,f
 24485  1275  0CA0               	rrf	___ftmul@f1,f
 24486  1276  0B89               	decfsz	9,f
 24487  1277  2A73               	goto	u5655
 24488  1278  3001               	movlw	1
 24489  1279                     u5665:	
 24490  1279  35A3               	lslf	___ftmul@f2,f
 24491  127A  0DA4               	rlf	___ftmul@f2+1,f
 24492  127B  0DA5               	rlf	___ftmul@f2+2,f
 24493  127C  0B89               	decfsz	9,f
 24494  127D  2A79               	goto	u5665
 24495  127E  3001               	movlw	1
 24496  127F  02AE               	subwf	___ftmul@cntr,f
 24497  1280  1D03               	btfss	3,2
 24498  1281  2A6A               	goto	l6057
 24499  1282  3009               	movlw	9
 24500  1283  00A6               	movwf	??___ftmul
 24501  1284  0826               	movf	??___ftmul,w
 24502  1285  00AE               	movwf	___ftmul@cntr
 24503  1286                     l6069:	
 24504  1286  1C20               	btfss	___ftmul@f1,0
 24505  1287  2A8E               	goto	l6073
 24506  1288  0823               	movf	___ftmul@f2,w
 24507  1289  07AB               	addwf	___ftmul@f3_as_product,f
 24508  128A  0824               	movf	___ftmul@f2+1,w
 24509  128B  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 24510  128C  0825               	movf	___ftmul@f2+2,w
 24511  128D  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 24512  128E                     l6073:	
 24513  128E  3001               	movlw	1
 24514  128F                     u5695:	
 24515  128F  36A2               	lsrf	___ftmul@f1+2,f
 24516  1290  0CA1               	rrf	___ftmul@f1+1,f
 24517  1291  0CA0               	rrf	___ftmul@f1,f
 24518  1292  0B89               	decfsz	9,f
 24519  1293  2A8F               	goto	u5695
 24520  1294  3001               	movlw	1
 24521  1295                     u5705:	
 24522  1295  36AD               	lsrf	___ftmul@f3_as_product+2,f
 24523  1296  0CAC               	rrf	___ftmul@f3_as_product+1,f
 24524  1297  0CAB               	rrf	___ftmul@f3_as_product,f
 24525  1298  0B89               	decfsz	9,f
 24526  1299  2A95               	goto	u5705
 24527  129A  3001               	movlw	1
 24528  129B  02AE               	subwf	___ftmul@cntr,f
 24529  129C  1D03               	btfss	3,2
 24530  129D  2A86               	goto	l6069
 24531  129E  082B               	movf	___ftmul@f3_as_product,w
 24532  129F  00F0               	movwf	___ftpack@arg
 24533  12A0  082C               	movf	___ftmul@f3_as_product+1,w
 24534  12A1  00F1               	movwf	___ftpack@arg+1
 24535  12A2  082D               	movf	___ftmul@f3_as_product+2,w
 24536  12A3  00F2               	movwf	___ftpack@arg+2
 24537  12A4  082A               	movf	___ftmul@exp,w
 24538  12A5  00A6               	movwf	??___ftmul
 24539  12A6  0826               	movf	??___ftmul,w
 24540  12A7  00F3               	movwf	___ftpack@exp
 24541  12A8  082F               	movf	___ftmul@sign,w
 24542  12A9  00A7               	movwf	??___ftmul+1
 24543  12AA  0827               	movf	??___ftmul+1,w
 24544  12AB  00F4               	movwf	___ftpack@sign
 24545  12AC  319B  2333         	fcall	___ftpack
 24546  12AE  0870               	movf	?___ftpack,w
 24547  12AF  0140               	movlb	0	; select bank0
 24548  12B0  00A0               	movwf	?___ftmul
 24549  12B1  0871               	movf	?___ftpack+1,w
 24550  12B2  00A1               	movwf	?___ftmul+1
 24551  12B3  0872               	movf	?___ftpack+2,w
 24552  12B4  00A2               	movwf	?___ftmul+2
 24553  12B5  0008               	return
 24554  12B6                     __end_of___ftmul:	
 24555                           
 24556                           	psect	text83
 24557  1B33                     __ptext83:	
 24558 ;; *************** function ___ftpack *****************
 24559 ;; Defined at:
 24560 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 24561 ;; Parameters:    Size  Location     Type
 24562 ;;  arg             3    0[COMMON] unsigned um
 24563 ;;  exp             1    3[COMMON] unsigned char 
 24564 ;;  sign            1    4[COMMON] unsigned char 
 24565 ;; Auto vars:     Size  Location     Type
 24566 ;;		None
 24567 ;; Return value:  Size  Location     Type
 24568 ;;                  3    0[COMMON] float 
 24569 ;; Registers used:
 24570 ;;		wreg, status,2, status,0
 24571 ;; Tracked objects:
 24572 ;;		On entry : 0/0
 24573 ;;		On exit  : 0/0
 24574 ;;		Unchanged: 0/0
 24575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24576 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24578 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24579 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24580 ;;Total ram usage:        8 bytes
 24581 ;; Hardware stack levels used:    1
 24582 ;; This function calls:
 24583 ;;		Nothing
 24584 ;; This function is called by:
 24585 ;;		___ftmul
 24586 ;;		___lltoft
 24587 ;;		___ftadd
 24588 ;;		___awtoft
 24589 ;;		___ftdiv
 24590 ;; This function uses a non-reentrant model
 24591 ;;
 24592                           
 24593                           
 24594                           ;psect for function ___ftpack
 24595  1B33                     ___ftpack:	
 24596                           
 24597                           ;incstack = 0
 24598                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 24599  1B33  0873               	movf	___ftpack@exp,w
 24600  1B34  1903               	btfsc	3,2
 24601  1B35  2B3B               	goto	l5765
 24602  1B36  0872               	movf	___ftpack@arg+2,w
 24603  1B37  0471               	iorwf	___ftpack@arg+1,w
 24604  1B38  0470               	iorwf	___ftpack@arg,w
 24605  1B39  1D03               	skipz
 24606  1B3A  2B4C               	goto	l5771
 24607  1B3B                     l5765:	
 24608  1B3B  3000               	movlw	0
 24609  1B3C  00F0               	movwf	?___ftpack
 24610  1B3D  3000               	movlw	0
 24611  1B3E  00F1               	movwf	?___ftpack+1
 24612  1B3F  3000               	movlw	0
 24613  1B40  00F2               	movwf	?___ftpack+2
 24614  1B41  0008               	return
 24615  1B42                     l5769:	
 24616  1B42  3001               	movlw	1
 24617  1B43  00F5               	movwf	??___ftpack
 24618  1B44  0875               	movf	??___ftpack,w
 24619  1B45  07F3               	addwf	___ftpack@exp,f
 24620  1B46  3001               	movlw	1
 24621  1B47                     u5265:	
 24622  1B47  36F2               	lsrf	___ftpack@arg+2,f
 24623  1B48  0CF1               	rrf	___ftpack@arg+1,f
 24624  1B49  0CF0               	rrf	___ftpack@arg,f
 24625  1B4A  0B89               	decfsz	9,f
 24626  1B4B  2B47               	goto	u5265
 24627  1B4C                     l5771:	
 24628  1B4C  30FE               	movlw	254
 24629  1B4D  0572               	andwf	___ftpack@arg+2,w
 24630  1B4E  1903               	btfsc	3,2
 24631  1B4F  2B65               	goto	l1937
 24632  1B50  2B42               	goto	l5769
 24633  1B51                     l5773:	
 24634  1B51  3001               	movlw	1
 24635  1B52  00F5               	movwf	??___ftpack
 24636  1B53  0875               	movf	??___ftpack,w
 24637  1B54  07F3               	addwf	___ftpack@exp,f
 24638  1B55  3001               	movlw	1
 24639  1B56  07F0               	addwf	___ftpack@arg,f
 24640  1B57  3000               	movlw	0
 24641  1B58  1803               	skipnc
 24642  1B59  3001               	movlw	1
 24643  1B5A  07F1               	addwf	___ftpack@arg+1,f
 24644  1B5B  3000               	movlw	0
 24645  1B5C  1803               	skipnc
 24646  1B5D  3001               	movlw	1
 24647  1B5E  07F2               	addwf	___ftpack@arg+2,f
 24648  1B5F  3001               	movlw	1
 24649  1B60                     u5285:	
 24650  1B60  36F2               	lsrf	___ftpack@arg+2,f
 24651  1B61  0CF1               	rrf	___ftpack@arg+1,f
 24652  1B62  0CF0               	rrf	___ftpack@arg,f
 24653  1B63  0B89               	decfsz	9,f
 24654  1B64  2B60               	goto	u5285
 24655  1B65                     l1937:	
 24656  1B65  30FF               	movlw	255
 24657  1B66  0572               	andwf	___ftpack@arg+2,w
 24658  1B67  1903               	btfsc	3,2
 24659  1B68  2B72               	goto	l5781
 24660  1B69  2B51               	goto	l5773
 24661  1B6A                     l5779:	
 24662  1B6A  3001               	movlw	1
 24663  1B6B  02F3               	subwf	___ftpack@exp,f
 24664  1B6C  3001               	movlw	1
 24665  1B6D                     u5305:	
 24666  1B6D  35F0               	lslf	___ftpack@arg,f
 24667  1B6E  0DF1               	rlf	___ftpack@arg+1,f
 24668  1B6F  0DF2               	rlf	___ftpack@arg+2,f
 24669  1B70  0B89               	decfsz	9,f
 24670  1B71  2B6D               	goto	u5305
 24671  1B72                     l5781:	
 24672  1B72  1BF1               	btfsc	___ftpack@arg+1,7
 24673  1B73  2B78               	goto	l1944
 24674  1B74  3002               	movlw	2
 24675  1B75  0273               	subwf	___ftpack@exp,w
 24676  1B76  1803               	skipnc
 24677  1B77  2B6A               	goto	l5779
 24678  1B78                     l1944:	
 24679  1B78  1873               	btfsc	___ftpack@exp,0
 24680  1B79  2B80               	goto	l1945
 24681  1B7A  30FF               	movlw	255
 24682  1B7B  05F0               	andwf	___ftpack@arg,f
 24683  1B7C  307F               	movlw	127
 24684  1B7D  05F1               	andwf	___ftpack@arg+1,f
 24685  1B7E  30FF               	movlw	255
 24686  1B7F  05F2               	andwf	___ftpack@arg+2,f
 24687  1B80                     l1945:	
 24688  1B80  1003               	clrc
 24689  1B81  0CF3               	rrf	___ftpack@exp,f
 24690  1B82  0873               	movf	___ftpack@exp,w
 24691  1B83  00F5               	movwf	??___ftpack
 24692  1B84  01F6               	clrf	??___ftpack+1
 24693  1B85  01F7               	clrf	??___ftpack+2
 24694  1B86  3010               	movlw	16
 24695  1B87                     u5345:	
 24696  1B87  35F5               	lslf	??___ftpack,f
 24697  1B88  0DF6               	rlf	??___ftpack+1,f
 24698  1B89  0DF7               	rlf	??___ftpack+2,f
 24699  1B8A  0B89               	decfsz	9,f
 24700  1B8B  2B87               	goto	u5345
 24701  1B8C  0875               	movf	??___ftpack,w
 24702  1B8D  04F0               	iorwf	___ftpack@arg,f
 24703  1B8E  0876               	movf	??___ftpack+1,w
 24704  1B8F  04F1               	iorwf	___ftpack@arg+1,f
 24705  1B90  0877               	movf	??___ftpack+2,w
 24706  1B91  04F2               	iorwf	___ftpack@arg+2,f
 24707  1B92  0874               	movf	___ftpack@sign,w
 24708  1B93  1903               	btfsc	3,2
 24709  1B94  0008               	return
 24710  1B95  17F2               	bsf	___ftpack@arg+2,7
 24711  1B96  0008               	return
 24712  1B97                     __end_of___ftpack:	
 24713                           
 24714                           	psect	text84
 24715  20EB                     __ptext84:	
 24716 ;; *************** function _SYSTEM_Initialize *****************
 24717 ;; Defined at:
 24718 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24719 ;; Parameters:    Size  Location     Type
 24720 ;;		None
 24721 ;; Auto vars:     Size  Location     Type
 24722 ;;		None
 24723 ;; Return value:  Size  Location     Type
 24724 ;;                  1    wreg      void 
 24725 ;; Registers used:
 24726 ;;		wreg, status,2, status,0, pclath, cstack
 24727 ;; Tracked objects:
 24728 ;;		On entry : 0/0
 24729 ;;		On exit  : 0/0
 24730 ;;		Unchanged: 0/0
 24731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24736 ;;Total ram usage:        0 bytes
 24737 ;; Hardware stack levels used:    1
 24738 ;; Hardware stack levels required when called:    1
 24739 ;; This function calls:
 24740 ;;		_EUSART_Initialize
 24741 ;;		_OSCILLATOR_Initialize
 24742 ;;		_PIN_MANAGER_Initialize
 24743 ;;		_PMD_Initialize
 24744 ;; This function is called by:
 24745 ;;		_main
 24746 ;; This function uses a non-reentrant model
 24747 ;;
 24748                           
 24749                           
 24750                           ;psect for function _SYSTEM_Initialize
 24751  20EB                     _SYSTEM_Initialize:	
 24752                           
 24753                           ;mcc.c: 52: OSCILLATOR_Initialize();
 24754                           
 24755                           ;incstack = 0
 24756                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 24757  20EB  31A0  20C1  31A0   	fcall	_OSCILLATOR_Initialize
 24758                           
 24759                           ;mcc.c: 53: PMD_Initialize();
 24760  20EE  31A0  20B1  31A0   	fcall	_PMD_Initialize
 24761                           
 24762                           ;mcc.c: 55: PIN_MANAGER_Initialize();
 24763  20F1  31A7  276E  31A0   	fcall	_PIN_MANAGER_Initialize
 24764                           
 24765                           ;mcc.c: 57: EUSART_Initialize();
 24766  20F4  31A0  20CA         	fcall	_EUSART_Initialize
 24767  20F6  0008               	return
 24768  20F7                     __end_of_SYSTEM_Initialize:	
 24769                           
 24770                           	psect	text85
 24771  20B1                     __ptext85:	
 24772 ;; *************** function _PMD_Initialize *****************
 24773 ;; Defined at:
 24774 ;;		line 76 in file "mcc_generated_files/mcc.c"
 24775 ;; Parameters:    Size  Location     Type
 24776 ;;		None
 24777 ;; Auto vars:     Size  Location     Type
 24778 ;;		None
 24779 ;; Return value:  Size  Location     Type
 24780 ;;                  1    wreg      void 
 24781 ;; Registers used:
 24782 ;;		status,2
 24783 ;; Tracked objects:
 24784 ;;		On entry : 0/0
 24785 ;;		On exit  : 0/0
 24786 ;;		Unchanged: 0/0
 24787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24792 ;;Total ram usage:        0 bytes
 24793 ;; Hardware stack levels used:    1
 24794 ;; This function calls:
 24795 ;;		Nothing
 24796 ;; This function is called by:
 24797 ;;		_SYSTEM_Initialize
 24798 ;; This function uses a non-reentrant model
 24799 ;;
 24800                           
 24801                           
 24802                           ;psect for function _PMD_Initialize
 24803  20B1                     _PMD_Initialize:	
 24804                           
 24805                           ;mcc.c: 79: PMD0 = 0x00;
 24806                           
 24807                           ;incstack = 0
 24808                           ; Regs used in _PMD_Initialize: [status,2]
 24809  20B1  014F               	movlb	15	; select bank15
 24810  20B2  0196               	clrf	22	;volatile
 24811                           
 24812                           ;mcc.c: 81: PMD1 = 0x00;
 24813  20B3  0197               	clrf	23	;volatile
 24814                           
 24815                           ;mcc.c: 83: PMD2 = 0x00;
 24816  20B4  0198               	clrf	24	;volatile
 24817                           
 24818                           ;mcc.c: 85: PMD3 = 0x00;
 24819  20B5  0199               	clrf	25	;volatile
 24820                           
 24821                           ;mcc.c: 87: PMD4 = 0x00;
 24822  20B6  019A               	clrf	26	;volatile
 24823                           
 24824                           ;mcc.c: 89: PMD5 = 0x00;
 24825  20B7  019B               	clrf	27	;volatile
 24826  20B8  0008               	return
 24827  20B9                     __end_of_PMD_Initialize:	
 24828                           
 24829                           	psect	text86
 24830  276E                     __ptext86:	
 24831 ;; *************** function _PIN_MANAGER_Initialize *****************
 24832 ;; Defined at:
 24833 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 24834 ;; Parameters:    Size  Location     Type
 24835 ;;		None
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;  state           1    0[COMMON] unsigned char 
 24838 ;; Return value:  Size  Location     Type
 24839 ;;                  1    wreg      void 
 24840 ;; Registers used:
 24841 ;;		wreg, status,2
 24842 ;; Tracked objects:
 24843 ;;		On entry : 0/0
 24844 ;;		On exit  : 0/0
 24845 ;;		Unchanged: 0/0
 24846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24851 ;;Total ram usage:        1 bytes
 24852 ;; Hardware stack levels used:    1
 24853 ;; This function calls:
 24854 ;;		Nothing
 24855 ;; This function is called by:
 24856 ;;		_SYSTEM_Initialize
 24857 ;; This function uses a non-reentrant model
 24858 ;;
 24859                           
 24860                           
 24861                           ;psect for function _PIN_MANAGER_Initialize
 24862  276E                     _PIN_MANAGER_Initialize:	
 24863                           
 24864                           ;pin_manager.c: 57: LATE = 0x00;
 24865                           
 24866                           ;incstack = 0
 24867                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 24868  276E  0140               	movlb	0	; select bank0
 24869  276F  019A               	clrf	26	;volatile
 24870                           
 24871                           ;pin_manager.c: 58: LATD = 0x01;
 24872  2770  3001               	movlw	1
 24873  2771  0099               	movwf	25	;volatile
 24874                           
 24875                           ;pin_manager.c: 59: LATA = 0x00;
 24876  2772  0196               	clrf	22	;volatile
 24877                           
 24878                           ;pin_manager.c: 60: LATB = 0x00;
 24879  2773  0197               	clrf	23	;volatile
 24880                           
 24881                           ;pin_manager.c: 61: LATC = 0x00;
 24882  2774  0198               	clrf	24	;volatile
 24883                           
 24884                           ;pin_manager.c: 66: TRISE = 0x07;
 24885  2775  3007               	movlw	7
 24886  2776  0095               	movwf	21	;volatile
 24887                           
 24888                           ;pin_manager.c: 67: TRISA = 0x3F;
 24889  2777  303F               	movlw	63
 24890  2778  0091               	movwf	17	;volatile
 24891                           
 24892                           ;pin_manager.c: 68: TRISB = 0xEF;
 24893  2779  30EF               	movlw	239
 24894  277A  0092               	movwf	18	;volatile
 24895                           
 24896                           ;pin_manager.c: 69: TRISC = 0x9F;
 24897  277B  309F               	movlw	159
 24898  277C  0093               	movwf	19	;volatile
 24899                           
 24900                           ;pin_manager.c: 70: TRISD = 0xFE;
 24901  277D  30FE               	movlw	254
 24902  277E  0094               	movwf	20	;volatile
 24903                           
 24904                           ;pin_manager.c: 75: ANSELD = 0xFE;
 24905  277F  30FE               	movlw	254
 24906  2780  017E               	movlb	62	; select bank62
 24907  2781  00D9               	movwf	89	;volatile
 24908                           
 24909                           ;pin_manager.c: 76: ANSELC = 0x00;
 24910  2782  01CE               	clrf	78	;volatile
 24911                           
 24912                           ;pin_manager.c: 77: ANSELB = 0xFF;
 24913  2783  30FF               	movlw	255
 24914  2784  00C3               	movwf	67	;volatile
 24915                           
 24916                           ;pin_manager.c: 78: ANSELE = 0x07;
 24917  2785  3007               	movlw	7
 24918  2786  00E4               	movwf	100	;volatile
 24919                           
 24920                           ;pin_manager.c: 79: ANSELA = 0xFF;
 24921  2787  30FF               	movlw	255
 24922  2788  00B8               	movwf	56	;volatile
 24923                           
 24924                           ;pin_manager.c: 84: WPUD = 0x00;
 24925  2789  01DA               	clrf	90	;volatile
 24926                           
 24927                           ;pin_manager.c: 85: WPUE = 0x00;
 24928  278A  01E5               	clrf	101	;volatile
 24929                           
 24930                           ;pin_manager.c: 86: WPUB = 0x00;
 24931  278B  01C4               	clrf	68	;volatile
 24932                           
 24933                           ;pin_manager.c: 87: WPUA = 0x00;
 24934  278C  01B9               	clrf	57	;volatile
 24935                           
 24936                           ;pin_manager.c: 88: WPUC = 0x18;
 24937  278D  3018               	movlw	24
 24938  278E  00CF               	movwf	79	;volatile
 24939                           
 24940                           ;pin_manager.c: 93: ODCONE = 0x00;
 24941  278F  01E6               	clrf	102	;volatile
 24942                           
 24943                           ;pin_manager.c: 94: ODCONA = 0x00;
 24944  2790  01BA               	clrf	58	;volatile
 24945                           
 24946                           ;pin_manager.c: 95: ODCONB = 0x00;
 24947  2791  01C5               	clrf	69	;volatile
 24948                           
 24949                           ;pin_manager.c: 96: ODCONC = 0x00;
 24950  2792  01D0               	clrf	80	;volatile
 24951                           
 24952                           ;pin_manager.c: 97: ODCOND = 0x00;
 24953  2793  01DB               	clrf	91	;volatile
 24954                           
 24955                           ;pin_manager.c: 99: bool state = GIE;
 24956  2794  3000               	movlw	0
 24957  2795  1B8B               	btfsc	11,7	;volatile
 24958  2796  3001               	movlw	1
 24959  2797  00F0               	movwf	PIN_MANAGER_Initialize@state
 24960                           
 24961                           ;pin_manager.c: 100: GIE = 0;
 24962  2798  138B               	bcf	11,7	;volatile
 24963                           
 24964                           ;pin_manager.c: 101: PPSLOCK = 0x55;
 24965  2799  3055               	movlw	85
 24966  279A  017D               	movlb	61	; select bank61
 24967  279B  008F               	movwf	15	;volsfr
 24968                           
 24969                           ;pin_manager.c: 102: PPSLOCK = 0xAA;
 24970  279C  30AA               	movlw	170
 24971  279D  008F               	movwf	15	;volsfr
 24972                           
 24973                           ;pin_manager.c: 103: PPSLOCKbits.PPSLOCKED = 0x00;
 24974  279E  100F               	bcf	15,0	;volsfr
 24975                           
 24976                           ;pin_manager.c: 105: TRISCbits.TRISC5 = 0;
 24977  279F  0140               	movlb	0	; select bank0
 24978  27A0  1293               	bcf	19,5	;volatile
 24979                           
 24980                           ;pin_manager.c: 106: TRISCbits.TRISC7 = 1;
 24981  27A1  1793               	bsf	19,7	;volatile
 24982                           
 24983                           ;pin_manager.c: 107: RXPPS = 0x17;
 24984  27A2  3017               	movlw	23
 24985  27A3  017D               	movlb	61	; select bank61
 24986  27A4  00CB               	movwf	75	;volatile
 24987                           
 24988                           ;pin_manager.c: 108: RC5PPS = 0x10;
 24989  27A5  3010               	movlw	16
 24990  27A6  017E               	movlb	62	; select bank62
 24991  27A7  00A5               	movwf	37	;volatile
 24992                           
 24993                           ;pin_manager.c: 121: PPSLOCK = 0x55;
 24994  27A8  3055               	movlw	85
 24995  27A9  017D               	movlb	61	; select bank61
 24996  27AA  008F               	movwf	15	;volsfr
 24997                           
 24998                           ;pin_manager.c: 122: PPSLOCK = 0xAA;
 24999  27AB  30AA               	movlw	170
 25000  27AC  008F               	movwf	15	;volsfr
 25001                           
 25002                           ;pin_manager.c: 123: PPSLOCKbits.PPSLOCKED = 0x01;
 25003  27AD  140F               	bsf	15,0	;volsfr
 25004                           
 25005                           ;pin_manager.c: 124: GIE = state;
 25006  27AE  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 25007  27AF  2FB2               	goto	u1730
 25008  27B0  178B               	bsf	11,7	;volatile
 25009  27B1  0008               	return
 25010  27B2                     u1730:	
 25011  27B2  138B               	bcf	11,7	;volatile
 25012  27B3  0008               	return
 25013  27B4                     __end_of_PIN_MANAGER_Initialize:	
 25014                           
 25015                           	psect	text87
 25016  20C1                     __ptext87:	
 25017 ;; *************** function _OSCILLATOR_Initialize *****************
 25018 ;; Defined at:
 25019 ;;		line 62 in file "mcc_generated_files/mcc.c"
 25020 ;; Parameters:    Size  Location     Type
 25021 ;;		None
 25022 ;; Auto vars:     Size  Location     Type
 25023 ;;		None
 25024 ;; Return value:  Size  Location     Type
 25025 ;;                  1    wreg      void 
 25026 ;; Registers used:
 25027 ;;		wreg, status,2
 25028 ;; Tracked objects:
 25029 ;;		On entry : 0/0
 25030 ;;		On exit  : 0/0
 25031 ;;		Unchanged: 0/0
 25032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25037 ;;Total ram usage:        0 bytes
 25038 ;; Hardware stack levels used:    1
 25039 ;; This function calls:
 25040 ;;		Nothing
 25041 ;; This function is called by:
 25042 ;;		_SYSTEM_Initialize
 25043 ;; This function uses a non-reentrant model
 25044 ;;
 25045                           
 25046                           
 25047                           ;psect for function _OSCILLATOR_Initialize
 25048  20C1                     _OSCILLATOR_Initialize:	
 25049                           
 25050                           ;mcc.c: 65: OSCCON1 = 0x60;
 25051                           
 25052                           ;incstack = 0
 25053                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 25054  20C1  3060               	movlw	96
 25055  20C2  0151               	movlb	17	; select bank17
 25056  20C3  008D               	movwf	13	;volatile
 25057                           
 25058                           ;mcc.c: 67: OSCCON3 = 0x00;
 25059  20C4  018F               	clrf	15	;volatile
 25060                           
 25061                           ;mcc.c: 69: OSCEN = 0x00;
 25062  20C5  0191               	clrf	17	;volatile
 25063                           
 25064                           ;mcc.c: 71: OSCFRQ = 0x06;
 25065  20C6  3006               	movlw	6
 25066  20C7  0093               	movwf	19	;volatile
 25067                           
 25068                           ;mcc.c: 73: OSCTUNE = 0x00;
 25069  20C8  0192               	clrf	18	;volatile
 25070  20C9  0008               	return
 25071  20CA                     __end_of_OSCILLATOR_Initialize:	
 25072                           
 25073                           	psect	text88
 25074  20CA                     __ptext88:	
 25075 ;; *************** function _EUSART_Initialize *****************
 25076 ;; Defined at:
 25077 ;;		line 66 in file "mcc_generated_files/eusart.c"
 25078 ;; Parameters:    Size  Location     Type
 25079 ;;		None
 25080 ;; Auto vars:     Size  Location     Type
 25081 ;;		None
 25082 ;; Return value:  Size  Location     Type
 25083 ;;                  1    wreg      void 
 25084 ;; Registers used:
 25085 ;;		wreg, status,2
 25086 ;; Tracked objects:
 25087 ;;		On entry : 0/0
 25088 ;;		On exit  : 0/0
 25089 ;;		Unchanged: 0/0
 25090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25095 ;;Total ram usage:        0 bytes
 25096 ;; Hardware stack levels used:    1
 25097 ;; This function calls:
 25098 ;;		Nothing
 25099 ;; This function is called by:
 25100 ;;		_SYSTEM_Initialize
 25101 ;; This function uses a non-reentrant model
 25102 ;;
 25103                           
 25104                           
 25105                           ;psect for function _EUSART_Initialize
 25106  20CA                     _EUSART_Initialize:	
 25107                           
 25108                           ;eusart.c: 71: BAUD1CON = 0x09;
 25109                           
 25110                           ;incstack = 0
 25111                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 25112  20CA  3009               	movlw	9
 25113  20CB  0142               	movlb	2	; select bank2
 25114  20CC  009F               	movwf	31	;volatile
 25115                           
 25116                           ;eusart.c: 74: RC1STA = 0x90;
 25117  20CD  3090               	movlw	144
 25118  20CE  009D               	movwf	29	;volatile
 25119                           
 25120                           ;eusart.c: 77: TX1STA = 0x24;
 25121  20CF  3024               	movlw	36
 25122  20D0  009E               	movwf	30	;volatile
 25123                           
 25124                           ;eusart.c: 80: SP1BRGL = 0x44;
 25125  20D1  3044               	movlw	68
 25126  20D2  009B               	movwf	27	;volatile
 25127                           
 25128                           ;eusart.c: 83: SP1BRGH = 0x00;
 25129  20D3  019C               	clrf	28	;volatile
 25130  20D4  0008               	return
 25131  20D5                     __end_of_EUSART_Initialize:	
 25132  007E                     btemp	set	126	;btemp
 25133  007E                     wtemp0	set	126


Data Sizes:
    Strings     548
    Constant    36
    Data        104
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     78      80
    BANK2            80     21      80
    BANK3            80      0      73
    BANK4            80      0      79
    BANK5            80      0      46
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           64      0       0
    BANK48            0      0       0
    BANK49            0      0       0
    BANK50            0      0       0

Pointer List with Targets:

    DW3000local.cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    Absolute function$0	PTR const struct . size(2) Largest target is 150
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), NULL(NULL[0]), STR_17(CODE[2]), 
		 -> STR_16(CODE[14]), STR_15(CODE[26]), STR_14(CODE[14]), STR_13(CODE[150]), 
		 -> STR_12(CODE[14]), STR_11(CODE[16]), STR_10(CODE[14]), STR_9(CODE[19]), 
		 -> STR_8(CODE[14]), STR_7(CODE[17]), STR_6(CODE[14]), DW3000local(BANK5[46]), 
		 -> print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), print_uint8_t@print_data(BANK0[20]), 

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 8
		 -> ADDR(BANK3[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), 

    S575$19$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S575$20$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S575$18$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S575$22$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S575$17$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S575$21$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_31(CODE[36]), STR_28(CODE[18]), STR_27(CODE[29]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    memset@p1	PTR void  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    memset@p	PTR unsigned char  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    _fassert@exp	PTR const unsigned char  size(2) Largest target is 150
		 -> STR_17(CODE[2]), STR_15(CODE[26]), STR_13(CODE[150]), STR_11(CODE[16]), 
		 -> STR_9(CODE[19]), STR_7(CODE[17]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_16(CODE[14]), STR_14(CODE[14]), STR_12(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[14]), STR_6(CODE[14]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 150
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), STR_29(CODE[7]), NULL(NULL[0]), 
		 -> STR_17(CODE[2]), STR_16(CODE[14]), STR_15(CODE[26]), STR_14(CODE[14]), 
		 -> STR_13(CODE[150]), STR_12(CODE[14]), STR_11(CODE[16]), STR_10(CODE[14]), 
		 -> STR_9(CODE[19]), STR_8(CODE[14]), STR_7(CODE[17]), STR_6(CODE[14]), 
		 -> print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), print_uint8_t@print_data(BANK0[20]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_31(CODE[36]), STR_28(CODE[18]), STR_27(CODE[29]), STR_5(CODE[31]), 
		 -> STR_4(CODE[14]), STR_3(CODE[10]), STR_2(CODE[10]), 

    S2307__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S2307__prbuf$ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(COMMON[3]), printf@pb(BANK0[3]), 

    process_pmic_status@status	PTR unsigned char  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    sp__memset	PTR void  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    i2c_multi_read@data	PTR unsigned char  size(2) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), init_bq25895@I2c_buff(BANK0[9]), 

    i2c_multi_write@data	PTR unsigned char  size(1) Largest target is 9
		 -> init_bq25895@I2c_buff(BANK0[9]), 

    sp__i2c_multi_read	PTR unsigned char  size(2) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), init_bq25895@I2c_buff(BANK0[9]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    readfromspi@readBuffer	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    readfromspi@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    writetospi@bodyBuffer	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    writetospi@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    writetospiwithcrc@bodyBuffer	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    writetospiwithcrc@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    S903$payload	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.payload	PTR unsigned char  size(1) Largest target is 0

    S903$header	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.header	PTR unsigned char  size(1) Largest target is 0

    S903$nonce	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.nonce	PTR unsigned char  size(1) Largest target is 0

    dwt_writetxdata@txDataBytes	PTR unsigned char  size(1) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), 

    dwt_configure@config	PTR struct . size(1) Largest target is 14
		 -> config(BANK4[14]), 

    dwt_configuretxrf@config	PTR struct . size(1) Largest target is 7
		 -> txconfig_options_ch9(BANK3[7]), 

    dwt_generatecrc8@byteArray	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), dwt_xfer3000@header(BANK0[2]), 

    dwt_readfromdevice@buffer	PTR unsigned char  size(1) Largest target is 8
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_read16bitoffsetreg@buffer(BANK1[2]), 
		 -> dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    dwt_writetodevice@buffer	PTR unsigned char  size(2) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_write8bitoffsetreg@regval(BANK1[1]), 
		 -> dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 

    dwt_xfer3000@buffer	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    S575$cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S575$cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S575$cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S575$cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S575$cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S575$cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S575$cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    pdw3000local.cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    pdw3000local	PTR struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), writetospiwithcrc@crc8(BANK0[1]), 
		 -> dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), 
		 -> dwt_modify16bitoffsetreg@buf(BANK0[4]), dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), 
		 -> dwt_write32bitoffsetreg@buffer(BANK0[4]), dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_xfer3000@header(BANK0[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), writetospiwithcrc@crc8(BANK0[1]), 
		 -> dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), 
		 -> dwt_modify16bitoffsetreg@buf(BANK0[4]), dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), 
		 -> dwt_write32bitoffsetreg@buffer(BANK0[4]), dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_xfer3000@header(BANK0[2]), 

    printf_string@data	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[11]), STR_23(CODE[11]), 
		 -> STR_22(CODE[9]), STR_21(CODE[17]), STR_20(CODE[15]), STR_19(CODE[12]), 
		 -> STR_18(CODE[10]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), STR_1(CODE[22]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _set_MSSSP1_mode->_SPI1_Open
    _process_pmic_status->_lipo_battery_level
    _lipo_battery_level->___lwdiv
    _init_bq25895->_i2c_multi_read
    _i2c_multi_write->_i2c_write
    _i2c_multi_read->_i2c_read
    _i2c_multi_read->_i2c_write
    _bq25895_WDT_reset->_i2c_single_read
    _bq25895_WDT_reset->_i2c_single_write
    _i2c_single_write->_i2c_write
    _i2c_single_read->_i2c_read
    _i2c_single_read->_i2c_write
    _reset_DWIC->_Sleep
    _printf_string->_EUSART_Write
    _dwt_configure->___lltoft
    _get_sts_mnth->___lmul
    _writetospiwithcrc->_SPI1_WriteBlock
    _writetospi->_SPI1_WriteBlock
    _readfromspi->_SPI1_ReadBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    __doprnt->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    ___lltoft->___ftpack
    ___fttol->___lltoft
    ___ftmul->___lltoft
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _main in BANK0

    _pmic_status_read->_process_pmic_status
    _dwt_writetxfctrl->_dwt_read8bitoffsetreg
    _dwt_writetxdata->_dwt_write32bitoffsetreg
    _dwt_starttx->_dwt_read32bitoffsetreg
    _dwt_starttx->_dwt_read8bitoffsetreg
    _dwt_settxantennadelay->_dwt_write16bitoffsetreg
    _dwt_setrxantennadelay->_dwt_write16bitoffsetreg
    _dwt_checkidlerc->_dwt_read16bitoffsetreg
    _dwt_readdevid->_dwt_read32bitoffsetreg
    __dwt_prog_ldo_and_bias_tune->_dwt_modify16bitoffsetreg
    __dwt_otpread->_dwt_read32bitoffsetreg
    _dwt_configuretxrf->_dwt_read8bitoffsetreg
    _dwt_calcbandwidthadj->_dwt_disable_rf_tx
    _dwt_calcbandwidthadj->_dwt_read8bitoffsetreg
    _dwt_enable_rftx_blocks->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_disable_rftx_blocks->_dwt_write32bitoffsetreg
    _dwt_disable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_configure->_dwt_read32bitoffsetreg
    _dwt_configure->_dwt_read8bitoffsetreg
    _dwt_setdwstate->_dwt_force_clocks
    _dwt_force_clocks->_dwt_write16bitoffsetreg
    _dwt_pgf_cal->_dwt_read16bitoffsetreg
    _dwt_run_pgfcal->_dwt_read32bitoffsetreg
    _dwt_run_pgfcal->_dwt_read8bitoffsetreg
    _dwt_read8bitoffsetreg->_dwt_xfer3000
    _dwt_modify8bitoffsetreg->_dwt_xfer3000
    _dwt_readfromdevice->_dwt_xfer3000
    _dwt_modify16bitoffsetreg->_dwt_xfer3000
    _dwt_configmrxlut->_dwt_write32bitoffsetreg
    _dwt_writetodevice->_dwt_xfer3000
    __dwt_kick_dgc_on_wakeup->_dwt_modify32bitoffsetreg
    _dwt_modify32bitoffsetreg->_dwt_xfer3000
    _dwt_xfer3000->__fassert
    __fassert->_printf
    _printf->__doprnt
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    _main->_dw_main
    _transmitt_beacon_pkt->_dwt_writetxfctrl
    _dw_main->_dwt_configure
    _dwt_writetxfctrl->_dwt_modify32bitoffsetreg
    _dwt_writetxdata->_dwt_write32bitoffsetreg
    _dwt_starttx->_dwt_read32bitoffsetreg
    _dwt_settxantennadelay->_dwt_write16bitoffsetreg
    _dwt_setrxantennadelay->_dwt_write16bitoffsetreg
    _dwt_initialise->__dwt_otpread
    _dwt_checkidlerc->_dwt_read16bitoffsetreg
    _dwt_check_dev_id->_dwt_readdevid
    _dwt_readdevid->_dwt_read32bitoffsetreg
    __dwt_prog_ldo_and_bias_tune->_dwt_modify16bitoffsetreg
    __dwt_otpread->_dwt_read32bitoffsetreg
    _dwt_configuretxrf->_dwt_calcbandwidthadj
    _dwt_calcbandwidthadj->_dwt_enable_rf_tx
    _dwt_enable_rftx_blocks->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_disable_rftx_blocks->_dwt_write32bitoffsetreg
    _dwt_disable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_configure->_dwt_configmrxlut
    _dwt_setplenfine->_dwt_write8bitoffsetreg
    _dwt_setdwstate->_dwt_modify32bitoffsetreg
    _dwt_force_clocks->_dwt_write16bitoffsetreg
    _dwt_write16bitoffsetreg->_dwt_writetodevice
    _dwt_pgf_cal->_dwt_run_pgfcal
    _dwt_run_pgfcal->_dwt_read32bitoffsetreg
    _dwt_write8bitoffsetreg->_dwt_writetodevice
    _dwt_read32bitoffsetreg->_dwt_readfromdevice
    _dwt_read16bitoffsetreg->_dwt_readfromdevice
    _dwt_configmrxlut->_dwt_write32bitoffsetreg
    _dwt_write32bitoffsetreg->_dwt_writetodevice
    __dwt_kick_dgc_on_wakeup->_dwt_modify32bitoffsetreg

Critical Paths under _main in BANK2

    _dw_main->_dwt_configure

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1364885
                                             76 BANK1      2     2      0
                  _SYSTEM_Initialize
                            _dw_main
                       _init_bq25895
                   _pmic_status_read
                      _printf_string
                    _set_MSSSP1_mode
               _transmitt_beacon_pkt
 ---------------------------------------------------------------------------------
 (1) _transmitt_beacon_pkt                                 1     1      0  154753
                                             47 BANK1      1     1      0
                        _dwt_starttx
                    _dwt_writetxdata
                   _dwt_writetxfctrl
                      _printf_string
 ---------------------------------------------------------------------------------
 (1) _pmic_status_read                                     3     3      0   13631
                                             45 BANK0      3     3      0
                  _bq25895_WDT_reset
                     _i2c_multi_read
                    _i2c_single_read
                   _i2c_single_write
                       _init_bq25895
                             _memset
                             _printf
                _process_pmic_status
                    _set_MSSSP1_mode
 ---------------------------------------------------------------------------------
 (1) _set_MSSSP1_mode                                      3     3      0    1140
                                              6 COMMON     3     3      0
                          _SPI1_Open
                           _i2c_init
                      _printf_string
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                           26    26      0      88
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (2) _process_pmic_status                                 46    45      1    1479
                                             12 COMMON     1     0      1
                                              0 BANK0     45    45      0
                             ___wmul
                 _lipo_battery_level
 ---------------------------------------------------------------------------------
 (3) _lipo_battery_level                                   4     2      2     701
                                              8 COMMON     4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     254
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _init_bq25895                                        13    13      0    3089
                                              0 BANK0     13    13      0
                          _copybits8
                     _i2c_multi_read
                    _i2c_multi_write
 ---------------------------------------------------------------------------------
 (3) _i2c_multi_write                                      8     5      3     373
                                              1 COMMON     8     5      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_multi_read                                      12     8      4     681
                                              1 COMMON    12     8      4
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _bq25895_WDT_reset                                    4     4      0    2009
                                              6 COMMON     4     4      0
                          _copybits8
                    _i2c_single_read
                   _i2c_single_write
 ---------------------------------------------------------------------------------
 (2) _i2c_single_write                                     5     3      2     353
                                              1 COMMON     5     3      2
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_single_read                                      5     4      1     264
                                              1 COMMON     5     4      1
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _copybits8                                            3     1      2    1346
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dw_main                                             51    51      0 1191294
                                             75 BANK1      1     1      0
                              _Sleep
                      _dwt_configure
                  _dwt_configuretxrf
                     _dwt_initialise
              _dwt_setrxantennadelay
              _dwt_settxantennadelay
                        _dwt_starttx
                    _dwt_writetxdata
                   _dwt_writetxfctrl
                      _printf_string
                         _reset_DWIC
 ---------------------------------------------------------------------------------
 (2) _reset_DWIC                                           0     0      0     750
                              _Sleep
 ---------------------------------------------------------------------------------
 (2) _printf_string                                        3     1      2     963
                                              1 COMMON     3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _dwt_writetxfctrl                                    23    18      5   37518
                                             24 BANK1     23    18      5
           _dwt_modify32bitoffsetreg
              _dwt_read8bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_writetxdata                                      7     2      5   56889
                                             24 BANK1      7     2      5
            _dwt_write32bitoffsetreg
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (2) _dwt_starttx                                         11    11      0   59383
                                             29 BANK1     11    11      0
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (2) _dwt_settxantennadelay                                2     0      2   28958
                                             75 BANK0      2     0      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_setrxantennadelay                                2     0      2   28958
                                             75 BANK0      2     0      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_initialise                                      15    13      2  142768
                                             37 BANK1     15    13      2
                              _Sleep
                       __dwt_otpread
        __dwt_prog_ldo_and_bias_tune
                   _dwt_check_dev_id
                    _dwt_checkidlerc
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_checkidlerc                                      8     8      0   21727
                                             20 BANK1      8     8      0
             _dwt_read16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_check_dev_id                                     2     0      2   22156
                                             33 BANK1      2     0      2
                      _dwt_readdevid
 ---------------------------------------------------------------------------------
 (4) _dwt_readdevid                                        4     0      4   22156
                                             29 BANK1      4     0      4
             _dwt_read32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) __dwt_prog_ldo_and_bias_tune                          2     2      0   16716
                                             77 BANK0      2     2      0
           _dwt_modify16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) __dwt_otpread                                         8     4      4   51842
                                             29 BANK1      8     4      4
             _dwt_read32bitoffsetreg
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_configuretxrf                                    4     4      0  321448
                                             35 BANK1      4     4      0
               _dwt_calcbandwidthadj
              _dwt_read8bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_calcbandwidthadj                                 6     2      4  241632
                                             29 BANK1      6     2      4
                  _dwt_disable_rf_tx
            _dwt_disable_rftx_blocks
                   _dwt_enable_rf_tx
             _dwt_enable_rftx_blocks
                   _dwt_force_clocks
            _dwt_modify8bitoffsetreg
              _dwt_read8bitoffsetreg
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_enable_rftx_blocks                               4     0      4   21808
                                             24 BANK1      4     0      4
           _dwt_modify32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_enable_rf_tx                                     5     0      5   56934
                                             24 BANK1      5     0      5
           _dwt_modify32bitoffsetreg
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_disable_rftx_blocks                              0     0      0   34870
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_disable_rf_tx                                    1     1      0   34892
                                             79 BANK0      1     1      0
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_configure                                       42    40      2  512909
                                             54 BANK1     21    19      2
                                              0 BANK2     21    21      0
                              _Sleep
                            ___ftmul
                            ___fttol
                           ___lltoft
            __dwt_kick_dgc_on_wakeup
                   _dwt_configmrxlut
           _dwt_modify16bitoffsetreg
           _dwt_modify32bitoffsetreg
            _dwt_modify8bitoffsetreg
                        _dwt_pgf_cal
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
                     _dwt_setdwstate
                    _dwt_setplenfine
            _dwt_write16bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
                       _get_sts_mnth
 ---------------------------------------------------------------------------------
 (3) _get_sts_mnth                                        14    10      4     892
                                              0 BANK0     14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     348
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dwt_setplenfine                                      2     2      0   29401
                                             72 BANK0      2     2      0
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_setdwstate                                       4     2      2   70253
                                             24 BANK1      4     2      2
                   _dwt_force_clocks
           _dwt_modify32bitoffsetreg
            _dwt_modify8bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_force_clocks                                     4     2      2   29453
                                             75 BANK0      4     2      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write16bitoffsetreg                             13     3     10   28872
                                             72 BANK0      3     3      0
                                             12 BANK1     10     0     10
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_pgf_cal                                          6     4      2  160504
                                             45 BANK1      6     4      2
           _dwt_modify16bitoffsetreg
             _dwt_read16bitoffsetreg
                     _dwt_run_pgfcal
 ---------------------------------------------------------------------------------
 (4) _dwt_run_pgfcal                                      16    14      2  121930
                                             29 BANK1     16    14      2
                              _Sleep
            _dwt_modify8bitoffsetreg
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write8bitoffsetreg                               9     0      9   29379
                                             12 BANK1      9     0      9
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_read8bitoffsetreg                                9     1      8   15425
                                             72 BANK0      8     0      8
                                              0 BANK1      1     1      0
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _dwt_read32bitoffsetreg                              26    18      8   22156
                                             72 BANK0      8     0      8
                                             11 BANK1     18    18      0
                 _dwt_readfromdevice
 ---------------------------------------------------------------------------------
 (4) _dwt_modify8bitoffsetreg                             13     3     10   19184
                                             72 BANK0      3     3      0
                                              0 BANK1     10     0     10
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _Sleep                                                9     5      4     750
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _dwt_read16bitoffsetreg                              17     9      8   21704
                                             72 BANK0      8     0      8
                                             11 BANK1      9     9      0
                 _dwt_readfromdevice
 ---------------------------------------------------------------------------------
 (4) _dwt_readfromdevice                                  11     0     11   19133
                                              0 BANK1     11     0     11
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (4) _dwt_modify16bitoffsetreg                            17     5     12   16716
                                             72 BANK0      5     5      0
                                              0 BANK1     12     0     12
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _dwt_configmrxlut                                    30    28      2   35189
                                             24 BANK1     30    28      2
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write32bitoffsetreg                             19     7     12   34870
                                             72 BANK0      7     7      0
                                             12 BANK1     12     0     12
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_writetodevice                                   12     0     12   21437
                                              0 BANK1     12     0     12
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) __dwt_kick_dgc_on_wakeup                              1     1      0   21552
                                             77 BANK0      1     1      0
           _dwt_modify32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_modify32bitoffsetreg                            29    13     16   21508
                                             72 BANK0      5     5      0
                                              0 BANK1     24     8     16
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (4) _dwt_xfer3000                                        33    19     14   12901
                                             39 BANK0     33    19     14
                           __fassert
                   _dwt_generatecrc8
                        _readfromspi
                         _writetospi
                  _writetospiwithcrc
 ---------------------------------------------------------------------------------
 (5) _writetospiwithcrc                                   10     0     10    1289
                                              0 BANK0     10     0     10
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (5) _writetospi                                           9     0      9    1202
                                              0 BANK0      9     0      9
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (5) _readfromspi                                          9     0      9    1420
                                              0 BANK0      9     0      9
                     _SPI1_ReadBlock
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _SPI1_WriteBlock                                      6     2      4     858
                                              1 COMMON     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _SPI1_ReadBlock                                       7     3      4     218
                                              1 COMMON     7     3      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SPI1_ExchangeByte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _dwt_generatecrc8                                     9     4      5     542
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (5) __fassert                                             6     0      6    5543
                                             33 BANK0      6     0      6
                             _printf
 ---------------------------------------------------------------------------------
 (6) _printf                                              13     5      8    4325
                                             20 BANK0     13     5      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (7) __doprnt                                             24    21      3    3995
                                              0 BANK0     20    17      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     388
                                              1 COMMON     1     0      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     424
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2134
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2711
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2001
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _dw_main
     _Sleep
     _dwt_configure
       _Sleep
       ___ftmul
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       __dwt_kick_dgc_on_wakeup
         _dwt_modify32bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_configmrxlut
         _dwt_write32bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_modify16bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_modify8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_pgf_cal
         _dwt_modify16bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_read16bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_run_pgfcal
           _Sleep
           _dwt_modify8bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_read32bitoffsetreg
             _dwt_readfromdevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _dwt_read8bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _dwt_write8bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_setdwstate
         _dwt_force_clocks
           _dwt_write16bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_modify32bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_modify8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_setplenfine
         _dwt_write8bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _get_sts_mnth
         ___lmul
     _dwt_configuretxrf
       _dwt_calcbandwidthadj
         _dwt_disable_rf_tx
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_disable_rftx_blocks
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_enable_rf_tx
           _dwt_modify32bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_enable_rftx_blocks
           _dwt_modify32bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_force_clocks
           _dwt_write16bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_modify8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_read8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_write16bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_initialise
       _Sleep
       __dwt_otpread
         _dwt_read32bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_write16bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       __dwt_prog_ldo_and_bias_tune
         _dwt_modify16bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_check_dev_id
         _dwt_readdevid
           _dwt_read32bitoffsetreg
             _dwt_readfromdevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
       _dwt_checkidlerc
         _dwt_read16bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_setrxantennadelay
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_settxantennadelay
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_starttx
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxdata
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxfctrl
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _printf_string
       _EUSART_Write
     _reset_DWIC
       _Sleep
   _init_bq25895
     _copybits8
     _i2c_multi_read
       _i2c_read
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write
     _i2c_multi_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _pmic_status_read
     _bq25895_WDT_reset
       _copybits8
       _i2c_single_read
         _i2c_read
         _i2c_restart
         _i2c_start
         _i2c_stop
         _i2c_write
       _i2c_single_write
         _i2c_start
         _i2c_stop
         _i2c_write
     _i2c_multi_read
       _i2c_read
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write
     _i2c_single_read
       _i2c_read
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write
     _i2c_single_write
       _i2c_start
       _i2c_stop
       _i2c_write
     _init_bq25895
       _copybits8
       _i2c_multi_read
         _i2c_read
         _i2c_restart
         _i2c_start
         _i2c_stop
         _i2c_write
       _i2c_multi_write
         _i2c_start
         _i2c_stop
         _i2c_write
     _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART_Write
     _process_pmic_status
       ___wmul
       _lipo_battery_level
         ___lwdiv
     _set_MSSSP1_mode
       _SPI1_Open
       _i2c_init
       _printf_string
         _EUSART_Write
   _printf_string
     _EUSART_Write
   _set_MSSSP1_mode
     _SPI1_Open
     _i2c_init
     _printf_string
       _EUSART_Write
   _transmitt_beacon_pkt
     _dwt_starttx
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxdata
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxfctrl
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _printf_string
       _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     15      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      49      11       91.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4F      13       98.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      2E      15       57.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0     1C4      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0     1C4      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              40      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48               0      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49               0      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50               0      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 10 11:29:59 2021

             dwt_configmrxlut@channel 00B8                     _SPI1_ExchangeByte 20D5  
                   ?_dwt_configmrxlut 00B8                        ?_printf_string 0071  
                   _dwt_configuretxrf 1CE1                           __CFG_CP$OFF 0000  
                  ?_SPI1_ExchangeByte 0070                    ??_dwt_configmrxlut 007E  
                 ___wmul@multiplicand 0072                    ?_dwt_configuretxrf 0070  
            _dwt_modify16bitoffsetreg 26A2              _dwt_modify32bitoffsetreg 12B6  
                                 l312 1957                                   l162 20BA  
                                 l330 2427                                   l412 0AE9  
                                 l237 20D9                                   l603 041A  
                                 l630 1BD3                                   l640 1682  
                                 l562 1C67                                   l626 074A  
                                 l618 0674                                   l627 0780  
                                 l492 0BD6                                   l398 0A6A  
                                 l499 0C5C                                   l589 013A  
                                 l951 0824                                   l970 0935  
                                 l955 0839                                   l948 08FC  
                                 l959 084E                                   _GIE 005F  
                        __CFG_CPD$OFF 0000            __end_of_sts_length_factors 293B  
                       ?_get_sts_mnth 0020               __size_of_PMD_Initialize 0008  
                 ??_SPI1_ExchangeByte 0070                          __CFG_BORV$LO 0000  
                                 wreg 0009                   ??_dwt_configuretxrf 00C3  
                        __CFG_LVP$OFF 0000                          __CFG_ZCD$OFF 0000  
                __end_of__dwt_otpread 1DD9          process_pmic_status@CHRG_STAT 004B  
                                l2028 1EC3                                  l1341 1AF1  
                                l1610 0D02                                  l1622 0E15  
                                l1624 0D4C                                  l1562 20A9  
                                l1652 0E5F                                  l1580 20E4  
                                l1574 20AE                                  l1647 0E3D  
                                l1656 0E96                                  l1568 20A4  
                                l1586 2135                                  l5141 219D  
                                l1589 2139                                  l5135 211C  
                                l5231 0D1D                                  l5215 0CEB  
                                l6023 231A                                  l1944 1B78  
                                l1945 1B80                                  l1937 1B65  
                                l6121 1ED4                                  l1769 21A3  
                                l5225 0D07                                  l6115 1EBA  
                                l6107 1E9F                                  l6131 23BB  
                                l5171 25B1                                  l5163 2593  
                                l5251 0D73                                  l5227 0D10  
                                l5219 0CFE                                  l6027 2323  
                                l6061 1272                                  l6045 122F  
                                l6117 1EC6                                  l6109 1EAD  
                                l5165 259F                                  l5341 0EE1  
                                l5317 0E81                                  l5261 0DA0  
                                l5245 0D63                                  l6029 2333  
                                l6039 1219                                  l5175 25BA  
                                l5351 0F0C                                  l5327 0EB2  
                                l5319 0E8A                                  l5255 0D80  
                                l5239 0D4F                                  l5503 0A54  
                                l6311 0C4B                                  l6303 0C25  
                                l6073 128E                                  l6057 126A  
                                l6129 23AB                                  l5193 2490  
                                l5337 0ECF                                  l5353 0F12  
                                l5329 0EB5                                  l5273 0DD0  
                                l5265 0D82                                  l5249 0D65  
                                l5417 22B3                                  l5409 216B  
                                l5513 0A68                                  l5187 2478  
                                l5371 0F5D                                  l5363 0F3C  
                                l5355 0F16                                  l5347 0EFA  
                                l5267 0DB3                                  l5283 0DF4  
                                l5523 0AB9                                  l5507 0A5B  
                                l6323 0CA1                                  l6307 0C38  
                                l6069 1286                                  l5189 2484  
                                l5197 2499                                  l5365 0F45  
                                l5293 0E30                                  l5437 244A  
                                l5525 0AD1                                  l5517 0A70  
                                l6421 033E                                  l6317 0C6D  
                                l6237 10A7                                  l5391 0FE1  
                                l5359 0F2A                                  l5375 0F6F  
                                l5279 0DE9                                  l5439 2470  
                                l5471 09B4                                  l6503 073E  
                                l6423 035C                                  l6415 0325  
                                l5711 11BF                                  l6089 1E6F  
                                l5377 0F75                                  l5385 0FC4  
                                l5529 0AEA                                  l5641 2750  
                                l6505 0767                                  l6441 0461  
                                l5721 19ED                                  l6345 1D29  
                                l6521 1E07                                  l5379 0F9C  
                                l5387 0FCD                                  l5395 0FF3  
                                l5491 0A12                                  l5475 09CB  
                                l5563 1CD1                                  l6435 03F6  
                                l6371 0145                                  l6347 1D3D  
                                l6339 1D08                                  l5397 0CC0  
                                l5477 09D6                                  l5557 1CA3  
                                l6429 03BF                                  l6381 0155  
                                l6373 0147                                  l6365 0136  
                                l6293 0BF2                                  l6533 13ED  
                                l5399 0FFC                                  l8143 0AF3  
                                l5479 09E5                                  l5903 16CD  
                                l5671 15C6                                  l6463 05CB  
                                l6447 048B                                  l6383 0159  
                                l6375 0149                                  l6391 0166  
                                l6359 0125                                  l6295 0BF8  
                                l6279 0B77                                  l6551 080F  
                                l6199 1072                                  l8145 0AF8  
                                l5825 1999                                  l5665 15A1  
                                l5753 2509                                  l6385 015D  
                                l6377 014D                                  l6393 0187  
                                l6369 0143                                  l6617 21F1  
                                l6641 0082                                  l8057 1F26  
                                _ADDR 01DA                                  l5771 1B4C  
                                l5587 27E4                                  l5579 27C2  
                                l5691 164E                                  l5675 15CF  
                                l6387 0161                                  l6379 0151  
                                l6299 0C0E                                  l6563 0830  
                                l6651 00CA                                  l5781 1B72  
                                l5773 1B51                                  l5765 1B3B  
                                l5933 1BF8                                  l5749 24FF  
                                l6485 0709                                  l6469 0640  
                                l6573 0858                                  l6557 081B  
                                l6637 0060                                  l8069 1F64  
                                l5679 15D6                                  l6495 071C  
                                l6479 06E4                                  l5839 18CE  
                                l6671 1AFD                                  l6647 00A8  
                                l6655 00DD                                  l5769 1B42  
                                l5865 1492                                  l6489 0713  
                                l5873 1FC6                                  l6585 08DA  
                                l6569 0845                                  l6681 1B2C  
                                l5961 191B                                  l5779 1B6A  
                                l6595 091A                                  l6587 08DD  
                                l6667 1AF2                                  l5955 1902  
                                l5869 14F8                                  l5887 1C45  
                                l6599 0951                                  l5799 213D  
                                l5959 18F0                                  l5977 24DD  
                                l5979 24F3                                  STR_1 287A  
                                STR_2 2982                                  STR_3 298C  
                                STR_4 2949                                  STR_5 2824  
                                STR_6 293B                                  STR_7 28FD  
                                STR_8 293B                                  STR_9 28B6  
                                _LATA 0016                                  _LATB 0017  
                                _LATC 0018                                  _LATD 0019  
                                _LATE 001A                                  u1730 27B2  
                                u4205 2596                                  u5005 135A  
                                u4225 25A0                                  u4305 2491  
                                u4235 25AA        __end_of_dwt_read16bitoffsetreg 26A2  
      __end_of_dwt_read32bitoffsetreg 1CE1                                  u4245 25B2  
                                u4165 21A4                                  u4175 21A9  
                                u5215 250A                                  u5305 1B6D  
                                u4505 0E7A                                  u5225 2511  
                                u6105 01C6                                  u4275 247B  
                                u6115 0235                                  _PMD0 0796  
                                u6125 0261                                  _PMD1 0797  
                                u5430 2589                                  _PMD2 0798  
                                u4295 248A                                  u6215 04ED  
                                _PMD3 0799                                  _PMD4 079A  
                                u5345 1B87                                  u5265 1B47  
                                u4545 0EA5                                  u5505 1C52  
                                u6225 0513                                  u5425 2577  
                                _PMD5 079B                                  u4475 0E58  
                                u4395 0D79                                  u4715 2454  
                                u6235 0590                                  u5285 1B60  
                                u4725 0986                                  u6245 05A3  
                                u6405 1407                                  u6094 01B3  
                                u4815 0A20                                  u6175 03CB  
                                u6095 01B1                                  u5705 1295  
                                u5625 123B                                  u4905 1CB5  
                                u5635 124B                                  u6700 00A3  
                                u4925 27C0                                  u6605 003C  
                                u5655 1273                                  u5735 1E76  
                                u4935 27CD                                  u5495 1C3F  
                                u6375 139D                                  u6720 00B7  
                                u5665 1279                                  u5825 23B0  
                                u4945 27E2                                  u6385 13AA  
                                u6730 00C5                                  u6650 006F  
                                u4955 12CD                                  u5915 0BAF  
                                u6395 13F4                                  u6660 007D  
                                u8500 1F63                                  u5765 1EA0  
                                u4965 12E8                                  u4885 2435  
                                u6750 00D9                                  u5870 10B1  
                                u5695 128F                                  u4975 1303  
                                u4985 1324                                  u6585 001E  
                                u6690 0095                                  u5795 1EBB  
                                u4995 133F                                  u6595 002D  
                                u8527 1935                                  u8537 194F  
                                u8547 1967                                  u8557 1F21  
                                u8567 1060                                  u8577 106C  
                                u8587 10A2                                  u8597 243A  
                                _WPUA 1F39                                  _WPUB 1F44  
                                _WPUC 1F4F                                  _WPUD 1F5A  
                                _WPUE 1F65                          __CFG_WRT$OFF 0000  
                       __CFG_FCMEN$ON 0000                      ??_dwt_initialise 00C7  
                     _set_MSSSP1_mode 1019                                  _main 191E  
           __size_of_dwt_writetxfctrl 00DC                          ___ftpack@arg 0070  
                        ___ftpack@exp 0073                                  fsr0h 0005  
                                fsr1h 0007                                  indf0 0000  
                                fsr0l 0004                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
             __size_of_SPI1_ReadBlock 001D                         __CFG_BOREN$ON 0000  
     __end_of__dwt_kick_dgc_on_wakeup 19C2                                  start 0002  
        dwt_read32bitoffsetreg@buffer 00B3          dwt_read16bitoffsetreg@buffer 00B2  
          __size_of_dwt_disable_rf_tx 005A                          _tx_blink_msg 0220  
           __end_of_SPI1_ExchangeByte 20E0          dwt_read32bitoffsetreg@regval 00B7  
        dwt_read16bitoffsetreg@regval 00B0                         __CFG_CSWEN$ON 0000  
                       __CFG_MCLRE$ON 0000             __end_of_dwt_configuretxrf 1D5D  
                        ___ftmul@cntr 002E                         ??_i2c_restart 0070  
                        ___ftmul@sign 002F                     _bq25895_WDT_reset 235B  
                    _pmic_status_read 1EDD         __size_of_transmitt_beacon_pkt 002C  
                        ___fttol@exp1 003D                          ___fttol@lval 0039  
                  ?_bq25895_WDT_reset 0070                    dwt_xfer3000@header 0064  
                  dwt_xfer3000@buffer 0051             __size_of_dwt_check_dev_id 0037  
                       ?_EUSART_Write 0070        __size_of_OSCILLATOR_Initialize 0009  
       __end_of_OSCILLATOR_Initialize 20CA                    dwt_xfer3000@length 004D  
                   ??_i2c_single_read 0072                                 ?_main 0070  
             dwt_writetxfctrl@ranging 00BC                                 STR_10 293B  
                               STR_11 290E                                 STR_12 293B  
                               STR_20 291E                                 STR_21 28EC  
                               STR_13 1804                                 STR_14 293B  
                               STR_22 2996                                 STR_30 28DB  
                               STR_23 2963                                 STR_15 2860  
                               STR_31 2800                                 STR_24 2963  
                               STR_25 28A3                         __CFG_WDTE$OFF 0000  
                               STR_18 2978                                 STR_26 2890  
                               STR_19 2957                                 STR_27 2843  
                               STR_28 28C9                                 STR_29 29A7  
    SPI1_Open@spi1UniqueConfiguration 0075              __size_of_dwt_setplenfine 001C  
                      ??_get_sts_mnth 0024                           i2c_read@ack 0070  
                     __end_of___ftmul 12B6       pmic_status_read@interrupt_state 004F  
                     __end_of___fttol 1EDD                        __CFG_DEBUG$OFF 0000  
                     __end_of___lwdiv 25BF                       __end_of___lwmod 249E  
         dwt_read8bitoffsetreg@regval 00A0                                 _OSCEN 0891  
                               u678m0 1B27                       __end_of__doprnt 1000  
                               _TRISA 0011                                 _TRISB 0012  
                               _TRISC 0013                                 _TRISD 0014  
                               _TRISE 0015                   ??_bq25895_WDT_reset 0076  
                               _RXPPS 1ECB                    __size_of_SPI1_Open 0060  
                 ___lmul@multiplicand 0074                 i2c_multi_read@I2C_rsp 007A  
                        ___lltoft@exp 007D                          ?_dwt_pgf_cal 00CD  
                               _Sleep 241F                     ?_dwt_force_clocks 006B  
                     __end_of_dw_main 1B33                     ??_i2c_multi_write 0074  
         dwt_readfromdevice@regFileID 00A0                       __end_of_dpowers 2978  
                     __end_of_isdigit 211E                         ___ftpack@sign 0074  
                               _putch 2099                    ??_dwt_force_clocks 007E  
                        ?_dwt_starttx 0070                ?_dwt_setrxantennadelay 006B  
                               pclath 000A                          ?_readfromspi 0020  
                    ??_dwt_setdwstate 00BA                                 status 0003  
        process_pmic_status@VBUS_STAT 0045                                 wtemp0 007E  
         i2c_single_write@device_addr 0075             __end_of_bq25895_WDT_reset 2381  
        dwt_settxantennadelay@txDelay 006B                       ??_printf_string 0073  
                     __initialization 0797                          __end_of_main 196F  
                    __end_of_i2c_init 2110                      __end_of_i2c_read 213D  
                      ??_EUSART_Write 0070                      __end_of_i2c_stop 20B1  
                  i2c_multi_read@data 0072                       _dwt_checkidlerc 2558  
                        __fassert@exp 0045                      ??_dwt_run_pgfcal 00BF  
                 __end_of_i2c_restart 20A7                                ??_main 00EC  
                       ___fttol@sign1 0038                         ?_init_bq25895 0070  
     dwt_write8bitoffsetreg@regFileID 00AC          process_pmic_status@VSYS_STAT 0047  
      __size_of_dwt_read8bitoffsetreg 0021              ?_dwt_modify8bitoffsetreg 00A0  
                    dwt_configure@cnt 0169                      dwt_configure@scp 0161  
       __end_of_dwt_read8bitoffsetreg 22ED       dwt_write8bitoffsetreg@regOffset 00B0  
       dwt_writetxfctrl@txFrameLength 00B8                     ?_i2c_single_write 0071  
                              ?_Sleep 0070   __end_of__dwt_prog_ldo_and_bias_tune 2729  
         __dwt_prog_ldo_and_bias_tune 26E5               __end_of_set_MSSSP1_mode 10B3  
                      _i2c_multi_read 18D2            _EUSART_OverrunErrorHandler 0154  
                  ??_i2c_single_write 0073               ?_dwt_enable_rftx_blocks 00B8  
                              _ANSELA 1F38                                ?_putch 0071  
                              _ANSELB 1F43                                _ANSELC 1F4E  
                              _ANSELD 1F59                                _ANSELE 1F64  
                    __end_of___ftpack 1B97                       dwt_starttx@mode 00C7  
                              _RC1REG 0119                                _RC1PPS 1F21  
                              _RC1STA 011D                      __end_of___lltoft 23CF  
                              _RC2PPS 1F22                                _RC3PPS 1F23  
                              _RC4PPS 1F24                                _RC5PPS 1F25  
                              _ODCONA 1F3A                                _ODCONB 1F45  
                              _ODCONC 1F50                                _ODCOND 1F5B  
                              _ODCONE 1F66                        __CFG_WDTCCS$SC 0000  
                    __end_of__fassert 1019                                _OSCFRQ 0893  
                              _TX1REG 011A                                _TX1STA 011E  
                  dwt_initialise@mode 00C5           __size_of_lipo_battery_level 0024  
                  __size_of_i2c_start 0005         ??__dwt_prog_ldo_and_bias_tune 006D  
                  __size_of_i2c_write 000B          __end_of_dwt_calcbandwidthadj 2000  
                      __CFG_PWRTE$OFF 0000            __size_of_SPI1_ExchangeByte 000B  
               dwt_configure@sts_mnth 015F                                Sleep@i 0075  
                   __end_of_SPI1_Open 1AD2               readfromspi@headerBuffer 0022  
          __size_of_dwt_configuretxrf 007C               readfromspi@headerLength 0020  
                              ___lmul 24F7                                ___wmul 219B  
                       ?_dwt_xfer3000 0047                        __CFG_STVREN$ON 0000  
                           ??___ftmul 0026                             ??___fttol 0034  
                              _dev_id 014A                             ??___lwdiv 0074  
                           ??___lwmod 007C                                _config 0244  
                   _writetospiwithcrc 2335                             ??__doprnt 0023  
                              _memset 21EC                __size_of_dwt_configure 0692  
            ?_dwt_write16bitoffsetreg 00AC              ?_dwt_write32bitoffsetreg 00AC  
                 _process_pmic_status 0010                        ??_init_bq25895 0020  
                        __doprnt@flag 002F                                _printf 2151  
                        __doprnt@prec 0028             __size_of_dwt_enable_rf_tx 00B1  
                  ?_writetospiwithcrc 0020                             ??_dw_main 00EB  
               ___ftmul@f3_as_product 002B                        _PMD_Initialize 20B1  
                           ??_isdigit 0070                 __size_of__dwt_otpread 007C  
    dwt_modify8bitoffsetreg@regFileID 00A0              __size_of_dwt_writetxdata 007D  
              __end_of_i2c_multi_read 191E        __end_of_dwt_enable_rftx_blocks 1A18  
    dwt_modify8bitoffsetreg@regOffset 00A4                   ??_writetospiwithcrc 0077  
       dwt_writetxdata@txBufferOffset 00BB                     ??_dwt_setplenfine 0068  
              __size_of_dwt_readdevid 0024                  _txconfig_options_ch9 01E2  
                ?_process_pmic_status 007C                     _SYSTEM_Initialize 20EB  
             __end_of__initialization 07FD              __size_of_SPI1_WriteBlock 001A  
                    _dwt_writetxfctrl 138F                        _SPI1_ReadBlock 22AF  
            ?_dwt_disable_rftx_blocks 0070                 _dwt_settxantennadelay 2277  
                  ?_SYSTEM_Initialize 0070             i2c_multi_read@device_addr 007B  
            ??_dwt_write8bitoffsetreg 007E                  __end_of_get_sts_mnth 1C6C  
          __size_of_bq25895_WDT_reset 0026               __end_of_dwt_checkidlerc 258B  
                dwt_run_pgfcal@result 00C6                            ___ftmul@f1 0020  
                          ___ftmul@f2 0023            ??_dwt_modify16bitoffsetreg 0068  
          ??_dwt_modify32bitoffsetreg 0068                            ___fttol@f1 0030  
                      __pcstackCOMMON 0070                 dwt_writetxfctrl@reg32 00CB  
                       __end_of_Sleep 2448                        ??_dwt_xfer3000 0055  
                         _i2c_restart 20A2             __end_of_writetospiwithcrc 235B  
                        __pidataBANK1 0801                          __pidataBANK2 2381  
                        __pidataBANK3 211E                          __pidataBANK4 2526  
                 ??_SYSTEM_Initialize 0071              dwt_configuretxrf@channel 00C5  
           __size_of_dwt_generatecrc8 002A                            ___lltoft@c 0078  
                        __dwt_otpread 1D5D           __size_of_dwt_readfromdevice 0034  
                       __end_of_putch 209D                      _dwt_check_dev_id 189B  
              i2c_single_read@I2C_rsp 0073                __end_of_PMD_Initialize 20B9  
               SPI1_ExchangeByte@data 0070                   dwt_configure@config 016F  
                   __end_of_i2c_start 20AC                     __end_of_i2c_write 20EB  
                  _spi1_configuration 1800                         __fassert@file 0043  
                       __fassert@line 0041                       ?_i2c_multi_read 0071  
                             ??_Sleep 0074      process_pmic_status@led_data_1974 0031  
    process_pmic_status@led_data_1978 003B             __size_of_dwt_configmrxlut 0179  
                    ?_set_MSSSP1_mode 0070                            __doprnt@ap 0022  
                          __doprnt@cp 002B                            __doprnt@pb 0033  
            __end_of_pmic_status_read 1F6D             __end_of_SYSTEM_Initialize 20F7  
                 init_bq25895@I2C_rsp 0023                  __size_of_dwt_pgf_cal 0067  
                             ??_putch 0072                 ??_process_pmic_status 0020  
              __end_of_SPI1_ReadBlock 22CC                            __pbssBANK1 00EE  
                          __pbssBANK2 0146                            __pbssBANK3 01A0  
                          __pbssBANK4 0252                            __pbssBANK5 02A0  
                  copybits8@new_value 0071                         _dwt_configure 0105  
                  __size_of_copybits8 0005                    dwt_run_pgfcal@data 00C1  
                  dwt_run_pgfcal@flag 00C5                  __end_of_EUSART_Write 20C1  
                           ?_i2c_init 0070                             ?_i2c_read 0070  
                  _sts_length_factors 292D                             ?_i2c_stop 0070  
                   dwt_configure@chan 016E                     dwt_configure@flag 0163  
                __size_of_dwt_starttx 016A                     dwt_configure@mode 0162  
                   dwt_configure@temp 0165                  __size_of_readfromspi 001B  
                     _i2c_single_read 23F7                            __pmaintext 191E  
         dwt_modify8bitoffsetreg@_and 00A8                               ?___lmul 0070  
                       _dwt_readdevid 22ED          dwt_modify32bitoffsetreg@_and 00A8  
        dwt_modify16bitoffsetreg@_and 00A8                               ?___wmul 0070  
                dwt_xfer3000@reg_file 005D                         _I2C_read_buff 01D0  
                             ?_memset 0070                        ___lmul@product 0078  
            ?__dwt_kick_dgc_on_wakeup 0070                       _i2c_multi_write 24CA  
                           ?___ftpack 0070                               ?_printf 0034  
                     ?_PMD_Initialize 0070                             ?___lltoft 0078  
                 __CFG_RSTOSC$HFINT32 0000                i2c_multi_read@reg_addr 0071  
                           ?__fassert 0041                       _pic_active_mode 00EE  
              dwt_xfer3000@reg_offset 0062                  _dwt_calcbandwidthadj 1F6D  
                             _SP1BRGH 011C                               _SP1BRGL 011B  
                             _OSCCON1 088D                               _OSCCON3 088F  
             ??_dwt_setrxantennadelay 007E                               _OSCTUNE 0892  
        __end_of_transmitt_beacon_pkt 24CA                               _SSP1ADD 018D  
                             _PPSLOCK 1E8F                               _SSP1BUF 018C  
                             _SSP1MSK 018E                          _pdw3000local 00EF  
           process_pmic_status@F15201 012A             process_pmic_status@F15203 0125  
           process_pmic_status@F15205 0120             process_pmic_status@F15193 013E  
           process_pmic_status@F15195 0139             process_pmic_status@F15197 0134  
           process_pmic_status@F15199 012F                        ?_dwt_configure 00D6  
                     ?_SPI1_ReadBlock 0071            process_pmic_status@PG_STAT 004A  
                   ??_dwt_writetxdata 00BD                            ??_i2c_init 0070  
                          ??_i2c_read 0070                ?_dwt_settxantennadelay 006B  
                          ??_i2c_stop 0070                  __end_of_init_bq25895 1151  
              i2c_multi_write@I2C_rsp 0077         dwt_write32bitoffsetreg@buffer 0069  
       dwt_write16bitoffsetreg@buffer 0069       __size_of_dwt_write8bitoffsetreg 001C  
       dwt_write32bitoffsetreg@regval 00B4         dwt_write16bitoffsetreg@regval 00B4  
                    ?_dwt_checkidlerc 0070             __size_of_dwt_force_clocks 0045  
                      ?_dwt_readdevid 00BD                     ??_SPI1_WriteBlock 0075  
          __size_of_writetospiwithcrc 0026                  __CFG_SCANE$available 0000  
                     __size_of___lmul 002F             dwt_initialise@ldo_tune_hi 00D0  
                     __size_of___wmul 001B                               ___ftmul 1202  
           dwt_initialise@ldo_tune_lo 00CC                               ___fttol 1E56  
                             ___lwdiv 258B                               ___lwmod 2472  
   dwt_modify16bitoffsetreg@regFileID 00A0     dwt_modify32bitoffsetreg@regFileID 00A0  
                             __doprnt 0CBE                     __end_of_copybits8 20A2  
                          ??___ftpack 0075                       __size_of_memset 001B  
                          ??___lltoft 007C     dwt_modify16bitoffsetreg@regOffset 00A4  
   dwt_modify32bitoffsetreg@regOffset 00A4                               __ptext1 249E  
                             __ptext2 1EDD                               __ptext3 1019  
                             __ptext4 2103                               __ptext5 1A72  
                             __ptext6 0010                               __ptext7 2311  
                             __ptext8 21EC                               __ptext9 10B3  
                    _dwt_enable_rf_tx 1151                       __size_of_printf 0016  
                          ??__fassert 007E              SPI1_WriteBlock@blockSize 0073  
                             _dw_main 1AD2             process_pmic_status@length 007C  
                   __end_of_hexpowers 29A7                               _dpowers 296E  
               _OSCILLATOR_Initialize 20C1                 ?_dwt_calcbandwidthadj 00BD  
                             _isdigit 2110             process_pmic_status@status 004C  
            ??_PIN_MANAGER_Initialize 0070                   i2c_multi_write@data 0072  
          process_pmic_status@led_off 0022                               _prev_ts 01B8  
          __size_of_SYSTEM_Initialize 000C                  __end_of_dwt_xfer3000 0B07  
                             clrloop0 20F8                         __doprnt@width 0030  
                end_of_initialization 07FD                 __size_of_get_sts_mnth 006E  
             __end_of_i2c_single_read 241F           dwt_calcbandwidthadj@channel 00BF  
                             init_ram 0004                               memset@c 0070  
                             memset@n 0072                               memset@p 0076  
                             initloop 0005      __size_of_dwt_modify8bitoffsetreg 0037  
                          _reset_DWIC 2181                     _EUSART_Initialize 20CA  
           __size_of_i2c_single_write 001C      __end_of_dwt_modify32bitoffsetreg 138F  
    __end_of_dwt_modify16bitoffsetreg 26E5               __end_of_i2c_multi_write 24F7  
                  ?_EUSART_Initialize 0070                               printf@f 0034  
                          _resp_rx_ts 01C0                      _dwt_generatecrc8 2448  
               __end_of_printf_string 2151               __size_of_dwt_initialise 01B7  
                           _SPI1_Open 1A72                         copybits8@mask 0070  
                          _poll_tx_ts 01C8                 __CFG_WDTCPS$WDTCPS_31 0000  
             dwt_read32bitoffsetreg@j 00BB                   ??_EUSART_Initialize 0070  
                     _dwt_setplenfine 2223              __end_of_dwt_writetxfctrl 146B  
              _dwt_write8bitoffsetreg 2207             dwt_configure@preamble_len 016C  
                   _dwt_writetodevice 25F3                          _get_sts_mnth 1BFE  
                       i2c_write@data 0070              ??_dwt_read16bitoffsetreg 00AB  
            ??_dwt_read32bitoffsetreg 00AB                   SPI1_ReadBlock@block 0071  
                           _TRISCbits 0013            i2c_multi_write@device_addr 0076  
               __size_of_EUSART_Write 0008       process_pmic_status@battery_volt 0048  
     __dwt_kick_dgc_on_wakeup@channel 006D                       ??_dwt_configure 00D8  
                  ?_dwt_writetodevice 00A0                      _dwt_configmrxlut 1687  
               _dwt_read8bitoffsetreg 22CC             _pmic_stat_read_time_count 0143  
                    __CFG_FEXTOSC$OFF 0000                      dwt_pgf_cal@ldoen 00CD  
    __size_of_dwt_write32bitoffsetreg 004C      __size_of_dwt_write16bitoffsetreg 0028  
       dwt_enable_rftx_blocks@channel 00B8            __end_of_lipo_battery_level 2335  
            __end_of_dwt_check_dev_id 18D2             __end_of_EUSART_Initialize 20D5  
                 ??_dwt_writetodevice 007E                            _status_reg 0146  
                   printf_string@data 0071                       ??_dwt_readdevid 007E  
                         ___ftmul@exp 002A                          ?_i2c_restart 0070  
          get_tx_timestamp_u64@F15754 01A8                  _transmitt_beacon_pkt 249E  
             __size_of_dwt_setdwstate 00E4                            ?_SPI1_Open 0070  
                      __end_of___lmul 2526                        __end_of___wmul 21B6  
    __size_of_dwt_disable_rftx_blocks 001C                          _EUSART_Write 20B9  
                    ??_i2c_multi_read 0075          dwt_write8bitoffsetreg@regval 00B4  
           __end_of_dwt_writetodevice 262A                ?_OSCILLATOR_Initialize 0070  
                         _DW3000local 02A0                        __end_of_memset 2207  
                    i2c_multi_write@j 0078                ??_dwt_calcbandwidthadj 00C1  
                          _writetospi 21D1                        __end_of_printf 2167  
             i2c_single_read@I2C_data 0074                   start_initialization 0797  
     __size_of_PIN_MANAGER_Initialize 0046                             _i2c_start 20A7  
                           _i2c_write 20E0                 __size_of_init_bq25895 009E  
             __size_of_dwt_run_pgfcal 0138                     ?_pmic_status_read 0070  
                 dwt_setdwstate@state 00B8                           putch@txData 0071  
                    ?_i2c_single_read 0071        lipo_battery_level@battery_volt 0078  
                  ??_pmic_status_read 004D                             Sleep@time 0070  
                i2c_multi_read@length 0074                           ?_reset_DWIC 0070  
                   __size_of_i2c_init 000D                     __size_of_i2c_read 0010  
                   __size_of_i2c_stop 0005                      __CFG_LPBOREN$OFF 0000  
                dwt_configure@sts_len 016A                      _dwt_force_clocks 2729  
             __end_of_dwt_setplenfine 223F                      ?_i2c_multi_write 0071  
          __end_of_dwt_readfromdevice 25F3            _EUSART_FramingErrorHandler 0156  
                    ??_PMD_Initialize 0070                              ??___lmul 0078  
               ?_transmitt_beacon_pkt 0070                  dwt_starttx@checkTxOK 00C5  
                            ??___wmul 0074                           __doprnt@idx 0027  
                         __doprnt@len 0029                           __doprnt@val 002D  
                         __pdataBANK1 00EF                           __pdataBANK2 0120  
                         __pdataBANK3 01DA                           __pdataBANK4 0220  
                            ??_memset 0074                              ??_printf 003C  
               readfromspi@readBuffer 0027                          _init_bq25895 10B3  
                     _dwt_writetxdata 1DD9                     __size_of___ftpack 0064  
                         __pbssBIGRAM 2EF0                 __size_of_dwt_xfer3000 019B  
                dwt_configmrxlut@lut0 00BA                  dwt_configmrxlut@lut1 00BE  
                dwt_configmrxlut@lut2 00C2                  dwt_configmrxlut@lut3 00C6  
                dwt_configmrxlut@lut4 00CA                  dwt_configmrxlut@lut5 00CE  
                dwt_configmrxlut@lut6 00D2                     __size_of___lltoft 0028  
         __end_of_process_pmic_status 0105                  init_bq25895@I2c_buff 0024  
                           ___latbits 0004                         _pmic_stat_reg 0145  
                       ??_dwt_pgf_cal 007E                     __size_of__fassert 0016  
   __size_of_dwt_modify32bitoffsetreg 00D9     __size_of_dwt_modify16bitoffsetreg 0043  
                    ??_SPI1_ReadBlock 0075                         __pcstackBANK0 0020  
                       __pcstackBANK1 00A0                         __pcstackBANK2 015B  
              ?_dwt_read8bitoffsetreg 0068       __size_of_dwt_read16bitoffsetreg 0041  
     __size_of_dwt_read32bitoffsetreg 0075             ?_dwt_modify16bitoffsetreg 00A0  
           ?_dwt_modify32bitoffsetreg 00A0                         _battery_level 0159  
                          ?_i2c_start 0070                            ?_i2c_write 0070  
                        _isdigit$2606 0070               ??_dwt_settxantennadelay 007E  
             dwt_configuretxrf@config 00C6                 readfromspi@readlength 0023  
      __size_of_dwt_setrxantennadelay 001C      __size_of__dwt_kick_dgc_on_wakeup 0053  
       __end_of_dwt_setrxantennadelay 2277                         ??_dwt_starttx 00BD  
                     _SPI1_WriteBlock 2167                    dwt_configure@error 015D  
                       ??_readfromspi 0078               _dwt_modify8bitoffsetreg 262A  
          __size_of_EUSART_Initialize 000B                             __doprnt@c 0032  
                           __doprnt@f 0020              __end_of_dwt_enable_rf_tx 1202  
            __size_of_set_MSSSP1_mode 009A                     dwt_run_pgfcal@cnt 00CC  
      dwt_read8bitoffsetreg@regFileID 0068                     dwt_run_pgfcal@val 00C8  
                    _i2c_single_write 2293        dwt_read8bitoffsetreg@regOffset 006C  
                    ___lwdiv@dividend 0072                _PIN_MANAGER_Initialize 276E  
               dwt_xfer3000@regFileID 0047              i2c_single_write@reg_addr 0071  
     process_pmic_status@led_off_1980 0040       process_pmic_status@led_off_1972 002C  
     process_pmic_status@led_off_1976 0036            dwt_modify8bitoffsetreg@_or 00A9  
          dwt_modify8bitoffsetreg@buf 0069                        _dwt_initialise 0B07  
                            ?___ftmul 0020                              ?___fttol 0030  
                        _dwt_xfer3000 096C                              ?___lwdiv 0070  
                         ??_SPI1_Open 0070                              ?___lwmod 0078  
                            ?__doprnt 0020                      __CFG_PPS1WAY$OFF 0000  
     dwt_read16bitoffsetreg@regFileID 0068       dwt_read32bitoffsetreg@regFileID 0068  
    dwt_write16bitoffsetreg@regFileID 00AC      dwt_write32bitoffsetreg@regFileID 00AC  
            ??_dwt_enable_rftx_blocks 007E            __size_of_dwt_writetodevice 0037  
     dwt_read16bitoffsetreg@regOffset 006C       dwt_read32bitoffsetreg@regOffset 006C  
                 get_sts_mnth@mod_val 0028      dwt_write16bitoffsetreg@regOffset 00B0  
    dwt_write32bitoffsetreg@regOffset 00B0                           ?_writetospi 0020  
                            ?_dw_main 0070                              _BAUD1CON 011F  
            dwt_readfromdevice@buffer 00AA                              ?_isdigit 0070  
                           _copybits8 209D                  dwt_generatecrc8@data 0076  
                 __size_of_reset_DWIC 001A                  dwt_generatecrc8@byte 0077  
            dwt_readfromdevice@length 00A6                        __size_of_Sleep 0029  
                           _hexpowers 299F               _dwt_write16bitoffsetreg 23CF  
             _dwt_write32bitoffsetreg 27B4                      ___lwdiv@quotient 0075  
        ?__dwt_prog_ldo_and_bias_tune 0070              __end_of_dwt_generatecrc8 2472  
       dwt_setplenfine@preambleLength 0069                        __size_of_putch 0004  
                   dwt_starttx@retval 00C3                   __end_of_dwt_pgf_cal 1BFE  
             i2c_single_read@reg_addr 0071                        ___wmul@product 0074  
                            _LATAbits 0016                              _LATBbits 0017  
                           clear_ram0 20F7                              _PIE3bits 0719  
                   _eusartRxLastError 015A                  i2c_single_write@data 0072  
                dwt_starttx@sys_state 00BF                   __end_of_dwt_starttx 096C  
                            _TAG_ADDR 0150                _dwt_read16bitoffsetreg 2661  
              _dwt_read32bitoffsetreg 1C6C                   __end_of_readfromspi 21D1  
              __end_of_dwt_initialise 0CBE                ??_transmitt_beacon_pkt 00CF  
               i2c_multi_write@length 0073                              _PIR3bits 070F  
                    ?_dwt_setplenfine 0070              __end_of_dwt_configmrxlut 1800  
                            _RNG_ADDR 014E                        _dwt_setdwstate 146B  
                            _SSP1CON1 0190                              _SSP1CON2 0191  
                            _SSP1CON3 0192               __end_of_dwt_writetxdata 1E56  
                            _SSP1STAT 018F               _dwt_disable_rftx_blocks 223F  
                __size_of_i2c_restart 0005         writetospiwithcrc@headerBuffer 0022  
             ?_dwt_write8bitoffsetreg 00AC               dwt_writetodevice@buffer 00AA  
       writetospiwithcrc@headerLength 0020                    SPI1_ReadBlock@data 0076  
             dwt_writetodevice@length 00A6                             _rx_buffer 0252  
            __size_of_dwt_checkidlerc 0033                     ___wmul@multiplier 0070  
             i2c_single_write@I2C_rsp 0074           get_sys_timestamp_u64@F15750 01B0  
                     dwt_pgf_cal@temp 00CF                     ?_dwt_writetxfctrl 00B8  
         process_pmic_status@SDP_STAT 0046                            ?_copybits8 0070  
          dwt_writetodevice@regFileID 00A0               __end_of_SPI1_WriteBlock 2181  
                  ??_dwt_writetxfctrl 00BD                 get_sts_mnth@shift_val 0023  
                         ??_i2c_start 0070                       i2c_multi_read@j 007C  
                    dwt_xfer3000@addr 005F                           ??_i2c_write 0070  
                    dwt_xfer3000@crc8 0061      dwt_generatecrc8@crcRemainderInit 0074  
                    dwt_xfer3000@indx 004B                      dwt_xfer3000@mode 0053  
                      _dwt_run_pgfcal 154F             ??_dwt_modify8bitoffsetreg 0068  
          i2c_single_read@device_addr 0075                     ___lmul@multiplier 0070  
           dwt_force_clocks@regvalue0 006D                 get_sts_mnth@threshold 0022  
                            _i2c_init 2103                              _i2c_read 212D  
                   ?_dwt_check_dev_id 00C1                              _i2c_stop 20AC  
                  ??_dwt_check_dev_id 007E         bq25895_WDT_reset@Reg_03_value 0079  
        dwt_setrxantennadelay@rxDelay 006B                   __size_of_writetospi 001B  
              writetospi@headerBuffer 0022                __end_of_dwt_setdwstate 154F  
    dwt_calcbandwidthadj@target_count 00BD                writetospi@headerLength 0020  
                     ?_dwt_initialise 00C5                    _lipo_battery_level 2311  
      __end_of_dwt_write8bitoffsetreg 2223                     ??_set_MSSSP1_mode 0076  
                       ?__dwt_otpread 00BD               ??_OSCILLATOR_Initialize 0070  
                 _EUSART_ErrorHandler 0152                      __size_of___ftmul 00B4  
                    __size_of___fttol 0087                      __size_of___lwdiv 0034  
                    __size_of___lwmod 002C                              ___ftpack 1B33  
                    __size_of__doprnt 0342                              ___lltoft 23A7  
                 ?_lipo_battery_level 0078                              _add_time 0267  
     __size_of_dwt_enable_rftx_blocks 0056                              __fassert 1003  
           ??_dwt_write16bitoffsetreg 0068             ??_dwt_write32bitoffsetreg 0068  
                    __size_of_dw_main 0061                __end_of_dwt_run_pgfcal 1687  
                    __size_of_isdigit 000E                              _crcTable 2EF0  
            __end_of_dwt_force_clocks 276E                       ___lwdiv@divisor 0070  
                         _dwt_pgf_cal 1B97                       ___lwdiv@counter 0077  
             __dwt_kick_dgc_on_wakeup 196F                              __ptext10 24CA  
                            __ptext11 18D2                              __ptext20 209D  
                            __ptext12 235B                              __ptext21 1AD2  
                            __ptext13 2293                              __ptext30 2558  
                            __ptext22 2181                              __ptext14 23F7  
                            __ptext31 189B                              __ptext23 213D  
                            __ptext15 20E0                              __ptext40 1A18  
                            __ptext32 22ED                              __ptext24 138F  
                            __ptext16 20AC                              __ptext41 0105  
                            __ptext33 26E5                              __ptext25 1DD9  
                            __ptext17 20A7                              __ptext50 2207  
                            __ptext42 1BFE                              __ptext34 1D5D  
                            __ptext26 0802                              __ptext18 20A2  
                            __ptext51 22CC                              __ptext43 24F7  
                            __ptext35 1CE1                              __ptext27 2277  
                            __ptext19 212D                              __ptext60 25F3  
                            __ptext52 1C6C                              __ptext44 2223  
                            __ptext36 1F6D                              __ptext28 225B  
                            __ptext61 196F                              __ptext53 262A  
                            __ptext45 146B                              __ptext37 19C2  
                            __ptext29 0B07                              __ptext70 2448  
                            __ptext62 12B6                              __ptext54 241F  
                            __ptext46 2729                              __ptext38 1151  
                            __ptext71 1003                              __ptext63 096C  
                            __ptext55 2661                              __ptext47 23CF  
                            __ptext39 223F                              __ptext80 23A7  
                            __ptext72 2151                              __ptext64 2335  
                            __ptext56 25BF                              __ptext48 1B97  
                            __ptext81 1E56                              __ptext73 0CBE  
                            __ptext65 21D1                              __ptext57 26A2  
                            __ptext49 154F                              __ptext82 1202  
                            __ptext74 2099                              __ptext66 21B6  
                            __ptext58 1687                              __ptext83 1B33  
                            __ptext75 20B9                              __ptext67 2167  
                            __ptext59 27B4                              __ptext84 20EB  
                            __ptext76 2110                              __ptext68 22AF  
                            __ptext85 20B1                              __ptext77 219B  
                            __ptext69 20D5                              __ptext86 276E  
                            __ptext78 2472                              __ptext87 20C1  
                            __ptext79 258B                              __ptext88 20CA  
                  get_sts_mnth@cipher 0020                          _SSP1CON1bits 0190  
                        _SSP1CON2bits 0191                 __end_of_dwt_configure 0797  
              __size_of_printf_string 0014                           _dwt_starttx 0802  
             dwt_readfromdevice@index 00A4                   dwt_generatecrc8@len 0072  
           dwt_generatecrc8@byteArray 0070                 __dwt_otpread@ret_data 00C1  
                         _readfromspi 21B6                  ??_lipo_battery_level 007A  
                       __size_of_main 0051                          ??_reset_DWIC 0079  
                set_MSSSP1_mode@state 0077                  __CFG_WDTCWS$WDTCWS_7 0000  
         process_pmic_status@led_data 0027                       ?_dwt_setdwstate 00B8  
                          _RC1STAbits 011D             ??_dwt_disable_rftx_blocks 007E  
               __end_of_dwt_readdevid 2311               dwt_enable_rf_tx@channel 00B8  
          get_rx_timestamp_u64@F15758 01A0                     _dwt_disable_rf_tx 1A18  
     __end_of_dwt_modify8bitoffsetreg 2661             __size_of_pmic_status_read 0090  
                      ??__dwt_otpread 007E  __size_of__dwt_prog_ldo_and_bias_tune 0044  
      dwt_writetxfctrl@txBufferOffset 00BA                dwt_writetodevice@index 00A4  
         dwt_modify32bitoffsetreg@_or 00AC           dwt_modify16bitoffsetreg@_or 00AA  
         dwt_modify16bitoffsetreg@buf 0069           dwt_modify32bitoffsetreg@buf 00B0  
                          _ODCONAbits 1F3A                            _ODCONBbits 1F45  
                    ?_dwt_writetxdata 00B8                        dwt_pgf_cal@val 00D1  
                  ?_dwt_disable_rf_tx 0070                          _SSP1STATbits 018F  
                     dwt_xfer3000@cnt 0066           PIN_MANAGER_Initialize@state 0070  
             ??_dwt_read8bitoffsetreg 007E                dwt_force_clocks@clocks 006B  
                         ??_copybits8 0072                   ??_dwt_disable_rf_tx 007E  
                  _dwt_readfromdevice 25BF              __end_of_i2c_single_write 22AF  
       __size_of_dwt_calcbandwidthadj 0093                       ?_dwt_run_pgfcal 00BD  
                    ?_SPI1_WriteBlock 0071                    __end_of_reset_DWIC 219B  
                SPI1_WriteBlock@block 0071                     ??_dwt_checkidlerc 00B4  
                      __pstringtext10 2890                        __pstringtext11 28A3  
                      __pstringtext20 2949                        __pstringtext12 28B6  
                      __pstringtext21 2957                        __pstringtext13 28C9  
                      __pstringtext22 2963                        __pstringtext14 28DB  
                      __pstringtext23 2978                        __pstringtext15 28EC  
                      __pstringtext24 2982                        __pstringtext16 28FD  
                      __pstringtext25 298C                        __pstringtext17 290E  
                      __pstringtext26 2996                        __pstringtext18 291E  
                      __pstringtext27 29A7                        __pstringtext19 293B  
                      __pstringtext28 0000                              isdigit@c 0071  
                            memset@p1 0075                  __dwt_otpread@address 00BD  
                 ?_dwt_readfromdevice 00A0        __size_of_dwt_settxantennadelay 001C  
       __end_of_dwt_settxantennadelay 2293                      ___lwmod@dividend 007A  
              _dwt_enable_rftx_blocks 19C2               ?_PIN_MANAGER_Initialize 0070  
                   __CFG_CLKOUTEN$OFF 0000                     get_sts_mnth@value 002A  
                   ?_dwt_enable_rf_tx 00B8       __end_of_dwt_write32bitoffsetreg 2800  
     __end_of_dwt_write16bitoffsetreg 23F7                           _PPSLOCKbits 1E8F  
                 set_MSSSP1_mode@mode 0078             __end_of_dwt_disable_rf_tx 1A72  
                  ??_dwt_enable_rf_tx 007E              __size_of_i2c_single_read 0028  
               writetospiwithcrc@crc8 0029               i2c_multi_write@reg_addr 0071  
         set_MSSSP1_mode@current_mode 0158              dwt_write32bitoffsetreg@j 006D  
                            printf@ap 003D                              printf@pb 003E  
         writetospiwithcrc@bodyBuffer 0027                  ??_dwt_readfromdevice 007E  
                       _printf_string 213D           writetospiwithcrc@bodyLength 0023  
                 SPI1_WriteBlock@data 0075                         __pstringtext1 292D  
                       __pstringtext2 296E                         __pstringtext3 299F  
                       __pstringtext4 1800                         __pstringtext5 2800  
                       __pstringtext6 2824                         __pstringtext7 2843  
                       __pstringtext8 2860                         __pstringtext9 287A  
            __size_of_i2c_multi_write 002D                          ??_writetospi 0077  
                writetospi@bodyBuffer 0027                  writetospi@bodyLength 0023  
                          _SSP1DATPPS 1EC6                        copybits8@value 0072  
         dwt_writetxdata@txDataLength 00B8                            _SSP1CLKPPS 1EC5  
           ??__dwt_kick_dgc_on_wakeup 007E                       ___lwmod@divisor 0078  
                     ___lwmod@counter 007D       __end_of_dwt_disable_rftx_blocks 225B  
                          _TX1STAbits 011E                    dwt_checkidlerc@reg 00B8  
             __size_of_i2c_multi_read 004C                     ?_dwt_generatecrc8 0070  
                  EUSART_Write@txData 0070            dwt_writetxdata@txDataBytes 00BA  
                  _dwt_configure$1141 0164                    _dwt_configure$1143 015B  
      __end_of_PIN_MANAGER_Initialize 27B4               SPI1_ReadBlock@blockSize 0073  
 lipo_battery_level@battery_level_cal 007B          __size_of_process_pmic_status 00F5  
                  ??_dwt_generatecrc8 0075                 _dwt_setrxantennadelay 225B  
      dwt_enable_rf_tx@switch_control 00BC               ?_dwt_read32bitoffsetreg 0068  
             ?_dwt_read16bitoffsetreg 0068        dwt_disable_rf_tx@switch_config 006F  
                  __end_of_writetospi 21EC            __end_of_spi1_configuration 1804  
