

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 09 09:45:14 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	stringtext23,global,class=STRCODE,delta=2
    31                           	psect	stringtext24,global,class=STRCODE,delta=2
    32                           	psect	cinit,global,class=CODE,merge=1,delta=2
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    39                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    40                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    41                           	psect	inittext,global,class=CODE,delta=2
    42                           	psect	clrtext,global,class=CODE,delta=2
    43                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    44                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    45                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    46                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    47                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    48                           	psect	text1,local,class=CODE,merge=1,delta=2
    49                           	psect	text2,local,class=CODE,merge=1,delta=2
    50                           	psect	text3,local,class=CODE,merge=1,delta=2
    51                           	psect	text4,local,class=CODE,merge=1,delta=2
    52                           	psect	text5,local,class=CODE,merge=1,delta=2
    53                           	psect	text6,local,class=CODE,merge=1,delta=2
    54                           	psect	text7,local,class=CODE,merge=1,delta=2
    55                           	psect	text8,local,class=CODE,merge=1,delta=2
    56                           	psect	text9,local,class=CODE,merge=1,delta=2
    57                           	psect	text10,local,class=CODE,merge=1,delta=2
    58                           	psect	text11,local,class=CODE,merge=1,delta=2
    59                           	psect	text12,local,class=CODE,merge=1,delta=2
    60                           	psect	text13,local,class=CODE,merge=1,delta=2
    61                           	psect	text14,local,class=CODE,merge=1,delta=2
    62                           	psect	text15,local,class=CODE,merge=1,delta=2
    63                           	psect	text16,local,class=CODE,merge=1,delta=2
    64                           	psect	text17,local,class=CODE,merge=1,delta=2
    65                           	psect	text18,local,class=CODE,merge=1,delta=2
    66                           	psect	text19,local,class=CODE,merge=1,delta=2
    67                           	psect	text20,local,class=CODE,merge=1,delta=2
    68                           	psect	text21,local,class=CODE,merge=1,delta=2
    69                           	psect	text22,local,class=CODE,merge=1,delta=2
    70                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text24,local,class=CODE,merge=1,delta=2
    72                           	psect	text25,local,class=CODE,merge=1,delta=2
    73                           	psect	text26,local,class=CODE,merge=1,delta=2
    74                           	psect	text27,local,class=CODE,merge=1,delta=2
    75                           	psect	text28,local,class=CODE,merge=1,delta=2
    76                           	psect	text29,local,class=CODE,merge=1,delta=2
    77                           	psect	text30,local,class=CODE,merge=1,delta=2
    78                           	psect	text31,local,class=CODE,merge=1,delta=2
    79                           	psect	text32,local,class=CODE,merge=1,delta=2
    80                           	psect	text33,local,class=CODE,merge=1,delta=2
    81                           	psect	text34,local,class=CODE,merge=1,delta=2
    82                           	psect	text35,local,class=CODE,merge=1,delta=2
    83                           	psect	text36,local,class=CODE,merge=1,delta=2
    84                           	psect	text37,local,class=CODE,merge=1,delta=2
    85                           	psect	text38,local,class=CODE,merge=1,delta=2
    86                           	psect	text39,local,class=CODE,merge=1,delta=2
    87                           	psect	text40,local,class=CODE,merge=1,delta=2
    88                           	psect	text41,local,class=CODE,merge=1,delta=2
    89                           	psect	text42,local,class=CODE,merge=1,delta=2
    90                           	psect	text43,local,class=CODE,merge=1,delta=2
    91                           	psect	text44,local,class=CODE,merge=1,delta=2
    92                           	psect	text45,local,class=CODE,merge=1,delta=2
    93                           	psect	text46,local,class=CODE,merge=1,delta=2
    94                           	psect	text47,local,class=CODE,merge=1,delta=2
    95                           	psect	text48,local,class=CODE,merge=1,delta=2
    96                           	psect	text49,local,class=CODE,merge=1,delta=2
    97                           	psect	text50,local,class=CODE,merge=1,delta=2
    98                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text53,local,class=CODE,merge=1,delta=2
   101                           	psect	text54,local,class=CODE,merge=1,delta=2
   102                           	psect	text55,local,class=CODE,merge=1,delta=2
   103                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text58,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text60,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text63,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text64,local,class=CODE,merge=1,delta=2
   112                           	psect	text65,local,class=CODE,merge=1,delta=2
   113                           	psect	text66,local,class=CODE,merge=1,delta=2
   114                           	psect	text67,local,class=CODE,merge=1,delta=2
   115                           	psect	text68,local,class=CODE,merge=1,delta=2
   116                           	psect	text69,local,class=CODE,merge=1,delta=2
   117                           	psect	text70,local,class=CODE,merge=1,delta=2
   118                           	psect	text71,local,class=CODE,merge=1,delta=2
   119                           	dabs	1,0x1920,80
   120                           	dabs	1,0x18A0,80
   121                           	dabs	1,0x1820,80
   122                           	dabs	1,0x17E0,16
   123                           	dabs	1,0x2EF0,0,_crcTable
   124                           	dabs	1,0x7E,2
   125  0000                     
   126                           ; Version 1.45
   127                           ; Generated 16/11/2017 GMT
   128                           ; 
   129                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC16F18877 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001C                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  008C                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0110                     	;# 
   220  0110                     	;# 
   221  0111                     	;# 
   222  0112                     	;# 
   223  0112                     	;# 
   224  0113                     	;# 
   225  0114                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0116                     	;# 
   230  0117                     	;# 
   231  0119                     	;# 
   232  0119                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011A                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011B                     	;# 
   242  011C                     	;# 
   243  011C                     	;# 
   244  011C                     	;# 
   245  011D                     	;# 
   246  011D                     	;# 
   247  011D                     	;# 
   248  011E                     	;# 
   249  011E                     	;# 
   250  011E                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  011F                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  018F                     	;# 
   260  0190                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0198                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019C                     	;# 
   270  020C                     	;# 
   271  020C                     	;# 
   272  020D                     	;# 
   273  020E                     	;# 
   274  020F                     	;# 
   275  020F                     	;# 
   276  0210                     	;# 
   277  0210                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0216                     	;# 
   287  0216                     	;# 
   288  0217                     	;# 
   289  0217                     	;# 
   290  0218                     	;# 
   291  0218                     	;# 
   292  0219                     	;# 
   293  021A                     	;# 
   294  021B                     	;# 
   295  021B                     	;# 
   296  021C                     	;# 
   297  021C                     	;# 
   298  021D                     	;# 
   299  021D                     	;# 
   300  021E                     	;# 
   301  021F                     	;# 
   302  028C                     	;# 
   303  028C                     	;# 
   304  028D                     	;# 
   305  028D                     	;# 
   306  028E                     	;# 
   307  028F                     	;# 
   308  0290                     	;# 
   309  0290                     	;# 
   310  0291                     	;# 
   311  0292                     	;# 
   312  0292                     	;# 
   313  0293                     	;# 
   314  0293                     	;# 
   315  0294                     	;# 
   316  0295                     	;# 
   317  0296                     	;# 
   318  0296                     	;# 
   319  0297                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029C                     	;# 
   328  029D                     	;# 
   329  030C                     	;# 
   330  030C                     	;# 
   331  030D                     	;# 
   332  030E                     	;# 
   333  030F                     	;# 
   334  0310                     	;# 
   335  0310                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0314                     	;# 
   340  0314                     	;# 
   341  0315                     	;# 
   342  0316                     	;# 
   343  0317                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  031B                     	;# 
   349  031C                     	;# 
   350  031C                     	;# 
   351  031D                     	;# 
   352  031E                     	;# 
   353  031F                     	;# 
   354  038C                     	;# 
   355  038D                     	;# 
   356  038E                     	;# 
   357  0390                     	;# 
   358  0391                     	;# 
   359  0392                     	;# 
   360  040C                     	;# 
   361  040D                     	;# 
   362  040E                     	;# 
   363  040F                     	;# 
   364  0410                     	;# 
   365  0411                     	;# 
   366  0416                     	;# 
   367  0416                     	;# 
   368  0417                     	;# 
   369  0418                     	;# 
   370  0418                     	;# 
   371  0419                     	;# 
   372  041A                     	;# 
   373  041A                     	;# 
   374  041B                     	;# 
   375  041C                     	;# 
   376  041C                     	;# 
   377  041D                     	;# 
   378  041E                     	;# 
   379  041F                     	;# 
   380  048C                     	;# 
   381  048C                     	;# 
   382  048D                     	;# 
   383  048E                     	;# 
   384  048F                     	;# 
   385  048F                     	;# 
   386  0490                     	;# 
   387  0491                     	;# 
   388  0492                     	;# 
   389  0492                     	;# 
   390  0493                     	;# 
   391  0494                     	;# 
   392  0495                     	;# 
   393  0495                     	;# 
   394  0496                     	;# 
   395  0497                     	;# 
   396  0498                     	;# 
   397  0499                     	;# 
   398  049A                     	;# 
   399  049B                     	;# 
   400  049C                     	;# 
   401  049D                     	;# 
   402  050C                     	;# 
   403  050C                     	;# 
   404  050D                     	;# 
   405  050E                     	;# 
   406  050F                     	;# 
   407  050F                     	;# 
   408  0510                     	;# 
   409  0511                     	;# 
   410  0512                     	;# 
   411  0512                     	;# 
   412  0513                     	;# 
   413  0514                     	;# 
   414  0515                     	;# 
   415  0515                     	;# 
   416  0516                     	;# 
   417  0517                     	;# 
   418  0518                     	;# 
   419  0519                     	;# 
   420  051A                     	;# 
   421  051B                     	;# 
   422  051C                     	;# 
   423  051D                     	;# 
   424  058C                     	;# 
   425  058C                     	;# 
   426  058D                     	;# 
   427  058E                     	;# 
   428  058F                     	;# 
   429  058F                     	;# 
   430  0590                     	;# 
   431  0591                     	;# 
   432  0592                     	;# 
   433  0593                     	;# 
   434  060C                     	;# 
   435  060D                     	;# 
   436  060E                     	;# 
   437  060F                     	;# 
   438  0610                     	;# 
   439  0611                     	;# 
   440  0612                     	;# 
   441  0613                     	;# 
   442  0614                     	;# 
   443  0616                     	;# 
   444  0617                     	;# 
   445  0618                     	;# 
   446  0619                     	;# 
   447  061A                     	;# 
   448  061B                     	;# 
   449  061C                     	;# 
   450  061D                     	;# 
   451  061E                     	;# 
   452  068C                     	;# 
   453  068D                     	;# 
   454  068E                     	;# 
   455  068F                     	;# 
   456  0690                     	;# 
   457  0691                     	;# 
   458  0692                     	;# 
   459  0693                     	;# 
   460  0694                     	;# 
   461  070C                     	;# 
   462  070D                     	;# 
   463  070E                     	;# 
   464  070F                     	;# 
   465  0710                     	;# 
   466  0711                     	;# 
   467  0712                     	;# 
   468  0713                     	;# 
   469  0714                     	;# 
   470  0716                     	;# 
   471  0717                     	;# 
   472  0718                     	;# 
   473  0719                     	;# 
   474  071A                     	;# 
   475  071B                     	;# 
   476  071C                     	;# 
   477  071D                     	;# 
   478  071E                     	;# 
   479  0796                     	;# 
   480  0797                     	;# 
   481  0798                     	;# 
   482  0799                     	;# 
   483  079A                     	;# 
   484  079B                     	;# 
   485  080C                     	;# 
   486  080D                     	;# 
   487  080E                     	;# 
   488  080F                     	;# 
   489  0810                     	;# 
   490  0811                     	;# 
   491  0812                     	;# 
   492  0813                     	;# 
   493  0814                     	;# 
   494  081A                     	;# 
   495  081B                     	;# 
   496  081C                     	;# 
   497  081D                     	;# 
   498  081E                     	;# 
   499  081F                     	;# 
   500  088C                     	;# 
   501  088D                     	;# 
   502  088E                     	;# 
   503  088F                     	;# 
   504  0890                     	;# 
   505  0891                     	;# 
   506  0892                     	;# 
   507  0893                     	;# 
   508  0895                     	;# 
   509  0896                     	;# 
   510  0897                     	;# 
   511  0898                     	;# 
   512  0899                     	;# 
   513  089A                     	;# 
   514  089B                     	;# 
   515  090C                     	;# 
   516  090E                     	;# 
   517  090F                     	;# 
   518  091F                     	;# 
   519  098F                     	;# 
   520  098F                     	;# 
   521  0990                     	;# 
   522  0991                     	;# 
   523  0992                     	;# 
   524  0993                     	;# 
   525  0994                     	;# 
   526  0995                     	;# 
   527  0996                     	;# 
   528  0997                     	;# 
   529  1E0F                     	;# 
   530  1E10                     	;# 
   531  1E11                     	;# 
   532  1E12                     	;# 
   533  1E13                     	;# 
   534  1E14                     	;# 
   535  1E15                     	;# 
   536  1E16                     	;# 
   537  1E17                     	;# 
   538  1E18                     	;# 
   539  1E19                     	;# 
   540  1E1A                     	;# 
   541  1E1B                     	;# 
   542  1E1C                     	;# 
   543  1E1D                     	;# 
   544  1E1E                     	;# 
   545  1E1F                     	;# 
   546  1E20                     	;# 
   547  1E21                     	;# 
   548  1E22                     	;# 
   549  1E23                     	;# 
   550  1E24                     	;# 
   551  1E25                     	;# 
   552  1E26                     	;# 
   553  1E27                     	;# 
   554  1E28                     	;# 
   555  1E29                     	;# 
   556  1E2A                     	;# 
   557  1E2B                     	;# 
   558  1E2C                     	;# 
   559  1E2D                     	;# 
   560  1E2E                     	;# 
   561  1E2F                     	;# 
   562  1E30                     	;# 
   563  1E31                     	;# 
   564  1E32                     	;# 
   565  1E33                     	;# 
   566  1E34                     	;# 
   567  1E35                     	;# 
   568  1E36                     	;# 
   569  1E37                     	;# 
   570  1E8F                     	;# 
   571  1E90                     	;# 
   572  1E91                     	;# 
   573  1E92                     	;# 
   574  1E93                     	;# 
   575  1E94                     	;# 
   576  1E95                     	;# 
   577  1E96                     	;# 
   578  1E97                     	;# 
   579  1E9C                     	;# 
   580  1E9D                     	;# 
   581  1E9E                     	;# 
   582  1EA1                     	;# 
   583  1EA2                     	;# 
   584  1EA3                     	;# 
   585  1EA4                     	;# 
   586  1EA5                     	;# 
   587  1EA9                     	;# 
   588  1EAA                     	;# 
   589  1EAB                     	;# 
   590  1EAC                     	;# 
   591  1EB1                     	;# 
   592  1EB2                     	;# 
   593  1EB3                     	;# 
   594  1EB8                     	;# 
   595  1EB9                     	;# 
   596  1EBA                     	;# 
   597  1EBB                     	;# 
   598  1EBC                     	;# 
   599  1EBD                     	;# 
   600  1EBE                     	;# 
   601  1EC3                     	;# 
   602  1EC5                     	;# 
   603  1EC6                     	;# 
   604  1EC7                     	;# 
   605  1EC8                     	;# 
   606  1EC9                     	;# 
   607  1ECA                     	;# 
   608  1ECB                     	;# 
   609  1ECC                     	;# 
   610  1F10                     	;# 
   611  1F11                     	;# 
   612  1F12                     	;# 
   613  1F13                     	;# 
   614  1F14                     	;# 
   615  1F15                     	;# 
   616  1F16                     	;# 
   617  1F17                     	;# 
   618  1F18                     	;# 
   619  1F19                     	;# 
   620  1F1A                     	;# 
   621  1F1B                     	;# 
   622  1F1C                     	;# 
   623  1F1D                     	;# 
   624  1F1E                     	;# 
   625  1F1F                     	;# 
   626  1F20                     	;# 
   627  1F21                     	;# 
   628  1F22                     	;# 
   629  1F23                     	;# 
   630  1F24                     	;# 
   631  1F25                     	;# 
   632  1F26                     	;# 
   633  1F27                     	;# 
   634  1F28                     	;# 
   635  1F29                     	;# 
   636  1F2A                     	;# 
   637  1F2B                     	;# 
   638  1F2C                     	;# 
   639  1F2D                     	;# 
   640  1F2E                     	;# 
   641  1F2F                     	;# 
   642  1F30                     	;# 
   643  1F31                     	;# 
   644  1F32                     	;# 
   645  1F38                     	;# 
   646  1F39                     	;# 
   647  1F3A                     	;# 
   648  1F3B                     	;# 
   649  1F3C                     	;# 
   650  1F3D                     	;# 
   651  1F3E                     	;# 
   652  1F3F                     	;# 
   653  1F40                     	;# 
   654  1F41                     	;# 
   655  1F43                     	;# 
   656  1F44                     	;# 
   657  1F45                     	;# 
   658  1F46                     	;# 
   659  1F47                     	;# 
   660  1F48                     	;# 
   661  1F49                     	;# 
   662  1F4A                     	;# 
   663  1F4B                     	;# 
   664  1F4C                     	;# 
   665  1F4E                     	;# 
   666  1F4F                     	;# 
   667  1F50                     	;# 
   668  1F51                     	;# 
   669  1F52                     	;# 
   670  1F53                     	;# 
   671  1F54                     	;# 
   672  1F55                     	;# 
   673  1F56                     	;# 
   674  1F57                     	;# 
   675  1F59                     	;# 
   676  1F5A                     	;# 
   677  1F5B                     	;# 
   678  1F5C                     	;# 
   679  1F5D                     	;# 
   680  1F61                     	;# 
   681  1F62                     	;# 
   682  1F64                     	;# 
   683  1F65                     	;# 
   684  1F66                     	;# 
   685  1F67                     	;# 
   686  1F68                     	;# 
   687  1F69                     	;# 
   688  1F6A                     	;# 
   689  1F6B                     	;# 
   690  1F6C                     	;# 
   691  1F6D                     	;# 
   692  1FE4                     	;# 
   693  1FE5                     	;# 
   694  1FE6                     	;# 
   695  1FE7                     	;# 
   696  1FE8                     	;# 
   697  1FE9                     	;# 
   698  1FEA                     	;# 
   699  1FEB                     	;# 
   700  1FED                     	;# 
   701  1FEE                     	;# 
   702  1FEF                     	;# 
   703  0000                     	;# 
   704  0001                     	;# 
   705  0002                     	;# 
   706  0003                     	;# 
   707  0004                     	;# 
   708  0005                     	;# 
   709  0006                     	;# 
   710  0007                     	;# 
   711  0008                     	;# 
   712  0009                     	;# 
   713  000A                     	;# 
   714  000B                     	;# 
   715  000C                     	;# 
   716  000D                     	;# 
   717  000E                     	;# 
   718  000F                     	;# 
   719  0010                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0013                     	;# 
   723  0014                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001C                     	;# 
   731  001C                     	;# 
   732  001D                     	;# 
   733  001D                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  008C                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  008E                     	;# 
   740  008E                     	;# 
   741  008F                     	;# 
   742  0090                     	;# 
   743  0090                     	;# 
   744  0091                     	;# 
   745  0093                     	;# 
   746  0094                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0097                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009A                     	;# 
   753  009B                     	;# 
   754  009C                     	;# 
   755  009D                     	;# 
   756  009E                     	;# 
   757  010C                     	;# 
   758  010D                     	;# 
   759  010E                     	;# 
   760  010E                     	;# 
   761  010F                     	;# 
   762  0110                     	;# 
   763  0110                     	;# 
   764  0111                     	;# 
   765  0112                     	;# 
   766  0112                     	;# 
   767  0113                     	;# 
   768  0114                     	;# 
   769  0114                     	;# 
   770  0115                     	;# 
   771  0116                     	;# 
   772  0116                     	;# 
   773  0117                     	;# 
   774  0119                     	;# 
   775  0119                     	;# 
   776  0119                     	;# 
   777  011A                     	;# 
   778  011A                     	;# 
   779  011A                     	;# 
   780  011B                     	;# 
   781  011B                     	;# 
   782  011B                     	;# 
   783  011B                     	;# 
   784  011B                     	;# 
   785  011C                     	;# 
   786  011C                     	;# 
   787  011C                     	;# 
   788  011D                     	;# 
   789  011D                     	;# 
   790  011D                     	;# 
   791  011E                     	;# 
   792  011E                     	;# 
   793  011E                     	;# 
   794  011F                     	;# 
   795  011F                     	;# 
   796  011F                     	;# 
   797  011F                     	;# 
   798  011F                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  018E                     	;# 
   802  018F                     	;# 
   803  0190                     	;# 
   804  0191                     	;# 
   805  0192                     	;# 
   806  0196                     	;# 
   807  0197                     	;# 
   808  0198                     	;# 
   809  0199                     	;# 
   810  019A                     	;# 
   811  019B                     	;# 
   812  019C                     	;# 
   813  020C                     	;# 
   814  020C                     	;# 
   815  020D                     	;# 
   816  020E                     	;# 
   817  020F                     	;# 
   818  020F                     	;# 
   819  0210                     	;# 
   820  0210                     	;# 
   821  0211                     	;# 
   822  0211                     	;# 
   823  0212                     	;# 
   824  0212                     	;# 
   825  0213                     	;# 
   826  0214                     	;# 
   827  0215                     	;# 
   828  0215                     	;# 
   829  0216                     	;# 
   830  0216                     	;# 
   831  0217                     	;# 
   832  0217                     	;# 
   833  0218                     	;# 
   834  0218                     	;# 
   835  0219                     	;# 
   836  021A                     	;# 
   837  021B                     	;# 
   838  021B                     	;# 
   839  021C                     	;# 
   840  021C                     	;# 
   841  021D                     	;# 
   842  021D                     	;# 
   843  021E                     	;# 
   844  021F                     	;# 
   845  028C                     	;# 
   846  028C                     	;# 
   847  028D                     	;# 
   848  028D                     	;# 
   849  028E                     	;# 
   850  028F                     	;# 
   851  0290                     	;# 
   852  0290                     	;# 
   853  0291                     	;# 
   854  0292                     	;# 
   855  0292                     	;# 
   856  0293                     	;# 
   857  0293                     	;# 
   858  0294                     	;# 
   859  0295                     	;# 
   860  0296                     	;# 
   861  0296                     	;# 
   862  0297                     	;# 
   863  0298                     	;# 
   864  0298                     	;# 
   865  0299                     	;# 
   866  0299                     	;# 
   867  029A                     	;# 
   868  029B                     	;# 
   869  029C                     	;# 
   870  029C                     	;# 
   871  029D                     	;# 
   872  030C                     	;# 
   873  030C                     	;# 
   874  030D                     	;# 
   875  030E                     	;# 
   876  030F                     	;# 
   877  0310                     	;# 
   878  0310                     	;# 
   879  0311                     	;# 
   880  0312                     	;# 
   881  0313                     	;# 
   882  0314                     	;# 
   883  0314                     	;# 
   884  0315                     	;# 
   885  0316                     	;# 
   886  0317                     	;# 
   887  0318                     	;# 
   888  0318                     	;# 
   889  0319                     	;# 
   890  031A                     	;# 
   891  031B                     	;# 
   892  031C                     	;# 
   893  031C                     	;# 
   894  031D                     	;# 
   895  031E                     	;# 
   896  031F                     	;# 
   897  038C                     	;# 
   898  038D                     	;# 
   899  038E                     	;# 
   900  0390                     	;# 
   901  0391                     	;# 
   902  0392                     	;# 
   903  040C                     	;# 
   904  040D                     	;# 
   905  040E                     	;# 
   906  040F                     	;# 
   907  0410                     	;# 
   908  0411                     	;# 
   909  0416                     	;# 
   910  0416                     	;# 
   911  0417                     	;# 
   912  0418                     	;# 
   913  0418                     	;# 
   914  0419                     	;# 
   915  041A                     	;# 
   916  041A                     	;# 
   917  041B                     	;# 
   918  041C                     	;# 
   919  041C                     	;# 
   920  041D                     	;# 
   921  041E                     	;# 
   922  041F                     	;# 
   923  048C                     	;# 
   924  048C                     	;# 
   925  048D                     	;# 
   926  048E                     	;# 
   927  048F                     	;# 
   928  048F                     	;# 
   929  0490                     	;# 
   930  0491                     	;# 
   931  0492                     	;# 
   932  0492                     	;# 
   933  0493                     	;# 
   934  0494                     	;# 
   935  0495                     	;# 
   936  0495                     	;# 
   937  0496                     	;# 
   938  0497                     	;# 
   939  0498                     	;# 
   940  0499                     	;# 
   941  049A                     	;# 
   942  049B                     	;# 
   943  049C                     	;# 
   944  049D                     	;# 
   945  050C                     	;# 
   946  050C                     	;# 
   947  050D                     	;# 
   948  050E                     	;# 
   949  050F                     	;# 
   950  050F                     	;# 
   951  0510                     	;# 
   952  0511                     	;# 
   953  0512                     	;# 
   954  0512                     	;# 
   955  0513                     	;# 
   956  0514                     	;# 
   957  0515                     	;# 
   958  0515                     	;# 
   959  0516                     	;# 
   960  0517                     	;# 
   961  0518                     	;# 
   962  0519                     	;# 
   963  051A                     	;# 
   964  051B                     	;# 
   965  051C                     	;# 
   966  051D                     	;# 
   967  058C                     	;# 
   968  058C                     	;# 
   969  058D                     	;# 
   970  058E                     	;# 
   971  058F                     	;# 
   972  058F                     	;# 
   973  0590                     	;# 
   974  0591                     	;# 
   975  0592                     	;# 
   976  0593                     	;# 
   977  060C                     	;# 
   978  060D                     	;# 
   979  060E                     	;# 
   980  060F                     	;# 
   981  0610                     	;# 
   982  0611                     	;# 
   983  0612                     	;# 
   984  0613                     	;# 
   985  0614                     	;# 
   986  0616                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  061A                     	;# 
   991  061B                     	;# 
   992  061C                     	;# 
   993  061D                     	;# 
   994  061E                     	;# 
   995  068C                     	;# 
   996  068D                     	;# 
   997  068E                     	;# 
   998  068F                     	;# 
   999  0690                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  070C                     	;# 
  1005  070D                     	;# 
  1006  070E                     	;# 
  1007  070F                     	;# 
  1008  0710                     	;# 
  1009  0711                     	;# 
  1010  0712                     	;# 
  1011  0713                     	;# 
  1012  0714                     	;# 
  1013  0716                     	;# 
  1014  0717                     	;# 
  1015  0718                     	;# 
  1016  0719                     	;# 
  1017  071A                     	;# 
  1018  071B                     	;# 
  1019  071C                     	;# 
  1020  071D                     	;# 
  1021  071E                     	;# 
  1022  0796                     	;# 
  1023  0797                     	;# 
  1024  0798                     	;# 
  1025  0799                     	;# 
  1026  079A                     	;# 
  1027  079B                     	;# 
  1028  080C                     	;# 
  1029  080D                     	;# 
  1030  080E                     	;# 
  1031  080F                     	;# 
  1032  0810                     	;# 
  1033  0811                     	;# 
  1034  0812                     	;# 
  1035  0813                     	;# 
  1036  0814                     	;# 
  1037  081A                     	;# 
  1038  081B                     	;# 
  1039  081C                     	;# 
  1040  081D                     	;# 
  1041  081E                     	;# 
  1042  081F                     	;# 
  1043  088C                     	;# 
  1044  088D                     	;# 
  1045  088E                     	;# 
  1046  088F                     	;# 
  1047  0890                     	;# 
  1048  0891                     	;# 
  1049  0892                     	;# 
  1050  0893                     	;# 
  1051  0895                     	;# 
  1052  0896                     	;# 
  1053  0897                     	;# 
  1054  0898                     	;# 
  1055  0899                     	;# 
  1056  089A                     	;# 
  1057  089B                     	;# 
  1058  090C                     	;# 
  1059  090E                     	;# 
  1060  090F                     	;# 
  1061  091F                     	;# 
  1062  098F                     	;# 
  1063  098F                     	;# 
  1064  0990                     	;# 
  1065  0991                     	;# 
  1066  0992                     	;# 
  1067  0993                     	;# 
  1068  0994                     	;# 
  1069  0995                     	;# 
  1070  0996                     	;# 
  1071  0997                     	;# 
  1072  1E0F                     	;# 
  1073  1E10                     	;# 
  1074  1E11                     	;# 
  1075  1E12                     	;# 
  1076  1E13                     	;# 
  1077  1E14                     	;# 
  1078  1E15                     	;# 
  1079  1E16                     	;# 
  1080  1E17                     	;# 
  1081  1E18                     	;# 
  1082  1E19                     	;# 
  1083  1E1A                     	;# 
  1084  1E1B                     	;# 
  1085  1E1C                     	;# 
  1086  1E1D                     	;# 
  1087  1E1E                     	;# 
  1088  1E1F                     	;# 
  1089  1E20                     	;# 
  1090  1E21                     	;# 
  1091  1E22                     	;# 
  1092  1E23                     	;# 
  1093  1E24                     	;# 
  1094  1E25                     	;# 
  1095  1E26                     	;# 
  1096  1E27                     	;# 
  1097  1E28                     	;# 
  1098  1E29                     	;# 
  1099  1E2A                     	;# 
  1100  1E2B                     	;# 
  1101  1E2C                     	;# 
  1102  1E2D                     	;# 
  1103  1E2E                     	;# 
  1104  1E2F                     	;# 
  1105  1E30                     	;# 
  1106  1E31                     	;# 
  1107  1E32                     	;# 
  1108  1E33                     	;# 
  1109  1E34                     	;# 
  1110  1E35                     	;# 
  1111  1E36                     	;# 
  1112  1E37                     	;# 
  1113  1E8F                     	;# 
  1114  1E90                     	;# 
  1115  1E91                     	;# 
  1116  1E92                     	;# 
  1117  1E93                     	;# 
  1118  1E94                     	;# 
  1119  1E95                     	;# 
  1120  1E96                     	;# 
  1121  1E97                     	;# 
  1122  1E9C                     	;# 
  1123  1E9D                     	;# 
  1124  1E9E                     	;# 
  1125  1EA1                     	;# 
  1126  1EA2                     	;# 
  1127  1EA3                     	;# 
  1128  1EA4                     	;# 
  1129  1EA5                     	;# 
  1130  1EA9                     	;# 
  1131  1EAA                     	;# 
  1132  1EAB                     	;# 
  1133  1EAC                     	;# 
  1134  1EB1                     	;# 
  1135  1EB2                     	;# 
  1136  1EB3                     	;# 
  1137  1EB8                     	;# 
  1138  1EB9                     	;# 
  1139  1EBA                     	;# 
  1140  1EBB                     	;# 
  1141  1EBC                     	;# 
  1142  1EBD                     	;# 
  1143  1EBE                     	;# 
  1144  1EC3                     	;# 
  1145  1EC5                     	;# 
  1146  1EC6                     	;# 
  1147  1EC7                     	;# 
  1148  1EC8                     	;# 
  1149  1EC9                     	;# 
  1150  1ECA                     	;# 
  1151  1ECB                     	;# 
  1152  1ECC                     	;# 
  1153  1F10                     	;# 
  1154  1F11                     	;# 
  1155  1F12                     	;# 
  1156  1F13                     	;# 
  1157  1F14                     	;# 
  1158  1F15                     	;# 
  1159  1F16                     	;# 
  1160  1F17                     	;# 
  1161  1F18                     	;# 
  1162  1F19                     	;# 
  1163  1F1A                     	;# 
  1164  1F1B                     	;# 
  1165  1F1C                     	;# 
  1166  1F1D                     	;# 
  1167  1F1E                     	;# 
  1168  1F1F                     	;# 
  1169  1F20                     	;# 
  1170  1F21                     	;# 
  1171  1F22                     	;# 
  1172  1F23                     	;# 
  1173  1F24                     	;# 
  1174  1F25                     	;# 
  1175  1F26                     	;# 
  1176  1F27                     	;# 
  1177  1F28                     	;# 
  1178  1F29                     	;# 
  1179  1F2A                     	;# 
  1180  1F2B                     	;# 
  1181  1F2C                     	;# 
  1182  1F2D                     	;# 
  1183  1F2E                     	;# 
  1184  1F2F                     	;# 
  1185  1F30                     	;# 
  1186  1F31                     	;# 
  1187  1F32                     	;# 
  1188  1F38                     	;# 
  1189  1F39                     	;# 
  1190  1F3A                     	;# 
  1191  1F3B                     	;# 
  1192  1F3C                     	;# 
  1193  1F3D                     	;# 
  1194  1F3E                     	;# 
  1195  1F3F                     	;# 
  1196  1F40                     	;# 
  1197  1F41                     	;# 
  1198  1F43                     	;# 
  1199  1F44                     	;# 
  1200  1F45                     	;# 
  1201  1F46                     	;# 
  1202  1F47                     	;# 
  1203  1F48                     	;# 
  1204  1F49                     	;# 
  1205  1F4A                     	;# 
  1206  1F4B                     	;# 
  1207  1F4C                     	;# 
  1208  1F4E                     	;# 
  1209  1F4F                     	;# 
  1210  1F50                     	;# 
  1211  1F51                     	;# 
  1212  1F52                     	;# 
  1213  1F53                     	;# 
  1214  1F54                     	;# 
  1215  1F55                     	;# 
  1216  1F56                     	;# 
  1217  1F57                     	;# 
  1218  1F59                     	;# 
  1219  1F5A                     	;# 
  1220  1F5B                     	;# 
  1221  1F5C                     	;# 
  1222  1F5D                     	;# 
  1223  1F61                     	;# 
  1224  1F62                     	;# 
  1225  1F64                     	;# 
  1226  1F65                     	;# 
  1227  1F66                     	;# 
  1228  1F67                     	;# 
  1229  1F68                     	;# 
  1230  1F69                     	;# 
  1231  1F6A                     	;# 
  1232  1F6B                     	;# 
  1233  1F6C                     	;# 
  1234  1F6D                     	;# 
  1235  1FE4                     	;# 
  1236  1FE5                     	;# 
  1237  1FE6                     	;# 
  1238  1FE7                     	;# 
  1239  1FE8                     	;# 
  1240  1FE9                     	;# 
  1241  1FEA                     	;# 
  1242  1FEB                     	;# 
  1243  1FED                     	;# 
  1244  1FEE                     	;# 
  1245  1FEF                     	;# 
  1246  0000                     	;# 
  1247  0001                     	;# 
  1248  0002                     	;# 
  1249  0003                     	;# 
  1250  0004                     	;# 
  1251  0005                     	;# 
  1252  0006                     	;# 
  1253  0007                     	;# 
  1254  0008                     	;# 
  1255  0009                     	;# 
  1256  000A                     	;# 
  1257  000B                     	;# 
  1258  000C                     	;# 
  1259  000D                     	;# 
  1260  000E                     	;# 
  1261  000F                     	;# 
  1262  0010                     	;# 
  1263  0011                     	;# 
  1264  0012                     	;# 
  1265  0013                     	;# 
  1266  0014                     	;# 
  1267  0015                     	;# 
  1268  0016                     	;# 
  1269  0017                     	;# 
  1270  0018                     	;# 
  1271  0019                     	;# 
  1272  001A                     	;# 
  1273  001C                     	;# 
  1274  001C                     	;# 
  1275  001D                     	;# 
  1276  001D                     	;# 
  1277  001E                     	;# 
  1278  001F                     	;# 
  1279  008C                     	;# 
  1280  008C                     	;# 
  1281  008D                     	;# 
  1282  008E                     	;# 
  1283  008E                     	;# 
  1284  008F                     	;# 
  1285  0090                     	;# 
  1286  0090                     	;# 
  1287  0091                     	;# 
  1288  0093                     	;# 
  1289  0094                     	;# 
  1290  0095                     	;# 
  1291  0096                     	;# 
  1292  0097                     	;# 
  1293  0098                     	;# 
  1294  0099                     	;# 
  1295  009A                     	;# 
  1296  009B                     	;# 
  1297  009C                     	;# 
  1298  009D                     	;# 
  1299  009E                     	;# 
  1300  010C                     	;# 
  1301  010D                     	;# 
  1302  010E                     	;# 
  1303  010E                     	;# 
  1304  010F                     	;# 
  1305  0110                     	;# 
  1306  0110                     	;# 
  1307  0111                     	;# 
  1308  0112                     	;# 
  1309  0112                     	;# 
  1310  0113                     	;# 
  1311  0114                     	;# 
  1312  0114                     	;# 
  1313  0115                     	;# 
  1314  0116                     	;# 
  1315  0116                     	;# 
  1316  0117                     	;# 
  1317  0119                     	;# 
  1318  0119                     	;# 
  1319  0119                     	;# 
  1320  011A                     	;# 
  1321  011A                     	;# 
  1322  011A                     	;# 
  1323  011B                     	;# 
  1324  011B                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011C                     	;# 
  1329  011C                     	;# 
  1330  011C                     	;# 
  1331  011D                     	;# 
  1332  011D                     	;# 
  1333  011D                     	;# 
  1334  011E                     	;# 
  1335  011E                     	;# 
  1336  011E                     	;# 
  1337  011F                     	;# 
  1338  011F                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  018C                     	;# 
  1343  018D                     	;# 
  1344  018E                     	;# 
  1345  018F                     	;# 
  1346  0190                     	;# 
  1347  0191                     	;# 
  1348  0192                     	;# 
  1349  0196                     	;# 
  1350  0197                     	;# 
  1351  0198                     	;# 
  1352  0199                     	;# 
  1353  019A                     	;# 
  1354  019B                     	;# 
  1355  019C                     	;# 
  1356  020C                     	;# 
  1357  020C                     	;# 
  1358  020D                     	;# 
  1359  020E                     	;# 
  1360  020F                     	;# 
  1361  020F                     	;# 
  1362  0210                     	;# 
  1363  0210                     	;# 
  1364  0211                     	;# 
  1365  0211                     	;# 
  1366  0212                     	;# 
  1367  0212                     	;# 
  1368  0213                     	;# 
  1369  0214                     	;# 
  1370  0215                     	;# 
  1371  0215                     	;# 
  1372  0216                     	;# 
  1373  0216                     	;# 
  1374  0217                     	;# 
  1375  0217                     	;# 
  1376  0218                     	;# 
  1377  0218                     	;# 
  1378  0219                     	;# 
  1379  021A                     	;# 
  1380  021B                     	;# 
  1381  021B                     	;# 
  1382  021C                     	;# 
  1383  021C                     	;# 
  1384  021D                     	;# 
  1385  021D                     	;# 
  1386  021E                     	;# 
  1387  021F                     	;# 
  1388  028C                     	;# 
  1389  028C                     	;# 
  1390  028D                     	;# 
  1391  028D                     	;# 
  1392  028E                     	;# 
  1393  028F                     	;# 
  1394  0290                     	;# 
  1395  0290                     	;# 
  1396  0291                     	;# 
  1397  0292                     	;# 
  1398  0292                     	;# 
  1399  0293                     	;# 
  1400  0293                     	;# 
  1401  0294                     	;# 
  1402  0295                     	;# 
  1403  0296                     	;# 
  1404  0296                     	;# 
  1405  0297                     	;# 
  1406  0298                     	;# 
  1407  0298                     	;# 
  1408  0299                     	;# 
  1409  0299                     	;# 
  1410  029A                     	;# 
  1411  029B                     	;# 
  1412  029C                     	;# 
  1413  029C                     	;# 
  1414  029D                     	;# 
  1415  030C                     	;# 
  1416  030C                     	;# 
  1417  030D                     	;# 
  1418  030E                     	;# 
  1419  030F                     	;# 
  1420  0310                     	;# 
  1421  0310                     	;# 
  1422  0311                     	;# 
  1423  0312                     	;# 
  1424  0313                     	;# 
  1425  0314                     	;# 
  1426  0314                     	;# 
  1427  0315                     	;# 
  1428  0316                     	;# 
  1429  0317                     	;# 
  1430  0318                     	;# 
  1431  0318                     	;# 
  1432  0319                     	;# 
  1433  031A                     	;# 
  1434  031B                     	;# 
  1435  031C                     	;# 
  1436  031C                     	;# 
  1437  031D                     	;# 
  1438  031E                     	;# 
  1439  031F                     	;# 
  1440  038C                     	;# 
  1441  038D                     	;# 
  1442  038E                     	;# 
  1443  0390                     	;# 
  1444  0391                     	;# 
  1445  0392                     	;# 
  1446  040C                     	;# 
  1447  040D                     	;# 
  1448  040E                     	;# 
  1449  040F                     	;# 
  1450  0410                     	;# 
  1451  0411                     	;# 
  1452  0416                     	;# 
  1453  0416                     	;# 
  1454  0417                     	;# 
  1455  0418                     	;# 
  1456  0418                     	;# 
  1457  0419                     	;# 
  1458  041A                     	;# 
  1459  041A                     	;# 
  1460  041B                     	;# 
  1461  041C                     	;# 
  1462  041C                     	;# 
  1463  041D                     	;# 
  1464  041E                     	;# 
  1465  041F                     	;# 
  1466  048C                     	;# 
  1467  048C                     	;# 
  1468  048D                     	;# 
  1469  048E                     	;# 
  1470  048F                     	;# 
  1471  048F                     	;# 
  1472  0490                     	;# 
  1473  0491                     	;# 
  1474  0492                     	;# 
  1475  0492                     	;# 
  1476  0493                     	;# 
  1477  0494                     	;# 
  1478  0495                     	;# 
  1479  0495                     	;# 
  1480  0496                     	;# 
  1481  0497                     	;# 
  1482  0498                     	;# 
  1483  0499                     	;# 
  1484  049A                     	;# 
  1485  049B                     	;# 
  1486  049C                     	;# 
  1487  049D                     	;# 
  1488  050C                     	;# 
  1489  050C                     	;# 
  1490  050D                     	;# 
  1491  050E                     	;# 
  1492  050F                     	;# 
  1493  050F                     	;# 
  1494  0510                     	;# 
  1495  0511                     	;# 
  1496  0512                     	;# 
  1497  0512                     	;# 
  1498  0513                     	;# 
  1499  0514                     	;# 
  1500  0515                     	;# 
  1501  0515                     	;# 
  1502  0516                     	;# 
  1503  0517                     	;# 
  1504  0518                     	;# 
  1505  0519                     	;# 
  1506  051A                     	;# 
  1507  051B                     	;# 
  1508  051C                     	;# 
  1509  051D                     	;# 
  1510  058C                     	;# 
  1511  058C                     	;# 
  1512  058D                     	;# 
  1513  058E                     	;# 
  1514  058F                     	;# 
  1515  058F                     	;# 
  1516  0590                     	;# 
  1517  0591                     	;# 
  1518  0592                     	;# 
  1519  0593                     	;# 
  1520  060C                     	;# 
  1521  060D                     	;# 
  1522  060E                     	;# 
  1523  060F                     	;# 
  1524  0610                     	;# 
  1525  0611                     	;# 
  1526  0612                     	;# 
  1527  0613                     	;# 
  1528  0614                     	;# 
  1529  0616                     	;# 
  1530  0617                     	;# 
  1531  0618                     	;# 
  1532  0619                     	;# 
  1533  061A                     	;# 
  1534  061B                     	;# 
  1535  061C                     	;# 
  1536  061D                     	;# 
  1537  061E                     	;# 
  1538  068C                     	;# 
  1539  068D                     	;# 
  1540  068E                     	;# 
  1541  068F                     	;# 
  1542  0690                     	;# 
  1543  0691                     	;# 
  1544  0692                     	;# 
  1545  0693                     	;# 
  1546  0694                     	;# 
  1547  070C                     	;# 
  1548  070D                     	;# 
  1549  070E                     	;# 
  1550  070F                     	;# 
  1551  0710                     	;# 
  1552  0711                     	;# 
  1553  0712                     	;# 
  1554  0713                     	;# 
  1555  0714                     	;# 
  1556  0716                     	;# 
  1557  0717                     	;# 
  1558  0718                     	;# 
  1559  0719                     	;# 
  1560  071A                     	;# 
  1561  071B                     	;# 
  1562  071C                     	;# 
  1563  071D                     	;# 
  1564  071E                     	;# 
  1565  0796                     	;# 
  1566  0797                     	;# 
  1567  0798                     	;# 
  1568  0799                     	;# 
  1569  079A                     	;# 
  1570  079B                     	;# 
  1571  080C                     	;# 
  1572  080D                     	;# 
  1573  080E                     	;# 
  1574  080F                     	;# 
  1575  0810                     	;# 
  1576  0811                     	;# 
  1577  0812                     	;# 
  1578  0813                     	;# 
  1579  0814                     	;# 
  1580  081A                     	;# 
  1581  081B                     	;# 
  1582  081C                     	;# 
  1583  081D                     	;# 
  1584  081E                     	;# 
  1585  081F                     	;# 
  1586  088C                     	;# 
  1587  088D                     	;# 
  1588  088E                     	;# 
  1589  088F                     	;# 
  1590  0890                     	;# 
  1591  0891                     	;# 
  1592  0892                     	;# 
  1593  0893                     	;# 
  1594  0895                     	;# 
  1595  0896                     	;# 
  1596  0897                     	;# 
  1597  0898                     	;# 
  1598  0899                     	;# 
  1599  089A                     	;# 
  1600  089B                     	;# 
  1601  090C                     	;# 
  1602  090E                     	;# 
  1603  090F                     	;# 
  1604  091F                     	;# 
  1605  098F                     	;# 
  1606  098F                     	;# 
  1607  0990                     	;# 
  1608  0991                     	;# 
  1609  0992                     	;# 
  1610  0993                     	;# 
  1611  0994                     	;# 
  1612  0995                     	;# 
  1613  0996                     	;# 
  1614  0997                     	;# 
  1615  1E0F                     	;# 
  1616  1E10                     	;# 
  1617  1E11                     	;# 
  1618  1E12                     	;# 
  1619  1E13                     	;# 
  1620  1E14                     	;# 
  1621  1E15                     	;# 
  1622  1E16                     	;# 
  1623  1E17                     	;# 
  1624  1E18                     	;# 
  1625  1E19                     	;# 
  1626  1E1A                     	;# 
  1627  1E1B                     	;# 
  1628  1E1C                     	;# 
  1629  1E1D                     	;# 
  1630  1E1E                     	;# 
  1631  1E1F                     	;# 
  1632  1E20                     	;# 
  1633  1E21                     	;# 
  1634  1E22                     	;# 
  1635  1E23                     	;# 
  1636  1E24                     	;# 
  1637  1E25                     	;# 
  1638  1E26                     	;# 
  1639  1E27                     	;# 
  1640  1E28                     	;# 
  1641  1E29                     	;# 
  1642  1E2A                     	;# 
  1643  1E2B                     	;# 
  1644  1E2C                     	;# 
  1645  1E2D                     	;# 
  1646  1E2E                     	;# 
  1647  1E2F                     	;# 
  1648  1E30                     	;# 
  1649  1E31                     	;# 
  1650  1E32                     	;# 
  1651  1E33                     	;# 
  1652  1E34                     	;# 
  1653  1E35                     	;# 
  1654  1E36                     	;# 
  1655  1E37                     	;# 
  1656  1E8F                     	;# 
  1657  1E90                     	;# 
  1658  1E91                     	;# 
  1659  1E92                     	;# 
  1660  1E93                     	;# 
  1661  1E94                     	;# 
  1662  1E95                     	;# 
  1663  1E96                     	;# 
  1664  1E97                     	;# 
  1665  1E9C                     	;# 
  1666  1E9D                     	;# 
  1667  1E9E                     	;# 
  1668  1EA1                     	;# 
  1669  1EA2                     	;# 
  1670  1EA3                     	;# 
  1671  1EA4                     	;# 
  1672  1EA5                     	;# 
  1673  1EA9                     	;# 
  1674  1EAA                     	;# 
  1675  1EAB                     	;# 
  1676  1EAC                     	;# 
  1677  1EB1                     	;# 
  1678  1EB2                     	;# 
  1679  1EB3                     	;# 
  1680  1EB8                     	;# 
  1681  1EB9                     	;# 
  1682  1EBA                     	;# 
  1683  1EBB                     	;# 
  1684  1EBC                     	;# 
  1685  1EBD                     	;# 
  1686  1EBE                     	;# 
  1687  1EC3                     	;# 
  1688  1EC5                     	;# 
  1689  1EC6                     	;# 
  1690  1EC7                     	;# 
  1691  1EC8                     	;# 
  1692  1EC9                     	;# 
  1693  1ECA                     	;# 
  1694  1ECB                     	;# 
  1695  1ECC                     	;# 
  1696  1F10                     	;# 
  1697  1F11                     	;# 
  1698  1F12                     	;# 
  1699  1F13                     	;# 
  1700  1F14                     	;# 
  1701  1F15                     	;# 
  1702  1F16                     	;# 
  1703  1F17                     	;# 
  1704  1F18                     	;# 
  1705  1F19                     	;# 
  1706  1F1A                     	;# 
  1707  1F1B                     	;# 
  1708  1F1C                     	;# 
  1709  1F1D                     	;# 
  1710  1F1E                     	;# 
  1711  1F1F                     	;# 
  1712  1F20                     	;# 
  1713  1F21                     	;# 
  1714  1F22                     	;# 
  1715  1F23                     	;# 
  1716  1F24                     	;# 
  1717  1F25                     	;# 
  1718  1F26                     	;# 
  1719  1F27                     	;# 
  1720  1F28                     	;# 
  1721  1F29                     	;# 
  1722  1F2A                     	;# 
  1723  1F2B                     	;# 
  1724  1F2C                     	;# 
  1725  1F2D                     	;# 
  1726  1F2E                     	;# 
  1727  1F2F                     	;# 
  1728  1F30                     	;# 
  1729  1F31                     	;# 
  1730  1F32                     	;# 
  1731  1F38                     	;# 
  1732  1F39                     	;# 
  1733  1F3A                     	;# 
  1734  1F3B                     	;# 
  1735  1F3C                     	;# 
  1736  1F3D                     	;# 
  1737  1F3E                     	;# 
  1738  1F3F                     	;# 
  1739  1F40                     	;# 
  1740  1F41                     	;# 
  1741  1F43                     	;# 
  1742  1F44                     	;# 
  1743  1F45                     	;# 
  1744  1F46                     	;# 
  1745  1F47                     	;# 
  1746  1F48                     	;# 
  1747  1F49                     	;# 
  1748  1F4A                     	;# 
  1749  1F4B                     	;# 
  1750  1F4C                     	;# 
  1751  1F4E                     	;# 
  1752  1F4F                     	;# 
  1753  1F50                     	;# 
  1754  1F51                     	;# 
  1755  1F52                     	;# 
  1756  1F53                     	;# 
  1757  1F54                     	;# 
  1758  1F55                     	;# 
  1759  1F56                     	;# 
  1760  1F57                     	;# 
  1761  1F59                     	;# 
  1762  1F5A                     	;# 
  1763  1F5B                     	;# 
  1764  1F5C                     	;# 
  1765  1F5D                     	;# 
  1766  1F61                     	;# 
  1767  1F62                     	;# 
  1768  1F64                     	;# 
  1769  1F65                     	;# 
  1770  1F66                     	;# 
  1771  1F67                     	;# 
  1772  1F68                     	;# 
  1773  1F69                     	;# 
  1774  1F6A                     	;# 
  1775  1F6B                     	;# 
  1776  1F6C                     	;# 
  1777  1F6D                     	;# 
  1778  1FE4                     	;# 
  1779  1FE5                     	;# 
  1780  1FE6                     	;# 
  1781  1FE7                     	;# 
  1782  1FE8                     	;# 
  1783  1FE9                     	;# 
  1784  1FEA                     	;# 
  1785  1FEB                     	;# 
  1786  1FED                     	;# 
  1787  1FEE                     	;# 
  1788  1FEF                     	;# 
  1789  0000                     	;# 
  1790  0001                     	;# 
  1791  0002                     	;# 
  1792  0003                     	;# 
  1793  0004                     	;# 
  1794  0005                     	;# 
  1795  0006                     	;# 
  1796  0007                     	;# 
  1797  0008                     	;# 
  1798  0009                     	;# 
  1799  000A                     	;# 
  1800  000B                     	;# 
  1801  000C                     	;# 
  1802  000D                     	;# 
  1803  000E                     	;# 
  1804  000F                     	;# 
  1805  0010                     	;# 
  1806  0011                     	;# 
  1807  0012                     	;# 
  1808  0013                     	;# 
  1809  0014                     	;# 
  1810  0015                     	;# 
  1811  0016                     	;# 
  1812  0017                     	;# 
  1813  0018                     	;# 
  1814  0019                     	;# 
  1815  001A                     	;# 
  1816  001C                     	;# 
  1817  001C                     	;# 
  1818  001D                     	;# 
  1819  001D                     	;# 
  1820  001E                     	;# 
  1821  001F                     	;# 
  1822  008C                     	;# 
  1823  008C                     	;# 
  1824  008D                     	;# 
  1825  008E                     	;# 
  1826  008E                     	;# 
  1827  008F                     	;# 
  1828  0090                     	;# 
  1829  0090                     	;# 
  1830  0091                     	;# 
  1831  0093                     	;# 
  1832  0094                     	;# 
  1833  0095                     	;# 
  1834  0096                     	;# 
  1835  0097                     	;# 
  1836  0098                     	;# 
  1837  0099                     	;# 
  1838  009A                     	;# 
  1839  009B                     	;# 
  1840  009C                     	;# 
  1841  009D                     	;# 
  1842  009E                     	;# 
  1843  010C                     	;# 
  1844  010D                     	;# 
  1845  010E                     	;# 
  1846  010E                     	;# 
  1847  010F                     	;# 
  1848  0110                     	;# 
  1849  0110                     	;# 
  1850  0111                     	;# 
  1851  0112                     	;# 
  1852  0112                     	;# 
  1853  0113                     	;# 
  1854  0114                     	;# 
  1855  0114                     	;# 
  1856  0115                     	;# 
  1857  0116                     	;# 
  1858  0116                     	;# 
  1859  0117                     	;# 
  1860  0119                     	;# 
  1861  0119                     	;# 
  1862  0119                     	;# 
  1863  011A                     	;# 
  1864  011A                     	;# 
  1865  011A                     	;# 
  1866  011B                     	;# 
  1867  011B                     	;# 
  1868  011B                     	;# 
  1869  011B                     	;# 
  1870  011B                     	;# 
  1871  011C                     	;# 
  1872  011C                     	;# 
  1873  011C                     	;# 
  1874  011D                     	;# 
  1875  011D                     	;# 
  1876  011D                     	;# 
  1877  011E                     	;# 
  1878  011E                     	;# 
  1879  011E                     	;# 
  1880  011F                     	;# 
  1881  011F                     	;# 
  1882  011F                     	;# 
  1883  011F                     	;# 
  1884  011F                     	;# 
  1885  018C                     	;# 
  1886  018D                     	;# 
  1887  018E                     	;# 
  1888  018F                     	;# 
  1889  0190                     	;# 
  1890  0191                     	;# 
  1891  0192                     	;# 
  1892  0196                     	;# 
  1893  0197                     	;# 
  1894  0198                     	;# 
  1895  0199                     	;# 
  1896  019A                     	;# 
  1897  019B                     	;# 
  1898  019C                     	;# 
  1899  020C                     	;# 
  1900  020C                     	;# 
  1901  020D                     	;# 
  1902  020E                     	;# 
  1903  020F                     	;# 
  1904  020F                     	;# 
  1905  0210                     	;# 
  1906  0210                     	;# 
  1907  0211                     	;# 
  1908  0211                     	;# 
  1909  0212                     	;# 
  1910  0212                     	;# 
  1911  0213                     	;# 
  1912  0214                     	;# 
  1913  0215                     	;# 
  1914  0215                     	;# 
  1915  0216                     	;# 
  1916  0216                     	;# 
  1917  0217                     	;# 
  1918  0217                     	;# 
  1919  0218                     	;# 
  1920  0218                     	;# 
  1921  0219                     	;# 
  1922  021A                     	;# 
  1923  021B                     	;# 
  1924  021B                     	;# 
  1925  021C                     	;# 
  1926  021C                     	;# 
  1927  021D                     	;# 
  1928  021D                     	;# 
  1929  021E                     	;# 
  1930  021F                     	;# 
  1931  028C                     	;# 
  1932  028C                     	;# 
  1933  028D                     	;# 
  1934  028D                     	;# 
  1935  028E                     	;# 
  1936  028F                     	;# 
  1937  0290                     	;# 
  1938  0290                     	;# 
  1939  0291                     	;# 
  1940  0292                     	;# 
  1941  0292                     	;# 
  1942  0293                     	;# 
  1943  0293                     	;# 
  1944  0294                     	;# 
  1945  0295                     	;# 
  1946  0296                     	;# 
  1947  0296                     	;# 
  1948  0297                     	;# 
  1949  0298                     	;# 
  1950  0298                     	;# 
  1951  0299                     	;# 
  1952  0299                     	;# 
  1953  029A                     	;# 
  1954  029B                     	;# 
  1955  029C                     	;# 
  1956  029C                     	;# 
  1957  029D                     	;# 
  1958  030C                     	;# 
  1959  030C                     	;# 
  1960  030D                     	;# 
  1961  030E                     	;# 
  1962  030F                     	;# 
  1963  0310                     	;# 
  1964  0310                     	;# 
  1965  0311                     	;# 
  1966  0312                     	;# 
  1967  0313                     	;# 
  1968  0314                     	;# 
  1969  0314                     	;# 
  1970  0315                     	;# 
  1971  0316                     	;# 
  1972  0317                     	;# 
  1973  0318                     	;# 
  1974  0318                     	;# 
  1975  0319                     	;# 
  1976  031A                     	;# 
  1977  031B                     	;# 
  1978  031C                     	;# 
  1979  031C                     	;# 
  1980  031D                     	;# 
  1981  031E                     	;# 
  1982  031F                     	;# 
  1983  038C                     	;# 
  1984  038D                     	;# 
  1985  038E                     	;# 
  1986  0390                     	;# 
  1987  0391                     	;# 
  1988  0392                     	;# 
  1989  040C                     	;# 
  1990  040D                     	;# 
  1991  040E                     	;# 
  1992  040F                     	;# 
  1993  0410                     	;# 
  1994  0411                     	;# 
  1995  0416                     	;# 
  1996  0416                     	;# 
  1997  0417                     	;# 
  1998  0418                     	;# 
  1999  0418                     	;# 
  2000  0419                     	;# 
  2001  041A                     	;# 
  2002  041A                     	;# 
  2003  041B                     	;# 
  2004  041C                     	;# 
  2005  041C                     	;# 
  2006  041D                     	;# 
  2007  041E                     	;# 
  2008  041F                     	;# 
  2009  048C                     	;# 
  2010  048C                     	;# 
  2011  048D                     	;# 
  2012  048E                     	;# 
  2013  048F                     	;# 
  2014  048F                     	;# 
  2015  0490                     	;# 
  2016  0491                     	;# 
  2017  0492                     	;# 
  2018  0492                     	;# 
  2019  0493                     	;# 
  2020  0494                     	;# 
  2021  0495                     	;# 
  2022  0495                     	;# 
  2023  0496                     	;# 
  2024  0497                     	;# 
  2025  0498                     	;# 
  2026  0499                     	;# 
  2027  049A                     	;# 
  2028  049B                     	;# 
  2029  049C                     	;# 
  2030  049D                     	;# 
  2031  050C                     	;# 
  2032  050C                     	;# 
  2033  050D                     	;# 
  2034  050E                     	;# 
  2035  050F                     	;# 
  2036  050F                     	;# 
  2037  0510                     	;# 
  2038  0511                     	;# 
  2039  0512                     	;# 
  2040  0512                     	;# 
  2041  0513                     	;# 
  2042  0514                     	;# 
  2043  0515                     	;# 
  2044  0515                     	;# 
  2045  0516                     	;# 
  2046  0517                     	;# 
  2047  0518                     	;# 
  2048  0519                     	;# 
  2049  051A                     	;# 
  2050  051B                     	;# 
  2051  051C                     	;# 
  2052  051D                     	;# 
  2053  058C                     	;# 
  2054  058C                     	;# 
  2055  058D                     	;# 
  2056  058E                     	;# 
  2057  058F                     	;# 
  2058  058F                     	;# 
  2059  0590                     	;# 
  2060  0591                     	;# 
  2061  0592                     	;# 
  2062  0593                     	;# 
  2063  060C                     	;# 
  2064  060D                     	;# 
  2065  060E                     	;# 
  2066  060F                     	;# 
  2067  0610                     	;# 
  2068  0611                     	;# 
  2069  0612                     	;# 
  2070  0613                     	;# 
  2071  0614                     	;# 
  2072  0616                     	;# 
  2073  0617                     	;# 
  2074  0618                     	;# 
  2075  0619                     	;# 
  2076  061A                     	;# 
  2077  061B                     	;# 
  2078  061C                     	;# 
  2079  061D                     	;# 
  2080  061E                     	;# 
  2081  068C                     	;# 
  2082  068D                     	;# 
  2083  068E                     	;# 
  2084  068F                     	;# 
  2085  0690                     	;# 
  2086  0691                     	;# 
  2087  0692                     	;# 
  2088  0693                     	;# 
  2089  0694                     	;# 
  2090  070C                     	;# 
  2091  070D                     	;# 
  2092  070E                     	;# 
  2093  070F                     	;# 
  2094  0710                     	;# 
  2095  0711                     	;# 
  2096  0712                     	;# 
  2097  0713                     	;# 
  2098  0714                     	;# 
  2099  0716                     	;# 
  2100  0717                     	;# 
  2101  0718                     	;# 
  2102  0719                     	;# 
  2103  071A                     	;# 
  2104  071B                     	;# 
  2105  071C                     	;# 
  2106  071D                     	;# 
  2107  071E                     	;# 
  2108  0796                     	;# 
  2109  0797                     	;# 
  2110  0798                     	;# 
  2111  0799                     	;# 
  2112  079A                     	;# 
  2113  079B                     	;# 
  2114  080C                     	;# 
  2115  080D                     	;# 
  2116  080E                     	;# 
  2117  080F                     	;# 
  2118  0810                     	;# 
  2119  0811                     	;# 
  2120  0812                     	;# 
  2121  0813                     	;# 
  2122  0814                     	;# 
  2123  081A                     	;# 
  2124  081B                     	;# 
  2125  081C                     	;# 
  2126  081D                     	;# 
  2127  081E                     	;# 
  2128  081F                     	;# 
  2129  088C                     	;# 
  2130  088D                     	;# 
  2131  088E                     	;# 
  2132  088F                     	;# 
  2133  0890                     	;# 
  2134  0891                     	;# 
  2135  0892                     	;# 
  2136  0893                     	;# 
  2137  0895                     	;# 
  2138  0896                     	;# 
  2139  0897                     	;# 
  2140  0898                     	;# 
  2141  0899                     	;# 
  2142  089A                     	;# 
  2143  089B                     	;# 
  2144  090C                     	;# 
  2145  090E                     	;# 
  2146  090F                     	;# 
  2147  091F                     	;# 
  2148  098F                     	;# 
  2149  098F                     	;# 
  2150  0990                     	;# 
  2151  0991                     	;# 
  2152  0992                     	;# 
  2153  0993                     	;# 
  2154  0994                     	;# 
  2155  0995                     	;# 
  2156  0996                     	;# 
  2157  0997                     	;# 
  2158  1E0F                     	;# 
  2159  1E10                     	;# 
  2160  1E11                     	;# 
  2161  1E12                     	;# 
  2162  1E13                     	;# 
  2163  1E14                     	;# 
  2164  1E15                     	;# 
  2165  1E16                     	;# 
  2166  1E17                     	;# 
  2167  1E18                     	;# 
  2168  1E19                     	;# 
  2169  1E1A                     	;# 
  2170  1E1B                     	;# 
  2171  1E1C                     	;# 
  2172  1E1D                     	;# 
  2173  1E1E                     	;# 
  2174  1E1F                     	;# 
  2175  1E20                     	;# 
  2176  1E21                     	;# 
  2177  1E22                     	;# 
  2178  1E23                     	;# 
  2179  1E24                     	;# 
  2180  1E25                     	;# 
  2181  1E26                     	;# 
  2182  1E27                     	;# 
  2183  1E28                     	;# 
  2184  1E29                     	;# 
  2185  1E2A                     	;# 
  2186  1E2B                     	;# 
  2187  1E2C                     	;# 
  2188  1E2D                     	;# 
  2189  1E2E                     	;# 
  2190  1E2F                     	;# 
  2191  1E30                     	;# 
  2192  1E31                     	;# 
  2193  1E32                     	;# 
  2194  1E33                     	;# 
  2195  1E34                     	;# 
  2196  1E35                     	;# 
  2197  1E36                     	;# 
  2198  1E37                     	;# 
  2199  1E8F                     	;# 
  2200  1E90                     	;# 
  2201  1E91                     	;# 
  2202  1E92                     	;# 
  2203  1E93                     	;# 
  2204  1E94                     	;# 
  2205  1E95                     	;# 
  2206  1E96                     	;# 
  2207  1E97                     	;# 
  2208  1E9C                     	;# 
  2209  1E9D                     	;# 
  2210  1E9E                     	;# 
  2211  1EA1                     	;# 
  2212  1EA2                     	;# 
  2213  1EA3                     	;# 
  2214  1EA4                     	;# 
  2215  1EA5                     	;# 
  2216  1EA9                     	;# 
  2217  1EAA                     	;# 
  2218  1EAB                     	;# 
  2219  1EAC                     	;# 
  2220  1EB1                     	;# 
  2221  1EB2                     	;# 
  2222  1EB3                     	;# 
  2223  1EB8                     	;# 
  2224  1EB9                     	;# 
  2225  1EBA                     	;# 
  2226  1EBB                     	;# 
  2227  1EBC                     	;# 
  2228  1EBD                     	;# 
  2229  1EBE                     	;# 
  2230  1EC3                     	;# 
  2231  1EC5                     	;# 
  2232  1EC6                     	;# 
  2233  1EC7                     	;# 
  2234  1EC8                     	;# 
  2235  1EC9                     	;# 
  2236  1ECA                     	;# 
  2237  1ECB                     	;# 
  2238  1ECC                     	;# 
  2239  1F10                     	;# 
  2240  1F11                     	;# 
  2241  1F12                     	;# 
  2242  1F13                     	;# 
  2243  1F14                     	;# 
  2244  1F15                     	;# 
  2245  1F16                     	;# 
  2246  1F17                     	;# 
  2247  1F18                     	;# 
  2248  1F19                     	;# 
  2249  1F1A                     	;# 
  2250  1F1B                     	;# 
  2251  1F1C                     	;# 
  2252  1F1D                     	;# 
  2253  1F1E                     	;# 
  2254  1F1F                     	;# 
  2255  1F20                     	;# 
  2256  1F21                     	;# 
  2257  1F22                     	;# 
  2258  1F23                     	;# 
  2259  1F24                     	;# 
  2260  1F25                     	;# 
  2261  1F26                     	;# 
  2262  1F27                     	;# 
  2263  1F28                     	;# 
  2264  1F29                     	;# 
  2265  1F2A                     	;# 
  2266  1F2B                     	;# 
  2267  1F2C                     	;# 
  2268  1F2D                     	;# 
  2269  1F2E                     	;# 
  2270  1F2F                     	;# 
  2271  1F30                     	;# 
  2272  1F31                     	;# 
  2273  1F32                     	;# 
  2274  1F38                     	;# 
  2275  1F39                     	;# 
  2276  1F3A                     	;# 
  2277  1F3B                     	;# 
  2278  1F3C                     	;# 
  2279  1F3D                     	;# 
  2280  1F3E                     	;# 
  2281  1F3F                     	;# 
  2282  1F40                     	;# 
  2283  1F41                     	;# 
  2284  1F43                     	;# 
  2285  1F44                     	;# 
  2286  1F45                     	;# 
  2287  1F46                     	;# 
  2288  1F47                     	;# 
  2289  1F48                     	;# 
  2290  1F49                     	;# 
  2291  1F4A                     	;# 
  2292  1F4B                     	;# 
  2293  1F4C                     	;# 
  2294  1F4E                     	;# 
  2295  1F4F                     	;# 
  2296  1F50                     	;# 
  2297  1F51                     	;# 
  2298  1F52                     	;# 
  2299  1F53                     	;# 
  2300  1F54                     	;# 
  2301  1F55                     	;# 
  2302  1F56                     	;# 
  2303  1F57                     	;# 
  2304  1F59                     	;# 
  2305  1F5A                     	;# 
  2306  1F5B                     	;# 
  2307  1F5C                     	;# 
  2308  1F5D                     	;# 
  2309  1F61                     	;# 
  2310  1F62                     	;# 
  2311  1F64                     	;# 
  2312  1F65                     	;# 
  2313  1F66                     	;# 
  2314  1F67                     	;# 
  2315  1F68                     	;# 
  2316  1F69                     	;# 
  2317  1F6A                     	;# 
  2318  1F6B                     	;# 
  2319  1F6C                     	;# 
  2320  1F6D                     	;# 
  2321  1FE4                     	;# 
  2322  1FE5                     	;# 
  2323  1FE6                     	;# 
  2324  1FE7                     	;# 
  2325  1FE8                     	;# 
  2326  1FE9                     	;# 
  2327  1FEA                     	;# 
  2328  1FEB                     	;# 
  2329  1FED                     	;# 
  2330  1FEE                     	;# 
  2331  1FEF                     	;# 
  2332  0000                     	;# 
  2333  0001                     	;# 
  2334  0002                     	;# 
  2335  0003                     	;# 
  2336  0004                     	;# 
  2337  0005                     	;# 
  2338  0006                     	;# 
  2339  0007                     	;# 
  2340  0008                     	;# 
  2341  0009                     	;# 
  2342  000A                     	;# 
  2343  000B                     	;# 
  2344  000C                     	;# 
  2345  000D                     	;# 
  2346  000E                     	;# 
  2347  000F                     	;# 
  2348  0010                     	;# 
  2349  0011                     	;# 
  2350  0012                     	;# 
  2351  0013                     	;# 
  2352  0014                     	;# 
  2353  0015                     	;# 
  2354  0016                     	;# 
  2355  0017                     	;# 
  2356  0018                     	;# 
  2357  0019                     	;# 
  2358  001A                     	;# 
  2359  001C                     	;# 
  2360  001C                     	;# 
  2361  001D                     	;# 
  2362  001D                     	;# 
  2363  001E                     	;# 
  2364  001F                     	;# 
  2365  008C                     	;# 
  2366  008C                     	;# 
  2367  008D                     	;# 
  2368  008E                     	;# 
  2369  008E                     	;# 
  2370  008F                     	;# 
  2371  0090                     	;# 
  2372  0090                     	;# 
  2373  0091                     	;# 
  2374  0093                     	;# 
  2375  0094                     	;# 
  2376  0095                     	;# 
  2377  0096                     	;# 
  2378  0097                     	;# 
  2379  0098                     	;# 
  2380  0099                     	;# 
  2381  009A                     	;# 
  2382  009B                     	;# 
  2383  009C                     	;# 
  2384  009D                     	;# 
  2385  009E                     	;# 
  2386  010C                     	;# 
  2387  010D                     	;# 
  2388  010E                     	;# 
  2389  010E                     	;# 
  2390  010F                     	;# 
  2391  0110                     	;# 
  2392  0110                     	;# 
  2393  0111                     	;# 
  2394  0112                     	;# 
  2395  0112                     	;# 
  2396  0113                     	;# 
  2397  0114                     	;# 
  2398  0114                     	;# 
  2399  0115                     	;# 
  2400  0116                     	;# 
  2401  0116                     	;# 
  2402  0117                     	;# 
  2403  0119                     	;# 
  2404  0119                     	;# 
  2405  0119                     	;# 
  2406  011A                     	;# 
  2407  011A                     	;# 
  2408  011A                     	;# 
  2409  011B                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011B                     	;# 
  2413  011B                     	;# 
  2414  011C                     	;# 
  2415  011C                     	;# 
  2416  011C                     	;# 
  2417  011D                     	;# 
  2418  011D                     	;# 
  2419  011D                     	;# 
  2420  011E                     	;# 
  2421  011E                     	;# 
  2422  011E                     	;# 
  2423  011F                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  011F                     	;# 
  2427  011F                     	;# 
  2428  018C                     	;# 
  2429  018D                     	;# 
  2430  018E                     	;# 
  2431  018F                     	;# 
  2432  0190                     	;# 
  2433  0191                     	;# 
  2434  0192                     	;# 
  2435  0196                     	;# 
  2436  0197                     	;# 
  2437  0198                     	;# 
  2438  0199                     	;# 
  2439  019A                     	;# 
  2440  019B                     	;# 
  2441  019C                     	;# 
  2442  020C                     	;# 
  2443  020C                     	;# 
  2444  020D                     	;# 
  2445  020E                     	;# 
  2446  020F                     	;# 
  2447  020F                     	;# 
  2448  0210                     	;# 
  2449  0210                     	;# 
  2450  0211                     	;# 
  2451  0211                     	;# 
  2452  0212                     	;# 
  2453  0212                     	;# 
  2454  0213                     	;# 
  2455  0214                     	;# 
  2456  0215                     	;# 
  2457  0215                     	;# 
  2458  0216                     	;# 
  2459  0216                     	;# 
  2460  0217                     	;# 
  2461  0217                     	;# 
  2462  0218                     	;# 
  2463  0218                     	;# 
  2464  0219                     	;# 
  2465  021A                     	;# 
  2466  021B                     	;# 
  2467  021B                     	;# 
  2468  021C                     	;# 
  2469  021C                     	;# 
  2470  021D                     	;# 
  2471  021D                     	;# 
  2472  021E                     	;# 
  2473  021F                     	;# 
  2474  028C                     	;# 
  2475  028C                     	;# 
  2476  028D                     	;# 
  2477  028D                     	;# 
  2478  028E                     	;# 
  2479  028F                     	;# 
  2480  0290                     	;# 
  2481  0290                     	;# 
  2482  0291                     	;# 
  2483  0292                     	;# 
  2484  0292                     	;# 
  2485  0293                     	;# 
  2486  0293                     	;# 
  2487  0294                     	;# 
  2488  0295                     	;# 
  2489  0296                     	;# 
  2490  0296                     	;# 
  2491  0297                     	;# 
  2492  0298                     	;# 
  2493  0298                     	;# 
  2494  0299                     	;# 
  2495  0299                     	;# 
  2496  029A                     	;# 
  2497  029B                     	;# 
  2498  029C                     	;# 
  2499  029C                     	;# 
  2500  029D                     	;# 
  2501  030C                     	;# 
  2502  030C                     	;# 
  2503  030D                     	;# 
  2504  030E                     	;# 
  2505  030F                     	;# 
  2506  0310                     	;# 
  2507  0310                     	;# 
  2508  0311                     	;# 
  2509  0312                     	;# 
  2510  0313                     	;# 
  2511  0314                     	;# 
  2512  0314                     	;# 
  2513  0315                     	;# 
  2514  0316                     	;# 
  2515  0317                     	;# 
  2516  0318                     	;# 
  2517  0318                     	;# 
  2518  0319                     	;# 
  2519  031A                     	;# 
  2520  031B                     	;# 
  2521  031C                     	;# 
  2522  031C                     	;# 
  2523  031D                     	;# 
  2524  031E                     	;# 
  2525  031F                     	;# 
  2526  038C                     	;# 
  2527  038D                     	;# 
  2528  038E                     	;# 
  2529  0390                     	;# 
  2530  0391                     	;# 
  2531  0392                     	;# 
  2532  040C                     	;# 
  2533  040D                     	;# 
  2534  040E                     	;# 
  2535  040F                     	;# 
  2536  0410                     	;# 
  2537  0411                     	;# 
  2538  0416                     	;# 
  2539  0416                     	;# 
  2540  0417                     	;# 
  2541  0418                     	;# 
  2542  0418                     	;# 
  2543  0419                     	;# 
  2544  041A                     	;# 
  2545  041A                     	;# 
  2546  041B                     	;# 
  2547  041C                     	;# 
  2548  041C                     	;# 
  2549  041D                     	;# 
  2550  041E                     	;# 
  2551  041F                     	;# 
  2552  048C                     	;# 
  2553  048C                     	;# 
  2554  048D                     	;# 
  2555  048E                     	;# 
  2556  048F                     	;# 
  2557  048F                     	;# 
  2558  0490                     	;# 
  2559  0491                     	;# 
  2560  0492                     	;# 
  2561  0492                     	;# 
  2562  0493                     	;# 
  2563  0494                     	;# 
  2564  0495                     	;# 
  2565  0495                     	;# 
  2566  0496                     	;# 
  2567  0497                     	;# 
  2568  0498                     	;# 
  2569  0499                     	;# 
  2570  049A                     	;# 
  2571  049B                     	;# 
  2572  049C                     	;# 
  2573  049D                     	;# 
  2574  050C                     	;# 
  2575  050C                     	;# 
  2576  050D                     	;# 
  2577  050E                     	;# 
  2578  050F                     	;# 
  2579  050F                     	;# 
  2580  0510                     	;# 
  2581  0511                     	;# 
  2582  0512                     	;# 
  2583  0512                     	;# 
  2584  0513                     	;# 
  2585  0514                     	;# 
  2586  0515                     	;# 
  2587  0515                     	;# 
  2588  0516                     	;# 
  2589  0517                     	;# 
  2590  0518                     	;# 
  2591  0519                     	;# 
  2592  051A                     	;# 
  2593  051B                     	;# 
  2594  051C                     	;# 
  2595  051D                     	;# 
  2596  058C                     	;# 
  2597  058C                     	;# 
  2598  058D                     	;# 
  2599  058E                     	;# 
  2600  058F                     	;# 
  2601  058F                     	;# 
  2602  0590                     	;# 
  2603  0591                     	;# 
  2604  0592                     	;# 
  2605  0593                     	;# 
  2606  060C                     	;# 
  2607  060D                     	;# 
  2608  060E                     	;# 
  2609  060F                     	;# 
  2610  0610                     	;# 
  2611  0611                     	;# 
  2612  0612                     	;# 
  2613  0613                     	;# 
  2614  0614                     	;# 
  2615  0616                     	;# 
  2616  0617                     	;# 
  2617  0618                     	;# 
  2618  0619                     	;# 
  2619  061A                     	;# 
  2620  061B                     	;# 
  2621  061C                     	;# 
  2622  061D                     	;# 
  2623  061E                     	;# 
  2624  068C                     	;# 
  2625  068D                     	;# 
  2626  068E                     	;# 
  2627  068F                     	;# 
  2628  0690                     	;# 
  2629  0691                     	;# 
  2630  0692                     	;# 
  2631  0693                     	;# 
  2632  0694                     	;# 
  2633  070C                     	;# 
  2634  070D                     	;# 
  2635  070E                     	;# 
  2636  070F                     	;# 
  2637  0710                     	;# 
  2638  0711                     	;# 
  2639  0712                     	;# 
  2640  0713                     	;# 
  2641  0714                     	;# 
  2642  0716                     	;# 
  2643  0717                     	;# 
  2644  0718                     	;# 
  2645  0719                     	;# 
  2646  071A                     	;# 
  2647  071B                     	;# 
  2648  071C                     	;# 
  2649  071D                     	;# 
  2650  071E                     	;# 
  2651  0796                     	;# 
  2652  0797                     	;# 
  2653  0798                     	;# 
  2654  0799                     	;# 
  2655  079A                     	;# 
  2656  079B                     	;# 
  2657  080C                     	;# 
  2658  080D                     	;# 
  2659  080E                     	;# 
  2660  080F                     	;# 
  2661  0810                     	;# 
  2662  0811                     	;# 
  2663  0812                     	;# 
  2664  0813                     	;# 
  2665  0814                     	;# 
  2666  081A                     	;# 
  2667  081B                     	;# 
  2668  081C                     	;# 
  2669  081D                     	;# 
  2670  081E                     	;# 
  2671  081F                     	;# 
  2672  088C                     	;# 
  2673  088D                     	;# 
  2674  088E                     	;# 
  2675  088F                     	;# 
  2676  0890                     	;# 
  2677  0891                     	;# 
  2678  0892                     	;# 
  2679  0893                     	;# 
  2680  0895                     	;# 
  2681  0896                     	;# 
  2682  0897                     	;# 
  2683  0898                     	;# 
  2684  0899                     	;# 
  2685  089A                     	;# 
  2686  089B                     	;# 
  2687  090C                     	;# 
  2688  090E                     	;# 
  2689  090F                     	;# 
  2690  091F                     	;# 
  2691  098F                     	;# 
  2692  098F                     	;# 
  2693  0990                     	;# 
  2694  0991                     	;# 
  2695  0992                     	;# 
  2696  0993                     	;# 
  2697  0994                     	;# 
  2698  0995                     	;# 
  2699  0996                     	;# 
  2700  0997                     	;# 
  2701  1E0F                     	;# 
  2702  1E10                     	;# 
  2703  1E11                     	;# 
  2704  1E12                     	;# 
  2705  1E13                     	;# 
  2706  1E14                     	;# 
  2707  1E15                     	;# 
  2708  1E16                     	;# 
  2709  1E17                     	;# 
  2710  1E18                     	;# 
  2711  1E19                     	;# 
  2712  1E1A                     	;# 
  2713  1E1B                     	;# 
  2714  1E1C                     	;# 
  2715  1E1D                     	;# 
  2716  1E1E                     	;# 
  2717  1E1F                     	;# 
  2718  1E20                     	;# 
  2719  1E21                     	;# 
  2720  1E22                     	;# 
  2721  1E23                     	;# 
  2722  1E24                     	;# 
  2723  1E25                     	;# 
  2724  1E26                     	;# 
  2725  1E27                     	;# 
  2726  1E28                     	;# 
  2727  1E29                     	;# 
  2728  1E2A                     	;# 
  2729  1E2B                     	;# 
  2730  1E2C                     	;# 
  2731  1E2D                     	;# 
  2732  1E2E                     	;# 
  2733  1E2F                     	;# 
  2734  1E30                     	;# 
  2735  1E31                     	;# 
  2736  1E32                     	;# 
  2737  1E33                     	;# 
  2738  1E34                     	;# 
  2739  1E35                     	;# 
  2740  1E36                     	;# 
  2741  1E37                     	;# 
  2742  1E8F                     	;# 
  2743  1E90                     	;# 
  2744  1E91                     	;# 
  2745  1E92                     	;# 
  2746  1E93                     	;# 
  2747  1E94                     	;# 
  2748  1E95                     	;# 
  2749  1E96                     	;# 
  2750  1E97                     	;# 
  2751  1E9C                     	;# 
  2752  1E9D                     	;# 
  2753  1E9E                     	;# 
  2754  1EA1                     	;# 
  2755  1EA2                     	;# 
  2756  1EA3                     	;# 
  2757  1EA4                     	;# 
  2758  1EA5                     	;# 
  2759  1EA9                     	;# 
  2760  1EAA                     	;# 
  2761  1EAB                     	;# 
  2762  1EAC                     	;# 
  2763  1EB1                     	;# 
  2764  1EB2                     	;# 
  2765  1EB3                     	;# 
  2766  1EB8                     	;# 
  2767  1EB9                     	;# 
  2768  1EBA                     	;# 
  2769  1EBB                     	;# 
  2770  1EBC                     	;# 
  2771  1EBD                     	;# 
  2772  1EBE                     	;# 
  2773  1EC3                     	;# 
  2774  1EC5                     	;# 
  2775  1EC6                     	;# 
  2776  1EC7                     	;# 
  2777  1EC8                     	;# 
  2778  1EC9                     	;# 
  2779  1ECA                     	;# 
  2780  1ECB                     	;# 
  2781  1ECC                     	;# 
  2782  1F10                     	;# 
  2783  1F11                     	;# 
  2784  1F12                     	;# 
  2785  1F13                     	;# 
  2786  1F14                     	;# 
  2787  1F15                     	;# 
  2788  1F16                     	;# 
  2789  1F17                     	;# 
  2790  1F18                     	;# 
  2791  1F19                     	;# 
  2792  1F1A                     	;# 
  2793  1F1B                     	;# 
  2794  1F1C                     	;# 
  2795  1F1D                     	;# 
  2796  1F1E                     	;# 
  2797  1F1F                     	;# 
  2798  1F20                     	;# 
  2799  1F21                     	;# 
  2800  1F22                     	;# 
  2801  1F23                     	;# 
  2802  1F24                     	;# 
  2803  1F25                     	;# 
  2804  1F26                     	;# 
  2805  1F27                     	;# 
  2806  1F28                     	;# 
  2807  1F29                     	;# 
  2808  1F2A                     	;# 
  2809  1F2B                     	;# 
  2810  1F2C                     	;# 
  2811  1F2D                     	;# 
  2812  1F2E                     	;# 
  2813  1F2F                     	;# 
  2814  1F30                     	;# 
  2815  1F31                     	;# 
  2816  1F32                     	;# 
  2817  1F38                     	;# 
  2818  1F39                     	;# 
  2819  1F3A                     	;# 
  2820  1F3B                     	;# 
  2821  1F3C                     	;# 
  2822  1F3D                     	;# 
  2823  1F3E                     	;# 
  2824  1F3F                     	;# 
  2825  1F40                     	;# 
  2826  1F41                     	;# 
  2827  1F43                     	;# 
  2828  1F44                     	;# 
  2829  1F45                     	;# 
  2830  1F46                     	;# 
  2831  1F47                     	;# 
  2832  1F48                     	;# 
  2833  1F49                     	;# 
  2834  1F4A                     	;# 
  2835  1F4B                     	;# 
  2836  1F4C                     	;# 
  2837  1F4E                     	;# 
  2838  1F4F                     	;# 
  2839  1F50                     	;# 
  2840  1F51                     	;# 
  2841  1F52                     	;# 
  2842  1F53                     	;# 
  2843  1F54                     	;# 
  2844  1F55                     	;# 
  2845  1F56                     	;# 
  2846  1F57                     	;# 
  2847  1F59                     	;# 
  2848  1F5A                     	;# 
  2849  1F5B                     	;# 
  2850  1F5C                     	;# 
  2851  1F5D                     	;# 
  2852  1F61                     	;# 
  2853  1F62                     	;# 
  2854  1F64                     	;# 
  2855  1F65                     	;# 
  2856  1F66                     	;# 
  2857  1F67                     	;# 
  2858  1F68                     	;# 
  2859  1F69                     	;# 
  2860  1F6A                     	;# 
  2861  1F6B                     	;# 
  2862  1F6C                     	;# 
  2863  1F6D                     	;# 
  2864  1FE4                     	;# 
  2865  1FE5                     	;# 
  2866  1FE6                     	;# 
  2867  1FE7                     	;# 
  2868  1FE8                     	;# 
  2869  1FE9                     	;# 
  2870  1FEA                     	;# 
  2871  1FEB                     	;# 
  2872  1FED                     	;# 
  2873  1FEE                     	;# 
  2874  1FEF                     	;# 
  2875  0000                     	;# 
  2876  0001                     	;# 
  2877  0002                     	;# 
  2878  0003                     	;# 
  2879  0004                     	;# 
  2880  0005                     	;# 
  2881  0006                     	;# 
  2882  0007                     	;# 
  2883  0008                     	;# 
  2884  0009                     	;# 
  2885  000A                     	;# 
  2886  000B                     	;# 
  2887  000C                     	;# 
  2888  000D                     	;# 
  2889  000E                     	;# 
  2890  000F                     	;# 
  2891  0010                     	;# 
  2892  0011                     	;# 
  2893  0012                     	;# 
  2894  0013                     	;# 
  2895  0014                     	;# 
  2896  0015                     	;# 
  2897  0016                     	;# 
  2898  0017                     	;# 
  2899  0018                     	;# 
  2900  0019                     	;# 
  2901  001A                     	;# 
  2902  001C                     	;# 
  2903  001C                     	;# 
  2904  001D                     	;# 
  2905  001D                     	;# 
  2906  001E                     	;# 
  2907  001F                     	;# 
  2908  008C                     	;# 
  2909  008C                     	;# 
  2910  008D                     	;# 
  2911  008E                     	;# 
  2912  008E                     	;# 
  2913  008F                     	;# 
  2914  0090                     	;# 
  2915  0090                     	;# 
  2916  0091                     	;# 
  2917  0093                     	;# 
  2918  0094                     	;# 
  2919  0095                     	;# 
  2920  0096                     	;# 
  2921  0097                     	;# 
  2922  0098                     	;# 
  2923  0099                     	;# 
  2924  009A                     	;# 
  2925  009B                     	;# 
  2926  009C                     	;# 
  2927  009D                     	;# 
  2928  009E                     	;# 
  2929  010C                     	;# 
  2930  010D                     	;# 
  2931  010E                     	;# 
  2932  010E                     	;# 
  2933  010F                     	;# 
  2934  0110                     	;# 
  2935  0110                     	;# 
  2936  0111                     	;# 
  2937  0112                     	;# 
  2938  0112                     	;# 
  2939  0113                     	;# 
  2940  0114                     	;# 
  2941  0114                     	;# 
  2942  0115                     	;# 
  2943  0116                     	;# 
  2944  0116                     	;# 
  2945  0117                     	;# 
  2946  0119                     	;# 
  2947  0119                     	;# 
  2948  0119                     	;# 
  2949  011A                     	;# 
  2950  011A                     	;# 
  2951  011A                     	;# 
  2952  011B                     	;# 
  2953  011B                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011C                     	;# 
  2958  011C                     	;# 
  2959  011C                     	;# 
  2960  011D                     	;# 
  2961  011D                     	;# 
  2962  011D                     	;# 
  2963  011E                     	;# 
  2964  011E                     	;# 
  2965  011E                     	;# 
  2966  011F                     	;# 
  2967  011F                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  018C                     	;# 
  2972  018D                     	;# 
  2973  018E                     	;# 
  2974  018F                     	;# 
  2975  0190                     	;# 
  2976  0191                     	;# 
  2977  0192                     	;# 
  2978  0196                     	;# 
  2979  0197                     	;# 
  2980  0198                     	;# 
  2981  0199                     	;# 
  2982  019A                     	;# 
  2983  019B                     	;# 
  2984  019C                     	;# 
  2985  020C                     	;# 
  2986  020C                     	;# 
  2987  020D                     	;# 
  2988  020E                     	;# 
  2989  020F                     	;# 
  2990  020F                     	;# 
  2991  0210                     	;# 
  2992  0210                     	;# 
  2993  0211                     	;# 
  2994  0211                     	;# 
  2995  0212                     	;# 
  2996  0212                     	;# 
  2997  0213                     	;# 
  2998  0214                     	;# 
  2999  0215                     	;# 
  3000  0215                     	;# 
  3001  0216                     	;# 
  3002  0216                     	;# 
  3003  0217                     	;# 
  3004  0217                     	;# 
  3005  0218                     	;# 
  3006  0218                     	;# 
  3007  0219                     	;# 
  3008  021A                     	;# 
  3009  021B                     	;# 
  3010  021B                     	;# 
  3011  021C                     	;# 
  3012  021C                     	;# 
  3013  021D                     	;# 
  3014  021D                     	;# 
  3015  021E                     	;# 
  3016  021F                     	;# 
  3017  028C                     	;# 
  3018  028C                     	;# 
  3019  028D                     	;# 
  3020  028D                     	;# 
  3021  028E                     	;# 
  3022  028F                     	;# 
  3023  0290                     	;# 
  3024  0290                     	;# 
  3025  0291                     	;# 
  3026  0292                     	;# 
  3027  0292                     	;# 
  3028  0293                     	;# 
  3029  0293                     	;# 
  3030  0294                     	;# 
  3031  0295                     	;# 
  3032  0296                     	;# 
  3033  0296                     	;# 
  3034  0297                     	;# 
  3035  0298                     	;# 
  3036  0298                     	;# 
  3037  0299                     	;# 
  3038  0299                     	;# 
  3039  029A                     	;# 
  3040  029B                     	;# 
  3041  029C                     	;# 
  3042  029C                     	;# 
  3043  029D                     	;# 
  3044  030C                     	;# 
  3045  030C                     	;# 
  3046  030D                     	;# 
  3047  030E                     	;# 
  3048  030F                     	;# 
  3049  0310                     	;# 
  3050  0310                     	;# 
  3051  0311                     	;# 
  3052  0312                     	;# 
  3053  0313                     	;# 
  3054  0314                     	;# 
  3055  0314                     	;# 
  3056  0315                     	;# 
  3057  0316                     	;# 
  3058  0317                     	;# 
  3059  0318                     	;# 
  3060  0318                     	;# 
  3061  0319                     	;# 
  3062  031A                     	;# 
  3063  031B                     	;# 
  3064  031C                     	;# 
  3065  031C                     	;# 
  3066  031D                     	;# 
  3067  031E                     	;# 
  3068  031F                     	;# 
  3069  038C                     	;# 
  3070  038D                     	;# 
  3071  038E                     	;# 
  3072  0390                     	;# 
  3073  0391                     	;# 
  3074  0392                     	;# 
  3075  040C                     	;# 
  3076  040D                     	;# 
  3077  040E                     	;# 
  3078  040F                     	;# 
  3079  0410                     	;# 
  3080  0411                     	;# 
  3081  0416                     	;# 
  3082  0416                     	;# 
  3083  0417                     	;# 
  3084  0418                     	;# 
  3085  0418                     	;# 
  3086  0419                     	;# 
  3087  041A                     	;# 
  3088  041A                     	;# 
  3089  041B                     	;# 
  3090  041C                     	;# 
  3091  041C                     	;# 
  3092  041D                     	;# 
  3093  041E                     	;# 
  3094  041F                     	;# 
  3095  048C                     	;# 
  3096  048C                     	;# 
  3097  048D                     	;# 
  3098  048E                     	;# 
  3099  048F                     	;# 
  3100  048F                     	;# 
  3101  0490                     	;# 
  3102  0491                     	;# 
  3103  0492                     	;# 
  3104  0492                     	;# 
  3105  0493                     	;# 
  3106  0494                     	;# 
  3107  0495                     	;# 
  3108  0495                     	;# 
  3109  0496                     	;# 
  3110  0497                     	;# 
  3111  0498                     	;# 
  3112  0499                     	;# 
  3113  049A                     	;# 
  3114  049B                     	;# 
  3115  049C                     	;# 
  3116  049D                     	;# 
  3117  050C                     	;# 
  3118  050C                     	;# 
  3119  050D                     	;# 
  3120  050E                     	;# 
  3121  050F                     	;# 
  3122  050F                     	;# 
  3123  0510                     	;# 
  3124  0511                     	;# 
  3125  0512                     	;# 
  3126  0512                     	;# 
  3127  0513                     	;# 
  3128  0514                     	;# 
  3129  0515                     	;# 
  3130  0515                     	;# 
  3131  0516                     	;# 
  3132  0517                     	;# 
  3133  0518                     	;# 
  3134  0519                     	;# 
  3135  051A                     	;# 
  3136  051B                     	;# 
  3137  051C                     	;# 
  3138  051D                     	;# 
  3139  058C                     	;# 
  3140  058C                     	;# 
  3141  058D                     	;# 
  3142  058E                     	;# 
  3143  058F                     	;# 
  3144  058F                     	;# 
  3145  0590                     	;# 
  3146  0591                     	;# 
  3147  0592                     	;# 
  3148  0593                     	;# 
  3149  060C                     	;# 
  3150  060D                     	;# 
  3151  060E                     	;# 
  3152  060F                     	;# 
  3153  0610                     	;# 
  3154  0611                     	;# 
  3155  0612                     	;# 
  3156  0613                     	;# 
  3157  0614                     	;# 
  3158  0616                     	;# 
  3159  0617                     	;# 
  3160  0618                     	;# 
  3161  0619                     	;# 
  3162  061A                     	;# 
  3163  061B                     	;# 
  3164  061C                     	;# 
  3165  061D                     	;# 
  3166  061E                     	;# 
  3167  068C                     	;# 
  3168  068D                     	;# 
  3169  068E                     	;# 
  3170  068F                     	;# 
  3171  0690                     	;# 
  3172  0691                     	;# 
  3173  0692                     	;# 
  3174  0693                     	;# 
  3175  0694                     	;# 
  3176  070C                     	;# 
  3177  070D                     	;# 
  3178  070E                     	;# 
  3179  070F                     	;# 
  3180  0710                     	;# 
  3181  0711                     	;# 
  3182  0712                     	;# 
  3183  0713                     	;# 
  3184  0714                     	;# 
  3185  0716                     	;# 
  3186  0717                     	;# 
  3187  0718                     	;# 
  3188  0719                     	;# 
  3189  071A                     	;# 
  3190  071B                     	;# 
  3191  071C                     	;# 
  3192  071D                     	;# 
  3193  071E                     	;# 
  3194  0796                     	;# 
  3195  0797                     	;# 
  3196  0798                     	;# 
  3197  0799                     	;# 
  3198  079A                     	;# 
  3199  079B                     	;# 
  3200  080C                     	;# 
  3201  080D                     	;# 
  3202  080E                     	;# 
  3203  080F                     	;# 
  3204  0810                     	;# 
  3205  0811                     	;# 
  3206  0812                     	;# 
  3207  0813                     	;# 
  3208  0814                     	;# 
  3209  081A                     	;# 
  3210  081B                     	;# 
  3211  081C                     	;# 
  3212  081D                     	;# 
  3213  081E                     	;# 
  3214  081F                     	;# 
  3215  088C                     	;# 
  3216  088D                     	;# 
  3217  088E                     	;# 
  3218  088F                     	;# 
  3219  0890                     	;# 
  3220  0891                     	;# 
  3221  0892                     	;# 
  3222  0893                     	;# 
  3223  0895                     	;# 
  3224  0896                     	;# 
  3225  0897                     	;# 
  3226  0898                     	;# 
  3227  0899                     	;# 
  3228  089A                     	;# 
  3229  089B                     	;# 
  3230  090C                     	;# 
  3231  090E                     	;# 
  3232  090F                     	;# 
  3233  091F                     	;# 
  3234  098F                     	;# 
  3235  098F                     	;# 
  3236  0990                     	;# 
  3237  0991                     	;# 
  3238  0992                     	;# 
  3239  0993                     	;# 
  3240  0994                     	;# 
  3241  0995                     	;# 
  3242  0996                     	;# 
  3243  0997                     	;# 
  3244  1E0F                     	;# 
  3245  1E10                     	;# 
  3246  1E11                     	;# 
  3247  1E12                     	;# 
  3248  1E13                     	;# 
  3249  1E14                     	;# 
  3250  1E15                     	;# 
  3251  1E16                     	;# 
  3252  1E17                     	;# 
  3253  1E18                     	;# 
  3254  1E19                     	;# 
  3255  1E1A                     	;# 
  3256  1E1B                     	;# 
  3257  1E1C                     	;# 
  3258  1E1D                     	;# 
  3259  1E1E                     	;# 
  3260  1E1F                     	;# 
  3261  1E20                     	;# 
  3262  1E21                     	;# 
  3263  1E22                     	;# 
  3264  1E23                     	;# 
  3265  1E24                     	;# 
  3266  1E25                     	;# 
  3267  1E26                     	;# 
  3268  1E27                     	;# 
  3269  1E28                     	;# 
  3270  1E29                     	;# 
  3271  1E2A                     	;# 
  3272  1E2B                     	;# 
  3273  1E2C                     	;# 
  3274  1E2D                     	;# 
  3275  1E2E                     	;# 
  3276  1E2F                     	;# 
  3277  1E30                     	;# 
  3278  1E31                     	;# 
  3279  1E32                     	;# 
  3280  1E33                     	;# 
  3281  1E34                     	;# 
  3282  1E35                     	;# 
  3283  1E36                     	;# 
  3284  1E37                     	;# 
  3285  1E8F                     	;# 
  3286  1E90                     	;# 
  3287  1E91                     	;# 
  3288  1E92                     	;# 
  3289  1E93                     	;# 
  3290  1E94                     	;# 
  3291  1E95                     	;# 
  3292  1E96                     	;# 
  3293  1E97                     	;# 
  3294  1E9C                     	;# 
  3295  1E9D                     	;# 
  3296  1E9E                     	;# 
  3297  1EA1                     	;# 
  3298  1EA2                     	;# 
  3299  1EA3                     	;# 
  3300  1EA4                     	;# 
  3301  1EA5                     	;# 
  3302  1EA9                     	;# 
  3303  1EAA                     	;# 
  3304  1EAB                     	;# 
  3305  1EAC                     	;# 
  3306  1EB1                     	;# 
  3307  1EB2                     	;# 
  3308  1EB3                     	;# 
  3309  1EB8                     	;# 
  3310  1EB9                     	;# 
  3311  1EBA                     	;# 
  3312  1EBB                     	;# 
  3313  1EBC                     	;# 
  3314  1EBD                     	;# 
  3315  1EBE                     	;# 
  3316  1EC3                     	;# 
  3317  1EC5                     	;# 
  3318  1EC6                     	;# 
  3319  1EC7                     	;# 
  3320  1EC8                     	;# 
  3321  1EC9                     	;# 
  3322  1ECA                     	;# 
  3323  1ECB                     	;# 
  3324  1ECC                     	;# 
  3325  1F10                     	;# 
  3326  1F11                     	;# 
  3327  1F12                     	;# 
  3328  1F13                     	;# 
  3329  1F14                     	;# 
  3330  1F15                     	;# 
  3331  1F16                     	;# 
  3332  1F17                     	;# 
  3333  1F18                     	;# 
  3334  1F19                     	;# 
  3335  1F1A                     	;# 
  3336  1F1B                     	;# 
  3337  1F1C                     	;# 
  3338  1F1D                     	;# 
  3339  1F1E                     	;# 
  3340  1F1F                     	;# 
  3341  1F20                     	;# 
  3342  1F21                     	;# 
  3343  1F22                     	;# 
  3344  1F23                     	;# 
  3345  1F24                     	;# 
  3346  1F25                     	;# 
  3347  1F26                     	;# 
  3348  1F27                     	;# 
  3349  1F28                     	;# 
  3350  1F29                     	;# 
  3351  1F2A                     	;# 
  3352  1F2B                     	;# 
  3353  1F2C                     	;# 
  3354  1F2D                     	;# 
  3355  1F2E                     	;# 
  3356  1F2F                     	;# 
  3357  1F30                     	;# 
  3358  1F31                     	;# 
  3359  1F32                     	;# 
  3360  1F38                     	;# 
  3361  1F39                     	;# 
  3362  1F3A                     	;# 
  3363  1F3B                     	;# 
  3364  1F3C                     	;# 
  3365  1F3D                     	;# 
  3366  1F3E                     	;# 
  3367  1F3F                     	;# 
  3368  1F40                     	;# 
  3369  1F41                     	;# 
  3370  1F43                     	;# 
  3371  1F44                     	;# 
  3372  1F45                     	;# 
  3373  1F46                     	;# 
  3374  1F47                     	;# 
  3375  1F48                     	;# 
  3376  1F49                     	;# 
  3377  1F4A                     	;# 
  3378  1F4B                     	;# 
  3379  1F4C                     	;# 
  3380  1F4E                     	;# 
  3381  1F4F                     	;# 
  3382  1F50                     	;# 
  3383  1F51                     	;# 
  3384  1F52                     	;# 
  3385  1F53                     	;# 
  3386  1F54                     	;# 
  3387  1F55                     	;# 
  3388  1F56                     	;# 
  3389  1F57                     	;# 
  3390  1F59                     	;# 
  3391  1F5A                     	;# 
  3392  1F5B                     	;# 
  3393  1F5C                     	;# 
  3394  1F5D                     	;# 
  3395  1F61                     	;# 
  3396  1F62                     	;# 
  3397  1F64                     	;# 
  3398  1F65                     	;# 
  3399  1F66                     	;# 
  3400  1F67                     	;# 
  3401  1F68                     	;# 
  3402  1F69                     	;# 
  3403  1F6A                     	;# 
  3404  1F6B                     	;# 
  3405  1F6C                     	;# 
  3406  1F6D                     	;# 
  3407  1FE4                     	;# 
  3408  1FE5                     	;# 
  3409  1FE6                     	;# 
  3410  1FE7                     	;# 
  3411  1FE8                     	;# 
  3412  1FE9                     	;# 
  3413  1FEA                     	;# 
  3414  1FEB                     	;# 
  3415  1FED                     	;# 
  3416  1FEE                     	;# 
  3417  1FEF                     	;# 
  3418  0000                     	;# 
  3419  0001                     	;# 
  3420  0002                     	;# 
  3421  0003                     	;# 
  3422  0004                     	;# 
  3423  0005                     	;# 
  3424  0006                     	;# 
  3425  0007                     	;# 
  3426  0008                     	;# 
  3427  0009                     	;# 
  3428  000A                     	;# 
  3429  000B                     	;# 
  3430  000C                     	;# 
  3431  000D                     	;# 
  3432  000E                     	;# 
  3433  000F                     	;# 
  3434  0010                     	;# 
  3435  0011                     	;# 
  3436  0012                     	;# 
  3437  0013                     	;# 
  3438  0014                     	;# 
  3439  0015                     	;# 
  3440  0016                     	;# 
  3441  0017                     	;# 
  3442  0018                     	;# 
  3443  0019                     	;# 
  3444  001A                     	;# 
  3445  001C                     	;# 
  3446  001C                     	;# 
  3447  001D                     	;# 
  3448  001D                     	;# 
  3449  001E                     	;# 
  3450  001F                     	;# 
  3451  008C                     	;# 
  3452  008C                     	;# 
  3453  008D                     	;# 
  3454  008E                     	;# 
  3455  008E                     	;# 
  3456  008F                     	;# 
  3457  0090                     	;# 
  3458  0090                     	;# 
  3459  0091                     	;# 
  3460  0093                     	;# 
  3461  0094                     	;# 
  3462  0095                     	;# 
  3463  0096                     	;# 
  3464  0097                     	;# 
  3465  0098                     	;# 
  3466  0099                     	;# 
  3467  009A                     	;# 
  3468  009B                     	;# 
  3469  009C                     	;# 
  3470  009D                     	;# 
  3471  009E                     	;# 
  3472  010C                     	;# 
  3473  010D                     	;# 
  3474  010E                     	;# 
  3475  010E                     	;# 
  3476  010F                     	;# 
  3477  0110                     	;# 
  3478  0110                     	;# 
  3479  0111                     	;# 
  3480  0112                     	;# 
  3481  0112                     	;# 
  3482  0113                     	;# 
  3483  0114                     	;# 
  3484  0114                     	;# 
  3485  0115                     	;# 
  3486  0116                     	;# 
  3487  0116                     	;# 
  3488  0117                     	;# 
  3489  0119                     	;# 
  3490  0119                     	;# 
  3491  0119                     	;# 
  3492  011A                     	;# 
  3493  011A                     	;# 
  3494  011A                     	;# 
  3495  011B                     	;# 
  3496  011B                     	;# 
  3497  011B                     	;# 
  3498  011B                     	;# 
  3499  011B                     	;# 
  3500  011C                     	;# 
  3501  011C                     	;# 
  3502  011C                     	;# 
  3503  011D                     	;# 
  3504  011D                     	;# 
  3505  011D                     	;# 
  3506  011E                     	;# 
  3507  011E                     	;# 
  3508  011E                     	;# 
  3509  011F                     	;# 
  3510  011F                     	;# 
  3511  011F                     	;# 
  3512  011F                     	;# 
  3513  011F                     	;# 
  3514  018C                     	;# 
  3515  018D                     	;# 
  3516  018E                     	;# 
  3517  018F                     	;# 
  3518  0190                     	;# 
  3519  0191                     	;# 
  3520  0192                     	;# 
  3521  0196                     	;# 
  3522  0197                     	;# 
  3523  0198                     	;# 
  3524  0199                     	;# 
  3525  019A                     	;# 
  3526  019B                     	;# 
  3527  019C                     	;# 
  3528  020C                     	;# 
  3529  020C                     	;# 
  3530  020D                     	;# 
  3531  020E                     	;# 
  3532  020F                     	;# 
  3533  020F                     	;# 
  3534  0210                     	;# 
  3535  0210                     	;# 
  3536  0211                     	;# 
  3537  0211                     	;# 
  3538  0212                     	;# 
  3539  0212                     	;# 
  3540  0213                     	;# 
  3541  0214                     	;# 
  3542  0215                     	;# 
  3543  0215                     	;# 
  3544  0216                     	;# 
  3545  0216                     	;# 
  3546  0217                     	;# 
  3547  0217                     	;# 
  3548  0218                     	;# 
  3549  0218                     	;# 
  3550  0219                     	;# 
  3551  021A                     	;# 
  3552  021B                     	;# 
  3553  021B                     	;# 
  3554  021C                     	;# 
  3555  021C                     	;# 
  3556  021D                     	;# 
  3557  021D                     	;# 
  3558  021E                     	;# 
  3559  021F                     	;# 
  3560  028C                     	;# 
  3561  028C                     	;# 
  3562  028D                     	;# 
  3563  028D                     	;# 
  3564  028E                     	;# 
  3565  028F                     	;# 
  3566  0290                     	;# 
  3567  0290                     	;# 
  3568  0291                     	;# 
  3569  0292                     	;# 
  3570  0292                     	;# 
  3571  0293                     	;# 
  3572  0293                     	;# 
  3573  0294                     	;# 
  3574  0295                     	;# 
  3575  0296                     	;# 
  3576  0296                     	;# 
  3577  0297                     	;# 
  3578  0298                     	;# 
  3579  0298                     	;# 
  3580  0299                     	;# 
  3581  0299                     	;# 
  3582  029A                     	;# 
  3583  029B                     	;# 
  3584  029C                     	;# 
  3585  029C                     	;# 
  3586  029D                     	;# 
  3587  030C                     	;# 
  3588  030C                     	;# 
  3589  030D                     	;# 
  3590  030E                     	;# 
  3591  030F                     	;# 
  3592  0310                     	;# 
  3593  0310                     	;# 
  3594  0311                     	;# 
  3595  0312                     	;# 
  3596  0313                     	;# 
  3597  0314                     	;# 
  3598  0314                     	;# 
  3599  0315                     	;# 
  3600  0316                     	;# 
  3601  0317                     	;# 
  3602  0318                     	;# 
  3603  0318                     	;# 
  3604  0319                     	;# 
  3605  031A                     	;# 
  3606  031B                     	;# 
  3607  031C                     	;# 
  3608  031C                     	;# 
  3609  031D                     	;# 
  3610  031E                     	;# 
  3611  031F                     	;# 
  3612  038C                     	;# 
  3613  038D                     	;# 
  3614  038E                     	;# 
  3615  0390                     	;# 
  3616  0391                     	;# 
  3617  0392                     	;# 
  3618  040C                     	;# 
  3619  040D                     	;# 
  3620  040E                     	;# 
  3621  040F                     	;# 
  3622  0410                     	;# 
  3623  0411                     	;# 
  3624  0416                     	;# 
  3625  0416                     	;# 
  3626  0417                     	;# 
  3627  0418                     	;# 
  3628  0418                     	;# 
  3629  0419                     	;# 
  3630  041A                     	;# 
  3631  041A                     	;# 
  3632  041B                     	;# 
  3633  041C                     	;# 
  3634  041C                     	;# 
  3635  041D                     	;# 
  3636  041E                     	;# 
  3637  041F                     	;# 
  3638  048C                     	;# 
  3639  048C                     	;# 
  3640  048D                     	;# 
  3641  048E                     	;# 
  3642  048F                     	;# 
  3643  048F                     	;# 
  3644  0490                     	;# 
  3645  0491                     	;# 
  3646  0492                     	;# 
  3647  0492                     	;# 
  3648  0493                     	;# 
  3649  0494                     	;# 
  3650  0495                     	;# 
  3651  0495                     	;# 
  3652  0496                     	;# 
  3653  0497                     	;# 
  3654  0498                     	;# 
  3655  0499                     	;# 
  3656  049A                     	;# 
  3657  049B                     	;# 
  3658  049C                     	;# 
  3659  049D                     	;# 
  3660  050C                     	;# 
  3661  050C                     	;# 
  3662  050D                     	;# 
  3663  050E                     	;# 
  3664  050F                     	;# 
  3665  050F                     	;# 
  3666  0510                     	;# 
  3667  0511                     	;# 
  3668  0512                     	;# 
  3669  0512                     	;# 
  3670  0513                     	;# 
  3671  0514                     	;# 
  3672  0515                     	;# 
  3673  0515                     	;# 
  3674  0516                     	;# 
  3675  0517                     	;# 
  3676  0518                     	;# 
  3677  0519                     	;# 
  3678  051A                     	;# 
  3679  051B                     	;# 
  3680  051C                     	;# 
  3681  051D                     	;# 
  3682  058C                     	;# 
  3683  058C                     	;# 
  3684  058D                     	;# 
  3685  058E                     	;# 
  3686  058F                     	;# 
  3687  058F                     	;# 
  3688  0590                     	;# 
  3689  0591                     	;# 
  3690  0592                     	;# 
  3691  0593                     	;# 
  3692  060C                     	;# 
  3693  060D                     	;# 
  3694  060E                     	;# 
  3695  060F                     	;# 
  3696  0610                     	;# 
  3697  0611                     	;# 
  3698  0612                     	;# 
  3699  0613                     	;# 
  3700  0614                     	;# 
  3701  0616                     	;# 
  3702  0617                     	;# 
  3703  0618                     	;# 
  3704  0619                     	;# 
  3705  061A                     	;# 
  3706  061B                     	;# 
  3707  061C                     	;# 
  3708  061D                     	;# 
  3709  061E                     	;# 
  3710  068C                     	;# 
  3711  068D                     	;# 
  3712  068E                     	;# 
  3713  068F                     	;# 
  3714  0690                     	;# 
  3715  0691                     	;# 
  3716  0692                     	;# 
  3717  0693                     	;# 
  3718  0694                     	;# 
  3719  070C                     	;# 
  3720  070D                     	;# 
  3721  070E                     	;# 
  3722  070F                     	;# 
  3723  0710                     	;# 
  3724  0711                     	;# 
  3725  0712                     	;# 
  3726  0713                     	;# 
  3727  0714                     	;# 
  3728  0716                     	;# 
  3729  0717                     	;# 
  3730  0718                     	;# 
  3731  0719                     	;# 
  3732  071A                     	;# 
  3733  071B                     	;# 
  3734  071C                     	;# 
  3735  071D                     	;# 
  3736  071E                     	;# 
  3737  0796                     	;# 
  3738  0797                     	;# 
  3739  0798                     	;# 
  3740  0799                     	;# 
  3741  079A                     	;# 
  3742  079B                     	;# 
  3743  080C                     	;# 
  3744  080D                     	;# 
  3745  080E                     	;# 
  3746  080F                     	;# 
  3747  0810                     	;# 
  3748  0811                     	;# 
  3749  0812                     	;# 
  3750  0813                     	;# 
  3751  0814                     	;# 
  3752  081A                     	;# 
  3753  081B                     	;# 
  3754  081C                     	;# 
  3755  081D                     	;# 
  3756  081E                     	;# 
  3757  081F                     	;# 
  3758  088C                     	;# 
  3759  088D                     	;# 
  3760  088E                     	;# 
  3761  088F                     	;# 
  3762  0890                     	;# 
  3763  0891                     	;# 
  3764  0892                     	;# 
  3765  0893                     	;# 
  3766  0895                     	;# 
  3767  0896                     	;# 
  3768  0897                     	;# 
  3769  0898                     	;# 
  3770  0899                     	;# 
  3771  089A                     	;# 
  3772  089B                     	;# 
  3773  090C                     	;# 
  3774  090E                     	;# 
  3775  090F                     	;# 
  3776  091F                     	;# 
  3777  098F                     	;# 
  3778  098F                     	;# 
  3779  0990                     	;# 
  3780  0991                     	;# 
  3781  0992                     	;# 
  3782  0993                     	;# 
  3783  0994                     	;# 
  3784  0995                     	;# 
  3785  0996                     	;# 
  3786  0997                     	;# 
  3787  1E0F                     	;# 
  3788  1E10                     	;# 
  3789  1E11                     	;# 
  3790  1E12                     	;# 
  3791  1E13                     	;# 
  3792  1E14                     	;# 
  3793  1E15                     	;# 
  3794  1E16                     	;# 
  3795  1E17                     	;# 
  3796  1E18                     	;# 
  3797  1E19                     	;# 
  3798  1E1A                     	;# 
  3799  1E1B                     	;# 
  3800  1E1C                     	;# 
  3801  1E1D                     	;# 
  3802  1E1E                     	;# 
  3803  1E1F                     	;# 
  3804  1E20                     	;# 
  3805  1E21                     	;# 
  3806  1E22                     	;# 
  3807  1E23                     	;# 
  3808  1E24                     	;# 
  3809  1E25                     	;# 
  3810  1E26                     	;# 
  3811  1E27                     	;# 
  3812  1E28                     	;# 
  3813  1E29                     	;# 
  3814  1E2A                     	;# 
  3815  1E2B                     	;# 
  3816  1E2C                     	;# 
  3817  1E2D                     	;# 
  3818  1E2E                     	;# 
  3819  1E2F                     	;# 
  3820  1E30                     	;# 
  3821  1E31                     	;# 
  3822  1E32                     	;# 
  3823  1E33                     	;# 
  3824  1E34                     	;# 
  3825  1E35                     	;# 
  3826  1E36                     	;# 
  3827  1E37                     	;# 
  3828  1E8F                     	;# 
  3829  1E90                     	;# 
  3830  1E91                     	;# 
  3831  1E92                     	;# 
  3832  1E93                     	;# 
  3833  1E94                     	;# 
  3834  1E95                     	;# 
  3835  1E96                     	;# 
  3836  1E97                     	;# 
  3837  1E9C                     	;# 
  3838  1E9D                     	;# 
  3839  1E9E                     	;# 
  3840  1EA1                     	;# 
  3841  1EA2                     	;# 
  3842  1EA3                     	;# 
  3843  1EA4                     	;# 
  3844  1EA5                     	;# 
  3845  1EA9                     	;# 
  3846  1EAA                     	;# 
  3847  1EAB                     	;# 
  3848  1EAC                     	;# 
  3849  1EB1                     	;# 
  3850  1EB2                     	;# 
  3851  1EB3                     	;# 
  3852  1EB8                     	;# 
  3853  1EB9                     	;# 
  3854  1EBA                     	;# 
  3855  1EBB                     	;# 
  3856  1EBC                     	;# 
  3857  1EBD                     	;# 
  3858  1EBE                     	;# 
  3859  1EC3                     	;# 
  3860  1EC5                     	;# 
  3861  1EC6                     	;# 
  3862  1EC7                     	;# 
  3863  1EC8                     	;# 
  3864  1EC9                     	;# 
  3865  1ECA                     	;# 
  3866  1ECB                     	;# 
  3867  1ECC                     	;# 
  3868  1F10                     	;# 
  3869  1F11                     	;# 
  3870  1F12                     	;# 
  3871  1F13                     	;# 
  3872  1F14                     	;# 
  3873  1F15                     	;# 
  3874  1F16                     	;# 
  3875  1F17                     	;# 
  3876  1F18                     	;# 
  3877  1F19                     	;# 
  3878  1F1A                     	;# 
  3879  1F1B                     	;# 
  3880  1F1C                     	;# 
  3881  1F1D                     	;# 
  3882  1F1E                     	;# 
  3883  1F1F                     	;# 
  3884  1F20                     	;# 
  3885  1F21                     	;# 
  3886  1F22                     	;# 
  3887  1F23                     	;# 
  3888  1F24                     	;# 
  3889  1F25                     	;# 
  3890  1F26                     	;# 
  3891  1F27                     	;# 
  3892  1F28                     	;# 
  3893  1F29                     	;# 
  3894  1F2A                     	;# 
  3895  1F2B                     	;# 
  3896  1F2C                     	;# 
  3897  1F2D                     	;# 
  3898  1F2E                     	;# 
  3899  1F2F                     	;# 
  3900  1F30                     	;# 
  3901  1F31                     	;# 
  3902  1F32                     	;# 
  3903  1F38                     	;# 
  3904  1F39                     	;# 
  3905  1F3A                     	;# 
  3906  1F3B                     	;# 
  3907  1F3C                     	;# 
  3908  1F3D                     	;# 
  3909  1F3E                     	;# 
  3910  1F3F                     	;# 
  3911  1F40                     	;# 
  3912  1F41                     	;# 
  3913  1F43                     	;# 
  3914  1F44                     	;# 
  3915  1F45                     	;# 
  3916  1F46                     	;# 
  3917  1F47                     	;# 
  3918  1F48                     	;# 
  3919  1F49                     	;# 
  3920  1F4A                     	;# 
  3921  1F4B                     	;# 
  3922  1F4C                     	;# 
  3923  1F4E                     	;# 
  3924  1F4F                     	;# 
  3925  1F50                     	;# 
  3926  1F51                     	;# 
  3927  1F52                     	;# 
  3928  1F53                     	;# 
  3929  1F54                     	;# 
  3930  1F55                     	;# 
  3931  1F56                     	;# 
  3932  1F57                     	;# 
  3933  1F59                     	;# 
  3934  1F5A                     	;# 
  3935  1F5B                     	;# 
  3936  1F5C                     	;# 
  3937  1F5D                     	;# 
  3938  1F61                     	;# 
  3939  1F62                     	;# 
  3940  1F64                     	;# 
  3941  1F65                     	;# 
  3942  1F66                     	;# 
  3943  1F67                     	;# 
  3944  1F68                     	;# 
  3945  1F69                     	;# 
  3946  1F6A                     	;# 
  3947  1F6B                     	;# 
  3948  1F6C                     	;# 
  3949  1F6D                     	;# 
  3950  1FE4                     	;# 
  3951  1FE5                     	;# 
  3952  1FE6                     	;# 
  3953  1FE7                     	;# 
  3954  1FE8                     	;# 
  3955  1FE9                     	;# 
  3956  1FEA                     	;# 
  3957  1FEB                     	;# 
  3958  1FED                     	;# 
  3959  1FEE                     	;# 
  3960  1FEF                     	;# 
  3961  0000                     	;# 
  3962  0001                     	;# 
  3963  0002                     	;# 
  3964  0003                     	;# 
  3965  0004                     	;# 
  3966  0005                     	;# 
  3967  0006                     	;# 
  3968  0007                     	;# 
  3969  0008                     	;# 
  3970  0009                     	;# 
  3971  000A                     	;# 
  3972  000B                     	;# 
  3973  000C                     	;# 
  3974  000D                     	;# 
  3975  000E                     	;# 
  3976  000F                     	;# 
  3977  0010                     	;# 
  3978  0011                     	;# 
  3979  0012                     	;# 
  3980  0013                     	;# 
  3981  0014                     	;# 
  3982  0015                     	;# 
  3983  0016                     	;# 
  3984  0017                     	;# 
  3985  0018                     	;# 
  3986  0019                     	;# 
  3987  001A                     	;# 
  3988  001C                     	;# 
  3989  001C                     	;# 
  3990  001D                     	;# 
  3991  001D                     	;# 
  3992  001E                     	;# 
  3993  001F                     	;# 
  3994  008C                     	;# 
  3995  008C                     	;# 
  3996  008D                     	;# 
  3997  008E                     	;# 
  3998  008E                     	;# 
  3999  008F                     	;# 
  4000  0090                     	;# 
  4001  0090                     	;# 
  4002  0091                     	;# 
  4003  0093                     	;# 
  4004  0094                     	;# 
  4005  0095                     	;# 
  4006  0096                     	;# 
  4007  0097                     	;# 
  4008  0098                     	;# 
  4009  0099                     	;# 
  4010  009A                     	;# 
  4011  009B                     	;# 
  4012  009C                     	;# 
  4013  009D                     	;# 
  4014  009E                     	;# 
  4015  010C                     	;# 
  4016  010D                     	;# 
  4017  010E                     	;# 
  4018  010E                     	;# 
  4019  010F                     	;# 
  4020  0110                     	;# 
  4021  0110                     	;# 
  4022  0111                     	;# 
  4023  0112                     	;# 
  4024  0112                     	;# 
  4025  0113                     	;# 
  4026  0114                     	;# 
  4027  0114                     	;# 
  4028  0115                     	;# 
  4029  0116                     	;# 
  4030  0116                     	;# 
  4031  0117                     	;# 
  4032  0119                     	;# 
  4033  0119                     	;# 
  4034  0119                     	;# 
  4035  011A                     	;# 
  4036  011A                     	;# 
  4037  011A                     	;# 
  4038  011B                     	;# 
  4039  011B                     	;# 
  4040  011B                     	;# 
  4041  011B                     	;# 
  4042  011B                     	;# 
  4043  011C                     	;# 
  4044  011C                     	;# 
  4045  011C                     	;# 
  4046  011D                     	;# 
  4047  011D                     	;# 
  4048  011D                     	;# 
  4049  011E                     	;# 
  4050  011E                     	;# 
  4051  011E                     	;# 
  4052  011F                     	;# 
  4053  011F                     	;# 
  4054  011F                     	;# 
  4055  011F                     	;# 
  4056  011F                     	;# 
  4057  018C                     	;# 
  4058  018D                     	;# 
  4059  018E                     	;# 
  4060  018F                     	;# 
  4061  0190                     	;# 
  4062  0191                     	;# 
  4063  0192                     	;# 
  4064  0196                     	;# 
  4065  0197                     	;# 
  4066  0198                     	;# 
  4067  0199                     	;# 
  4068  019A                     	;# 
  4069  019B                     	;# 
  4070  019C                     	;# 
  4071  020C                     	;# 
  4072  020C                     	;# 
  4073  020D                     	;# 
  4074  020E                     	;# 
  4075  020F                     	;# 
  4076  020F                     	;# 
  4077  0210                     	;# 
  4078  0210                     	;# 
  4079  0211                     	;# 
  4080  0211                     	;# 
  4081  0212                     	;# 
  4082  0212                     	;# 
  4083  0213                     	;# 
  4084  0214                     	;# 
  4085  0215                     	;# 
  4086  0215                     	;# 
  4087  0216                     	;# 
  4088  0216                     	;# 
  4089  0217                     	;# 
  4090  0217                     	;# 
  4091  0218                     	;# 
  4092  0218                     	;# 
  4093  0219                     	;# 
  4094  021A                     	;# 
  4095  021B                     	;# 
  4096  021B                     	;# 
  4097  021C                     	;# 
  4098  021C                     	;# 
  4099  021D                     	;# 
  4100  021D                     	;# 
  4101  021E                     	;# 
  4102  021F                     	;# 
  4103  028C                     	;# 
  4104  028C                     	;# 
  4105  028D                     	;# 
  4106  028D                     	;# 
  4107  028E                     	;# 
  4108  028F                     	;# 
  4109  0290                     	;# 
  4110  0290                     	;# 
  4111  0291                     	;# 
  4112  0292                     	;# 
  4113  0292                     	;# 
  4114  0293                     	;# 
  4115  0293                     	;# 
  4116  0294                     	;# 
  4117  0295                     	;# 
  4118  0296                     	;# 
  4119  0296                     	;# 
  4120  0297                     	;# 
  4121  0298                     	;# 
  4122  0298                     	;# 
  4123  0299                     	;# 
  4124  0299                     	;# 
  4125  029A                     	;# 
  4126  029B                     	;# 
  4127  029C                     	;# 
  4128  029C                     	;# 
  4129  029D                     	;# 
  4130  030C                     	;# 
  4131  030C                     	;# 
  4132  030D                     	;# 
  4133  030E                     	;# 
  4134  030F                     	;# 
  4135  0310                     	;# 
  4136  0310                     	;# 
  4137  0311                     	;# 
  4138  0312                     	;# 
  4139  0313                     	;# 
  4140  0314                     	;# 
  4141  0314                     	;# 
  4142  0315                     	;# 
  4143  0316                     	;# 
  4144  0317                     	;# 
  4145  0318                     	;# 
  4146  0318                     	;# 
  4147  0319                     	;# 
  4148  031A                     	;# 
  4149  031B                     	;# 
  4150  031C                     	;# 
  4151  031C                     	;# 
  4152  031D                     	;# 
  4153  031E                     	;# 
  4154  031F                     	;# 
  4155  038C                     	;# 
  4156  038D                     	;# 
  4157  038E                     	;# 
  4158  0390                     	;# 
  4159  0391                     	;# 
  4160  0392                     	;# 
  4161  040C                     	;# 
  4162  040D                     	;# 
  4163  040E                     	;# 
  4164  040F                     	;# 
  4165  0410                     	;# 
  4166  0411                     	;# 
  4167  0416                     	;# 
  4168  0416                     	;# 
  4169  0417                     	;# 
  4170  0418                     	;# 
  4171  0418                     	;# 
  4172  0419                     	;# 
  4173  041A                     	;# 
  4174  041A                     	;# 
  4175  041B                     	;# 
  4176  041C                     	;# 
  4177  041C                     	;# 
  4178  041D                     	;# 
  4179  041E                     	;# 
  4180  041F                     	;# 
  4181  048C                     	;# 
  4182  048C                     	;# 
  4183  048D                     	;# 
  4184  048E                     	;# 
  4185  048F                     	;# 
  4186  048F                     	;# 
  4187  0490                     	;# 
  4188  0491                     	;# 
  4189  0492                     	;# 
  4190  0492                     	;# 
  4191  0493                     	;# 
  4192  0494                     	;# 
  4193  0495                     	;# 
  4194  0495                     	;# 
  4195  0496                     	;# 
  4196  0497                     	;# 
  4197  0498                     	;# 
  4198  0499                     	;# 
  4199  049A                     	;# 
  4200  049B                     	;# 
  4201  049C                     	;# 
  4202  049D                     	;# 
  4203  050C                     	;# 
  4204  050C                     	;# 
  4205  050D                     	;# 
  4206  050E                     	;# 
  4207  050F                     	;# 
  4208  050F                     	;# 
  4209  0510                     	;# 
  4210  0511                     	;# 
  4211  0512                     	;# 
  4212  0512                     	;# 
  4213  0513                     	;# 
  4214  0514                     	;# 
  4215  0515                     	;# 
  4216  0515                     	;# 
  4217  0516                     	;# 
  4218  0517                     	;# 
  4219  0518                     	;# 
  4220  0519                     	;# 
  4221  051A                     	;# 
  4222  051B                     	;# 
  4223  051C                     	;# 
  4224  051D                     	;# 
  4225  058C                     	;# 
  4226  058C                     	;# 
  4227  058D                     	;# 
  4228  058E                     	;# 
  4229  058F                     	;# 
  4230  058F                     	;# 
  4231  0590                     	;# 
  4232  0591                     	;# 
  4233  0592                     	;# 
  4234  0593                     	;# 
  4235  060C                     	;# 
  4236  060D                     	;# 
  4237  060E                     	;# 
  4238  060F                     	;# 
  4239  0610                     	;# 
  4240  0611                     	;# 
  4241  0612                     	;# 
  4242  0613                     	;# 
  4243  0614                     	;# 
  4244  0616                     	;# 
  4245  0617                     	;# 
  4246  0618                     	;# 
  4247  0619                     	;# 
  4248  061A                     	;# 
  4249  061B                     	;# 
  4250  061C                     	;# 
  4251  061D                     	;# 
  4252  061E                     	;# 
  4253  068C                     	;# 
  4254  068D                     	;# 
  4255  068E                     	;# 
  4256  068F                     	;# 
  4257  0690                     	;# 
  4258  0691                     	;# 
  4259  0692                     	;# 
  4260  0693                     	;# 
  4261  0694                     	;# 
  4262  070C                     	;# 
  4263  070D                     	;# 
  4264  070E                     	;# 
  4265  070F                     	;# 
  4266  0710                     	;# 
  4267  0711                     	;# 
  4268  0712                     	;# 
  4269  0713                     	;# 
  4270  0714                     	;# 
  4271  0716                     	;# 
  4272  0717                     	;# 
  4273  0718                     	;# 
  4274  0719                     	;# 
  4275  071A                     	;# 
  4276  071B                     	;# 
  4277  071C                     	;# 
  4278  071D                     	;# 
  4279  071E                     	;# 
  4280  0796                     	;# 
  4281  0797                     	;# 
  4282  0798                     	;# 
  4283  0799                     	;# 
  4284  079A                     	;# 
  4285  079B                     	;# 
  4286  080C                     	;# 
  4287  080D                     	;# 
  4288  080E                     	;# 
  4289  080F                     	;# 
  4290  0810                     	;# 
  4291  0811                     	;# 
  4292  0812                     	;# 
  4293  0813                     	;# 
  4294  0814                     	;# 
  4295  081A                     	;# 
  4296  081B                     	;# 
  4297  081C                     	;# 
  4298  081D                     	;# 
  4299  081E                     	;# 
  4300  081F                     	;# 
  4301  088C                     	;# 
  4302  088D                     	;# 
  4303  088E                     	;# 
  4304  088F                     	;# 
  4305  0890                     	;# 
  4306  0891                     	;# 
  4307  0892                     	;# 
  4308  0893                     	;# 
  4309  0895                     	;# 
  4310  0896                     	;# 
  4311  0897                     	;# 
  4312  0898                     	;# 
  4313  0899                     	;# 
  4314  089A                     	;# 
  4315  089B                     	;# 
  4316  090C                     	;# 
  4317  090E                     	;# 
  4318  090F                     	;# 
  4319  091F                     	;# 
  4320  098F                     	;# 
  4321  098F                     	;# 
  4322  0990                     	;# 
  4323  0991                     	;# 
  4324  0992                     	;# 
  4325  0993                     	;# 
  4326  0994                     	;# 
  4327  0995                     	;# 
  4328  0996                     	;# 
  4329  0997                     	;# 
  4330  1E0F                     	;# 
  4331  1E10                     	;# 
  4332  1E11                     	;# 
  4333  1E12                     	;# 
  4334  1E13                     	;# 
  4335  1E14                     	;# 
  4336  1E15                     	;# 
  4337  1E16                     	;# 
  4338  1E17                     	;# 
  4339  1E18                     	;# 
  4340  1E19                     	;# 
  4341  1E1A                     	;# 
  4342  1E1B                     	;# 
  4343  1E1C                     	;# 
  4344  1E1D                     	;# 
  4345  1E1E                     	;# 
  4346  1E1F                     	;# 
  4347  1E20                     	;# 
  4348  1E21                     	;# 
  4349  1E22                     	;# 
  4350  1E23                     	;# 
  4351  1E24                     	;# 
  4352  1E25                     	;# 
  4353  1E26                     	;# 
  4354  1E27                     	;# 
  4355  1E28                     	;# 
  4356  1E29                     	;# 
  4357  1E2A                     	;# 
  4358  1E2B                     	;# 
  4359  1E2C                     	;# 
  4360  1E2D                     	;# 
  4361  1E2E                     	;# 
  4362  1E2F                     	;# 
  4363  1E30                     	;# 
  4364  1E31                     	;# 
  4365  1E32                     	;# 
  4366  1E33                     	;# 
  4367  1E34                     	;# 
  4368  1E35                     	;# 
  4369  1E36                     	;# 
  4370  1E37                     	;# 
  4371  1E8F                     	;# 
  4372  1E90                     	;# 
  4373  1E91                     	;# 
  4374  1E92                     	;# 
  4375  1E93                     	;# 
  4376  1E94                     	;# 
  4377  1E95                     	;# 
  4378  1E96                     	;# 
  4379  1E97                     	;# 
  4380  1E9C                     	;# 
  4381  1E9D                     	;# 
  4382  1E9E                     	;# 
  4383  1EA1                     	;# 
  4384  1EA2                     	;# 
  4385  1EA3                     	;# 
  4386  1EA4                     	;# 
  4387  1EA5                     	;# 
  4388  1EA9                     	;# 
  4389  1EAA                     	;# 
  4390  1EAB                     	;# 
  4391  1EAC                     	;# 
  4392  1EB1                     	;# 
  4393  1EB2                     	;# 
  4394  1EB3                     	;# 
  4395  1EB8                     	;# 
  4396  1EB9                     	;# 
  4397  1EBA                     	;# 
  4398  1EBB                     	;# 
  4399  1EBC                     	;# 
  4400  1EBD                     	;# 
  4401  1EBE                     	;# 
  4402  1EC3                     	;# 
  4403  1EC5                     	;# 
  4404  1EC6                     	;# 
  4405  1EC7                     	;# 
  4406  1EC8                     	;# 
  4407  1EC9                     	;# 
  4408  1ECA                     	;# 
  4409  1ECB                     	;# 
  4410  1ECC                     	;# 
  4411  1F10                     	;# 
  4412  1F11                     	;# 
  4413  1F12                     	;# 
  4414  1F13                     	;# 
  4415  1F14                     	;# 
  4416  1F15                     	;# 
  4417  1F16                     	;# 
  4418  1F17                     	;# 
  4419  1F18                     	;# 
  4420  1F19                     	;# 
  4421  1F1A                     	;# 
  4422  1F1B                     	;# 
  4423  1F1C                     	;# 
  4424  1F1D                     	;# 
  4425  1F1E                     	;# 
  4426  1F1F                     	;# 
  4427  1F20                     	;# 
  4428  1F21                     	;# 
  4429  1F22                     	;# 
  4430  1F23                     	;# 
  4431  1F24                     	;# 
  4432  1F25                     	;# 
  4433  1F26                     	;# 
  4434  1F27                     	;# 
  4435  1F28                     	;# 
  4436  1F29                     	;# 
  4437  1F2A                     	;# 
  4438  1F2B                     	;# 
  4439  1F2C                     	;# 
  4440  1F2D                     	;# 
  4441  1F2E                     	;# 
  4442  1F2F                     	;# 
  4443  1F30                     	;# 
  4444  1F31                     	;# 
  4445  1F32                     	;# 
  4446  1F38                     	;# 
  4447  1F39                     	;# 
  4448  1F3A                     	;# 
  4449  1F3B                     	;# 
  4450  1F3C                     	;# 
  4451  1F3D                     	;# 
  4452  1F3E                     	;# 
  4453  1F3F                     	;# 
  4454  1F40                     	;# 
  4455  1F41                     	;# 
  4456  1F43                     	;# 
  4457  1F44                     	;# 
  4458  1F45                     	;# 
  4459  1F46                     	;# 
  4460  1F47                     	;# 
  4461  1F48                     	;# 
  4462  1F49                     	;# 
  4463  1F4A                     	;# 
  4464  1F4B                     	;# 
  4465  1F4C                     	;# 
  4466  1F4E                     	;# 
  4467  1F4F                     	;# 
  4468  1F50                     	;# 
  4469  1F51                     	;# 
  4470  1F52                     	;# 
  4471  1F53                     	;# 
  4472  1F54                     	;# 
  4473  1F55                     	;# 
  4474  1F56                     	;# 
  4475  1F57                     	;# 
  4476  1F59                     	;# 
  4477  1F5A                     	;# 
  4478  1F5B                     	;# 
  4479  1F5C                     	;# 
  4480  1F5D                     	;# 
  4481  1F61                     	;# 
  4482  1F62                     	;# 
  4483  1F64                     	;# 
  4484  1F65                     	;# 
  4485  1F66                     	;# 
  4486  1F67                     	;# 
  4487  1F68                     	;# 
  4488  1F69                     	;# 
  4489  1F6A                     	;# 
  4490  1F6B                     	;# 
  4491  1F6C                     	;# 
  4492  1F6D                     	;# 
  4493  1FE4                     	;# 
  4494  1FE5                     	;# 
  4495  1FE6                     	;# 
  4496  1FE7                     	;# 
  4497  1FE8                     	;# 
  4498  1FE9                     	;# 
  4499  1FEA                     	;# 
  4500  1FEB                     	;# 
  4501  1FED                     	;# 
  4502  1FEE                     	;# 
  4503  1FEF                     	;# 
  4504  0000                     	;# 
  4505  0001                     	;# 
  4506  0002                     	;# 
  4507  0003                     	;# 
  4508  0004                     	;# 
  4509  0005                     	;# 
  4510  0006                     	;# 
  4511  0007                     	;# 
  4512  0008                     	;# 
  4513  0009                     	;# 
  4514  000A                     	;# 
  4515  000B                     	;# 
  4516  000C                     	;# 
  4517  000D                     	;# 
  4518  000E                     	;# 
  4519  000F                     	;# 
  4520  0010                     	;# 
  4521  0011                     	;# 
  4522  0012                     	;# 
  4523  0013                     	;# 
  4524  0014                     	;# 
  4525  0015                     	;# 
  4526  0016                     	;# 
  4527  0017                     	;# 
  4528  0018                     	;# 
  4529  0019                     	;# 
  4530  001A                     	;# 
  4531  001C                     	;# 
  4532  001C                     	;# 
  4533  001D                     	;# 
  4534  001D                     	;# 
  4535  001E                     	;# 
  4536  001F                     	;# 
  4537  008C                     	;# 
  4538  008C                     	;# 
  4539  008D                     	;# 
  4540  008E                     	;# 
  4541  008E                     	;# 
  4542  008F                     	;# 
  4543  0090                     	;# 
  4544  0090                     	;# 
  4545  0091                     	;# 
  4546  0093                     	;# 
  4547  0094                     	;# 
  4548  0095                     	;# 
  4549  0096                     	;# 
  4550  0097                     	;# 
  4551  0098                     	;# 
  4552  0099                     	;# 
  4553  009A                     	;# 
  4554  009B                     	;# 
  4555  009C                     	;# 
  4556  009D                     	;# 
  4557  009E                     	;# 
  4558  010C                     	;# 
  4559  010D                     	;# 
  4560  010E                     	;# 
  4561  010E                     	;# 
  4562  010F                     	;# 
  4563  0110                     	;# 
  4564  0110                     	;# 
  4565  0111                     	;# 
  4566  0112                     	;# 
  4567  0112                     	;# 
  4568  0113                     	;# 
  4569  0114                     	;# 
  4570  0114                     	;# 
  4571  0115                     	;# 
  4572  0116                     	;# 
  4573  0116                     	;# 
  4574  0117                     	;# 
  4575  0119                     	;# 
  4576  0119                     	;# 
  4577  0119                     	;# 
  4578  011A                     	;# 
  4579  011A                     	;# 
  4580  011A                     	;# 
  4581  011B                     	;# 
  4582  011B                     	;# 
  4583  011B                     	;# 
  4584  011B                     	;# 
  4585  011B                     	;# 
  4586  011C                     	;# 
  4587  011C                     	;# 
  4588  011C                     	;# 
  4589  011D                     	;# 
  4590  011D                     	;# 
  4591  011D                     	;# 
  4592  011E                     	;# 
  4593  011E                     	;# 
  4594  011E                     	;# 
  4595  011F                     	;# 
  4596  011F                     	;# 
  4597  011F                     	;# 
  4598  011F                     	;# 
  4599  011F                     	;# 
  4600  018C                     	;# 
  4601  018D                     	;# 
  4602  018E                     	;# 
  4603  018F                     	;# 
  4604  0190                     	;# 
  4605  0191                     	;# 
  4606  0192                     	;# 
  4607  0196                     	;# 
  4608  0197                     	;# 
  4609  0198                     	;# 
  4610  0199                     	;# 
  4611  019A                     	;# 
  4612  019B                     	;# 
  4613  019C                     	;# 
  4614  020C                     	;# 
  4615  020C                     	;# 
  4616  020D                     	;# 
  4617  020E                     	;# 
  4618  020F                     	;# 
  4619  020F                     	;# 
  4620  0210                     	;# 
  4621  0210                     	;# 
  4622  0211                     	;# 
  4623  0211                     	;# 
  4624  0212                     	;# 
  4625  0212                     	;# 
  4626  0213                     	;# 
  4627  0214                     	;# 
  4628  0215                     	;# 
  4629  0215                     	;# 
  4630  0216                     	;# 
  4631  0216                     	;# 
  4632  0217                     	;# 
  4633  0217                     	;# 
  4634  0218                     	;# 
  4635  0218                     	;# 
  4636  0219                     	;# 
  4637  021A                     	;# 
  4638  021B                     	;# 
  4639  021B                     	;# 
  4640  021C                     	;# 
  4641  021C                     	;# 
  4642  021D                     	;# 
  4643  021D                     	;# 
  4644  021E                     	;# 
  4645  021F                     	;# 
  4646  028C                     	;# 
  4647  028C                     	;# 
  4648  028D                     	;# 
  4649  028D                     	;# 
  4650  028E                     	;# 
  4651  028F                     	;# 
  4652  0290                     	;# 
  4653  0290                     	;# 
  4654  0291                     	;# 
  4655  0292                     	;# 
  4656  0292                     	;# 
  4657  0293                     	;# 
  4658  0293                     	;# 
  4659  0294                     	;# 
  4660  0295                     	;# 
  4661  0296                     	;# 
  4662  0296                     	;# 
  4663  0297                     	;# 
  4664  0298                     	;# 
  4665  0298                     	;# 
  4666  0299                     	;# 
  4667  0299                     	;# 
  4668  029A                     	;# 
  4669  029B                     	;# 
  4670  029C                     	;# 
  4671  029C                     	;# 
  4672  029D                     	;# 
  4673  030C                     	;# 
  4674  030C                     	;# 
  4675  030D                     	;# 
  4676  030E                     	;# 
  4677  030F                     	;# 
  4678  0310                     	;# 
  4679  0310                     	;# 
  4680  0311                     	;# 
  4681  0312                     	;# 
  4682  0313                     	;# 
  4683  0314                     	;# 
  4684  0314                     	;# 
  4685  0315                     	;# 
  4686  0316                     	;# 
  4687  0317                     	;# 
  4688  0318                     	;# 
  4689  0318                     	;# 
  4690  0319                     	;# 
  4691  031A                     	;# 
  4692  031B                     	;# 
  4693  031C                     	;# 
  4694  031C                     	;# 
  4695  031D                     	;# 
  4696  031E                     	;# 
  4697  031F                     	;# 
  4698  038C                     	;# 
  4699  038D                     	;# 
  4700  038E                     	;# 
  4701  0390                     	;# 
  4702  0391                     	;# 
  4703  0392                     	;# 
  4704  040C                     	;# 
  4705  040D                     	;# 
  4706  040E                     	;# 
  4707  040F                     	;# 
  4708  0410                     	;# 
  4709  0411                     	;# 
  4710  0416                     	;# 
  4711  0416                     	;# 
  4712  0417                     	;# 
  4713  0418                     	;# 
  4714  0418                     	;# 
  4715  0419                     	;# 
  4716  041A                     	;# 
  4717  041A                     	;# 
  4718  041B                     	;# 
  4719  041C                     	;# 
  4720  041C                     	;# 
  4721  041D                     	;# 
  4722  041E                     	;# 
  4723  041F                     	;# 
  4724  048C                     	;# 
  4725  048C                     	;# 
  4726  048D                     	;# 
  4727  048E                     	;# 
  4728  048F                     	;# 
  4729  048F                     	;# 
  4730  0490                     	;# 
  4731  0491                     	;# 
  4732  0492                     	;# 
  4733  0492                     	;# 
  4734  0493                     	;# 
  4735  0494                     	;# 
  4736  0495                     	;# 
  4737  0495                     	;# 
  4738  0496                     	;# 
  4739  0497                     	;# 
  4740  0498                     	;# 
  4741  0499                     	;# 
  4742  049A                     	;# 
  4743  049B                     	;# 
  4744  049C                     	;# 
  4745  049D                     	;# 
  4746  050C                     	;# 
  4747  050C                     	;# 
  4748  050D                     	;# 
  4749  050E                     	;# 
  4750  050F                     	;# 
  4751  050F                     	;# 
  4752  0510                     	;# 
  4753  0511                     	;# 
  4754  0512                     	;# 
  4755  0512                     	;# 
  4756  0513                     	;# 
  4757  0514                     	;# 
  4758  0515                     	;# 
  4759  0515                     	;# 
  4760  0516                     	;# 
  4761  0517                     	;# 
  4762  0518                     	;# 
  4763  0519                     	;# 
  4764  051A                     	;# 
  4765  051B                     	;# 
  4766  051C                     	;# 
  4767  051D                     	;# 
  4768  058C                     	;# 
  4769  058C                     	;# 
  4770  058D                     	;# 
  4771  058E                     	;# 
  4772  058F                     	;# 
  4773  058F                     	;# 
  4774  0590                     	;# 
  4775  0591                     	;# 
  4776  0592                     	;# 
  4777  0593                     	;# 
  4778  060C                     	;# 
  4779  060D                     	;# 
  4780  060E                     	;# 
  4781  060F                     	;# 
  4782  0610                     	;# 
  4783  0611                     	;# 
  4784  0612                     	;# 
  4785  0613                     	;# 
  4786  0614                     	;# 
  4787  0616                     	;# 
  4788  0617                     	;# 
  4789  0618                     	;# 
  4790  0619                     	;# 
  4791  061A                     	;# 
  4792  061B                     	;# 
  4793  061C                     	;# 
  4794  061D                     	;# 
  4795  061E                     	;# 
  4796  068C                     	;# 
  4797  068D                     	;# 
  4798  068E                     	;# 
  4799  068F                     	;# 
  4800  0690                     	;# 
  4801  0691                     	;# 
  4802  0692                     	;# 
  4803  0693                     	;# 
  4804  0694                     	;# 
  4805  070C                     	;# 
  4806  070D                     	;# 
  4807  070E                     	;# 
  4808  070F                     	;# 
  4809  0710                     	;# 
  4810  0711                     	;# 
  4811  0712                     	;# 
  4812  0713                     	;# 
  4813  0714                     	;# 
  4814  0716                     	;# 
  4815  0717                     	;# 
  4816  0718                     	;# 
  4817  0719                     	;# 
  4818  071A                     	;# 
  4819  071B                     	;# 
  4820  071C                     	;# 
  4821  071D                     	;# 
  4822  071E                     	;# 
  4823  0796                     	;# 
  4824  0797                     	;# 
  4825  0798                     	;# 
  4826  0799                     	;# 
  4827  079A                     	;# 
  4828  079B                     	;# 
  4829  080C                     	;# 
  4830  080D                     	;# 
  4831  080E                     	;# 
  4832  080F                     	;# 
  4833  0810                     	;# 
  4834  0811                     	;# 
  4835  0812                     	;# 
  4836  0813                     	;# 
  4837  0814                     	;# 
  4838  081A                     	;# 
  4839  081B                     	;# 
  4840  081C                     	;# 
  4841  081D                     	;# 
  4842  081E                     	;# 
  4843  081F                     	;# 
  4844  088C                     	;# 
  4845  088D                     	;# 
  4846  088E                     	;# 
  4847  088F                     	;# 
  4848  0890                     	;# 
  4849  0891                     	;# 
  4850  0892                     	;# 
  4851  0893                     	;# 
  4852  0895                     	;# 
  4853  0896                     	;# 
  4854  0897                     	;# 
  4855  0898                     	;# 
  4856  0899                     	;# 
  4857  089A                     	;# 
  4858  089B                     	;# 
  4859  090C                     	;# 
  4860  090E                     	;# 
  4861  090F                     	;# 
  4862  091F                     	;# 
  4863  098F                     	;# 
  4864  098F                     	;# 
  4865  0990                     	;# 
  4866  0991                     	;# 
  4867  0992                     	;# 
  4868  0993                     	;# 
  4869  0994                     	;# 
  4870  0995                     	;# 
  4871  0996                     	;# 
  4872  0997                     	;# 
  4873  1E0F                     	;# 
  4874  1E10                     	;# 
  4875  1E11                     	;# 
  4876  1E12                     	;# 
  4877  1E13                     	;# 
  4878  1E14                     	;# 
  4879  1E15                     	;# 
  4880  1E16                     	;# 
  4881  1E17                     	;# 
  4882  1E18                     	;# 
  4883  1E19                     	;# 
  4884  1E1A                     	;# 
  4885  1E1B                     	;# 
  4886  1E1C                     	;# 
  4887  1E1D                     	;# 
  4888  1E1E                     	;# 
  4889  1E1F                     	;# 
  4890  1E20                     	;# 
  4891  1E21                     	;# 
  4892  1E22                     	;# 
  4893  1E23                     	;# 
  4894  1E24                     	;# 
  4895  1E25                     	;# 
  4896  1E26                     	;# 
  4897  1E27                     	;# 
  4898  1E28                     	;# 
  4899  1E29                     	;# 
  4900  1E2A                     	;# 
  4901  1E2B                     	;# 
  4902  1E2C                     	;# 
  4903  1E2D                     	;# 
  4904  1E2E                     	;# 
  4905  1E2F                     	;# 
  4906  1E30                     	;# 
  4907  1E31                     	;# 
  4908  1E32                     	;# 
  4909  1E33                     	;# 
  4910  1E34                     	;# 
  4911  1E35                     	;# 
  4912  1E36                     	;# 
  4913  1E37                     	;# 
  4914  1E8F                     	;# 
  4915  1E90                     	;# 
  4916  1E91                     	;# 
  4917  1E92                     	;# 
  4918  1E93                     	;# 
  4919  1E94                     	;# 
  4920  1E95                     	;# 
  4921  1E96                     	;# 
  4922  1E97                     	;# 
  4923  1E9C                     	;# 
  4924  1E9D                     	;# 
  4925  1E9E                     	;# 
  4926  1EA1                     	;# 
  4927  1EA2                     	;# 
  4928  1EA3                     	;# 
  4929  1EA4                     	;# 
  4930  1EA5                     	;# 
  4931  1EA9                     	;# 
  4932  1EAA                     	;# 
  4933  1EAB                     	;# 
  4934  1EAC                     	;# 
  4935  1EB1                     	;# 
  4936  1EB2                     	;# 
  4937  1EB3                     	;# 
  4938  1EB8                     	;# 
  4939  1EB9                     	;# 
  4940  1EBA                     	;# 
  4941  1EBB                     	;# 
  4942  1EBC                     	;# 
  4943  1EBD                     	;# 
  4944  1EBE                     	;# 
  4945  1EC3                     	;# 
  4946  1EC5                     	;# 
  4947  1EC6                     	;# 
  4948  1EC7                     	;# 
  4949  1EC8                     	;# 
  4950  1EC9                     	;# 
  4951  1ECA                     	;# 
  4952  1ECB                     	;# 
  4953  1ECC                     	;# 
  4954  1F10                     	;# 
  4955  1F11                     	;# 
  4956  1F12                     	;# 
  4957  1F13                     	;# 
  4958  1F14                     	;# 
  4959  1F15                     	;# 
  4960  1F16                     	;# 
  4961  1F17                     	;# 
  4962  1F18                     	;# 
  4963  1F19                     	;# 
  4964  1F1A                     	;# 
  4965  1F1B                     	;# 
  4966  1F1C                     	;# 
  4967  1F1D                     	;# 
  4968  1F1E                     	;# 
  4969  1F1F                     	;# 
  4970  1F20                     	;# 
  4971  1F21                     	;# 
  4972  1F22                     	;# 
  4973  1F23                     	;# 
  4974  1F24                     	;# 
  4975  1F25                     	;# 
  4976  1F26                     	;# 
  4977  1F27                     	;# 
  4978  1F28                     	;# 
  4979  1F29                     	;# 
  4980  1F2A                     	;# 
  4981  1F2B                     	;# 
  4982  1F2C                     	;# 
  4983  1F2D                     	;# 
  4984  1F2E                     	;# 
  4985  1F2F                     	;# 
  4986  1F30                     	;# 
  4987  1F31                     	;# 
  4988  1F32                     	;# 
  4989  1F38                     	;# 
  4990  1F39                     	;# 
  4991  1F3A                     	;# 
  4992  1F3B                     	;# 
  4993  1F3C                     	;# 
  4994  1F3D                     	;# 
  4995  1F3E                     	;# 
  4996  1F3F                     	;# 
  4997  1F40                     	;# 
  4998  1F41                     	;# 
  4999  1F43                     	;# 
  5000  1F44                     	;# 
  5001  1F45                     	;# 
  5002  1F46                     	;# 
  5003  1F47                     	;# 
  5004  1F48                     	;# 
  5005  1F49                     	;# 
  5006  1F4A                     	;# 
  5007  1F4B                     	;# 
  5008  1F4C                     	;# 
  5009  1F4E                     	;# 
  5010  1F4F                     	;# 
  5011  1F50                     	;# 
  5012  1F51                     	;# 
  5013  1F52                     	;# 
  5014  1F53                     	;# 
  5015  1F54                     	;# 
  5016  1F55                     	;# 
  5017  1F56                     	;# 
  5018  1F57                     	;# 
  5019  1F59                     	;# 
  5020  1F5A                     	;# 
  5021  1F5B                     	;# 
  5022  1F5C                     	;# 
  5023  1F5D                     	;# 
  5024  1F61                     	;# 
  5025  1F62                     	;# 
  5026  1F64                     	;# 
  5027  1F65                     	;# 
  5028  1F66                     	;# 
  5029  1F67                     	;# 
  5030  1F68                     	;# 
  5031  1F69                     	;# 
  5032  1F6A                     	;# 
  5033  1F6B                     	;# 
  5034  1F6C                     	;# 
  5035  1F6D                     	;# 
  5036  1FE4                     	;# 
  5037  1FE5                     	;# 
  5038  1FE6                     	;# 
  5039  1FE7                     	;# 
  5040  1FE8                     	;# 
  5041  1FE9                     	;# 
  5042  1FEA                     	;# 
  5043  1FEB                     	;# 
  5044  1FED                     	;# 
  5045  1FEE                     	;# 
  5046  1FEF                     	;_crcTable
  5047                           
  5048                           	psect	idataBANK1
  5049  0800                     __pidataBANK1:	
  5050                           
  5051                           ;initializer for _pdw3000local
  5052  0800  34A0               	retlw	low (_DW3000local| (0+512))
  5053                           
  5054                           	psect	idataBANK2
  5055  251F                     __pidataBANK2:	
  5056                           
  5057                           ;initializer for _ADDR
  5058  251F  3401               	retlw	1
  5059  2520  3400               	retlw	0
  5060  2521  3400               	retlw	0
  5061  2522  3400               	retlw	0
  5062  2523  3453               	retlw	83
  5063  2524  34D6               	retlw	214
  5064  2525  34F5               	retlw	245
  5065  2526  34C8               	retlw	200
  5066                           
  5067                           ;initializer for _txconfig_options_ch9
  5068  2527  3434               	retlw	52
  5069  2528  34FE               	retlw	254
  5070  2529  34FE               	retlw	254
  5071  252A  34FE               	retlw	254
  5072  252B  34FE               	retlw	254
  5073  252C  3400               	retlw	0
  5074  252D  3400               	retlw	0
  5075                           
  5076                           	psect	idataBANK3
  5077  2502                     __pidataBANK3:	
  5078                           
  5079                           ;initializer for _config
  5080  2502  3409               	retlw	9
  5081  2503  3402               	retlw	2
  5082  2504  3402               	retlw	2
  5083  2505  3409               	retlw	9
  5084  2506  3409               	retlw	9
  5085  2507  3401               	retlw	1
  5086  2508  3400               	retlw	0
  5087  2509  3400               	retlw	0
  5088  250A  3400               	retlw	0
  5089  250B  34E9               	retlw	233
  5090  250C  3403               	retlw	3
  5091  250D  3400               	retlw	0
  5092  250E  3401               	retlw	1
  5093  250F  3400               	retlw	0
  5094                           
  5095                           	psect	idataBANK4
  5096  26E1                     __pidataBANK4:	
  5097                           
  5098                           ;initializer for _tx_blink_msg
  5099  26E1  3400               	retlw	0
  5100  26E2  3438               	retlw	56
  5101  26E3  3400               	retlw	0
  5102  26E4  34CA               	retlw	202
  5103  26E5  34DE               	retlw	222
  5104  26E6  3400               	retlw	0
  5105  26E7  3400               	retlw	0
  5106  26E8  3400               	retlw	0
  5107  26E9  3400               	retlw	0
  5108  26EA  3400               	retlw	0
  5109  26EB  3400               	retlw	0
  5110  26EC  3400               	retlw	0
  5111  26ED  3400               	retlw	0
  5112  26EE  3400               	retlw	0
  5113  26EF  3400               	retlw	0
  5114  26F0  3400               	retlw	0
  5115  26F1  3400               	retlw	0
  5116  26F2  3400               	retlw	0
  5117  26F3  3400               	retlw	0
  5118  26F4  3400               	retlw	0
  5119  26F5  3400               	retlw	0
  5120  26F6  3400               	retlw	0
  5121  26F7  3400               	retlw	0
  5122  26F8  3400               	retlw	0
  5123  26F9  3400               	retlw	0
  5124  26FA  3400               	retlw	0
  5125  26FB  3400               	retlw	0
  5126  26FC  3400               	retlw	0
  5127  26FD  3400               	retlw	0
  5128  26FE  3400               	retlw	0
  5129  26FF  3400               	retlw	0
  5130  2700  3400               	retlw	0
  5131  2701  3400               	retlw	0
  5132  2702  3400               	retlw	0
  5133  2703  3400               	retlw	0
  5134  2704  3400               	retlw	0
  5135                           
  5136                           	psect	stringtext1
  5137  28E6                     __pstringtext1:	
  5138  28E6                     _sts_length_factors:	
  5139  28E6  3400               	retlw	0
  5140  28E7  3404               	retlw	4
  5141  28E8  34A8               	retlw	168
  5142  28E9  3405               	retlw	5
  5143  28EA  3400               	retlw	0
  5144  28EB  3408               	retlw	8
  5145  28EC  3450               	retlw	80
  5146  28ED  340B               	retlw	11
  5147  28EE  3400               	retlw	0
  5148  28EF  3410               	retlw	16
  5149  28F0  34A1               	retlw	161
  5150  28F1  3416               	retlw	22
  5151  28F2  3400               	retlw	0
  5152  28F3  3420               	retlw	32
  5153  28F4                     __end_of_sts_length_factors:	
  5154                           
  5155                           	psect	stringtext2
  5156  291C                     __pstringtext2:	
  5157  291C                     _dpowers:	
  5158  291C  3401               	retlw	1
  5159  291D  3400               	retlw	0
  5160  291E  340A               	retlw	10
  5161  291F  3400               	retlw	0
  5162  2920  3464               	retlw	100
  5163  2921  3400               	retlw	0
  5164  2922  34E8               	retlw	232
  5165  2923  3403               	retlw	3
  5166  2924  3410               	retlw	16
  5167  2925  3427               	retlw	39
  5168  2926                     __end_of_dpowers:	
  5169                           
  5170                           	psect	stringtext3
  5171  294D                     __pstringtext3:	
  5172  294D                     _hexpowers:	
  5173  294D  3401               	retlw	1
  5174  294E  3400               	retlw	0
  5175  294F  3410               	retlw	16
  5176  2950  3400               	retlw	0
  5177  2951  3400               	retlw	0
  5178  2952  3401               	retlw	1
  5179  2953  3400               	retlw	0
  5180  2954  3410               	retlw	16
  5181  2955                     __end_of_hexpowers:	
  5182                           
  5183                           	psect	stringtext4
  5184  1800                     __pstringtext4:	
  5185  1800                     _spi1_configuration:	
  5186  1800  3400               	retlw	0
  5187  1801  3440               	retlw	64
  5188  1802  3401               	retlw	1
  5189  1803  3400               	retlw	0
  5190  1804                     __end_of_spi1_configuration:	
  5191  0017                     _LATBbits	set	23
  5192  0016                     _LATAbits	set	22
  5193  0013                     _TRISCbits	set	19
  5194  0015                     _TRISE	set	21
  5195  0014                     _TRISD	set	20
  5196  0013                     _TRISC	set	19
  5197  0012                     _TRISB	set	18
  5198  0011                     _TRISA	set	17
  5199  001A                     _LATE	set	26
  5200  0019                     _LATD	set	25
  5201  0018                     _LATC	set	24
  5202  0017                     _LATB	set	23
  5203  0016                     _LATA	set	22
  5204  005F                     _GIE	set	95
  5205  011A                     _TX1REG	set	282
  5206  0119                     _RC1REG	set	281
  5207  011D                     _RC1STAbits	set	285
  5208  011E                     _TX1STAbits	set	286
  5209  011C                     _SP1BRGH	set	284
  5210  011B                     _SP1BRGL	set	283
  5211  011E                     _TX1STA	set	286
  5212  011D                     _RC1STA	set	285
  5213  011F                     _BAUD1CON	set	287
  5214  018C                     _SSP1BUF	set	396
  5215  0191                     _SSP1CON2	set	401
  5216  0190                     _SSP1CON1bits	set	400
  5217  018D                     _SSP1ADD	set	397
  5218  0190                     _SSP1CON1	set	400
  5219  018F                     _SSP1STAT	set	399
  5220  070F                     _PIR3bits	set	1807
  5221  079B                     _PMD5	set	1947
  5222  079A                     _PMD4	set	1946
  5223  0799                     _PMD3	set	1945
  5224  0798                     _PMD2	set	1944
  5225  0797                     _PMD1	set	1943
  5226  0796                     _PMD0	set	1942
  5227  0892                     _OSCTUNE	set	2194
  5228  0893                     _OSCFRQ	set	2195
  5229  0891                     _OSCEN	set	2193
  5230  088F                     _OSCCON3	set	2191
  5231  088D                     _OSCCON1	set	2189
  5232  1EC6                     _SSP1DATPPS	set	7878
  5233  1EC5                     _SSP1CLKPPS	set	7877
  5234  1EC9                     _SSP2DATPPSbits	set	7881
  5235  1EC8                     _SSP2CLKPPSbits	set	7880
  5236  1EC6                     _SSP1DATPPSbits	set	7878
  5237  1EC5                     _SSP1CLKPPSbits	set	7877
  5238  1ECB                     _RXPPS	set	7883
  5239  1E8F                     _PPSLOCKbits	set	7823
  5240  1E8F                     _PPSLOCK	set	7823
  5241  1F45                     _ODCONBbits	set	8005
  5242  1F3A                     _ODCONAbits	set	7994
  5243  1F22                     _RC2PPS	set	7970
  5244  1F21                     _RC1PPS	set	7969
  5245  1F24                     _RC4PPS	set	7972
  5246  1F1A                     _RB2PPS	set	7962
  5247  1F23                     _RC3PPS	set	7971
  5248  1F19                     _RB1PPS	set	7961
  5249  1F25                     _RC5PPS	set	7973
  5250  1F64                     _ANSELE	set	8036
  5251  1F59                     _ANSELD	set	8025
  5252  1F4E                     _ANSELC	set	8014
  5253  1F43                     _ANSELB	set	8003
  5254  1F38                     _ANSELA	set	7992
  5255  1F66                     _ODCONE	set	8038
  5256  1F5B                     _ODCOND	set	8027
  5257  1F50                     _ODCONC	set	8016
  5258  1F45                     _ODCONB	set	8005
  5259  1F3A                     _ODCONA	set	7994
  5260  1F65                     _WPUE	set	8037
  5261  1F5A                     _WPUD	set	8026
  5262  1F4F                     _WPUC	set	8015
  5263  1F44                     _WPUB	set	8004
  5264  1F39                     _WPUA	set	7993
  5265  1804                     STR_13:	
  5266  1804  346D               	retlw	109	;'m'
  5267  1805  346F               	retlw	111	;'o'
  5268  1806  3464               	retlw	100	;'d'
  5269  1807  3465               	retlw	101	;'e'
  5270  1808  3420               	retlw	32	;' '
  5271  1809  343D               	retlw	61	;'='
  5272  180A  343D               	retlw	61	;'='
  5273  180B  3420               	retlw	32	;' '
  5274  180C  3444               	retlw	68	;'D'
  5275  180D  3457               	retlw	87	;'W'
  5276  180E  3433               	retlw	51	;'3'
  5277  180F  3430               	retlw	48	;'0'
  5278  1810  3430               	retlw	48	;'0'
  5279  1811  3430               	retlw	48	;'0'
  5280  1812  345F               	retlw	95	;'_'
  5281  1813  3453               	retlw	83	;'S'
  5282  1814  3450               	retlw	80	;'P'
  5283  1815  3449               	retlw	73	;'I'
  5284  1816  345F               	retlw	95	;'_'
  5285  1817  3457               	retlw	87	;'W'
  5286  1818  3452               	retlw	82	;'R'
  5287  1819  345F               	retlw	95	;'_'
  5288  181A  3442               	retlw	66	;'B'
  5289  181B  3449               	retlw	73	;'I'
  5290  181C  3454               	retlw	84	;'T'
  5291  181D  3420               	retlw	32	;' '
  5292  181E  347C               	retlw	124	;'|'
  5293  181F  347C               	retlw	124	;'|'
  5294  1820  3420               	retlw	32	;' '
  5295  1821  346D               	retlw	109	;'m'
  5296  1822  346F               	retlw	111	;'o'
  5297  1823  3464               	retlw	100	;'d'
  5298  1824  3465               	retlw	101	;'e'
  5299  1825  3420               	retlw	32	;' '
  5300  1826  343D               	retlw	61	;'='
  5301  1827  343D               	retlw	61	;'='
  5302  1828  3420               	retlw	32	;' '
  5303  1829  3444               	retlw	68	;'D'
  5304  182A  3457               	retlw	87	;'W'
  5305  182B  3433               	retlw	51	;'3'
  5306  182C  3430               	retlw	48	;'0'
  5307  182D  3430               	retlw	48	;'0'
  5308  182E  3430               	retlw	48	;'0'
  5309  182F  345F               	retlw	95	;'_'
  5310  1830  3453               	retlw	83	;'S'
  5311  1831  3450               	retlw	80	;'P'
  5312  1832  3449               	retlw	73	;'I'
  5313  1833  345F               	retlw	95	;'_'
  5314  1834  3452               	retlw	82	;'R'
  5315  1835  3444               	retlw	68	;'D'
  5316  1836  345F               	retlw	95	;'_'
  5317  1837  3442               	retlw	66	;'B'
  5318  1838  3449               	retlw	73	;'I'
  5319  1839  3454               	retlw	84	;'T'
  5320  183A  3420               	retlw	32	;' '
  5321  183B  347C               	retlw	124	;'|'
  5322  183C  347C               	retlw	124	;'|'
  5323  183D  3420               	retlw	32	;' '
  5324  183E  346D               	retlw	109	;'m'
  5325  183F  346F               	retlw	111	;'o'
  5326  1840  3464               	retlw	100	;'d'
  5327  1841  3465               	retlw	101	;'e'
  5328  1842  3420               	retlw	32	;' '
  5329  1843  343D               	retlw	61	;'='
  5330  1844  343D               	retlw	61	;'='
  5331  1845  3420               	retlw	32	;' '
  5332  1846  3444               	retlw	68	;'D'
  5333  1847  3457               	retlw	87	;'W'
  5334  1848  3433               	retlw	51	;'3'
  5335  1849  3430               	retlw	48	;'0'
  5336  184A  3430               	retlw	48	;'0'
  5337  184B  3430               	retlw	48	;'0'
  5338  184C  345F               	retlw	95	;'_'
  5339  184D  3453               	retlw	83	;'S'
  5340  184E  3450               	retlw	80	;'P'
  5341  184F  3449               	retlw	73	;'I'
  5342  1850  345F               	retlw	95	;'_'
  5343  1851  3441               	retlw	65	;'A'
  5344  1852  344E               	retlw	78	;'N'
  5345  1853  3444               	retlw	68	;'D'
  5346  1854  345F               	retlw	95	;'_'
  5347  1855  344F               	retlw	79	;'O'
  5348  1856  3452               	retlw	82	;'R'
  5349  1857  345F               	retlw	95	;'_'
  5350  1858  3438               	retlw	56	;'8'
  5351  1859  3420               	retlw	32	;' '
  5352  185A  347C               	retlw	124	;'|'
  5353  185B  347C               	retlw	124	;'|'
  5354  185C  3420               	retlw	32	;' '
  5355  185D  346D               	retlw	109	;'m'
  5356  185E  346F               	retlw	111	;'o'
  5357  185F  3464               	retlw	100	;'d'
  5358  1860  3465               	retlw	101	;'e'
  5359  1861  3420               	retlw	32	;' '
  5360  1862  343D               	retlw	61	;'='
  5361  1863  343D               	retlw	61	;'='
  5362  1864  3420               	retlw	32	;' '
  5363  1865  3444               	retlw	68	;'D'
  5364  1866  3457               	retlw	87	;'W'
  5365  1867  3433               	retlw	51	;'3'
  5366  1868  3430               	retlw	48	;'0'
  5367  1869  3430               	retlw	48	;'0'
  5368  186A  3430               	retlw	48	;'0'
  5369  186B  345F               	retlw	95	;'_'
  5370  186C  3453               	retlw	83	;'S'
  5371  186D  3450               	retlw	80	;'P'
  5372  186E  3449               	retlw	73	;'I'
  5373  186F  345F               	retlw	95	;'_'
  5374  1870  3441               	retlw	65	;'A'
  5375  1871  344E               	retlw	78	;'N'
  5376  1872  3444               	retlw	68	;'D'
  5377  1873  345F               	retlw	95	;'_'
  5378  1874  344F               	retlw	79	;'O'
  5379  1875  3452               	retlw	82	;'R'
  5380  1876  345F               	retlw	95	;'_'
  5381  1877  3431               	retlw	49	;'1'
  5382  1878  3436               	retlw	54	;'6'
  5383  1879  3420               	retlw	32	;' '
  5384  187A  347C               	retlw	124	;'|'
  5385  187B  347C               	retlw	124	;'|'
  5386  187C  3420               	retlw	32	;' '
  5387  187D  346D               	retlw	109	;'m'
  5388  187E  346F               	retlw	111	;'o'
  5389  187F  3464               	retlw	100	;'d'
  5390  1880  3465               	retlw	101	;'e'
  5391  1881  3420               	retlw	32	;' '
  5392  1882  343D               	retlw	61	;'='
  5393  1883  343D               	retlw	61	;'='
  5394  1884  3420               	retlw	32	;' '
  5395  1885  3444               	retlw	68	;'D'
  5396  1886  3457               	retlw	87	;'W'
  5397  1887  3433               	retlw	51	;'3'
  5398  1888  3430               	retlw	48	;'0'
  5399  1889  3430               	retlw	48	;'0'
  5400  188A  3430               	retlw	48	;'0'
  5401  188B  345F               	retlw	95	;'_'
  5402  188C  3453               	retlw	83	;'S'
  5403  188D  3450               	retlw	80	;'P'
  5404  188E  3449               	retlw	73	;'I'
  5405  188F  345F               	retlw	95	;'_'
  5406  1890  3441               	retlw	65	;'A'
  5407  1891  344E               	retlw	78	;'N'
  5408  1892  3444               	retlw	68	;'D'
  5409  1893  345F               	retlw	95	;'_'
  5410  1894  344F               	retlw	79	;'O'
  5411  1895  3452               	retlw	82	;'R'
  5412  1896  345F               	retlw	95	;'_'
  5413  1897  3433               	retlw	51	;'3'
  5414  1898  3432               	retlw	50	;'2'
  5415  1899  3400               	retlw	0
  5416                           
  5417                           	psect	stringtext5
  5418  2800                     __pstringtext5:	
  5419  2800                     STR_26:	
  5420  2800  3441               	retlw	65	;'A'
  5421  2801  3473               	retlw	115	;'s'
  5422  2802  3473               	retlw	115	;'s'
  5423  2803  3465               	retlw	101	;'e'
  5424  2804  3472               	retlw	114	;'r'
  5425  2805  3474               	retlw	116	;'t'
  5426  2806  3469               	retlw	105	;'i'
  5427  2807  346F               	retlw	111	;'o'
  5428  2808  346E               	retlw	110	;'n'
  5429  2809  3420               	retlw	32	;' '
  5430  280A  3466               	retlw	102	;'f'
  5431  280B  3461               	retlw	97	;'a'
  5432  280C  3469               	retlw	105	;'i'
  5433  280D  346C               	retlw	108	;'l'
  5434  280E  3465               	retlw	101	;'e'
  5435  280F  3464               	retlw	100	;'d'
  5436  2810  343A               	retlw	58	;':'
  5437  2811  3420               	retlw	32	;' '
  5438  2812  3425               	retlw	37	;'%'
  5439  2813  3473               	retlw	115	;'s'
  5440  2814  3420               	retlw	32	;' '
  5441  2815  346C               	retlw	108	;'l'
  5442  2816  3469               	retlw	105	;'i'
  5443  2817  346E               	retlw	110	;'n'
  5444  2818  3465               	retlw	101	;'e'
  5445  2819  3420               	retlw	32	;' '
  5446  281A  3425               	retlw	37	;'%'
  5447  281B  3464               	retlw	100	;'d'
  5448  281C  343A               	retlw	58	;':'
  5449  281D  3420               	retlw	32	;' '
  5450  281E  3422               	retlw	34	;'"'
  5451  281F  3425               	retlw	37	;'%'
  5452  2820  3473               	retlw	115	;'s'
  5453  2821  3422               	retlw	34	;'"'
  5454  2822  340A               	retlw	10
  5455  2823  3400               	retlw	0
  5456                           
  5457                           	psect	stringtext6
  5458  2824                     __pstringtext6:	
  5459  2824                     STR_5:	
  5460  2824  340A               	retlw	10
  5461  2825  340D               	retlw	13
  5462  2826  3475               	retlw	117	;'u'
  5463  2827  3469               	retlw	105	;'i'
  5464  2828  346E               	retlw	110	;'n'
  5465  2829  3474               	retlw	116	;'t'
  5466  282A  3436               	retlw	54	;'6'
  5467  282B  3434               	retlw	52	;'4'
  5468  282C  345F               	retlw	95	;'_'
  5469  282D  346E               	retlw	110	;'n'
  5470  282E  3475               	retlw	117	;'u'
  5471  282F  346D               	retlw	109	;'m'
  5472  2830  343A               	retlw	58	;':'
  5473  2831  3420               	retlw	32	;' '
  5474  2832  3425               	retlw	37	;'%'
  5475  2833  3430               	retlw	48	;'0'
  5476  2834  3434               	retlw	52	;'4'
  5477  2835  3458               	retlw	88	;'X'
  5478  2836  3425               	retlw	37	;'%'
  5479  2837  3430               	retlw	48	;'0'
  5480  2838  3434               	retlw	52	;'4'
  5481  2839  3458               	retlw	88	;'X'
  5482  283A  3425               	retlw	37	;'%'
  5483  283B  3430               	retlw	48	;'0'
  5484  283C  3434               	retlw	52	;'4'
  5485  283D  3458               	retlw	88	;'X'
  5486  283E  3425               	retlw	37	;'%'
  5487  283F  3430               	retlw	48	;'0'
  5488  2840  3434               	retlw	52	;'4'
  5489  2841  3458               	retlw	88	;'X'
  5490  2842  3400               	retlw	0
  5491                           
  5492                           	psect	stringtext7
  5493  2843                     __pstringtext7:	
  5494  2843                     STR_15:	
  5495  2843  346D               	retlw	109	;'m'
  5496  2844  346F               	retlw	111	;'o'
  5497  2845  3464               	retlw	100	;'d'
  5498  2846  3465               	retlw	101	;'e'
  5499  2847  3420               	retlw	32	;' '
  5500  2848  343D               	retlw	61	;'='
  5501  2849  343D               	retlw	61	;'='
  5502  284A  3420               	retlw	32	;' '
  5503  284B  3444               	retlw	68	;'D'
  5504  284C  3457               	retlw	87	;'W'
  5505  284D  3433               	retlw	51	;'3'
  5506  284E  3430               	retlw	48	;'0'
  5507  284F  3430               	retlw	48	;'0'
  5508  2850  3430               	retlw	48	;'0'
  5509  2851  345F               	retlw	95	;'_'
  5510  2852  3453               	retlw	83	;'S'
  5511  2853  3450               	retlw	80	;'P'
  5512  2854  3449               	retlw	73	;'I'
  5513  2855  345F               	retlw	95	;'_'
  5514  2856  3457               	retlw	87	;'W'
  5515  2857  3452               	retlw	82	;'R'
  5516  2858  345F               	retlw	95	;'_'
  5517  2859  3442               	retlw	66	;'B'
  5518  285A  3449               	retlw	73	;'I'
  5519  285B  3454               	retlw	84	;'T'
  5520  285C  3400               	retlw	0
  5521                           
  5522                           	psect	stringtext8
  5523  285D                     __pstringtext8:	
  5524  285D                     STR_1:	
  5525  285D  340A               	retlw	10
  5526  285E  340D               	retlw	13
  5527  285F  3450               	retlw	80	;'P'
  5528  2860  3472               	retlw	114	;'r'
  5529  2861  346F               	retlw	111	;'o'
  5530  2862  3467               	retlw	103	;'g'
  5531  2863  3472               	retlw	114	;'r'
  5532  2864  3461               	retlw	97	;'a'
  5533  2865  346D               	retlw	109	;'m'
  5534  2866  3420               	retlw	32	;' '
  5535  2867  3472               	retlw	114	;'r'
  5536  2868  3475               	retlw	117	;'u'
  5537  2869  346E               	retlw	110	;'n'
  5538  286A  346E               	retlw	110	;'n'
  5539  286B  3469               	retlw	105	;'i'
  5540  286C  346E               	retlw	110	;'n'
  5541  286D  3467               	retlw	103	;'g'
  5542  286E  342E               	retlw	46	;'.'
  5543  286F  342E               	retlw	46	;'.'
  5544  2870  342E               	retlw	46	;'.'
  5545  2871  3400               	retlw	0
  5546                           
  5547                           	psect	stringtext9
  5548  2872                     __pstringtext9:	
  5549  2872                     STR_9:	
  5550  2872  3472               	retlw	114	;'r'
  5551  2873  3465               	retlw	101	;'e'
  5552  2874  3467               	retlw	103	;'g'
  5553  2875  345F               	retlw	95	;'_'
  5554  2876  346F               	retlw	111	;'o'
  5555  2877  3466               	retlw	102	;'f'
  5556  2878  3466               	retlw	102	;'f'
  5557  2879  3473               	retlw	115	;'s'
  5558  287A  3465               	retlw	101	;'e'
  5559  287B  3474               	retlw	116	;'t'
  5560  287C  3420               	retlw	32	;' '
  5561  287D  343C               	retlw	60	;'<'
  5562  287E  343D               	retlw	61	;'='
  5563  287F  3420               	retlw	32	;' '
  5564  2880  3430               	retlw	48	;'0'
  5565  2881  3478               	retlw	120	;'x'
  5566  2882  3437               	retlw	55	;'7'
  5567  2883  3446               	retlw	70	;'F'
  5568  2884  3400               	retlw	0
  5569                           
  5570                           	psect	stringtext10
  5571  2885                     __pstringtext10:	
  5572  2885                     STR_25:	
  5573  2885  3430               	retlw	48	;'0'
  5574  2886  3431               	retlw	49	;'1'
  5575  2887  3432               	retlw	50	;'2'
  5576  2888  3433               	retlw	51	;'3'
  5577  2889  3434               	retlw	52	;'4'
  5578  288A  3435               	retlw	53	;'5'
  5579  288B  3436               	retlw	54	;'6'
  5580  288C  3437               	retlw	55	;'7'
  5581  288D  3438               	retlw	56	;'8'
  5582  288E  3439               	retlw	57	;'9'
  5583  288F  3441               	retlw	65	;'A'
  5584  2890  3442               	retlw	66	;'B'
  5585  2891  3443               	retlw	67	;'C'
  5586  2892  3444               	retlw	68	;'D'
  5587  2893  3445               	retlw	69	;'E'
  5588  2894  3446               	retlw	70	;'F'
  5589  2895  3400               	retlw	0
  5590                           
  5591                           	psect	stringtext11
  5592  2896                     __pstringtext11:	
  5593  2896                     STR_22:	
  5594  2896  340A               	retlw	10
  5595  2897  340D               	retlw	13
  5596  2898  3443               	retlw	67	;'C'
  5597  2899  344F               	retlw	79	;'O'
  5598  289A  344E               	retlw	78	;'N'
  5599  289B  3446               	retlw	70	;'F'
  5600  289C  3449               	retlw	73	;'I'
  5601  289D  3447               	retlw	71	;'G'
  5602  289E  345F               	retlw	95	;'_'
  5603  289F  3453               	retlw	83	;'S'
  5604  28A0  3455               	retlw	85	;'U'
  5605  28A1  3443               	retlw	67	;'C'
  5606  28A2  3443               	retlw	67	;'C'
  5607  28A3  3445               	retlw	69	;'E'
  5608  28A4  3453               	retlw	83	;'S'
  5609  28A5  3453               	retlw	83	;'S'
  5610  28A6  3400               	retlw	0
  5611                           
  5612                           	psect	stringtext12
  5613  28A7                     __pstringtext12:	
  5614  28A7                     STR_7:	
  5615  28A7  3472               	retlw	114	;'r'
  5616  28A8  3465               	retlw	101	;'e'
  5617  28A9  3467               	retlw	103	;'g'
  5618  28AA  345F               	retlw	95	;'_'
  5619  28AB  3466               	retlw	102	;'f'
  5620  28AC  3469               	retlw	105	;'i'
  5621  28AD  346C               	retlw	108	;'l'
  5622  28AE  3465               	retlw	101	;'e'
  5623  28AF  3420               	retlw	32	;' '
  5624  28B0  343C               	retlw	60	;'<'
  5625  28B1  343D               	retlw	61	;'='
  5626  28B2  3420               	retlw	32	;' '
  5627  28B3  3430               	retlw	48	;'0'
  5628  28B4  3478               	retlw	120	;'x'
  5629  28B5  3431               	retlw	49	;'1'
  5630  28B6  3446               	retlw	70	;'F'
  5631  28B7  3400               	retlw	0
  5632                           
  5633                           	psect	stringtext13
  5634  28B8                     __pstringtext13:	
  5635  28B8                     STR_11:	
  5636  28B8  346C               	retlw	108	;'l'
  5637  28B9  3465               	retlw	101	;'e'
  5638  28BA  346E               	retlw	110	;'n'
  5639  28BB  3467               	retlw	103	;'g'
  5640  28BC  3474               	retlw	116	;'t'
  5641  28BD  3468               	retlw	104	;'h'
  5642  28BE  3420               	retlw	32	;' '
  5643  28BF  343C               	retlw	60	;'<'
  5644  28C0  3420               	retlw	32	;' '
  5645  28C1  3430               	retlw	48	;'0'
  5646  28C2  3478               	retlw	120	;'x'
  5647  28C3  3433               	retlw	51	;'3'
  5648  28C4  3431               	retlw	49	;'1'
  5649  28C5  3430               	retlw	48	;'0'
  5650  28C6  3430               	retlw	48	;'0'
  5651  28C7  3400               	retlw	0
  5652                           
  5653                           	psect	stringtext14
  5654  28C8                     __pstringtext14:	
  5655  28C8                     STR_21:	
  5656  28C8  340A               	retlw	10
  5657  28C9  340D               	retlw	13
  5658  28CA  3443               	retlw	67	;'C'
  5659  28CB  344F               	retlw	79	;'O'
  5660  28CC  344E               	retlw	78	;'N'
  5661  28CD  3446               	retlw	70	;'F'
  5662  28CE  3449               	retlw	73	;'I'
  5663  28CF  3447               	retlw	71	;'G'
  5664  28D0  345F               	retlw	95	;'_'
  5665  28D1  3445               	retlw	69	;'E'
  5666  28D2  3452               	retlw	82	;'R'
  5667  28D3  3452               	retlw	82	;'R'
  5668  28D4  344F               	retlw	79	;'O'
  5669  28D5  3452               	retlw	82	;'R'
  5670  28D6  3400               	retlw	0
  5671                           
  5672                           	psect	stringtext15
  5673  28D7                     __pstringtext15:	
  5674  28D7                     STR_16:	
  5675  28D7  340A               	retlw	10
  5676  28D8  340D               	retlw	13
  5677  28D9  3472               	retlw	114	;'r'
  5678  28DA  3465               	retlw	101	;'e'
  5679  28DB  3474               	retlw	116	;'t'
  5680  28DC  3475               	retlw	117	;'u'
  5681  28DD  3472               	retlw	114	;'r'
  5682  28DE  346E               	retlw	110	;'n'
  5683  28DF  345F               	retlw	95	;'_'
  5684  28E0  3445               	retlw	69	;'E'
  5685  28E1  3472               	retlw	114	;'r'
  5686  28E2  3472               	retlw	114	;'r'
  5687  28E3  346F               	retlw	111	;'o'
  5688  28E4  3472               	retlw	114	;'r'
  5689  28E5  3400               	retlw	0
  5690                           
  5691                           	psect	stringtext16
  5692  28F4                     __pstringtext16:	
  5693  28F4                     STR_6:	
  5694  28F4  3464               	retlw	100	;'d'
  5695  28F5  3465               	retlw	101	;'e'
  5696  28F6  3463               	retlw	99	;'c'
  5697  28F7  3461               	retlw	97	;'a'
  5698  28F8  345F               	retlw	95	;'_'
  5699  28F9  3464               	retlw	100	;'d'
  5700  28FA  3465               	retlw	101	;'e'
  5701  28FB  3476               	retlw	118	;'v'
  5702  28FC  3469               	retlw	105	;'i'
  5703  28FD  3463               	retlw	99	;'c'
  5704  28FE  3465               	retlw	101	;'e'
  5705  28FF  342E               	retlw	46	;'.'
  5706  2900  3463               	retlw	99	;'c'
  5707  2901  3400               	retlw	0
  5708                           
  5709                           	psect	stringtext17
  5710  2902                     __pstringtext17:	
  5711  2902                     STR_4:	
  5712  2902  3476               	retlw	118	;'v'
  5713  2903  3461               	retlw	97	;'a'
  5714  2904  346C               	retlw	108	;'l'
  5715  2905  343A               	retlw	58	;':'
  5716  2906  3420               	retlw	32	;' '
  5717  2907  3425               	retlw	37	;'%'
  5718  2908  3430               	retlw	48	;'0'
  5719  2909  3434               	retlw	52	;'4'
  5720  290A  3458               	retlw	88	;'X'
  5721  290B  3425               	retlw	37	;'%'
  5722  290C  3430               	retlw	48	;'0'
  5723  290D  3434               	retlw	52	;'4'
  5724  290E  3458               	retlw	88	;'X'
  5725  290F  3400               	retlw	0
  5726                           
  5727                           	psect	stringtext18
  5728  2910                     __pstringtext18:	
  5729  2910                     STR_20:	
  5730  2910  340A               	retlw	10
  5731  2911  340D               	retlw	13
  5732  2912  3444               	retlw	68	;'D'
  5733  2913  3457               	retlw	87	;'W'
  5734  2914  344D               	retlw	77	;'M'
  5735  2915  345F               	retlw	95	;'_'
  5736  2916  3445               	retlw	69	;'E'
  5737  2917  3452               	retlw	82	;'R'
  5738  2918  3452               	retlw	82	;'R'
  5739  2919  344F               	retlw	79	;'O'
  5740  291A  3452               	retlw	82	;'R'
  5741  291B  3400               	retlw	0
  5742                           
  5743                           	psect	stringtext19
  5744  2926                     __pstringtext19:	
  5745  2926                     STR_19:	
  5746  2926  340A               	retlw	10
  5747  2927  340D               	retlw	13
  5748  2928  3464               	retlw	100	;'d'
  5749  2929  3477               	retlw	119	;'w'
  5750  292A  345F               	retlw	95	;'_'
  5751  292B  346D               	retlw	109	;'m'
  5752  292C  3461               	retlw	97	;'a'
  5753  292D  3469               	retlw	105	;'i'
  5754  292E  346E               	retlw	110	;'n'
  5755  292F  3400               	retlw	0
  5756                           
  5757                           	psect	stringtext20
  5758  2930                     __pstringtext20:	
  5759  2930                     STR_2:	
  5760  2930  3476               	retlw	118	;'v'
  5761  2931  3461               	retlw	97	;'a'
  5762  2932  346C               	retlw	108	;'l'
  5763  2933  343A               	retlw	58	;':'
  5764  2934  3420               	retlw	32	;' '
  5765  2935  3425               	retlw	37	;'%'
  5766  2936  3430               	retlw	48	;'0'
  5767  2937  3432               	retlw	50	;'2'
  5768  2938  3458               	retlw	88	;'X'
  5769  2939  3400               	retlw	0
  5770                           
  5771                           	psect	stringtext21
  5772  293A                     __pstringtext21:	
  5773  293A                     STR_3:	
  5774  293A  3476               	retlw	118	;'v'
  5775  293B  3461               	retlw	97	;'a'
  5776  293C  346C               	retlw	108	;'l'
  5777  293D  343A               	retlw	58	;':'
  5778  293E  3420               	retlw	32	;' '
  5779  293F  3425               	retlw	37	;'%'
  5780  2940  3430               	retlw	48	;'0'
  5781  2941  3434               	retlw	52	;'4'
  5782  2942  3458               	retlw	88	;'X'
  5783  2943  3400               	retlw	0
  5784                           
  5785                           	psect	stringtext22
  5786  2944                     __pstringtext22:	
  5787  2944                     STR_23:	
  5788  2944  340A               	retlw	10
  5789  2945  340D               	retlw	13
  5790  2946  3444               	retlw	68	;'D'
  5791  2947  3457               	retlw	87	;'W'
  5792  2948  344D               	retlw	77	;'M'
  5793  2949  345F               	retlw	95	;'_'
  5794  294A  344F               	retlw	79	;'O'
  5795  294B  344B               	retlw	75	;'K'
  5796  294C  3400               	retlw	0
  5797                           
  5798                           	psect	stringtext23
  5799  2955                     __pstringtext23:	
  5800  2955                     STR_24:	
  5801  2955  3428               	retlw	40	;'('
  5802  2956  346E               	retlw	110	;'n'
  5803  2957  3475               	retlw	117	;'u'
  5804  2958  346C               	retlw	108	;'l'
  5805  2959  346C               	retlw	108	;'l'
  5806  295A  3429               	retlw	41	;')'
  5807  295B  3400               	retlw	0
  5808                           
  5809                           	psect	stringtext24
  5810  0000                     __pstringtext24:	
  5811  28C6                     
  5812                           ; #config settings
  5813  0000                     
  5814                           	psect	cinit
  5815  07A2                     start_initialization:	
  5816  07A2                     __initialization:		;BIGRAM
  5817                           
  5818                           ; Initialize objects allocated to BANK1
  5819  07A2  0141               	movlb	1	; select bank1
  5820  07A3  3188  2000  3187   	fcall	__pidataBANK1	;fetch initializer
  5821  07A6  00EF               	movwf	__pdataBANK1& (0+127)
  5822                           
  5823                           ; Initialize objects allocated to BANK2
  5824  07A7  301F               	movlw	low __pidataBANK2
  5825  07A8  0084               	movwf	4
  5826  07A9  30A5               	movlw	(high __pidataBANK2)| (0+128)
  5827  07AA  0085               	movwf	5
  5828  07AB  305F               	movlw	low __pdataBANK2
  5829  07AC  0086               	movwf	6
  5830  07AD  3001               	movlw	high __pdataBANK2
  5831  07AE  0087               	movwf	7
  5832  07AF  3000               	movlw	0
  5833  07B0  00FF               	movwf	btemp+1
  5834  07B1  300F               	movlw	15
  5835  07B2  31A4  24E8  3187   	fcall	init_ram
  5836                           
  5837                           ; Initialize objects allocated to BANK3
  5838  07B5  3002               	movlw	low __pidataBANK3
  5839  07B6  0084               	movwf	4
  5840  07B7  30A5               	movlw	(high __pidataBANK3)| (0+128)
  5841  07B8  0085               	movwf	5
  5842  07B9  30D5               	movlw	low __pdataBANK3
  5843  07BA  0086               	movwf	6
  5844  07BB  3001               	movlw	high __pdataBANK3
  5845  07BC  0087               	movwf	7
  5846  07BD  3000               	movlw	0
  5847  07BE  00FF               	movwf	btemp+1
  5848  07BF  300E               	movlw	14
  5849  07C0  31A4  24E8  3187   	fcall	init_ram
  5850                           
  5851                           ; Initialize objects allocated to BANK4
  5852  07C3  30E1               	movlw	low __pidataBANK4
  5853  07C4  0084               	movwf	4
  5854  07C5  30A6               	movlw	(high __pidataBANK4)| (0+128)
  5855  07C6  0085               	movwf	5
  5856  07C7  3020               	movlw	low __pdataBANK4
  5857  07C8  0086               	movwf	6
  5858  07C9  3002               	movlw	high __pdataBANK4
  5859  07CA  0087               	movwf	7
  5860  07CB  3000               	movlw	0
  5861  07CC  00FF               	movwf	btemp+1
  5862  07CD  3024               	movlw	36
  5863  07CE  31A4  24E8  3187   	fcall	init_ram
  5864                           
  5865                           ; Clear objects allocated to BIGRAM
  5866  07D1  30F0               	movlw	low (0+12016)
  5867  07D2  0084               	movwf	4
  5868  07D3  302E               	movlw	high (0+12016)
  5869  07D4  0085               	movwf	5
  5870  07D5  3000               	movlw	0
  5871  07D6  00FE               	movwf	btemp
  5872  07D7  3001               	movlw	1
  5873  07D8  00FF               	movwf	btemp+1
  5874  07D9  31A4  24DC  3187   	fcall	clear_ram0
  5875                           
  5876                           ; Clear objects allocated to BANK1
  5877  07DC  01EE               	clrf	__pbssBANK1& (0+127)
  5878                           
  5879                           ; Clear objects allocated to BANK2
  5880  07DD  3020               	movlw	low __pbssBANK2
  5881  07DE  0084               	movwf	4
  5882  07DF  3001               	movlw	high __pbssBANK2
  5883  07E0  0085               	movwf	5
  5884  07E1  302A               	movlw	42
  5885  07E2  00FE               	movwf	btemp
  5886  07E3  3000               	movlw	0
  5887  07E4  00FF               	movwf	btemp+1
  5888  07E5  31A4  24DC  3187   	fcall	clear_ram0
  5889                           
  5890                           ; Clear objects allocated to BANK3
  5891  07E8  30A0               	movlw	low __pbssBANK3
  5892  07E9  0084               	movwf	4
  5893  07EA  3001               	movlw	high __pbssBANK3
  5894  07EB  0085               	movwf	5
  5895  07EC  3035               	movlw	53
  5896  07ED  00FE               	movwf	btemp
  5897  07EE  3000               	movlw	0
  5898  07EF  00FF               	movwf	btemp+1
  5899  07F0  31A4  24DC  3187   	fcall	clear_ram0
  5900                           
  5901                           ; Clear objects allocated to BANK5
  5902  07F3  30A0               	movlw	low __pbssBANK5
  5903  07F4  0084               	movwf	4
  5904  07F5  3002               	movlw	high __pbssBANK5
  5905  07F6  0085               	movwf	5
  5906  07F7  302E               	movlw	46
  5907  07F8  00FE               	movwf	btemp
  5908  07F9  3000               	movlw	0
  5909  07FA  00FF               	movwf	btemp+1
  5910  07FB  31A4  24DC         	fcall	clear_ram0
  5911  07FD                     end_of_initialization:	
  5912                           ;End of C runtime variable initialization code
  5913                           
  5914  07FD                     __end_of__initialization:	
  5915  07FD  0140               	movlb	0
  5916  07FE  319A  2AED         	ljmp	_main	;jump to C main() function
  5917                           
  5918                           	psect	bssBANK1
  5919  00EE                     __pbssBANK1:	
  5920  00EE                     _eusartRxLastError:	
  5921  00EE                     	ds	1
  5922                           
  5923                           	psect	dataBANK1
  5924  00EF                     __pdataBANK1:	
  5925  00EF                     _pdw3000local:	
  5926  00EF                     	ds	1
  5927                           
  5928                           	psect	bssBANK2
  5929  0120                     __pbssBANK2:	
  5930  0120                     get_rx_timestamp_u64@F15744:	
  5931  0120                     	ds	8
  5932  0128                     get_tx_timestamp_u64@F15740:	
  5933  0128                     	ds	8
  5934  0130                     get_sys_timestamp_u64@F15736:	
  5935  0130                     	ds	8
  5936  0138                     _status_reg:	
  5937  0138                     	ds	4
  5938  013C                     _dev_id:	
  5939  013C                     	ds	4
  5940  0140                     _RNG_ADDR:	
  5941  0140                     	ds	2
  5942  0142                     _TAG_ADDR:	
  5943  0142                     	ds	2
  5944  0144                     _EUSART_ErrorHandler:	
  5945  0144                     	ds	2
  5946  0146                     _EUSART_OverrunErrorHandler:	
  5947  0146                     	ds	2
  5948  0148                     _EUSART_FramingErrorHandler:	
  5949  0148                     	ds	2
  5950                           
  5951                           	psect	dataBANK2
  5952  015F                     __pdataBANK2:	
  5953  015F                     _ADDR:	
  5954  015F                     	ds	8
  5955  0167                     _txconfig_options_ch9:	
  5956  0167                     	ds	7
  5957                           
  5958                           	psect	bssBANK3
  5959  01A0                     __pbssBANK3:	
  5960  01A0                     _rx_buffer:	
  5961  01A0                     	ds	21
  5962  01B5                     _add_time:	
  5963  01B5                     	ds	8
  5964  01BD                     _prev_ts:	
  5965  01BD                     	ds	8
  5966  01C5                     _resp_rx_ts:	
  5967  01C5                     	ds	8
  5968  01CD                     _poll_tx_ts:	
  5969  01CD                     	ds	8
  5970                           
  5971                           	psect	dataBANK3
  5972  01D5                     __pdataBANK3:	
  5973  01D5                     _config:	
  5974  01D5                     	ds	14
  5975                           
  5976                           	psect	dataBANK4
  5977  0220                     __pdataBANK4:	
  5978  0220                     _tx_blink_msg:	
  5979  0220                     	ds	36
  5980                           
  5981                           	psect	bssBANK5
  5982  02A0                     __pbssBANK5:	
  5983  02A0                     _DW3000local:	
  5984  02A0                     	ds	46
  5985                           
  5986                           	psect	inittext
  5987  24E8                     init_ram:	
  5988  24E8  00FE               	movwf	126
  5989  24E9                     initloop:	
  5990  24E9  0012               	moviw fsr0++
  5991  24EA  001E               	movwi fsr1++
  5992  24EB  3001               	movlw	1
  5993  24EC  02FE               	subwf	126,f
  5994  24ED  3000               	movlw	0
  5995  24EE  3BFF               	subwfb	127,f
  5996  24EF  087F               	movf	127,w
  5997  24F0  047E               	iorwf	126,w
  5998  24F1  1903               	btfsc	3,2
  5999  24F2  3400               	retlw	0
  6000  24F3  2CE9               	goto	initloop
  6001                           
  6002                           	psect	clrtext
  6003  24DC                     clear_ram0:	
  6004                           ;	Called with FSR0 containing the base address, and
  6005                           ;	btemp/btemp+1 has the size to clear
  6006                           
  6007  24DC  0064               	clrwdt	;clear the watchdog before getting into this loop
  6008  24DD                     clrloop0:	
  6009  24DD  0180               	clrf	0	;clear RAM location pointed to by FSR
  6010  24DE  3101               	addfsr 0,1
  6011  24DF  3001               	movlw	1
  6012  24E0  02FE               	subwf	126,f
  6013  24E1  3000               	movlw	0
  6014  24E2  3BFF               	subwfb	127,f
  6015  24E3  087F               	movf	127,w
  6016  24E4  047E               	iorwf	126,w
  6017  24E5  1903               	btfsc	3,2
  6018  24E6  3400               	retlw	0	;all done for this memory range, return
  6019  24E7  2CDD               	goto	clrloop0	;have we reached the end yet?
  6020                           
  6021                           	psect	cstackBANK2
  6022  014A                     __pcstackBANK2:	
  6023  014A                     _dwt_configure$1232:	
  6024                           
  6025                           ; 2 bytes @ 0x0
  6026  014A                     	ds	2
  6027  014C                     dwt_configure@error:	
  6028                           
  6029                           ; 2 bytes @ 0x2
  6030  014C                     	ds	2
  6031  014E                     dwt_configure@sts_mnth:	
  6032                           
  6033                           ; 2 bytes @ 0x4
  6034  014E                     	ds	2
  6035  0150                     dwt_configure@scp:	
  6036                           
  6037                           ; 1 bytes @ 0x6
  6038  0150                     	ds	1
  6039  0151                     dwt_configure@mode:	
  6040                           
  6041                           ; 1 bytes @ 0x7
  6042  0151                     	ds	1
  6043  0152                     dwt_configure@flag:	
  6044                           
  6045                           ; 1 bytes @ 0x8
  6046  0152                     	ds	1
  6047  0153                     _dwt_configure$1230:	
  6048                           
  6049                           ; 1 bytes @ 0x9
  6050  0153                     	ds	1
  6051  0154                     dwt_configure@temp:	
  6052                           
  6053                           ; 4 bytes @ 0xA
  6054  0154                     	ds	4
  6055  0158                     dwt_configure@cnt:	
  6056                           
  6057                           ; 1 bytes @ 0xE
  6058  0158                     	ds	1
  6059  0159                     dwt_configure@sts_len:	
  6060                           
  6061                           ; 2 bytes @ 0xF
  6062  0159                     	ds	2
  6063  015B                     dwt_configure@preamble_len:	
  6064                           
  6065                           ; 2 bytes @ 0x11
  6066  015B                     	ds	2
  6067  015D                     dwt_configure@chan:	
  6068                           
  6069                           ; 1 bytes @ 0x13
  6070  015D                     	ds	1
  6071  015E                     dwt_configure@config:	
  6072                           
  6073                           ; 1 bytes @ 0x14
  6074  015E                     	ds	1
  6075                           
  6076                           	psect	cstackBANK1
  6077  00A0                     __pcstackBANK1:	
  6078  00A0                     ?_dwt_writetodevice:	
  6079  00A0                     ?_dwt_readfromdevice:	
  6080                           ; 1 bytes @ 0x0
  6081                           
  6082  00A0                     ?_dwt_modify32bitoffsetreg:	
  6083                           ; 1 bytes @ 0x0
  6084                           
  6085  00A0                     ?_dwt_modify16bitoffsetreg:	
  6086                           ; 1 bytes @ 0x0
  6087                           
  6088  00A0                     ?_dwt_modify8bitoffsetreg:	
  6089                           ; 1 bytes @ 0x0
  6090                           
  6091  00A0                     dwt_read8bitoffsetreg@regval:	
  6092                           ; 1 bytes @ 0x0
  6093                           
  6094  00A0                     dwt_writetodevice@regFileID:	
  6095                           ; 1 bytes @ 0x0
  6096                           
  6097  00A0                     dwt_readfromdevice@regFileID:	
  6098                           ; 4 bytes @ 0x0
  6099                           
  6100  00A0                     dwt_modify32bitoffsetreg@regFileID:	
  6101                           ; 4 bytes @ 0x0
  6102                           
  6103  00A0                     dwt_modify16bitoffsetreg@regFileID:	
  6104                           ; 4 bytes @ 0x0
  6105                           
  6106  00A0                     dwt_modify8bitoffsetreg@regFileID:	
  6107                           ; 4 bytes @ 0x0
  6108                           
  6109                           
  6110                           ; 4 bytes @ 0x0
  6111  00A0                     	ds	4
  6112  00A4                     dwt_writetodevice@index:	
  6113  00A4                     dwt_readfromdevice@index:	
  6114                           ; 2 bytes @ 0x4
  6115                           
  6116  00A4                     dwt_modify32bitoffsetreg@regOffset:	
  6117                           ; 2 bytes @ 0x4
  6118                           
  6119  00A4                     dwt_modify16bitoffsetreg@regOffset:	
  6120                           ; 4 bytes @ 0x4
  6121                           
  6122  00A4                     dwt_modify8bitoffsetreg@regOffset:	
  6123                           ; 4 bytes @ 0x4
  6124                           
  6125                           
  6126                           ; 4 bytes @ 0x4
  6127  00A4                     	ds	2
  6128  00A6                     dwt_writetodevice@length:	
  6129  00A6                     dwt_readfromdevice@length:	
  6130                           ; 4 bytes @ 0x6
  6131                           
  6132                           
  6133                           ; 4 bytes @ 0x6
  6134  00A6                     	ds	2
  6135  00A8                     dwt_modify8bitoffsetreg@_and:	
  6136  00A8                     dwt_modify16bitoffsetreg@_and:	
  6137                           ; 1 bytes @ 0x8
  6138                           
  6139  00A8                     dwt_modify32bitoffsetreg@_and:	
  6140                           ; 2 bytes @ 0x8
  6141                           
  6142                           
  6143                           ; 4 bytes @ 0x8
  6144  00A8                     	ds	1
  6145  00A9                     dwt_modify8bitoffsetreg@_or:	
  6146                           
  6147                           ; 1 bytes @ 0x9
  6148  00A9                     	ds	1
  6149  00AA                     dwt_readfromdevice@buffer:	
  6150  00AA                     dwt_writetodevice@buffer:	
  6151                           ; 1 bytes @ 0xA
  6152                           
  6153  00AA                     dwt_modify16bitoffsetreg@_or:	
  6154                           ; 2 bytes @ 0xA
  6155                           
  6156                           
  6157                           ; 2 bytes @ 0xA
  6158  00AA                     	ds	1
  6159  00AB                     ??_dwt_read32bitoffsetreg:	
  6160  00AB                     ??_dwt_read16bitoffsetreg:	
  6161                           ; 1 bytes @ 0xB
  6162                           
  6163                           
  6164                           ; 1 bytes @ 0xB
  6165  00AB                     	ds	1
  6166  00AC                     ?_dwt_write32bitoffsetreg:	
  6167  00AC                     ?_dwt_write16bitoffsetreg:	
  6168                           ; 1 bytes @ 0xC
  6169                           
  6170  00AC                     ?_dwt_write8bitoffsetreg:	
  6171                           ; 1 bytes @ 0xC
  6172                           
  6173  00AC                     dwt_write32bitoffsetreg@regFileID:	
  6174                           ; 1 bytes @ 0xC
  6175                           
  6176  00AC                     dwt_write16bitoffsetreg@regFileID:	
  6177                           ; 4 bytes @ 0xC
  6178                           
  6179  00AC                     dwt_write8bitoffsetreg@regFileID:	
  6180                           ; 4 bytes @ 0xC
  6181                           
  6182  00AC                     dwt_modify32bitoffsetreg@_or:	
  6183                           ; 4 bytes @ 0xC
  6184                           
  6185                           
  6186                           ; 4 bytes @ 0xC
  6187  00AC                     	ds	4
  6188  00B0                     dwt_read16bitoffsetreg@regval:	
  6189  00B0                     dwt_write32bitoffsetreg@regOffset:	
  6190                           ; 2 bytes @ 0x10
  6191                           
  6192  00B0                     dwt_write16bitoffsetreg@regOffset:	
  6193                           ; 4 bytes @ 0x10
  6194                           
  6195  00B0                     dwt_write8bitoffsetreg@regOffset:	
  6196                           ; 4 bytes @ 0x10
  6197                           
  6198  00B0                     dwt_modify32bitoffsetreg@buf:	
  6199                           ; 4 bytes @ 0x10
  6200                           
  6201                           
  6202                           ; 8 bytes @ 0x10
  6203  00B0                     	ds	2
  6204  00B2                     dwt_read16bitoffsetreg@buffer:	
  6205                           
  6206                           ; 2 bytes @ 0x12
  6207  00B2                     	ds	1
  6208  00B3                     dwt_read32bitoffsetreg@buffer:	
  6209                           
  6210                           ; 4 bytes @ 0x13
  6211  00B3                     	ds	1
  6212  00B4                     ??_dwt_checkidlerc:	
  6213  00B4                     dwt_write8bitoffsetreg@regval:	
  6214                           ; 1 bytes @ 0x14
  6215                           
  6216  00B4                     dwt_write16bitoffsetreg@regval:	
  6217                           ; 1 bytes @ 0x14
  6218                           
  6219  00B4                     dwt_write32bitoffsetreg@regval:	
  6220                           ; 2 bytes @ 0x14
  6221                           
  6222                           
  6223                           ; 4 bytes @ 0x14
  6224  00B4                     	ds	3
  6225  00B7                     dwt_read32bitoffsetreg@regval:	
  6226                           
  6227                           ; 4 bytes @ 0x17
  6228  00B7                     	ds	1
  6229  00B8                     ?_dwt_setdwstate:	
  6230  00B8                     ?_dwt_configmrxlut:	
  6231                           ; 1 bytes @ 0x18
  6232                           
  6233  00B8                     ?_dwt_writetxfctrl:	
  6234                           ; 1 bytes @ 0x18
  6235                           
  6236  00B8                     ?_dwt_enable_rf_tx:	
  6237                           ; 1 bytes @ 0x18
  6238                           
  6239  00B8                     ?_dwt_enable_rftx_blocks:	
  6240                           ; 1 bytes @ 0x18
  6241                           
  6242  00B8                     ?_dwt_writetxdata:	
  6243                           ; 1 bytes @ 0x18
  6244                           
  6245  00B8                     dwt_setdwstate@state:	
  6246                           ; 2 bytes @ 0x18
  6247                           
  6248  00B8                     dwt_configmrxlut@channel:	
  6249                           ; 2 bytes @ 0x18
  6250                           
  6251  00B8                     dwt_writetxdata@txDataLength:	
  6252                           ; 2 bytes @ 0x18
  6253                           
  6254  00B8                     dwt_writetxfctrl@txFrameLength:	
  6255                           ; 2 bytes @ 0x18
  6256                           
  6257  00B8                     dwt_checkidlerc@reg:	
  6258                           ; 2 bytes @ 0x18
  6259                           
  6260  00B8                     dwt_enable_rf_tx@channel:	
  6261                           ; 4 bytes @ 0x18
  6262                           
  6263  00B8                     dwt_enable_rftx_blocks@channel:	
  6264                           ; 4 bytes @ 0x18
  6265                           
  6266                           
  6267                           ; 4 bytes @ 0x18
  6268  00B8                     	ds	2
  6269  00BA                     ??_dwt_setdwstate:	
  6270  00BA                     dwt_writetxdata@txDataBytes:	
  6271                           ; 1 bytes @ 0x1A
  6272                           
  6273  00BA                     dwt_writetxfctrl@txBufferOffset:	
  6274                           ; 1 bytes @ 0x1A
  6275                           
  6276  00BA                     dwt_configmrxlut@lut0:	
  6277                           ; 2 bytes @ 0x1A
  6278                           
  6279                           
  6280                           ; 4 bytes @ 0x1A
  6281  00BA                     	ds	1
  6282  00BB                     dwt_read32bitoffsetreg@j:	
  6283  00BB                     dwt_writetxdata@txBufferOffset:	
  6284                           ; 2 bytes @ 0x1B
  6285                           
  6286                           
  6287                           ; 2 bytes @ 0x1B
  6288  00BB                     	ds	1
  6289  00BC                     dwt_writetxfctrl@ranging:	
  6290  00BC                     dwt_enable_rf_tx@switch_control:	
  6291                           ; 1 bytes @ 0x1C
  6292                           
  6293                           
  6294                           ; 1 bytes @ 0x1C
  6295  00BC                     	ds	1
  6296  00BD                     ?_dwt_calcbandwidthadj:	
  6297  00BD                     ??_dwt_writetxdata:	
  6298                           ; 1 bytes @ 0x1D
  6299                           
  6300  00BD                     ??_dwt_writetxfctrl:	
  6301                           ; 1 bytes @ 0x1D
  6302                           
  6303  00BD                     ??_dwt_starttx:	
  6304                           ; 1 bytes @ 0x1D
  6305                           
  6306  00BD                     ?_dwt_run_pgfcal:	
  6307                           ; 1 bytes @ 0x1D
  6308                           
  6309  00BD                     ?__dwt_otpread:	
  6310                           ; 2 bytes @ 0x1D
  6311                           
  6312  00BD                     ?_dwt_readdevid:	
  6313                           ; 4 bytes @ 0x1D
  6314                           
  6315  00BD                     __dwt_otpread@address:	
  6316                           ; 4 bytes @ 0x1D
  6317                           
  6318  00BD                     dwt_calcbandwidthadj@target_count:	
  6319                           ; 2 bytes @ 0x1D
  6320                           
  6321                           
  6322                           ; 2 bytes @ 0x1D
  6323  00BD                     	ds	1
  6324  00BE                     dwt_configmrxlut@lut1:	
  6325                           
  6326                           ; 4 bytes @ 0x1E
  6327  00BE                     	ds	1
  6328  00BF                     ??_dwt_run_pgfcal:	
  6329  00BF                     dwt_calcbandwidthadj@channel:	
  6330                           ; 1 bytes @ 0x1F
  6331                           
  6332  00BF                     dwt_starttx@sys_state:	
  6333                           ; 2 bytes @ 0x1F
  6334                           
  6335                           
  6336                           ; 4 bytes @ 0x1F
  6337  00BF                     	ds	2
  6338  00C1                     ??_dwt_calcbandwidthadj:	
  6339  00C1                     ?_dwt_check_dev_id:	
  6340                           ; 1 bytes @ 0x21
  6341                           
  6342  00C1                     dwt_run_pgfcal@data:	
  6343                           ; 2 bytes @ 0x21
  6344                           
  6345  00C1                     __dwt_otpread@ret_data:	
  6346                           ; 4 bytes @ 0x21
  6347                           
  6348                           
  6349                           ; 4 bytes @ 0x21
  6350  00C1                     	ds	1
  6351  00C2                     dwt_configmrxlut@lut2:	
  6352                           
  6353                           ; 4 bytes @ 0x22
  6354  00C2                     	ds	1
  6355  00C3                     ??_dwt_configuretxrf:	
  6356  00C3                     dwt_starttx@retval:	
  6357                           ; 1 bytes @ 0x23
  6358                           
  6359                           
  6360                           ; 2 bytes @ 0x23
  6361  00C3                     	ds	2
  6362  00C5                     ?_dwt_initialise:	
  6363  00C5                     dwt_configuretxrf@channel:	
  6364                           ; 2 bytes @ 0x25
  6365                           
  6366  00C5                     dwt_run_pgfcal@flag:	
  6367                           ; 1 bytes @ 0x25
  6368                           
  6369  00C5                     dwt_initialise@mode:	
  6370                           ; 1 bytes @ 0x25
  6371                           
  6372  00C5                     dwt_starttx@checkTxOK:	
  6373                           ; 2 bytes @ 0x25
  6374                           
  6375                           
  6376                           ; 2 bytes @ 0x25
  6377  00C5                     	ds	1
  6378  00C6                     dwt_configuretxrf@config:	
  6379  00C6                     dwt_run_pgfcal@result:	
  6380                           ; 1 bytes @ 0x26
  6381                           
  6382  00C6                     dwt_configmrxlut@lut3:	
  6383                           ; 2 bytes @ 0x26
  6384                           
  6385                           
  6386                           ; 4 bytes @ 0x26
  6387  00C6                     	ds	1
  6388  00C7                     ??_dwt_initialise:	
  6389  00C7                     dwt_starttx@mode:	
  6390                           ; 1 bytes @ 0x27
  6391                           
  6392                           
  6393                           ; 1 bytes @ 0x27
  6394  00C7                     	ds	1
  6395  00C8                     dwt_run_pgfcal@val:	
  6396                           
  6397                           ; 4 bytes @ 0x28
  6398  00C8                     	ds	2
  6399  00CA                     dwt_configmrxlut@lut4:	
  6400                           
  6401                           ; 4 bytes @ 0x2A
  6402  00CA                     	ds	1
  6403  00CB                     dwt_writetxfctrl@reg32:	
  6404                           
  6405                           ; 4 bytes @ 0x2B
  6406  00CB                     	ds	1
  6407  00CC                     dwt_run_pgfcal@cnt:	
  6408  00CC                     dwt_initialise@ldo_tune_lo:	
  6409                           ; 1 bytes @ 0x2C
  6410                           
  6411                           
  6412                           ; 4 bytes @ 0x2C
  6413  00CC                     	ds	1
  6414  00CD                     ?_dwt_pgf_cal:	
  6415  00CD                     dwt_pgf_cal@ldoen:	
  6416                           ; 2 bytes @ 0x2D
  6417                           
  6418                           
  6419                           ; 2 bytes @ 0x2D
  6420  00CD                     	ds	1
  6421  00CE                     dwt_configmrxlut@lut5:	
  6422                           
  6423                           ; 4 bytes @ 0x2E
  6424  00CE                     	ds	1
  6425  00CF                     dwt_pgf_cal@temp:	
  6426                           
  6427                           ; 2 bytes @ 0x2F
  6428  00CF                     	ds	1
  6429  00D0                     dwt_initialise@ldo_tune_hi:	
  6430                           
  6431                           ; 4 bytes @ 0x30
  6432  00D0                     	ds	1
  6433  00D1                     dwt_pgf_cal@val:	
  6434                           
  6435                           ; 2 bytes @ 0x31
  6436  00D1                     	ds	1
  6437  00D2                     dwt_configmrxlut@lut6:	
  6438                           
  6439                           ; 4 bytes @ 0x32
  6440  00D2                     	ds	4
  6441  00D6                     ?_dwt_configure:	
  6442                           
  6443                           ; 2 bytes @ 0x36
  6444  00D6                     	ds	2
  6445  00D8                     ??_dwt_configure:	
  6446                           
  6447                           ; 1 bytes @ 0x38
  6448  00D8                     	ds	19
  6449  00EB                     ??_dw_main:	
  6450                           
  6451                           ; 1 bytes @ 0x4B
  6452  00EB                     	ds	1
  6453  00EC                     ??_main:	
  6454                           
  6455                           ; 1 bytes @ 0x4C
  6456  00EC                     	ds	2
  6457                           
  6458                           	psect	cstackCOMMON
  6459  0070                     __pcstackCOMMON:	
  6460  0070                     ?_isdigit:	
  6461  0070                     ?_PMD_Initialize:	
  6462                           ; 1 bit 
  6463                           
  6464  0070                     ??_PMD_Initialize:	
  6465                           ; 1 bytes @ 0x0
  6466                           
  6467  0070                     ?_OSCILLATOR_Initialize:	
  6468                           ; 1 bytes @ 0x0
  6469                           
  6470  0070                     ??_OSCILLATOR_Initialize:	
  6471                           ; 1 bytes @ 0x0
  6472                           
  6473  0070                     ?_EUSART_Initialize:	
  6474                           ; 1 bytes @ 0x0
  6475                           
  6476  0070                     ??_EUSART_Initialize:	
  6477                           ; 1 bytes @ 0x0
  6478                           
  6479  0070                     ?_SPI1_Initialize:	
  6480                           ; 1 bytes @ 0x0
  6481                           
  6482  0070                     ??_SPI1_Initialize:	
  6483                           ; 1 bytes @ 0x0
  6484                           
  6485  0070                     ?_dw_main:	
  6486                           ; 1 bytes @ 0x0
  6487                           
  6488  0070                     ?_dwt_generatecrc8:	
  6489                           ; 1 bytes @ 0x0
  6490                           
  6491  0070                     ?_dwt_checkidlerc:	
  6492                           ; 1 bytes @ 0x0
  6493                           
  6494  0070                     ?_dwt_setplenfine:	
  6495                           ; 1 bytes @ 0x0
  6496                           
  6497  0070                     ??_isdigit:	
  6498                           ; 1 bytes @ 0x0
  6499                           
  6500  0070                     ?_PIN_MANAGER_Initialize:	
  6501                           ; 1 bytes @ 0x0
  6502                           
  6503  0070                     ??_PIN_MANAGER_Initialize:	
  6504                           ; 1 bytes @ 0x0
  6505                           
  6506  0070                     ?_SYSTEM_Initialize:	
  6507                           ; 1 bytes @ 0x0
  6508                           
  6509  0070                     ?_EUSART_Write:	
  6510                           ; 1 bytes @ 0x0
  6511                           
  6512  0070                     ??_EUSART_Write:	
  6513                           ; 1 bytes @ 0x0
  6514                           
  6515  0070                     ?_SPI1_Open:	
  6516                           ; 1 bytes @ 0x0
  6517                           
  6518  0070                     ??_SPI1_Open:	
  6519                           ; 1 bytes @ 0x0
  6520                           
  6521  0070                     ?_SPI1_ExchangeByte:	
  6522                           ; 1 bytes @ 0x0
  6523                           
  6524  0070                     ??_SPI1_ExchangeByte:	
  6525                           ; 1 bytes @ 0x0
  6526                           
  6527  0070                     ?_SPI1_WriteByte:	
  6528                           ; 1 bytes @ 0x0
  6529                           
  6530  0070                     ??_SPI1_WriteByte:	
  6531                           ; 1 bytes @ 0x0
  6532                           
  6533  0070                     ?_main:	
  6534                           ; 1 bytes @ 0x0
  6535                           
  6536  0070                     ?_Sleep:	
  6537                           ; 1 bytes @ 0x0
  6538                           
  6539  0070                     ?__dwt_prog_ldo_and_bias_tune:	
  6540                           ; 1 bytes @ 0x0
  6541                           
  6542  0070                     ?__dwt_kick_dgc_on_wakeup:	
  6543                           ; 1 bytes @ 0x0
  6544                           
  6545  0070                     ?_dwt_configuretxrf:	
  6546                           ; 1 bytes @ 0x0
  6547                           
  6548  0070                     ?_dwt_disable_rf_tx:	
  6549                           ; 1 bytes @ 0x0
  6550                           
  6551  0070                     ?_dwt_disable_rftx_blocks:	
  6552                           ; 1 bytes @ 0x0
  6553                           
  6554  0070                     ?_reset_DWIC:	
  6555                           ; 1 bytes @ 0x0
  6556                           
  6557  0070                     ?_dwt_starttx:	
  6558                           ; 1 bytes @ 0x0
  6559                           
  6560  0070                     ?___wmul:	
  6561                           ; 2 bytes @ 0x0
  6562                           
  6563  0070                     ?___lwdiv:	
  6564                           ; 2 bytes @ 0x0
  6565                           
  6566  0070                     ?___ftpack:	
  6567                           ; 2 bytes @ 0x0
  6568                           
  6569  0070                     ?___lmul:	
  6570                           ; 3 bytes @ 0x0
  6571                           
  6572  0070                     PIN_MANAGER_Initialize@state:	
  6573                           ; 4 bytes @ 0x0
  6574                           
  6575  0070                     EUSART_Write@txData:	
  6576                           ; 1 bytes @ 0x0
  6577                           
  6578  0070                     SPI1_Initialize@state:	
  6579                           ; 1 bytes @ 0x0
  6580                           
  6581  0070                     SPI1_ExchangeByte@data:	
  6582                           ; 1 bytes @ 0x0
  6583                           
  6584  0070                     SPI1_WriteByte@byte:	
  6585                           ; 1 bytes @ 0x0
  6586                           
  6587  0070                     _isdigit$2119:	
  6588                           ; 1 bytes @ 0x0
  6589                           
  6590  0070                     dwt_generatecrc8@byteArray:	
  6591                           ; 1 bytes @ 0x0
  6592                           
  6593  0070                     ___wmul@multiplier:	
  6594                           ; 2 bytes @ 0x0
  6595                           
  6596  0070                     ___lwdiv@divisor:	
  6597                           ; 2 bytes @ 0x0
  6598                           
  6599  0070                     ___ftpack@arg:	
  6600                           ; 2 bytes @ 0x0
  6601                           
  6602  0070                     Sleep@time:	
  6603                           ; 3 bytes @ 0x0
  6604                           
  6605  0070                     ___lmul@multiplier:	
  6606                           ; 4 bytes @ 0x0
  6607                           
  6608                           
  6609                           ; 4 bytes @ 0x0
  6610  0070                     	ds	1
  6611  0071                     ??_SYSTEM_Initialize:	
  6612  0071                     ?_printf_string:	
  6613                           ; 1 bytes @ 0x1
  6614                           
  6615  0071                     ?_putch:	
  6616                           ; 1 bytes @ 0x1
  6617                           
  6618  0071                     ?_SPI1_WriteBlock:	
  6619                           ; 1 bytes @ 0x1
  6620                           
  6621  0071                     ?_SPI1_ReadBlock:	
  6622                           ; 1 bytes @ 0x1
  6623                           
  6624  0071                     putch@txData:	
  6625                           ; 1 bytes @ 0x1
  6626                           
  6627  0071                     isdigit@c:	
  6628                           ; 1 bytes @ 0x1
  6629                           
  6630  0071                     printf_string@data:	
  6631                           ; 1 bytes @ 0x1
  6632                           
  6633  0071                     SPI1_WriteBlock@block:	
  6634                           ; 2 bytes @ 0x1
  6635                           
  6636  0071                     SPI1_ReadBlock@block:	
  6637                           ; 2 bytes @ 0x1
  6638                           
  6639                           
  6640                           ; 2 bytes @ 0x1
  6641  0071                     	ds	1
  6642  0072                     ??_putch:	
  6643  0072                     dwt_generatecrc8@len:	
  6644                           ; 1 bytes @ 0x2
  6645                           
  6646  0072                     ___wmul@multiplicand:	
  6647                           ; 2 bytes @ 0x2
  6648                           
  6649  0072                     ___lwdiv@dividend:	
  6650                           ; 2 bytes @ 0x2
  6651                           
  6652                           
  6653                           ; 2 bytes @ 0x2
  6654  0072                     	ds	1
  6655  0073                     ??_printf_string:	
  6656  0073                     ___ftpack@exp:	
  6657                           ; 1 bytes @ 0x3
  6658                           
  6659  0073                     SPI1_WriteBlock@blockSize:	
  6660                           ; 1 bytes @ 0x3
  6661                           
  6662  0073                     SPI1_ReadBlock@blockSize:	
  6663                           ; 2 bytes @ 0x3
  6664                           
  6665                           
  6666                           ; 2 bytes @ 0x3
  6667  0073                     	ds	1
  6668  0074                     ??_Sleep:	
  6669  0074                     ??___wmul:	
  6670                           ; 1 bytes @ 0x4
  6671                           
  6672  0074                     ??___lwdiv:	
  6673                           ; 1 bytes @ 0x4
  6674                           
  6675  0074                     dwt_generatecrc8@crcRemainderInit:	
  6676                           ; 1 bytes @ 0x4
  6677                           
  6678  0074                     ___ftpack@sign:	
  6679                           ; 1 bytes @ 0x4
  6680                           
  6681  0074                     ___wmul@product:	
  6682                           ; 1 bytes @ 0x4
  6683                           
  6684  0074                     ___lmul@multiplicand:	
  6685                           ; 2 bytes @ 0x4
  6686                           
  6687                           
  6688                           ; 4 bytes @ 0x4
  6689  0074                     	ds	1
  6690  0075                     ??_dwt_generatecrc8:	
  6691  0075                     ??___ftpack:	
  6692                           ; 1 bytes @ 0x5
  6693                           
  6694  0075                     ??_SPI1_WriteBlock:	
  6695                           ; 1 bytes @ 0x5
  6696                           
  6697  0075                     ??_SPI1_ReadBlock:	
  6698                           ; 1 bytes @ 0x5
  6699                           
  6700  0075                     SPI1_Open@spi1UniqueConfiguration:	
  6701                           ; 1 bytes @ 0x5
  6702                           
  6703  0075                     SPI1_WriteBlock@data:	
  6704                           ; 1 bytes @ 0x5
  6705                           
  6706  0075                     ___lwdiv@quotient:	
  6707                           ; 2 bytes @ 0x5
  6708                           
  6709  0075                     Sleep@i:	
  6710                           ; 2 bytes @ 0x5
  6711                           
  6712                           
  6713                           ; 4 bytes @ 0x5
  6714  0075                     	ds	1
  6715  0076                     dwt_generatecrc8@data:	
  6716  0076                     SPI1_ReadBlock@data:	
  6717                           ; 1 bytes @ 0x6
  6718                           
  6719                           
  6720                           ; 2 bytes @ 0x6
  6721  0076                     	ds	1
  6722  0077                     ??_writetospiwithcrc:	
  6723  0077                     ??_writetospi:	
  6724                           ; 1 bytes @ 0x7
  6725                           
  6726  0077                     ___lwdiv@counter:	
  6727                           ; 1 bytes @ 0x7
  6728                           
  6729  0077                     dwt_generatecrc8@byte:	
  6730                           ; 1 bytes @ 0x7
  6731                           
  6732                           
  6733                           ; 2 bytes @ 0x7
  6734  0077                     	ds	1
  6735  0078                     ??_readfromspi:	
  6736  0078                     ??___lmul:	
  6737                           ; 1 bytes @ 0x8
  6738                           
  6739  0078                     ?___lwmod:	
  6740                           ; 1 bytes @ 0x8
  6741                           
  6742  0078                     ?___lltoft:	
  6743                           ; 2 bytes @ 0x8
  6744                           
  6745  0078                     ___lwmod@divisor:	
  6746                           ; 3 bytes @ 0x8
  6747                           
  6748  0078                     ___lmul@product:	
  6749                           ; 2 bytes @ 0x8
  6750                           
  6751  0078                     ___lltoft@c:	
  6752                           ; 4 bytes @ 0x8
  6753                           
  6754                           
  6755                           ; 4 bytes @ 0x8
  6756  0078                     	ds	1
  6757  0079                     ??_reset_DWIC:	
  6758                           
  6759                           ; 1 bytes @ 0x9
  6760  0079                     	ds	1
  6761  007A                     ___lwmod@dividend:	
  6762                           
  6763                           ; 2 bytes @ 0xA
  6764  007A                     	ds	2
  6765  007C                     ??___lltoft:	
  6766  007C                     ??___lwmod:	
  6767                           ; 1 bytes @ 0xC
  6768                           
  6769                           
  6770                           ; 1 bytes @ 0xC
  6771  007C                     	ds	1
  6772  007D                     ___lltoft@exp:	
  6773  007D                     ___lwmod@counter:	
  6774                           ; 1 bytes @ 0xD
  6775                           
  6776                           
  6777                           ; 1 bytes @ 0xD
  6778  007D                     	ds	1
  6779  007E                     ??__fassert:	
  6780  007E                     ??_dwt_check_dev_id:	
  6781                           ; 1 bytes @ 0xE
  6782                           
  6783  007E                     ??__dwt_otpread:	
  6784                           ; 1 bytes @ 0xE
  6785                           
  6786  007E                     ??_dwt_force_clocks:	
  6787                           ; 1 bytes @ 0xE
  6788                           
  6789  007E                     ??_dwt_pgf_cal:	
  6790                           ; 1 bytes @ 0xE
  6791                           
  6792  007E                     ??_dwt_writetodevice:	
  6793                           ; 1 bytes @ 0xE
  6794                           
  6795  007E                     ??_dwt_readfromdevice:	
  6796                           ; 1 bytes @ 0xE
  6797                           
  6798  007E                     ??_dwt_read8bitoffsetreg:	
  6799                           ; 1 bytes @ 0xE
  6800                           
  6801  007E                     ??_dwt_write8bitoffsetreg:	
  6802                           ; 1 bytes @ 0xE
  6803                           
  6804  007E                     ??__dwt_kick_dgc_on_wakeup:	
  6805                           ; 1 bytes @ 0xE
  6806                           
  6807  007E                     ??_dwt_readdevid:	
  6808                           ; 1 bytes @ 0xE
  6809                           
  6810  007E                     ??_dwt_configmrxlut:	
  6811                           ; 1 bytes @ 0xE
  6812                           
  6813  007E                     ??_dwt_setrxantennadelay:	
  6814                           ; 1 bytes @ 0xE
  6815                           
  6816  007E                     ??_dwt_settxantennadelay:	
  6817                           ; 1 bytes @ 0xE
  6818                           
  6819  007E                     ??_dwt_disable_rf_tx:	
  6820                           ; 1 bytes @ 0xE
  6821                           
  6822  007E                     ??_dwt_enable_rf_tx:	
  6823                           ; 1 bytes @ 0xE
  6824                           
  6825  007E                     ??_dwt_enable_rftx_blocks:	
  6826                           ; 1 bytes @ 0xE
  6827                           
  6828  007E                     ??_dwt_disable_rftx_blocks:	
  6829                           ; 1 bytes @ 0xE
  6830                           
  6831                           
  6832                           	psect	cstackBANK0
  6833  0020                     __pcstackBANK0:	
  6834                           ; 1 bytes @ 0xE
  6835                           
  6836  0020                     ?_writetospiwithcrc:	
  6837  0020                     ?_writetospi:	
  6838                           ; 2 bytes @ 0x0
  6839                           
  6840  0020                     ?_readfromspi:	
  6841                           ; 2 bytes @ 0x0
  6842                           
  6843  0020                     ?_get_sts_mnth:	
  6844                           ; 2 bytes @ 0x0
  6845                           
  6846  0020                     ?__doprnt:	
  6847                           ; 2 bytes @ 0x0
  6848                           
  6849  0020                     ?___ftmul:	
  6850                           ; 2 bytes @ 0x0
  6851                           
  6852  0020                     get_sts_mnth@cipher:	
  6853                           ; 3 bytes @ 0x0
  6854                           
  6855  0020                     writetospiwithcrc@headerLength:	
  6856                           ; 2 bytes @ 0x0
  6857                           
  6858  0020                     writetospi@headerLength:	
  6859                           ; 2 bytes @ 0x0
  6860                           
  6861  0020                     readfromspi@headerLength:	
  6862                           ; 2 bytes @ 0x0
  6863                           
  6864  0020                     __doprnt@f:	
  6865                           ; 2 bytes @ 0x0
  6866                           
  6867  0020                     ___ftmul@f1:	
  6868                           ; 2 bytes @ 0x0
  6869                           
  6870                           
  6871                           ; 3 bytes @ 0x0
  6872  0020                     	ds	2
  6873  0022                     get_sts_mnth@threshold:	
  6874  0022                     writetospiwithcrc@headerBuffer:	
  6875                           ; 1 bytes @ 0x2
  6876                           
  6877  0022                     writetospi@headerBuffer:	
  6878                           ; 1 bytes @ 0x2
  6879                           
  6880  0022                     readfromspi@headerBuffer:	
  6881                           ; 1 bytes @ 0x2
  6882                           
  6883  0022                     __doprnt@ap:	
  6884                           ; 1 bytes @ 0x2
  6885                           
  6886                           
  6887                           ; 1 bytes @ 0x2
  6888  0022                     	ds	1
  6889  0023                     ??__doprnt:	
  6890  0023                     get_sts_mnth@shift_val:	
  6891                           ; 1 bytes @ 0x3
  6892                           
  6893  0023                     ___ftmul@f2:	
  6894                           ; 1 bytes @ 0x3
  6895                           
  6896  0023                     writetospiwithcrc@bodyLength:	
  6897                           ; 3 bytes @ 0x3
  6898                           
  6899  0023                     writetospi@bodyLength:	
  6900                           ; 4 bytes @ 0x3
  6901                           
  6902  0023                     readfromspi@readlength:	
  6903                           ; 4 bytes @ 0x3
  6904                           
  6905                           
  6906                           ; 4 bytes @ 0x3
  6907  0023                     	ds	1
  6908  0024                     ??_get_sts_mnth:	
  6909                           
  6910                           ; 1 bytes @ 0x4
  6911  0024                     	ds	2
  6912  0026                     ??___ftmul:	
  6913                           
  6914                           ; 1 bytes @ 0x6
  6915  0026                     	ds	1
  6916  0027                     __doprnt@idx:	
  6917  0027                     writetospiwithcrc@bodyBuffer:	
  6918                           ; 1 bytes @ 0x7
  6919                           
  6920  0027                     writetospi@bodyBuffer:	
  6921                           ; 2 bytes @ 0x7
  6922                           
  6923  0027                     readfromspi@readBuffer:	
  6924                           ; 2 bytes @ 0x7
  6925                           
  6926                           
  6927                           ; 2 bytes @ 0x7
  6928  0027                     	ds	1
  6929  0028                     __doprnt@prec:	
  6930  0028                     get_sts_mnth@mod_val:	
  6931                           ; 1 bytes @ 0x8
  6932                           
  6933                           
  6934                           ; 2 bytes @ 0x8
  6935  0028                     	ds	1
  6936  0029                     writetospiwithcrc@crc8:	
  6937  0029                     __doprnt@len:	
  6938                           ; 1 bytes @ 0x9
  6939                           
  6940                           
  6941                           ; 2 bytes @ 0x9
  6942  0029                     	ds	1
  6943  002A                     ___ftmul@exp:	
  6944  002A                     get_sts_mnth@value:	
  6945                           ; 1 bytes @ 0xA
  6946                           
  6947                           
  6948                           ; 4 bytes @ 0xA
  6949  002A                     	ds	1
  6950  002B                     __doprnt@cp:	
  6951  002B                     ___ftmul@f3_as_product:	
  6952                           ; 2 bytes @ 0xB
  6953                           
  6954                           
  6955                           ; 3 bytes @ 0xB
  6956  002B                     	ds	2
  6957  002D                     __doprnt@val:	
  6958                           
  6959                           ; 2 bytes @ 0xD
  6960  002D                     	ds	1
  6961  002E                     ___ftmul@cntr:	
  6962                           
  6963                           ; 1 bytes @ 0xE
  6964  002E                     	ds	1
  6965  002F                     __doprnt@flag:	
  6966  002F                     ___ftmul@sign:	
  6967                           ; 1 bytes @ 0xF
  6968                           
  6969                           
  6970                           ; 1 bytes @ 0xF
  6971  002F                     	ds	1
  6972  0030                     ?___fttol:	
  6973  0030                     __doprnt@width:	
  6974                           ; 4 bytes @ 0x10
  6975                           
  6976  0030                     ___fttol@f1:	
  6977                           ; 2 bytes @ 0x10
  6978                           
  6979                           
  6980                           ; 3 bytes @ 0x10
  6981  0030                     	ds	2
  6982  0032                     __doprnt@c:	
  6983                           
  6984                           ; 1 bytes @ 0x12
  6985  0032                     	ds	1
  6986  0033                     __doprnt@pb:	
  6987                           
  6988                           ; 1 bytes @ 0x13
  6989  0033                     	ds	1
  6990  0034                     ??___fttol:	
  6991  0034                     ?_printf:	
  6992                           ; 1 bytes @ 0x14
  6993                           
  6994  0034                     printf@f:	
  6995                           ; 2 bytes @ 0x14
  6996                           
  6997                           
  6998                           ; 2 bytes @ 0x14
  6999  0034                     	ds	4
  7000  0038                     ___fttol@sign1:	
  7001                           
  7002                           ; 1 bytes @ 0x18
  7003  0038                     	ds	1
  7004  0039                     ___fttol@lval:	
  7005                           
  7006                           ; 4 bytes @ 0x19
  7007  0039                     	ds	3
  7008  003C                     ??_printf:	
  7009                           
  7010                           ; 1 bytes @ 0x1C
  7011  003C                     	ds	1
  7012  003D                     ___fttol@exp1:	
  7013  003D                     printf@ap:	
  7014                           ; 1 bytes @ 0x1D
  7015                           
  7016                           
  7017                           ; 1 bytes @ 0x1D
  7018  003D                     	ds	1
  7019  003E                     printf@pb:	
  7020                           
  7021                           ; 3 bytes @ 0x1E
  7022  003E                     	ds	3
  7023  0041                     ?__fassert:	
  7024  0041                     __fassert@line:	
  7025                           ; 1 bytes @ 0x21
  7026                           
  7027                           
  7028                           ; 2 bytes @ 0x21
  7029  0041                     	ds	2
  7030  0043                     __fassert@file:	
  7031                           
  7032                           ; 2 bytes @ 0x23
  7033  0043                     	ds	2
  7034  0045                     __fassert@exp:	
  7035                           
  7036                           ; 2 bytes @ 0x25
  7037  0045                     	ds	2
  7038  0047                     ?_dwt_xfer3000:	
  7039  0047                     dwt_xfer3000@regFileID:	
  7040                           ; 1 bytes @ 0x27
  7041                           
  7042                           
  7043                           ; 4 bytes @ 0x27
  7044  0047                     	ds	4
  7045  004B                     dwt_xfer3000@indx:	
  7046                           
  7047                           ; 2 bytes @ 0x2B
  7048  004B                     	ds	2
  7049  004D                     dwt_xfer3000@length:	
  7050                           
  7051                           ; 4 bytes @ 0x2D
  7052  004D                     	ds	4
  7053  0051                     dwt_xfer3000@buffer:	
  7054                           
  7055                           ; 2 bytes @ 0x31
  7056  0051                     	ds	2
  7057  0053                     dwt_xfer3000@mode:	
  7058                           
  7059                           ; 2 bytes @ 0x33
  7060  0053                     	ds	2
  7061  0055                     ??_dwt_xfer3000:	
  7062                           
  7063                           ; 1 bytes @ 0x35
  7064  0055                     	ds	8
  7065  005D                     dwt_xfer3000@reg_file:	
  7066                           
  7067                           ; 2 bytes @ 0x3D
  7068  005D                     	ds	2
  7069  005F                     dwt_xfer3000@addr:	
  7070                           
  7071                           ; 2 bytes @ 0x3F
  7072  005F                     	ds	2
  7073  0061                     dwt_xfer3000@crc8:	
  7074                           
  7075                           ; 1 bytes @ 0x41
  7076  0061                     	ds	1
  7077  0062                     dwt_xfer3000@reg_offset:	
  7078                           
  7079                           ; 2 bytes @ 0x42
  7080  0062                     	ds	2
  7081  0064                     dwt_xfer3000@header:	
  7082                           
  7083                           ; 2 bytes @ 0x44
  7084  0064                     	ds	2
  7085  0066                     dwt_xfer3000@cnt:	
  7086                           
  7087                           ; 2 bytes @ 0x46
  7088  0066                     	ds	2
  7089  0068                     ??_dwt_setplenfine:	
  7090  0068                     ?_dwt_read8bitoffsetreg:	
  7091                           ; 1 bytes @ 0x48
  7092                           
  7093  0068                     ??_dwt_write32bitoffsetreg:	
  7094                           ; 1 bytes @ 0x48
  7095                           
  7096  0068                     ??_dwt_write16bitoffsetreg:	
  7097                           ; 1 bytes @ 0x48
  7098                           
  7099  0068                     ??_dwt_modify32bitoffsetreg:	
  7100                           ; 1 bytes @ 0x48
  7101                           
  7102  0068                     ??_dwt_modify16bitoffsetreg:	
  7103                           ; 1 bytes @ 0x48
  7104                           
  7105  0068                     ??_dwt_modify8bitoffsetreg:	
  7106                           ; 1 bytes @ 0x48
  7107                           
  7108  0068                     ?_dwt_read16bitoffsetreg:	
  7109                           ; 1 bytes @ 0x48
  7110                           
  7111  0068                     ?_dwt_read32bitoffsetreg:	
  7112                           ; 2 bytes @ 0x48
  7113                           
  7114  0068                     dwt_read32bitoffsetreg@regFileID:	
  7115                           ; 4 bytes @ 0x48
  7116                           
  7117  0068                     dwt_read16bitoffsetreg@regFileID:	
  7118                           ; 4 bytes @ 0x48
  7119                           
  7120  0068                     dwt_read8bitoffsetreg@regFileID:	
  7121                           ; 4 bytes @ 0x48
  7122                           
  7123                           
  7124                           ; 4 bytes @ 0x48
  7125  0068                     	ds	1
  7126  0069                     dwt_setplenfine@preambleLength:	
  7127  0069                     dwt_write16bitoffsetreg@buffer:	
  7128                           ; 1 bytes @ 0x49
  7129                           
  7130  0069                     dwt_modify8bitoffsetreg@buf:	
  7131                           ; 2 bytes @ 0x49
  7132                           
  7133  0069                     dwt_write32bitoffsetreg@buffer:	
  7134                           ; 2 bytes @ 0x49
  7135                           
  7136  0069                     dwt_modify16bitoffsetreg@buf:	
  7137                           ; 4 bytes @ 0x49
  7138                           
  7139                           
  7140                           ; 4 bytes @ 0x49
  7141  0069                     	ds	2
  7142  006B                     ?_dwt_force_clocks:	
  7143  006B                     ?_dwt_setrxantennadelay:	
  7144                           ; 1 bytes @ 0x4B
  7145                           
  7146  006B                     ?_dwt_settxantennadelay:	
  7147                           ; 1 bytes @ 0x4B
  7148                           
  7149  006B                     dwt_setrxantennadelay@rxDelay:	
  7150                           ; 1 bytes @ 0x4B
  7151                           
  7152  006B                     dwt_settxantennadelay@txDelay:	
  7153                           ; 2 bytes @ 0x4B
  7154                           
  7155  006B                     dwt_force_clocks@clocks:	
  7156                           ; 2 bytes @ 0x4B
  7157                           
  7158                           
  7159                           ; 2 bytes @ 0x4B
  7160  006B                     	ds	1
  7161  006C                     dwt_read32bitoffsetreg@regOffset:	
  7162  006C                     dwt_read16bitoffsetreg@regOffset:	
  7163                           ; 4 bytes @ 0x4C
  7164                           
  7165  006C                     dwt_read8bitoffsetreg@regOffset:	
  7166                           ; 4 bytes @ 0x4C
  7167                           
  7168                           
  7169                           ; 4 bytes @ 0x4C
  7170  006C                     	ds	1
  7171  006D                     ??__dwt_prog_ldo_and_bias_tune:	
  7172  006D                     __dwt_kick_dgc_on_wakeup@channel:	
  7173                           ; 1 bytes @ 0x4D
  7174                           
  7175  006D                     dwt_write32bitoffsetreg@j:	
  7176                           ; 1 bytes @ 0x4D
  7177                           
  7178  006D                     dwt_force_clocks@regvalue0:	
  7179                           ; 2 bytes @ 0x4D
  7180                           
  7181                           
  7182                           ; 2 bytes @ 0x4D
  7183  006D                     	ds	2
  7184  006F                     dwt_disable_rf_tx@switch_config:	
  7185                           
  7186                           ; 1 bytes @ 0x4F
  7187  006F                     	ds	1
  7188                           
  7189                           	psect	maintext
  7190  1AED                     __pmaintext:	
  7191 ;;
  7192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7193 ;;
  7194 ;; *************** function _main *****************
  7195 ;; Defined at:
  7196 ;;		line 61 in file "main.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;		None
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : B3F/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7212 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7213 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7214 ;;Total ram usage:        2 bytes
  7215 ;; Hardware stack levels required when called:   12
  7216 ;; This function calls:
  7217 ;;		_SPI1_Open
  7218 ;;		_SPI1_WriteByte
  7219 ;;		_SYSTEM_Initialize
  7220 ;;		_dw_main
  7221 ;;		_printf_string
  7222 ;; This function is called by:
  7223 ;;		Startup code after reset
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function _main
  7229  1AED                     _main:	
  7230                           
  7231                           ;main.c: 65: SYSTEM_Initialize();
  7232                           
  7233                           ;incstack = 0
  7234                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7235  1AED  31A5  2510  319A   	fcall	_SYSTEM_Initialize
  7236                           
  7237                           ;main.c: 75: do { ODCONAbits.ODCA6 = 0; } while(0);
  7238  1AF0  017E               	movlb	62	; select bank62
  7239  1AF1  133A               	bcf	58,6	;volatile
  7240                           
  7241                           ;main.c: 76: do { LATAbits.LATA6 = 0; } while(0);
  7242  1AF2  0140               	movlb	0	; select bank0
  7243  1AF3  1316               	bcf	22,6	;volatile
  7244                           
  7245                           ;main.c: 77: do { ODCONAbits.ODCA7 = 0; } while(0);
  7246  1AF4  017E               	movlb	62	; select bank62
  7247  1AF5  13BA               	bcf	58,7	;volatile
  7248                           
  7249                           ;main.c: 78: do { LATAbits.LATA7 = 1; } while(0);
  7250  1AF6  0140               	movlb	0	; select bank0
  7251  1AF7  1796               	bsf	22,7	;volatile
  7252                           
  7253                           ;main.c: 79: do { ODCONBbits.ODCB4 = 1; } while(0);
  7254  1AF8  017E               	movlb	62	; select bank62
  7255  1AF9  1645               	bsf	69,4	;volatile
  7256                           
  7257                           ;main.c: 80: do { LATBbits.LATB4 = 1; } while(0);
  7258  1AFA  0140               	movlb	0	; select bank0
  7259  1AFB  1617               	bsf	23,4	;volatile
  7260                           
  7261                           ;main.c: 81: SPI1_Open(0);
  7262  1AFC  3000               	movlw	0
  7263  1AFD  319C  247D  319A   	fcall	_SPI1_Open
  7264                           
  7265                           ;main.c: 82: _delay((unsigned long)((200)*(32000000/4000.0)));
  7266  1B00  3009               	movlw	9
  7267  1B01  0141               	movlb	1	; select bank1
  7268  1B02  00ED               	movwf	(??_main^(0+128)+1)
  7269  1B03  301E               	movlw	30
  7270  1B04  00EC               	movwf	??_main^(0+128)
  7271  1B05  30E4               	movlw	228
  7272  1B06                     u7717:	
  7273  1B06  0B89               	decfsz	9,f
  7274  1B07  2B06               	goto	u7717
  7275  1B08  0BEC               	decfsz	??_main^(0+128),f
  7276  1B09  2B06               	goto	u7717
  7277  1B0A  0BED               	decfsz	(??_main^(0+128)+1),f
  7278  1B0B  2B06               	goto	u7717
  7279  1B0C  0000               	nop
  7280                           
  7281                           ;main.c: 104: dw_main();
  7282  1B0D  3190  20DE  319A   	fcall	_dw_main
  7283  1B10                     l337:	
  7284                           ;main.c: 105: while(1);
  7285                           
  7286  1B10  2B10               	goto	l337
  7287                           
  7288                           ;main.c: 134: _delay((unsigned long)((200)*(32000000/4000.0)));
  7289                           
  7290                           ;main.c: 133: SPI1_Open(0);
  7291  1B11  3009               	movlw	9
  7292  1B12  0141               	movlb	1	; select bank1
  7293  1B13  00ED               	movwf	(??_main^(0+128)+1)
  7294  1B14  301E               	movlw	30
  7295  1B15  00EC               	movwf	??_main^(0+128)
  7296  1B16  30E4               	movlw	228
  7297  1B17                     u7727:	
  7298  1B17  0B89               	decfsz	9,f
  7299  1B18  2B17               	goto	u7727
  7300  1B19  0BEC               	decfsz	??_main^(0+128),f
  7301  1B1A  2B17               	goto	u7727
  7302  1B1B  0BED               	decfsz	(??_main^(0+128)+1),f
  7303  1B1C  2B17               	goto	u7727
  7304  1B1D  0000               	nop
  7305  1B1E                     l6151:	
  7306                           ;main.c: 135: while (1)
  7307                           
  7308                           
  7309                           ;main.c: 136: {
  7310                           ;main.c: 142: _delay((unsigned long)((1000)*(32000000/4000.0)));
  7311  1B1E  3029               	movlw	41
  7312  1B1F  0141               	movlb	1	; select bank1
  7313  1B20  00ED               	movwf	(??_main^(0+128)+1)
  7314  1B21  3096               	movlw	150
  7315  1B22  00EC               	movwf	??_main^(0+128)
  7316  1B23  307F               	movlw	127
  7317  1B24                     u7737:	
  7318  1B24  0B89               	decfsz	9,f
  7319  1B25  2B24               	goto	u7737
  7320  1B26  0BEC               	decfsz	??_main^(0+128),f
  7321  1B27  2B24               	goto	u7737
  7322  1B28  0BED               	decfsz	(??_main^(0+128)+1),f
  7323  1B29  2B24               	goto	u7737
  7324                           
  7325                           ;main.c: 145: SPI1_WriteByte(0xAA);
  7326  1B2A  30AA               	movlw	170
  7327  1B2B  3198  209B  319A   	fcall	_SPI1_WriteByte
  7328                           
  7329                           ;main.c: 149: printf_string("\n\rProgram running...");
  7330  1B2E  305D               	movlw	low (STR_1| (0+32768))
  7331  1B2F  00F1               	movwf	printf_string@data
  7332  1B30  30A8               	movlw	high (STR_1| (0+32768))
  7333  1B31  00F2               	movwf	printf_string@data+1
  7334  1B32  31A5  252E  319A   	fcall	_printf_string
  7335  1B35  2B1E               	goto	l6151
  7336  1B36                     __end_of_main:	
  7337                           
  7338                           	psect	text1
  7339  10DE                     __ptext1:	
  7340 ;; *************** function _dw_main *****************
  7341 ;; Defined at:
  7342 ;;		line 86 in file "decawave.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  data           50    0        unsigned char [50]
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7358 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7359 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7360 ;;Total ram usage:        1 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:   11
  7363 ;; This function calls:
  7364 ;;		_Sleep
  7365 ;;		_dwt_configure
  7366 ;;		_dwt_configuretxrf
  7367 ;;		_dwt_initialise
  7368 ;;		_dwt_setrxantennadelay
  7369 ;;		_dwt_settxantennadelay
  7370 ;;		_dwt_starttx
  7371 ;;		_dwt_writetxdata
  7372 ;;		_dwt_writetxfctrl
  7373 ;;		_printf_string
  7374 ;;		_reset_DWIC
  7375 ;; This function is called by:
  7376 ;;		_main
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _dw_main
  7382  10DE                     _dw_main:	
  7383                           
  7384                           ;decawave.c: 88: char data[50];
  7385                           ;decawave.c: 89: printf_string("\n\rdw_main");
  7386                           
  7387                           ;incstack = 0
  7388                           ; Regs used in _dw_main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7389  10DE  3026               	movlw	low (STR_19| (0+32768))
  7390  10DF  00F1               	movwf	printf_string@data
  7391  10E0  30A9               	movlw	high (STR_19| (0+32768))
  7392  10E1  00F2               	movwf	printf_string@data+1
  7393  10E2  31A5  252E  3190   	fcall	_printf_string
  7394                           
  7395                           ;decawave.c: 93: reset_DWIC();
  7396  10E5  31A5  2588  3190   	fcall	_reset_DWIC
  7397                           
  7398                           ;decawave.c: 96: if (dwt_initialise(0x0) == (-1))
  7399  10E8  3000               	movlw	0
  7400  10E9  0141               	movlb	1	; select bank1
  7401  10EA  00C5               	movwf	dwt_initialise@mode^(0+128)
  7402  10EB  00C6               	movwf	(dwt_initialise@mode+1)^(0+128)
  7403  10EC  318B  2300  3190   	fcall	_dwt_initialise
  7404  10EF  0141               	movlb	1	; select bank1
  7405  10F0  0A45               	incf	?_dwt_initialise^(0+128),w
  7406  10F1  1D03               	skipz
  7407  10F2  28FE               	goto	l5863
  7408  10F3  0A46               	incf	(?_dwt_initialise+1)^(0+128),w
  7409  10F4  1D03               	btfss	3,2
  7410  10F5  28FE               	goto	l5863
  7411                           
  7412                           ;decawave.c: 97: {
  7413                           ;decawave.c: 98: printf_string("\n\rDWM_ERROR");
  7414  10F6  3010               	movlw	low (STR_20| (0+32768))
  7415  10F7  00F1               	movwf	printf_string@data
  7416  10F8  30A9               	movlw	high (STR_20| (0+32768))
  7417  10F9  00F2               	movwf	printf_string@data+1
  7418  10FA  31A5  252E  3190   	fcall	_printf_string
  7419  10FD                     l1371:	
  7420                           ;decawave.c: 99: while (1)
  7421                           
  7422                           
  7423                           ;decawave.c: 100: { };
  7424  10FD  28FD               	goto	l1371
  7425  10FE                     l5863:	
  7426                           
  7427                           ;decawave.c: 101: }
  7428                           ;decawave.c: 102: if(dwt_configure(&config) < 0)
  7429  10FE  30D5               	movlw	(low (_config| (0+256)))& (0+255)
  7430  10FF  3181  2110  3190   	fcall	_dwt_configure
  7431  1102  0141               	movlb	1	; select bank1
  7432  1103  1FD7               	btfss	(?_dwt_configure+1)^(0+128),7
  7433  1104  2909               	goto	l5867
  7434                           
  7435                           ;decawave.c: 103: printf_string("\n\rCONFIG_ERROR");
  7436  1105  30C8               	movlw	low (STR_21| (0+32768))
  7437  1106  00F1               	movwf	printf_string@data
  7438  1107  30A8               	movlw	high (STR_21| (0+32768))
  7439  1108  290C               	goto	L1
  7440  1109                     l5867:	
  7441                           
  7442                           ;decawave.c: 104: else
  7443                           ;decawave.c: 105: printf_string("\n\rCONFIG_SUCCESS");
  7444  1109  3096               	movlw	low (STR_22| (0+32768))
  7445  110A  00F1               	movwf	printf_string@data
  7446  110B  30A8               	movlw	high (STR_22| (0+32768))
  7447  110C                     L1:	
  7448  110C  00F2               	movwf	printf_string@data+1
  7449  110D  31A5  252E  3190   	fcall	_printf_string
  7450                           
  7451                           ;decawave.c: 107: dwt_configuretxrf(&txconfig_options_ch9);
  7452  1110  3067               	movlw	(low (_txconfig_options_ch9| (0+256)))& (0+255)
  7453  1111  319E  268B  3190   	fcall	_dwt_configuretxrf
  7454                           
  7455                           ;decawave.c: 118: dwt_setrxantennadelay(16385);
  7456  1114  3001               	movlw	1
  7457  1115  0140               	movlb	0	; select bank0
  7458  1116  00EB               	movwf	dwt_setrxantennadelay@rxDelay
  7459  1117  3040               	movlw	64
  7460  1118  00EC               	movwf	dwt_setrxantennadelay@rxDelay+1
  7461  1119  31A6  2647  3190   	fcall	_dwt_setrxantennadelay
  7462                           
  7463                           ;decawave.c: 119: dwt_settxantennadelay(16385);
  7464  111C  3001               	movlw	1
  7465  111D  0140               	movlb	0	; select bank0
  7466  111E  00EB               	movwf	dwt_settxantennadelay@txDelay
  7467  111F  3040               	movlw	64
  7468  1120  00EC               	movwf	dwt_settxantennadelay@txDelay+1
  7469  1121  31A6  2663  3190   	fcall	_dwt_settxantennadelay
  7470                           
  7471                           ;decawave.c: 120: __builtin_memcpy(&tx_blink_msg[5],&ADDR,8);
  7472  1124  305F               	movlw	low (_ADDR| (0+256))
  7473  1125  0084               	movwf	4
  7474  1126  3001               	movlw	1	; select bank2/3
  7475  1127  0085               	movwf	5
  7476  1128  3008               	movlw	8
  7477  1129  0141               	movlb	1	; select bank1
  7478  112A  00EB               	movwf	??_dw_main^(0+128)
  7479  112B  086B               	movf	??_dw_main^(0+128),w
  7480  112C  1903               	skipnz
  7481  112D  2938               	goto	l5877
  7482  112E  3005               	movlw	5
  7483  112F  3E20               	addlw	(low (_tx_blink_msg| (0+512)))& (0+255)
  7484  1130  0086               	movwf	6
  7485  1131  3002               	movlw	2	; select bank4/5
  7486  1132  0087               	movwf	7
  7487  1133                     u605m0:	
  7488  1133  0012               	moviw fsr0++
  7489  1134  001E               	movwi fsr1++
  7490  1135  0141               	movlb	1	; select bank1
  7491  1136  0BEB               	decfsz	??_dw_main^(0+128),f
  7492  1137  2933               	goto	u605m0
  7493  1138                     l5877:	
  7494                           
  7495                           ;decawave.c: 122: printf_string("\n\rDWM_OK");
  7496  1138  3044               	movlw	low (STR_23| (0+32768))
  7497  1139  00F1               	movwf	printf_string@data
  7498  113A  30A9               	movlw	high (STR_23| (0+32768))
  7499  113B  00F2               	movwf	printf_string@data+1
  7500  113C  31A5  252E  3190   	fcall	_printf_string
  7501  113F                     l5879:	
  7502                           ;decawave.c: 123: while (1)
  7503                           
  7504                           
  7505                           ;decawave.c: 124: {
  7506                           ;decawave.c: 127: Sleep(100);
  7507  113F  3000               	movlw	0
  7508  1140  00F3               	movwf	Sleep@time+3
  7509  1141  3000               	movlw	0
  7510  1142  00F2               	movwf	Sleep@time+2
  7511  1143  3000               	movlw	0
  7512  1144  00F1               	movwf	Sleep@time+1
  7513  1145  3064               	movlw	100
  7514  1146  00F0               	movwf	Sleep@time
  7515  1147  31A7  2753  3190   	fcall	_Sleep
  7516                           
  7517                           ;decawave.c: 133: tx_blink_msg[2]++;
  7518  114A  3001               	movlw	1
  7519  114B  0141               	movlb	1	; select bank1
  7520  114C  00EB               	movwf	??_dw_main^(0+128)
  7521  114D  086B               	movf	??_dw_main^(0+128),w
  7522  114E  0144               	movlb	4	; select bank4
  7523  114F  07A2               	addwf	(_tx_blink_msg^(0+512)+2),f
  7524                           
  7525                           ;decawave.c: 134: dwt_writetxdata(sizeof(tx_blink_msg), tx_blink_msg, 0);
  7526  1150  3024               	movlw	36
  7527  1151  0141               	movlb	1	; select bank1
  7528  1152  00B8               	movwf	dwt_writetxdata@txDataLength^(0+128)
  7529  1153  3000               	movlw	0
  7530  1154  00B9               	movwf	(dwt_writetxdata@txDataLength^(0+128)+1)
  7531  1155  3020               	movlw	(low (_tx_blink_msg| (0+512)))& (0+255)
  7532  1156  00EB               	movwf	??_dw_main^(0+128)
  7533  1157  086B               	movf	??_dw_main^(0+128),w
  7534  1158  00BA               	movwf	dwt_writetxdata@txDataBytes^(0+128)
  7535  1159  3000               	movlw	0
  7536  115A  00BB               	movwf	dwt_writetxdata@txBufferOffset^(0+128)
  7537  115B  00BC               	movwf	(dwt_writetxdata@txBufferOffset+1)^(0+128)
  7538  115C  319F  2783  3190   	fcall	_dwt_writetxdata
  7539                           
  7540                           ;decawave.c: 135: dwt_writetxfctrl(sizeof(tx_blink_msg), 0, 0);
  7541  115F  3024               	movlw	36
  7542  1160  0141               	movlb	1	; select bank1
  7543  1161  00B8               	movwf	dwt_writetxfctrl@txFrameLength^(0+128)
  7544  1162  3000               	movlw	0
  7545  1163  00B9               	movwf	(dwt_writetxfctrl@txFrameLength^(0+128)+1)
  7546  1164  3000               	movlw	0
  7547  1165  00BA               	movwf	dwt_writetxfctrl@txBufferOffset^(0+128)
  7548  1166  00BB               	movwf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128)
  7549  1167  01BC               	clrf	dwt_writetxfctrl@ranging^(0+128)
  7550  1168  3194  2441  3190   	fcall	_dwt_writetxfctrl
  7551                           
  7552                           ;decawave.c: 136: dwt_starttx(0x00);
  7553  116B  3000               	movlw	0
  7554  116C  3195  251D  3190   	fcall	_dwt_starttx
  7555  116F  293F               	goto	l5879
  7556  1170                     __end_of_dw_main:	
  7557                           
  7558                           	psect	text2
  7559  2588                     __ptext2:	
  7560 ;; *************** function _reset_DWIC *****************
  7561 ;; Defined at:
  7562 ;;		line 129 in file "port.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;		None
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;		None
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0, pclath, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7580 ;;Total ram usage:        0 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    1
  7583 ;; This function calls:
  7584 ;;		_Sleep
  7585 ;; This function is called by:
  7586 ;;		_dw_main
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           
  7591                           ;psect for function _reset_DWIC
  7592  2588                     _reset_DWIC:	
  7593                           
  7594                           ;incstack = 0
  7595                           ; Regs used in _reset_DWIC: [wreg+status,2+status,0+pclath+cstack]
  7596                           ;port.c: 131: do { LATBbits.LATB4 = 0; } while(0);
  7597  2588  0140               	movlb	0	; select bank0
  7598  2589  1217               	bcf	23,4	;volatile
  7599                           
  7600                           ;port.c: 132: Sleep(1);
  7601  258A  3000               	movlw	0
  7602  258B  00F3               	movwf	Sleep@time+3
  7603  258C  3000               	movlw	0
  7604  258D  00F2               	movwf	Sleep@time+2
  7605  258E  3000               	movlw	0
  7606  258F  00F1               	movwf	Sleep@time+1
  7607  2590  3001               	movlw	1
  7608  2591  00F0               	movwf	Sleep@time
  7609  2592  31A7  2753  31A5   	fcall	_Sleep
  7610                           
  7611                           ;port.c: 133: do { LATBbits.LATB4 = 1; } while(0);
  7612  2595  0140               	movlb	0	; select bank0
  7613  2596  1617               	bsf	23,4	;volatile
  7614                           
  7615                           ;port.c: 134: Sleep(2);
  7616  2597  3000               	movlw	0
  7617  2598  00F3               	movwf	Sleep@time+3
  7618  2599  3000               	movlw	0
  7619  259A  00F2               	movwf	Sleep@time+2
  7620  259B  3000               	movlw	0
  7621  259C  00F1               	movwf	Sleep@time+1
  7622  259D  3002               	movlw	2
  7623  259E  00F0               	movwf	Sleep@time
  7624  259F  31A7  2753         	fcall	_Sleep
  7625  25A1  0008               	return
  7626  25A2                     __end_of_reset_DWIC:	
  7627                           
  7628                           	psect	text3
  7629  1441                     __ptext3:	
  7630 ;; *************** function _dwt_writetxfctrl *****************
  7631 ;; Defined at:
  7632 ;;		line 1775 in file "deca_device.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  txFrameLengt    2   24[BANK1 ] unsigned int 
  7635 ;;  txBufferOffs    2   26[BANK1 ] unsigned int 
  7636 ;;  ranging         1   28[BANK1 ] unsigned char 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  reg32           4   43[BANK1 ] unsigned long 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7648 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7649 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7650 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7651 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7652 ;;Total ram usage:       23 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    7
  7655 ;; This function calls:
  7656 ;;		_dwt_modify32bitoffsetreg
  7657 ;;		_dwt_read8bitoffsetreg
  7658 ;; This function is called by:
  7659 ;;		_dw_main
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           
  7664                           ;psect for function _dwt_writetxfctrl
  7665  1441                     _dwt_writetxfctrl:	
  7666                           
  7667                           ;deca_device.c: 1777: uint32_t reg32;
  7668                           ;deca_device.c: 1785: if(txBufferOffset <= 127)
  7669                           
  7670                           ;incstack = 0
  7671                           ; Regs used in _dwt_writetxfctrl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7672  1441  3000               	movlw	0
  7673  1442  0141               	movlb	1	; select bank1
  7674  1443  023B               	subwf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
  7675  1444  3080               	movlw	128
  7676  1445  1903               	skipnz
  7677  1446  023A               	subwf	dwt_writetxfctrl@txBufferOffset^(0+128),w
  7678  1447  1803               	skipnc
  7679  1448  2C9F               	goto	l5781
  7680                           
  7681                           ;deca_device.c: 1786: {
  7682                           ;deca_device.c: 1788: reg32 = txFrameLength | ((uint32_t)(txBufferOffset) << (16U)) | ((
      +                          uint32_t)ranging << (11U));
  7683  1449  083C               	movf	dwt_writetxfctrl@ranging^(0+128),w
  7684  144A  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
  7685  144B  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
  7686  144C  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
  7687  144D  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
  7688  144E  300B               	movlw	11
  7689  144F                     u5835:	
  7690  144F  35BD               	lslf	??_dwt_writetxfctrl^(0+128),f
  7691  1450  0DBE               	rlf	(??_dwt_writetxfctrl^(0+128)+1),f
  7692  1451  0DBF               	rlf	(??_dwt_writetxfctrl^(0+128)+2),f
  7693  1452  0DC0               	rlf	(??_dwt_writetxfctrl^(0+128)+3),f
  7694  1453  0B89               	decfsz	9,f
  7695  1454  2C4F               	goto	u5835
  7696  1455  083A               	movf	dwt_writetxfctrl@txBufferOffset^(0+128),w
  7697  1456  00C1               	movwf	(??_dwt_writetxfctrl+4)^(0+128)
  7698  1457  083B               	movf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
  7699  1458  00C2               	movwf	((??_dwt_writetxfctrl+4)^(0+128)+1)
  7700  1459  01C3               	clrf	((??_dwt_writetxfctrl+4)^(0+128)+2)
  7701  145A  01C4               	clrf	((??_dwt_writetxfctrl+4)^(0+128)+3)
  7702  145B  3010               	movlw	16
  7703  145C                     u5845:	
  7704  145C  35C1               	lslf	(??_dwt_writetxfctrl+4)^(0+128),f
  7705  145D  0DC2               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+1),f
  7706  145E  0DC3               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+2),f
  7707  145F  0DC4               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+3),f
  7708  1460  0B89               	decfsz	9,f
  7709  1461  2C5C               	goto	u5845
  7710  1462  0838               	movf	dwt_writetxfctrl@txFrameLength^(0+128),w
  7711  1463  00C5               	movwf	(??_dwt_writetxfctrl+8)^(0+128)
  7712  1464  0839               	movf	(dwt_writetxfctrl@txFrameLength+1)^(0+128),w
  7713  1465  00C6               	movwf	((??_dwt_writetxfctrl+8)^(0+128)+1)
  7714  1466  01C7               	clrf	((??_dwt_writetxfctrl+8)^(0+128)+2)
  7715  1467  01C8               	clrf	((??_dwt_writetxfctrl+8)^(0+128)+3)
  7716  1468  0845               	movf	(??_dwt_writetxfctrl+8)^(0+128),w
  7717  1469  04C1               	iorwf	(??_dwt_writetxfctrl+4)^(0+128),f
  7718  146A  0846               	movf	(??_dwt_writetxfctrl+9)^(0+128),w
  7719  146B  04C2               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+1),f
  7720  146C  0847               	movf	(??_dwt_writetxfctrl+10)^(0+128),w
  7721  146D  04C3               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+2),f
  7722  146E  0848               	movf	(??_dwt_writetxfctrl+11)^(0+128),w
  7723  146F  04C4               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+3),f
  7724  1470  083D               	movf	??_dwt_writetxfctrl^(0+128),w
  7725  1471  0441               	iorwf	(??_dwt_writetxfctrl+4)^(0+128),w
  7726  1472  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
  7727  1473  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
  7728  1474  0442               	iorwf	(??_dwt_writetxfctrl+5)^(0+128),w
  7729  1475  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
  7730  1476  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
  7731  1477  0443               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),w
  7732  1478  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
  7733  1479  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
  7734  147A  0444               	iorwf	(??_dwt_writetxfctrl+7)^(0+128),w
  7735  147B  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
  7736                           
  7737                           ;deca_device.c: 1789: dwt_modify32bitoffsetreg(0x24, 0, ~(0x3ff0000UL | 0x800U | 0x3ffU)
      +                          , reg32);
  7738  147C  3000               	movlw	0
  7739  147D  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
  7740  147E  3000               	movlw	0
  7741  147F  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
  7742  1480  3000               	movlw	0
  7743  1481  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
  7744  1482  3024               	movlw	36
  7745  1483  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
  7746  1484  3000               	movlw	0
  7747  1485  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
  7748  1486  3000               	movlw	0
  7749  1487  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
  7750  1488  3000               	movlw	0
  7751  1489  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
  7752  148A  3000               	movlw	0
  7753  148B  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
  7754  148C  30FC               	movlw	252
  7755  148D  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
  7756  148E  3000               	movlw	0
  7757  148F  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
  7758  1490  30F4               	movlw	244
  7759  1491  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
  7760  1492  3000               	movlw	0
  7761  1493  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
  7762  1494  084E               	movf	(dwt_writetxfctrl@reg32+3)^(0+128),w
  7763  1495  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
  7764  1496  084D               	movf	(dwt_writetxfctrl@reg32+2)^(0+128),w
  7765  1497  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
  7766  1498  084C               	movf	(dwt_writetxfctrl@reg32+1)^(0+128),w
  7767  1499  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
  7768  149A  084B               	movf	dwt_writetxfctrl@reg32^(0+128),w
  7769  149B  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
  7770  149C  3193  2368         	fcall	_dwt_modify32bitoffsetreg
  7771                           
  7772                           ;deca_device.c: 1790: }
  7773  149E  0008               	return
  7774  149F                     l5781:	
  7775                           
  7776                           ;deca_device.c: 1791: else
  7777                           ;deca_device.c: 1792: {
  7778                           ;deca_device.c: 1794: reg32 = txFrameLength | ((uint32_t)(txBufferOffset + 128) << (16U)
      +                          ) | ((uint32_t)ranging << (11U));
  7779  149F  0141               	movlb	1	; select bank1
  7780  14A0  083C               	movf	dwt_writetxfctrl@ranging^(0+128),w
  7781  14A1  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
  7782  14A2  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
  7783  14A3  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
  7784  14A4  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
  7785  14A5  300B               	movlw	11
  7786  14A6                     u5855:	
  7787  14A6  35BD               	lslf	??_dwt_writetxfctrl^(0+128),f
  7788  14A7  0DBE               	rlf	(??_dwt_writetxfctrl^(0+128)+1),f
  7789  14A8  0DBF               	rlf	(??_dwt_writetxfctrl^(0+128)+2),f
  7790  14A9  0DC0               	rlf	(??_dwt_writetxfctrl^(0+128)+3),f
  7791  14AA  0B89               	decfsz	9,f
  7792  14AB  2CA6               	goto	u5855
  7793  14AC  083A               	movf	dwt_writetxfctrl@txBufferOffset^(0+128),w
  7794  14AD  3E80               	addlw	128
  7795  14AE  00C1               	movwf	(??_dwt_writetxfctrl+4)^(0+128)
  7796  14AF  3000               	movlw	0
  7797  14B0  3D3B               	addwfc	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
  7798  14B1  00C2               	movwf	(??_dwt_writetxfctrl+5)^(0+128)
  7799  14B2  0841               	movf	(??_dwt_writetxfctrl+4)^(0+128),w
  7800  14B3  00C3               	movwf	(??_dwt_writetxfctrl+6)^(0+128)
  7801  14B4  0842               	movf	(??_dwt_writetxfctrl+5)^(0+128),w
  7802  14B5  00C4               	movwf	((??_dwt_writetxfctrl+6)^(0+128)+1)
  7803  14B6  01C5               	clrf	((??_dwt_writetxfctrl+6)^(0+128)+2)
  7804  14B7  01C6               	clrf	((??_dwt_writetxfctrl+6)^(0+128)+3)
  7805  14B8  3010               	movlw	16
  7806  14B9                     u5865:	
  7807  14B9  35C3               	lslf	(??_dwt_writetxfctrl+6)^(0+128),f
  7808  14BA  0DC4               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+1),f
  7809  14BB  0DC5               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+2),f
  7810  14BC  0DC6               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+3),f
  7811  14BD  0B89               	decfsz	9,f
  7812  14BE  2CB9               	goto	u5865
  7813  14BF  0838               	movf	dwt_writetxfctrl@txFrameLength^(0+128),w
  7814  14C0  00C7               	movwf	(??_dwt_writetxfctrl+10)^(0+128)
  7815  14C1  0839               	movf	(dwt_writetxfctrl@txFrameLength+1)^(0+128),w
  7816  14C2  00C8               	movwf	((??_dwt_writetxfctrl+10)^(0+128)+1)
  7817  14C3  01C9               	clrf	((??_dwt_writetxfctrl+10)^(0+128)+2)
  7818  14C4  01CA               	clrf	((??_dwt_writetxfctrl+10)^(0+128)+3)
  7819  14C5  0847               	movf	(??_dwt_writetxfctrl+10)^(0+128),w
  7820  14C6  04C3               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),f
  7821  14C7  0848               	movf	(??_dwt_writetxfctrl+11)^(0+128),w
  7822  14C8  04C4               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+1),f
  7823  14C9  0849               	movf	(??_dwt_writetxfctrl+12)^(0+128),w
  7824  14CA  04C5               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+2),f
  7825  14CB  084A               	movf	(??_dwt_writetxfctrl+13)^(0+128),w
  7826  14CC  04C6               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+3),f
  7827  14CD  083D               	movf	??_dwt_writetxfctrl^(0+128),w
  7828  14CE  0443               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),w
  7829  14CF  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
  7830  14D0  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
  7831  14D1  0444               	iorwf	(??_dwt_writetxfctrl+7)^(0+128),w
  7832  14D2  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
  7833  14D3  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
  7834  14D4  0445               	iorwf	(??_dwt_writetxfctrl+8)^(0+128),w
  7835  14D5  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
  7836  14D6  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
  7837  14D7  0446               	iorwf	(??_dwt_writetxfctrl+9)^(0+128),w
  7838  14D8  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
  7839                           
  7840                           ;deca_device.c: 1795: dwt_modify32bitoffsetreg(0x24, 0, ~(0x3ff0000UL | 0x800U | 0x3ffU)
      +                          , reg32);
  7841  14D9  3000               	movlw	0
  7842  14DA  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
  7843  14DB  3000               	movlw	0
  7844  14DC  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
  7845  14DD  3000               	movlw	0
  7846  14DE  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
  7847  14DF  3024               	movlw	36
  7848  14E0  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
  7849  14E1  3000               	movlw	0
  7850  14E2  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
  7851  14E3  3000               	movlw	0
  7852  14E4  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
  7853  14E5  3000               	movlw	0
  7854  14E6  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
  7855  14E7  3000               	movlw	0
  7856  14E8  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
  7857  14E9  30FC               	movlw	252
  7858  14EA  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
  7859  14EB  3000               	movlw	0
  7860  14EC  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
  7861  14ED  30F4               	movlw	244
  7862  14EE  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
  7863  14EF  3000               	movlw	0
  7864  14F0  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
  7865  14F1  084E               	movf	(dwt_writetxfctrl@reg32+3)^(0+128),w
  7866  14F2  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
  7867  14F3  084D               	movf	(dwt_writetxfctrl@reg32+2)^(0+128),w
  7868  14F4  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
  7869  14F5  084C               	movf	(dwt_writetxfctrl@reg32+1)^(0+128),w
  7870  14F6  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
  7871  14F7  084B               	movf	dwt_writetxfctrl@reg32^(0+128),w
  7872  14F8  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
  7873  14F9  3193  2368  3194   	fcall	_dwt_modify32bitoffsetreg
  7874                           
  7875                           ;deca_device.c: 1796: reg32 = dwt_read8bitoffsetreg(0x80000, 0);
  7876  14FC  3000               	movlw	0
  7877  14FD  0140               	movlb	0	; select bank0
  7878  14FE  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
  7879  14FF  3008               	movlw	8
  7880  1500  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
  7881  1501  3000               	movlw	0
  7882  1502  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
  7883  1503  3000               	movlw	0
  7884  1504  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
  7885  1505  3000               	movlw	0
  7886  1506  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
  7887  1507  3000               	movlw	0
  7888  1508  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
  7889  1509  3000               	movlw	0
  7890  150A  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
  7891  150B  3000               	movlw	0
  7892  150C  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
  7893  150D  31A6  269C         	fcall	_dwt_read8bitoffsetreg
  7894  150F  0141               	movlb	1	; select bank1
  7895  1510  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
  7896  1511  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
  7897  1512  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
  7898  1513  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
  7899  1514  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
  7900  1515  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
  7901  1516  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
  7902  1517  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
  7903  1518  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
  7904  1519  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
  7905  151A  083D               	movf	??_dwt_writetxfctrl^(0+128),w
  7906  151B  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
  7907  151C  0008               	return
  7908  151D                     __end_of_dwt_writetxfctrl:	
  7909                           
  7910                           	psect	text4
  7911  1F83                     __ptext4:	
  7912 ;; *************** function _dwt_writetxdata *****************
  7913 ;; Defined at:
  7914 ;;		line 1730 in file "deca_device.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  txDataLength    2   24[BANK1 ] unsigned int 
  7917 ;;  txDataBytes     1   26[BANK1 ] PTR unsigned char 
  7918 ;;		 -> tx_blink_msg(36), 
  7919 ;;  txBufferOffs    2   27[BANK1 ] unsigned int 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  2   24[BANK1 ] int 
  7924 ;; Registers used:
  7925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7931 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7933 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7934 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7935 ;;Total ram usage:        7 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    8
  7938 ;; This function calls:
  7939 ;;		_dwt_write32bitoffsetreg
  7940 ;;		_dwt_writetodevice
  7941 ;; This function is called by:
  7942 ;;		_dw_main
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           
  7947                           ;psect for function _dwt_writetxdata
  7948  1F83                     _dwt_writetxdata:	
  7949                           
  7950                           ;deca_device.c: 1738: if ((txBufferOffset + txDataLength) < (1024))
  7951                           
  7952                           ;incstack = 0
  7953                           ; Regs used in _dwt_writetxdata: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7954  1F83  0141               	movlb	1	; select bank1
  7955  1F84  0838               	movf	dwt_writetxdata@txDataLength^(0+128),w
  7956  1F85  073B               	addwf	dwt_writetxdata@txBufferOffset^(0+128),w
  7957  1F86  00BD               	movwf	??_dwt_writetxdata^(0+128)
  7958  1F87  0839               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
  7959  1F88  3D3C               	addwfc	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
  7960  1F89  00BE               	movwf	(??_dwt_writetxdata+1)^(0+128)
  7961  1F8A  3004               	movlw	4
  7962  1F8B  023E               	subwf	(??_dwt_writetxdata+1)^(0+128),w
  7963  1F8C  3000               	movlw	0
  7964  1F8D  1903               	skipnz
  7965  1F8E  023D               	subwf	??_dwt_writetxdata^(0+128),w
  7966  1F8F  1803               	skipnc
  7967  1F90  0008               	return
  7968                           
  7969                           ;deca_device.c: 1739: {
  7970                           ;deca_device.c: 1740: if(txBufferOffset <= (127))
  7971  1F91  3000               	movlw	0
  7972  1F92  023C               	subwf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
  7973  1F93  3080               	movlw	128
  7974  1F94  1903               	skipnz
  7975  1F95  023B               	subwf	dwt_writetxdata@txBufferOffset^(0+128),w
  7976  1F96  1803               	skipnc
  7977  1F97  2FB1               	goto	l5769
  7978                           
  7979                           ;deca_device.c: 1741: {
  7980                           ;deca_device.c: 1743: dwt_writetodevice(0x140000, txBufferOffset, txDataLength, txDataBy
      +                          tes);
  7981  1F98  3000               	movlw	0
  7982  1F99  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  7983  1F9A  3014               	movlw	20
  7984  1F9B  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  7985  1F9C  3000               	movlw	0
  7986  1F9D  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  7987  1F9E  3000               	movlw	0
  7988  1F9F  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  7989  1FA0  083C               	movf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
  7990  1FA1  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  7991  1FA2  083B               	movf	dwt_writetxdata@txBufferOffset^(0+128),w
  7992  1FA3  00A4               	movwf	dwt_writetodevice@index^(0+128)
  7993  1FA4  0838               	movf	dwt_writetxdata@txDataLength^(0+128),w
  7994  1FA5  00A6               	movwf	dwt_writetodevice@length^(0+128)
  7995  1FA6  0839               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
  7996  1FA7  00A7               	movwf	(dwt_writetodevice@length^(0+128)+1)
  7997  1FA8  01A8               	clrf	(dwt_writetodevice@length^(0+128)+2)
  7998  1FA9  01A9               	clrf	(dwt_writetodevice@length^(0+128)+3)
  7999  1FAA  083A               	movf	dwt_writetxdata@txDataBytes^(0+128),w
  8000  1FAB  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8001  1FAC  3002               	movlw	2
  8002  1FAD  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8003  1FAE  3199  213B         	fcall	_dwt_writetodevice
  8004                           
  8005                           ;deca_device.c: 1744: }
  8006  1FB0  0008               	return
  8007  1FB1                     l5769:	
  8008                           
  8009                           ;deca_device.c: 1745: else
  8010                           ;deca_device.c: 1746: {
  8011                           ;deca_device.c: 1748: dwt_write32bitoffsetreg(0x1f0004,0,(0x140000 >> 16));
  8012  1FB1  3000               	movlw	0
  8013  1FB2  0141               	movlb	1	; select bank1
  8014  1FB3  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
  8015  1FB4  301F               	movlw	31
  8016  1FB5  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
  8017  1FB6  3000               	movlw	0
  8018  1FB7  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
  8019  1FB8  3004               	movlw	4
  8020  1FB9  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
  8021  1FBA  3000               	movlw	0
  8022  1FBB  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
  8023  1FBC  3000               	movlw	0
  8024  1FBD  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
  8025  1FBE  3000               	movlw	0
  8026  1FBF  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
  8027  1FC0  3000               	movlw	0
  8028  1FC1  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
  8029  1FC2  3000               	movlw	0
  8030  1FC3  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
  8031  1FC4  3000               	movlw	0
  8032  1FC5  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
  8033  1FC6  3000               	movlw	0
  8034  1FC7  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
  8035  1FC8  3014               	movlw	20
  8036  1FC9  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
  8037  1FCA  319B  2336  319F   	fcall	_dwt_write32bitoffsetreg
  8038                           
  8039                           ;deca_device.c: 1749: dwt_write32bitoffsetreg(0x1f0008,0,txBufferOffset);
  8040  1FCD  3000               	movlw	0
  8041  1FCE  0141               	movlb	1	; select bank1
  8042  1FCF  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
  8043  1FD0  301F               	movlw	31
  8044  1FD1  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
  8045  1FD2  3000               	movlw	0
  8046  1FD3  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
  8047  1FD4  3008               	movlw	8
  8048  1FD5  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
  8049  1FD6  3000               	movlw	0
  8050  1FD7  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
  8051  1FD8  3000               	movlw	0
  8052  1FD9  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
  8053  1FDA  3000               	movlw	0
  8054  1FDB  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
  8055  1FDC  3000               	movlw	0
  8056  1FDD  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
  8057  1FDE  083B               	movf	dwt_writetxdata@txBufferOffset^(0+128),w
  8058  1FDF  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
  8059  1FE0  083C               	movf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
  8060  1FE1  00B5               	movwf	(dwt_write32bitoffsetreg@regval^(0+128)+1)
  8061  1FE2  01B6               	clrf	(dwt_write32bitoffsetreg@regval^(0+128)+2)
  8062  1FE3  01B7               	clrf	(dwt_write32bitoffsetreg@regval^(0+128)+3)
  8063  1FE4  319B  2336  319F   	fcall	_dwt_write32bitoffsetreg
  8064                           
  8065                           ;deca_device.c: 1752: dwt_writetodevice(0x1D0000, 0, txDataLength, txDataBytes);
  8066  1FE7  3000               	movlw	0
  8067  1FE8  0141               	movlb	1	; select bank1
  8068  1FE9  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8069  1FEA  301D               	movlw	29
  8070  1FEB  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8071  1FEC  3000               	movlw	0
  8072  1FED  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8073  1FEE  3000               	movlw	0
  8074  1FEF  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8075  1FF0  3000               	movlw	0
  8076  1FF1  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8077  1FF2  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8078  1FF3  0838               	movf	dwt_writetxdata@txDataLength^(0+128),w
  8079  1FF4  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8080  1FF5  0839               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
  8081  1FF6  00A7               	movwf	(dwt_writetodevice@length^(0+128)+1)
  8082  1FF7  01A8               	clrf	(dwt_writetodevice@length^(0+128)+2)
  8083  1FF8  01A9               	clrf	(dwt_writetodevice@length^(0+128)+3)
  8084  1FF9  083A               	movf	dwt_writetxdata@txDataBytes^(0+128),w
  8085  1FFA  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8086  1FFB  3002               	movlw	2
  8087  1FFC  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8088  1FFD  3199  213B         	fcall	_dwt_writetodevice
  8089                           
  8090                           ;deca_device.c: 1756: else
  8091                           ;deca_device.c: 1757: return (-1);
  8092                           ;	Return value of _dwt_writetxdata is never used
  8093                           
  8094                           ;deca_device.c: 1755: }
  8095                           
  8096                           ;deca_device.c: 1753: }
  8097                           ;deca_device.c: 1754: return (0);
  8098                           ;	Return value of _dwt_writetxdata is never used
  8099  1FFF  0008               	return
  8100  2000                     __end_of_dwt_writetxdata:	
  8101                           
  8102                           	psect	text5
  8103  151D                     __ptext5:	
  8104 ;; *************** function _dwt_starttx *****************
  8105 ;; Defined at:
  8106 ;;		line 3691 in file "deca_device.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  mode            1    wreg     unsigned char 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  mode            1   39[BANK1 ] unsigned char 
  8111 ;;  sys_state       4   31[BANK1 ] unsigned long 
  8112 ;;  checkTxOK       2   37[BANK1 ] unsigned int 
  8113 ;;  retval          2   35[BANK1 ] int 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  2  977[None  ] int 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8124 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8125 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8126 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8127 ;;Total ram usage:       11 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    8
  8130 ;; This function calls:
  8131 ;;		_dwt_read32bitoffsetreg
  8132 ;;		_dwt_read8bitoffsetreg
  8133 ;;		_dwt_writetodevice
  8134 ;; This function is called by:
  8135 ;;		_dw_main
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _dwt_starttx
  8141  151D                     _dwt_starttx:	
  8142                           
  8143                           ;incstack = 0
  8144                           ; Regs used in _dwt_starttx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8145                           ;dwt_starttx@mode stored from wreg
  8146  151D  0141               	movlb	1	; select bank1
  8147  151E  00C7               	movwf	dwt_starttx@mode^(0+128)
  8148                           
  8149                           ;deca_device.c: 3693: int retval = (0) ;
  8150  151F  01C3               	clrf	dwt_starttx@retval^(0+128)
  8151  1520  01C4               	clrf	(dwt_starttx@retval+1)^(0+128)
  8152                           
  8153                           ;deca_device.c: 3694: uint16_t checkTxOK = 0 ;
  8154  1521  01C5               	clrf	dwt_starttx@checkTxOK^(0+128)
  8155  1522  01C6               	clrf	(dwt_starttx@checkTxOK+1)^(0+128)
  8156                           
  8157                           ;deca_device.c: 3695: uint32_t sys_state;
  8158                           ;deca_device.c: 3697: if ((mode & 0x01) || (mode & 0x04)
  8159                           ;deca_device.c: 3698: || (mode & 0x08) || (mode & 0x10))
  8160  1523  1C47               	btfss	dwt_starttx@mode^(0+128),0
  8161  1524  1947               	btfsc	dwt_starttx@mode^(0+128),2
  8162  1525  2D2A               	goto	l5799
  8163  1526  19C7               	btfsc	dwt_starttx@mode^(0+128),3
  8164  1527  2D2A               	goto	l5799
  8165  1528  1E47               	btfss	dwt_starttx@mode^(0+128),4
  8166  1529  2E17               	goto	l978
  8167  152A                     l5799:	
  8168                           
  8169                           ;deca_device.c: 3699: {
  8170                           ;deca_device.c: 3700: if(mode & 0x01)
  8171  152A  1C47               	btfss	dwt_starttx@mode^(0+128),0
  8172  152B  2D3F               	goto	l981
  8173                           
  8174                           ;deca_device.c: 3701: {
  8175                           ;deca_device.c: 3702: if(mode & 0x02)
  8176  152C  1CC7               	btfss	dwt_starttx@mode^(0+128),1
  8177  152D  2D36               	goto	l5805
  8178                           
  8179                           ;deca_device.c: 3703: {
  8180                           ;deca_device.c: 3704: dwt_writetodevice(0xD,0,0,0);
  8181  152E  3000               	movlw	0
  8182  152F  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8183  1530  3000               	movlw	0
  8184  1531  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8185  1532  3000               	movlw	0
  8186  1533  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8187  1534  300D               	movlw	13
  8188  1535  2D7B               	goto	L2
  8189  1536                     l5805:	
  8190                           ;deca_device.c: 3705: }
  8191                           
  8192                           
  8193                           ;deca_device.c: 3706: else
  8194                           ;deca_device.c: 3707: {
  8195                           ;deca_device.c: 3708: dwt_writetodevice(0x3,0,0,0);
  8196  1536  3000               	movlw	0
  8197  1537  0141               	movlb	1	; select bank1
  8198  1538  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8199  1539  3000               	movlw	0
  8200  153A  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8201  153B  3000               	movlw	0
  8202  153C  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8203  153D  3003               	movlw	3
  8204  153E  2D7B               	goto	L2
  8205  153F                     l981:	
  8206                           ;deca_device.c: 3709: }
  8207                           ;deca_device.c: 3710: }
  8208                           
  8209                           
  8210                           ;deca_device.c: 3711: else if (mode & 0x08)
  8211  153F  1DC7               	btfss	dwt_starttx@mode^(0+128),3
  8212  1540  2D54               	goto	l985
  8213                           
  8214                           ;deca_device.c: 3712: {
  8215                           ;deca_device.c: 3713: if(mode & 0x02)
  8216  1541  1CC7               	btfss	dwt_starttx@mode^(0+128),1
  8217  1542  2D4B               	goto	l5811
  8218                           
  8219                           ;deca_device.c: 3714: {
  8220                           ;deca_device.c: 3715: dwt_writetodevice(0xF,0,0,0);
  8221  1543  3000               	movlw	0
  8222  1544  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8223  1545  3000               	movlw	0
  8224  1546  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8225  1547  3000               	movlw	0
  8226  1548  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8227  1549  300F               	movlw	15
  8228  154A  2D7B               	goto	L2
  8229  154B                     l5811:	
  8230                           ;deca_device.c: 3716: }
  8231                           
  8232                           
  8233                           ;deca_device.c: 3717: else
  8234                           ;deca_device.c: 3718: {
  8235                           ;deca_device.c: 3719: dwt_writetodevice(0x7,0,0,0);
  8236  154B  3000               	movlw	0
  8237  154C  0141               	movlb	1	; select bank1
  8238  154D  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8239  154E  3000               	movlw	0
  8240  154F  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8241  1550  3000               	movlw	0
  8242  1551  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8243  1552  3007               	movlw	7
  8244  1553  2D7B               	goto	L2
  8245  1554                     l985:	
  8246                           ;deca_device.c: 3720: }
  8247                           ;deca_device.c: 3721: }
  8248                           
  8249                           
  8250                           ;deca_device.c: 3722: else if (mode & 0x10)
  8251  1554  1E47               	btfss	dwt_starttx@mode^(0+128),4
  8252  1555  2D69               	goto	l989
  8253                           
  8254                           ;deca_device.c: 3723: {
  8255                           ;deca_device.c: 3724: if(mode & 0x02)
  8256  1556  1CC7               	btfss	dwt_starttx@mode^(0+128),1
  8257  1557  2D60               	goto	l5817
  8258                           
  8259                           ;deca_device.c: 3725: {
  8260                           ;deca_device.c: 3726: dwt_writetodevice(0xE,0,0,0);
  8261  1558  3000               	movlw	0
  8262  1559  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8263  155A  3000               	movlw	0
  8264  155B  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8265  155C  3000               	movlw	0
  8266  155D  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8267  155E  300E               	movlw	14
  8268  155F  2D7B               	goto	L2
  8269  1560                     l5817:	
  8270                           ;deca_device.c: 3727: }
  8271                           
  8272                           
  8273                           ;deca_device.c: 3728: else
  8274                           ;deca_device.c: 3729: {
  8275                           ;deca_device.c: 3730: dwt_writetodevice(0x5,0,0,0);
  8276  1560  3000               	movlw	0
  8277  1561  0141               	movlb	1	; select bank1
  8278  1562  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8279  1563  3000               	movlw	0
  8280  1564  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8281  1565  3000               	movlw	0
  8282  1566  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8283  1567  3005               	movlw	5
  8284  1568  2D7B               	goto	L2
  8285  1569                     l989:	
  8286                           ;deca_device.c: 3731: }
  8287                           ;deca_device.c: 3732: }
  8288                           
  8289                           
  8290                           ;deca_device.c: 3733: else
  8291                           ;deca_device.c: 3734: {
  8292                           ;deca_device.c: 3735: if(mode & 0x02)
  8293  1569  1CC7               	btfss	dwt_starttx@mode^(0+128),1
  8294  156A  2D73               	goto	l5821
  8295                           
  8296                           ;deca_device.c: 3736: {
  8297                           ;deca_device.c: 3737: dwt_writetodevice(0x10,0,0,0);
  8298  156B  3000               	movlw	0
  8299  156C  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8300  156D  3000               	movlw	0
  8301  156E  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8302  156F  3000               	movlw	0
  8303  1570  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8304  1571  3010               	movlw	16
  8305  1572  2D7B               	goto	L2
  8306  1573                     l5821:	
  8307                           ;deca_device.c: 3738: }
  8308                           
  8309                           
  8310                           ;deca_device.c: 3739: else
  8311                           ;deca_device.c: 3740: {
  8312                           ;deca_device.c: 3741: dwt_writetodevice(0x9,0,0,0);
  8313  1573  3000               	movlw	0
  8314  1574  0141               	movlb	1	; select bank1
  8315  1575  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8316  1576  3000               	movlw	0
  8317  1577  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8318  1578  3000               	movlw	0
  8319  1579  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8320  157A  3009               	movlw	9
  8321  157B                     L2:	
  8322  157B  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8323  157C  3000               	movlw	0
  8324  157D  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8325  157E  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8326  157F  3000               	movlw	0
  8327  1580  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
  8328  1581  3000               	movlw	0
  8329  1582  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
  8330  1583  3000               	movlw	0
  8331  1584  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
  8332  1585  3000               	movlw	0
  8333  1586  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8334  1587  3000               	movlw	0
  8335  1588  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8336  1589  3000               	movlw	0
  8337  158A  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8338  158B  3199  213B  3195   	fcall	_dwt_writetodevice
  8339                           
  8340                           ;deca_device.c: 3742: }
  8341                           ;deca_device.c: 3743: }
  8342                           ;deca_device.c: 3745: checkTxOK = dwt_read8bitoffsetreg(0x44, 3);
  8343  158E  3000               	movlw	0
  8344  158F  0140               	movlb	0	; select bank0
  8345  1590  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
  8346  1591  3000               	movlw	0
  8347  1592  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
  8348  1593  3000               	movlw	0
  8349  1594  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
  8350  1595  3044               	movlw	68
  8351  1596  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
  8352  1597  3000               	movlw	0
  8353  1598  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
  8354  1599  3000               	movlw	0
  8355  159A  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
  8356  159B  3000               	movlw	0
  8357  159C  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
  8358  159D  3003               	movlw	3
  8359  159E  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
  8360  159F  31A6  269C  3195   	fcall	_dwt_read8bitoffsetreg
  8361  15A2  0141               	movlb	1	; select bank1
  8362  15A3  00BD               	movwf	??_dwt_starttx^(0+128)
  8363  15A4  01BE               	clrf	(??_dwt_starttx^(0+128)+1)
  8364  15A5  083D               	movf	??_dwt_starttx^(0+128),w
  8365  15A6  00C5               	movwf	dwt_starttx@checkTxOK^(0+128)
  8366  15A7  083E               	movf	(??_dwt_starttx+1)^(0+128),w
  8367  15A8  00C6               	movwf	(dwt_starttx@checkTxOK+1)^(0+128)
  8368                           
  8369                           ;deca_device.c: 3746: if ((checkTxOK & (0x8000000UL>>24)) == 0)
  8370  15A9  19C5               	btfsc	dwt_starttx@checkTxOK^(0+128),3
  8371  15AA  2DF8               	goto	l5835
  8372                           
  8373                           ;deca_device.c: 3747: {
  8374                           ;deca_device.c: 3748: sys_state = dwt_read32bitoffsetreg(0xf0030,0);
  8375  15AB  3000               	movlw	0
  8376  15AC  0140               	movlb	0	; select bank0
  8377  15AD  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
  8378  15AE  300F               	movlw	15
  8379  15AF  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
  8380  15B0  3000               	movlw	0
  8381  15B1  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
  8382  15B2  3030               	movlw	48
  8383  15B3  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
  8384  15B4  3000               	movlw	0
  8385  15B5  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
  8386  15B6  3000               	movlw	0
  8387  15B7  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
  8388  15B8  3000               	movlw	0
  8389  15B9  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
  8390  15BA  3000               	movlw	0
  8391  15BB  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
  8392  15BC  319E  2616  3195   	fcall	_dwt_read32bitoffsetreg
  8393  15BF  0140               	movlb	0	; select bank0
  8394  15C0  086B               	movf	?_dwt_read32bitoffsetreg+3,w
  8395  15C1  0141               	movlb	1	; select bank1
  8396  15C2  00C2               	movwf	(dwt_starttx@sys_state+3)^(0+128)
  8397  15C3  0140               	movlb	0	; select bank0
  8398  15C4  086A               	movf	?_dwt_read32bitoffsetreg+2,w
  8399  15C5  0141               	movlb	1	; select bank1
  8400  15C6  00C1               	movwf	(dwt_starttx@sys_state+2)^(0+128)
  8401  15C7  0140               	movlb	0	; select bank0
  8402  15C8  0869               	movf	?_dwt_read32bitoffsetreg+1,w
  8403  15C9  0141               	movlb	1	; select bank1
  8404  15CA  00C0               	movwf	(dwt_starttx@sys_state+1)^(0+128)
  8405  15CB  0140               	movlb	0	; select bank0
  8406  15CC  0868               	movf	?_dwt_read32bitoffsetreg,w
  8407  15CD  0141               	movlb	1	; select bank1
  8408  15CE  00BF               	movwf	dwt_starttx@sys_state^(0+128)
  8409                           
  8410                           ;deca_device.c: 3749: if (sys_state == 0xD0000)
  8411  15CF  300D               	movlw	13
  8412  15D0  0641               	xorwf	(dwt_starttx@sys_state+2)^(0+128),w
  8413  15D1  043F               	iorwf	dwt_starttx@sys_state^(0+128),w
  8414  15D2  0440               	iorwf	(dwt_starttx@sys_state+1)^(0+128),w
  8415  15D3  0442               	iorwf	(dwt_starttx@sys_state+3)^(0+128),w
  8416  15D4  1D03               	btfss	3,2
  8417  15D5  2DF5               	goto	l5833
  8418                           
  8419                           ;deca_device.c: 3750: {
  8420                           ;deca_device.c: 3751: dwt_writetodevice(0x0,0,0,0);
  8421  15D6  3000               	movlw	0
  8422  15D7  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8423  15D8  3000               	movlw	0
  8424  15D9  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8425  15DA  3000               	movlw	0
  8426  15DB  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8427  15DC  3000               	movlw	0
  8428  15DD  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8429  15DE  3000               	movlw	0
  8430  15DF  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8431  15E0  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8432  15E1  3000               	movlw	0
  8433  15E2  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
  8434  15E3  3000               	movlw	0
  8435  15E4  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
  8436  15E5  3000               	movlw	0
  8437  15E6  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
  8438  15E7  3000               	movlw	0
  8439  15E8  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8440  15E9  3000               	movlw	0
  8441  15EA  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8442  15EB  3000               	movlw	0
  8443  15EC  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8444  15ED  3199  213B         	fcall	_dwt_writetodevice
  8445                           
  8446                           ;deca_device.c: 3752: retval = (-1) ;
  8447  15EF  30FF               	movlw	255
  8448  15F0  0141               	movlb	1	; select bank1
  8449  15F1  00C3               	movwf	dwt_starttx@retval^(0+128)
  8450  15F2  30FF               	movlw	255
  8451  15F3  00C4               	movwf	(dwt_starttx@retval^(0+128)+1)
  8452                           
  8453                           ;deca_device.c: 3753: }
  8454  15F4  0008               	return
  8455  15F5                     l5833:	
  8456                           
  8457                           ;deca_device.c: 3754: else
  8458                           ;deca_device.c: 3755: {
  8459                           ;deca_device.c: 3756: retval = (0) ;
  8460  15F5  01C3               	clrf	dwt_starttx@retval^(0+128)
  8461  15F6  01C4               	clrf	(dwt_starttx@retval+1)^(0+128)
  8462                           
  8463                           ;deca_device.c: 3757: }
  8464                           ;deca_device.c: 3758: }
  8465  15F7  0008               	return
  8466  15F8                     l5835:	
  8467                           
  8468                           ;deca_device.c: 3759: else
  8469                           ;deca_device.c: 3760: {
  8470                           ;deca_device.c: 3761: dwt_writetodevice(0x0,0,0,0);
  8471  15F8  3000               	movlw	0
  8472  15F9  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8473  15FA  3000               	movlw	0
  8474  15FB  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8475  15FC  3000               	movlw	0
  8476  15FD  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8477  15FE  3000               	movlw	0
  8478  15FF  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8479  1600  3000               	movlw	0
  8480  1601  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8481  1602  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8482  1603  3000               	movlw	0
  8483  1604  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
  8484  1605  3000               	movlw	0
  8485  1606  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
  8486  1607  3000               	movlw	0
  8487  1608  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
  8488  1609  3000               	movlw	0
  8489  160A  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8490  160B  3000               	movlw	0
  8491  160C  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8492  160D  3000               	movlw	0
  8493  160E  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8494  160F  3199  213B         	fcall	_dwt_writetodevice
  8495                           
  8496                           ;deca_device.c: 3762: retval = (-1) ;
  8497  1611  30FF               	movlw	255
  8498  1612  0141               	movlb	1	; select bank1
  8499  1613  00C3               	movwf	dwt_starttx@retval^(0+128)
  8500  1614  30FF               	movlw	255
  8501  1615  00C4               	movwf	(dwt_starttx@retval^(0+128)+1)
  8502                           
  8503                           ;deca_device.c: 3766: }
  8504                           ;deca_device.c: 3767: }
  8505  1616  0008               	return
  8506  1617                     l978:	
  8507                           
  8508                           ;deca_device.c: 3768: else if(mode & 0x20)
  8509  1617  1EC7               	btfss	dwt_starttx@mode^(0+128),5
  8510  1618  2E50               	goto	l1000
  8511                           
  8512                           ;deca_device.c: 3769: {
  8513                           ;deca_device.c: 3770: if(mode & 0x02)
  8514  1619  1CC7               	btfss	dwt_starttx@mode^(0+128),1
  8515  161A  2E35               	goto	l5843
  8516                           
  8517                           ;deca_device.c: 3771: {
  8518                           ;deca_device.c: 3772: dwt_writetodevice(0x11,0,0,0);
  8519  161B  3000               	movlw	0
  8520  161C  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8521  161D  3000               	movlw	0
  8522  161E  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8523  161F  3000               	movlw	0
  8524  1620  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8525  1621  3011               	movlw	17
  8526  1622  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8527  1623  3000               	movlw	0
  8528  1624  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8529  1625  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8530  1626  3000               	movlw	0
  8531  1627  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
  8532  1628  3000               	movlw	0
  8533  1629  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
  8534  162A  3000               	movlw	0
  8535  162B  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
  8536  162C  3000               	movlw	0
  8537  162D  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8538  162E  3000               	movlw	0
  8539  162F  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8540  1630  3000               	movlw	0
  8541  1631  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8542  1632  3199  213B         	fcall	_dwt_writetodevice
  8543                           
  8544                           ;deca_device.c: 3773: }
  8545  1634  0008               	return
  8546  1635                     l5843:	
  8547                           
  8548                           ;deca_device.c: 3774: else
  8549                           ;deca_device.c: 3775: {
  8550                           ;deca_device.c: 3776: dwt_writetodevice(0xB,0,0,0);
  8551  1635  3000               	movlw	0
  8552  1636  0141               	movlb	1	; select bank1
  8553  1637  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8554  1638  3000               	movlw	0
  8555  1639  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8556  163A  3000               	movlw	0
  8557  163B  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8558  163C  300B               	movlw	11
  8559  163D  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8560  163E  3000               	movlw	0
  8561  163F  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8562  1640  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8563  1641  3000               	movlw	0
  8564  1642  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
  8565  1643  3000               	movlw	0
  8566  1644  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
  8567  1645  3000               	movlw	0
  8568  1646  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
  8569  1647  3000               	movlw	0
  8570  1648  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8571  1649  3000               	movlw	0
  8572  164A  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8573  164B  3000               	movlw	0
  8574  164C  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8575  164D  3199  213B         	fcall	_dwt_writetodevice
  8576                           
  8577                           ;deca_device.c: 3777: }
  8578                           ;deca_device.c: 3778: }
  8579  164F  0008               	return
  8580  1650                     l1000:	
  8581                           
  8582                           ;deca_device.c: 3779: else
  8583                           ;deca_device.c: 3780: {
  8584                           ;deca_device.c: 3781: if(mode & 0x02)
  8585  1650  1CC7               	btfss	dwt_starttx@mode^(0+128),1
  8586  1651  2E6C               	goto	l5847
  8587                           
  8588                           ;deca_device.c: 3782: {
  8589                           ;deca_device.c: 3783: dwt_writetodevice(0xC,0,0,0);
  8590  1652  3000               	movlw	0
  8591  1653  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8592  1654  3000               	movlw	0
  8593  1655  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8594  1656  3000               	movlw	0
  8595  1657  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8596  1658  300C               	movlw	12
  8597  1659  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8598  165A  3000               	movlw	0
  8599  165B  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8600  165C  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8601  165D  3000               	movlw	0
  8602  165E  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
  8603  165F  3000               	movlw	0
  8604  1660  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
  8605  1661  3000               	movlw	0
  8606  1662  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
  8607  1663  3000               	movlw	0
  8608  1664  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8609  1665  3000               	movlw	0
  8610  1666  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8611  1667  3000               	movlw	0
  8612  1668  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8613  1669  3199  213B         	fcall	_dwt_writetodevice
  8614                           
  8615                           ;deca_device.c: 3784: }
  8616  166B  0008               	return
  8617  166C                     l5847:	
  8618                           
  8619                           ;deca_device.c: 3785: else
  8620                           ;deca_device.c: 3786: {
  8621                           ;deca_device.c: 3787: dwt_writetodevice(0x1,0,0,0);
  8622  166C  3000               	movlw	0
  8623  166D  0141               	movlb	1	; select bank1
  8624  166E  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
  8625  166F  3000               	movlw	0
  8626  1670  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
  8627  1671  3000               	movlw	0
  8628  1672  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
  8629  1673  3001               	movlw	1
  8630  1674  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
  8631  1675  3000               	movlw	0
  8632  1676  00A4               	movwf	dwt_writetodevice@index^(0+128)
  8633  1677  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
  8634  1678  3000               	movlw	0
  8635  1679  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
  8636  167A  3000               	movlw	0
  8637  167B  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
  8638  167C  3000               	movlw	0
  8639  167D  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
  8640  167E  3000               	movlw	0
  8641  167F  00A6               	movwf	dwt_writetodevice@length^(0+128)
  8642  1680  3000               	movlw	0
  8643  1681  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
  8644  1682  3000               	movlw	0
  8645  1683  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
  8646  1684  3199  213B         	fcall	_dwt_writetodevice
  8647  1686  0008               	return
  8648  1687                     __end_of_dwt_starttx:	
  8649                           ;deca_device.c: 3788: }
  8650                           ;deca_device.c: 3789: }
  8651                           ;deca_device.c: 3791: return retval;
  8652                           ;	Return value of _dwt_starttx is never used
  8653                           
  8654                           
  8655                           	psect	text6
  8656  2663                     __ptext6:	
  8657 ;; *************** function _dwt_settxantennadelay *****************
  8658 ;; Defined at:
  8659 ;;		line 1705 in file "deca_device.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  txDelay         2   75[BANK0 ] unsigned int 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  1    wreg      void 
  8666 ;; Registers used:
  8667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8673 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8676 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8677 ;;Total ram usage:        2 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    8
  8680 ;; This function calls:
  8681 ;;		_dwt_write16bitoffsetreg
  8682 ;; This function is called by:
  8683 ;;		_dw_main
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           
  8688                           ;psect for function _dwt_settxantennadelay
  8689  2663                     _dwt_settxantennadelay:	
  8690                           
  8691                           ;deca_device.c: 1708: dwt_write16bitoffsetreg(0x10004, 0, txDelay);
  8692                           
  8693                           ;incstack = 0
  8694                           ; Regs used in _dwt_settxantennadelay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8695  2663  3000               	movlw	0
  8696  2664  0141               	movlb	1	; select bank1
  8697  2665  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
  8698  2666  3001               	movlw	1
  8699  2667  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
  8700  2668  3000               	movlw	0
  8701  2669  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
  8702  266A  3004               	movlw	4
  8703  266B  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
  8704  266C  3000               	movlw	0
  8705  266D  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
  8706  266E  3000               	movlw	0
  8707  266F  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
  8708  2670  3000               	movlw	0
  8709  2671  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
  8710  2672  3000               	movlw	0
  8711  2673  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
  8712  2674  0140               	movlb	0	; select bank0
  8713  2675  086C               	movf	dwt_settxantennadelay@txDelay+1,w
  8714  2676  0141               	movlb	1	; select bank1
  8715  2677  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
  8716  2678  0140               	movlb	0	; select bank0
  8717  2679  086B               	movf	dwt_settxantennadelay@txDelay,w
  8718  267A  0141               	movlb	1	; select bank1
  8719  267B  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
  8720  267C  3180  2004         	fcall	_dwt_write16bitoffsetreg
  8721  267E  0008               	return
  8722  267F                     __end_of_dwt_settxantennadelay:	
  8723                           
  8724                           	psect	text7
  8725  2647                     __ptext7:	
  8726 ;; *************** function _dwt_setrxantennadelay *****************
  8727 ;; Defined at:
  8728 ;;		line 1688 in file "deca_device.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  rxDelay         2   75[BANK0 ] unsigned int 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      void 
  8735 ;; Registers used:
  8736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8746 ;;Total ram usage:        2 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    8
  8749 ;; This function calls:
  8750 ;;		_dwt_write16bitoffsetreg
  8751 ;; This function is called by:
  8752 ;;		_dw_main
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           
  8757                           ;psect for function _dwt_setrxantennadelay
  8758  2647                     _dwt_setrxantennadelay:	
  8759                           
  8760                           ;deca_device.c: 1691: dwt_write16bitoffsetreg(0xe0000, 0, rxDelay);
  8761                           
  8762                           ;incstack = 0
  8763                           ; Regs used in _dwt_setrxantennadelay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8764  2647  3000               	movlw	0
  8765  2648  0141               	movlb	1	; select bank1
  8766  2649  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
  8767  264A  300E               	movlw	14
  8768  264B  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
  8769  264C  3000               	movlw	0
  8770  264D  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
  8771  264E  3000               	movlw	0
  8772  264F  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
  8773  2650  3000               	movlw	0
  8774  2651  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
  8775  2652  3000               	movlw	0
  8776  2653  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
  8777  2654  3000               	movlw	0
  8778  2655  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
  8779  2656  3000               	movlw	0
  8780  2657  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
  8781  2658  0140               	movlb	0	; select bank0
  8782  2659  086C               	movf	dwt_setrxantennadelay@rxDelay+1,w
  8783  265A  0141               	movlb	1	; select bank1
  8784  265B  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
  8785  265C  0140               	movlb	0	; select bank0
  8786  265D  086B               	movf	dwt_setrxantennadelay@rxDelay,w
  8787  265E  0141               	movlb	1	; select bank1
  8788  265F  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
  8789  2660  3180  2004         	fcall	_dwt_write16bitoffsetreg
  8790  2662  0008               	return
  8791  2663                     __end_of_dwt_setrxantennadelay:	
  8792                           
  8793                           	psect	text8
  8794  0B00                     __ptext8:	
  8795 ;; *************** function _dwt_initialise *****************
  8796 ;; Defined at:
  8797 ;;		line 782 in file "deca_device.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  mode            2   37[BANK1 ] int 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  ldo_tune_hi     4   48[BANK1 ] unsigned long 
  8802 ;;  ldo_tune_lo     4   44[BANK1 ] unsigned long 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2   37[BANK1 ] int 
  8805 ;; Registers used:
  8806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8812 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8813 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8814 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8815 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8816 ;;Total ram usage:       15 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:   10
  8819 ;; This function calls:
  8820 ;;		_Sleep
  8821 ;;		__dwt_otpread
  8822 ;;		__dwt_prog_ldo_and_bias_tune
  8823 ;;		_dwt_check_dev_id
  8824 ;;		_dwt_checkidlerc
  8825 ;;		_dwt_write8bitoffsetreg
  8826 ;;		_printf_string
  8827 ;; This function is called by:
  8828 ;;		_dw_main
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function _dwt_initialise
  8834  0B00                     _dwt_initialise:	
  8835                           
  8836                           ;deca_device.c: 786: uint32_t ldo_tune_lo;
  8837                           ;deca_device.c: 787: uint32_t ldo_tune_hi;
  8838                           ;deca_device.c: 788: pdw3000local->dblbuffon = 0x0;
  8839                           
  8840                           ;incstack = 0
  8841                           ; Regs used in _dwt_initialise: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8842  0B00  0141               	movlb	1	; select bank1
  8843  0B01  086F               	movf	_pdw3000local^(0+128),w
  8844  0B02  3E0F               	addlw	15
  8845  0B03  0086               	movwf	6
  8846  0B04  3002               	movlw	2	; select bank4/5
  8847  0B05  0087               	movwf	7
  8848  0B06  0181               	clrf	1
  8849                           
  8850                           ;deca_device.c: 789: pdw3000local->sleep_mode = 0x0002;
  8851  0B07  086F               	movf	_pdw3000local^(0+128),w
  8852  0B08  3E10               	addlw	16
  8853  0B09  0086               	movwf	6
  8854  0B0A  3002               	movlw	2	; select bank4/5
  8855  0B0B  0087               	movwf	7
  8856  0B0C  3002               	movlw	2
  8857  0B0D  3FC0               	movwi [0]fsr1
  8858  0B0E  3000               	movlw	0
  8859  0B0F  3FC1               	movwi [1]fsr1
  8860                           
  8861                           ;deca_device.c: 790: pdw3000local->spicrc = 0;
  8862  0B10  086F               	movf	_pdw3000local^(0+128),w
  8863  0B11  3E14               	addlw	20
  8864  0B12  0086               	movwf	6
  8865  0B13  3002               	movlw	2	; select bank4/5
  8866  0B14  0087               	movwf	7
  8867  0B15  0181               	clrf	1
  8868                           
  8869                           ;deca_device.c: 791: pdw3000local->stsconfig = 0;
  8870  0B16  086F               	movf	_pdw3000local^(0+128),w
  8871  0B17  3E15               	addlw	21
  8872  0B18  0086               	movwf	6
  8873  0B19  3002               	movlw	2	; select bank4/5
  8874  0B1A  0087               	movwf	7
  8875  0B1B  0181               	clrf	1
  8876                           
  8877                           ;deca_device.c: 792: pdw3000local->vBatP = 0;
  8878  0B1C  086F               	movf	_pdw3000local^(0+128),w
  8879  0B1D  3E0A               	addlw	10
  8880  0B1E  0086               	movwf	6
  8881  0B1F  3002               	movlw	2	; select bank4/5
  8882  0B20  0087               	movwf	7
  8883  0B21  0181               	clrf	1
  8884                           
  8885                           ;deca_device.c: 793: pdw3000local->tempP = 0;
  8886  0B22  086F               	movf	_pdw3000local^(0+128),w
  8887  0B23  3E0B               	addlw	11
  8888  0B24  0086               	movwf	6
  8889  0B25  3002               	movlw	2	; select bank4/5
  8890  0B26  0087               	movwf	7
  8891  0B27  0181               	clrf	1
  8892                           
  8893                           ;deca_device.c: 795: pdw3000local->cbTxDone = (0);
  8894  0B28  086F               	movf	_pdw3000local^(0+128),w
  8895  0B29  3E22               	addlw	34
  8896  0B2A  0086               	movwf	6
  8897  0B2B  3002               	movlw	2	; select bank4/5
  8898  0B2C  0087               	movwf	7
  8899  0B2D  3000               	movlw	0
  8900  0B2E  3FC0               	movwi [0]fsr1
  8901  0B2F  3FC1               	movwi [1]fsr1
  8902                           
  8903                           ;deca_device.c: 796: pdw3000local->cbRxOk = (0);
  8904  0B30  086F               	movf	_pdw3000local^(0+128),w
  8905  0B31  3E24               	addlw	36
  8906  0B32  0086               	movwf	6
  8907  0B33  3002               	movlw	2	; select bank4/5
  8908  0B34  0087               	movwf	7
  8909  0B35  3000               	movlw	0
  8910  0B36  3FC0               	movwi [0]fsr1
  8911  0B37  3FC1               	movwi [1]fsr1
  8912                           
  8913                           ;deca_device.c: 797: pdw3000local->cbRxTo = (0);
  8914  0B38  086F               	movf	_pdw3000local^(0+128),w
  8915  0B39  3E26               	addlw	38
  8916  0B3A  0086               	movwf	6
  8917  0B3B  3002               	movlw	2	; select bank4/5
  8918  0B3C  0087               	movwf	7
  8919  0B3D  3000               	movlw	0
  8920  0B3E  3FC0               	movwi [0]fsr1
  8921  0B3F  3FC1               	movwi [1]fsr1
  8922                           
  8923                           ;deca_device.c: 798: pdw3000local->cbRxErr = (0);
  8924  0B40  086F               	movf	_pdw3000local^(0+128),w
  8925  0B41  3E28               	addlw	40
  8926  0B42  0086               	movwf	6
  8927  0B43  3002               	movlw	2	; select bank4/5
  8928  0B44  0087               	movwf	7
  8929  0B45  3000               	movlw	0
  8930  0B46  3FC0               	movwi [0]fsr1
  8931  0B47  3FC1               	movwi [1]fsr1
  8932                           
  8933                           ;deca_device.c: 799: pdw3000local->cbSPIRdy = (0);
  8934  0B48  086F               	movf	_pdw3000local^(0+128),w
  8935  0B49  3E2C               	addlw	44
  8936  0B4A  0086               	movwf	6
  8937  0B4B  3002               	movlw	2	; select bank4/5
  8938  0B4C  0087               	movwf	7
  8939  0B4D  3000               	movlw	0
  8940  0B4E  3FC0               	movwi [0]fsr1
  8941  0B4F  3FC1               	movwi [1]fsr1
  8942                           
  8943                           ;deca_device.c: 800: pdw3000local->cbSPIErr = (0);
  8944  0B50  086F               	movf	_pdw3000local^(0+128),w
  8945  0B51  3E2A               	addlw	42
  8946  0B52  0086               	movwf	6
  8947  0B53  3002               	movlw	2	; select bank4/5
  8948  0B54  0087               	movwf	7
  8949  0B55  3000               	movlw	0
  8950  0B56  3FC0               	movwi [0]fsr1
  8951  0B57  3FC1               	movwi [1]fsr1
  8952                           
  8953                           ;deca_device.c: 801: Sleep(2);
  8954  0B58  3000               	movlw	0
  8955  0B59  00F3               	movwf	Sleep@time+3
  8956  0B5A  3000               	movlw	0
  8957  0B5B  00F2               	movwf	Sleep@time+2
  8958  0B5C  3000               	movlw	0
  8959  0B5D  00F1               	movwf	Sleep@time+1
  8960  0B5E  3002               	movlw	2
  8961  0B5F  00F0               	movwf	Sleep@time
  8962  0B60  31A7  2753  318B   	fcall	_Sleep
  8963                           
  8964                           ;deca_device.c: 804: if (dwt_check_dev_id()!=(0))
  8965  0B63  3199  21A9  318B   	fcall	_dwt_check_dev_id
  8966  0B66  0141               	movlb	1	; select bank1
  8967  0B67  0841               	movf	?_dwt_check_dev_id^(0+128),w
  8968  0B68  0442               	iorwf	(?_dwt_check_dev_id+1)^(0+128),w
  8969  0B69  1903               	btfsc	3,2
  8970  0B6A  2B77               	goto	l5527
  8971                           
  8972                           ;deca_device.c: 805: {
  8973                           ;deca_device.c: 806: printf_string("\n\rreturn_Error");
  8974  0B6B  30D7               	movlw	low (STR_16| (0+32768))
  8975  0B6C  00F1               	movwf	printf_string@data
  8976  0B6D  30A8               	movlw	high (STR_16| (0+32768))
  8977  0B6E  00F2               	movwf	printf_string@data+1
  8978  0B6F  31A5  252E         	fcall	_printf_string
  8979                           
  8980                           ;deca_device.c: 807: return (-1);
  8981  0B71  30FF               	movlw	255
  8982  0B72  0141               	movlb	1	; select bank1
  8983  0B73  00C5               	movwf	?_dwt_initialise^(0+128)
  8984  0B74  30FF               	movlw	255
  8985  0B75  00C6               	movwf	(?_dwt_initialise^(0+128)+1)
  8986  0B76  0008               	return
  8987  0B77                     l5527:	
  8988                           ;deca_device.c: 811: { };
  8989                           
  8990                           ;deca_device.c: 808: }
  8991                           ;deca_device.c: 810: while (!dwt_checkidlerc())
  8992                           
  8993  0B77  3198  20A0  318B   	fcall	_dwt_checkidlerc
  8994  0B7A  3A00               	xorlw	0
  8995  0B7B  1903               	skipnz
  8996  0B7C  2B77               	goto	l5527
  8997                           
  8998                           ;deca_device.c: 813: ldo_tune_lo = _dwt_otpread((0x04));
  8999  0B7D  3004               	movlw	4
  9000  0B7E  0141               	movlb	1	; select bank1
  9001  0B7F  00BD               	movwf	__dwt_otpread@address^(0+128)
  9002  0B80  3000               	movlw	0
  9003  0B81  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9004  0B82  319F  2707  318B   	fcall	__dwt_otpread
  9005  0B85  0141               	movlb	1	; select bank1
  9006  0B86  0840               	movf	(?__dwt_otpread+3)^(0+128),w
  9007  0B87  00CF               	movwf	(dwt_initialise@ldo_tune_lo+3)^(0+128)
  9008  0B88  083F               	movf	(?__dwt_otpread+2)^(0+128),w
  9009  0B89  00CE               	movwf	(dwt_initialise@ldo_tune_lo+2)^(0+128)
  9010  0B8A  083E               	movf	(?__dwt_otpread+1)^(0+128),w
  9011  0B8B  00CD               	movwf	(dwt_initialise@ldo_tune_lo+1)^(0+128)
  9012  0B8C  083D               	movf	?__dwt_otpread^(0+128),w
  9013  0B8D  00CC               	movwf	dwt_initialise@ldo_tune_lo^(0+128)
  9014                           
  9015                           ;deca_device.c: 814: ldo_tune_hi = _dwt_otpread((0x05));
  9016  0B8E  3005               	movlw	5
  9017  0B8F  00BD               	movwf	__dwt_otpread@address^(0+128)
  9018  0B90  3000               	movlw	0
  9019  0B91  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9020  0B92  319F  2707  318B   	fcall	__dwt_otpread
  9021  0B95  0141               	movlb	1	; select bank1
  9022  0B96  0840               	movf	(?__dwt_otpread+3)^(0+128),w
  9023  0B97  00D3               	movwf	(dwt_initialise@ldo_tune_hi+3)^(0+128)
  9024  0B98  083F               	movf	(?__dwt_otpread+2)^(0+128),w
  9025  0B99  00D2               	movwf	(dwt_initialise@ldo_tune_hi+2)^(0+128)
  9026  0B9A  083E               	movf	(?__dwt_otpread+1)^(0+128),w
  9027  0B9B  00D1               	movwf	(dwt_initialise@ldo_tune_hi+1)^(0+128)
  9028  0B9C  083D               	movf	?__dwt_otpread^(0+128),w
  9029  0B9D  00D0               	movwf	dwt_initialise@ldo_tune_hi^(0+128)
  9030                           
  9031                           ;deca_device.c: 815: pdw3000local->bias_tune = (_dwt_otpread((0xA)) >> 16) & 0x1fU;
  9032  0B9E  300A               	movlw	10
  9033  0B9F  00BD               	movwf	__dwt_otpread@address^(0+128)
  9034  0BA0  3000               	movlw	0
  9035  0BA1  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9036  0BA2  319F  2707  318B   	fcall	__dwt_otpread
  9037  0BA5  0141               	movlb	1	; select bank1
  9038  0BA6  083D               	movf	?__dwt_otpread^(0+128),w
  9039  0BA7  00C7               	movwf	??_dwt_initialise^(0+128)
  9040  0BA8  083E               	movf	(?__dwt_otpread+1)^(0+128),w
  9041  0BA9  00C8               	movwf	(??_dwt_initialise^(0+128)+1)
  9042  0BAA  083F               	movf	(?__dwt_otpread+2)^(0+128),w
  9043  0BAB  00C9               	movwf	(??_dwt_initialise^(0+128)+2)
  9044  0BAC  0840               	movf	(?__dwt_otpread+3)^(0+128),w
  9045  0BAD  00CA               	movwf	(??_dwt_initialise^(0+128)+3)
  9046  0BAE  3010               	movlw	16
  9047  0BAF                     u5375:	
  9048  0BAF  36CA               	lsrf	(??_dwt_initialise^(0+128)+3),f
  9049  0BB0  0CC9               	rrf	(??_dwt_initialise^(0+128)+2),f
  9050  0BB1  0CC8               	rrf	(??_dwt_initialise^(0+128)+1),f
  9051  0BB2  0CC7               	rrf	??_dwt_initialise^(0+128),f
  9052  0BB3  0B89               	decfsz	9,f
  9053  0BB4  2BAF               	goto	u5375
  9054  0BB5  0847               	movf	??_dwt_initialise^(0+128),w
  9055  0BB6  391F               	andlw	31
  9056  0BB7  00CB               	movwf	(??_dwt_initialise+4)^(0+128)
  9057  0BB8  086F               	movf	_pdw3000local^(0+128),w
  9058  0BB9  3E08               	addlw	8
  9059  0BBA  0086               	movwf	6
  9060  0BBB  3002               	movlw	2	; select bank4/5
  9061  0BBC  0087               	movwf	7
  9062  0BBD  084B               	movf	(??_dwt_initialise+4)^(0+128),w
  9063  0BBE  0081               	movwf	1
  9064                           
  9065                           ;deca_device.c: 817: if ((ldo_tune_lo != 0) && (ldo_tune_hi != 0) && (pdw3000local->bias
      +                          _tune != 0))
  9066  0BBF  084F               	movf	(dwt_initialise@ldo_tune_lo+3)^(0+128),w
  9067  0BC0  044E               	iorwf	(dwt_initialise@ldo_tune_lo+2)^(0+128),w
  9068  0BC1  044D               	iorwf	(dwt_initialise@ldo_tune_lo+1)^(0+128),w
  9069  0BC2  044C               	iorwf	dwt_initialise@ldo_tune_lo^(0+128),w
  9070  0BC3  1903               	skipnz
  9071  0BC4  2BD6               	goto	l522
  9072  0BC5  0853               	movf	(dwt_initialise@ldo_tune_hi+3)^(0+128),w
  9073  0BC6  0452               	iorwf	(dwt_initialise@ldo_tune_hi+2)^(0+128),w
  9074  0BC7  0451               	iorwf	(dwt_initialise@ldo_tune_hi+1)^(0+128),w
  9075  0BC8  0450               	iorwf	dwt_initialise@ldo_tune_hi^(0+128),w
  9076  0BC9  1903               	skipnz
  9077  0BCA  2BD6               	goto	l522
  9078  0BCB  086F               	movf	_pdw3000local^(0+128),w
  9079  0BCC  3E08               	addlw	8
  9080  0BCD  0086               	movwf	6
  9081  0BCE  3002               	movlw	2	; select bank4/5
  9082  0BCF  0087               	movwf	7
  9083  0BD0  0801               	movf	1,w
  9084  0BD1  1903               	btfsc	3,2
  9085  0BD2  2BD6               	goto	l522
  9086                           
  9087                           ;deca_device.c: 818: {
  9088                           ;deca_device.c: 819: _dwt_prog_ldo_and_bias_tune();
  9089  0BD3  319A  2264  318B   	fcall	__dwt_prog_ldo_and_bias_tune
  9090  0BD6                     l522:	
  9091                           
  9092                           ;deca_device.c: 820: }
  9093                           ;deca_device.c: 823: if (_dwt_otpread((0x20)) == 0x10000240)
  9094  0BD6  3020               	movlw	32
  9095  0BD7  0141               	movlb	1	; select bank1
  9096  0BD8  00BD               	movwf	__dwt_otpread@address^(0+128)
  9097  0BD9  3000               	movlw	0
  9098  0BDA  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9099  0BDB  319F  2707  318B   	fcall	__dwt_otpread
  9100  0BDE  3040               	movlw	64
  9101  0BDF  0141               	movlb	1	; select bank1
  9102  0BE0  063D               	xorwf	?__dwt_otpread^(0+128),w
  9103  0BE1  3002               	movlw	2
  9104  0BE2  1903               	skipnz
  9105  0BE3  063E               	xorwf	(?__dwt_otpread+1)^(0+128),w
  9106  0BE4  3010               	movlw	16
  9107  0BE5  1903               	skipnz
  9108  0BE6  0640               	xorwf	(?__dwt_otpread+3)^(0+128),w
  9109  0BE7  043F               	iorwf	(?__dwt_otpread+2)^(0+128),w
  9110  0BE8  1D03               	btfss	3,2
  9111  0BE9  2BF2               	goto	l5541
  9112                           
  9113                           ;deca_device.c: 824: {
  9114                           ;deca_device.c: 825: pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_OTP;
  9115  0BEA  086F               	movf	_pdw3000local^(0+128),w
  9116  0BEB  3E09               	addlw	9
  9117  0BEC  0086               	movwf	6
  9118  0BED  3002               	movlw	2	; select bank4/5
  9119  0BEE  0087               	movwf	7
  9120  0BEF  0181               	clrf	1
  9121  0BF0  0A81               	incf	1,f
  9122                           
  9123                           ;deca_device.c: 826: }
  9124  0BF1  2BF8               	goto	l5543
  9125  0BF2                     l5541:	
  9126                           
  9127                           ;deca_device.c: 827: else
  9128                           ;deca_device.c: 828: {
  9129                           ;deca_device.c: 829: pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_SW;
  9130  0BF2  086F               	movf	_pdw3000local^(0+128),w
  9131  0BF3  3E09               	addlw	9
  9132  0BF4  0086               	movwf	6
  9133  0BF5  3002               	movlw	2	; select bank4/5
  9134  0BF6  0087               	movwf	7
  9135  0BF7  0181               	clrf	1
  9136  0BF8                     l5543:	
  9137                           
  9138                           ;deca_device.c: 830: }
  9139                           ;deca_device.c: 833: if(mode & 0x10)
  9140  0BF8  1E45               	btfss	dwt_initialise@mode^(0+128),4
  9141  0BF9  2C0E               	goto	l5547
  9142                           
  9143                           ;deca_device.c: 834: pdw3000local->partID = _dwt_otpread((0x06));
  9144  0BFA  3006               	movlw	6
  9145  0BFB  00BD               	movwf	__dwt_otpread@address^(0+128)
  9146  0BFC  3000               	movlw	0
  9147  0BFD  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9148  0BFE  319F  2707  318B   	fcall	__dwt_otpread
  9149  0C01  0141               	movlb	1	; select bank1
  9150  0C02  086F               	movf	_pdw3000local^(0+128),w
  9151  0C03  0086               	movwf	6
  9152  0C04  3002               	movlw	2	; select bank4/5
  9153  0C05  0087               	movwf	7
  9154  0C06  083D               	movf	?__dwt_otpread^(0+128),w
  9155  0C07  3FC0               	movwi [0]fsr1
  9156  0C08  083E               	movf	(?__dwt_otpread+1)^(0+128),w
  9157  0C09  3FC1               	movwi [1]fsr1
  9158  0C0A  083F               	movf	(?__dwt_otpread+2)^(0+128),w
  9159  0C0B  3FC2               	movwi [2]fsr1
  9160  0C0C  0840               	movf	(?__dwt_otpread+3)^(0+128),w
  9161  0C0D  3FC3               	movwi [3]fsr1
  9162  0C0E                     l5547:	
  9163                           
  9164                           ;deca_device.c: 835: if (mode & 0x20)
  9165  0C0E  1EC5               	btfss	dwt_initialise@mode^(0+128),5
  9166  0C0F  2C25               	goto	l5551
  9167                           
  9168                           ;deca_device.c: 836: pdw3000local->lotID = _dwt_otpread((0x07));
  9169  0C10  3007               	movlw	7
  9170  0C11  00BD               	movwf	__dwt_otpread@address^(0+128)
  9171  0C12  3000               	movlw	0
  9172  0C13  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9173  0C14  319F  2707  318B   	fcall	__dwt_otpread
  9174  0C17  0141               	movlb	1	; select bank1
  9175  0C18  086F               	movf	_pdw3000local^(0+128),w
  9176  0C19  3E04               	addlw	4
  9177  0C1A  0086               	movwf	6
  9178  0C1B  3002               	movlw	2	; select bank4/5
  9179  0C1C  0087               	movwf	7
  9180  0C1D  083D               	movf	?__dwt_otpread^(0+128),w
  9181  0C1E  3FC0               	movwi [0]fsr1
  9182  0C1F  083E               	movf	(?__dwt_otpread+1)^(0+128),w
  9183  0C20  3FC1               	movwi [1]fsr1
  9184  0C21  083F               	movf	(?__dwt_otpread+2)^(0+128),w
  9185  0C22  3FC2               	movwi [2]fsr1
  9186  0C23  0840               	movf	(?__dwt_otpread+3)^(0+128),w
  9187  0C24  3FC3               	movwi [3]fsr1
  9188  0C25                     l5551:	
  9189                           
  9190                           ;deca_device.c: 837: if (mode & 0x40)
  9191  0C25  1F45               	btfss	dwt_initialise@mode^(0+128),6
  9192  0C26  2C38               	goto	l5555
  9193                           
  9194                           ;deca_device.c: 838: pdw3000local->vBatP = (uint8_t)_dwt_otpread((0x08));
  9195  0C27  3008               	movlw	8
  9196  0C28  00BD               	movwf	__dwt_otpread@address^(0+128)
  9197  0C29  3000               	movlw	0
  9198  0C2A  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9199  0C2B  319F  2707  318B   	fcall	__dwt_otpread
  9200  0C2E  0141               	movlb	1	; select bank1
  9201  0C2F  083D               	movf	?__dwt_otpread^(0+128),w
  9202  0C30  00C7               	movwf	??_dwt_initialise^(0+128)
  9203  0C31  086F               	movf	_pdw3000local^(0+128),w
  9204  0C32  3E0A               	addlw	10
  9205  0C33  0086               	movwf	6
  9206  0C34  3002               	movlw	2	; select bank4/5
  9207  0C35  0087               	movwf	7
  9208  0C36  0847               	movf	??_dwt_initialise^(0+128),w
  9209  0C37  0081               	movwf	1
  9210  0C38                     l5555:	
  9211                           
  9212                           ;deca_device.c: 839: if (mode & 0x80)
  9213  0C38  1FC5               	btfss	dwt_initialise@mode^(0+128),7
  9214  0C39  2C4B               	goto	l5559
  9215                           
  9216                           ;deca_device.c: 840: pdw3000local->tempP = (uint8_t)_dwt_otpread((0x09));
  9217  0C3A  3009               	movlw	9
  9218  0C3B  00BD               	movwf	__dwt_otpread@address^(0+128)
  9219  0C3C  3000               	movlw	0
  9220  0C3D  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9221  0C3E  319F  2707  318B   	fcall	__dwt_otpread
  9222  0C41  0141               	movlb	1	; select bank1
  9223  0C42  083D               	movf	?__dwt_otpread^(0+128),w
  9224  0C43  00C7               	movwf	??_dwt_initialise^(0+128)
  9225  0C44  086F               	movf	_pdw3000local^(0+128),w
  9226  0C45  3E0B               	addlw	11
  9227  0C46  0086               	movwf	6
  9228  0C47  3002               	movlw	2	; select bank4/5
  9229  0C48  0087               	movwf	7
  9230  0C49  0847               	movf	??_dwt_initialise^(0+128),w
  9231  0C4A  0081               	movwf	1
  9232  0C4B                     l5559:	
  9233                           
  9234                           ;deca_device.c: 843: if(pdw3000local->tempP == 0)
  9235  0C4B  086F               	movf	_pdw3000local^(0+128),w
  9236  0C4C  3E0B               	addlw	11
  9237  0C4D  0086               	movwf	6
  9238  0C4E  3002               	movlw	2	; select bank4/5
  9239  0C4F  0087               	movwf	7
  9240  0C50  0801               	movf	1,w
  9241  0C51  1D03               	btfss	3,2
  9242  0C52  2C5C               	goto	l529
  9243                           
  9244                           ;deca_device.c: 844: {
  9245                           ;deca_device.c: 845: pdw3000local->tempP = 0x85 ;
  9246  0C53  3085               	movlw	133
  9247  0C54  00C7               	movwf	??_dwt_initialise^(0+128)
  9248  0C55  086F               	movf	_pdw3000local^(0+128),w
  9249  0C56  3E0B               	addlw	11
  9250  0C57  0086               	movwf	6
  9251  0C58  3002               	movlw	2	; select bank4/5
  9252  0C59  0087               	movwf	7
  9253  0C5A  0847               	movf	??_dwt_initialise^(0+128),w
  9254  0C5B  0081               	movwf	1
  9255  0C5C                     l529:	
  9256                           
  9257                           ;deca_device.c: 846: }
  9258                           ;deca_device.c: 848: if(pdw3000local->vBatP == 0)
  9259  0C5C  086F               	movf	_pdw3000local^(0+128),w
  9260  0C5D  3E0A               	addlw	10
  9261  0C5E  0086               	movwf	6
  9262  0C5F  3002               	movlw	2	; select bank4/5
  9263  0C60  0087               	movwf	7
  9264  0C61  0801               	movf	1,w
  9265  0C62  1D03               	btfss	3,2
  9266  0C63  2C6D               	goto	l5565
  9267                           
  9268                           ;deca_device.c: 849: {
  9269                           ;deca_device.c: 850: pdw3000local->vBatP = 0x74 ;
  9270  0C64  3074               	movlw	116
  9271  0C65  00C7               	movwf	??_dwt_initialise^(0+128)
  9272  0C66  086F               	movf	_pdw3000local^(0+128),w
  9273  0C67  3E0A               	addlw	10
  9274  0C68  0086               	movwf	6
  9275  0C69  3002               	movlw	2	; select bank4/5
  9276  0C6A  0087               	movwf	7
  9277  0C6B  0847               	movf	??_dwt_initialise^(0+128),w
  9278  0C6C  0081               	movwf	1
  9279  0C6D                     l5565:	
  9280                           
  9281                           ;deca_device.c: 851: }
  9282                           ;deca_device.c: 853: pdw3000local->otprev = (uint8_t) _dwt_otpread((0x1F));
  9283  0C6D  301F               	movlw	31
  9284  0C6E  00BD               	movwf	__dwt_otpread@address^(0+128)
  9285  0C6F  3000               	movlw	0
  9286  0C70  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9287  0C71  319F  2707  318B   	fcall	__dwt_otpread
  9288  0C74  0141               	movlb	1	; select bank1
  9289  0C75  083D               	movf	?__dwt_otpread^(0+128),w
  9290  0C76  00C7               	movwf	??_dwt_initialise^(0+128)
  9291  0C77  086F               	movf	_pdw3000local^(0+128),w
  9292  0C78  3E0D               	addlw	13
  9293  0C79  0086               	movwf	6
  9294  0C7A  3002               	movlw	2	; select bank4/5
  9295  0C7B  0087               	movwf	7
  9296  0C7C  0847               	movf	??_dwt_initialise^(0+128),w
  9297  0C7D  0081               	movwf	1
  9298                           
  9299                           ;deca_device.c: 855: pdw3000local->init_xtrim =_dwt_otpread((0x1E)) & 0x7f;
  9300  0C7E  301E               	movlw	30
  9301  0C7F  00BD               	movwf	__dwt_otpread@address^(0+128)
  9302  0C80  3000               	movlw	0
  9303  0C81  00BE               	movwf	(__dwt_otpread@address^(0+128)+1)
  9304  0C82  319F  2707  318B   	fcall	__dwt_otpread
  9305  0C85  0141               	movlb	1	; select bank1
  9306  0C86  083D               	movf	?__dwt_otpread^(0+128),w
  9307  0C87  397F               	andlw	127
  9308  0C88  00C7               	movwf	??_dwt_initialise^(0+128)
  9309  0C89  086F               	movf	_pdw3000local^(0+128),w
  9310  0C8A  3E0E               	addlw	14
  9311  0C8B  0086               	movwf	6
  9312  0C8C  3002               	movlw	2	; select bank4/5
  9313  0C8D  0087               	movwf	7
  9314  0C8E  0847               	movf	??_dwt_initialise^(0+128),w
  9315  0C8F  0081               	movwf	1
  9316                           
  9317                           ;deca_device.c: 856: if(pdw3000local->init_xtrim == 0)
  9318  0C90  086F               	movf	_pdw3000local^(0+128),w
  9319  0C91  3E0E               	addlw	14
  9320  0C92  0086               	movwf	6
  9321  0C93  3002               	movlw	2	; select bank4/5
  9322  0C94  0087               	movwf	7
  9323  0C95  0801               	movf	1,w
  9324  0C96  1D03               	btfss	3,2
  9325  0C97  2CA1               	goto	l5571
  9326                           
  9327                           ;deca_device.c: 857: {
  9328                           ;deca_device.c: 858: pdw3000local->init_xtrim = 0x2E ;
  9329  0C98  302E               	movlw	46
  9330  0C99  00C7               	movwf	??_dwt_initialise^(0+128)
  9331  0C9A  086F               	movf	_pdw3000local^(0+128),w
  9332  0C9B  3E0E               	addlw	14
  9333  0C9C  0086               	movwf	6
  9334  0C9D  3002               	movlw	2	; select bank4/5
  9335  0C9E  0087               	movwf	7
  9336  0C9F  0847               	movf	??_dwt_initialise^(0+128),w
  9337  0CA0  0081               	movwf	1
  9338  0CA1                     l5571:	
  9339                           
  9340                           ;deca_device.c: 859: }
  9341                           ;deca_device.c: 860: dwt_write8bitoffsetreg(0x90014, 0, pdw3000local->init_xtrim);
  9342  0CA1  3000               	movlw	0
  9343  0CA2  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
  9344  0CA3  3009               	movlw	9
  9345  0CA4  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
  9346  0CA5  3000               	movlw	0
  9347  0CA6  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
  9348  0CA7  3014               	movlw	20
  9349  0CA8  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
  9350  0CA9  3000               	movlw	0
  9351  0CAA  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
  9352  0CAB  3000               	movlw	0
  9353  0CAC  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
  9354  0CAD  3000               	movlw	0
  9355  0CAE  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
  9356  0CAF  3000               	movlw	0
  9357  0CB0  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
  9358  0CB1  086F               	movf	_pdw3000local^(0+128),w
  9359  0CB2  0086               	movwf	6
  9360  0CB3  3002               	movlw	2	; select bank4/5
  9361  0CB4  0087               	movwf	7
  9362  0CB5  3002               	movlw	2	; select bank4/5
  9363  0CB6  3F4E               	moviw [14]fsr1
  9364  0CB7  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
  9365  0CB8  31A5  25F3         	fcall	_dwt_write8bitoffsetreg
  9366                           
  9367                           ;deca_device.c: 863: return (0) ;
  9368  0CBA  0141               	movlb	1	; select bank1
  9369  0CBB  01C5               	clrf	?_dwt_initialise^(0+128)
  9370  0CBC  01C6               	clrf	(?_dwt_initialise+1)^(0+128)
  9371  0CBD  0008               	return
  9372  0CBE                     __end_of_dwt_initialise:	
  9373                           
  9374                           	psect	text9
  9375  252E                     __ptext9:	
  9376 ;; *************** function _printf_string *****************
  9377 ;; Defined at:
  9378 ;;		line 169 in file "mcc_generated_files/eusart.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  data            2    1[COMMON] PTR const unsigned char 
  9381 ;;		 -> STR_23(9), STR_22(17), STR_21(15), STR_20(12), 
  9382 ;;		 -> STR_19(10), STR_16(15), print_uint64_t@print_data(50), print_uint32_t@print_data(20), 
  9383 ;;		 -> print_uint16_t@print_data(20), print_uint8_t@print_data(20), STR_1(21), 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:        3 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    1
  9402 ;; This function calls:
  9403 ;;		_EUSART_Write
  9404 ;; This function is called by:
  9405 ;;		_main
  9406 ;;		_dwt_initialise
  9407 ;;		_dw_main
  9408 ;;		_print_uint8_t
  9409 ;;		_print_uint16_t
  9410 ;;		_print_uint32_t
  9411 ;;		_print_uint64_t
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _printf_string
  9417  252E                     _printf_string:	
  9418  252E                     l5293:	
  9419                           ;eusart.c: 171: while(*data)
  9420                           
  9421                           ;incstack = 0
  9422                           ; Regs used in _printf_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9423                           
  9424  252E  0871               	movf	printf_string@data,w
  9425  252F  0084               	movwf	4
  9426  2530  0872               	movf	printf_string@data+1,w
  9427  2531  0085               	movwf	5
  9428  2532  0012               	moviw fsr0++
  9429  2533  1903               	btfsc	3,2
  9430  2534  0008               	return
  9431                           
  9432                           ;eusart.c: 172: {
  9433                           ;eusart.c: 173: EUSART_Write(*data++);
  9434  2535  0871               	movf	printf_string@data,w
  9435  2536  0084               	movwf	4
  9436  2537  0872               	movf	printf_string@data+1,w
  9437  2538  0085               	movwf	5
  9438  2539  0800               	movf	0,w	;code access
  9439  253A  31A4  24B5  31A5   	fcall	_EUSART_Write
  9440  253D  3001               	movlw	1
  9441  253E  07F1               	addwf	printf_string@data,f
  9442  253F  3000               	movlw	0
  9443  2540  3DF2               	addwfc	printf_string@data+1,f
  9444  2541  2D2E               	goto	l5293
  9445  2542                     __end_of_printf_string:	
  9446                           
  9447                           	psect	text10
  9448  18A0                     __ptext10:	
  9449 ;; *************** function _dwt_checkidlerc *****************
  9450 ;; Defined at:
  9451 ;;		line 3297 in file "deca_device.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;		None
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  reg             4   24[BANK1 ] unsigned long 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      unsigned char 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9466 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9467 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9468 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9469 ;;Total ram usage:        8 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    8
  9472 ;; This function calls:
  9473 ;;		_dwt_read16bitoffsetreg
  9474 ;; This function is called by:
  9475 ;;		_dwt_initialise
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           
  9480                           ;psect for function _dwt_checkidlerc
  9481  18A0                     _dwt_checkidlerc:	
  9482                           
  9483                           ;deca_device.c: 3301: uint32_t reg = ((uint32_t)dwt_read16bitoffsetreg(0x44, 2) << 16);
  9484                           
  9485                           ;incstack = 0
  9486                           ; Regs used in _dwt_checkidlerc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9487  18A0  3000               	movlw	0
  9488  18A1  0140               	movlb	0	; select bank0
  9489  18A2  00EB               	movwf	dwt_read16bitoffsetreg@regFileID+3
  9490  18A3  3000               	movlw	0
  9491  18A4  00EA               	movwf	dwt_read16bitoffsetreg@regFileID+2
  9492  18A5  3000               	movlw	0
  9493  18A6  00E9               	movwf	dwt_read16bitoffsetreg@regFileID+1
  9494  18A7  3044               	movlw	68
  9495  18A8  00E8               	movwf	dwt_read16bitoffsetreg@regFileID
  9496  18A9  3000               	movlw	0
  9497  18AA  00EF               	movwf	dwt_read16bitoffsetreg@regOffset+3
  9498  18AB  3000               	movlw	0
  9499  18AC  00EE               	movwf	dwt_read16bitoffsetreg@regOffset+2
  9500  18AD  3000               	movlw	0
  9501  18AE  00ED               	movwf	dwt_read16bitoffsetreg@regOffset+1
  9502  18AF  3002               	movlw	2
  9503  18B0  00EC               	movwf	dwt_read16bitoffsetreg@regOffset
  9504  18B1  3199  21E0  3198   	fcall	_dwt_read16bitoffsetreg
  9505  18B4  0140               	movlb	0	; select bank0
  9506  18B5  0868               	movf	?_dwt_read16bitoffsetreg,w
  9507  18B6  0141               	movlb	1	; select bank1
  9508  18B7  00B4               	movwf	??_dwt_checkidlerc^(0+128)
  9509  18B8  0140               	movlb	0	; select bank0
  9510  18B9  0869               	movf	?_dwt_read16bitoffsetreg+1,w
  9511  18BA  0141               	movlb	1	; select bank1
  9512  18BB  00B5               	movwf	(??_dwt_checkidlerc^(0+128)+1)
  9513  18BC  01B6               	clrf	(??_dwt_checkidlerc^(0+128)+2)
  9514  18BD  01B7               	clrf	(??_dwt_checkidlerc^(0+128)+3)
  9515  18BE  3010               	movlw	16
  9516  18BF                     u4985:	
  9517  18BF  35B4               	lslf	??_dwt_checkidlerc^(0+128),f
  9518  18C0  0DB5               	rlf	(??_dwt_checkidlerc^(0+128)+1),f
  9519  18C1  0DB6               	rlf	(??_dwt_checkidlerc^(0+128)+2),f
  9520  18C2  0DB7               	rlf	(??_dwt_checkidlerc^(0+128)+3),f
  9521  18C3  0B89               	decfsz	9,f
  9522  18C4  28BF               	goto	u4985
  9523  18C5  0837               	movf	(??_dwt_checkidlerc+3)^(0+128),w
  9524  18C6  00BB               	movwf	(dwt_checkidlerc@reg+3)^(0+128)
  9525  18C7  0836               	movf	(??_dwt_checkidlerc+2)^(0+128),w
  9526  18C8  00BA               	movwf	(dwt_checkidlerc@reg+2)^(0+128)
  9527  18C9  0835               	movf	(??_dwt_checkidlerc+1)^(0+128),w
  9528  18CA  00B9               	movwf	(dwt_checkidlerc@reg+1)^(0+128)
  9529  18CB  0834               	movf	??_dwt_checkidlerc^(0+128),w
  9530  18CC  00B8               	movwf	dwt_checkidlerc@reg^(0+128)
  9531                           
  9532                           ;deca_device.c: 3302: return ( (reg & (0x1000000UL)) == (0x1000000UL));
  9533  18CD  1C3B               	btfss	(dwt_checkidlerc@reg+3)^(0+128),0
  9534  18CE  28D1               	goto	u4990
  9535  18CF  3001               	movlw	1
  9536  18D0  0008               	return
  9537  18D1                     u4990:	
  9538  18D1  3000               	movlw	0
  9539  18D2  0008               	return
  9540  18D3                     __end_of_dwt_checkidlerc:	
  9541                           
  9542                           	psect	text11
  9543  19A9                     __ptext11:	
  9544 ;; *************** function _dwt_check_dev_id *****************
  9545 ;; Defined at:
  9546 ;;		line 3082 in file "deca_device.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;		None
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;		None
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  2   33[BANK1 ] int 
  9553 ;; Registers used:
  9554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9560 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9563 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9564 ;;Total ram usage:        2 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    9
  9567 ;; This function calls:
  9568 ;;		_dwt_readdevid
  9569 ;; This function is called by:
  9570 ;;		_dwt_initialise
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           
  9575                           ;psect for function _dwt_check_dev_id
  9576  19A9                     _dwt_check_dev_id:	
  9577                           
  9578                           ;deca_device.c: 3086: dev_id = dwt_readdevid();
  9579                           
  9580                           ;incstack = 0
  9581                           ; Regs used in _dwt_check_dev_id: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9582  19A9  31A6  26BD  3199   	fcall	_dwt_readdevid
  9583  19AC  0141               	movlb	1	; select bank1
  9584  19AD  0840               	movf	(?_dwt_readdevid+3)^(0+128),w
  9585  19AE  0142               	movlb	2	; select bank2
  9586  19AF  00BF               	movwf	(_dev_id+3)^(0+256)
  9587  19B0  0141               	movlb	1	; select bank1
  9588  19B1  083F               	movf	(?_dwt_readdevid+2)^(0+128),w
  9589  19B2  0142               	movlb	2	; select bank2
  9590  19B3  00BE               	movwf	(_dev_id+2)^(0+256)
  9591  19B4  0141               	movlb	1	; select bank1
  9592  19B5  083E               	movf	(?_dwt_readdevid+1)^(0+128),w
  9593  19B6  0142               	movlb	2	; select bank2
  9594  19B7  00BD               	movwf	(_dev_id+1)^(0+256)
  9595  19B8  0141               	movlb	1	; select bank1
  9596  19B9  083D               	movf	?_dwt_readdevid^(0+128),w
  9597  19BA  0142               	movlb	2	; select bank2
  9598  19BB  00BC               	movwf	_dev_id^(0+256)
  9599                           
  9600                           ;deca_device.c: 3089: if (!(((0xDECA0312) == dev_id) || ((0xDECA0302) == dev_id)))
  9601  19BC  3012               	movlw	18
  9602  19BD  063C               	xorwf	_dev_id^(0+256),w
  9603  19BE  3003               	movlw	3
  9604  19BF  1903               	skipnz
  9605  19C0  063D               	xorwf	(_dev_id+1)^(0+256),w
  9606  19C1  30CA               	movlw	202
  9607  19C2  1903               	skipnz
  9608  19C3  063E               	xorwf	(_dev_id+2)^(0+256),w
  9609  19C4  30DE               	movlw	222
  9610  19C5  1903               	skipnz
  9611  19C6  063F               	xorwf	(_dev_id+3)^(0+256),w
  9612  19C7  1903               	btfsc	3,2
  9613  19C8  29DC               	goto	l5315
  9614  19C9  3002               	movlw	2
  9615  19CA  063C               	xorwf	_dev_id^(0+256),w
  9616  19CB  3003               	movlw	3
  9617  19CC  1903               	skipnz
  9618  19CD  063D               	xorwf	(_dev_id+1)^(0+256),w
  9619  19CE  30CA               	movlw	202
  9620  19CF  1903               	skipnz
  9621  19D0  063E               	xorwf	(_dev_id+2)^(0+256),w
  9622  19D1  30DE               	movlw	222
  9623  19D2  1903               	skipnz
  9624  19D3  063F               	xorwf	(_dev_id+3)^(0+256),w
  9625  19D4  1903               	btfsc	3,2
  9626  19D5  29DC               	goto	l5315
  9627                           
  9628                           ;deca_device.c: 3090: {
  9629                           ;deca_device.c: 3091: return (-1);
  9630  19D6  30FF               	movlw	255
  9631  19D7  0141               	movlb	1	; select bank1
  9632  19D8  00C1               	movwf	?_dwt_check_dev_id^(0+128)
  9633  19D9  30FF               	movlw	255
  9634  19DA  00C2               	movwf	(?_dwt_check_dev_id^(0+128)+1)
  9635  19DB  0008               	return
  9636  19DC                     l5315:	
  9637                           
  9638                           ;deca_device.c: 3092: }
  9639                           ;deca_device.c: 3093: return (0);
  9640  19DC  0141               	movlb	1	; select bank1
  9641  19DD  01C1               	clrf	?_dwt_check_dev_id^(0+128)
  9642  19DE  01C2               	clrf	(?_dwt_check_dev_id+1)^(0+128)
  9643  19DF  0008               	return
  9644  19E0                     __end_of_dwt_check_dev_id:	
  9645                           
  9646                           	psect	text12
  9647  26BD                     __ptext12:	
  9648 ;; *************** function _dwt_readdevid *****************
  9649 ;; Defined at:
  9650 ;;		line 1083 in file "deca_device.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;		None
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  4   29[BANK1 ] unsigned long 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9664 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9667 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9668 ;;Total ram usage:        4 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    8
  9671 ;; This function calls:
  9672 ;;		_dwt_read32bitoffsetreg
  9673 ;; This function is called by:
  9674 ;;		_dwt_check_dev_id
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _dwt_readdevid
  9680  26BD                     _dwt_readdevid:	
  9681                           
  9682                           ;deca_device.c: 1085: return dwt_read32bitoffsetreg(0x0, 0);
  9683                           
  9684                           ;incstack = 0
  9685                           ; Regs used in _dwt_readdevid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9686  26BD  3000               	movlw	0
  9687  26BE  0140               	movlb	0	; select bank0
  9688  26BF  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
  9689  26C0  3000               	movlw	0
  9690  26C1  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
  9691  26C2  3000               	movlw	0
  9692  26C3  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
  9693  26C4  3000               	movlw	0
  9694  26C5  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
  9695  26C6  3000               	movlw	0
  9696  26C7  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
  9697  26C8  3000               	movlw	0
  9698  26C9  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
  9699  26CA  3000               	movlw	0
  9700  26CB  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
  9701  26CC  3000               	movlw	0
  9702  26CD  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
  9703  26CE  319E  2616         	fcall	_dwt_read32bitoffsetreg
  9704  26D0  0140               	movlb	0	; select bank0
  9705  26D1  086B               	movf	?_dwt_read32bitoffsetreg+3,w
  9706  26D2  0141               	movlb	1	; select bank1
  9707  26D3  00C0               	movwf	(?_dwt_readdevid+3)^(0+128)
  9708  26D4  0140               	movlb	0	; select bank0
  9709  26D5  086A               	movf	?_dwt_read32bitoffsetreg+2,w
  9710  26D6  0141               	movlb	1	; select bank1
  9711  26D7  00BF               	movwf	(?_dwt_readdevid+2)^(0+128)
  9712  26D8  0140               	movlb	0	; select bank0
  9713  26D9  0869               	movf	?_dwt_read32bitoffsetreg+1,w
  9714  26DA  0141               	movlb	1	; select bank1
  9715  26DB  00BE               	movwf	(?_dwt_readdevid+1)^(0+128)
  9716  26DC  0140               	movlb	0	; select bank0
  9717  26DD  0868               	movf	?_dwt_read32bitoffsetreg,w
  9718  26DE  0141               	movlb	1	; select bank1
  9719  26DF  00BD               	movwf	?_dwt_readdevid^(0+128)
  9720  26E0  0008               	return
  9721  26E1                     __end_of_dwt_readdevid:	
  9722                           
  9723                           	psect	text13
  9724  1A64                     __ptext13:	
  9725 ;; *************** function __dwt_prog_ldo_and_bias_tune *****************
  9726 ;; Defined at:
  9727 ;;		line 699 in file "deca_device.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9743 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9744 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9745 ;;Total ram usage:        2 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    7
  9748 ;; This function calls:
  9749 ;;		_dwt_modify16bitoffsetreg
  9750 ;; This function is called by:
  9751 ;;		_dwt_initialise
  9752 ;;		_dwt_restoreconfig
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           
  9757                           ;psect for function __dwt_prog_ldo_and_bias_tune
  9758  1A64                     __dwt_prog_ldo_and_bias_tune:	
  9759                           
  9760                           ;deca_device.c: 701: dwt_modify16bitoffsetreg(0xb0008, 0, -1, (0x180u));
  9761                           
  9762                           ;incstack = 0
  9763                           ; Regs used in __dwt_prog_ldo_and_bias_tune: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9764  1A64  3000               	movlw	0
  9765  1A65  0141               	movlb	1	; select bank1
  9766  1A66  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
  9767  1A67  300B               	movlw	11
  9768  1A68  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
  9769  1A69  3000               	movlw	0
  9770  1A6A  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
  9771  1A6B  3008               	movlw	8
  9772  1A6C  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
  9773  1A6D  3000               	movlw	0
  9774  1A6E  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
  9775  1A6F  3000               	movlw	0
  9776  1A70  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
  9777  1A71  3000               	movlw	0
  9778  1A72  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
  9779  1A73  3000               	movlw	0
  9780  1A74  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
  9781  1A75  30FF               	movlw	255
  9782  1A76  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
  9783  1A77  30FF               	movlw	255
  9784  1A78  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
  9785  1A79  3080               	movlw	128
  9786  1A7A  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
  9787  1A7B  3001               	movlw	1
  9788  1A7C  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
  9789  1A7D  319A  2221  319A   	fcall	_dwt_modify16bitoffsetreg
  9790                           
  9791                           ;deca_device.c: 702: dwt_modify16bitoffsetreg(0x11001f,0,(uint16_t)~0x1fU,pdw3000local->
      +                          bias_tune);
  9792  1A80  3000               	movlw	0
  9793  1A81  0141               	movlb	1	; select bank1
  9794  1A82  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
  9795  1A83  3011               	movlw	17
  9796  1A84  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
  9797  1A85  3000               	movlw	0
  9798  1A86  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
  9799  1A87  301F               	movlw	31
  9800  1A88  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
  9801  1A89  3000               	movlw	0
  9802  1A8A  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
  9803  1A8B  3000               	movlw	0
  9804  1A8C  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
  9805  1A8D  3000               	movlw	0
  9806  1A8E  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
  9807  1A8F  3000               	movlw	0
  9808  1A90  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
  9809  1A91  30E0               	movlw	224
  9810  1A92  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
  9811  1A93  30FF               	movlw	255
  9812  1A94  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
  9813  1A95  086F               	movf	_pdw3000local^(0+128),w
  9814  1A96  3E08               	addlw	8
  9815  1A97  0086               	movwf	6
  9816  1A98  3002               	movlw	2	; select bank4/5
  9817  1A99  0087               	movwf	7
  9818  1A9A  0801               	movf	1,w
  9819  1A9B  0140               	movlb	0	; select bank0
  9820  1A9C  00ED               	movwf	??__dwt_prog_ldo_and_bias_tune
  9821  1A9D  01EE               	clrf	??__dwt_prog_ldo_and_bias_tune+1
  9822  1A9E  086D               	movf	??__dwt_prog_ldo_and_bias_tune,w
  9823  1A9F  0141               	movlb	1	; select bank1
  9824  1AA0  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
  9825  1AA1  0140               	movlb	0	; select bank0
  9826  1AA2  086E               	movf	??__dwt_prog_ldo_and_bias_tune+1,w
  9827  1AA3  0141               	movlb	1	; select bank1
  9828  1AA4  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
  9829  1AA5  319A  2221         	fcall	_dwt_modify16bitoffsetreg
  9830  1AA7  0008               	return
  9831  1AA8                     __end_of__dwt_prog_ldo_and_bias_tune:	
  9832                           
  9833                           	psect	text14
  9834  1F07                     __ptext14:	
  9835 ;; *************** function __dwt_otpread *****************
  9836 ;; Defined at:
  9837 ;;		line 2726 in file "deca_device.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  address         2   29[BANK1 ] unsigned int 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;  ret_data        4   33[BANK1 ] unsigned long 
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  4   29[BANK1 ] unsigned long 
  9844 ;; Registers used:
  9845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9851 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9852 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9854 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9855 ;;Total ram usage:        8 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:    8
  9858 ;; This function calls:
  9859 ;;		_dwt_read32bitoffsetreg
  9860 ;;		_dwt_write16bitoffsetreg
  9861 ;; This function is called by:
  9862 ;;		_dwt_initialise
  9863 ;;		_dwt_otpread
  9864 ;;		_dwt_otpwriteandverify
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           
  9869                           ;psect for function __dwt_otpread
  9870  1F07                     __dwt_otpread:	
  9871                           
  9872                           ;deca_device.c: 2728: uint32_t ret_data = 0;
  9873                           
  9874                           ;incstack = 0
  9875                           ; Regs used in __dwt_otpread: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9876  1F07  3000               	movlw	0
  9877  1F08  0141               	movlb	1	; select bank1
  9878  1F09  00C4               	movwf	(__dwt_otpread@ret_data+3)^(0+128)
  9879  1F0A  3000               	movlw	0
  9880  1F0B  00C3               	movwf	(__dwt_otpread@ret_data+2)^(0+128)
  9881  1F0C  3000               	movlw	0
  9882  1F0D  00C2               	movwf	(__dwt_otpread@ret_data+1)^(0+128)
  9883  1F0E  3000               	movlw	0
  9884  1F0F  00C1               	movwf	__dwt_otpread@ret_data^(0+128)
  9885                           
  9886                           ;deca_device.c: 2731: dwt_write16bitoffsetreg(0xb0008, 0, 0x0001);
  9887  1F10  3000               	movlw	0
  9888  1F11  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
  9889  1F12  300B               	movlw	11
  9890  1F13  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
  9891  1F14  3000               	movlw	0
  9892  1F15  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
  9893  1F16  3008               	movlw	8
  9894  1F17  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
  9895  1F18  3000               	movlw	0
  9896  1F19  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
  9897  1F1A  3000               	movlw	0
  9898  1F1B  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
  9899  1F1C  3000               	movlw	0
  9900  1F1D  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
  9901  1F1E  3000               	movlw	0
  9902  1F1F  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
  9903  1F20  3001               	movlw	1
  9904  1F21  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
  9905  1F22  3000               	movlw	0
  9906  1F23  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
  9907  1F24  3180  2004  319F   	fcall	_dwt_write16bitoffsetreg
  9908                           
  9909                           ;deca_device.c: 2733: dwt_write16bitoffsetreg(0xb0004, 0, address);
  9910  1F27  3000               	movlw	0
  9911  1F28  0141               	movlb	1	; select bank1
  9912  1F29  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
  9913  1F2A  300B               	movlw	11
  9914  1F2B  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
  9915  1F2C  3000               	movlw	0
  9916  1F2D  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
  9917  1F2E  3004               	movlw	4
  9918  1F2F  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
  9919  1F30  3000               	movlw	0
  9920  1F31  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
  9921  1F32  3000               	movlw	0
  9922  1F33  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
  9923  1F34  3000               	movlw	0
  9924  1F35  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
  9925  1F36  3000               	movlw	0
  9926  1F37  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
  9927  1F38  083E               	movf	(__dwt_otpread@address+1)^(0+128),w
  9928  1F39  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
  9929  1F3A  083D               	movf	__dwt_otpread@address^(0+128),w
  9930  1F3B  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
  9931  1F3C  3180  2004  319F   	fcall	_dwt_write16bitoffsetreg
  9932                           
  9933                           ;deca_device.c: 2735: dwt_write16bitoffsetreg(0xb0008, 0, 0x0002);
  9934  1F3F  3000               	movlw	0
  9935  1F40  0141               	movlb	1	; select bank1
  9936  1F41  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
  9937  1F42  300B               	movlw	11
  9938  1F43  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
  9939  1F44  3000               	movlw	0
  9940  1F45  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
  9941  1F46  3008               	movlw	8
  9942  1F47  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
  9943  1F48  3000               	movlw	0
  9944  1F49  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
  9945  1F4A  3000               	movlw	0
  9946  1F4B  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
  9947  1F4C  3000               	movlw	0
  9948  1F4D  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
  9949  1F4E  3000               	movlw	0
  9950  1F4F  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
  9951  1F50  3002               	movlw	2
  9952  1F51  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
  9953  1F52  3000               	movlw	0
  9954  1F53  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
  9955  1F54  3180  2004  319F   	fcall	_dwt_write16bitoffsetreg
  9956                           
  9957                           ;deca_device.c: 2737: ret_data = dwt_read32bitoffsetreg(0xb0010, 0);
  9958  1F57  3000               	movlw	0
  9959  1F58  0140               	movlb	0	; select bank0
  9960  1F59  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
  9961  1F5A  300B               	movlw	11
  9962  1F5B  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
  9963  1F5C  3000               	movlw	0
  9964  1F5D  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
  9965  1F5E  3010               	movlw	16
  9966  1F5F  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
  9967  1F60  3000               	movlw	0
  9968  1F61  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
  9969  1F62  3000               	movlw	0
  9970  1F63  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
  9971  1F64  3000               	movlw	0
  9972  1F65  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
  9973  1F66  3000               	movlw	0
  9974  1F67  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
  9975  1F68  319E  2616         	fcall	_dwt_read32bitoffsetreg
  9976  1F6A  0140               	movlb	0	; select bank0
  9977  1F6B  086B               	movf	?_dwt_read32bitoffsetreg+3,w
  9978  1F6C  0141               	movlb	1	; select bank1
  9979  1F6D  00C4               	movwf	(__dwt_otpread@ret_data+3)^(0+128)
  9980  1F6E  0140               	movlb	0	; select bank0
  9981  1F6F  086A               	movf	?_dwt_read32bitoffsetreg+2,w
  9982  1F70  0141               	movlb	1	; select bank1
  9983  1F71  00C3               	movwf	(__dwt_otpread@ret_data+2)^(0+128)
  9984  1F72  0140               	movlb	0	; select bank0
  9985  1F73  0869               	movf	?_dwt_read32bitoffsetreg+1,w
  9986  1F74  0141               	movlb	1	; select bank1
  9987  1F75  00C2               	movwf	(__dwt_otpread@ret_data+1)^(0+128)
  9988  1F76  0140               	movlb	0	; select bank0
  9989  1F77  0868               	movf	?_dwt_read32bitoffsetreg,w
  9990  1F78  0141               	movlb	1	; select bank1
  9991  1F79  00C1               	movwf	__dwt_otpread@ret_data^(0+128)
  9992                           
  9993                           ;deca_device.c: 2740: return ret_data;
  9994  1F7A  0844               	movf	(__dwt_otpread@ret_data+3)^(0+128),w
  9995  1F7B  00C0               	movwf	(?__dwt_otpread+3)^(0+128)
  9996  1F7C  0843               	movf	(__dwt_otpread@ret_data+2)^(0+128),w
  9997  1F7D  00BF               	movwf	(?__dwt_otpread+2)^(0+128)
  9998  1F7E  0842               	movf	(__dwt_otpread@ret_data+1)^(0+128),w
  9999  1F7F  00BE               	movwf	(?__dwt_otpread+1)^(0+128)
 10000  1F80  0841               	movf	__dwt_otpread@ret_data^(0+128),w
 10001  1F81  00BD               	movwf	?__dwt_otpread^(0+128)
 10002  1F82  0008               	return
 10003  1F83                     __end_of__dwt_otpread:	
 10004                           
 10005                           	psect	text15
 10006  1E8B                     __ptext15:	
 10007 ;; *************** function _dwt_configuretxrf *****************
 10008 ;; Defined at:
 10009 ;;		line 1101 in file "deca_device.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  config          1    wreg     PTR struct .
 10012 ;;		 -> txconfig_options_ch9(7), 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  config          1   38[BANK1 ] PTR struct .
 10015 ;;		 -> txconfig_options_ch9(7), 
 10016 ;;  channel         1   37[BANK1 ] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      void 
 10019 ;; Registers used:
 10020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10027 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10028 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10029 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10030 ;;Total ram usage:        4 bytes
 10031 ;; Hardware stack levels used:    1
 10032 ;; Hardware stack levels required when called:   10
 10033 ;; This function calls:
 10034 ;;		_dwt_calcbandwidthadj
 10035 ;;		_dwt_read8bitoffsetreg
 10036 ;;		_dwt_write32bitoffsetreg
 10037 ;;		_dwt_write8bitoffsetreg
 10038 ;; This function is called by:
 10039 ;;		_dw_main
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           
 10044                           ;psect for function _dwt_configuretxrf
 10045  1E8B                     _dwt_configuretxrf:	
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in _dwt_configuretxrf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10049                           ;dwt_configuretxrf@config stored from wreg
 10050  1E8B  0141               	movlb	1	; select bank1
 10051  1E8C  00C6               	movwf	dwt_configuretxrf@config^(0+128)
 10052                           
 10053                           ;deca_device.c: 1103: if (config->PGcount == 0) {
 10054  1E8D  0846               	movf	dwt_configuretxrf@config^(0+128),w
 10055  1E8E  3E05               	addlw	5
 10056  1E8F  0086               	movwf	6
 10057  1E90  3001               	movlw	1	; select bank2/3
 10058  1E91  0087               	movwf	7
 10059  1E92  0016               	moviw fsr1++
 10060  1E93  0401               	iorwf	1,w
 10061  1E94  1D03               	btfss	3,2
 10062  1E95  2EB2               	goto	l5587
 10063                           
 10064                           ;deca_device.c: 1105: dwt_write8bitoffsetreg(0x7001c, 0, config->PGdly);
 10065  1E96  3000               	movlw	0
 10066  1E97  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 10067  1E98  3007               	movlw	7
 10068  1E99  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 10069  1E9A  3000               	movlw	0
 10070  1E9B  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 10071  1E9C  301C               	movlw	28
 10072  1E9D  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 10073  1E9E  3000               	movlw	0
 10074  1E9F  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 10075  1EA0  3000               	movlw	0
 10076  1EA1  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 10077  1EA2  3000               	movlw	0
 10078  1EA3  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 10079  1EA4  3000               	movlw	0
 10080  1EA5  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 10081  1EA6  0846               	movf	dwt_configuretxrf@config^(0+128),w
 10082  1EA7  0086               	movwf	6
 10083  1EA8  3001               	movlw	1	; select bank2/3
 10084  1EA9  0087               	movwf	7
 10085  1EAA  0801               	movf	1,w
 10086  1EAB  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 10087  1EAC  0843               	movf	??_dwt_configuretxrf^(0+128),w
 10088  1EAD  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 10089  1EAE  31A5  25F3  319E   	fcall	_dwt_write8bitoffsetreg
 10090                           
 10091                           ;deca_device.c: 1106: }
 10092  1EB1  2EE7               	goto	l5595
 10093  1EB2                     l5587:	
 10094                           
 10095                           ;deca_device.c: 1107: else
 10096                           ;deca_device.c: 1108: {
 10097                           ;deca_device.c: 1109: uint8_t channel = 5;
 10098  1EB2  3005               	movlw	5
 10099  1EB3  0141               	movlb	1	; select bank1
 10100  1EB4  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 10101  1EB5  0843               	movf	??_dwt_configuretxrf^(0+128),w
 10102  1EB6  00C5               	movwf	dwt_configuretxrf@channel^(0+128)
 10103                           
 10104                           ;deca_device.c: 1110: if (dwt_read8bitoffsetreg(0x10014, 0) & 0x1)
 10105  1EB7  3000               	movlw	0
 10106  1EB8  0140               	movlb	0	; select bank0
 10107  1EB9  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 10108  1EBA  3001               	movlw	1
 10109  1EBB  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 10110  1EBC  3000               	movlw	0
 10111  1EBD  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 10112  1EBE  3014               	movlw	20
 10113  1EBF  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 10114  1EC0  3000               	movlw	0
 10115  1EC1  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 10116  1EC2  3000               	movlw	0
 10117  1EC3  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 10118  1EC4  3000               	movlw	0
 10119  1EC5  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 10120  1EC6  3000               	movlw	0
 10121  1EC7  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 10122  1EC8  31A6  269C  319E   	fcall	_dwt_read8bitoffsetreg
 10123  1ECB  3901               	andlw	1
 10124  1ECC  1903               	btfsc	3,2
 10125  1ECD  2ED3               	goto	l5593
 10126                           
 10127                           ;deca_device.c: 1111: {
 10128                           ;deca_device.c: 1112: channel = 9;
 10129  1ECE  3009               	movlw	9
 10130  1ECF  0141               	movlb	1	; select bank1
 10131  1ED0  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 10132  1ED1  0843               	movf	??_dwt_configuretxrf^(0+128),w
 10133  1ED2  00C5               	movwf	dwt_configuretxrf@channel^(0+128)
 10134  1ED3                     l5593:	
 10135                           
 10136                           ;deca_device.c: 1113: }
 10137                           ;deca_device.c: 1114: dwt_calcbandwidthadj(config->PGcount, channel);
 10138  1ED3  0141               	movlb	1	; select bank1
 10139  1ED4  0846               	movf	dwt_configuretxrf@config^(0+128),w
 10140  1ED5  3E05               	addlw	5
 10141  1ED6  0086               	movwf	6
 10142  1ED7  3001               	movlw	1	; select bank2/3
 10143  1ED8  0087               	movwf	7
 10144  1ED9  3F40               	moviw [0]fsr1
 10145  1EDA  00BD               	movwf	dwt_calcbandwidthadj@target_count^(0+128)
 10146  1EDB  3F41               	moviw [1]fsr1
 10147  1EDC  00BE               	movwf	(dwt_calcbandwidthadj@target_count+1)^(0+128)
 10148  1EDD  0845               	movf	dwt_configuretxrf@channel^(0+128),w
 10149  1EDE  00C3               	movwf	??_dwt_configuretxrf^(0+128)
 10150  1EDF  01C4               	clrf	(??_dwt_configuretxrf^(0+128)+1)
 10151  1EE0  0843               	movf	??_dwt_configuretxrf^(0+128),w
 10152  1EE1  00BF               	movwf	dwt_calcbandwidthadj@channel^(0+128)
 10153  1EE2  0844               	movf	(??_dwt_configuretxrf+1)^(0+128),w
 10154  1EE3  00C0               	movwf	(dwt_calcbandwidthadj@channel+1)^(0+128)
 10155  1EE4  3191  2170  319E   	fcall	_dwt_calcbandwidthadj
 10156  1EE7                     l5595:	
 10157                           
 10158                           ;deca_device.c: 1115: }
 10159                           ;deca_device.c: 1118: dwt_write32bitoffsetreg(0x1000c,0,config->power);
 10160  1EE7  3000               	movlw	0
 10161  1EE8  0141               	movlb	1	; select bank1
 10162  1EE9  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 10163  1EEA  3001               	movlw	1
 10164  1EEB  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 10165  1EEC  3000               	movlw	0
 10166  1EED  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 10167  1EEE  300C               	movlw	12
 10168  1EEF  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 10169  1EF0  3000               	movlw	0
 10170  1EF1  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 10171  1EF2  3000               	movlw	0
 10172  1EF3  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 10173  1EF4  3000               	movlw	0
 10174  1EF5  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 10175  1EF6  3000               	movlw	0
 10176  1EF7  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 10177  1EF8  0A46               	incf	dwt_configuretxrf@config^(0+128),w
 10178  1EF9  0086               	movwf	6
 10179  1EFA  3001               	movlw	1	; select bank2/3
 10180  1EFB  0087               	movwf	7
 10181  1EFC  3F40               	moviw [0]fsr1
 10182  1EFD  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 10183  1EFE  3F41               	moviw [1]fsr1
 10184  1EFF  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 10185  1F00  3F42               	moviw [2]fsr1
 10186  1F01  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 10187  1F02  3F43               	moviw [3]fsr1
 10188  1F03  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 10189  1F04  319B  2336         	fcall	_dwt_write32bitoffsetreg
 10190  1F06  0008               	return
 10191  1F07                     __end_of_dwt_configuretxrf:	
 10192                           
 10193                           	psect	text16
 10194  1170                     __ptext16:	
 10195 ;; *************** function _dwt_calcbandwidthadj *****************
 10196 ;; Defined at:
 10197 ;;		line 4481 in file "deca_device.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  target_count    2   29[BANK1 ] unsigned int 
 10200 ;;  channel         2   31[BANK1 ] int 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;		None
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      unsigned char 
 10205 ;; Registers used:
 10206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10212 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10214 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10215 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10216 ;;Total ram usage:        6 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; Hardware stack levels required when called:    9
 10219 ;; This function calls:
 10220 ;;		_dwt_disable_rf_tx
 10221 ;;		_dwt_disable_rftx_blocks
 10222 ;;		_dwt_enable_rf_tx
 10223 ;;		_dwt_enable_rftx_blocks
 10224 ;;		_dwt_force_clocks
 10225 ;;		_dwt_modify8bitoffsetreg
 10226 ;;		_dwt_read8bitoffsetreg
 10227 ;;		_dwt_write16bitoffsetreg
 10228 ;; This function is called by:
 10229 ;;		_dwt_configuretxrf
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           
 10234                           ;psect for function _dwt_calcbandwidthadj
 10235  1170                     _dwt_calcbandwidthadj:	
 10236                           
 10237                           ;deca_device.c: 4484: dwt_force_clocks((1));
 10238                           
 10239                           ;incstack = 0
 10240                           ; Regs used in _dwt_calcbandwidthadj: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10241  1170  3001               	movlw	1
 10242  1171  0140               	movlb	0	; select bank0
 10243  1172  00EB               	movwf	dwt_force_clocks@clocks
 10244  1173  3000               	movlw	0
 10245  1174  00EC               	movwf	dwt_force_clocks@clocks+1
 10246  1175  319A  22A8  3191   	fcall	_dwt_force_clocks
 10247                           
 10248                           ;deca_device.c: 4485: dwt_enable_rf_tx(channel, 0);
 10249  1178  0141               	movlb	1	; select bank1
 10250  1179  083F               	movf	dwt_calcbandwidthadj@channel^(0+128),w
 10251  117A  00B8               	movwf	dwt_enable_rf_tx@channel^(0+128)
 10252  117B  0840               	movf	(dwt_calcbandwidthadj@channel+1)^(0+128),w
 10253  117C  00B9               	movwf	(dwt_enable_rf_tx@channel+1)^(0+128)
 10254  117D  0D89               	rlf	9,f
 10255  117E  3B89               	subwfb	9,f
 10256  117F  0989               	comf	9,f
 10257  1180  00BA               	movwf	(dwt_enable_rf_tx@channel+2)^(0+128)
 10258  1181  00BB               	movwf	(dwt_enable_rf_tx@channel+3)^(0+128)
 10259  1182  01BC               	clrf	dwt_enable_rf_tx@switch_control^(0+128)
 10260  1183  3192  2203  3191   	fcall	_dwt_enable_rf_tx
 10261                           
 10262                           ;deca_device.c: 4486: dwt_enable_rftx_blocks(channel);
 10263  1186  0141               	movlb	1	; select bank1
 10264  1187  083F               	movf	dwt_calcbandwidthadj@channel^(0+128),w
 10265  1188  00B8               	movwf	dwt_enable_rftx_blocks@channel^(0+128)
 10266  1189  0840               	movf	(dwt_calcbandwidthadj@channel+1)^(0+128),w
 10267  118A  00B9               	movwf	(dwt_enable_rftx_blocks@channel+1)^(0+128)
 10268  118B  0D89               	rlf	9,f
 10269  118C  3B89               	subwfb	9,f
 10270  118D  0989               	comf	9,f
 10271  118E  00BA               	movwf	(dwt_enable_rftx_blocks@channel+2)^(0+128)
 10272  118F  00BB               	movwf	(dwt_enable_rftx_blocks@channel+3)^(0+128)
 10273  1190  3190  2001  3191   	fcall	_dwt_enable_rftx_blocks
 10274                           
 10275                           ;deca_device.c: 4489: dwt_write16bitoffsetreg(0x8001c, 0x0, target_count & 0xfffU);
 10276  1193  3000               	movlw	0
 10277  1194  0141               	movlb	1	; select bank1
 10278  1195  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 10279  1196  3008               	movlw	8
 10280  1197  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 10281  1198  3000               	movlw	0
 10282  1199  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 10283  119A  301C               	movlw	28
 10284  119B  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 10285  119C  3000               	movlw	0
 10286  119D  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 10287  119E  3000               	movlw	0
 10288  119F  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 10289  11A0  3000               	movlw	0
 10290  11A1  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 10291  11A2  3000               	movlw	0
 10292  11A3  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 10293  11A4  30FF               	movlw	255
 10294  11A5  053D               	andwf	dwt_calcbandwidthadj@target_count^(0+128),w
 10295  11A6  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 10296  11A7  300F               	movlw	15
 10297  11A8  053E               	andwf	(dwt_calcbandwidthadj@target_count+1)^(0+128),w
 10298  11A9  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 10299  11AA  3180  2004  3191   	fcall	_dwt_write16bitoffsetreg
 10300                           
 10301                           ;deca_device.c: 4491: dwt_modify8bitoffsetreg(0x80010, 0x0, -1, (uint8_t)(0x1U | 0x2U));
 10302  11AD  3000               	movlw	0
 10303  11AE  0141               	movlb	1	; select bank1
 10304  11AF  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 10305  11B0  3008               	movlw	8
 10306  11B1  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 10307  11B2  3000               	movlw	0
 10308  11B3  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 10309  11B4  3010               	movlw	16
 10310  11B5  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 10311  11B6  3000               	movlw	0
 10312  11B7  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 10313  11B8  3000               	movlw	0
 10314  11B9  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 10315  11BA  3000               	movlw	0
 10316  11BB  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 10317  11BC  3000               	movlw	0
 10318  11BD  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 10319  11BE  30FF               	movlw	255
 10320  11BF  00C1               	movwf	??_dwt_calcbandwidthadj^(0+128)
 10321  11C0  0841               	movf	??_dwt_calcbandwidthadj^(0+128),w
 10322  11C1  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 10323  11C2  3003               	movlw	3
 10324  11C3  00C2               	movwf	(??_dwt_calcbandwidthadj+1)^(0+128)
 10325  11C4  0842               	movf	(??_dwt_calcbandwidthadj+1)^(0+128),w
 10326  11C5  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 10327  11C6  3199  2172  3191   	fcall	_dwt_modify8bitoffsetreg
 10328  11C9                     l5349:	
 10329                           ;deca_device.c: 4493: while (dwt_read8bitoffsetreg(0x80010, 0) & 0x1U);
 10330                           
 10331  11C9  3000               	movlw	0
 10332  11CA  0140               	movlb	0	; select bank0
 10333  11CB  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 10334  11CC  3008               	movlw	8
 10335  11CD  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 10336  11CE  3000               	movlw	0
 10337  11CF  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 10338  11D0  3010               	movlw	16
 10339  11D1  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 10340  11D2  3000               	movlw	0
 10341  11D3  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 10342  11D4  3000               	movlw	0
 10343  11D5  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 10344  11D6  3000               	movlw	0
 10345  11D7  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 10346  11D8  3000               	movlw	0
 10347  11D9  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 10348  11DA  31A6  269C  3191   	fcall	_dwt_read8bitoffsetreg
 10349  11DD  3901               	andlw	1
 10350  11DE  1D03               	btfss	3,2
 10351  11DF  29C9               	goto	l5349
 10352                           
 10353                           ;deca_device.c: 4496: dwt_disable_rftx_blocks();
 10354  11E0  31A6  262B  3191   	fcall	_dwt_disable_rftx_blocks
 10355                           
 10356                           ;deca_device.c: 4497: dwt_disable_rf_tx(0);
 10357  11E3  3000               	movlw	0
 10358  11E4  319C  2423  3191   	fcall	_dwt_disable_rf_tx
 10359                           
 10360                           ;deca_device.c: 4498: dwt_force_clocks((5));
 10361  11E7  3005               	movlw	5
 10362  11E8  0140               	movlb	0	; select bank0
 10363  11E9  00EB               	movwf	dwt_force_clocks@clocks
 10364  11EA  3000               	movlw	0
 10365  11EB  00EC               	movwf	dwt_force_clocks@clocks+1
 10366  11EC  319A  22A8  3191   	fcall	_dwt_force_clocks
 10367                           
 10368                           ;deca_device.c: 4500: return (dwt_read8bitoffsetreg(0x7001c, 0) & 0x3fU);
 10369                           ;	Return value of _dwt_calcbandwidthadj is never used
 10370  11EF  3000               	movlw	0
 10371  11F0  0140               	movlb	0	; select bank0
 10372  11F1  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 10373  11F2  3007               	movlw	7
 10374  11F3  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 10375  11F4  3000               	movlw	0
 10376  11F5  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 10377  11F6  301C               	movlw	28
 10378  11F7  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 10379  11F8  3000               	movlw	0
 10380  11F9  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 10381  11FA  3000               	movlw	0
 10382  11FB  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 10383  11FC  3000               	movlw	0
 10384  11FD  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 10385  11FE  3000               	movlw	0
 10386  11FF  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 10387  1200  31A6  269C         	fcall	_dwt_read8bitoffsetreg
 10388  1202  0008               	return
 10389  1203                     __end_of_dwt_calcbandwidthadj:	
 10390                           
 10391                           	psect	text17
 10392  1001                     __ptext17:	
 10393 ;; *************** function _dwt_enable_rftx_blocks *****************
 10394 ;; Defined at:
 10395 ;;		line 4265 in file "deca_device.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  channel         4   24[BANK1 ] unsigned long 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;		None
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10409 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10412 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10413 ;;Total ram usage:        4 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    7
 10416 ;; This function calls:
 10417 ;;		_dwt_modify32bitoffsetreg
 10418 ;; This function is called by:
 10419 ;;		_dwt_calcbandwidthadj
 10420 ;;		_dwt_configcwmode
 10421 ;;		_dwt_configcontinuousframemode
 10422 ;;		_dwt_calcpgcount
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           
 10427                           ;psect for function _dwt_enable_rftx_blocks
 10428  1001                     _dwt_enable_rftx_blocks:	
 10429                           
 10430                           ;deca_device.c: 4267: if (channel == (5))
 10431                           
 10432                           ;incstack = 0
 10433                           ; Regs used in _dwt_enable_rftx_blocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10434  1001  3005               	movlw	5
 10435  1002  0141               	movlb	1	; select bank1
 10436  1003  0638               	xorwf	dwt_enable_rftx_blocks@channel^(0+128),w
 10437  1004  0439               	iorwf	(dwt_enable_rftx_blocks@channel+1)^(0+128),w
 10438  1005  043A               	iorwf	(dwt_enable_rftx_blocks@channel+2)^(0+128),w
 10439  1006  043B               	iorwf	(dwt_enable_rftx_blocks@channel+3)^(0+128),w
 10440  1007  1D03               	btfss	3,2
 10441  1008  282C               	goto	l5235
 10442                           
 10443                           ;deca_device.c: 4268: {
 10444                           ;deca_device.c: 4269: dwt_modify32bitoffsetreg(0x70004, 0, -1, (0x2000000UL | 0x2000U | 
      +                          0x1000U | 0x800U | 0x400U));
 10445  1009  3000               	movlw	0
 10446  100A  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 10447  100B  3007               	movlw	7
 10448  100C  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 10449  100D  3000               	movlw	0
 10450  100E  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 10451  100F  3004               	movlw	4
 10452  1010  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 10453  1011  3000               	movlw	0
 10454  1012  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 10455  1013  3000               	movlw	0
 10456  1014  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 10457  1015  3000               	movlw	0
 10458  1016  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 10459  1017  3000               	movlw	0
 10460  1018  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 10461  1019  30FF               	movlw	255
 10462  101A  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 10463  101B  30FF               	movlw	255
 10464  101C  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 10465  101D  30FF               	movlw	255
 10466  101E  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 10467  101F  30FF               	movlw	255
 10468  1020  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 10469  1021  3002               	movlw	2
 10470  1022  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 10471  1023  3000               	movlw	0
 10472  1024  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 10473  1025  303C               	movlw	60
 10474  1026  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 10475  1027  3000               	movlw	0
 10476  1028  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 10477  1029  3193  2368         	fcall	_dwt_modify32bitoffsetreg
 10478                           
 10479                           ;deca_device.c: 4272: }
 10480  102B  0008               	return
 10481  102C                     l5235:	
 10482                           
 10483                           ;deca_device.c: 4273: else if (channel == (9))
 10484  102C  3009               	movlw	9
 10485  102D  0141               	movlb	1	; select bank1
 10486  102E  0638               	xorwf	dwt_enable_rftx_blocks@channel^(0+128),w
 10487  102F  0439               	iorwf	(dwt_enable_rftx_blocks@channel+1)^(0+128),w
 10488  1030  043A               	iorwf	(dwt_enable_rftx_blocks@channel+2)^(0+128),w
 10489  1031  043B               	iorwf	(dwt_enable_rftx_blocks@channel+3)^(0+128),w
 10490  1032  1D03               	btfss	3,2
 10491  1033  0008               	return
 10492                           
 10493                           ;deca_device.c: 4274: {
 10494                           ;deca_device.c: 4275: dwt_modify32bitoffsetreg(0x70004, 0, -1, (0x2000000UL | 0x1000U | 
      +                          0x800U | 0x400U));
 10495  1034  3000               	movlw	0
 10496  1035  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 10497  1036  3007               	movlw	7
 10498  1037  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 10499  1038  3000               	movlw	0
 10500  1039  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 10501  103A  3004               	movlw	4
 10502  103B  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 10503  103C  3000               	movlw	0
 10504  103D  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 10505  103E  3000               	movlw	0
 10506  103F  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 10507  1040  3000               	movlw	0
 10508  1041  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 10509  1042  3000               	movlw	0
 10510  1043  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 10511  1044  30FF               	movlw	255
 10512  1045  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 10513  1046  30FF               	movlw	255
 10514  1047  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 10515  1048  30FF               	movlw	255
 10516  1049  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 10517  104A  30FF               	movlw	255
 10518  104B  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 10519  104C  3002               	movlw	2
 10520  104D  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 10521  104E  3000               	movlw	0
 10522  104F  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 10523  1050  301C               	movlw	28
 10524  1051  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 10525  1052  3000               	movlw	0
 10526  1053  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 10527  1054  3193  2368         	fcall	_dwt_modify32bitoffsetreg
 10528  1056  0008               	return
 10529  1057                     __end_of_dwt_enable_rftx_blocks:	
 10530                           
 10531                           	psect	text18
 10532  1203                     __ptext18:	
 10533 ;; *************** function _dwt_enable_rf_tx *****************
 10534 ;; Defined at:
 10535 ;;		line 4172 in file "deca_device.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  channel         4   24[BANK1 ] unsigned long 
 10538 ;;  switch_contr    1   28[BANK1 ] unsigned char 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;		None
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10550 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10553 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10554 ;;Total ram usage:        5 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:    8
 10557 ;; This function calls:
 10558 ;;		_dwt_modify32bitoffsetreg
 10559 ;;		_dwt_write32bitoffsetreg
 10560 ;; This function is called by:
 10561 ;;		_dwt_calcbandwidthadj
 10562 ;;		_dwt_configcwmode
 10563 ;;		_dwt_configcontinuousframemode
 10564 ;;		_dwt_calcpgcount
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           
 10569                           ;psect for function _dwt_enable_rf_tx
 10570  1203                     _dwt_enable_rf_tx:	
 10571                           
 10572                           ;deca_device.c: 4175: dwt_modify32bitoffsetreg(0x70048, 0, -1, (0x8000000UL | 0x800U));
 10573                           
 10574                           ;incstack = 0
 10575                           ; Regs used in _dwt_enable_rf_tx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10576  1203  3000               	movlw	0
 10577  1204  0141               	movlb	1	; select bank1
 10578  1205  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 10579  1206  3007               	movlw	7
 10580  1207  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 10581  1208  3000               	movlw	0
 10582  1209  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 10583  120A  3048               	movlw	72
 10584  120B  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 10585  120C  3000               	movlw	0
 10586  120D  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 10587  120E  3000               	movlw	0
 10588  120F  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 10589  1210  3000               	movlw	0
 10590  1211  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 10591  1212  3000               	movlw	0
 10592  1213  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 10593  1214  30FF               	movlw	255
 10594  1215  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 10595  1216  30FF               	movlw	255
 10596  1217  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 10597  1218  30FF               	movlw	255
 10598  1219  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 10599  121A  30FF               	movlw	255
 10600  121B  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 10601  121C  3008               	movlw	8
 10602  121D  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 10603  121E  3000               	movlw	0
 10604  121F  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 10605  1220  3008               	movlw	8
 10606  1221  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 10607  1222  3000               	movlw	0
 10608  1223  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 10609  1224  3193  2368  3192   	fcall	_dwt_modify32bitoffsetreg
 10610                           
 10611                           ;deca_device.c: 4177: dwt_modify32bitoffsetreg(0x70048, 0, -1, (0x400000UL | 0x200000UL 
      +                          | 0x40U | 0x20U));
 10612  1227  3000               	movlw	0
 10613  1228  0141               	movlb	1	; select bank1
 10614  1229  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 10615  122A  3007               	movlw	7
 10616  122B  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 10617  122C  3000               	movlw	0
 10618  122D  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 10619  122E  3048               	movlw	72
 10620  122F  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 10621  1230  3000               	movlw	0
 10622  1231  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 10623  1232  3000               	movlw	0
 10624  1233  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 10625  1234  3000               	movlw	0
 10626  1235  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 10627  1236  3000               	movlw	0
 10628  1237  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 10629  1238  30FF               	movlw	255
 10630  1239  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 10631  123A  30FF               	movlw	255
 10632  123B  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 10633  123C  30FF               	movlw	255
 10634  123D  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 10635  123E  30FF               	movlw	255
 10636  123F  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 10637  1240  3000               	movlw	0
 10638  1241  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 10639  1242  3060               	movlw	96
 10640  1243  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 10641  1244  3000               	movlw	0
 10642  1245  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 10643  1246  3060               	movlw	96
 10644  1247  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 10645  1248  3193  2368  3192   	fcall	_dwt_modify32bitoffsetreg
 10646                           
 10647                           ;deca_device.c: 4183: if (channel == (5))
 10648  124B  3005               	movlw	5
 10649  124C  0141               	movlb	1	; select bank1
 10650  124D  0638               	xorwf	dwt_enable_rf_tx@channel^(0+128),w
 10651  124E  0439               	iorwf	(dwt_enable_rf_tx@channel+1)^(0+128),w
 10652  124F  043A               	iorwf	(dwt_enable_rf_tx@channel+2)^(0+128),w
 10653  1250  043B               	iorwf	(dwt_enable_rf_tx@channel+3)^(0+128),w
 10654  1251  1D03               	btfss	3,2
 10655  1252  2A71               	goto	l5225
 10656                           
 10657                           ;deca_device.c: 4184: {
 10658                           ;deca_device.c: 4185: dwt_modify32bitoffsetreg(0x70000, 0, -1, (0x2000000UL | 0x2000U | 
      +                          0x1000U | 0x800U | 0x400U));
 10659  1253  3000               	movlw	0
 10660  1254  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 10661  1255  3007               	movlw	7
 10662  1256  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 10663  1257  3000               	movlw	0
 10664  1258  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 10665  1259  3000               	movlw	0
 10666  125A  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 10667  125B  3000               	movlw	0
 10668  125C  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 10669  125D  3000               	movlw	0
 10670  125E  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 10671  125F  3000               	movlw	0
 10672  1260  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 10673  1261  3000               	movlw	0
 10674  1262  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 10675  1263  30FF               	movlw	255
 10676  1264  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 10677  1265  30FF               	movlw	255
 10678  1266  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 10679  1267  30FF               	movlw	255
 10680  1268  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 10681  1269  30FF               	movlw	255
 10682  126A  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 10683  126B  3002               	movlw	2
 10684  126C  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 10685  126D  3000               	movlw	0
 10686  126E  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 10687  126F  303C               	movlw	60
 10688  1270  2A8F               	goto	L3
 10689  1271                     l5225:	
 10690                           ;deca_device.c: 4188: }
 10691                           
 10692                           
 10693                           ;deca_device.c: 4189: else
 10694                           ;deca_device.c: 4190: {
 10695                           ;deca_device.c: 4191: dwt_modify32bitoffsetreg(0x70000, 0, -1, (0x2000000UL | 0x1000U | 
      +                          0x800U | 0x400U));
 10696  1271  3000               	movlw	0
 10697  1272  0141               	movlb	1	; select bank1
 10698  1273  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 10699  1274  3007               	movlw	7
 10700  1275  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 10701  1276  3000               	movlw	0
 10702  1277  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 10703  1278  3000               	movlw	0
 10704  1279  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 10705  127A  3000               	movlw	0
 10706  127B  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 10707  127C  3000               	movlw	0
 10708  127D  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 10709  127E  3000               	movlw	0
 10710  127F  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 10711  1280  3000               	movlw	0
 10712  1281  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 10713  1282  30FF               	movlw	255
 10714  1283  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 10715  1284  30FF               	movlw	255
 10716  1285  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 10717  1286  30FF               	movlw	255
 10718  1287  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 10719  1288  30FF               	movlw	255
 10720  1289  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 10721  128A  3002               	movlw	2
 10722  128B  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 10723  128C  3000               	movlw	0
 10724  128D  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 10725  128E  301C               	movlw	28
 10726  128F                     L3:	
 10727  128F  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 10728  1290  3000               	movlw	0
 10729  1291  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 10730  1292  3193  2368  3192   	fcall	_dwt_modify32bitoffsetreg
 10731                           
 10732                           ;deca_device.c: 4194: }
 10733                           ;deca_device.c: 4196: if (switch_control)
 10734  1295  0141               	movlb	1	; select bank1
 10735  1296  083C               	movf	dwt_enable_rf_tx@switch_control^(0+128),w
 10736  1297  1903               	btfsc	3,2
 10737  1298  0008               	return
 10738                           
 10739                           ;deca_device.c: 4197: {
 10740                           ;deca_device.c: 4199: dwt_write32bitoffsetreg(0x70014, 0x0, 0x01011100);
 10741  1299  3000               	movlw	0
 10742  129A  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 10743  129B  3007               	movlw	7
 10744  129C  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 10745  129D  3000               	movlw	0
 10746  129E  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 10747  129F  3014               	movlw	20
 10748  12A0  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 10749  12A1  3000               	movlw	0
 10750  12A2  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 10751  12A3  3000               	movlw	0
 10752  12A4  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 10753  12A5  3000               	movlw	0
 10754  12A6  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 10755  12A7  3000               	movlw	0
 10756  12A8  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 10757  12A9  3001               	movlw	1
 10758  12AA  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 10759  12AB  3001               	movlw	1
 10760  12AC  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 10761  12AD  3011               	movlw	17
 10762  12AE  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 10763  12AF  3000               	movlw	0
 10764  12B0  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 10765  12B1  319B  2336         	fcall	_dwt_write32bitoffsetreg
 10766  12B3  0008               	return
 10767  12B4                     __end_of_dwt_enable_rf_tx:	
 10768                           
 10769                           	psect	text19
 10770  262B                     __ptext19:	
 10771 ;; *************** function _dwt_disable_rftx_blocks *****************
 10772 ;; Defined at:
 10773 ;;		line 4293 in file "deca_device.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;		None
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;		None
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1    wreg      void 
 10780 ;; Registers used:
 10781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10791 ;;Total ram usage:        0 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:    8
 10794 ;; This function calls:
 10795 ;;		_dwt_write32bitoffsetreg
 10796 ;; This function is called by:
 10797 ;;		_dwt_calcbandwidthadj
 10798 ;;		_dwt_calcpgcount
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           
 10803                           ;psect for function _dwt_disable_rftx_blocks
 10804  262B                     _dwt_disable_rftx_blocks:	
 10805                           
 10806                           ;deca_device.c: 4295: dwt_write32bitoffsetreg(0x70004, 0, 0x00000000);
 10807                           
 10808                           ;incstack = 0
 10809                           ; Regs used in _dwt_disable_rftx_blocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10810  262B  3000               	movlw	0
 10811  262C  0141               	movlb	1	; select bank1
 10812  262D  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 10813  262E  3007               	movlw	7
 10814  262F  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 10815  2630  3000               	movlw	0
 10816  2631  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 10817  2632  3004               	movlw	4
 10818  2633  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 10819  2634  3000               	movlw	0
 10820  2635  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 10821  2636  3000               	movlw	0
 10822  2637  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 10823  2638  3000               	movlw	0
 10824  2639  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 10825  263A  3000               	movlw	0
 10826  263B  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 10827  263C  3000               	movlw	0
 10828  263D  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 10829  263E  3000               	movlw	0
 10830  263F  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 10831  2640  3000               	movlw	0
 10832  2641  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 10833  2642  3000               	movlw	0
 10834  2643  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 10835  2644  319B  2336         	fcall	_dwt_write32bitoffsetreg
 10836  2646  0008               	return
 10837  2647                     __end_of_dwt_disable_rftx_blocks:	
 10838                           
 10839                           	psect	text20
 10840  1C23                     __ptext20:	
 10841 ;; *************** function _dwt_disable_rf_tx *****************
 10842 ;; Defined at:
 10843 ;;		line 4146 in file "deca_device.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  switch_confi    1    wreg     unsigned char 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;  switch_confi    1   79[BANK0 ] unsigned char 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10860 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10861 ;;Total ram usage:        1 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:    8
 10864 ;; This function calls:
 10865 ;;		_dwt_write32bitoffsetreg
 10866 ;; This function is called by:
 10867 ;;		_dwt_calcbandwidthadj
 10868 ;;		_dwt_calcpgcount
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           
 10873                           ;psect for function _dwt_disable_rf_tx
 10874  1C23                     _dwt_disable_rf_tx:	
 10875                           
 10876                           ;incstack = 0
 10877                           ; Regs used in _dwt_disable_rf_tx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10878                           ;dwt_disable_rf_tx@switch_config stored from wreg
 10879  1C23  0140               	movlb	0	; select bank0
 10880  1C24  00EF               	movwf	dwt_disable_rf_tx@switch_config
 10881                           
 10882                           ;deca_device.c: 4149: dwt_write32bitoffsetreg(0x70048, 0, 0x00000000);
 10883  1C25  3000               	movlw	0
 10884  1C26  0141               	movlb	1	; select bank1
 10885  1C27  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 10886  1C28  3007               	movlw	7
 10887  1C29  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 10888  1C2A  3000               	movlw	0
 10889  1C2B  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 10890  1C2C  3048               	movlw	72
 10891  1C2D  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 10892  1C2E  3000               	movlw	0
 10893  1C2F  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 10894  1C30  3000               	movlw	0
 10895  1C31  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 10896  1C32  3000               	movlw	0
 10897  1C33  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 10898  1C34  3000               	movlw	0
 10899  1C35  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 10900  1C36  3000               	movlw	0
 10901  1C37  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 10902  1C38  3000               	movlw	0
 10903  1C39  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 10904  1C3A  3000               	movlw	0
 10905  1C3B  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 10906  1C3C  3000               	movlw	0
 10907  1C3D  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 10908  1C3E  319B  2336  319C   	fcall	_dwt_write32bitoffsetreg
 10909                           
 10910                           ;deca_device.c: 4152: dwt_write32bitoffsetreg(0x70000, 0, 0x00000000);
 10911  1C41  3000               	movlw	0
 10912  1C42  0141               	movlb	1	; select bank1
 10913  1C43  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 10914  1C44  3007               	movlw	7
 10915  1C45  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 10916  1C46  3000               	movlw	0
 10917  1C47  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 10918  1C48  3000               	movlw	0
 10919  1C49  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 10920  1C4A  3000               	movlw	0
 10921  1C4B  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 10922  1C4C  3000               	movlw	0
 10923  1C4D  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 10924  1C4E  3000               	movlw	0
 10925  1C4F  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 10926  1C50  3000               	movlw	0
 10927  1C51  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 10928  1C52  3000               	movlw	0
 10929  1C53  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 10930  1C54  3000               	movlw	0
 10931  1C55  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 10932  1C56  3000               	movlw	0
 10933  1C57  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 10934  1C58  3000               	movlw	0
 10935  1C59  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 10936  1C5A  319B  2336  319C   	fcall	_dwt_write32bitoffsetreg
 10937                           
 10938                           ;deca_device.c: 4154: if (switch_config)
 10939  1C5D  0140               	movlb	0	; select bank0
 10940  1C5E  086F               	movf	dwt_disable_rf_tx@switch_config,w
 10941  1C5F  1903               	btfsc	3,2
 10942  1C60  0008               	return
 10943                           
 10944                           ;deca_device.c: 4155: {
 10945                           ;deca_device.c: 4157: dwt_write32bitoffsetreg(0x70014, 0x0, 0x1C000000);
 10946  1C61  3000               	movlw	0
 10947  1C62  0141               	movlb	1	; select bank1
 10948  1C63  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 10949  1C64  3007               	movlw	7
 10950  1C65  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 10951  1C66  3000               	movlw	0
 10952  1C67  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 10953  1C68  3014               	movlw	20
 10954  1C69  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 10955  1C6A  3000               	movlw	0
 10956  1C6B  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 10957  1C6C  3000               	movlw	0
 10958  1C6D  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 10959  1C6E  3000               	movlw	0
 10960  1C6F  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 10961  1C70  3000               	movlw	0
 10962  1C71  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 10963  1C72  301C               	movlw	28
 10964  1C73  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 10965  1C74  3000               	movlw	0
 10966  1C75  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 10967  1C76  3000               	movlw	0
 10968  1C77  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 10969  1C78  3000               	movlw	0
 10970  1C79  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 10971  1C7A  319B  2336         	fcall	_dwt_write32bitoffsetreg
 10972  1C7C  0008               	return
 10973  1C7D                     __end_of_dwt_disable_rf_tx:	
 10974                           
 10975                           	psect	text21
 10976  0110                     __ptext21:	
 10977 ;; *************** function _dwt_configure *****************
 10978 ;; Defined at:
 10979 ;;		line 1337 in file "deca_device.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  config          1    wreg     PTR struct .
 10982 ;;		 -> config(14), 
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;  config          1   20[BANK2 ] PTR struct .
 10985 ;;		 -> config(14), 
 10986 ;;  sts_mnth        2    4[BANK2 ] unsigned int 
 10987 ;;  temp            4   10[BANK2 ] unsigned long 
 10988 ;;  preamble_len    2   17[BANK2 ] int 
 10989 ;;  sts_len         2   15[BANK2 ] unsigned int 
 10990 ;;  error           2    2[BANK2 ] int 
 10991 ;;  chan            1   19[BANK2 ] unsigned char 
 10992 ;;  cnt             1   14[BANK2 ] unsigned char 
 10993 ;;  flag            1    8[BANK2 ] unsigned char 
 10994 ;;  mode            1    7[BANK2 ] unsigned char 
 10995 ;;  scp             1    6[BANK2 ] unsigned char 
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  2   54[BANK1 ] int 
 10998 ;; Registers used:
 10999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11005 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11006 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11007 ;;      Temps:          0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11008 ;;      Totals:         0       0      21      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11009 ;;Total ram usage:       42 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; Hardware stack levels required when called:   10
 11012 ;; This function calls:
 11013 ;;		_Sleep
 11014 ;;		___ftmul
 11015 ;;		___fttol
 11016 ;;		___lltoft
 11017 ;;		__dwt_kick_dgc_on_wakeup
 11018 ;;		_dwt_configmrxlut
 11019 ;;		_dwt_modify16bitoffsetreg
 11020 ;;		_dwt_modify32bitoffsetreg
 11021 ;;		_dwt_modify8bitoffsetreg
 11022 ;;		_dwt_pgf_cal
 11023 ;;		_dwt_read32bitoffsetreg
 11024 ;;		_dwt_read8bitoffsetreg
 11025 ;;		_dwt_setdwstate
 11026 ;;		_dwt_setplenfine
 11027 ;;		_dwt_write16bitoffsetreg
 11028 ;;		_dwt_write32bitoffsetreg
 11029 ;;		_dwt_write8bitoffsetreg
 11030 ;;		_get_sts_mnth
 11031 ;; This function is called by:
 11032 ;;		_dw_main
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           
 11037                           ;psect for function _dwt_configure
 11038  0110                     _dwt_configure:	
 11039                           
 11040                           ;incstack = 0
 11041                           ; Regs used in _dwt_configure: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11042                           ;dwt_configure@config stored from wreg
 11043  0110  0142               	movlb	2	; select bank2
 11044  0111  00DE               	movwf	dwt_configure@config^(0+256)
 11045                           
 11046                           ;deca_device.c: 1339: uint8_t chan = config->chan,cnt,flag;
 11047  0112  085E               	movf	dwt_configure@config^(0+256),w
 11048  0113  0086               	movwf	6
 11049  0114  3001               	movlw	1	; select bank2/3
 11050  0115  0087               	movwf	7
 11051  0116  0801               	movf	1,w
 11052  0117  0141               	movlb	1	; select bank1
 11053  0118  00D8               	movwf	??_dwt_configure^(0+128)
 11054  0119  0858               	movf	??_dwt_configure^(0+128),w
 11055  011A  0142               	movlb	2	; select bank2
 11056  011B  00DD               	movwf	dwt_configure@chan^(0+256)
 11057                           
 11058                           ;deca_device.c: 1340: uint32_t temp;
 11059                           ;deca_device.c: 1341: uint8_t scp = ((config->rxCode > 24) || (config->txCode > 24)) ? 1
      +                           : 0;
 11060  011C  01D3               	clrf	_dwt_configure$1230^(0+256)
 11061  011D  0AD3               	incf	_dwt_configure$1230^(0+256),f
 11062  011E  085E               	movf	dwt_configure@config^(0+256),w
 11063  011F  3E04               	addlw	4
 11064  0120  0086               	movwf	6
 11065  0121  3001               	movlw	1	; select bank2/3
 11066  0122  0087               	movwf	7
 11067  0123  3019               	movlw	25
 11068  0124  0201               	subwf	1,w
 11069  0125  1803               	skipnc
 11070  0126  2930               	goto	l5607
 11071  0127  085E               	movf	dwt_configure@config^(0+256),w
 11072  0128  3E03               	addlw	3
 11073  0129  0086               	movwf	6
 11074  012A  3001               	movlw	1	; select bank2/3
 11075  012B  0087               	movwf	7
 11076  012C  3019               	movlw	25
 11077  012D  0201               	subwf	1,w
 11078  012E  1C03               	btfss	3,0
 11079  012F  01D3               	clrf	_dwt_configure$1230^(0+256)
 11080  0130                     l5607:	
 11081  0130  0853               	movf	_dwt_configure$1230^(0+256),w
 11082  0131  0141               	movlb	1	; select bank1
 11083  0132  00D8               	movwf	??_dwt_configure^(0+128)
 11084  0133  0858               	movf	??_dwt_configure^(0+128),w
 11085  0134  0142               	movlb	2	; select bank2
 11086  0135  00D0               	movwf	dwt_configure@scp^(0+256)
 11087                           
 11088                           ;deca_device.c: 1342: uint8_t mode = (config->phrMode == 0x1) ? 0x10U : 0;
 11089  0136  085E               	movf	dwt_configure@config^(0+256),w
 11090  0137  3E07               	addlw	7
 11091  0138  0086               	movwf	6
 11092  0139  3001               	movlw	1	; select bank2/3
 11093  013A  0087               	movwf	7
 11094  013B  0301               	decf	1,w
 11095  013C  1903               	btfsc	3,2
 11096  013D  2941               	goto	l5613
 11097  013E  01CA               	clrf	_dwt_configure$1232^(0+256)
 11098  013F  01CB               	clrf	(_dwt_configure$1232+1)^(0+256)
 11099  0140  2945               	goto	l619
 11100  0141                     l5613:	
 11101  0141  3010               	movlw	16
 11102  0142  00CA               	movwf	_dwt_configure$1232^(0+256)
 11103  0143  3000               	movlw	0
 11104  0144  00CB               	movwf	(_dwt_configure$1232^(0+256)+1)
 11105  0145                     l619:	
 11106  0145  084A               	movf	_dwt_configure$1232^(0+256),w
 11107  0146  0141               	movlb	1	; select bank1
 11108  0147  00D8               	movwf	??_dwt_configure^(0+128)
 11109  0148  0858               	movf	??_dwt_configure^(0+128),w
 11110  0149  0142               	movlb	2	; select bank2
 11111  014A  00D1               	movwf	dwt_configure@mode^(0+256)
 11112                           
 11113                           ;deca_device.c: 1343: uint16_t sts_len;
 11114                           ;deca_device.c: 1344: int error = (0);
 11115  014B  01CC               	clrf	dwt_configure@error^(0+256)
 11116  014C  01CD               	clrf	(dwt_configure@error+1)^(0+256)
 11117                           
 11118                           ;deca_device.c: 1367: int preamble_len;
 11119                           ;deca_device.c: 1369: switch (config->txPreambLength)
 11120  014D  2971               	goto	l5639
 11121  014E                     l5617:	
 11122                           ;deca_device.c: 1370: {
 11123                           ;deca_device.c: 1371: case 0x04:
 11124                           
 11125                           
 11126                           ;deca_device.c: 1372: preamble_len = 32;
 11127  014E  3020               	movlw	32
 11128  014F  2955               	goto	L6
 11129  0150                     l5619:	
 11130                           ;deca_device.c: 1374: case 0x01:
 11131                           
 11132                           ;deca_device.c: 1373: break;
 11133                           
 11134                           
 11135                           ;deca_device.c: 1375: preamble_len = 64;
 11136  0150  3040               	movlw	64
 11137  0151  2955               	goto	L6
 11138  0152                     l5621:	
 11139                           ;deca_device.c: 1377: case 0x07:
 11140                           
 11141                           ;deca_device.c: 1376: break;
 11142                           
 11143                           
 11144                           ;deca_device.c: 1378: preamble_len = 72;
 11145  0152  3048               	movlw	72
 11146  0153  2955               	goto	L6
 11147  0154                     l5623:	
 11148                           ;deca_device.c: 1380: case 0x05:
 11149                           
 11150                           ;deca_device.c: 1379: break;
 11151                           
 11152                           
 11153                           ;deca_device.c: 1381: preamble_len = 128;
 11154  0154  3080               	movlw	128
 11155  0155                     L6:	
 11156  0155  00DB               	movwf	dwt_configure@preamble_len^(0+256)
 11157  0156  3000               	movlw	0
 11158  0157  296F               	goto	L12
 11159  0158                     l5625:	
 11160                           ;deca_device.c: 1383: case 0x09:
 11161                           
 11162                           ;deca_device.c: 1382: break;
 11163                           
 11164                           
 11165                           ;deca_device.c: 1384: preamble_len = 256;
 11166  0158  3000               	movlw	0
 11167  0159  00DB               	movwf	dwt_configure@preamble_len^(0+256)
 11168  015A  3001               	movlw	1
 11169  015B  296F               	goto	L12
 11170  015C                     l5627:	
 11171                           ;deca_device.c: 1386: case 0x0d:
 11172                           
 11173                           ;deca_device.c: 1385: break;
 11174                           
 11175                           
 11176                           ;deca_device.c: 1387: preamble_len = 512;
 11177  015C  3000               	movlw	0
 11178  015D  00DB               	movwf	dwt_configure@preamble_len^(0+256)
 11179  015E  3002               	movlw	2
 11180  015F  296F               	goto	L12
 11181  0160                     l5629:	
 11182                           ;deca_device.c: 1389: case 0x02:
 11183                           
 11184                           ;deca_device.c: 1388: break;
 11185                           
 11186                           
 11187                           ;deca_device.c: 1390: preamble_len = 1024;
 11188  0160  3000               	movlw	0
 11189  0161  00DB               	movwf	dwt_configure@preamble_len^(0+256)
 11190  0162  3004               	movlw	4
 11191  0163  296F               	goto	L12
 11192  0164                     l5631:	
 11193                           ;deca_device.c: 1392: case 0x06:
 11194                           
 11195                           ;deca_device.c: 1391: break;
 11196                           
 11197                           
 11198                           ;deca_device.c: 1393: preamble_len = 1536;
 11199  0164  3000               	movlw	0
 11200  0165  00DB               	movwf	dwt_configure@preamble_len^(0+256)
 11201  0166  3006               	movlw	6
 11202  0167  296F               	goto	L12
 11203  0168                     l5633:	
 11204                           ;deca_device.c: 1395: case 0x0A:
 11205                           
 11206                           ;deca_device.c: 1394: break;
 11207                           
 11208                           
 11209                           ;deca_device.c: 1396: preamble_len = 2048;
 11210  0168  3000               	movlw	0
 11211  0169  00DB               	movwf	dwt_configure@preamble_len^(0+256)
 11212  016A  3008               	movlw	8
 11213  016B  296F               	goto	L12
 11214  016C                     l5635:	
 11215                           ;deca_device.c: 1398: default:
 11216                           
 11217                           ;deca_device.c: 1397: break;
 11218                           
 11219                           
 11220                           ;deca_device.c: 1399: preamble_len = 4096;
 11221  016C  3000               	movlw	0
 11222  016D  00DB               	movwf	dwt_configure@preamble_len^(0+256)
 11223  016E  3010               	movlw	16
 11224  016F                     L12:	
 11225  016F  00DC               	movwf	(dwt_configure@preamble_len^(0+256)+1)
 11226                           
 11227                           ;deca_device.c: 1401: }
 11228                           
 11229                           ;deca_device.c: 1400: break;
 11230  0170  2992               	goto	l5641
 11231  0171                     l5639:	
 11232  0171  0A5E               	incf	dwt_configure@config^(0+256),w
 11233  0172  0086               	movwf	6
 11234  0173  3001               	movlw	1	; select bank2/3
 11235  0174  0087               	movwf	7
 11236  0175  0801               	movf	1,w
 11237                           
 11238                           ; Switch size 1, requested type "space"
 11239                           ; Number of cases is 9, Range of values is 1 to 13
 11240                           ; switch strategies available:
 11241                           ; Name         Instructions Cycles
 11242                           ; simple_byte           28    15 (average)
 11243                           ; direct_byte           35     9 (fixed)
 11244                           ; jumptable            263     9 (fixed)
 11245                           ;	Chosen strategy is simple_byte
 11246  0176  3A01               	xorlw	1	; case 1
 11247  0177  1903               	skipnz
 11248  0178  2950               	goto	l5619
 11249  0179  3A03               	xorlw	3	; case 2
 11250  017A  1903               	skipnz
 11251  017B  2960               	goto	l5629
 11252  017C  3A06               	xorlw	6	; case 4
 11253  017D  1903               	skipnz
 11254  017E  294E               	goto	l5617
 11255  017F  3A01               	xorlw	1	; case 5
 11256  0180  1903               	skipnz
 11257  0181  2954               	goto	l5623
 11258  0182  3A03               	xorlw	3	; case 6
 11259  0183  1903               	skipnz
 11260  0184  2964               	goto	l5631
 11261  0185  3A01               	xorlw	1	; case 7
 11262  0186  1903               	skipnz
 11263  0187  2952               	goto	l5621
 11264  0188  3A0E               	xorlw	14	; case 9
 11265  0189  1903               	skipnz
 11266  018A  2958               	goto	l5625
 11267  018B  3A03               	xorlw	3	; case 10
 11268  018C  1903               	skipnz
 11269  018D  2968               	goto	l5633
 11270  018E  3A07               	xorlw	7	; case 13
 11271  018F  1903               	skipnz
 11272  0190  295C               	goto	l5627
 11273  0191  296C               	goto	l5635
 11274  0192                     l5641:	
 11275                           
 11276                           ;deca_device.c: 1403: pdw3000local->sleep_mode &= (~(0x0020 | 0x00C0));
 11277  0192  0141               	movlb	1	; select bank1
 11278  0193  086F               	movf	_pdw3000local^(0+128),w
 11279  0194  3E10               	addlw	16
 11280  0195  0086               	movwf	6
 11281  0196  3002               	movlw	2	; select bank4/5
 11282  0197  0087               	movwf	7
 11283  0198  301F               	movlw	31
 11284  0199  0581               	andwf	1,f
 11285  019A  3141               	addfsr 1,1
 11286  019B  30FF               	movlw	255
 11287  019C  0581               	andwf	1,f
 11288                           
 11289                           ;deca_device.c: 1404: pdw3000local->longFrames = config->phrMode ;
 11290  019D  0142               	movlb	2	; select bank2
 11291  019E  085E               	movf	dwt_configure@config^(0+256),w
 11292  019F  3E07               	addlw	7
 11293  01A0  0086               	movwf	6
 11294  01A1  3001               	movlw	1	; select bank2/3
 11295  01A2  0087               	movwf	7
 11296  01A3  0801               	movf	1,w
 11297  01A4  0141               	movlb	1	; select bank1
 11298  01A5  00D8               	movwf	??_dwt_configure^(0+128)
 11299  01A6  086F               	movf	_pdw3000local^(0+128),w
 11300  01A7  3E0C               	addlw	12
 11301  01A8  0086               	movwf	6
 11302  01A9  3002               	movlw	2	; select bank4/5
 11303  01AA  0087               	movwf	7
 11304  01AB  0858               	movf	??_dwt_configure^(0+128),w
 11305  01AC  0081               	movwf	1
 11306                           
 11307                           ;deca_device.c: 1405: sts_len=((uint16_t)1<<(((uint16_t)(config->stsLength))+2));
 11308  01AD  3001               	movlw	1
 11309  01AE  00D8               	movwf	??_dwt_configure^(0+128)
 11310  01AF  3000               	movlw	0
 11311  01B0  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 11312  01B1  0142               	movlb	2	; select bank2
 11313  01B2  085E               	movf	dwt_configure@config^(0+256),w
 11314  01B3  3E0C               	addlw	12
 11315  01B4  0086               	movwf	6
 11316  01B5  3001               	movlw	1	; select bank2/3
 11317  01B6  0087               	movwf	7
 11318  01B7  0801               	movf	1,w
 11319  01B8  3E02               	addlw	2
 11320  01B9  0A89               	incf	9,f
 11321  01BA  0141               	movlb	1	; select bank1
 11322  01BB  29BE               	goto	u5554
 11323  01BC                     u5555:	
 11324  01BC  35D8               	lslf	??_dwt_configure^(0+128),f
 11325  01BD  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 11326  01BE                     u5554:	
 11327  01BE  0B89               	decfsz	9,f
 11328  01BF  29BC               	goto	u5555
 11329  01C0  0858               	movf	??_dwt_configure^(0+128),w
 11330  01C1  0142               	movlb	2	; select bank2
 11331  01C2  00D9               	movwf	dwt_configure@sts_len^(0+256)
 11332  01C3  0141               	movlb	1	; select bank1
 11333  01C4  0859               	movf	(??_dwt_configure+1)^(0+128),w
 11334  01C5  0142               	movlb	2	; select bank2
 11335  01C6  00DA               	movwf	(dwt_configure@sts_len+1)^(0+256)
 11336                           
 11337                           ;deca_device.c: 1406: pdw3000local->ststhreshold = (int16_t)((((uint32_t)sts_len) * 8) *
      +                           (0.90f));
 11338  01C7  0859               	movf	dwt_configure@sts_len^(0+256),w
 11339  01C8  0141               	movlb	1	; select bank1
 11340  01C9  00D8               	movwf	??_dwt_configure^(0+128)
 11341  01CA  0142               	movlb	2	; select bank2
 11342  01CB  085A               	movf	(dwt_configure@sts_len+1)^(0+256),w
 11343  01CC  0141               	movlb	1	; select bank1
 11344  01CD  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 11345  01CE  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 11346  01CF  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 11347  01D0  3003               	movlw	3
 11348  01D1                     u5565:	
 11349  01D1  35D8               	lslf	??_dwt_configure^(0+128),f
 11350  01D2  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 11351  01D3  0DDA               	rlf	(??_dwt_configure^(0+128)+2),f
 11352  01D4  0DDB               	rlf	(??_dwt_configure^(0+128)+3),f
 11353  01D5  0B89               	decfsz	9,f
 11354  01D6  29D1               	goto	u5565
 11355  01D7  085B               	movf	(??_dwt_configure+3)^(0+128),w
 11356  01D8  00FB               	movwf	___lltoft@c+3
 11357  01D9  085A               	movf	(??_dwt_configure+2)^(0+128),w
 11358  01DA  00FA               	movwf	___lltoft@c+2
 11359  01DB  0859               	movf	(??_dwt_configure+1)^(0+128),w
 11360  01DC  00F9               	movwf	___lltoft@c+1
 11361  01DD  0858               	movf	??_dwt_configure^(0+128),w
 11362  01DE  00F8               	movwf	___lltoft@c
 11363  01DF  31A7  272B  3181   	fcall	___lltoft
 11364  01E2  0878               	movf	?___lltoft,w
 11365  01E3  0140               	movlb	0	; select bank0
 11366  01E4  00A3               	movwf	___ftmul@f2
 11367  01E5  0879               	movf	?___lltoft+1,w
 11368  01E6  00A4               	movwf	___ftmul@f2+1
 11369  01E7  087A               	movf	?___lltoft+2,w
 11370  01E8  00A5               	movwf	___ftmul@f2+2
 11371  01E9  3066               	movlw	102
 11372  01EA  00A0               	movwf	___ftmul@f1
 11373  01EB  3066               	movlw	102
 11374  01EC  00A1               	movwf	___ftmul@f1+1
 11375  01ED  303F               	movlw	63
 11376  01EE  00A2               	movwf	___ftmul@f1+2
 11377  01EF  3192  22B4  3181   	fcall	___ftmul
 11378  01F2  0140               	movlb	0	; select bank0
 11379  01F3  0820               	movf	?___ftmul,w
 11380  01F4  00B0               	movwf	___fttol@f1
 11381  01F5  0821               	movf	?___ftmul+1,w
 11382  01F6  00B1               	movwf	___fttol@f1+1
 11383  01F7  0822               	movf	?___ftmul+2,w
 11384  01F8  00B2               	movwf	___fttol@f1+2
 11385  01F9  3190  2057  3181   	fcall	___fttol
 11386  01FC  0141               	movlb	1	; select bank1
 11387  01FD  086F               	movf	_pdw3000local^(0+128),w
 11388  01FE  3E12               	addlw	18
 11389  01FF  0086               	movwf	6
 11390  0200  3002               	movlw	2	; select bank4/5
 11391  0201  0087               	movwf	7
 11392  0202  0140               	movlb	0	; select bank0
 11393  0203  0830               	movf	?___fttol,w
 11394  0204  3FC0               	movwi [0]fsr1
 11395  0205  0831               	movf	?___fttol+1,w
 11396  0206  3FC1               	movwi [1]fsr1
 11397                           
 11398                           ;deca_device.c: 1407: pdw3000local->stsconfig = config->stsMode;
 11399  0207  0142               	movlb	2	; select bank2
 11400  0208  085E               	movf	dwt_configure@config^(0+256),w
 11401  0209  3E0B               	addlw	11
 11402  020A  0086               	movwf	6
 11403  020B  3001               	movlw	1	; select bank2/3
 11404  020C  0087               	movwf	7
 11405  020D  0801               	movf	1,w
 11406  020E  0141               	movlb	1	; select bank1
 11407  020F  00D8               	movwf	??_dwt_configure^(0+128)
 11408  0210  086F               	movf	_pdw3000local^(0+128),w
 11409  0211  3E15               	addlw	21
 11410  0212  0086               	movwf	6
 11411  0213  3002               	movlw	2	; select bank4/5
 11412  0214  0087               	movwf	7
 11413  0215  0858               	movf	??_dwt_configure^(0+128),w
 11414  0216  0081               	movwf	1
 11415                           
 11416                           ;deca_device.c: 1413: dwt_modify32bitoffsetreg(0x10, 0, ~(0x10U | 0x20U | 0x3000U | 0x30
      +                          000UL | 0x8000U),
 11417                           ;deca_device.c: 1414: ((uint32_t)config->pdoaMode) << (16U)
 11418                           ;deca_device.c: 1415: | ((uint16_t)config->stsMode & 0xB) << (12U)
 11419                           ;deca_device.c: 1416: | (0x20U & ((uint32_t)config->phrRate << (5U)))
 11420                           ;deca_device.c: 1417: | mode);
 11421  0217  3000               	movlw	0
 11422  0218  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 11423  0219  3000               	movlw	0
 11424  021A  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 11425  021B  3000               	movlw	0
 11426  021C  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 11427  021D  3010               	movlw	16
 11428  021E  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 11429  021F  3000               	movlw	0
 11430  0220  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 11431  0221  3000               	movlw	0
 11432  0222  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 11433  0223  3000               	movlw	0
 11434  0224  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 11435  0225  3000               	movlw	0
 11436  0226  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 11437  0227  30FF               	movlw	255
 11438  0228  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 11439  0229  30FC               	movlw	252
 11440  022A  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 11441  022B  304F               	movlw	79
 11442  022C  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 11443  022D  30CF               	movlw	207
 11444  022E  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 11445  022F  0142               	movlb	2	; select bank2
 11446  0230  0851               	movf	dwt_configure@mode^(0+256),w
 11447  0231  0141               	movlb	1	; select bank1
 11448  0232  00D8               	movwf	??_dwt_configure^(0+128)
 11449  0233  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 11450  0234  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 11451  0235  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 11452  0236  0142               	movlb	2	; select bank2
 11453  0237  085E               	movf	dwt_configure@config^(0+256),w
 11454  0238  3E08               	addlw	8
 11455  0239  0086               	movwf	6
 11456  023A  3001               	movlw	1	; select bank2/3
 11457  023B  0087               	movwf	7
 11458  023C  0801               	movf	1,w
 11459  023D  0141               	movlb	1	; select bank1
 11460  023E  00DC               	movwf	(??_dwt_configure+4)^(0+128)
 11461  023F  3004               	movlw	4
 11462  0240                     u5575:	
 11463  0240  35DC               	lslf	(??_dwt_configure+4)^(0+128),f
 11464  0241  3EFF               	addlw	-1
 11465  0242  1D03               	skipz
 11466  0243  2A40               	goto	u5575
 11467  0244  355C               	lslf	(??_dwt_configure+4)^(0+128),w
 11468  0245  3920               	andlw	32
 11469  0246  00DD               	movwf	(??_dwt_configure+5)^(0+128)
 11470  0247  01DE               	clrf	((??_dwt_configure+5)^(0+128)+1)
 11471  0248  01DF               	clrf	((??_dwt_configure+5)^(0+128)+2)
 11472  0249  01E0               	clrf	((??_dwt_configure+5)^(0+128)+3)
 11473  024A  0142               	movlb	2	; select bank2
 11474  024B  085E               	movf	dwt_configure@config^(0+256),w
 11475  024C  3E0B               	addlw	11
 11476  024D  0086               	movwf	6
 11477  024E  3001               	movlw	1	; select bank2/3
 11478  024F  0087               	movwf	7
 11479  0250  0801               	movf	1,w
 11480  0251  390B               	andlw	11
 11481  0252  0141               	movlb	1	; select bank1
 11482  0253  00E1               	movwf	(??_dwt_configure+9)^(0+128)
 11483  0254  01E2               	clrf	((??_dwt_configure+9)^(0+128)+1)
 11484  0255  0E61               	swapf	(??_dwt_configure+9)^(0+128),w
 11485  0256  39F0               	andlw	240
 11486  0257  00E2               	movwf	((??_dwt_configure+9)^(0+128)+1)
 11487  0258  01E1               	clrf	(??_dwt_configure+9)^(0+128)
 11488  0259  0861               	movf	(??_dwt_configure+9)^(0+128),w
 11489  025A  00E3               	movwf	(??_dwt_configure+11)^(0+128)
 11490  025B  0862               	movf	(??_dwt_configure+10)^(0+128),w
 11491  025C  00E4               	movwf	((??_dwt_configure+11)^(0+128)+1)
 11492  025D  01E5               	clrf	((??_dwt_configure+11)^(0+128)+2)
 11493  025E  01E6               	clrf	((??_dwt_configure+11)^(0+128)+3)
 11494  025F  0142               	movlb	2	; select bank2
 11495  0260  085E               	movf	dwt_configure@config^(0+256),w
 11496  0261  3E0D               	addlw	13
 11497  0262  0086               	movwf	6
 11498  0263  3001               	movlw	1	; select bank2/3
 11499  0264  0087               	movwf	7
 11500  0265  0801               	movf	1,w
 11501  0266  0141               	movlb	1	; select bank1
 11502  0267  00E7               	movwf	(??_dwt_configure+15)^(0+128)
 11503  0268  01E8               	clrf	((??_dwt_configure+15)^(0+128)+1)
 11504  0269  01E9               	clrf	((??_dwt_configure+15)^(0+128)+2)
 11505  026A  01EA               	clrf	((??_dwt_configure+15)^(0+128)+3)
 11506  026B  3010               	movlw	16
 11507  026C                     u5585:	
 11508  026C  35E7               	lslf	(??_dwt_configure+15)^(0+128),f
 11509  026D  0DE8               	rlf	((??_dwt_configure+15)^(0+128)+1),f
 11510  026E  0DE9               	rlf	((??_dwt_configure+15)^(0+128)+2),f
 11511  026F  0DEA               	rlf	((??_dwt_configure+15)^(0+128)+3),f
 11512  0270  0B89               	decfsz	9,f
 11513  0271  2A6C               	goto	u5585
 11514  0272  0867               	movf	(??_dwt_configure+15)^(0+128),w
 11515  0273  04E3               	iorwf	(??_dwt_configure+11)^(0+128),f
 11516  0274  0868               	movf	(??_dwt_configure+16)^(0+128),w
 11517  0275  04E4               	iorwf	((??_dwt_configure+11)^(0+128)+1),f
 11518  0276  0869               	movf	(??_dwt_configure+17)^(0+128),w
 11519  0277  04E5               	iorwf	((??_dwt_configure+11)^(0+128)+2),f
 11520  0278  086A               	movf	(??_dwt_configure+18)^(0+128),w
 11521  0279  04E6               	iorwf	((??_dwt_configure+11)^(0+128)+3),f
 11522  027A  0863               	movf	(??_dwt_configure+11)^(0+128),w
 11523  027B  04DD               	iorwf	(??_dwt_configure+5)^(0+128),f
 11524  027C  0864               	movf	(??_dwt_configure+12)^(0+128),w
 11525  027D  04DE               	iorwf	((??_dwt_configure+5)^(0+128)+1),f
 11526  027E  0865               	movf	(??_dwt_configure+13)^(0+128),w
 11527  027F  04DF               	iorwf	((??_dwt_configure+5)^(0+128)+2),f
 11528  0280  0866               	movf	(??_dwt_configure+14)^(0+128),w
 11529  0281  04E0               	iorwf	((??_dwt_configure+5)^(0+128)+3),f
 11530  0282  0858               	movf	??_dwt_configure^(0+128),w
 11531  0283  045D               	iorwf	(??_dwt_configure+5)^(0+128),w
 11532  0284  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 11533  0285  0859               	movf	(??_dwt_configure+1)^(0+128),w
 11534  0286  045E               	iorwf	(??_dwt_configure+6)^(0+128),w
 11535  0287  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 11536  0288  085A               	movf	(??_dwt_configure+2)^(0+128),w
 11537  0289  045F               	iorwf	(??_dwt_configure+7)^(0+128),w
 11538  028A  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 11539  028B  085B               	movf	(??_dwt_configure+3)^(0+128),w
 11540  028C  0460               	iorwf	(??_dwt_configure+8)^(0+128),w
 11541  028D  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 11542  028E  3193  2368  3181   	fcall	_dwt_modify32bitoffsetreg
 11543                           
 11544                           ;deca_device.c: 1419: if (scp)
 11545  0291  0142               	movlb	2	; select bank2
 11546  0292  0850               	movf	dwt_configure@scp^(0+256),w
 11547  0293  1903               	btfsc	3,2
 11548  0294  2B30               	goto	l5663
 11549                           
 11550                           ;deca_device.c: 1420: {
 11551                           ;deca_device.c: 1422: pdw3000local->sleep_mode |= 0x0020 | 0x0040;
 11552  0295  0141               	movlb	1	; select bank1
 11553  0296  086F               	movf	_pdw3000local^(0+128),w
 11554  0297  3E10               	addlw	16
 11555  0298  0086               	movwf	6
 11556  0299  3002               	movlw	2	; select bank4/5
 11557  029A  0087               	movwf	7
 11558  029B  3060               	movlw	96
 11559  029C  0481               	iorwf	1,f
 11560  029D  3141               	addfsr 1,1
 11561  029E  3000               	movlw	0
 11562  029F  0481               	iorwf	1,f
 11563                           
 11564                           ;deca_device.c: 1423: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x1<<11) | 0x400
      +                          U);
 11565  02A0  3000               	movlw	0
 11566  02A1  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 11567  02A2  300B               	movlw	11
 11568  02A3  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 11569  02A4  3000               	movlw	0
 11570  02A5  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 11571  02A6  3008               	movlw	8
 11572  02A7  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 11573  02A8  3000               	movlw	0
 11574  02A9  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 11575  02AA  3000               	movlw	0
 11576  02AB  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 11577  02AC  3000               	movlw	0
 11578  02AD  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 11579  02AE  3000               	movlw	0
 11580  02AF  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 11581  02B0  3000               	movlw	0
 11582  02B1  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 11583  02B2  3000               	movlw	0
 11584  02B3  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 11585  02B4  30E7               	movlw	231
 11586  02B5  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 11587  02B6  30FF               	movlw	255
 11588  02B7  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 11589  02B8  3000               	movlw	0
 11590  02B9  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 11591  02BA  3000               	movlw	0
 11592  02BB  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 11593  02BC  300C               	movlw	12
 11594  02BD  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 11595  02BE  3000               	movlw	0
 11596  02BF  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 11597  02C0  3193  2368  3181   	fcall	_dwt_modify32bitoffsetreg
 11598                           
 11599                           ;deca_device.c: 1425: dwt_write32bitoffsetreg(0xe000c, 0, 0x0306);
 11600  02C3  3000               	movlw	0
 11601  02C4  0141               	movlb	1	; select bank1
 11602  02C5  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 11603  02C6  300E               	movlw	14
 11604  02C7  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 11605  02C8  3000               	movlw	0
 11606  02C9  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 11607  02CA  300C               	movlw	12
 11608  02CB  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 11609  02CC  3000               	movlw	0
 11610  02CD  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 11611  02CE  3000               	movlw	0
 11612  02CF  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 11613  02D0  3000               	movlw	0
 11614  02D1  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 11615  02D2  3000               	movlw	0
 11616  02D3  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 11617  02D4  3000               	movlw	0
 11618  02D5  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 11619  02D6  3000               	movlw	0
 11620  02D7  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 11621  02D8  3003               	movlw	3
 11622  02D9  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 11623  02DA  3006               	movlw	6
 11624  02DB  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 11625  02DC  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 11626                           
 11627                           ;deca_device.c: 1426: dwt_write32bitoffsetreg(0xe000e, 0, 0x00000000);
 11628  02DF  3000               	movlw	0
 11629  02E0  0141               	movlb	1	; select bank1
 11630  02E1  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 11631  02E2  300E               	movlw	14
 11632  02E3  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 11633  02E4  3000               	movlw	0
 11634  02E5  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 11635  02E6  300E               	movlw	14
 11636  02E7  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 11637  02E8  3000               	movlw	0
 11638  02E9  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 11639  02EA  3000               	movlw	0
 11640  02EB  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 11641  02EC  3000               	movlw	0
 11642  02ED  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 11643  02EE  3000               	movlw	0
 11644  02EF  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 11645  02F0  3000               	movlw	0
 11646  02F1  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 11647  02F2  3000               	movlw	0
 11648  02F3  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 11649  02F4  3000               	movlw	0
 11650  02F5  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 11651  02F6  3000               	movlw	0
 11652  02F7  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 11653  02F8  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 11654                           
 11655                           ;deca_device.c: 1428: dwt_write32bitoffsetreg(0xe0012, 0, 0x000C5A0A);
 11656  02FB  3000               	movlw	0
 11657  02FC  0141               	movlb	1	; select bank1
 11658  02FD  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 11659  02FE  300E               	movlw	14
 11660  02FF  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 11661  0300  3000               	movlw	0
 11662  0301  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 11663  0302  3012               	movlw	18
 11664  0303  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 11665  0304  3000               	movlw	0
 11666  0305  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 11667  0306  3000               	movlw	0
 11668  0307  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 11669  0308  3000               	movlw	0
 11670  0309  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 11671  030A  3000               	movlw	0
 11672  030B  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 11673  030C  3000               	movlw	0
 11674  030D  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 11675  030E  300C               	movlw	12
 11676  030F  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 11677  0310  305A               	movlw	90
 11678  0311  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 11679  0312  300A               	movlw	10
 11680  0313  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 11681  0314  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 11682                           
 11683                           ;deca_device.c: 1429: dwt_write8bitoffsetreg(0xe0016, 0, 0x7D);
 11684  0317  3000               	movlw	0
 11685  0318  0141               	movlb	1	; select bank1
 11686  0319  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 11687  031A  300E               	movlw	14
 11688  031B  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 11689  031C  3000               	movlw	0
 11690  031D  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 11691  031E  3016               	movlw	22
 11692  031F  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 11693  0320  3000               	movlw	0
 11694  0321  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 11695  0322  3000               	movlw	0
 11696  0323  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 11697  0324  3000               	movlw	0
 11698  0325  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 11699  0326  3000               	movlw	0
 11700  0327  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 11701  0328  307D               	movlw	125
 11702  0329  00D8               	movwf	??_dwt_configure^(0+128)
 11703  032A  0858               	movf	??_dwt_configure^(0+128),w
 11704  032B  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 11705  032C  31A5  25F3  3181   	fcall	_dwt_write8bitoffsetreg
 11706                           
 11707                           ;deca_device.c: 1430: }
 11708  032F  2C25               	goto	l633
 11709  0330                     l5663:	
 11710                           
 11711                           ;deca_device.c: 1431: else
 11712                           ;deca_device.c: 1432: {
 11713                           ;deca_device.c: 1433: uint16_t sts_mnth;
 11714                           ;deca_device.c: 1434: if (config->stsMode != 0x0)
 11715  0330  0142               	movlb	2	; select bank2
 11716  0331  085E               	movf	dwt_configure@config^(0+256),w
 11717  0332  3E0B               	addlw	11
 11718  0333  0086               	movwf	6
 11719  0334  3001               	movlw	1	; select bank2/3
 11720  0335  0087               	movwf	7
 11721  0336  0801               	movf	1,w
 11722  0337  1903               	btfsc	3,2
 11723  0338  2BCA               	goto	l5677
 11724                           
 11725                           ;deca_device.c: 1435: {
 11726                           ;deca_device.c: 1438: if ((config->pdoaMode == 0x1) || (config->pdoaMode == 0x0))
 11727  0339  085E               	movf	dwt_configure@config^(0+256),w
 11728  033A  3E0D               	addlw	13
 11729  033B  0086               	movwf	6
 11730  033C  3001               	movlw	1	; select bank2/3
 11731  033D  0087               	movwf	7
 11732  033E  0301               	decf	1,w
 11733  033F  1903               	btfsc	3,2
 11734  0340  2B49               	goto	l5669
 11735  0341  085E               	movf	dwt_configure@config^(0+256),w
 11736  0342  3E0D               	addlw	13
 11737  0343  0086               	movwf	6
 11738  0344  3001               	movlw	1	; select bank2/3
 11739  0345  0087               	movwf	7
 11740  0346  0801               	movf	1,w
 11741  0347  1D03               	btfss	3,2
 11742  0348  2B67               	goto	l5671
 11743  0349                     l5669:	
 11744                           
 11745                           ;deca_device.c: 1439: {
 11746                           ;deca_device.c: 1441: sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLeng
      +                          th)], (0x10), 3);
 11747  0349  085E               	movf	dwt_configure@config^(0+256),w
 11748  034A  3E0C               	addlw	12
 11749  034B  0086               	movwf	6
 11750  034C  3001               	movlw	1	; select bank2/3
 11751  034D  0087               	movwf	7
 11752  034E  0801               	movf	1,w
 11753  034F  0141               	movlb	1	; select bank1
 11754  0350  00D8               	movwf	??_dwt_configure^(0+128)
 11755  0351  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 11756  0352  35D8               	lslf	??_dwt_configure^(0+128),f
 11757  0353  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 11758  0354  30E6               	movlw	low (_sts_length_factors| (0+32768))
 11759  0355  0758               	addwf	??_dwt_configure^(0+128),w
 11760  0356  0084               	movwf	4
 11761  0357  30A8               	movlw	high (_sts_length_factors| (0+32768))
 11762  0358  3D59               	addwfc	(??_dwt_configure+1)^(0+128),w
 11763  0359  0085               	movwf	5
 11764  035A  3F00               	moviw [0]fsr0
 11765  035B  0140               	movlb	0	; select bank0
 11766  035C  00A0               	movwf	get_sts_mnth@cipher
 11767  035D  3F01               	moviw [1]fsr0
 11768  035E  00A1               	movwf	get_sts_mnth@cipher+1
 11769  035F  3010               	movlw	16
 11770  0360  0141               	movlb	1	; select bank1
 11771  0361  00DA               	movwf	(??_dwt_configure+2)^(0+128)
 11772  0362  085A               	movf	(??_dwt_configure+2)^(0+128),w
 11773  0363  0140               	movlb	0	; select bank0
 11774  0364  00A2               	movwf	get_sts_mnth@threshold
 11775  0365  3003               	movlw	3
 11776  0366  2B84               	goto	L15
 11777  0367                     l5671:	
 11778                           ;deca_device.c: 1442: }
 11779                           
 11780                           
 11781                           ;deca_device.c: 1443: else
 11782                           ;deca_device.c: 1444: {
 11783                           ;deca_device.c: 1446: sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLeng
      +                          th)], (0x10), 4);
 11784  0367  085E               	movf	dwt_configure@config^(0+256),w
 11785  0368  3E0C               	addlw	12
 11786  0369  0086               	movwf	6
 11787  036A  3001               	movlw	1	; select bank2/3
 11788  036B  0087               	movwf	7
 11789  036C  0801               	movf	1,w
 11790  036D  0141               	movlb	1	; select bank1
 11791  036E  00D8               	movwf	??_dwt_configure^(0+128)
 11792  036F  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 11793  0370  35D8               	lslf	??_dwt_configure^(0+128),f
 11794  0371  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 11795  0372  30E6               	movlw	low (_sts_length_factors| (0+32768))
 11796  0373  0758               	addwf	??_dwt_configure^(0+128),w
 11797  0374  0084               	movwf	4
 11798  0375  30A8               	movlw	high (_sts_length_factors| (0+32768))
 11799  0376  3D59               	addwfc	(??_dwt_configure+1)^(0+128),w
 11800  0377  0085               	movwf	5
 11801  0378  3F00               	moviw [0]fsr0
 11802  0379  0140               	movlb	0	; select bank0
 11803  037A  00A0               	movwf	get_sts_mnth@cipher
 11804  037B  3F01               	moviw [1]fsr0
 11805  037C  00A1               	movwf	get_sts_mnth@cipher+1
 11806  037D  3010               	movlw	16
 11807  037E  0141               	movlb	1	; select bank1
 11808  037F  00DA               	movwf	(??_dwt_configure+2)^(0+128)
 11809  0380  085A               	movf	(??_dwt_configure+2)^(0+128),w
 11810  0381  0140               	movlb	0	; select bank0
 11811  0382  00A2               	movwf	get_sts_mnth@threshold
 11812  0383  3004               	movlw	4
 11813  0384                     L15:	
 11814  0384  0141               	movlb	1	; select bank1
 11815  0385  00DB               	movwf	(??_dwt_configure+3)^(0+128)
 11816  0386  085B               	movf	(??_dwt_configure+3)^(0+128),w
 11817  0387  0140               	movlb	0	; select bank0
 11818  0388  00A3               	movwf	get_sts_mnth@shift_val
 11819  0389  319D  25A8  3181   	fcall	_get_sts_mnth
 11820  038C  0140               	movlb	0	; select bank0
 11821  038D  0821               	movf	?_get_sts_mnth+1,w
 11822  038E  0142               	movlb	2	; select bank2
 11823  038F  00CF               	movwf	(dwt_configure@sts_mnth+1)^(0+256)
 11824  0390  0140               	movlb	0	; select bank0
 11825  0391  0820               	movf	?_get_sts_mnth,w
 11826  0392  0142               	movlb	2	; select bank2
 11827  0393  00CE               	movwf	dwt_configure@sts_mnth^(0+256)
 11828                           
 11829                           ;deca_device.c: 1447: }
 11830                           ;deca_device.c: 1449: preamble_len += (sts_len) * 8;
 11831  0394  085A               	movf	(dwt_configure@sts_len+1)^(0+256),w
 11832  0395  0141               	movlb	1	; select bank1
 11833  0396  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 11834  0397  0142               	movlb	2	; select bank2
 11835  0398  0859               	movf	dwt_configure@sts_len^(0+256),w
 11836  0399  0141               	movlb	1	; select bank1
 11837  039A  00D8               	movwf	??_dwt_configure^(0+128)
 11838  039B  35D8               	lslf	??_dwt_configure^(0+128),f
 11839  039C  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 11840  039D  35D8               	lslf	??_dwt_configure^(0+128),f
 11841  039E  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 11842  039F  35D8               	lslf	??_dwt_configure^(0+128),f
 11843  03A0  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 11844  03A1  0858               	movf	??_dwt_configure^(0+128),w
 11845  03A2  0142               	movlb	2	; select bank2
 11846  03A3  07DB               	addwf	dwt_configure@preamble_len^(0+256),f
 11847  03A4  0141               	movlb	1	; select bank1
 11848  03A5  0859               	movf	(??_dwt_configure+1)^(0+128),w
 11849  03A6  0142               	movlb	2	; select bank2
 11850  03A7  3DDC               	addwfc	(dwt_configure@preamble_len+1)^(0+256),f
 11851                           
 11852                           ;deca_device.c: 1451: dwt_modify16bitoffsetreg(0xe0012, 2, (uint16_t)~(0x7f0000UL >> 16)
      +                          , sts_mnth & 0x7F);
 11853  03A8  3000               	movlw	0
 11854  03A9  0141               	movlb	1	; select bank1
 11855  03AA  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 11856  03AB  300E               	movlw	14
 11857  03AC  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 11858  03AD  3000               	movlw	0
 11859  03AE  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 11860  03AF  3012               	movlw	18
 11861  03B0  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 11862  03B1  3000               	movlw	0
 11863  03B2  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 11864  03B3  3000               	movlw	0
 11865  03B4  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 11866  03B5  3000               	movlw	0
 11867  03B6  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 11868  03B7  3002               	movlw	2
 11869  03B8  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 11870  03B9  3080               	movlw	128
 11871  03BA  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 11872  03BB  30FF               	movlw	255
 11873  03BC  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 11874  03BD  307F               	movlw	127
 11875  03BE  0142               	movlb	2	; select bank2
 11876  03BF  054E               	andwf	dwt_configure@sts_mnth^(0+256),w
 11877  03C0  0141               	movlb	1	; select bank1
 11878  03C1  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 11879  03C2  3000               	movlw	0
 11880  03C3  0142               	movlb	2	; select bank2
 11881  03C4  054F               	andwf	(dwt_configure@sts_mnth+1)^(0+256),w
 11882  03C5  0141               	movlb	1	; select bank1
 11883  03C6  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 11884  03C7  319A  2221  3181   	fcall	_dwt_modify16bitoffsetreg
 11885  03CA                     l5677:	
 11886                           
 11887                           ;deca_device.c: 1453: }
 11888                           ;deca_device.c: 1455: if (preamble_len >= 256)
 11889  03CA  0142               	movlb	2	; select bank2
 11890  03CB  085C               	movf	(dwt_configure@preamble_len+1)^(0+256),w
 11891  03CC  3A80               	xorlw	128
 11892  03CD  0141               	movlb	1	; select bank1
 11893  03CE  00D8               	movwf	??_dwt_configure^(0+128)
 11894  03CF  3081               	movlw	129
 11895  03D0  0258               	subwf	??_dwt_configure^(0+128),w
 11896  03D1  1D03               	skipz
 11897  03D2  2BD6               	goto	u5635
 11898  03D3  3000               	movlw	0
 11899  03D4  0142               	movlb	2	; select bank2
 11900  03D5  025B               	subwf	dwt_configure@preamble_len^(0+256),w
 11901  03D6                     u5635:	
 11902  03D6  1C03               	skipc
 11903  03D7  2C01               	goto	l5683
 11904                           
 11905                           ;deca_device.c: 1456: {
 11906                           ;deca_device.c: 1457: pdw3000local->sleep_mode |= 0x0020 | 0x0000;
 11907  03D8  0141               	movlb	1	; select bank1
 11908  03D9  086F               	movf	_pdw3000local^(0+128),w
 11909  03DA  3E10               	addlw	16
 11910  03DB  0086               	movwf	6
 11911  03DC  3002               	movlw	2	; select bank4/5
 11912  03DD  0087               	movwf	7
 11913  03DE  3020               	movlw	32
 11914  03DF  0481               	iorwf	1,f
 11915  03E0  3141               	addfsr 1,1
 11916  03E1  3000               	movlw	0
 11917  03E2  0481               	iorwf	1,f
 11918                           
 11919                           ;deca_device.c: 1458: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x0<<11) | 0x400
      +                          U);
 11920  03E3  3000               	movlw	0
 11921  03E4  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 11922  03E5  300B               	movlw	11
 11923  03E6  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 11924  03E7  3000               	movlw	0
 11925  03E8  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 11926  03E9  3008               	movlw	8
 11927  03EA  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 11928  03EB  3000               	movlw	0
 11929  03EC  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 11930  03ED  3000               	movlw	0
 11931  03EE  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 11932  03EF  3000               	movlw	0
 11933  03F0  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 11934  03F1  3000               	movlw	0
 11935  03F2  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 11936  03F3  3000               	movlw	0
 11937  03F4  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 11938  03F5  3000               	movlw	0
 11939  03F6  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 11940  03F7  30E7               	movlw	231
 11941  03F8  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 11942  03F9  30FF               	movlw	255
 11943  03FA  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 11944  03FB  3000               	movlw	0
 11945  03FC  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 11946  03FD  3000               	movlw	0
 11947  03FE  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 11948  03FF  3004               	movlw	4
 11949  0400  2C1F               	goto	L16
 11950  0401                     l5683:	
 11951                           ;deca_device.c: 1459: }
 11952                           
 11953                           
 11954                           ;deca_device.c: 1460: else
 11955                           ;deca_device.c: 1461: {
 11956                           ;deca_device.c: 1462: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x2<<11) | 0x400
      +                          U);
 11957  0401  3000               	movlw	0
 11958  0402  0141               	movlb	1	; select bank1
 11959  0403  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 11960  0404  300B               	movlw	11
 11961  0405  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 11962  0406  3000               	movlw	0
 11963  0407  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 11964  0408  3008               	movlw	8
 11965  0409  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 11966  040A  3000               	movlw	0
 11967  040B  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 11968  040C  3000               	movlw	0
 11969  040D  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 11970  040E  3000               	movlw	0
 11971  040F  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 11972  0410  3000               	movlw	0
 11973  0411  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 11974  0412  3000               	movlw	0
 11975  0413  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 11976  0414  3000               	movlw	0
 11977  0415  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 11978  0416  30E7               	movlw	231
 11979  0417  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 11980  0418  30FF               	movlw	255
 11981  0419  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 11982  041A  3000               	movlw	0
 11983  041B  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 11984  041C  3000               	movlw	0
 11985  041D  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 11986  041E  3014               	movlw	20
 11987  041F                     L16:	
 11988  041F  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 11989  0420  3000               	movlw	0
 11990  0421  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 11991  0422  3193  2368  3181   	fcall	_dwt_modify32bitoffsetreg
 11992  0425                     l633:	
 11993                           
 11994                           ;deca_device.c: 1463: }
 11995                           ;deca_device.c: 1465: }
 11996                           ;deca_device.c: 1466: dwt_modify8bitoffsetreg(0x60000, 0, (uint8_t) ~0x3U, config->rxPAC
      +                          );
 11997  0425  3000               	movlw	0
 11998  0426  0141               	movlb	1	; select bank1
 11999  0427  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 12000  0428  3006               	movlw	6
 12001  0429  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 12002  042A  3000               	movlw	0
 12003  042B  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 12004  042C  3000               	movlw	0
 12005  042D  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 12006  042E  3000               	movlw	0
 12007  042F  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 12008  0430  3000               	movlw	0
 12009  0431  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 12010  0432  3000               	movlw	0
 12011  0433  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 12012  0434  3000               	movlw	0
 12013  0435  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 12014  0436  30FC               	movlw	252
 12015  0437  00D8               	movwf	??_dwt_configure^(0+128)
 12016  0438  0858               	movf	??_dwt_configure^(0+128),w
 12017  0439  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 12018  043A  0142               	movlb	2	; select bank2
 12019  043B  085E               	movf	dwt_configure@config^(0+256),w
 12020  043C  0086               	movwf	6
 12021  043D  3001               	movlw	1	; select bank2/3
 12022  043E  0087               	movwf	7
 12023  043F  3001               	movlw	1	; select bank2/3
 12024  0440  3F42               	moviw [2]fsr1
 12025  0441  0141               	movlb	1	; select bank1
 12026  0442  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 12027  0443  3199  2172  3181   	fcall	_dwt_modify8bitoffsetreg
 12028                           
 12029                           ;deca_device.c: 1468: dwt_write8bitoffsetreg(0x20000, 0, sts_len-1);
 12030  0446  3000               	movlw	0
 12031  0447  0141               	movlb	1	; select bank1
 12032  0448  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 12033  0449  3002               	movlw	2
 12034  044A  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 12035  044B  3000               	movlw	0
 12036  044C  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 12037  044D  3000               	movlw	0
 12038  044E  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 12039  044F  3000               	movlw	0
 12040  0450  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 12041  0451  3000               	movlw	0
 12042  0452  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 12043  0453  3000               	movlw	0
 12044  0454  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 12045  0455  3000               	movlw	0
 12046  0456  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 12047  0457  0142               	movlb	2	; select bank2
 12048  0458  0859               	movf	dwt_configure@sts_len^(0+256),w
 12049  0459  3EFF               	addlw	255
 12050  045A  0141               	movlb	1	; select bank1
 12051  045B  00D8               	movwf	??_dwt_configure^(0+128)
 12052  045C  0858               	movf	??_dwt_configure^(0+128),w
 12053  045D  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 12054  045E  31A5  25F3  3181   	fcall	_dwt_write8bitoffsetreg
 12055                           
 12056                           ;deca_device.c: 1470: if (config->txPreambLength == 0x07)
 12057  0461  0142               	movlb	2	; select bank2
 12058  0462  0A5E               	incf	dwt_configure@config^(0+256),w
 12059  0463  0086               	movwf	6
 12060  0464  3001               	movlw	1	; select bank2/3
 12061  0465  0087               	movwf	7
 12062  0466  3007               	movlw	7
 12063  0467  0601               	xorwf	1,w
 12064  0468  1D03               	btfss	3,2
 12065  0469  2C6C               	goto	l5689
 12066                           
 12067                           ;deca_device.c: 1471: {
 12068                           ;deca_device.c: 1472: dwt_setplenfine(8);
 12069  046A  3008               	movlw	8
 12070  046B  2C6D               	goto	L17
 12071  046C                     l5689:	
 12072                           ;deca_device.c: 1473: }
 12073                           
 12074                           
 12075                           ;deca_device.c: 1474: else
 12076                           ;deca_device.c: 1475: {
 12077                           ;deca_device.c: 1476: dwt_setplenfine(0);
 12078  046C  3000               	movlw	0
 12079  046D                     L17:	
 12080  046D  31A6  260F  3181   	fcall	_dwt_setplenfine
 12081                           
 12082                           ;deca_device.c: 1477: }
 12083                           ;deca_device.c: 1479: if((config->stsMode & 0x3) == 0x3)
 12084  0470  0142               	movlb	2	; select bank2
 12085  0471  085E               	movf	dwt_configure@config^(0+256),w
 12086  0472  3E0B               	addlw	11
 12087  0473  0086               	movwf	6
 12088  0474  3001               	movlw	1	; select bank2/3
 12089  0475  0087               	movwf	7
 12090  0476  3003               	movlw	3
 12091  0477  0501               	andwf	1,w
 12092  0478  0141               	movlb	1	; select bank1
 12093  0479  00D8               	movwf	??_dwt_configure^(0+128)
 12094  047A  3003               	movlw	3
 12095  047B  0658               	xorwf	??_dwt_configure^(0+128),w
 12096  047C  1D03               	btfss	3,2
 12097  047D  2C96               	goto	l5695
 12098                           
 12099                           ;deca_device.c: 1480: {
 12100                           ;deca_device.c: 1482: dwt_write32bitoffsetreg(0x6000c, 0, 0xAF5F35CC);
 12101  047E  3000               	movlw	0
 12102  047F  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12103  0480  3006               	movlw	6
 12104  0481  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12105  0482  3000               	movlw	0
 12106  0483  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12107  0484  300C               	movlw	12
 12108  0485  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12109  0486  3000               	movlw	0
 12110  0487  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12111  0488  3000               	movlw	0
 12112  0489  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12113  048A  3000               	movlw	0
 12114  048B  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12115  048C  3000               	movlw	0
 12116  048D  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12117  048E  30AF               	movlw	175
 12118  048F  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 12119  0490  305F               	movlw	95
 12120  0491  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 12121  0492  3035               	movlw	53
 12122  0493  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 12123  0494  30CC               	movlw	204
 12124  0495  2CAE               	goto	L14
 12125  0496                     l5695:	
 12126                           ;deca_device.c: 1483: }
 12127                           
 12128                           
 12129                           ;deca_device.c: 1484: else
 12130                           ;deca_device.c: 1485: {
 12131                           ;deca_device.c: 1487: dwt_write32bitoffsetreg(0x6000c, 0, 0xAF5F584C);
 12132  0496  3000               	movlw	0
 12133  0497  0141               	movlb	1	; select bank1
 12134  0498  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12135  0499  3006               	movlw	6
 12136  049A  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12137  049B  3000               	movlw	0
 12138  049C  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12139  049D  300C               	movlw	12
 12140  049E  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12141  049F  3000               	movlw	0
 12142  04A0  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12143  04A1  3000               	movlw	0
 12144  04A2  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12145  04A3  3000               	movlw	0
 12146  04A4  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12147  04A5  3000               	movlw	0
 12148  04A6  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12149  04A7  30AF               	movlw	175
 12150  04A8  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 12151  04A9  305F               	movlw	95
 12152  04AA  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 12153  04AB  3058               	movlw	88
 12154  04AC  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 12155  04AD  304C               	movlw	76
 12156  04AE                     L14:	
 12157  04AE  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 12158  04AF  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 12159                           
 12160                           ;deca_device.c: 1488: }
 12161                           ;deca_device.c: 1491: temp = dwt_read32bitoffsetreg(0x10014, 0);
 12162  04B2  3000               	movlw	0
 12163  04B3  0140               	movlb	0	; select bank0
 12164  04B4  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 12165  04B5  3001               	movlw	1
 12166  04B6  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 12167  04B7  3000               	movlw	0
 12168  04B8  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 12169  04B9  3014               	movlw	20
 12170  04BA  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 12171  04BB  3000               	movlw	0
 12172  04BC  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 12173  04BD  3000               	movlw	0
 12174  04BE  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 12175  04BF  3000               	movlw	0
 12176  04C0  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 12177  04C1  3000               	movlw	0
 12178  04C2  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 12179  04C3  319E  2616  3181   	fcall	_dwt_read32bitoffsetreg
 12180  04C6  0140               	movlb	0	; select bank0
 12181  04C7  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 12182  04C8  0142               	movlb	2	; select bank2
 12183  04C9  00D7               	movwf	(dwt_configure@temp+3)^(0+256)
 12184  04CA  0140               	movlb	0	; select bank0
 12185  04CB  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 12186  04CC  0142               	movlb	2	; select bank2
 12187  04CD  00D6               	movwf	(dwt_configure@temp+2)^(0+256)
 12188  04CE  0140               	movlb	0	; select bank0
 12189  04CF  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 12190  04D0  0142               	movlb	2	; select bank2
 12191  04D1  00D5               	movwf	(dwt_configure@temp+1)^(0+256)
 12192  04D2  0140               	movlb	0	; select bank0
 12193  04D3  0868               	movf	?_dwt_read32bitoffsetreg,w
 12194  04D4  0142               	movlb	2	; select bank2
 12195  04D5  00D4               	movwf	dwt_configure@temp^(0+256)
 12196                           
 12197                           ;deca_device.c: 1492: temp &= (~(0x1f00U | 0xf8U | 0x6U | 0x1U));
 12198  04D6  3000               	movlw	0
 12199  04D7  05D4               	andwf	dwt_configure@temp^(0+256),f
 12200  04D8  30E0               	movlw	224
 12201  04D9  05D5               	andwf	(dwt_configure@temp+1)^(0+256),f
 12202  04DA  3000               	movlw	0
 12203  04DB  05D6               	andwf	(dwt_configure@temp+2)^(0+256),f
 12204  04DC  3000               	movlw	0
 12205  04DD  05D7               	andwf	(dwt_configure@temp+3)^(0+256),f
 12206                           
 12207                           ;deca_device.c: 1494: if (chan == 9) temp |= 0x1U;
 12208  04DE  3009               	movlw	9
 12209  04DF  065D               	xorwf	dwt_configure@chan^(0+256),w
 12210  04E0  1903               	btfsc	3,2
 12211  04E1  1454               	bsf	dwt_configure@temp^(0+256),0
 12212                           
 12213                           ;deca_device.c: 1496: temp |= (0x1f00U & ((uint32_t)config->rxCode << (8U)));
 12214  04E2  3000               	movlw	0
 12215  04E3  0141               	movlb	1	; select bank1
 12216  04E4  00D8               	movwf	??_dwt_configure^(0+128)
 12217  04E5  301F               	movlw	31
 12218  04E6  00D9               	movwf	(??_dwt_configure^(0+128)+1)
 12219  04E7  3000               	movlw	0
 12220  04E8  00DA               	movwf	(??_dwt_configure^(0+128)+2)
 12221  04E9  3000               	movlw	0
 12222  04EA  00DB               	movwf	(??_dwt_configure^(0+128)+3)
 12223  04EB  0142               	movlb	2	; select bank2
 12224  04EC  085E               	movf	dwt_configure@config^(0+256),w
 12225  04ED  3E04               	addlw	4
 12226  04EE  0086               	movwf	6
 12227  04EF  3001               	movlw	1	; select bank2/3
 12228  04F0  0087               	movwf	7
 12229  04F1  0801               	movf	1,w
 12230  04F2  0141               	movlb	1	; select bank1
 12231  04F3  00DC               	movwf	(??_dwt_configure+4)^(0+128)
 12232  04F4  01DD               	clrf	((??_dwt_configure+4)^(0+128)+1)
 12233  04F5  01DE               	clrf	((??_dwt_configure+4)^(0+128)+2)
 12234  04F6  01DF               	clrf	((??_dwt_configure+4)^(0+128)+3)
 12235  04F7  3008               	movlw	8
 12236  04F8                     u5675:	
 12237  04F8  35DC               	lslf	(??_dwt_configure+4)^(0+128),f
 12238  04F9  0DDD               	rlf	((??_dwt_configure+4)^(0+128)+1),f
 12239  04FA  0DDE               	rlf	((??_dwt_configure+4)^(0+128)+2),f
 12240  04FB  0DDF               	rlf	((??_dwt_configure+4)^(0+128)+3),f
 12241  04FC  0B89               	decfsz	9,f
 12242  04FD  2CF8               	goto	u5675
 12243  04FE  085C               	movf	(??_dwt_configure+4)^(0+128),w
 12244  04FF  05D8               	andwf	??_dwt_configure^(0+128),f
 12245  0500  085D               	movf	(??_dwt_configure+5)^(0+128),w
 12246  0501  05D9               	andwf	(??_dwt_configure^(0+128)+1),f
 12247  0502  085E               	movf	(??_dwt_configure+6)^(0+128),w
 12248  0503  05DA               	andwf	(??_dwt_configure^(0+128)+2),f
 12249  0504  085F               	movf	(??_dwt_configure+7)^(0+128),w
 12250  0505  05DB               	andwf	(??_dwt_configure^(0+128)+3),f
 12251  0506  0858               	movf	??_dwt_configure^(0+128),w
 12252  0507  0142               	movlb	2	; select bank2
 12253  0508  04D4               	iorwf	dwt_configure@temp^(0+256),f
 12254  0509  0141               	movlb	1	; select bank1
 12255  050A  0859               	movf	(??_dwt_configure+1)^(0+128),w
 12256  050B  0142               	movlb	2	; select bank2
 12257  050C  04D5               	iorwf	(dwt_configure@temp+1)^(0+256),f
 12258  050D  0141               	movlb	1	; select bank1
 12259  050E  085A               	movf	(??_dwt_configure+2)^(0+128),w
 12260  050F  0142               	movlb	2	; select bank2
 12261  0510  04D6               	iorwf	(dwt_configure@temp+2)^(0+256),f
 12262  0511  0141               	movlb	1	; select bank1
 12263  0512  085B               	movf	(??_dwt_configure+3)^(0+128),w
 12264  0513  0142               	movlb	2	; select bank2
 12265  0514  04D7               	iorwf	(dwt_configure@temp+3)^(0+256),f
 12266                           
 12267                           ;deca_device.c: 1497: temp |= (0xf8U & ((uint32_t)config->txCode << (3U)));
 12268  0515  085E               	movf	dwt_configure@config^(0+256),w
 12269  0516  3E03               	addlw	3
 12270  0517  0086               	movwf	6
 12271  0518  3001               	movlw	1	; select bank2/3
 12272  0519  0087               	movwf	7
 12273  051A  0801               	movf	1,w
 12274  051B  0141               	movlb	1	; select bank1
 12275  051C  00D8               	movwf	??_dwt_configure^(0+128)
 12276  051D  3002               	movlw	2
 12277  051E                     u5685:	
 12278  051E  35D8               	lslf	??_dwt_configure^(0+128),f
 12279  051F  3EFF               	addlw	-1
 12280  0520  1D03               	skipz
 12281  0521  2D1E               	goto	u5685
 12282  0522  3558               	lslf	??_dwt_configure^(0+128),w
 12283  0523  39F8               	andlw	248
 12284  0524  00D9               	movwf	(??_dwt_configure+1)^(0+128)
 12285  0525  01DA               	clrf	((??_dwt_configure+1)^(0+128)+1)
 12286  0526  01DB               	clrf	((??_dwt_configure+1)^(0+128)+2)
 12287  0527  01DC               	clrf	((??_dwt_configure+1)^(0+128)+3)
 12288  0528  0859               	movf	(??_dwt_configure+1)^(0+128),w
 12289  0529  0142               	movlb	2	; select bank2
 12290  052A  04D4               	iorwf	dwt_configure@temp^(0+256),f
 12291  052B  0141               	movlb	1	; select bank1
 12292  052C  085A               	movf	(??_dwt_configure+2)^(0+128),w
 12293  052D  0142               	movlb	2	; select bank2
 12294  052E  04D5               	iorwf	(dwt_configure@temp+1)^(0+256),f
 12295  052F  0141               	movlb	1	; select bank1
 12296  0530  085B               	movf	(??_dwt_configure+3)^(0+128),w
 12297  0531  0142               	movlb	2	; select bank2
 12298  0532  04D6               	iorwf	(dwt_configure@temp+2)^(0+256),f
 12299  0533  0141               	movlb	1	; select bank1
 12300  0534  085C               	movf	(??_dwt_configure+4)^(0+128),w
 12301  0535  0142               	movlb	2	; select bank2
 12302  0536  04D7               	iorwf	(dwt_configure@temp+3)^(0+256),f
 12303                           
 12304                           ;deca_device.c: 1498: temp |= (0x6U & ((uint32_t)config->sfdType << (1U)));
 12305  0537  085E               	movf	dwt_configure@config^(0+256),w
 12306  0538  3E05               	addlw	5
 12307  0539  0086               	movwf	6
 12308  053A  3001               	movlw	1	; select bank2/3
 12309  053B  0087               	movwf	7
 12310  053C  3501               	lslf	1,w
 12311  053D  3906               	andlw	6
 12312  053E  0141               	movlb	1	; select bank1
 12313  053F  00D8               	movwf	??_dwt_configure^(0+128)
 12314  0540  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 12315  0541  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 12316  0542  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 12317  0543  0858               	movf	??_dwt_configure^(0+128),w
 12318  0544  0142               	movlb	2	; select bank2
 12319  0545  04D4               	iorwf	dwt_configure@temp^(0+256),f
 12320  0546  0141               	movlb	1	; select bank1
 12321  0547  0859               	movf	(??_dwt_configure+1)^(0+128),w
 12322  0548  0142               	movlb	2	; select bank2
 12323  0549  04D5               	iorwf	(dwt_configure@temp+1)^(0+256),f
 12324  054A  0141               	movlb	1	; select bank1
 12325  054B  085A               	movf	(??_dwt_configure+2)^(0+128),w
 12326  054C  0142               	movlb	2	; select bank2
 12327  054D  04D6               	iorwf	(dwt_configure@temp+2)^(0+256),f
 12328  054E  0141               	movlb	1	; select bank1
 12329  054F  085B               	movf	(??_dwt_configure+3)^(0+128),w
 12330  0550  0142               	movlb	2	; select bank2
 12331  0551  04D7               	iorwf	(dwt_configure@temp+3)^(0+256),f
 12332                           
 12333                           ;deca_device.c: 1500: dwt_write32bitoffsetreg(0x10014, 0, temp);
 12334  0552  3000               	movlw	0
 12335  0553  0141               	movlb	1	; select bank1
 12336  0554  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12337  0555  3001               	movlw	1
 12338  0556  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12339  0557  3000               	movlw	0
 12340  0558  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12341  0559  3014               	movlw	20
 12342  055A  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12343  055B  3000               	movlw	0
 12344  055C  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12345  055D  3000               	movlw	0
 12346  055E  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12347  055F  3000               	movlw	0
 12348  0560  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12349  0561  3000               	movlw	0
 12350  0562  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12351  0563  0142               	movlb	2	; select bank2
 12352  0564  0857               	movf	(dwt_configure@temp+3)^(0+256),w
 12353  0565  0141               	movlb	1	; select bank1
 12354  0566  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 12355  0567  0142               	movlb	2	; select bank2
 12356  0568  0856               	movf	(dwt_configure@temp+2)^(0+256),w
 12357  0569  0141               	movlb	1	; select bank1
 12358  056A  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 12359  056B  0142               	movlb	2	; select bank2
 12360  056C  0855               	movf	(dwt_configure@temp+1)^(0+256),w
 12361  056D  0141               	movlb	1	; select bank1
 12362  056E  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 12363  056F  0142               	movlb	2	; select bank2
 12364  0570  0854               	movf	dwt_configure@temp^(0+256),w
 12365  0571  0141               	movlb	1	; select bank1
 12366  0572  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 12367  0573  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 12368                           
 12369                           ;deca_device.c: 1504: dwt_modify32bitoffsetreg(0x24, 0, ~(0x400U | 0xf000U),
 12370                           ;deca_device.c: 1505: ((uint32_t)config->dataRate << (10U))
 12371                           ;deca_device.c: 1506: | ((uint32_t) config->txPreambLength) << (12U));
 12372  0576  3000               	movlw	0
 12373  0577  0141               	movlb	1	; select bank1
 12374  0578  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 12375  0579  3000               	movlw	0
 12376  057A  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 12377  057B  3000               	movlw	0
 12378  057C  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 12379  057D  3024               	movlw	36
 12380  057E  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 12381  057F  3000               	movlw	0
 12382  0580  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 12383  0581  3000               	movlw	0
 12384  0582  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 12385  0583  3000               	movlw	0
 12386  0584  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 12387  0585  3000               	movlw	0
 12388  0586  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 12389  0587  3000               	movlw	0
 12390  0588  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 12391  0589  3000               	movlw	0
 12392  058A  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 12393  058B  300B               	movlw	11
 12394  058C  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 12395  058D  30FF               	movlw	255
 12396  058E  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 12397  058F  0142               	movlb	2	; select bank2
 12398  0590  0A5E               	incf	dwt_configure@config^(0+256),w
 12399  0591  0086               	movwf	6
 12400  0592  3001               	movlw	1	; select bank2/3
 12401  0593  0087               	movwf	7
 12402  0594  0801               	movf	1,w
 12403  0595  0141               	movlb	1	; select bank1
 12404  0596  00D8               	movwf	??_dwt_configure^(0+128)
 12405  0597  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 12406  0598  01DA               	clrf	(??_dwt_configure^(0+128)+2)
 12407  0599  01DB               	clrf	(??_dwt_configure^(0+128)+3)
 12408  059A  300C               	movlw	12
 12409  059B                     u5695:	
 12410  059B  35D8               	lslf	??_dwt_configure^(0+128),f
 12411  059C  0DD9               	rlf	(??_dwt_configure^(0+128)+1),f
 12412  059D  0DDA               	rlf	(??_dwt_configure^(0+128)+2),f
 12413  059E  0DDB               	rlf	(??_dwt_configure^(0+128)+3),f
 12414  059F  0B89               	decfsz	9,f
 12415  05A0  2D9B               	goto	u5695
 12416  05A1  0142               	movlb	2	; select bank2
 12417  05A2  085E               	movf	dwt_configure@config^(0+256),w
 12418  05A3  3E06               	addlw	6
 12419  05A4  0086               	movwf	6
 12420  05A5  3001               	movlw	1	; select bank2/3
 12421  05A6  0087               	movwf	7
 12422  05A7  0801               	movf	1,w
 12423  05A8  0141               	movlb	1	; select bank1
 12424  05A9  00DC               	movwf	(??_dwt_configure+4)^(0+128)
 12425  05AA  01DD               	clrf	((??_dwt_configure+4)^(0+128)+1)
 12426  05AB  01DE               	clrf	((??_dwt_configure+4)^(0+128)+2)
 12427  05AC  01DF               	clrf	((??_dwt_configure+4)^(0+128)+3)
 12428  05AD  300A               	movlw	10
 12429  05AE                     u5705:	
 12430  05AE  35DC               	lslf	(??_dwt_configure+4)^(0+128),f
 12431  05AF  0DDD               	rlf	((??_dwt_configure+4)^(0+128)+1),f
 12432  05B0  0DDE               	rlf	((??_dwt_configure+4)^(0+128)+2),f
 12433  05B1  0DDF               	rlf	((??_dwt_configure+4)^(0+128)+3),f
 12434  05B2  0B89               	decfsz	9,f
 12435  05B3  2DAE               	goto	u5705
 12436  05B4  0858               	movf	??_dwt_configure^(0+128),w
 12437  05B5  045C               	iorwf	(??_dwt_configure+4)^(0+128),w
 12438  05B6  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 12439  05B7  0859               	movf	(??_dwt_configure+1)^(0+128),w
 12440  05B8  045D               	iorwf	(??_dwt_configure+5)^(0+128),w
 12441  05B9  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 12442  05BA  085A               	movf	(??_dwt_configure+2)^(0+128),w
 12443  05BB  045E               	iorwf	(??_dwt_configure+6)^(0+128),w
 12444  05BC  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 12445  05BD  085B               	movf	(??_dwt_configure+3)^(0+128),w
 12446  05BE  045F               	iorwf	(??_dwt_configure+7)^(0+128),w
 12447  05BF  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 12448  05C0  3193  2368  3181   	fcall	_dwt_modify32bitoffsetreg
 12449                           
 12450                           ;deca_device.c: 1509: if (config->sfdTO == 0)
 12451  05C3  0142               	movlb	2	; select bank2
 12452  05C4  085E               	movf	dwt_configure@config^(0+256),w
 12453  05C5  3E09               	addlw	9
 12454  05C6  0086               	movwf	6
 12455  05C7  3001               	movlw	1	; select bank2/3
 12456  05C8  0087               	movwf	7
 12457  05C9  0016               	moviw fsr1++
 12458  05CA  0401               	iorwf	1,w
 12459  05CB  1D03               	btfss	3,2
 12460  05CC  2DD6               	goto	l5711
 12461                           
 12462                           ;deca_device.c: 1510: {
 12463                           ;deca_device.c: 1511: config->sfdTO = 129;
 12464  05CD  085E               	movf	dwt_configure@config^(0+256),w
 12465  05CE  3E09               	addlw	9
 12466  05CF  0086               	movwf	6
 12467  05D0  3001               	movlw	1	; select bank2/3
 12468  05D1  0087               	movwf	7
 12469  05D2  3081               	movlw	129
 12470  05D3  3FC0               	movwi [0]fsr1
 12471  05D4  3000               	movlw	0
 12472  05D5  3FC1               	movwi [1]fsr1
 12473  05D6                     l5711:	
 12474                           
 12475                           ;deca_device.c: 1512: }
 12476                           ;deca_device.c: 1513: dwt_write16bitoffsetreg(0x60000, 2, config->sfdTO);
 12477  05D6  3000               	movlw	0
 12478  05D7  0141               	movlb	1	; select bank1
 12479  05D8  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 12480  05D9  3006               	movlw	6
 12481  05DA  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 12482  05DB  3000               	movlw	0
 12483  05DC  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 12484  05DD  3000               	movlw	0
 12485  05DE  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 12486  05DF  3000               	movlw	0
 12487  05E0  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 12488  05E1  3000               	movlw	0
 12489  05E2  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 12490  05E3  3000               	movlw	0
 12491  05E4  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 12492  05E5  3002               	movlw	2
 12493  05E6  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 12494  05E7  0142               	movlb	2	; select bank2
 12495  05E8  085E               	movf	dwt_configure@config^(0+256),w
 12496  05E9  3E09               	addlw	9
 12497  05EA  0086               	movwf	6
 12498  05EB  3001               	movlw	1	; select bank2/3
 12499  05EC  0087               	movwf	7
 12500  05ED  3F40               	moviw [0]fsr1
 12501  05EE  0141               	movlb	1	; select bank1
 12502  05EF  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 12503  05F0  3F41               	moviw [1]fsr1
 12504  05F1  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 12505  05F2  3180  2004  3181   	fcall	_dwt_write16bitoffsetreg
 12506                           
 12507                           ;deca_device.c: 1516: if (chan == 9)
 12508  05F5  3009               	movlw	9
 12509  05F6  0142               	movlb	2	; select bank2
 12510  05F7  065D               	xorwf	dwt_configure@chan^(0+256),w
 12511  05F8  1D03               	btfss	3,2
 12512  05F9  2E4B               	goto	l5717
 12513                           
 12514                           ;deca_device.c: 1517: {
 12515                           ;deca_device.c: 1519: dwt_write32bitoffsetreg(0x7001c, 0, 0x1C010034UL);
 12516  05FA  3000               	movlw	0
 12517  05FB  0141               	movlb	1	; select bank1
 12518  05FC  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12519  05FD  3007               	movlw	7
 12520  05FE  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12521  05FF  3000               	movlw	0
 12522  0600  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12523  0601  301C               	movlw	28
 12524  0602  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12525  0603  3000               	movlw	0
 12526  0604  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12527  0605  3000               	movlw	0
 12528  0606  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12529  0607  3000               	movlw	0
 12530  0608  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12531  0609  3000               	movlw	0
 12532  060A  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12533  060B  301C               	movlw	28
 12534  060C  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 12535  060D  3001               	movlw	1
 12536  060E  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 12537  060F  3000               	movlw	0
 12538  0610  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 12539  0611  3034               	movlw	52
 12540  0612  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 12541  0613  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 12542                           
 12543                           ;deca_device.c: 1520: dwt_write16bitoffsetreg(0x90000, 0, 0x0F3C);
 12544  0616  3000               	movlw	0
 12545  0617  0141               	movlb	1	; select bank1
 12546  0618  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 12547  0619  3009               	movlw	9
 12548  061A  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 12549  061B  3000               	movlw	0
 12550  061C  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 12551  061D  3000               	movlw	0
 12552  061E  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 12553  061F  3000               	movlw	0
 12554  0620  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 12555  0621  3000               	movlw	0
 12556  0622  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 12557  0623  3000               	movlw	0
 12558  0624  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 12559  0625  3000               	movlw	0
 12560  0626  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 12561  0627  303C               	movlw	60
 12562  0628  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 12563  0629  300F               	movlw	15
 12564  062A  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 12565  062B  3180  2004  3181   	fcall	_dwt_write16bitoffsetreg
 12566                           
 12567                           ;deca_device.c: 1522: dwt_write32bitoffsetreg(0x70010, 0, 0x08B5A833UL);
 12568  062E  3000               	movlw	0
 12569  062F  0141               	movlb	1	; select bank1
 12570  0630  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12571  0631  3007               	movlw	7
 12572  0632  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12573  0633  3000               	movlw	0
 12574  0634  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12575  0635  3010               	movlw	16
 12576  0636  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12577  0637  3000               	movlw	0
 12578  0638  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12579  0639  3000               	movlw	0
 12580  063A  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12581  063B  3000               	movlw	0
 12582  063C  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12583  063D  3000               	movlw	0
 12584  063E  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12585  063F  3008               	movlw	8
 12586  0640  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 12587  0641  30B5               	movlw	181
 12588  0642  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 12589  0643  30A8               	movlw	168
 12590  0644  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 12591  0645  3033               	movlw	51
 12592  0646  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 12593  0647  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 12594                           
 12595                           ;deca_device.c: 1523: }
 12596  064A  2E7F               	goto	l648
 12597  064B                     l5717:	
 12598                           
 12599                           ;deca_device.c: 1524: else
 12600                           ;deca_device.c: 1525: {
 12601                           ;deca_device.c: 1527: dwt_write32bitoffsetreg(0x7001c, 0, 0x1C071134UL);
 12602  064B  3000               	movlw	0
 12603  064C  0141               	movlb	1	; select bank1
 12604  064D  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 12605  064E  3007               	movlw	7
 12606  064F  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 12607  0650  3000               	movlw	0
 12608  0651  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 12609  0652  301C               	movlw	28
 12610  0653  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 12611  0654  3000               	movlw	0
 12612  0655  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 12613  0656  3000               	movlw	0
 12614  0657  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 12615  0658  3000               	movlw	0
 12616  0659  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 12617  065A  3000               	movlw	0
 12618  065B  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 12619  065C  301C               	movlw	28
 12620  065D  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 12621  065E  3007               	movlw	7
 12622  065F  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 12623  0660  3011               	movlw	17
 12624  0661  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 12625  0662  3034               	movlw	52
 12626  0663  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 12627  0664  319B  2336  3181   	fcall	_dwt_write32bitoffsetreg
 12628                           
 12629                           ;deca_device.c: 1528: dwt_write16bitoffsetreg(0x90000, 0, 0x1F3C);
 12630  0667  3000               	movlw	0
 12631  0668  0141               	movlb	1	; select bank1
 12632  0669  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 12633  066A  3009               	movlw	9
 12634  066B  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 12635  066C  3000               	movlw	0
 12636  066D  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 12637  066E  3000               	movlw	0
 12638  066F  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 12639  0670  3000               	movlw	0
 12640  0671  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 12641  0672  3000               	movlw	0
 12642  0673  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 12643  0674  3000               	movlw	0
 12644  0675  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 12645  0676  3000               	movlw	0
 12646  0677  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 12647  0678  303C               	movlw	60
 12648  0679  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 12649  067A  301F               	movlw	31
 12650  067B  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 12651  067C  3180  2004  3181   	fcall	_dwt_write16bitoffsetreg
 12652  067F                     l648:	
 12653                           
 12654                           ;deca_device.c: 1529: }
 12655                           ;deca_device.c: 1531: dwt_write8bitoffsetreg(0x70050, 1, 0x14);
 12656  067F  3000               	movlw	0
 12657  0680  0141               	movlb	1	; select bank1
 12658  0681  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 12659  0682  3007               	movlw	7
 12660  0683  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 12661  0684  3000               	movlw	0
 12662  0685  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 12663  0686  3050               	movlw	80
 12664  0687  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 12665  0688  3000               	movlw	0
 12666  0689  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 12667  068A  3000               	movlw	0
 12668  068B  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 12669  068C  3000               	movlw	0
 12670  068D  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 12671  068E  3001               	movlw	1
 12672  068F  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 12673  0690  3014               	movlw	20
 12674  0691  00D8               	movwf	??_dwt_configure^(0+128)
 12675  0692  0858               	movf	??_dwt_configure^(0+128),w
 12676  0693  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 12677  0694  31A5  25F3  3181   	fcall	_dwt_write8bitoffsetreg
 12678                           
 12679                           ;deca_device.c: 1532: dwt_write8bitoffsetreg(0x70018, 2, 0x0E);
 12680  0697  3000               	movlw	0
 12681  0698  0141               	movlb	1	; select bank1
 12682  0699  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 12683  069A  3007               	movlw	7
 12684  069B  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 12685  069C  3000               	movlw	0
 12686  069D  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 12687  069E  3018               	movlw	24
 12688  069F  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 12689  06A0  3000               	movlw	0
 12690  06A1  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 12691  06A2  3000               	movlw	0
 12692  06A3  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 12693  06A4  3000               	movlw	0
 12694  06A5  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 12695  06A6  3002               	movlw	2
 12696  06A7  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 12697  06A8  300E               	movlw	14
 12698  06A9  00D8               	movwf	??_dwt_configure^(0+128)
 12699  06AA  0858               	movf	??_dwt_configure^(0+128),w
 12700  06AB  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 12701  06AC  31A5  25F3  3181   	fcall	_dwt_write8bitoffsetreg
 12702                           
 12703                           ;deca_device.c: 1533: dwt_write8bitoffsetreg(0x90008, 0, 0x81);
 12704  06AF  3000               	movlw	0
 12705  06B0  0141               	movlb	1	; select bank1
 12706  06B1  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 12707  06B2  3009               	movlw	9
 12708  06B3  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 12709  06B4  3000               	movlw	0
 12710  06B5  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 12711  06B6  3008               	movlw	8
 12712  06B7  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 12713  06B8  3000               	movlw	0
 12714  06B9  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 12715  06BA  3000               	movlw	0
 12716  06BB  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 12717  06BC  3000               	movlw	0
 12718  06BD  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 12719  06BE  3000               	movlw	0
 12720  06BF  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 12721  06C0  3081               	movlw	129
 12722  06C1  00D8               	movwf	??_dwt_configure^(0+128)
 12723  06C2  0858               	movf	??_dwt_configure^(0+128),w
 12724  06C3  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 12725  06C4  31A5  25F3  3181   	fcall	_dwt_write8bitoffsetreg
 12726                           
 12727                           ;deca_device.c: 1536: dwt_write8bitoffsetreg(0x44, 0, 0x2U);
 12728  06C7  3000               	movlw	0
 12729  06C8  0141               	movlb	1	; select bank1
 12730  06C9  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 12731  06CA  3000               	movlw	0
 12732  06CB  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 12733  06CC  3000               	movlw	0
 12734  06CD  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 12735  06CE  3044               	movlw	68
 12736  06CF  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 12737  06D0  3000               	movlw	0
 12738  06D1  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 12739  06D2  3000               	movlw	0
 12740  06D3  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 12741  06D4  3000               	movlw	0
 12742  06D5  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 12743  06D6  3000               	movlw	0
 12744  06D7  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 12745  06D8  3002               	movlw	2
 12746  06D9  00D8               	movwf	??_dwt_configure^(0+128)
 12747  06DA  0858               	movf	??_dwt_configure^(0+128),w
 12748  06DB  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 12749  06DC  31A5  25F3  3181   	fcall	_dwt_write8bitoffsetreg
 12750                           
 12751                           ;deca_device.c: 1539: dwt_setdwstate(0x1);
 12752  06DF  3001               	movlw	1
 12753  06E0  0141               	movlb	1	; select bank1
 12754  06E1  00B8               	movwf	dwt_setdwstate@state^(0+128)
 12755  06E2  3000               	movlw	0
 12756  06E3  00B9               	movwf	(dwt_setdwstate@state^(0+128)+1)
 12757  06E4  3180  202C  3181   	fcall	_dwt_setdwstate
 12758                           
 12759                           ;deca_device.c: 1541: for (flag=1,cnt=0;cnt<(6);cnt++)
 12760  06E7  0142               	movlb	2	; select bank2
 12761  06E8  01D2               	clrf	dwt_configure@flag^(0+256)
 12762  06E9  0AD2               	incf	dwt_configure@flag^(0+256),f
 12763  06EA  01D8               	clrf	dwt_configure@cnt^(0+256)
 12764  06EB  3006               	movlw	6
 12765  06EC  0258               	subwf	dwt_configure@cnt^(0+256),w
 12766  06ED  1803               	btfsc	3,0
 12767  06EE  2F1E               	goto	l5737
 12768  06EF                     l5727:	
 12769                           
 12770                           ;deca_device.c: 1542: {
 12771                           ;deca_device.c: 1543: Sleep(1);
 12772  06EF  3000               	movlw	0
 12773  06F0  00F3               	movwf	Sleep@time+3
 12774  06F1  3000               	movlw	0
 12775  06F2  00F2               	movwf	Sleep@time+2
 12776  06F3  3000               	movlw	0
 12777  06F4  00F1               	movwf	Sleep@time+1
 12778  06F5  3001               	movlw	1
 12779  06F6  00F0               	movwf	Sleep@time
 12780  06F7  31A7  2753  3181   	fcall	_Sleep
 12781                           
 12782                           ;deca_device.c: 1544: if ((dwt_read8bitoffsetreg(0x44, 0) & 0x2U))
 12783  06FA  3000               	movlw	0
 12784  06FB  0140               	movlb	0	; select bank0
 12785  06FC  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 12786  06FD  3000               	movlw	0
 12787  06FE  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 12788  06FF  3000               	movlw	0
 12789  0700  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 12790  0701  3044               	movlw	68
 12791  0702  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 12792  0703  3000               	movlw	0
 12793  0704  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 12794  0705  3000               	movlw	0
 12795  0706  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 12796  0707  3000               	movlw	0
 12797  0708  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 12798  0709  3000               	movlw	0
 12799  070A  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 12800  070B  31A6  269C  3181   	fcall	_dwt_read8bitoffsetreg
 12801  070E  3902               	andlw	2
 12802  070F  1903               	btfsc	3,2
 12803  0710  2F14               	goto	l5733
 12804                           
 12805                           ;deca_device.c: 1545: {
 12806                           ;deca_device.c: 1546: flag=0;
 12807  0711  0142               	movlb	2	; select bank2
 12808  0712  01D2               	clrf	dwt_configure@flag^(0+256)
 12809                           
 12810                           ;deca_device.c: 1547: break;
 12811  0713  2F1E               	goto	l5737
 12812  0714                     l5733:	
 12813  0714  3001               	movlw	1
 12814  0715  0141               	movlb	1	; select bank1
 12815  0716  00D8               	movwf	??_dwt_configure^(0+128)
 12816  0717  0858               	movf	??_dwt_configure^(0+128),w
 12817  0718  0142               	movlb	2	; select bank2
 12818  0719  07D8               	addwf	dwt_configure@cnt^(0+256),f
 12819  071A  3006               	movlw	6
 12820  071B  0258               	subwf	dwt_configure@cnt^(0+256),w
 12821  071C  1C03               	skipc
 12822  071D  2EEF               	goto	l5727
 12823  071E                     l5737:	
 12824                           
 12825                           ;deca_device.c: 1548: }
 12826                           ;deca_device.c: 1549: }
 12827                           ;deca_device.c: 1550: if (flag)
 12828  071E  0852               	movf	dwt_configure@flag^(0+256),w
 12829  071F  1903               	btfsc	3,2
 12830  0720  2F27               	goto	l5743
 12831                           
 12832                           ;deca_device.c: 1551: {
 12833                           ;deca_device.c: 1552: return (-1);
 12834  0721  30FF               	movlw	255
 12835  0722  0141               	movlb	1	; select bank1
 12836  0723  00D6               	movwf	?_dwt_configure^(0+128)
 12837  0724  30FF               	movlw	255
 12838  0725  00D7               	movwf	(?_dwt_configure^(0+128)+1)
 12839  0726  0008               	return
 12840  0727                     l5743:	
 12841                           
 12842                           ;deca_device.c: 1553: }
 12843                           ;deca_device.c: 1555: if ((config->rxCode >= 9) && (config->rxCode <= 24))
 12844  0727  0142               	movlb	2	; select bank2
 12845  0728  085E               	movf	dwt_configure@config^(0+256),w
 12846  0729  3E04               	addlw	4
 12847  072A  0086               	movwf	6
 12848  072B  3001               	movlw	1	; select bank2/3
 12849  072C  0087               	movwf	7
 12850  072D  3009               	movlw	9
 12851  072E  0201               	subwf	1,w
 12852  072F  1C03               	skipc
 12853  0730  2F72               	goto	l5753
 12854  0731  085E               	movf	dwt_configure@config^(0+256),w
 12855  0732  3E04               	addlw	4
 12856  0733  0086               	movwf	6
 12857  0734  3001               	movlw	1	; select bank2/3
 12858  0735  0087               	movwf	7
 12859  0736  3019               	movlw	25
 12860  0737  0201               	subwf	1,w
 12861  0738  1803               	skipnc
 12862  0739  2F72               	goto	l5753
 12863                           
 12864                           ;deca_device.c: 1556: {
 12865                           ;deca_device.c: 1559: if (pdw3000local->dgc_otp_set == DWT_DGC_LOAD_FROM_OTP)
 12866  073A  0141               	movlb	1	; select bank1
 12867  073B  086F               	movf	_pdw3000local^(0+128),w
 12868  073C  3E09               	addlw	9
 12869  073D  0086               	movwf	6
 12870  073E  3002               	movlw	2	; select bank4/5
 12871  073F  0087               	movwf	7
 12872  0740  0301               	decf	1,w
 12873  0741  1D03               	btfss	3,2
 12874  0742  2F49               	goto	l5751
 12875                           
 12876                           ;deca_device.c: 1560: {
 12877                           ;deca_device.c: 1561: _dwt_kick_dgc_on_wakeup(chan);
 12878  0743  0142               	movlb	2	; select bank2
 12879  0744  085D               	movf	dwt_configure@chan^(0+256),w
 12880  0745  319B  23D0  3181   	fcall	__dwt_kick_dgc_on_wakeup
 12881                           
 12882                           ;deca_device.c: 1562: }
 12883  0748  2F55               	goto	l656
 12884  0749                     l5751:	
 12885                           
 12886                           ;deca_device.c: 1564: else
 12887                           ;deca_device.c: 1565: {
 12888                           ;deca_device.c: 1566: dwt_configmrxlut(chan);
 12889  0749  0142               	movlb	2	; select bank2
 12890  074A  085D               	movf	dwt_configure@chan^(0+256),w
 12891  074B  0141               	movlb	1	; select bank1
 12892  074C  00D8               	movwf	??_dwt_configure^(0+128)
 12893  074D  01D9               	clrf	(??_dwt_configure^(0+128)+1)
 12894  074E  0858               	movf	??_dwt_configure^(0+128),w
 12895  074F  00B8               	movwf	dwt_configmrxlut@channel^(0+128)
 12896  0750  0859               	movf	(??_dwt_configure+1)^(0+128),w
 12897  0751  00B9               	movwf	(dwt_configmrxlut@channel+1)^(0+128)
 12898  0752  3196  2687  3181   	fcall	_dwt_configmrxlut
 12899  0755                     l656:	
 12900                           
 12901                           ;deca_device.c: 1567: }
 12902                           ;deca_device.c: 1568: dwt_modify16bitoffsetreg(0x30018, 0x0, (uint16_t)~0x7e00U, 0x32 <<
      +                           (9U));
 12903  0755  3000               	movlw	0
 12904  0756  0141               	movlb	1	; select bank1
 12905  0757  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 12906  0758  3003               	movlw	3
 12907  0759  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 12908  075A  3000               	movlw	0
 12909  075B  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 12910  075C  3018               	movlw	24
 12911  075D  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 12912  075E  3000               	movlw	0
 12913  075F  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 12914  0760  3000               	movlw	0
 12915  0761  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 12916  0762  3000               	movlw	0
 12917  0763  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 12918  0764  3000               	movlw	0
 12919  0765  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 12920  0766  30FF               	movlw	255
 12921  0767  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 12922  0768  3081               	movlw	129
 12923  0769  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 12924  076A  3000               	movlw	0
 12925  076B  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 12926  076C  3064               	movlw	100
 12927  076D  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 12928  076E  319A  2221  3181   	fcall	_dwt_modify16bitoffsetreg
 12929                           
 12930                           ;deca_device.c: 1569: }
 12931  0771  2F8B               	goto	l657
 12932  0772                     l5753:	
 12933                           
 12934                           ;deca_device.c: 1570: else
 12935                           ;deca_device.c: 1571: {
 12936                           ;deca_device.c: 1572: dwt_modify8bitoffsetreg(0x30018, 0x0, (uint8_t)~0x1U, 0);
 12937  0772  3000               	movlw	0
 12938  0773  0141               	movlb	1	; select bank1
 12939  0774  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 12940  0775  3003               	movlw	3
 12941  0776  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 12942  0777  3000               	movlw	0
 12943  0778  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 12944  0779  3018               	movlw	24
 12945  077A  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 12946  077B  3000               	movlw	0
 12947  077C  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 12948  077D  3000               	movlw	0
 12949  077E  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 12950  077F  3000               	movlw	0
 12951  0780  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 12952  0781  3000               	movlw	0
 12953  0782  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 12954  0783  30FE               	movlw	254
 12955  0784  00D8               	movwf	??_dwt_configure^(0+128)
 12956  0785  0858               	movf	??_dwt_configure^(0+128),w
 12957  0786  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 12958  0787  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 12959  0788  3199  2172  3181   	fcall	_dwt_modify8bitoffsetreg
 12960  078B                     l657:	
 12961                           
 12962                           ;deca_device.c: 1573: }
 12963                           ;deca_device.c: 1577: error = dwt_pgf_cal(1);
 12964  078B  3001               	movlw	1
 12965  078C  0141               	movlb	1	; select bank1
 12966  078D  00CD               	movwf	dwt_pgf_cal@ldoen^(0+128)
 12967  078E  3000               	movlw	0
 12968  078F  00CE               	movwf	(dwt_pgf_cal@ldoen^(0+128)+1)
 12969  0790  319D  2541         	fcall	_dwt_pgf_cal
 12970  0792  0141               	movlb	1	; select bank1
 12971  0793  084E               	movf	(?_dwt_pgf_cal+1)^(0+128),w
 12972  0794  0142               	movlb	2	; select bank2
 12973  0795  00CD               	movwf	(dwt_configure@error+1)^(0+256)
 12974  0796  0141               	movlb	1	; select bank1
 12975  0797  084D               	movf	?_dwt_pgf_cal^(0+128),w
 12976  0798  0142               	movlb	2	; select bank2
 12977  0799  00CC               	movwf	dwt_configure@error^(0+256)
 12978                           
 12979                           ;deca_device.c: 1580: return error;
 12980  079A  084D               	movf	(dwt_configure@error+1)^(0+256),w
 12981  079B  0141               	movlb	1	; select bank1
 12982  079C  00D7               	movwf	(?_dwt_configure+1)^(0+128)
 12983  079D  0142               	movlb	2	; select bank2
 12984  079E  084C               	movf	dwt_configure@error^(0+256),w
 12985  079F  0141               	movlb	1	; select bank1
 12986  07A0  00D6               	movwf	?_dwt_configure^(0+128)
 12987  07A1  0008               	return
 12988  07A2                     __end_of_dwt_configure:	
 12989                           
 12990                           	psect	text22
 12991  1DA8                     __ptext22:	
 12992 ;; *************** function _get_sts_mnth *****************
 12993 ;; Defined at:
 12994 ;;		line 1176 in file "deca_device.c"
 12995 ;; Parameters:    Size  Location     Type
 12996 ;;  cipher          2    0[BANK0 ] unsigned int 
 12997 ;;  threshold       1    2[BANK0 ] unsigned char 
 12998 ;;  shift_val       1    3[BANK0 ] unsigned char 
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;  value           4   10[BANK0 ] unsigned long 
 13001 ;;  mod_val         2    8[BANK0 ] unsigned int 
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  2    0[BANK0 ] unsigned int 
 13004 ;; Registers used:
 13005 ;;		wreg, status,2, status,0, pclath, cstack
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13012 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13014 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13015 ;;Total ram usage:       14 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; Hardware stack levels required when called:    1
 13018 ;; This function calls:
 13019 ;;		___lmul
 13020 ;; This function is called by:
 13021 ;;		_dwt_configure
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           
 13026                           ;psect for function _get_sts_mnth
 13027  1DA8                     _get_sts_mnth:	
 13028                           
 13029                           ;deca_device.c: 1178: uint32_t value;
 13030                           ;deca_device.c: 1179: uint16_t mod_val;
 13031                           ;deca_device.c: 1181: value = cipher* (uint32_t)threshold;
 13032                           
 13033                           ;incstack = 0
 13034                           ; Regs used in _get_sts_mnth: [wreg+status,2+status,0+pclath+cstack]
 13035  1DA8  0140               	movlb	0	; select bank0
 13036  1DA9  0820               	movf	get_sts_mnth@cipher,w
 13037  1DAA  00F0               	movwf	___lmul@multiplier
 13038  1DAB  0821               	movf	get_sts_mnth@cipher+1,w
 13039  1DAC  00F1               	movwf	___lmul@multiplier+1
 13040  1DAD  01F2               	clrf	___lmul@multiplier+2
 13041  1DAE  01F3               	clrf	___lmul@multiplier+3
 13042  1DAF  0822               	movf	get_sts_mnth@threshold,w
 13043  1DB0  00A4               	movwf	??_get_sts_mnth
 13044  1DB1  01A5               	clrf	??_get_sts_mnth+1
 13045  1DB2  01A6               	clrf	??_get_sts_mnth+2
 13046  1DB3  01A7               	clrf	??_get_sts_mnth+3
 13047  1DB4  0827               	movf	??_get_sts_mnth+3,w
 13048  1DB5  00F7               	movwf	___lmul@multiplicand+3
 13049  1DB6  0826               	movf	??_get_sts_mnth+2,w
 13050  1DB7  00F6               	movwf	___lmul@multiplicand+2
 13051  1DB8  0825               	movf	??_get_sts_mnth+1,w
 13052  1DB9  00F5               	movwf	___lmul@multiplicand+1
 13053  1DBA  0824               	movf	??_get_sts_mnth,w
 13054  1DBB  00F4               	movwf	___lmul@multiplicand
 13055  1DBC  31A7  27D1  319D   	fcall	___lmul
 13056  1DBF  0873               	movf	?___lmul+3,w
 13057  1DC0  0140               	movlb	0	; select bank0
 13058  1DC1  00AD               	movwf	get_sts_mnth@value+3
 13059  1DC2  0872               	movf	?___lmul+2,w
 13060  1DC3  00AC               	movwf	get_sts_mnth@value+2
 13061  1DC4  0871               	movf	?___lmul+1,w
 13062  1DC5  00AB               	movwf	get_sts_mnth@value+1
 13063  1DC6  0870               	movf	?___lmul,w
 13064  1DC7  00AA               	movwf	get_sts_mnth@value
 13065                           
 13066                           ;deca_device.c: 1182: if (shift_val == 3)
 13067  1DC8  3003               	movlw	3
 13068  1DC9  0623               	xorwf	get_sts_mnth@shift_val,w
 13069  1DCA  1D03               	btfss	3,2
 13070  1DCB  2DEF               	goto	l5363
 13071                           
 13072                           ;deca_device.c: 1183: {
 13073                           ;deca_device.c: 1184: value *= 181;
 13074  1DCC  3000               	movlw	0
 13075  1DCD  00F3               	movwf	___lmul@multiplier+3
 13076  1DCE  3000               	movlw	0
 13077  1DCF  00F2               	movwf	___lmul@multiplier+2
 13078  1DD0  3000               	movlw	0
 13079  1DD1  00F1               	movwf	___lmul@multiplier+1
 13080  1DD2  30B5               	movlw	181
 13081  1DD3  00F0               	movwf	___lmul@multiplier
 13082  1DD4  082D               	movf	get_sts_mnth@value+3,w
 13083  1DD5  00F7               	movwf	___lmul@multiplicand+3
 13084  1DD6  082C               	movf	get_sts_mnth@value+2,w
 13085  1DD7  00F6               	movwf	___lmul@multiplicand+2
 13086  1DD8  082B               	movf	get_sts_mnth@value+1,w
 13087  1DD9  00F5               	movwf	___lmul@multiplicand+1
 13088  1DDA  082A               	movf	get_sts_mnth@value,w
 13089  1DDB  00F4               	movwf	___lmul@multiplicand
 13090  1DDC  31A7  27D1  319D   	fcall	___lmul
 13091  1DDF  0873               	movf	?___lmul+3,w
 13092  1DE0  0140               	movlb	0	; select bank0
 13093  1DE1  00AD               	movwf	get_sts_mnth@value+3
 13094  1DE2  0872               	movf	?___lmul+2,w
 13095  1DE3  00AC               	movwf	get_sts_mnth@value+2
 13096  1DE4  0871               	movf	?___lmul+1,w
 13097  1DE5  00AB               	movwf	get_sts_mnth@value+1
 13098  1DE6  0870               	movf	?___lmul,w
 13099  1DE7  00AA               	movwf	get_sts_mnth@value
 13100                           
 13101                           ;deca_device.c: 1185: value >>= 7;
 13102  1DE8  3007               	movlw	7
 13103  1DE9                     u5055:	
 13104  1DE9  36AD               	lsrf	get_sts_mnth@value+3,f
 13105  1DEA  0CAC               	rrf	get_sts_mnth@value+2,f
 13106  1DEB  0CAB               	rrf	get_sts_mnth@value+1,f
 13107  1DEC  0CAA               	rrf	get_sts_mnth@value,f
 13108  1DED  0B89               	decfsz	9,f
 13109  1DEE  2DE9               	goto	u5055
 13110  1DEF                     l5363:	
 13111                           
 13112                           ;deca_device.c: 1186: }
 13113                           ;deca_device.c: 1188: mod_val = value % 2048+ (2048>>1);
 13114  1DEF  30FF               	movlw	255
 13115  1DF0  052A               	andwf	get_sts_mnth@value,w
 13116  1DF1  00A4               	movwf	??_get_sts_mnth
 13117  1DF2  3007               	movlw	7
 13118  1DF3  052B               	andwf	get_sts_mnth@value+1,w
 13119  1DF4  00A5               	movwf	??_get_sts_mnth+1
 13120  1DF5  0824               	movf	??_get_sts_mnth,w
 13121  1DF6  3E00               	addlw	0
 13122  1DF7  00A8               	movwf	get_sts_mnth@mod_val
 13123  1DF8  3004               	movlw	4
 13124  1DF9  3D25               	addwfc	??_get_sts_mnth+1,w
 13125  1DFA  00A9               	movwf	get_sts_mnth@mod_val+1
 13126                           
 13127                           ;deca_device.c: 1189: value >>= 11;
 13128  1DFB  300B               	movlw	11
 13129  1DFC                     u5065:	
 13130  1DFC  36AD               	lsrf	get_sts_mnth@value+3,f
 13131  1DFD  0CAC               	rrf	get_sts_mnth@value+2,f
 13132  1DFE  0CAB               	rrf	get_sts_mnth@value+1,f
 13133  1DFF  0CAA               	rrf	get_sts_mnth@value,f
 13134  1E00  0B89               	decfsz	9,f
 13135  1E01  2DFC               	goto	u5065
 13136                           
 13137                           ;deca_device.c: 1191: if (mod_val >= 2048)
 13138  1E02  3008               	movlw	8
 13139  1E03  0229               	subwf	get_sts_mnth@mod_val+1,w
 13140  1E04  3000               	movlw	0
 13141  1E05  1903               	skipnz
 13142  1E06  0228               	subwf	get_sts_mnth@mod_val,w
 13143  1E07  1C03               	skipc
 13144  1E08  2E11               	goto	l592
 13145                           
 13146                           ;deca_device.c: 1192: value += 1;
 13147  1E09  3001               	movlw	1
 13148  1E0A  07AA               	addwf	get_sts_mnth@value,f
 13149  1E0B  3000               	movlw	0
 13150  1E0C  3DAB               	addwfc	get_sts_mnth@value+1,f
 13151  1E0D  3000               	movlw	0
 13152  1E0E  3DAC               	addwfc	get_sts_mnth@value+2,f
 13153  1E0F  3000               	movlw	0
 13154  1E10  3DAD               	addwfc	get_sts_mnth@value+3,f
 13155  1E11                     l592:	
 13156                           
 13157                           ;deca_device.c: 1194: return (uint16_t)value;
 13158  1E11  082B               	movf	get_sts_mnth@value+1,w
 13159  1E12  00A1               	movwf	?_get_sts_mnth+1
 13160  1E13  082A               	movf	get_sts_mnth@value,w
 13161  1E14  00A0               	movwf	?_get_sts_mnth
 13162  1E15  0008               	return
 13163  1E16                     __end_of_get_sts_mnth:	
 13164                           
 13165                           	psect	text23
 13166  27D1                     __ptext23:	
 13167 ;; *************** function ___lmul *****************
 13168 ;; Defined at:
 13169 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;  multiplier      4    0[COMMON] unsigned long 
 13172 ;;  multiplicand    4    4[COMMON] unsigned long 
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;  product         4    8[COMMON] unsigned long 
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  4    0[COMMON] unsigned long 
 13177 ;; Registers used:
 13178 ;;		wreg, status,2, status,0
 13179 ;; Tracked objects:
 13180 ;;		On entry : 0/0
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13184 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13185 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13187 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13188 ;;Total ram usage:       12 bytes
 13189 ;; Hardware stack levels used:    1
 13190 ;; This function calls:
 13191 ;;		Nothing
 13192 ;; This function is called by:
 13193 ;;		_get_sts_mnth
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197                           
 13198                           ;psect for function ___lmul
 13199  27D1                     ___lmul:	
 13200                           
 13201                           ;incstack = 0
 13202                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13203  27D1  3000               	movlw	0
 13204  27D2  00FB               	movwf	___lmul@product+3
 13205  27D3  3000               	movlw	0
 13206  27D4  00FA               	movwf	___lmul@product+2
 13207  27D5  3000               	movlw	0
 13208  27D6  00F9               	movwf	___lmul@product+1
 13209  27D7  3000               	movlw	0
 13210  27D8  00F8               	movwf	___lmul@product
 13211  27D9                     l5243:	
 13212  27D9  1C70               	btfss	___lmul@multiplier,0
 13213  27DA  2FE3               	goto	l5247
 13214  27DB  0874               	movf	___lmul@multiplicand,w
 13215  27DC  07F8               	addwf	___lmul@product,f
 13216  27DD  0875               	movf	___lmul@multiplicand+1,w
 13217  27DE  3DF9               	addwfc	___lmul@product+1,f
 13218  27DF  0876               	movf	___lmul@multiplicand+2,w
 13219  27E0  3DFA               	addwfc	___lmul@product+2,f
 13220  27E1  0877               	movf	___lmul@multiplicand+3,w
 13221  27E2  3DFB               	addwfc	___lmul@product+3,f
 13222  27E3                     l5247:	
 13223  27E3  3001               	movlw	1
 13224  27E4                     u4785:	
 13225  27E4  35F4               	lslf	___lmul@multiplicand,f
 13226  27E5  0DF5               	rlf	___lmul@multiplicand+1,f
 13227  27E6  0DF6               	rlf	___lmul@multiplicand+2,f
 13228  27E7  0DF7               	rlf	___lmul@multiplicand+3,f
 13229  27E8  0B89               	decfsz	9,f
 13230  27E9  2FE4               	goto	u4785
 13231  27EA  3001               	movlw	1
 13232  27EB                     u4795:	
 13233  27EB  36F3               	lsrf	___lmul@multiplier+3,f
 13234  27EC  0CF2               	rrf	___lmul@multiplier+2,f
 13235  27ED  0CF1               	rrf	___lmul@multiplier+1,f
 13236  27EE  0CF0               	rrf	___lmul@multiplier,f
 13237  27EF  0B89               	decfsz	9,f
 13238  27F0  2FEB               	goto	u4795
 13239  27F1  0873               	movf	___lmul@multiplier+3,w
 13240  27F2  0472               	iorwf	___lmul@multiplier+2,w
 13241  27F3  0471               	iorwf	___lmul@multiplier+1,w
 13242  27F4  0470               	iorwf	___lmul@multiplier,w
 13243  27F5  1D03               	skipz
 13244  27F6  2FD9               	goto	l5243
 13245  27F7  087B               	movf	___lmul@product+3,w
 13246  27F8  00F3               	movwf	?___lmul+3
 13247  27F9  087A               	movf	___lmul@product+2,w
 13248  27FA  00F2               	movwf	?___lmul+2
 13249  27FB  0879               	movf	___lmul@product+1,w
 13250  27FC  00F1               	movwf	?___lmul+1
 13251  27FD  0878               	movf	___lmul@product,w
 13252  27FE  00F0               	movwf	?___lmul
 13253  27FF  0008               	return
 13254  2800                     __end_of___lmul:	
 13255                           
 13256                           	psect	text24
 13257  260F                     __ptext24:	
 13258 ;; *************** function _dwt_setplenfine *****************
 13259 ;; Defined at:
 13260 ;;		line 1813 in file "deca_device.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;  preambleLeng    1    wreg     unsigned char 
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;  preambleLeng    1   73[BANK0 ] unsigned char 
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13277 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13278 ;;Total ram usage:        2 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    8
 13281 ;; This function calls:
 13282 ;;		_dwt_write8bitoffsetreg
 13283 ;; This function is called by:
 13284 ;;		_dwt_configure
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           
 13289                           ;psect for function _dwt_setplenfine
 13290  260F                     _dwt_setplenfine:	
 13291                           
 13292                           ;incstack = 0
 13293                           ; Regs used in _dwt_setplenfine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13294                           ;dwt_setplenfine@preambleLength stored from wreg
 13295  260F  0140               	movlb	0	; select bank0
 13296  2610  00E9               	movwf	dwt_setplenfine@preambleLength
 13297                           
 13298                           ;deca_device.c: 1815: dwt_write8bitoffsetreg(0x28, 1, preambleLength);
 13299  2611  3000               	movlw	0
 13300  2612  0141               	movlb	1	; select bank1
 13301  2613  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 13302  2614  3000               	movlw	0
 13303  2615  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 13304  2616  3000               	movlw	0
 13305  2617  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 13306  2618  3028               	movlw	40
 13307  2619  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 13308  261A  3000               	movlw	0
 13309  261B  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 13310  261C  3000               	movlw	0
 13311  261D  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 13312  261E  3000               	movlw	0
 13313  261F  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 13314  2620  3001               	movlw	1
 13315  2621  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 13316  2622  0140               	movlb	0	; select bank0
 13317  2623  0869               	movf	dwt_setplenfine@preambleLength,w
 13318  2624  00E8               	movwf	??_dwt_setplenfine
 13319  2625  0868               	movf	??_dwt_setplenfine,w
 13320  2626  0141               	movlb	1	; select bank1
 13321  2627  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 13322  2628  31A5  25F3         	fcall	_dwt_write8bitoffsetreg
 13323  262A  0008               	return
 13324  262B                     __end_of_dwt_setplenfine:	
 13325                           
 13326                           	psect	text25
 13327  002C                     __ptext25:	
 13328 ;; *************** function _dwt_setdwstate *****************
 13329 ;; Defined at:
 13330 ;;		line 878 in file "deca_device.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  state           2   24[BANK1 ] int 
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;		None
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13344 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13346 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13347 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13348 ;;Total ram usage:        4 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:    9
 13351 ;; This function calls:
 13352 ;;		_dwt_force_clocks
 13353 ;;		_dwt_modify32bitoffsetreg
 13354 ;;		_dwt_modify8bitoffsetreg
 13355 ;; This function is called by:
 13356 ;;		_dwt_configure
 13357 ;; This function uses a non-reentrant model
 13358 ;;
 13359                           
 13360                           
 13361                           ;psect for function _dwt_setdwstate
 13362  002C                     _dwt_setdwstate:	
 13363                           
 13364                           ;deca_device.c: 880: if (state == 0x1)
 13365                           
 13366                           ;incstack = 0
 13367                           ; Regs used in _dwt_setdwstate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13368  002C  0141               	movlb	1	; select bank1
 13369  002D  0338               	decf	dwt_setdwstate@state^(0+128),w
 13370  002E  0439               	iorwf	(dwt_setdwstate@state+1)^(0+128),w
 13371  002F  1D03               	btfss	3,2
 13372  0030  2853               	goto	l5341
 13373                           
 13374                           ;deca_device.c: 882: {
 13375                           ;deca_device.c: 884: dwt_force_clocks((5));
 13376  0031  3005               	movlw	5
 13377  0032  0140               	movlb	0	; select bank0
 13378  0033  00EB               	movwf	dwt_force_clocks@clocks
 13379  0034  3000               	movlw	0
 13380  0035  00EC               	movwf	dwt_force_clocks@clocks+1
 13381  0036  319A  22A8  3180   	fcall	_dwt_force_clocks
 13382                           
 13383                           ;deca_device.c: 885: dwt_modify8bitoffsetreg(0x110008, 0x01, -1, 0x100U>>8);
 13384  0039  3000               	movlw	0
 13385  003A  0141               	movlb	1	; select bank1
 13386  003B  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 13387  003C  3011               	movlw	17
 13388  003D  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 13389  003E  3000               	movlw	0
 13390  003F  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 13391  0040  3008               	movlw	8
 13392  0041  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 13393  0042  3000               	movlw	0
 13394  0043  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 13395  0044  3000               	movlw	0
 13396  0045  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 13397  0046  3000               	movlw	0
 13398  0047  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 13399  0048  3001               	movlw	1
 13400  0049  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 13401  004A  30FF               	movlw	255
 13402  004B  00BA               	movwf	??_dwt_setdwstate^(0+128)
 13403  004C  083A               	movf	??_dwt_setdwstate^(0+128),w
 13404  004D  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 13405  004E  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 13406  004F  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 13407  0050  3199  2172         	fcall	_dwt_modify8bitoffsetreg
 13408                           
 13409                           ;deca_device.c: 886: }
 13410  0052  0008               	return
 13411  0053                     l5341:	
 13412                           
 13413                           ;deca_device.c: 887: else if(state == 0x2)
 13414  0053  3002               	movlw	2
 13415  0054  0141               	movlb	1	; select bank1
 13416  0055  0638               	xorwf	dwt_setdwstate@state^(0+128),w
 13417  0056  0439               	iorwf	(dwt_setdwstate@state+1)^(0+128),w
 13418  0057  1D03               	btfss	3,2
 13419  0058  28B9               	goto	l5345
 13420                           
 13421                           ;deca_device.c: 888: {
 13422                           ;deca_device.c: 890: dwt_modify8bitoffsetreg(0x110004, 0, -1, (3));
 13423  0059  3000               	movlw	0
 13424  005A  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 13425  005B  3011               	movlw	17
 13426  005C  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 13427  005D  3000               	movlw	0
 13428  005E  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 13429  005F  3004               	movlw	4
 13430  0060  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 13431  0061  3000               	movlw	0
 13432  0062  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 13433  0063  3000               	movlw	0
 13434  0064  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 13435  0065  3000               	movlw	0
 13436  0066  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 13437  0067  3000               	movlw	0
 13438  0068  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 13439  0069  30FF               	movlw	255
 13440  006A  00BA               	movwf	??_dwt_setdwstate^(0+128)
 13441  006B  083A               	movf	??_dwt_setdwstate^(0+128),w
 13442  006C  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 13443  006D  3003               	movlw	3
 13444  006E  00BB               	movwf	(??_dwt_setdwstate+1)^(0+128)
 13445  006F  083B               	movf	(??_dwt_setdwstate+1)^(0+128),w
 13446  0070  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 13447  0071  3199  2172  3180   	fcall	_dwt_modify8bitoffsetreg
 13448                           
 13449                           ;deca_device.c: 892: dwt_modify32bitoffsetreg(0x110008, 0x0, (uint32_t) ~0x100U, 0x80000
      +                          0UL);
 13450  0074  3000               	movlw	0
 13451  0075  0141               	movlb	1	; select bank1
 13452  0076  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 13453  0077  3011               	movlw	17
 13454  0078  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 13455  0079  3000               	movlw	0
 13456  007A  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 13457  007B  3008               	movlw	8
 13458  007C  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 13459  007D  3000               	movlw	0
 13460  007E  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 13461  007F  3000               	movlw	0
 13462  0080  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 13463  0081  3000               	movlw	0
 13464  0082  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 13465  0083  3000               	movlw	0
 13466  0084  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 13467  0085  3000               	movlw	0
 13468  0086  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 13469  0087  3000               	movlw	0
 13470  0088  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 13471  0089  30FE               	movlw	254
 13472  008A  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 13473  008B  30FF               	movlw	255
 13474  008C  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 13475  008D  3000               	movlw	0
 13476  008E  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 13477  008F  3080               	movlw	128
 13478  0090  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 13479  0091  3000               	movlw	0
 13480  0092  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 13481  0093  3000               	movlw	0
 13482  0094  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 13483  0095  3193  2368  3180   	fcall	_dwt_modify32bitoffsetreg
 13484                           
 13485                           ;deca_device.c: 894: dwt_modify8bitoffsetreg(0x110008, 0x2, (uint8_t) ~(0x800000UL>>16),
      +                           0);
 13486  0098  3000               	movlw	0
 13487  0099  0141               	movlb	1	; select bank1
 13488  009A  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 13489  009B  3011               	movlw	17
 13490  009C  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 13491  009D  3000               	movlw	0
 13492  009E  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 13493  009F  3008               	movlw	8
 13494  00A0  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 13495  00A1  3000               	movlw	0
 13496  00A2  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 13497  00A3  3000               	movlw	0
 13498  00A4  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 13499  00A5  3000               	movlw	0
 13500  00A6  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 13501  00A7  3002               	movlw	2
 13502  00A8  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 13503  00A9  307F               	movlw	127
 13504  00AA  00BA               	movwf	??_dwt_setdwstate^(0+128)
 13505  00AB  083A               	movf	??_dwt_setdwstate^(0+128),w
 13506  00AC  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 13507  00AD  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 13508  00AE  3199  2172  3180   	fcall	_dwt_modify8bitoffsetreg
 13509                           
 13510                           ;deca_device.c: 896: dwt_force_clocks((5));
 13511  00B1  3005               	movlw	5
 13512  00B2  0140               	movlb	0	; select bank0
 13513  00B3  00EB               	movwf	dwt_force_clocks@clocks
 13514  00B4  3000               	movlw	0
 13515  00B5  00EC               	movwf	dwt_force_clocks@clocks+1
 13516  00B6  319A  22A8         	fcall	_dwt_force_clocks
 13517                           
 13518                           ;deca_device.c: 897: }
 13519  00B8  0008               	return
 13520  00B9                     l5345:	
 13521                           
 13522                           ;deca_device.c: 898: else
 13523                           ;deca_device.c: 900: {
 13524                           ;deca_device.c: 901: dwt_modify8bitoffsetreg(0x110004, 0, -1, (1));
 13525  00B9  3000               	movlw	0
 13526  00BA  0141               	movlb	1	; select bank1
 13527  00BB  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 13528  00BC  3011               	movlw	17
 13529  00BD  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 13530  00BE  3000               	movlw	0
 13531  00BF  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 13532  00C0  3004               	movlw	4
 13533  00C1  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 13534  00C2  3000               	movlw	0
 13535  00C3  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 13536  00C4  3000               	movlw	0
 13537  00C5  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 13538  00C6  3000               	movlw	0
 13539  00C7  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 13540  00C8  3000               	movlw	0
 13541  00C9  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 13542  00CA  30FF               	movlw	255
 13543  00CB  00BA               	movwf	??_dwt_setdwstate^(0+128)
 13544  00CC  083A               	movf	??_dwt_setdwstate^(0+128),w
 13545  00CD  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 13546  00CE  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 13547  00CF  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 13548  00D0  3199  2172  3180   	fcall	_dwt_modify8bitoffsetreg
 13549                           
 13550                           ;deca_device.c: 903: dwt_modify32bitoffsetreg(0x110008, 0x0, (uint32_t) ~0x100U, 0x80000
      +                          0UL);
 13551  00D3  3000               	movlw	0
 13552  00D4  0141               	movlb	1	; select bank1
 13553  00D5  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 13554  00D6  3011               	movlw	17
 13555  00D7  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 13556  00D8  3000               	movlw	0
 13557  00D9  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 13558  00DA  3008               	movlw	8
 13559  00DB  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 13560  00DC  3000               	movlw	0
 13561  00DD  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 13562  00DE  3000               	movlw	0
 13563  00DF  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 13564  00E0  3000               	movlw	0
 13565  00E1  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 13566  00E2  3000               	movlw	0
 13567  00E3  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 13568  00E4  3000               	movlw	0
 13569  00E5  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 13570  00E6  3000               	movlw	0
 13571  00E7  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 13572  00E8  30FE               	movlw	254
 13573  00E9  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 13574  00EA  30FF               	movlw	255
 13575  00EB  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 13576  00EC  3000               	movlw	0
 13577  00ED  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 13578  00EE  3080               	movlw	128
 13579  00EF  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 13580  00F0  3000               	movlw	0
 13581  00F1  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 13582  00F2  3000               	movlw	0
 13583  00F3  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 13584  00F4  3193  2368  3180   	fcall	_dwt_modify32bitoffsetreg
 13585                           
 13586                           ;deca_device.c: 904: dwt_modify8bitoffsetreg(0x110008, 0x2, (uint8_t) ~(0x800000UL>>16),
      +                           0);
 13587  00F7  3000               	movlw	0
 13588  00F8  0141               	movlb	1	; select bank1
 13589  00F9  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 13590  00FA  3011               	movlw	17
 13591  00FB  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 13592  00FC  3000               	movlw	0
 13593  00FD  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 13594  00FE  3008               	movlw	8
 13595  00FF  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 13596  0100  3000               	movlw	0
 13597  0101  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 13598  0102  3000               	movlw	0
 13599  0103  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 13600  0104  3000               	movlw	0
 13601  0105  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 13602  0106  3002               	movlw	2
 13603  0107  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 13604  0108  307F               	movlw	127
 13605  0109  00BA               	movwf	??_dwt_setdwstate^(0+128)
 13606  010A  083A               	movf	??_dwt_setdwstate^(0+128),w
 13607  010B  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 13608  010C  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 13609  010D  3199  2172         	fcall	_dwt_modify8bitoffsetreg
 13610  010F  0008               	return
 13611  0110                     __end_of_dwt_setdwstate:	
 13612                           
 13613                           	psect	text26
 13614  1AA8                     __ptext26:	
 13615 ;; *************** function _dwt_force_clocks *****************
 13616 ;; Defined at:
 13617 ;;		line 3615 in file "deca_device.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;  clocks          2   75[BANK0 ] int 
 13620 ;; Auto vars:     Size  Location     Type
 13621 ;;  regvalue0       2   77[BANK0 ] unsigned int 
 13622 ;; Return value:  Size  Location     Type
 13623 ;;                  1    wreg      void 
 13624 ;; Registers used:
 13625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13626 ;; Tracked objects:
 13627 ;;		On entry : 0/0
 13628 ;;		On exit  : 0/0
 13629 ;;		Unchanged: 0/0
 13630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13631 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13634 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13635 ;;Total ram usage:        4 bytes
 13636 ;; Hardware stack levels used:    1
 13637 ;; Hardware stack levels required when called:    8
 13638 ;; This function calls:
 13639 ;;		_dwt_write16bitoffsetreg
 13640 ;; This function is called by:
 13641 ;;		_dwt_setdwstate
 13642 ;;		_dwt_calcbandwidthadj
 13643 ;;		_dwt_configcwmode
 13644 ;;		_dwt_configcontinuousframemode
 13645 ;;		_dwt_calcpgcount
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           
 13650                           ;psect for function _dwt_force_clocks
 13651  1AA8                     _dwt_force_clocks:	
 13652                           
 13653                           ;deca_device.c: 3618: if (clocks == (1))
 13654                           
 13655                           ;incstack = 0
 13656                           ; Regs used in _dwt_force_clocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13657  1AA8  0140               	movlb	0	; select bank0
 13658  1AA9  036B               	decf	dwt_force_clocks@clocks,w
 13659  1AAA  046C               	iorwf	dwt_force_clocks@clocks+1,w
 13660  1AAB  1D03               	btfss	3,2
 13661  1AAC  2ACF               	goto	l5155
 13662                           
 13663                           ;deca_device.c: 3619: {
 13664                           ;deca_device.c: 3620: uint16_t regvalue0 = 0x1000U | 0x800U;
 13665  1AAD  3000               	movlw	0
 13666  1AAE  00ED               	movwf	dwt_force_clocks@regvalue0
 13667  1AAF  3018               	movlw	24
 13668  1AB0  00EE               	movwf	dwt_force_clocks@regvalue0+1
 13669                           
 13670                           ;deca_device.c: 3623: regvalue0 |= ((uint16_t) (2)) << (0U);
 13671  1AB1  14ED               	bsf	dwt_force_clocks@regvalue0,1
 13672                           
 13673                           ;deca_device.c: 3626: regvalue0 |= ((uint16_t) (2)) << (4U);
 13674  1AB2  16ED               	bsf	dwt_force_clocks@regvalue0,5
 13675                           
 13676                           ;deca_device.c: 3628: dwt_write16bitoffsetreg(0x110004, 0x0, regvalue0);
 13677  1AB3  3000               	movlw	0
 13678  1AB4  0141               	movlb	1	; select bank1
 13679  1AB5  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 13680  1AB6  3011               	movlw	17
 13681  1AB7  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 13682  1AB8  3000               	movlw	0
 13683  1AB9  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 13684  1ABA  3004               	movlw	4
 13685  1ABB  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 13686  1ABC  3000               	movlw	0
 13687  1ABD  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 13688  1ABE  3000               	movlw	0
 13689  1ABF  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 13690  1AC0  3000               	movlw	0
 13691  1AC1  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 13692  1AC2  3000               	movlw	0
 13693  1AC3  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 13694  1AC4  0140               	movlb	0	; select bank0
 13695  1AC5  086E               	movf	dwt_force_clocks@regvalue0+1,w
 13696  1AC6  0141               	movlb	1	; select bank1
 13697  1AC7  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 13698  1AC8  0140               	movlb	0	; select bank0
 13699  1AC9  086D               	movf	dwt_force_clocks@regvalue0,w
 13700  1ACA  0141               	movlb	1	; select bank1
 13701  1ACB  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 13702  1ACC  3180  2004  319A   	fcall	_dwt_write16bitoffsetreg
 13703  1ACF                     l5155:	
 13704                           
 13705                           ;deca_device.c: 3630: }
 13706                           ;deca_device.c: 3632: if (clocks == (5))
 13707  1ACF  3005               	movlw	5
 13708  1AD0  0140               	movlb	0	; select bank0
 13709  1AD1  066B               	xorwf	dwt_force_clocks@clocks,w
 13710  1AD2  046C               	iorwf	dwt_force_clocks@clocks+1,w
 13711  1AD3  1D03               	btfss	3,2
 13712  1AD4  0008               	return
 13713                           
 13714                           ;deca_device.c: 3633: {
 13715                           ;deca_device.c: 3635: dwt_write16bitoffsetreg(0x110004, 0x0, (uint16_t) (0x200 | 0x20000
      +                          0 | 0x100000));
 13716  1AD5  3000               	movlw	0
 13717  1AD6  0141               	movlb	1	; select bank1
 13718  1AD7  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 13719  1AD8  3011               	movlw	17
 13720  1AD9  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 13721  1ADA  3000               	movlw	0
 13722  1ADB  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 13723  1ADC  3004               	movlw	4
 13724  1ADD  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 13725  1ADE  3000               	movlw	0
 13726  1ADF  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 13727  1AE0  3000               	movlw	0
 13728  1AE1  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 13729  1AE2  3000               	movlw	0
 13730  1AE3  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 13731  1AE4  3000               	movlw	0
 13732  1AE5  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 13733  1AE6  3000               	movlw	0
 13734  1AE7  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 13735  1AE8  3002               	movlw	2
 13736  1AE9  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 13737  1AEA  3180  2004         	fcall	_dwt_write16bitoffsetreg
 13738  1AEC  0008               	return
 13739  1AED                     __end_of_dwt_force_clocks:	
 13740                           
 13741                           	psect	text27
 13742  0004                     __ptext27:	
 13743 ;; *************** function _dwt_write16bitoffsetreg *****************
 13744 ;; Defined at:
 13745 ;;		line 496 in file "deca_device.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  regFileID       4   12[BANK1 ] unsigned long 
 13748 ;;  regOffset       4   16[BANK1 ] unsigned long 
 13749 ;;  regval          2   20[BANK1 ] unsigned int 
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  buffer          2   73[BANK0 ] unsigned char [2]
 13752 ;; Return value:  Size  Location     Type
 13753 ;;                  1    wreg      void 
 13754 ;; Registers used:
 13755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13756 ;; Tracked objects:
 13757 ;;		On entry : 0/0
 13758 ;;		On exit  : 0/0
 13759 ;;		Unchanged: 0/0
 13760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13761 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13764 ;;      Totals:         0       3      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13765 ;;Total ram usage:       13 bytes
 13766 ;; Hardware stack levels used:    1
 13767 ;; Hardware stack levels required when called:    7
 13768 ;; This function calls:
 13769 ;;		_dwt_writetodevice
 13770 ;; This function is called by:
 13771 ;;		_dwt_configure
 13772 ;;		_dwt_setrxantennadelay
 13773 ;;		_dwt_settxantennadelay
 13774 ;;		__dwt_otpread
 13775 ;;		_dwt_force_clocks
 13776 ;;		_dwt_calcbandwidthadj
 13777 ;;		_dwt_configureframefilter
 13778 ;;		_dwt_setpanid
 13779 ;;		_dwt_setaddress16
 13780 ;;		_dwt_aon_read
 13781 ;;		_dwt_aon_write
 13782 ;;		___dwt_otp_write_wdata_id_reg
 13783 ;;		__dwt_otpprogword32
 13784 ;;		_dwt_configuresleep
 13785 ;;		_dwt_clearaonconfig
 13786 ;;		_dwt_isr
 13787 ;;		_dwt_setsniffmode
 13788 ;;		_dwt_setpreambledetecttimeout
 13789 ;;		_dwt_configure_aes
 13790 ;;		_dwt_configure_le_address
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           
 13795                           ;psect for function _dwt_write16bitoffsetreg
 13796  0004                     _dwt_write16bitoffsetreg:	
 13797                           
 13798                           ;deca_device.c: 498: uint8_t buffer[2] ;
 13799                           ;deca_device.c: 500: buffer[0] = (uint8_t)regval;
 13800                           
 13801                           ;incstack = 0
 13802                           ; Regs used in _dwt_write16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13803  0004  0141               	movlb	1	; select bank1
 13804  0005  0834               	movf	dwt_write16bitoffsetreg@regval^(0+128),w
 13805  0006  0140               	movlb	0	; select bank0
 13806  0007  00E8               	movwf	??_dwt_write16bitoffsetreg
 13807  0008  0868               	movf	??_dwt_write16bitoffsetreg,w
 13808  0009  00E9               	movwf	dwt_write16bitoffsetreg@buffer
 13809                           
 13810                           ;deca_device.c: 501: buffer[1] = regval >> 8 ;
 13811  000A  0141               	movlb	1	; select bank1
 13812  000B  0835               	movf	(dwt_write16bitoffsetreg@regval+1)^(0+128),w
 13813  000C  0140               	movlb	0	; select bank0
 13814  000D  00E8               	movwf	??_dwt_write16bitoffsetreg
 13815  000E  0868               	movf	??_dwt_write16bitoffsetreg,w
 13816  000F  00EA               	movwf	dwt_write16bitoffsetreg@buffer+1
 13817                           
 13818                           ;deca_device.c: 503: dwt_writetodevice(regFileID,regOffset,2,buffer);
 13819  0010  0141               	movlb	1	; select bank1
 13820  0011  082F               	movf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128),w
 13821  0012  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13822  0013  082E               	movf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128),w
 13823  0014  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13824  0015  082D               	movf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128),w
 13825  0016  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13826  0017  082C               	movf	dwt_write16bitoffsetreg@regFileID^(0+128),w
 13827  0018  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13828  0019  0831               	movf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128),w
 13829  001A  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13830  001B  0830               	movf	dwt_write16bitoffsetreg@regOffset^(0+128),w
 13831  001C  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13832  001D  3000               	movlw	0
 13833  001E  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 13834  001F  3000               	movlw	0
 13835  0020  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 13836  0021  3000               	movlw	0
 13837  0022  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 13838  0023  3002               	movlw	2
 13839  0024  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13840  0025  3069               	movlw	low dwt_write16bitoffsetreg@buffer
 13841  0026  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13842  0027  3000               	movlw	high dwt_write16bitoffsetreg@buffer
 13843  0028  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13844  0029  3199  213B         	fcall	_dwt_writetodevice
 13845  002B  0008               	return
 13846  002C                     __end_of_dwt_write16bitoffsetreg:	
 13847                           
 13848                           	psect	text28
 13849  1D41                     __ptext28:	
 13850 ;; *************** function _dwt_pgf_cal *****************
 13851 ;; Defined at:
 13852 ;;		line 1594 in file "deca_device.c"
 13853 ;; Parameters:    Size  Location     Type
 13854 ;;  ldoen           2   45[BANK1 ] int 
 13855 ;; Auto vars:     Size  Location     Type
 13856 ;;  val             2   49[BANK1 ] unsigned int 
 13857 ;;  temp            2   47[BANK1 ] int 
 13858 ;; Return value:  Size  Location     Type
 13859 ;;                  2   45[BANK1 ] int 
 13860 ;; Registers used:
 13861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13862 ;; Tracked objects:
 13863 ;;		On entry : 0/0
 13864 ;;		On exit  : 0/0
 13865 ;;		Unchanged: 0/0
 13866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13867 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13868 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13870 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13871 ;;Total ram usage:        6 bytes
 13872 ;; Hardware stack levels used:    1
 13873 ;; Hardware stack levels required when called:    9
 13874 ;; This function calls:
 13875 ;;		_dwt_modify16bitoffsetreg
 13876 ;;		_dwt_read16bitoffsetreg
 13877 ;;		_dwt_run_pgfcal
 13878 ;; This function is called by:
 13879 ;;		_dwt_configure
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           
 13883                           
 13884                           ;psect for function _dwt_pgf_cal
 13885  1D41                     _dwt_pgf_cal:	
 13886                           
 13887                           ;deca_device.c: 1596: int temp;
 13888                           ;deca_device.c: 1597: uint16_t val;
 13889                           ;deca_device.c: 1600: if (ldoen == 1)
 13890                           
 13891                           ;incstack = 0
 13892                           ; Regs used in _dwt_pgf_cal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13893  1D41  0141               	movlb	1	; select bank1
 13894  1D42  034D               	decf	dwt_pgf_cal@ldoen^(0+128),w
 13895  1D43  044E               	iorwf	(dwt_pgf_cal@ldoen+1)^(0+128),w
 13896  1D44  1D03               	btfss	3,2
 13897  1D45  2D7D               	goto	l660
 13898                           
 13899                           ;deca_device.c: 1601: {
 13900                           ;deca_device.c: 1602: val = dwt_read16bitoffsetreg(0x70048, 0);
 13901  1D46  3000               	movlw	0
 13902  1D47  0140               	movlb	0	; select bank0
 13903  1D48  00EB               	movwf	dwt_read16bitoffsetreg@regFileID+3
 13904  1D49  3007               	movlw	7
 13905  1D4A  00EA               	movwf	dwt_read16bitoffsetreg@regFileID+2
 13906  1D4B  3000               	movlw	0
 13907  1D4C  00E9               	movwf	dwt_read16bitoffsetreg@regFileID+1
 13908  1D4D  3048               	movlw	72
 13909  1D4E  00E8               	movwf	dwt_read16bitoffsetreg@regFileID
 13910  1D4F  3000               	movlw	0
 13911  1D50  00EF               	movwf	dwt_read16bitoffsetreg@regOffset+3
 13912  1D51  3000               	movlw	0
 13913  1D52  00EE               	movwf	dwt_read16bitoffsetreg@regOffset+2
 13914  1D53  3000               	movlw	0
 13915  1D54  00ED               	movwf	dwt_read16bitoffsetreg@regOffset+1
 13916  1D55  3000               	movlw	0
 13917  1D56  00EC               	movwf	dwt_read16bitoffsetreg@regOffset
 13918  1D57  3199  21E0  319D   	fcall	_dwt_read16bitoffsetreg
 13919  1D5A  0140               	movlb	0	; select bank0
 13920  1D5B  0869               	movf	?_dwt_read16bitoffsetreg+1,w
 13921  1D5C  0141               	movlb	1	; select bank1
 13922  1D5D  00D2               	movwf	(dwt_pgf_cal@val+1)^(0+128)
 13923  1D5E  0140               	movlb	0	; select bank0
 13924  1D5F  0868               	movf	?_dwt_read16bitoffsetreg,w
 13925  1D60  0141               	movlb	1	; select bank1
 13926  1D61  00D1               	movwf	dwt_pgf_cal@val^(0+128)
 13927                           
 13928                           ;deca_device.c: 1604: dwt_modify16bitoffsetreg(0x70048, 0, -1, ( 0x100U | 0x4U | 0x1U));
 13929  1D62  3000               	movlw	0
 13930  1D63  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 13931  1D64  3007               	movlw	7
 13932  1D65  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 13933  1D66  3000               	movlw	0
 13934  1D67  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 13935  1D68  3048               	movlw	72
 13936  1D69  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 13937  1D6A  3000               	movlw	0
 13938  1D6B  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 13939  1D6C  3000               	movlw	0
 13940  1D6D  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 13941  1D6E  3000               	movlw	0
 13942  1D6F  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 13943  1D70  3000               	movlw	0
 13944  1D71  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 13945  1D72  30FF               	movlw	255
 13946  1D73  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 13947  1D74  30FF               	movlw	255
 13948  1D75  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 13949  1D76  3005               	movlw	5
 13950  1D77  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 13951  1D78  3001               	movlw	1
 13952  1D79  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 13953  1D7A  319A  2221  319D   	fcall	_dwt_modify16bitoffsetreg
 13954  1D7D                     l660:	
 13955                           
 13956                           ;deca_device.c: 1608: }
 13957                           ;deca_device.c: 1611: temp = dwt_run_pgfcal();
 13958  1D7D  3188  202D  319D   	fcall	_dwt_run_pgfcal
 13959  1D80  0141               	movlb	1	; select bank1
 13960  1D81  083E               	movf	(?_dwt_run_pgfcal+1)^(0+128),w
 13961  1D82  00D0               	movwf	(dwt_pgf_cal@temp+1)^(0+128)
 13962  1D83  083D               	movf	?_dwt_run_pgfcal^(0+128),w
 13963  1D84  00CF               	movwf	dwt_pgf_cal@temp^(0+128)
 13964                           
 13965                           ;deca_device.c: 1614: if (ldoen == 1)
 13966  1D85  034D               	decf	dwt_pgf_cal@ldoen^(0+128),w
 13967  1D86  044E               	iorwf	(dwt_pgf_cal@ldoen+1)^(0+128),w
 13968  1D87  1D03               	btfss	3,2
 13969  1D88  2DA2               	goto	l5409
 13970                           
 13971                           ;deca_device.c: 1615: {
 13972                           ;deca_device.c: 1616: dwt_modify16bitoffsetreg(0x70048, 0, val, 0);
 13973  1D89  3000               	movlw	0
 13974  1D8A  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 13975  1D8B  3007               	movlw	7
 13976  1D8C  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 13977  1D8D  3000               	movlw	0
 13978  1D8E  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 13979  1D8F  3048               	movlw	72
 13980  1D90  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 13981  1D91  3000               	movlw	0
 13982  1D92  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 13983  1D93  3000               	movlw	0
 13984  1D94  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 13985  1D95  3000               	movlw	0
 13986  1D96  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 13987  1D97  3000               	movlw	0
 13988  1D98  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 13989  1D99  0852               	movf	(dwt_pgf_cal@val+1)^(0+128),w
 13990  1D9A  00A9               	movwf	(dwt_modify16bitoffsetreg@_and+1)^(0+128)
 13991  1D9B  0851               	movf	dwt_pgf_cal@val^(0+128),w
 13992  1D9C  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 13993  1D9D  3000               	movlw	0
 13994  1D9E  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 13995  1D9F  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 13996  1DA0  319A  2221         	fcall	_dwt_modify16bitoffsetreg
 13997  1DA2                     l5409:	
 13998                           
 13999                           ;deca_device.c: 1617: }
 14000                           ;deca_device.c: 1618: return temp;
 14001  1DA2  0141               	movlb	1	; select bank1
 14002  1DA3  0850               	movf	(dwt_pgf_cal@temp+1)^(0+128),w
 14003  1DA4  00CE               	movwf	(?_dwt_pgf_cal+1)^(0+128)
 14004  1DA5  084F               	movf	dwt_pgf_cal@temp^(0+128),w
 14005  1DA6  00CD               	movwf	?_dwt_pgf_cal^(0+128)
 14006  1DA7  0008               	return
 14007  1DA8                     __end_of_dwt_pgf_cal:	
 14008                           
 14009                           	psect	text29
 14010  082D                     __ptext29:	
 14011 ;; *************** function _dwt_run_pgfcal *****************
 14012 ;; Defined at:
 14013 ;;		line 1630 in file "deca_device.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;		None
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  val             4   40[BANK1 ] unsigned long 
 14018 ;;  data            4   33[BANK1 ] unsigned long 
 14019 ;;  result          2   38[BANK1 ] int 
 14020 ;;  cnt             1   44[BANK1 ] unsigned char 
 14021 ;;  flag            1   37[BANK1 ] unsigned char 
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  2   29[BANK1 ] int 
 14024 ;; Registers used:
 14025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14026 ;; Tracked objects:
 14027 ;;		On entry : 0/0
 14028 ;;		On exit  : 0/0
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14031 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14032 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14033 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14034 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14035 ;;Total ram usage:       16 bytes
 14036 ;; Hardware stack levels used:    1
 14037 ;; Hardware stack levels required when called:    8
 14038 ;; This function calls:
 14039 ;;		_Sleep
 14040 ;;		_dwt_modify8bitoffsetreg
 14041 ;;		_dwt_read32bitoffsetreg
 14042 ;;		_dwt_read8bitoffsetreg
 14043 ;;		_dwt_write32bitoffsetreg
 14044 ;;		_dwt_write8bitoffsetreg
 14045 ;; This function is called by:
 14046 ;;		_dwt_pgf_cal
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           
 14051                           ;psect for function _dwt_run_pgfcal
 14052  082D                     _dwt_run_pgfcal:	
 14053                           
 14054                           ;deca_device.c: 1632: int result = (0);
 14055                           
 14056                           ;incstack = 0
 14057                           ; Regs used in _dwt_run_pgfcal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14058  082D  0141               	movlb	1	; select bank1
 14059  082E  01C6               	clrf	dwt_run_pgfcal@result^(0+128)
 14060  082F  01C7               	clrf	(dwt_run_pgfcal@result+1)^(0+128)
 14061                           
 14062                           ;deca_device.c: 1633: uint32_t data;
 14063                           ;deca_device.c: 1634: uint32_t val = 0;
 14064  0830  3000               	movlw	0
 14065  0831  00CB               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 14066  0832  3000               	movlw	0
 14067  0833  00CA               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 14068  0834  3000               	movlw	0
 14069  0835  00C9               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 14070  0836  3000               	movlw	0
 14071  0837  00C8               	movwf	dwt_run_pgfcal@val^(0+128)
 14072                           
 14073                           ;deca_device.c: 1635: uint8_t cnt,flag;
 14074                           ;deca_device.c: 1638: data = (((uint32_t)0x02) << (16U)) | (0x3U & 0x1);
 14075  0838  3000               	movlw	0
 14076  0839  00C4               	movwf	(dwt_run_pgfcal@data+3)^(0+128)
 14077  083A  3002               	movlw	2
 14078  083B  00C3               	movwf	(dwt_run_pgfcal@data+2)^(0+128)
 14079  083C  3000               	movlw	0
 14080  083D  00C2               	movwf	(dwt_run_pgfcal@data+1)^(0+128)
 14081  083E  3001               	movlw	1
 14082  083F  00C1               	movwf	dwt_run_pgfcal@data^(0+128)
 14083                           
 14084                           ;deca_device.c: 1639: dwt_write32bitoffsetreg(0x4000c, 0x0, data);
 14085  0840  3000               	movlw	0
 14086  0841  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 14087  0842  3004               	movlw	4
 14088  0843  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 14089  0844  3000               	movlw	0
 14090  0845  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 14091  0846  300C               	movlw	12
 14092  0847  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 14093  0848  3000               	movlw	0
 14094  0849  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 14095  084A  3000               	movlw	0
 14096  084B  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 14097  084C  3000               	movlw	0
 14098  084D  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 14099  084E  3000               	movlw	0
 14100  084F  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 14101  0850  0844               	movf	(dwt_run_pgfcal@data+3)^(0+128),w
 14102  0851  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 14103  0852  0843               	movf	(dwt_run_pgfcal@data+2)^(0+128),w
 14104  0853  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 14105  0854  0842               	movf	(dwt_run_pgfcal@data+1)^(0+128),w
 14106  0855  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 14107  0856  0841               	movf	dwt_run_pgfcal@data^(0+128),w
 14108  0857  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 14109  0858  319B  2336  3188   	fcall	_dwt_write32bitoffsetreg
 14110                           
 14111                           ;deca_device.c: 1641: dwt_modify8bitoffsetreg(0x4000c, 0x0, -1, 0x10U);
 14112  085B  3000               	movlw	0
 14113  085C  0141               	movlb	1	; select bank1
 14114  085D  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 14115  085E  3004               	movlw	4
 14116  085F  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 14117  0860  3000               	movlw	0
 14118  0861  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 14119  0862  300C               	movlw	12
 14120  0863  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 14121  0864  3000               	movlw	0
 14122  0865  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 14123  0866  3000               	movlw	0
 14124  0867  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 14125  0868  3000               	movlw	0
 14126  0869  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 14127  086A  3000               	movlw	0
 14128  086B  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 14129  086C  30FF               	movlw	255
 14130  086D  00BF               	movwf	??_dwt_run_pgfcal^(0+128)
 14131  086E  083F               	movf	??_dwt_run_pgfcal^(0+128),w
 14132  086F  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 14133  0870  3010               	movlw	16
 14134  0871  00C0               	movwf	(??_dwt_run_pgfcal+1)^(0+128)
 14135  0872  0840               	movf	(??_dwt_run_pgfcal+1)^(0+128),w
 14136  0873  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 14137  0874  3199  2172  3188   	fcall	_dwt_modify8bitoffsetreg
 14138                           
 14139                           ;deca_device.c: 1643: for (flag=1,cnt=0;cnt<(3);cnt++)
 14140  0877  0141               	movlb	1	; select bank1
 14141  0878  01C5               	clrf	dwt_run_pgfcal@flag^(0+128)
 14142  0879  0AC5               	incf	dwt_run_pgfcal@flag^(0+128),f
 14143  087A  01CC               	clrf	dwt_run_pgfcal@cnt^(0+128)
 14144  087B  3003               	movlw	3
 14145  087C  024C               	subwf	dwt_run_pgfcal@cnt^(0+128),w
 14146  087D  1803               	btfsc	3,0
 14147  087E  28AD               	goto	l5189
 14148  087F                     l5179:	
 14149                           
 14150                           ;deca_device.c: 1644: {
 14151                           ;deca_device.c: 1645: Sleep(1);
 14152  087F  3000               	movlw	0
 14153  0880  00F3               	movwf	Sleep@time+3
 14154  0881  3000               	movlw	0
 14155  0882  00F2               	movwf	Sleep@time+2
 14156  0883  3000               	movlw	0
 14157  0884  00F1               	movwf	Sleep@time+1
 14158  0885  3001               	movlw	1
 14159  0886  00F0               	movwf	Sleep@time
 14160  0887  31A7  2753  3188   	fcall	_Sleep
 14161                           
 14162                           ;deca_device.c: 1646: if(dwt_read8bitoffsetreg(0x40020, 0x0) == 1)
 14163  088A  3000               	movlw	0
 14164  088B  0140               	movlb	0	; select bank0
 14165  088C  00EB               	movwf	dwt_read8bitoffsetreg@regFileID+3
 14166  088D  3004               	movlw	4
 14167  088E  00EA               	movwf	dwt_read8bitoffsetreg@regFileID+2
 14168  088F  3000               	movlw	0
 14169  0890  00E9               	movwf	dwt_read8bitoffsetreg@regFileID+1
 14170  0891  3020               	movlw	32
 14171  0892  00E8               	movwf	dwt_read8bitoffsetreg@regFileID
 14172  0893  3000               	movlw	0
 14173  0894  00EF               	movwf	dwt_read8bitoffsetreg@regOffset+3
 14174  0895  3000               	movlw	0
 14175  0896  00EE               	movwf	dwt_read8bitoffsetreg@regOffset+2
 14176  0897  3000               	movlw	0
 14177  0898  00ED               	movwf	dwt_read8bitoffsetreg@regOffset+1
 14178  0899  3000               	movlw	0
 14179  089A  00EC               	movwf	dwt_read8bitoffsetreg@regOffset
 14180  089B  31A6  269C  3188   	fcall	_dwt_read8bitoffsetreg
 14181  089E  3A01               	xorlw	1
 14182  089F  1D03               	skipz
 14183  08A0  28A4               	goto	l5185
 14184                           
 14185                           ;deca_device.c: 1647: {
 14186                           ;deca_device.c: 1648: flag=0;
 14187  08A1  0141               	movlb	1	; select bank1
 14188  08A2  01C5               	clrf	dwt_run_pgfcal@flag^(0+128)
 14189                           
 14190                           ;deca_device.c: 1649: break;
 14191  08A3  28AD               	goto	l5189
 14192  08A4                     l5185:	
 14193  08A4  3001               	movlw	1
 14194  08A5  0141               	movlb	1	; select bank1
 14195  08A6  00BF               	movwf	??_dwt_run_pgfcal^(0+128)
 14196  08A7  083F               	movf	??_dwt_run_pgfcal^(0+128),w
 14197  08A8  07CC               	addwf	dwt_run_pgfcal@cnt^(0+128),f
 14198  08A9  3003               	movlw	3
 14199  08AA  024C               	subwf	dwt_run_pgfcal@cnt^(0+128),w
 14200  08AB  1C03               	skipc
 14201  08AC  287F               	goto	l5179
 14202  08AD                     l5189:	
 14203                           
 14204                           ;deca_device.c: 1650: }
 14205                           ;deca_device.c: 1651: }
 14206                           ;deca_device.c: 1652: if (flag)
 14207  08AD  0845               	movf	dwt_run_pgfcal@flag^(0+128),w
 14208  08AE  1903               	btfsc	3,2
 14209  08AF  28B4               	goto	l5193
 14210                           
 14211                           ;deca_device.c: 1653: {
 14212                           ;deca_device.c: 1654: result = (-1);
 14213  08B0  30FF               	movlw	255
 14214  08B1  00C6               	movwf	dwt_run_pgfcal@result^(0+128)
 14215  08B2  30FF               	movlw	255
 14216  08B3  00C7               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 14217  08B4                     l5193:	
 14218                           
 14219                           ;deca_device.c: 1655: }
 14220                           ;deca_device.c: 1658: dwt_write8bitoffsetreg(0x4000c, 0x0, 0);
 14221  08B4  3000               	movlw	0
 14222  08B5  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 14223  08B6  3004               	movlw	4
 14224  08B7  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 14225  08B8  3000               	movlw	0
 14226  08B9  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 14227  08BA  300C               	movlw	12
 14228  08BB  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 14229  08BC  3000               	movlw	0
 14230  08BD  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 14231  08BE  3000               	movlw	0
 14232  08BF  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 14233  08C0  3000               	movlw	0
 14234  08C1  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 14235  08C2  3000               	movlw	0
 14236  08C3  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 14237  08C4  01B4               	clrf	dwt_write8bitoffsetreg@regval^(0+128)
 14238  08C5  31A5  25F3  3188   	fcall	_dwt_write8bitoffsetreg
 14239                           
 14240                           ;deca_device.c: 1659: dwt_write8bitoffsetreg(0x40020, 0x0, 1);
 14241  08C8  3000               	movlw	0
 14242  08C9  0141               	movlb	1	; select bank1
 14243  08CA  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 14244  08CB  3004               	movlw	4
 14245  08CC  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 14246  08CD  3000               	movlw	0
 14247  08CE  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 14248  08CF  3020               	movlw	32
 14249  08D0  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 14250  08D1  3000               	movlw	0
 14251  08D2  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 14252  08D3  3000               	movlw	0
 14253  08D4  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 14254  08D5  3000               	movlw	0
 14255  08D6  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 14256  08D7  3000               	movlw	0
 14257  08D8  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 14258  08D9  01B4               	clrf	dwt_write8bitoffsetreg@regval^(0+128)
 14259  08DA  0AB4               	incf	dwt_write8bitoffsetreg@regval^(0+128),f
 14260  08DB  31A5  25F3  3188   	fcall	_dwt_write8bitoffsetreg
 14261                           
 14262                           ;deca_device.c: 1660: dwt_modify8bitoffsetreg(0x4000c, 0x2, -1, 0x1);
 14263  08DE  3000               	movlw	0
 14264  08DF  0141               	movlb	1	; select bank1
 14265  08E0  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 14266  08E1  3004               	movlw	4
 14267  08E2  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 14268  08E3  3000               	movlw	0
 14269  08E4  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 14270  08E5  300C               	movlw	12
 14271  08E6  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 14272  08E7  3000               	movlw	0
 14273  08E8  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 14274  08E9  3000               	movlw	0
 14275  08EA  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 14276  08EB  3000               	movlw	0
 14277  08EC  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 14278  08ED  3002               	movlw	2
 14279  08EE  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 14280  08EF  30FF               	movlw	255
 14281  08F0  00BF               	movwf	??_dwt_run_pgfcal^(0+128)
 14282  08F1  083F               	movf	??_dwt_run_pgfcal^(0+128),w
 14283  08F2  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 14284  08F3  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 14285  08F4  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 14286  08F5  3199  2172  3188   	fcall	_dwt_modify8bitoffsetreg
 14287                           
 14288                           ;deca_device.c: 1661: val = dwt_read32bitoffsetreg(0x40014, 0x0);
 14289  08F8  3000               	movlw	0
 14290  08F9  0140               	movlb	0	; select bank0
 14291  08FA  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 14292  08FB  3004               	movlw	4
 14293  08FC  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 14294  08FD  3000               	movlw	0
 14295  08FE  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 14296  08FF  3014               	movlw	20
 14297  0900  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 14298  0901  3000               	movlw	0
 14299  0902  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 14300  0903  3000               	movlw	0
 14301  0904  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 14302  0905  3000               	movlw	0
 14303  0906  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 14304  0907  3000               	movlw	0
 14305  0908  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 14306  0909  319E  2616  3188   	fcall	_dwt_read32bitoffsetreg
 14307  090C  0140               	movlb	0	; select bank0
 14308  090D  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 14309  090E  0141               	movlb	1	; select bank1
 14310  090F  00CB               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 14311  0910  0140               	movlb	0	; select bank0
 14312  0911  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 14313  0912  0141               	movlb	1	; select bank1
 14314  0913  00CA               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 14315  0914  0140               	movlb	0	; select bank0
 14316  0915  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 14317  0916  0141               	movlb	1	; select bank1
 14318  0917  00C9               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 14319  0918  0140               	movlb	0	; select bank0
 14320  0919  0868               	movf	?_dwt_read32bitoffsetreg,w
 14321  091A  0141               	movlb	1	; select bank1
 14322  091B  00C8               	movwf	dwt_run_pgfcal@val^(0+128)
 14323                           
 14324                           ;deca_device.c: 1662: if (val == 0x1fffffff)
 14325  091C  0A48               	incf	dwt_run_pgfcal@val^(0+128),w
 14326  091D  1D03               	skipz
 14327  091E  292C               	goto	l5205
 14328  091F  0A49               	incf	(dwt_run_pgfcal@val+1)^(0+128),w
 14329  0920  1D03               	skipz
 14330  0921  292C               	goto	l5205
 14331  0922  0A4A               	incf	(dwt_run_pgfcal@val+2)^(0+128),w
 14332  0923  301F               	movlw	31
 14333  0924  1903               	skipnz
 14334  0925  064B               	xorwf	(dwt_run_pgfcal@val+3)^(0+128),w
 14335  0926  1D03               	btfss	3,2
 14336  0927  292C               	goto	l5205
 14337                           
 14338                           ;deca_device.c: 1663: {
 14339                           ;deca_device.c: 1665: result = (-1);
 14340  0928  30FF               	movlw	255
 14341  0929  00C6               	movwf	dwt_run_pgfcal@result^(0+128)
 14342  092A  30FF               	movlw	255
 14343  092B  00C7               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 14344  092C                     l5205:	
 14345                           
 14346                           ;deca_device.c: 1666: }
 14347                           ;deca_device.c: 1667: val = dwt_read32bitoffsetreg(0x4001c, 0x0);
 14348  092C  3000               	movlw	0
 14349  092D  0140               	movlb	0	; select bank0
 14350  092E  00EB               	movwf	dwt_read32bitoffsetreg@regFileID+3
 14351  092F  3004               	movlw	4
 14352  0930  00EA               	movwf	dwt_read32bitoffsetreg@regFileID+2
 14353  0931  3000               	movlw	0
 14354  0932  00E9               	movwf	dwt_read32bitoffsetreg@regFileID+1
 14355  0933  301C               	movlw	28
 14356  0934  00E8               	movwf	dwt_read32bitoffsetreg@regFileID
 14357  0935  3000               	movlw	0
 14358  0936  00EF               	movwf	dwt_read32bitoffsetreg@regOffset+3
 14359  0937  3000               	movlw	0
 14360  0938  00EE               	movwf	dwt_read32bitoffsetreg@regOffset+2
 14361  0939  3000               	movlw	0
 14362  093A  00ED               	movwf	dwt_read32bitoffsetreg@regOffset+1
 14363  093B  3000               	movlw	0
 14364  093C  00EC               	movwf	dwt_read32bitoffsetreg@regOffset
 14365  093D  319E  2616  3188   	fcall	_dwt_read32bitoffsetreg
 14366  0940  0140               	movlb	0	; select bank0
 14367  0941  086B               	movf	?_dwt_read32bitoffsetreg+3,w
 14368  0942  0141               	movlb	1	; select bank1
 14369  0943  00CB               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 14370  0944  0140               	movlb	0	; select bank0
 14371  0945  086A               	movf	?_dwt_read32bitoffsetreg+2,w
 14372  0946  0141               	movlb	1	; select bank1
 14373  0947  00CA               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 14374  0948  0140               	movlb	0	; select bank0
 14375  0949  0869               	movf	?_dwt_read32bitoffsetreg+1,w
 14376  094A  0141               	movlb	1	; select bank1
 14377  094B  00C9               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 14378  094C  0140               	movlb	0	; select bank0
 14379  094D  0868               	movf	?_dwt_read32bitoffsetreg,w
 14380  094E  0141               	movlb	1	; select bank1
 14381  094F  00C8               	movwf	dwt_run_pgfcal@val^(0+128)
 14382                           
 14383                           ;deca_device.c: 1668: if (val == 0x1fffffff)
 14384  0950  0A48               	incf	dwt_run_pgfcal@val^(0+128),w
 14385  0951  1D03               	skipz
 14386  0952  2960               	goto	l670
 14387  0953  0A49               	incf	(dwt_run_pgfcal@val+1)^(0+128),w
 14388  0954  1D03               	skipz
 14389  0955  2960               	goto	l670
 14390  0956  0A4A               	incf	(dwt_run_pgfcal@val+2)^(0+128),w
 14391  0957  301F               	movlw	31
 14392  0958  1903               	skipnz
 14393  0959  064B               	xorwf	(dwt_run_pgfcal@val+3)^(0+128),w
 14394  095A  1D03               	btfss	3,2
 14395  095B  2960               	goto	l670
 14396                           
 14397                           ;deca_device.c: 1669: {
 14398                           ;deca_device.c: 1671: result = (-1);
 14399  095C  30FF               	movlw	255
 14400  095D  00C6               	movwf	dwt_run_pgfcal@result^(0+128)
 14401  095E  30FF               	movlw	255
 14402  095F  00C7               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 14403  0960                     l670:	
 14404                           
 14405                           ;deca_device.c: 1672: }
 14406                           ;deca_device.c: 1674: return result;
 14407  0960  0847               	movf	(dwt_run_pgfcal@result+1)^(0+128),w
 14408  0961  00BE               	movwf	(?_dwt_run_pgfcal+1)^(0+128)
 14409  0962  0846               	movf	dwt_run_pgfcal@result^(0+128),w
 14410  0963  00BD               	movwf	?_dwt_run_pgfcal^(0+128)
 14411  0964  0008               	return
 14412  0965                     __end_of_dwt_run_pgfcal:	
 14413                           
 14414                           	psect	text30
 14415  25F3                     __ptext30:	
 14416 ;; *************** function _dwt_write8bitoffsetreg *****************
 14417 ;; Defined at:
 14418 ;;		line 518 in file "deca_device.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;  regFileID       4   12[BANK1 ] unsigned long 
 14421 ;;  regOffset       4   16[BANK1 ] unsigned long 
 14422 ;;  regval          1   20[BANK1 ] unsigned char 
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;		None
 14425 ;; Return value:  Size  Location     Type
 14426 ;;                  1    wreg      void 
 14427 ;; Registers used:
 14428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14429 ;; Tracked objects:
 14430 ;;		On entry : 0/0
 14431 ;;		On exit  : 0/0
 14432 ;;		Unchanged: 0/0
 14433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14434 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14437 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14438 ;;Total ram usage:        9 bytes
 14439 ;; Hardware stack levels used:    1
 14440 ;; Hardware stack levels required when called:    7
 14441 ;; This function calls:
 14442 ;;		_dwt_writetodevice
 14443 ;; This function is called by:
 14444 ;;		_dwt_initialise
 14445 ;;		_dwt_configuretxrf
 14446 ;;		_dwt_configure
 14447 ;;		_dwt_run_pgfcal
 14448 ;;		_dwt_setplenfine
 14449 ;;		_dwt_restoreconfig
 14450 ;;		_dwt_aon_read
 14451 ;;		_dwt_aon_write
 14452 ;;		_dwt_entersleep
 14453 ;;		_dwt_configuresleep
 14454 ;;		_dwt_clearaonconfig
 14455 ;;		_dwt_configciadiag
 14456 ;;		_dwt_enableautoack
 14457 ;;		_dwt_isr
 14458 ;;		_dwt_configeventcounters
 14459 ;;		_dwt_softreset
 14460 ;;		_dwt_setxtaltrim
 14461 ;;		_dwt_readtempvbat
 14462 ;;		_dwt_calcpgcount
 14463 ;;		_dwt_wait_aes_poll
 14464 ;;		_dwt_do_aes
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468                           
 14469                           ;psect for function _dwt_write8bitoffsetreg
 14470  25F3                     _dwt_write8bitoffsetreg:	
 14471                           
 14472                           ;deca_device.c: 522: dwt_writetodevice(regFileID, regOffset, 1, &regval);
 14473                           
 14474                           ;incstack = 0
 14475                           ; Regs used in _dwt_write8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14476  25F3  0141               	movlb	1	; select bank1
 14477  25F4  082F               	movf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128),w
 14478  25F5  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14479  25F6  082E               	movf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128),w
 14480  25F7  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14481  25F8  082D               	movf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128),w
 14482  25F9  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14483  25FA  082C               	movf	dwt_write8bitoffsetreg@regFileID^(0+128),w
 14484  25FB  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14485  25FC  0831               	movf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128),w
 14486  25FD  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14487  25FE  0830               	movf	dwt_write8bitoffsetreg@regOffset^(0+128),w
 14488  25FF  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14489  2600  3000               	movlw	0
 14490  2601  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14491  2602  3000               	movlw	0
 14492  2603  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14493  2604  3000               	movlw	0
 14494  2605  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14495  2606  3001               	movlw	1
 14496  2607  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14497  2608  30B4               	movlw	low dwt_write8bitoffsetreg@regval
 14498  2609  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14499  260A  3000               	movlw	high dwt_write8bitoffsetreg@regval
 14500  260B  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14501  260C  3199  213B         	fcall	_dwt_writetodevice
 14502  260E  0008               	return
 14503  260F                     __end_of_dwt_write8bitoffsetreg:	
 14504                           
 14505                           	psect	text31
 14506  269C                     __ptext31:	
 14507 ;; *************** function _dwt_read8bitoffsetreg *****************
 14508 ;; Defined at:
 14509 ;;		line 449 in file "deca_device.c"
 14510 ;; Parameters:    Size  Location     Type
 14511 ;;  regFileID       4   72[BANK0 ] unsigned long 
 14512 ;;  regOffset       4   76[BANK0 ] unsigned long 
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;  regval          1    0[BANK1 ] unsigned char 
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1    wreg      unsigned char 
 14517 ;; Registers used:
 14518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14519 ;; Tracked objects:
 14520 ;;		On entry : 0/0
 14521 ;;		On exit  : 0/0
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14524 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14525 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14527 ;;      Totals:         0       8       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14528 ;;Total ram usage:        9 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:    6
 14531 ;; This function calls:
 14532 ;;		_dwt_xfer3000
 14533 ;; This function is called by:
 14534 ;;		_dwt_configuretxrf
 14535 ;;		_dwt_configure
 14536 ;;		_dwt_run_pgfcal
 14537 ;;		_dwt_writetxfctrl
 14538 ;;		_dwt_starttx
 14539 ;;		_dwt_calcbandwidthadj
 14540 ;;		_dwt_readpgdelay
 14541 ;;		_dwt_aon_read
 14542 ;;		_dwt_checkirq
 14543 ;;		_dwt_isr
 14544 ;;		_dwt_rxenable
 14545 ;;		_dwt_readtempvbat
 14546 ;;		_dwt_readwakeuptemp
 14547 ;;		_dwt_readwakeupvbat
 14548 ;;		_dwt_calcpgcount
 14549 ;;		_dwt_wait_aes_poll
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           
 14554                           ;psect for function _dwt_read8bitoffsetreg
 14555  269C                     _dwt_read8bitoffsetreg:	
 14556                           
 14557                           ;deca_device.c: 451: uint8_t regval;
 14558                           ;deca_device.c: 452: dwt_xfer3000(regFileID, regOffset, 1, &regval, DW3000_SPI_RD_BIT);
 14559                           
 14560                           ;incstack = 0
 14561                           ; Regs used in _dwt_read8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14562  269C  0140               	movlb	0	; select bank0
 14563  269D  086B               	movf	dwt_read8bitoffsetreg@regFileID+3,w
 14564  269E  00CA               	movwf	dwt_xfer3000@regFileID+3
 14565  269F  086A               	movf	dwt_read8bitoffsetreg@regFileID+2,w
 14566  26A0  00C9               	movwf	dwt_xfer3000@regFileID+2
 14567  26A1  0869               	movf	dwt_read8bitoffsetreg@regFileID+1,w
 14568  26A2  00C8               	movwf	dwt_xfer3000@regFileID+1
 14569  26A3  0868               	movf	dwt_read8bitoffsetreg@regFileID,w
 14570  26A4  00C7               	movwf	dwt_xfer3000@regFileID
 14571  26A5  086D               	movf	dwt_read8bitoffsetreg@regOffset+1,w
 14572  26A6  00CC               	movwf	dwt_xfer3000@indx+1
 14573  26A7  086C               	movf	dwt_read8bitoffsetreg@regOffset,w
 14574  26A8  00CB               	movwf	dwt_xfer3000@indx
 14575  26A9  3000               	movlw	0
 14576  26AA  00D0               	movwf	dwt_xfer3000@length+3
 14577  26AB  3000               	movlw	0
 14578  26AC  00CF               	movwf	dwt_xfer3000@length+2
 14579  26AD  3000               	movlw	0
 14580  26AE  00CE               	movwf	dwt_xfer3000@length+1
 14581  26AF  3001               	movlw	1
 14582  26B0  00CD               	movwf	dwt_xfer3000@length
 14583  26B1  30A0               	movlw	low dwt_read8bitoffsetreg@regval
 14584  26B2  00D1               	movwf	dwt_xfer3000@buffer
 14585  26B3  3000               	movlw	high dwt_read8bitoffsetreg@regval
 14586  26B4  00D2               	movwf	dwt_xfer3000@buffer+1
 14587  26B5  3000               	movlw	0
 14588  26B6  00D3               	movwf	dwt_xfer3000@mode
 14589  26B7  00D4               	movwf	dwt_xfer3000@mode+1
 14590  26B8  3189  2165         	fcall	_dwt_xfer3000
 14591                           
 14592                           ;deca_device.c: 455: return regval ;
 14593  26BA  0141               	movlb	1	; select bank1
 14594  26BB  0820               	movf	dwt_read8bitoffsetreg@regval^(0+128),w
 14595  26BC  0008               	return
 14596  26BD                     __end_of_dwt_read8bitoffsetreg:	
 14597                           
 14598                           	psect	text32
 14599  1E16                     __ptext32:	
 14600 ;; *************** function _dwt_read32bitoffsetreg *****************
 14601 ;; Defined at:
 14602 ;;		line 395 in file "deca_device.c"
 14603 ;; Parameters:    Size  Location     Type
 14604 ;;  regFileID       4   72[BANK0 ] unsigned long 
 14605 ;;  regOffset       4   76[BANK0 ] unsigned long 
 14606 ;; Auto vars:     Size  Location     Type
 14607 ;;  buffer          4   19[BANK1 ] unsigned char [4]
 14608 ;;  regval          4   23[BANK1 ] unsigned long 
 14609 ;;  j               2   27[BANK1 ] int 
 14610 ;; Return value:  Size  Location     Type
 14611 ;;                  4   72[BANK0 ] unsigned long 
 14612 ;; Registers used:
 14613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14614 ;; Tracked objects:
 14615 ;;		On entry : 0/0
 14616 ;;		On exit  : 0/0
 14617 ;;		Unchanged: 0/0
 14618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14619 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14620 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14621 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14622 ;;      Totals:         0       8      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14623 ;;Total ram usage:       26 bytes
 14624 ;; Hardware stack levels used:    1
 14625 ;; Hardware stack levels required when called:    7
 14626 ;; This function calls:
 14627 ;;		_dwt_readfromdevice
 14628 ;; This function is called by:
 14629 ;;		_dwt_readdevid
 14630 ;;		_dwt_configure
 14631 ;;		_dwt_run_pgfcal
 14632 ;;		__dwt_otpread
 14633 ;;		_dwt_starttx
 14634 ;;		_dwt_setlnapamode
 14635 ;;		_dwt_readtxtimestamphi32
 14636 ;;		_dwt_readtxtimestamplo32
 14637 ;;		_dwt_readrxtimestamphi32
 14638 ;;		_dwt_readrxtimestamplo32
 14639 ;;		_dwt_readsystimestamphi32
 14640 ;;		__dwt_otpprogword32
 14641 ;;		_dwt_setrxaftertxdelay
 14642 ;;		_dwt_isr
 14643 ;;		_dwt_readeventcounters
 14644 ;; This function uses a non-reentrant model
 14645 ;;
 14646                           
 14647                           
 14648                           ;psect for function _dwt_read32bitoffsetreg
 14649  1E16                     _dwt_read32bitoffsetreg:	
 14650                           
 14651                           ;deca_device.c: 397: int j ;
 14652                           ;deca_device.c: 398: uint32_t regval = 0 ;
 14653                           
 14654                           ;incstack = 0
 14655                           ; Regs used in _dwt_read32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14656  1E16  3000               	movlw	0
 14657  1E17  0141               	movlb	1	; select bank1
 14658  1E18  00BA               	movwf	(dwt_read32bitoffsetreg@regval+3)^(0+128)
 14659  1E19  3000               	movlw	0
 14660  1E1A  00B9               	movwf	(dwt_read32bitoffsetreg@regval+2)^(0+128)
 14661  1E1B  3000               	movlw	0
 14662  1E1C  00B8               	movwf	(dwt_read32bitoffsetreg@regval+1)^(0+128)
 14663  1E1D  3000               	movlw	0
 14664  1E1E  00B7               	movwf	dwt_read32bitoffsetreg@regval^(0+128)
 14665                           
 14666                           ;deca_device.c: 399: uint8_t buffer[4] ;
 14667                           ;deca_device.c: 403: dwt_readfromdevice(regFileID,regOffset,4,buffer);
 14668  1E1F  0140               	movlb	0	; select bank0
 14669  1E20  086B               	movf	dwt_read32bitoffsetreg@regFileID+3,w
 14670  1E21  0141               	movlb	1	; select bank1
 14671  1E22  00A3               	movwf	(dwt_readfromdevice@regFileID+3)^(0+128)
 14672  1E23  0140               	movlb	0	; select bank0
 14673  1E24  086A               	movf	dwt_read32bitoffsetreg@regFileID+2,w
 14674  1E25  0141               	movlb	1	; select bank1
 14675  1E26  00A2               	movwf	(dwt_readfromdevice@regFileID+2)^(0+128)
 14676  1E27  0140               	movlb	0	; select bank0
 14677  1E28  0869               	movf	dwt_read32bitoffsetreg@regFileID+1,w
 14678  1E29  0141               	movlb	1	; select bank1
 14679  1E2A  00A1               	movwf	(dwt_readfromdevice@regFileID+1)^(0+128)
 14680  1E2B  0140               	movlb	0	; select bank0
 14681  1E2C  0868               	movf	dwt_read32bitoffsetreg@regFileID,w
 14682  1E2D  0141               	movlb	1	; select bank1
 14683  1E2E  00A0               	movwf	dwt_readfromdevice@regFileID^(0+128)
 14684  1E2F  0140               	movlb	0	; select bank0
 14685  1E30  086D               	movf	dwt_read32bitoffsetreg@regOffset+1,w
 14686  1E31  0141               	movlb	1	; select bank1
 14687  1E32  00A5               	movwf	(dwt_readfromdevice@index+1)^(0+128)
 14688  1E33  0140               	movlb	0	; select bank0
 14689  1E34  086C               	movf	dwt_read32bitoffsetreg@regOffset,w
 14690  1E35  0141               	movlb	1	; select bank1
 14691  1E36  00A4               	movwf	dwt_readfromdevice@index^(0+128)
 14692  1E37  3000               	movlw	0
 14693  1E38  00A9               	movwf	(dwt_readfromdevice@length+3)^(0+128)
 14694  1E39  3000               	movlw	0
 14695  1E3A  00A8               	movwf	(dwt_readfromdevice@length+2)^(0+128)
 14696  1E3B  3000               	movlw	0
 14697  1E3C  00A7               	movwf	(dwt_readfromdevice@length+1)^(0+128)
 14698  1E3D  3004               	movlw	4
 14699  1E3E  00A6               	movwf	dwt_readfromdevice@length^(0+128)
 14700  1E3F  30B3               	movlw	(low (dwt_read32bitoffsetreg@buffer| 0))& (0+255)
 14701  1E40  00AB               	movwf	??_dwt_read32bitoffsetreg^(0+128)
 14702  1E41  082B               	movf	??_dwt_read32bitoffsetreg^(0+128),w
 14703  1E42  00AA               	movwf	dwt_readfromdevice@buffer^(0+128)
 14704  1E43  3199  2107  319E   	fcall	_dwt_readfromdevice
 14705                           
 14706                           ;deca_device.c: 406: for (j = 3 ; j >= 0 ; j --)
 14707  1E46  3003               	movlw	3
 14708  1E47  0141               	movlb	1	; select bank1
 14709  1E48  00BB               	movwf	dwt_read32bitoffsetreg@j^(0+128)
 14710  1E49  3000               	movlw	0
 14711  1E4A  00BC               	movwf	(dwt_read32bitoffsetreg@j^(0+128)+1)
 14712  1E4B  1BBC               	btfsc	(dwt_read32bitoffsetreg@j+1)^(0+128),7
 14713  1E4C  2E7B               	goto	l5077
 14714  1E4D                     l5071:	
 14715                           
 14716                           ;deca_device.c: 407: {
 14717                           ;deca_device.c: 408: regval = (regval << 8) + buffer[j] ;
 14718  1E4D  083B               	movf	dwt_read32bitoffsetreg@j^(0+128),w
 14719  1E4E  3EB3               	addlw	(low (dwt_read32bitoffsetreg@buffer| 0))& (0+255)
 14720  1E4F  0086               	movwf	6
 14721  1E50  0187               	clrf	7
 14722  1E51  0801               	movf	1,w
 14723  1E52  00AB               	movwf	??_dwt_read32bitoffsetreg^(0+128)
 14724  1E53  01AC               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+1)
 14725  1E54  01AD               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+2)
 14726  1E55  01AE               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+3)
 14727  1E56  0837               	movf	dwt_read32bitoffsetreg@regval^(0+128),w
 14728  1E57  00AF               	movwf	(??_dwt_read32bitoffsetreg+4)^(0+128)
 14729  1E58  0838               	movf	(dwt_read32bitoffsetreg@regval+1)^(0+128),w
 14730  1E59  00B0               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+1)
 14731  1E5A  0839               	movf	(dwt_read32bitoffsetreg@regval+2)^(0+128),w
 14732  1E5B  00B1               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+2)
 14733  1E5C  083A               	movf	(dwt_read32bitoffsetreg@regval+3)^(0+128),w
 14734  1E5D  00B2               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+3)
 14735  1E5E  3008               	movlw	8
 14736  1E5F                     u4535:	
 14737  1E5F  35AF               	lslf	(??_dwt_read32bitoffsetreg+4)^(0+128),f
 14738  1E60  0DB0               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+1),f
 14739  1E61  0DB1               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+2),f
 14740  1E62  0DB2               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+3),f
 14741  1E63  0B89               	decfsz	9,f
 14742  1E64  2E5F               	goto	u4535
 14743  1E65  082F               	movf	(??_dwt_read32bitoffsetreg+4)^(0+128),w
 14744  1E66  07AB               	addwf	??_dwt_read32bitoffsetreg^(0+128),f
 14745  1E67  0830               	movf	(??_dwt_read32bitoffsetreg+5)^(0+128),w
 14746  1E68  3DAC               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+1),f
 14747  1E69  0831               	movf	(??_dwt_read32bitoffsetreg+6)^(0+128),w
 14748  1E6A  3DAD               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+2),f
 14749  1E6B  0832               	movf	(??_dwt_read32bitoffsetreg+7)^(0+128),w
 14750  1E6C  3DAE               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+3),f
 14751  1E6D  082E               	movf	(??_dwt_read32bitoffsetreg+3)^(0+128),w
 14752  1E6E  00BA               	movwf	(dwt_read32bitoffsetreg@regval+3)^(0+128)
 14753  1E6F  082D               	movf	(??_dwt_read32bitoffsetreg+2)^(0+128),w
 14754  1E70  00B9               	movwf	(dwt_read32bitoffsetreg@regval+2)^(0+128)
 14755  1E71  082C               	movf	(??_dwt_read32bitoffsetreg+1)^(0+128),w
 14756  1E72  00B8               	movwf	(dwt_read32bitoffsetreg@regval+1)^(0+128)
 14757  1E73  082B               	movf	??_dwt_read32bitoffsetreg^(0+128),w
 14758  1E74  00B7               	movwf	dwt_read32bitoffsetreg@regval^(0+128)
 14759  1E75  30FF               	movlw	255
 14760  1E76  07BB               	addwf	dwt_read32bitoffsetreg@j^(0+128),f
 14761  1E77  30FF               	movlw	255
 14762  1E78  3DBC               	addwfc	(dwt_read32bitoffsetreg@j+1)^(0+128),f
 14763  1E79  1FBC               	btfss	(dwt_read32bitoffsetreg@j+1)^(0+128),7
 14764  1E7A  2E4D               	goto	l5071
 14765  1E7B                     l5077:	
 14766                           
 14767                           ;deca_device.c: 409: }
 14768                           ;deca_device.c: 411: return (regval);
 14769  1E7B  083A               	movf	(dwt_read32bitoffsetreg@regval+3)^(0+128),w
 14770  1E7C  0140               	movlb	0	; select bank0
 14771  1E7D  00EB               	movwf	?_dwt_read32bitoffsetreg+3
 14772  1E7E  0141               	movlb	1	; select bank1
 14773  1E7F  0839               	movf	(dwt_read32bitoffsetreg@regval+2)^(0+128),w
 14774  1E80  0140               	movlb	0	; select bank0
 14775  1E81  00EA               	movwf	?_dwt_read32bitoffsetreg+2
 14776  1E82  0141               	movlb	1	; select bank1
 14777  1E83  0838               	movf	(dwt_read32bitoffsetreg@regval+1)^(0+128),w
 14778  1E84  0140               	movlb	0	; select bank0
 14779  1E85  00E9               	movwf	?_dwt_read32bitoffsetreg+1
 14780  1E86  0141               	movlb	1	; select bank1
 14781  1E87  0837               	movf	dwt_read32bitoffsetreg@regval^(0+128),w
 14782  1E88  0140               	movlb	0	; select bank0
 14783  1E89  00E8               	movwf	?_dwt_read32bitoffsetreg
 14784  1E8A  0008               	return
 14785  1E8B                     __end_of_dwt_read32bitoffsetreg:	
 14786                           
 14787                           	psect	text33
 14788  1972                     __ptext33:	
 14789 ;; *************** function _dwt_modify8bitoffsetreg *****************
 14790 ;; Defined at:
 14791 ;;		line 579 in file "deca_device.c"
 14792 ;; Parameters:    Size  Location     Type
 14793 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 14794 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 14795 ;;  _and            1    8[BANK1 ] const unsigned char 
 14796 ;;  _or             1    9[BANK1 ] const unsigned char 
 14797 ;; Auto vars:     Size  Location     Type
 14798 ;;  buf             2   73[BANK0 ] unsigned char [2]
 14799 ;; Return value:  Size  Location     Type
 14800 ;;                  1    wreg      void 
 14801 ;; Registers used:
 14802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14803 ;; Tracked objects:
 14804 ;;		On entry : 0/0
 14805 ;;		On exit  : 0/0
 14806 ;;		Unchanged: 0/0
 14807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14808 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14811 ;;      Totals:         0       3      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14812 ;;Total ram usage:       13 bytes
 14813 ;; Hardware stack levels used:    1
 14814 ;; Hardware stack levels required when called:    6
 14815 ;; This function calls:
 14816 ;;		_dwt_xfer3000
 14817 ;; This function is called by:
 14818 ;;		_dwt_setdwstate
 14819 ;;		_dwt_configure
 14820 ;;		_dwt_run_pgfcal
 14821 ;;		_dwt_calcbandwidthadj
 14822 ;;		_dwt_enablespicrccheck
 14823 ;;		_dwt_configurestsloadiv
 14824 ;;		_dwt_configureframefilter
 14825 ;;		_dwt_entersleep
 14826 ;;		_dwt_calibratesleepcnt
 14827 ;;		_dwt_configciadiag
 14828 ;;		_dwt_softreset
 14829 ;;		_dwt_repeated_frames
 14830 ;;		_dwt_readtempvbat
 14831 ;;		_dwt_calcpgcount
 14832 ;; This function uses a non-reentrant model
 14833 ;;
 14834                           
 14835                           
 14836                           ;psect for function _dwt_modify8bitoffsetreg
 14837  1972                     _dwt_modify8bitoffsetreg:	
 14838                           
 14839                           ;deca_device.c: 581: uint8_t buf[2];
 14840                           ;deca_device.c: 582: buf[0] = _and;
 14841                           
 14842                           ;incstack = 0
 14843                           ; Regs used in _dwt_modify8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14844  1972  0141               	movlb	1	; select bank1
 14845  1973  0828               	movf	dwt_modify8bitoffsetreg@_and^(0+128),w
 14846  1974  0140               	movlb	0	; select bank0
 14847  1975  00E8               	movwf	??_dwt_modify8bitoffsetreg
 14848  1976  0868               	movf	??_dwt_modify8bitoffsetreg,w
 14849  1977  00E9               	movwf	dwt_modify8bitoffsetreg@buf
 14850                           
 14851                           ;deca_device.c: 583: buf[1] = _or;
 14852  1978  0141               	movlb	1	; select bank1
 14853  1979  0829               	movf	dwt_modify8bitoffsetreg@_or^(0+128),w
 14854  197A  0140               	movlb	0	; select bank0
 14855  197B  00E8               	movwf	??_dwt_modify8bitoffsetreg
 14856  197C  0868               	movf	??_dwt_modify8bitoffsetreg,w
 14857  197D  00EA               	movwf	dwt_modify8bitoffsetreg@buf+1
 14858                           
 14859                           ;deca_device.c: 584: dwt_xfer3000(regFileID, regOffset, sizeof(buf),buf, DW3000_SPI_AND_
      +                          OR_8);
 14860  197E  0141               	movlb	1	; select bank1
 14861  197F  0823               	movf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128),w
 14862  1980  0140               	movlb	0	; select bank0
 14863  1981  00CA               	movwf	dwt_xfer3000@regFileID+3
 14864  1982  0141               	movlb	1	; select bank1
 14865  1983  0822               	movf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128),w
 14866  1984  0140               	movlb	0	; select bank0
 14867  1985  00C9               	movwf	dwt_xfer3000@regFileID+2
 14868  1986  0141               	movlb	1	; select bank1
 14869  1987  0821               	movf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128),w
 14870  1988  0140               	movlb	0	; select bank0
 14871  1989  00C8               	movwf	dwt_xfer3000@regFileID+1
 14872  198A  0141               	movlb	1	; select bank1
 14873  198B  0820               	movf	dwt_modify8bitoffsetreg@regFileID^(0+128),w
 14874  198C  0140               	movlb	0	; select bank0
 14875  198D  00C7               	movwf	dwt_xfer3000@regFileID
 14876  198E  0141               	movlb	1	; select bank1
 14877  198F  0825               	movf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128),w
 14878  1990  0140               	movlb	0	; select bank0
 14879  1991  00CC               	movwf	dwt_xfer3000@indx+1
 14880  1992  0141               	movlb	1	; select bank1
 14881  1993  0824               	movf	dwt_modify8bitoffsetreg@regOffset^(0+128),w
 14882  1994  0140               	movlb	0	; select bank0
 14883  1995  00CB               	movwf	dwt_xfer3000@indx
 14884  1996  3000               	movlw	0
 14885  1997  00D0               	movwf	dwt_xfer3000@length+3
 14886  1998  3000               	movlw	0
 14887  1999  00CF               	movwf	dwt_xfer3000@length+2
 14888  199A  3000               	movlw	0
 14889  199B  00CE               	movwf	dwt_xfer3000@length+1
 14890  199C  3002               	movlw	2
 14891  199D  00CD               	movwf	dwt_xfer3000@length
 14892  199E  3069               	movlw	low dwt_modify8bitoffsetreg@buf
 14893  199F  00D1               	movwf	dwt_xfer3000@buffer
 14894  19A0  3000               	movlw	high dwt_modify8bitoffsetreg@buf
 14895  19A1  00D2               	movwf	dwt_xfer3000@buffer+1
 14896  19A2  3001               	movlw	1
 14897  19A3  00D3               	movwf	dwt_xfer3000@mode
 14898  19A4  3080               	movlw	128
 14899  19A5  00D4               	movwf	dwt_xfer3000@mode+1
 14900  19A6  3189  2165         	fcall	_dwt_xfer3000
 14901  19A8  0008               	return
 14902  19A9                     __end_of_dwt_modify8bitoffsetreg:	
 14903                           
 14904                           	psect	text34
 14905  2753                     __ptext34:	
 14906 ;; *************** function _Sleep *****************
 14907 ;; Defined at:
 14908 ;;		line 293 in file "main.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;  time            4    0[COMMON] unsigned long 
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;  i               4    5[COMMON] volatile unsigned long 
 14913 ;; Return value:  Size  Location     Type
 14914 ;;                  1    wreg      void 
 14915 ;; Registers used:
 14916 ;;		wreg
 14917 ;; Tracked objects:
 14918 ;;		On entry : 0/0
 14919 ;;		On exit  : 0/0
 14920 ;;		Unchanged: 0/0
 14921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14923 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14925 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14926 ;;Total ram usage:        9 bytes
 14927 ;; Hardware stack levels used:    1
 14928 ;; This function calls:
 14929 ;;		Nothing
 14930 ;; This function is called by:
 14931 ;;		_dwt_initialise
 14932 ;;		_dwt_configure
 14933 ;;		_dwt_run_pgfcal
 14934 ;;		_reset_DWIC
 14935 ;;		_dw_main
 14936 ;;		_deca_sleep
 14937 ;;		_spi_cs_low_delay
 14938 ;;		_wakeup_device_with_io
 14939 ;;		_port_wakeup_dw_ic
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           
 14944                           ;psect for function _Sleep
 14945  2753                     _Sleep:	
 14946                           
 14947                           ;main.c: 295: for(volatile uint32_t i=0; i<time; i++)
 14948                           
 14949                           ;incstack = 0
 14950                           ; Regs used in _Sleep: [wreg]
 14951  2753  3000               	movlw	0
 14952  2754  00F8               	movwf	Sleep@i+3	;volatile
 14953  2755  3000               	movlw	0
 14954  2756  00F7               	movwf	Sleep@i+2	;volatile
 14955  2757  3000               	movlw	0
 14956  2758  00F6               	movwf	Sleep@i+1	;volatile
 14957  2759  3000               	movlw	0
 14958  275A  00F5               	movwf	Sleep@i	;volatile
 14959  275B                     l358:	
 14960  275B  0873               	movf	Sleep@time+3,w
 14961  275C  0278               	subwf	Sleep@i+3,w	;volatile
 14962  275D  1D03               	skipz
 14963  275E  2F69               	goto	u4515
 14964  275F  0872               	movf	Sleep@time+2,w
 14965  2760  0277               	subwf	Sleep@i+2,w	;volatile
 14966  2761  1D03               	skipz
 14967  2762  2F69               	goto	u4515
 14968  2763  0871               	movf	Sleep@time+1,w
 14969  2764  0276               	subwf	Sleep@i+1,w	;volatile
 14970  2765  1D03               	skipz
 14971  2766  2F69               	goto	u4515
 14972  2767  0870               	movf	Sleep@time,w
 14973  2768  0275               	subwf	Sleep@i,w	;volatile
 14974  2769                     u4515:	
 14975  2769  1803               	btfsc	3,0
 14976  276A  0008               	return
 14977                           
 14978                           ;main.c: 296: {
 14979                           ;main.c: 297: _delay((unsigned long)((1)*(32000000/4000.0)));
 14980  276B  300B               	movlw	11
 14981  276C  00F4               	movwf	??_Sleep
 14982  276D  3062               	movlw	98
 14983  276E                     u7747:	
 14984  276E  0B89               	decfsz	9,f
 14985  276F  2F6E               	goto	u7747
 14986  2770  0BF4               	decfsz	??_Sleep,f
 14987  2771  2F6E               	goto	u7747
 14988  2772  3200               	nop2
 14989  2773  3001               	movlw	1
 14990  2774  07F5               	addwf	Sleep@i,f	;volatile
 14991  2775  3000               	movlw	0
 14992  2776  3DF6               	addwfc	Sleep@i+1,f	;volatile
 14993  2777  3000               	movlw	0
 14994  2778  3DF7               	addwfc	Sleep@i+2,f	;volatile
 14995  2779  3000               	movlw	0
 14996  277A  3DF8               	addwfc	Sleep@i+3,f	;volatile
 14997  277B  2F5B               	goto	l358
 14998  277C                     __end_of_Sleep:	
 14999                           
 15000                           	psect	text35
 15001  19E0                     __ptext35:	
 15002 ;; *************** function _dwt_read16bitoffsetreg *****************
 15003 ;; Defined at:
 15004 ;;		line 426 in file "deca_device.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;  regFileID       4   72[BANK0 ] unsigned long 
 15007 ;;  regOffset       4   76[BANK0 ] unsigned long 
 15008 ;; Auto vars:     Size  Location     Type
 15009 ;;  buffer          2   18[BANK1 ] unsigned char [2]
 15010 ;;  regval          2   16[BANK1 ] unsigned int 
 15011 ;; Return value:  Size  Location     Type
 15012 ;;                  2   72[BANK0 ] unsigned int 
 15013 ;; Registers used:
 15014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15015 ;; Tracked objects:
 15016 ;;		On entry : 0/0
 15017 ;;		On exit  : 0/0
 15018 ;;		Unchanged: 0/0
 15019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15020 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15021 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15022 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15023 ;;      Totals:         0       8       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15024 ;;Total ram usage:       17 bytes
 15025 ;; Hardware stack levels used:    1
 15026 ;; Hardware stack levels required when called:    7
 15027 ;; This function calls:
 15028 ;;		_dwt_readfromdevice
 15029 ;; This function is called by:
 15030 ;;		_dwt_pgf_cal
 15031 ;;		_dwt_checkidlerc
 15032 ;;		_dwt_restoreconfig
 15033 ;;		_dwt_readclockoffset
 15034 ;;		_dwt_readstsquality
 15035 ;;		_dwt_readstsstatus
 15036 ;;		_dwt_readpdoa
 15037 ;;		_dwt_isr
 15038 ;;		_dwt_readtempvbat
 15039 ;;		_dwt_calcpgcount
 15040 ;; This function uses a non-reentrant model
 15041 ;;
 15042                           
 15043                           
 15044                           ;psect for function _dwt_read16bitoffsetreg
 15045  19E0                     _dwt_read16bitoffsetreg:	
 15046                           
 15047                           ;deca_device.c: 428: uint16_t regval = 0 ;
 15048                           
 15049                           ;incstack = 0
 15050                           ; Regs used in _dwt_read16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15051  19E0  0141               	movlb	1	; select bank1
 15052  19E1  01B0               	clrf	dwt_read16bitoffsetreg@regval^(0+128)
 15053  19E2  01B1               	clrf	(dwt_read16bitoffsetreg@regval+1)^(0+128)
 15054                           
 15055                           ;deca_device.c: 429: uint8_t buffer[2] ;
 15056                           ;deca_device.c: 431: dwt_readfromdevice(regFileID,regOffset,2,buffer);
 15057  19E3  0140               	movlb	0	; select bank0
 15058  19E4  086B               	movf	dwt_read16bitoffsetreg@regFileID+3,w
 15059  19E5  0141               	movlb	1	; select bank1
 15060  19E6  00A3               	movwf	(dwt_readfromdevice@regFileID+3)^(0+128)
 15061  19E7  0140               	movlb	0	; select bank0
 15062  19E8  086A               	movf	dwt_read16bitoffsetreg@regFileID+2,w
 15063  19E9  0141               	movlb	1	; select bank1
 15064  19EA  00A2               	movwf	(dwt_readfromdevice@regFileID+2)^(0+128)
 15065  19EB  0140               	movlb	0	; select bank0
 15066  19EC  0869               	movf	dwt_read16bitoffsetreg@regFileID+1,w
 15067  19ED  0141               	movlb	1	; select bank1
 15068  19EE  00A1               	movwf	(dwt_readfromdevice@regFileID+1)^(0+128)
 15069  19EF  0140               	movlb	0	; select bank0
 15070  19F0  0868               	movf	dwt_read16bitoffsetreg@regFileID,w
 15071  19F1  0141               	movlb	1	; select bank1
 15072  19F2  00A0               	movwf	dwt_readfromdevice@regFileID^(0+128)
 15073  19F3  0140               	movlb	0	; select bank0
 15074  19F4  086D               	movf	dwt_read16bitoffsetreg@regOffset+1,w
 15075  19F5  0141               	movlb	1	; select bank1
 15076  19F6  00A5               	movwf	(dwt_readfromdevice@index+1)^(0+128)
 15077  19F7  0140               	movlb	0	; select bank0
 15078  19F8  086C               	movf	dwt_read16bitoffsetreg@regOffset,w
 15079  19F9  0141               	movlb	1	; select bank1
 15080  19FA  00A4               	movwf	dwt_readfromdevice@index^(0+128)
 15081  19FB  3000               	movlw	0
 15082  19FC  00A9               	movwf	(dwt_readfromdevice@length+3)^(0+128)
 15083  19FD  3000               	movlw	0
 15084  19FE  00A8               	movwf	(dwt_readfromdevice@length+2)^(0+128)
 15085  19FF  3000               	movlw	0
 15086  1A00  00A7               	movwf	(dwt_readfromdevice@length+1)^(0+128)
 15087  1A01  3002               	movlw	2
 15088  1A02  00A6               	movwf	dwt_readfromdevice@length^(0+128)
 15089  1A03  30B2               	movlw	(low (dwt_read16bitoffsetreg@buffer| 0))& (0+255)
 15090  1A04  00AB               	movwf	??_dwt_read16bitoffsetreg^(0+128)
 15091  1A05  082B               	movf	??_dwt_read16bitoffsetreg^(0+128),w
 15092  1A06  00AA               	movwf	dwt_readfromdevice@buffer^(0+128)
 15093  1A07  3199  2107         	fcall	_dwt_readfromdevice
 15094                           
 15095                           ;deca_device.c: 433: regval = ((uint16_t)buffer[1] << 8) + buffer[0] ;
 15096  1A09  0141               	movlb	1	; select bank1
 15097  1A0A  0832               	movf	dwt_read16bitoffsetreg@buffer^(0+128),w
 15098  1A0B  00AB               	movwf	??_dwt_read16bitoffsetreg^(0+128)
 15099  1A0C  01AC               	clrf	(??_dwt_read16bitoffsetreg^(0+128)+1)
 15100  1A0D  0833               	movf	(dwt_read16bitoffsetreg@buffer^(0+128)+1),w
 15101  1A0E  00AD               	movwf	(??_dwt_read16bitoffsetreg+2)^(0+128)
 15102  1A0F  01AE               	clrf	((??_dwt_read16bitoffsetreg+2)^(0+128)+1)
 15103  1A10  082D               	movf	(??_dwt_read16bitoffsetreg+2)^(0+128),w
 15104  1A11  00AE               	movwf	((??_dwt_read16bitoffsetreg+2)^(0+128)+1)
 15105  1A12  01AD               	clrf	(??_dwt_read16bitoffsetreg+2)^(0+128)
 15106  1A13  082B               	movf	??_dwt_read16bitoffsetreg^(0+128),w
 15107  1A14  072D               	addwf	(??_dwt_read16bitoffsetreg+2)^(0+128),w
 15108  1A15  00B0               	movwf	dwt_read16bitoffsetreg@regval^(0+128)
 15109  1A16  082C               	movf	(??_dwt_read16bitoffsetreg+1)^(0+128),w
 15110  1A17  3D2E               	addwfc	(??_dwt_read16bitoffsetreg+3)^(0+128),w
 15111  1A18  00B1               	movwf	(dwt_read16bitoffsetreg@regval+1)^(0+128)
 15112                           
 15113                           ;deca_device.c: 434: return regval ;
 15114  1A19  0831               	movf	(dwt_read16bitoffsetreg@regval+1)^(0+128),w
 15115  1A1A  0140               	movlb	0	; select bank0
 15116  1A1B  00E9               	movwf	?_dwt_read16bitoffsetreg+1
 15117  1A1C  0141               	movlb	1	; select bank1
 15118  1A1D  0830               	movf	dwt_read16bitoffsetreg@regval^(0+128),w
 15119  1A1E  0140               	movlb	0	; select bank0
 15120  1A1F  00E8               	movwf	?_dwt_read16bitoffsetreg
 15121  1A20  0008               	return
 15122  1A21                     __end_of_dwt_read16bitoffsetreg:	
 15123                           
 15124                           	psect	text36
 15125  1907                     __ptext36:	
 15126 ;; *************** function _dwt_readfromdevice *****************
 15127 ;; Defined at:
 15128 ;;		line 373 in file "deca_device.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;  regFileID       4    0[BANK1 ] unsigned long 
 15131 ;;  index           2    4[BANK1 ] unsigned int 
 15132 ;;  length          4    6[BANK1 ] unsigned long 
 15133 ;;  buffer          1   10[BANK1 ] PTR unsigned char 
 15134 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), dwt_readcarrierintegrator@buffer(3), dwt_read16bitoffse
      +treg@buffer(2), 
 15135 ;;		 -> dwt_read32bitoffsetreg@buffer(4), 
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  1    wreg      void 
 15140 ;; Registers used:
 15141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15147 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15150 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15151 ;;Total ram usage:       11 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    6
 15154 ;; This function calls:
 15155 ;;		_dwt_xfer3000
 15156 ;; This function is called by:
 15157 ;;		_dwt_read32bitoffsetreg
 15158 ;;		_dwt_read16bitoffsetreg
 15159 ;;		_dwt_read_rx_scratch_data
 15160 ;;		_dwt_readrxdata
 15161 ;;		_dwt_readaccdata
 15162 ;;		_dwt_readcarrierintegrator
 15163 ;;		_dwt_readtxtimestamp
 15164 ;;		_dwt_readtdoa
 15165 ;;		_dwt_readrxtimestamp
 15166 ;;		_dwt_readrxtimestampunadj
 15167 ;;		_dwt_readrxtimestamp_ipatov
 15168 ;;		_dwt_readrxtimestamp_sts
 15169 ;;		_dwt_readsystime
 15170 ;;		_dwt_geteui
 15171 ;;		_dwt_do_aes
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           
 15176                           ;psect for function _dwt_readfromdevice
 15177  1907                     _dwt_readfromdevice:	
 15178                           
 15179                           ;deca_device.c: 381: dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_RD_BIT);
 15180                           
 15181                           ;incstack = 0
 15182                           ; Regs used in _dwt_readfromdevice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15183  1907  0141               	movlb	1	; select bank1
 15184  1908  0823               	movf	(dwt_readfromdevice@regFileID+3)^(0+128),w
 15185  1909  0140               	movlb	0	; select bank0
 15186  190A  00CA               	movwf	dwt_xfer3000@regFileID+3
 15187  190B  0141               	movlb	1	; select bank1
 15188  190C  0822               	movf	(dwt_readfromdevice@regFileID+2)^(0+128),w
 15189  190D  0140               	movlb	0	; select bank0
 15190  190E  00C9               	movwf	dwt_xfer3000@regFileID+2
 15191  190F  0141               	movlb	1	; select bank1
 15192  1910  0821               	movf	(dwt_readfromdevice@regFileID+1)^(0+128),w
 15193  1911  0140               	movlb	0	; select bank0
 15194  1912  00C8               	movwf	dwt_xfer3000@regFileID+1
 15195  1913  0141               	movlb	1	; select bank1
 15196  1914  0820               	movf	dwt_readfromdevice@regFileID^(0+128),w
 15197  1915  0140               	movlb	0	; select bank0
 15198  1916  00C7               	movwf	dwt_xfer3000@regFileID
 15199  1917  0141               	movlb	1	; select bank1
 15200  1918  0825               	movf	(dwt_readfromdevice@index+1)^(0+128),w
 15201  1919  0140               	movlb	0	; select bank0
 15202  191A  00CC               	movwf	dwt_xfer3000@indx+1
 15203  191B  0141               	movlb	1	; select bank1
 15204  191C  0824               	movf	dwt_readfromdevice@index^(0+128),w
 15205  191D  0140               	movlb	0	; select bank0
 15206  191E  00CB               	movwf	dwt_xfer3000@indx
 15207  191F  0141               	movlb	1	; select bank1
 15208  1920  0829               	movf	(dwt_readfromdevice@length+3)^(0+128),w
 15209  1921  0140               	movlb	0	; select bank0
 15210  1922  00D0               	movwf	dwt_xfer3000@length+3
 15211  1923  0141               	movlb	1	; select bank1
 15212  1924  0828               	movf	(dwt_readfromdevice@length+2)^(0+128),w
 15213  1925  0140               	movlb	0	; select bank0
 15214  1926  00CF               	movwf	dwt_xfer3000@length+2
 15215  1927  0141               	movlb	1	; select bank1
 15216  1928  0827               	movf	(dwt_readfromdevice@length+1)^(0+128),w
 15217  1929  0140               	movlb	0	; select bank0
 15218  192A  00CE               	movwf	dwt_xfer3000@length+1
 15219  192B  0141               	movlb	1	; select bank1
 15220  192C  0826               	movf	dwt_readfromdevice@length^(0+128),w
 15221  192D  0140               	movlb	0	; select bank0
 15222  192E  00CD               	movwf	dwt_xfer3000@length
 15223  192F  0141               	movlb	1	; select bank1
 15224  1930  082A               	movf	dwt_readfromdevice@buffer^(0+128),w
 15225  1931  0140               	movlb	0	; select bank0
 15226  1932  00D1               	movwf	dwt_xfer3000@buffer
 15227  1933  3000               	movlw	0
 15228  1934  00D2               	movwf	dwt_xfer3000@buffer+1
 15229  1935  3000               	movlw	0
 15230  1936  00D3               	movwf	dwt_xfer3000@mode
 15231  1937  00D4               	movwf	dwt_xfer3000@mode+1
 15232  1938  3189  2165         	fcall	_dwt_xfer3000
 15233  193A  0008               	return
 15234  193B                     __end_of_dwt_readfromdevice:	
 15235                           
 15236                           	psect	text37
 15237  1A21                     __ptext37:	
 15238 ;; *************** function _dwt_modify16bitoffsetreg *****************
 15239 ;; Defined at:
 15240 ;;		line 559 in file "deca_device.c"
 15241 ;; Parameters:    Size  Location     Type
 15242 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 15243 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 15244 ;;  _and            2    8[BANK1 ] const unsigned int 
 15245 ;;  _or             2   10[BANK1 ] const unsigned int 
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;  buf             4   73[BANK0 ] unsigned char [4]
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  1    wreg      void 
 15250 ;; Registers used:
 15251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15257 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15259 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15260 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15261 ;;Total ram usage:       17 bytes
 15262 ;; Hardware stack levels used:    1
 15263 ;; Hardware stack levels required when called:    6
 15264 ;; This function calls:
 15265 ;;		_dwt_xfer3000
 15266 ;; This function is called by:
 15267 ;;		__dwt_prog_ldo_and_bias_tune
 15268 ;;		_dwt_configure
 15269 ;;		_dwt_pgf_cal
 15270 ;;		_dwt_readaccdata
 15271 ;;		_dwt_entersleepaftertx
 15272 ;;		_dwt_enableautoack
 15273 ;;		_dwt_setleds
 15274 ;;		_dwt_setrxtimeout
 15275 ;; This function uses a non-reentrant model
 15276 ;;
 15277                           
 15278                           
 15279                           ;psect for function _dwt_modify16bitoffsetreg
 15280  1A21                     _dwt_modify16bitoffsetreg:	
 15281                           
 15282                           ;deca_device.c: 561: uint8_t buf[4];
 15283                           ;deca_device.c: 562: buf[0] = (uint8_t)_and;
 15284                           
 15285                           ;incstack = 0
 15286                           ; Regs used in _dwt_modify16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15287  1A21  0141               	movlb	1	; select bank1
 15288  1A22  0828               	movf	dwt_modify16bitoffsetreg@_and^(0+128),w
 15289  1A23  0140               	movlb	0	; select bank0
 15290  1A24  00E8               	movwf	??_dwt_modify16bitoffsetreg
 15291  1A25  0868               	movf	??_dwt_modify16bitoffsetreg,w
 15292  1A26  00E9               	movwf	dwt_modify16bitoffsetreg@buf
 15293                           
 15294                           ;deca_device.c: 563: buf[1] = (uint8_t)(_and>>8);
 15295  1A27  0141               	movlb	1	; select bank1
 15296  1A28  0829               	movf	(dwt_modify16bitoffsetreg@_and+1)^(0+128),w
 15297  1A29  0140               	movlb	0	; select bank0
 15298  1A2A  00E8               	movwf	??_dwt_modify16bitoffsetreg
 15299  1A2B  0868               	movf	??_dwt_modify16bitoffsetreg,w
 15300  1A2C  00EA               	movwf	dwt_modify16bitoffsetreg@buf+1
 15301                           
 15302                           ;deca_device.c: 564: buf[2] = (uint8_t)_or;
 15303  1A2D  0141               	movlb	1	; select bank1
 15304  1A2E  082A               	movf	dwt_modify16bitoffsetreg@_or^(0+128),w
 15305  1A2F  0140               	movlb	0	; select bank0
 15306  1A30  00E8               	movwf	??_dwt_modify16bitoffsetreg
 15307  1A31  0868               	movf	??_dwt_modify16bitoffsetreg,w
 15308  1A32  00EB               	movwf	dwt_modify16bitoffsetreg@buf+2
 15309                           
 15310                           ;deca_device.c: 565: buf[3] = (uint8_t)(_or>>8);
 15311  1A33  0141               	movlb	1	; select bank1
 15312  1A34  082B               	movf	(dwt_modify16bitoffsetreg@_or+1)^(0+128),w
 15313  1A35  0140               	movlb	0	; select bank0
 15314  1A36  00E8               	movwf	??_dwt_modify16bitoffsetreg
 15315  1A37  0868               	movf	??_dwt_modify16bitoffsetreg,w
 15316  1A38  00EC               	movwf	dwt_modify16bitoffsetreg@buf+3
 15317                           
 15318                           ;deca_device.c: 566: dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND
      +                          _OR_16);
 15319  1A39  0141               	movlb	1	; select bank1
 15320  1A3A  0823               	movf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128),w
 15321  1A3B  0140               	movlb	0	; select bank0
 15322  1A3C  00CA               	movwf	dwt_xfer3000@regFileID+3
 15323  1A3D  0141               	movlb	1	; select bank1
 15324  1A3E  0822               	movf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128),w
 15325  1A3F  0140               	movlb	0	; select bank0
 15326  1A40  00C9               	movwf	dwt_xfer3000@regFileID+2
 15327  1A41  0141               	movlb	1	; select bank1
 15328  1A42  0821               	movf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128),w
 15329  1A43  0140               	movlb	0	; select bank0
 15330  1A44  00C8               	movwf	dwt_xfer3000@regFileID+1
 15331  1A45  0141               	movlb	1	; select bank1
 15332  1A46  0820               	movf	dwt_modify16bitoffsetreg@regFileID^(0+128),w
 15333  1A47  0140               	movlb	0	; select bank0
 15334  1A48  00C7               	movwf	dwt_xfer3000@regFileID
 15335  1A49  0141               	movlb	1	; select bank1
 15336  1A4A  0825               	movf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128),w
 15337  1A4B  0140               	movlb	0	; select bank0
 15338  1A4C  00CC               	movwf	dwt_xfer3000@indx+1
 15339  1A4D  0141               	movlb	1	; select bank1
 15340  1A4E  0824               	movf	dwt_modify16bitoffsetreg@regOffset^(0+128),w
 15341  1A4F  0140               	movlb	0	; select bank0
 15342  1A50  00CB               	movwf	dwt_xfer3000@indx
 15343  1A51  3000               	movlw	0
 15344  1A52  00D0               	movwf	dwt_xfer3000@length+3
 15345  1A53  3000               	movlw	0
 15346  1A54  00CF               	movwf	dwt_xfer3000@length+2
 15347  1A55  3000               	movlw	0
 15348  1A56  00CE               	movwf	dwt_xfer3000@length+1
 15349  1A57  3004               	movlw	4
 15350  1A58  00CD               	movwf	dwt_xfer3000@length
 15351  1A59  3069               	movlw	low dwt_modify16bitoffsetreg@buf
 15352  1A5A  00D1               	movwf	dwt_xfer3000@buffer
 15353  1A5B  3000               	movlw	high dwt_modify16bitoffsetreg@buf
 15354  1A5C  00D2               	movwf	dwt_xfer3000@buffer+1
 15355  1A5D  3002               	movlw	2
 15356  1A5E  00D3               	movwf	dwt_xfer3000@mode
 15357  1A5F  3080               	movlw	128
 15358  1A60  00D4               	movwf	dwt_xfer3000@mode+1
 15359  1A61  3189  2165         	fcall	_dwt_xfer3000
 15360  1A63  0008               	return
 15361  1A64                     __end_of_dwt_modify16bitoffsetreg:	
 15362                           
 15363                           	psect	text38
 15364  1687                     __ptext38:	
 15365 ;; *************** function _dwt_configmrxlut *****************
 15366 ;; Defined at:
 15367 ;;		line 1205 in file "deca_device.c"
 15368 ;; Parameters:    Size  Location     Type
 15369 ;;  channel         2   24[BANK1 ] int 
 15370 ;; Auto vars:     Size  Location     Type
 15371 ;;  lut6            4   50[BANK1 ] unsigned long 
 15372 ;;  lut5            4   46[BANK1 ] unsigned long 
 15373 ;;  lut4            4   42[BANK1 ] unsigned long 
 15374 ;;  lut3            4   38[BANK1 ] unsigned long 
 15375 ;;  lut2            4   34[BANK1 ] unsigned long 
 15376 ;;  lut1            4   30[BANK1 ] unsigned long 
 15377 ;;  lut0            4   26[BANK1 ] unsigned long 
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  1    wreg      void 
 15380 ;; Registers used:
 15381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15382 ;; Tracked objects:
 15383 ;;		On entry : 0/0
 15384 ;;		On exit  : 0/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15387 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15388 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15390 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15391 ;;Total ram usage:       30 bytes
 15392 ;; Hardware stack levels used:    1
 15393 ;; Hardware stack levels required when called:    8
 15394 ;; This function calls:
 15395 ;;		_dwt_write32bitoffsetreg
 15396 ;; This function is called by:
 15397 ;;		_dwt_configure
 15398 ;;		_dwt_restoreconfig
 15399 ;; This function uses a non-reentrant model
 15400 ;;
 15401                           
 15402                           
 15403                           ;psect for function _dwt_configmrxlut
 15404  1687                     _dwt_configmrxlut:	
 15405                           
 15406                           ;deca_device.c: 1207: uint32_t lut0, lut1, lut2, lut3, lut4, lut5, lut6 = 0;
 15407                           
 15408                           ;incstack = 0
 15409                           ; Regs used in _dwt_configmrxlut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15410  1687  3000               	movlw	0
 15411  1688  0141               	movlb	1	; select bank1
 15412  1689  00D5               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 15413  168A  3000               	movlw	0
 15414  168B  00D4               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 15415  168C  3000               	movlw	0
 15416  168D  00D3               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 15417  168E  3000               	movlw	0
 15418  168F  00D2               	movwf	dwt_configmrxlut@lut6^(0+128)
 15419                           
 15420                           ;deca_device.c: 1209: if (channel == 5)
 15421  1690  3005               	movlw	5
 15422  1691  0638               	xorwf	dwt_configmrxlut@channel^(0+128),w
 15423  1692  0439               	iorwf	(dwt_configmrxlut@channel+1)^(0+128),w
 15424  1693  1D03               	btfss	3,2
 15425  1694  2ECD               	goto	l5379
 15426                           
 15427                           ;deca_device.c: 1210: {
 15428                           ;deca_device.c: 1211: lut0 = (uint32_t)CH5_DGC_LUT_0;
 15429  1695  3000               	movlw	0
 15430  1696  00BD               	movwf	(dwt_configmrxlut@lut0+3)^(0+128)
 15431  1697  3000               	movlw	0
 15432  1698  00BC               	movwf	(dwt_configmrxlut@lut0+2)^(0+128)
 15433  1699  30C0               	movlw	192
 15434  169A  00BB               	movwf	(dwt_configmrxlut@lut0+1)^(0+128)
 15435  169B  30FD               	movlw	253
 15436  169C  00BA               	movwf	dwt_configmrxlut@lut0^(0+128)
 15437                           
 15438                           ;deca_device.c: 1212: lut1 = (uint32_t)CH5_DGC_LUT_1;
 15439  169D  3000               	movlw	0
 15440  169E  00C1               	movwf	(dwt_configmrxlut@lut1+3)^(0+128)
 15441  169F  3000               	movlw	0
 15442  16A0  00C0               	movwf	(dwt_configmrxlut@lut1+2)^(0+128)
 15443  16A1  30C4               	movlw	196
 15444  16A2  00BF               	movwf	(dwt_configmrxlut@lut1+1)^(0+128)
 15445  16A3  303E               	movlw	62
 15446  16A4  00BE               	movwf	dwt_configmrxlut@lut1^(0+128)
 15447                           
 15448                           ;deca_device.c: 1213: lut2 = (uint32_t)CH5_DGC_LUT_2;
 15449  16A5  3000               	movlw	0
 15450  16A6  00C5               	movwf	(dwt_configmrxlut@lut2+3)^(0+128)
 15451  16A7  3000               	movlw	0
 15452  16A8  00C4               	movwf	(dwt_configmrxlut@lut2+2)^(0+128)
 15453  16A9  30C6               	movlw	198
 15454  16AA  00C3               	movwf	(dwt_configmrxlut@lut2+1)^(0+128)
 15455  16AB  30BE               	movlw	190
 15456  16AC  00C2               	movwf	dwt_configmrxlut@lut2^(0+128)
 15457                           
 15458                           ;deca_device.c: 1214: lut3 = (uint32_t)CH5_DGC_LUT_3;
 15459  16AD  3000               	movlw	0
 15460  16AE  00C9               	movwf	(dwt_configmrxlut@lut3+3)^(0+128)
 15461  16AF  3000               	movlw	0
 15462  16B0  00C8               	movwf	(dwt_configmrxlut@lut3+2)^(0+128)
 15463  16B1  30C7               	movlw	199
 15464  16B2  00C7               	movwf	(dwt_configmrxlut@lut3+1)^(0+128)
 15465  16B3  307E               	movlw	126
 15466  16B4  00C6               	movwf	dwt_configmrxlut@lut3^(0+128)
 15467                           
 15468                           ;deca_device.c: 1215: lut4 = (uint32_t)CH5_DGC_LUT_4;
 15469  16B5  3000               	movlw	0
 15470  16B6  00CD               	movwf	(dwt_configmrxlut@lut4+3)^(0+128)
 15471  16B7  3000               	movlw	0
 15472  16B8  00CC               	movwf	(dwt_configmrxlut@lut4+2)^(0+128)
 15473  16B9  30CF               	movlw	207
 15474  16BA  00CB               	movwf	(dwt_configmrxlut@lut4+1)^(0+128)
 15475  16BB  3036               	movlw	54
 15476  16BC  00CA               	movwf	dwt_configmrxlut@lut4^(0+128)
 15477                           
 15478                           ;deca_device.c: 1216: lut5 = (uint32_t)CH5_DGC_LUT_5;
 15479  16BD  3000               	movlw	0
 15480  16BE  00D1               	movwf	(dwt_configmrxlut@lut5+3)^(0+128)
 15481  16BF  3000               	movlw	0
 15482  16C0  00D0               	movwf	(dwt_configmrxlut@lut5+2)^(0+128)
 15483  16C1  30CF               	movlw	207
 15484  16C2  00CF               	movwf	(dwt_configmrxlut@lut5+1)^(0+128)
 15485  16C3  30B5               	movlw	181
 15486  16C4  00CE               	movwf	dwt_configmrxlut@lut5^(0+128)
 15487                           
 15488                           ;deca_device.c: 1217: lut6 = (uint32_t)CH5_DGC_LUT_6;
 15489  16C5  3000               	movlw	0
 15490  16C6  00D5               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 15491  16C7  3000               	movlw	0
 15492  16C8  00D4               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 15493  16C9  30CF               	movlw	207
 15494  16CA  00D3               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 15495  16CB  30F5               	movlw	245
 15496  16CC  2F04               	goto	L18
 15497  16CD                     l5379:	
 15498                           ;deca_device.c: 1218: }
 15499                           
 15500                           
 15501                           ;deca_device.c: 1219: else
 15502                           ;deca_device.c: 1220: {
 15503                           ;deca_device.c: 1221: lut0 = (uint32_t)CH9_DGC_LUT_0;
 15504  16CD  3000               	movlw	0
 15505  16CE  00BD               	movwf	(dwt_configmrxlut@lut0+3)^(0+128)
 15506  16CF  3000               	movlw	0
 15507  16D0  00BC               	movwf	(dwt_configmrxlut@lut0+2)^(0+128)
 15508  16D1  30A8               	movlw	168
 15509  16D2  00BB               	movwf	(dwt_configmrxlut@lut0+1)^(0+128)
 15510  16D3  30FE               	movlw	254
 15511  16D4  00BA               	movwf	dwt_configmrxlut@lut0^(0+128)
 15512                           
 15513                           ;deca_device.c: 1222: lut1 = (uint32_t)CH9_DGC_LUT_1;
 15514  16D5  3000               	movlw	0
 15515  16D6  00C1               	movwf	(dwt_configmrxlut@lut1+3)^(0+128)
 15516  16D7  3000               	movlw	0
 15517  16D8  00C0               	movwf	(dwt_configmrxlut@lut1+2)^(0+128)
 15518  16D9  30AC               	movlw	172
 15519  16DA  00BF               	movwf	(dwt_configmrxlut@lut1+1)^(0+128)
 15520  16DB  3036               	movlw	54
 15521  16DC  00BE               	movwf	dwt_configmrxlut@lut1^(0+128)
 15522                           
 15523                           ;deca_device.c: 1223: lut2 = (uint32_t)CH9_DGC_LUT_2;
 15524  16DD  3000               	movlw	0
 15525  16DE  00C5               	movwf	(dwt_configmrxlut@lut2+3)^(0+128)
 15526  16DF  3000               	movlw	0
 15527  16E0  00C4               	movwf	(dwt_configmrxlut@lut2+2)^(0+128)
 15528  16E1  30A5               	movlw	165
 15529  16E2  00C3               	movwf	(dwt_configmrxlut@lut2+1)^(0+128)
 15530  16E3  30FE               	movlw	254
 15531  16E4  00C2               	movwf	dwt_configmrxlut@lut2^(0+128)
 15532                           
 15533                           ;deca_device.c: 1224: lut3 = (uint32_t)CH9_DGC_LUT_3;
 15534  16E5  3000               	movlw	0
 15535  16E6  00C9               	movwf	(dwt_configmrxlut@lut3+3)^(0+128)
 15536  16E7  3000               	movlw	0
 15537  16E8  00C8               	movwf	(dwt_configmrxlut@lut3+2)^(0+128)
 15538  16E9  30AF               	movlw	175
 15539  16EA  00C7               	movwf	(dwt_configmrxlut@lut3+1)^(0+128)
 15540  16EB  303E               	movlw	62
 15541  16EC  00C6               	movwf	dwt_configmrxlut@lut3^(0+128)
 15542                           
 15543                           ;deca_device.c: 1225: lut4 = (uint32_t)CH9_DGC_LUT_4;
 15544  16ED  3000               	movlw	0
 15545  16EE  00CD               	movwf	(dwt_configmrxlut@lut4+3)^(0+128)
 15546  16EF  3000               	movlw	0
 15547  16F0  00CC               	movwf	(dwt_configmrxlut@lut4+2)^(0+128)
 15548  16F1  30AF               	movlw	175
 15549  16F2  00CB               	movwf	(dwt_configmrxlut@lut4+1)^(0+128)
 15550  16F3  307D               	movlw	125
 15551  16F4  00CA               	movwf	dwt_configmrxlut@lut4^(0+128)
 15552                           
 15553                           ;deca_device.c: 1226: lut5 = (uint32_t)CH9_DGC_LUT_5;
 15554  16F5  3000               	movlw	0
 15555  16F6  00D1               	movwf	(dwt_configmrxlut@lut5+3)^(0+128)
 15556  16F7  3000               	movlw	0
 15557  16F8  00D0               	movwf	(dwt_configmrxlut@lut5+2)^(0+128)
 15558  16F9  30AF               	movlw	175
 15559  16FA  00CF               	movwf	(dwt_configmrxlut@lut5+1)^(0+128)
 15560  16FB  30B5               	movlw	181
 15561  16FC  00CE               	movwf	dwt_configmrxlut@lut5^(0+128)
 15562                           
 15563                           ;deca_device.c: 1227: lut6 = (uint32_t)CH9_DGC_LUT_6;
 15564  16FD  3000               	movlw	0
 15565  16FE  00D5               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 15566  16FF  3000               	movlw	0
 15567  1700  00D4               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 15568  1701  30AF               	movlw	175
 15569  1702  00D3               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 15570  1703  30B5               	movlw	181
 15571  1704                     L18:	
 15572  1704  00D2               	movwf	dwt_configmrxlut@lut6^(0+128)
 15573                           
 15574                           ;deca_device.c: 1228: }
 15575                           ;deca_device.c: 1229: dwt_write32bitoffsetreg(0x30038, 0x0, lut0);
 15576  1705  3000               	movlw	0
 15577  1706  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15578  1707  3003               	movlw	3
 15579  1708  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15580  1709  3000               	movlw	0
 15581  170A  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15582  170B  3038               	movlw	56
 15583  170C  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15584  170D  3000               	movlw	0
 15585  170E  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15586  170F  3000               	movlw	0
 15587  1710  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15588  1711  3000               	movlw	0
 15589  1712  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15590  1713  3000               	movlw	0
 15591  1714  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15592  1715  083D               	movf	(dwt_configmrxlut@lut0+3)^(0+128),w
 15593  1716  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15594  1717  083C               	movf	(dwt_configmrxlut@lut0+2)^(0+128),w
 15595  1718  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15596  1719  083B               	movf	(dwt_configmrxlut@lut0+1)^(0+128),w
 15597  171A  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15598  171B  083A               	movf	dwt_configmrxlut@lut0^(0+128),w
 15599  171C  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15600  171D  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15601                           
 15602                           ;deca_device.c: 1230: dwt_write32bitoffsetreg(0x3003c, 0x0, lut1);
 15603  1720  3000               	movlw	0
 15604  1721  0141               	movlb	1	; select bank1
 15605  1722  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15606  1723  3003               	movlw	3
 15607  1724  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15608  1725  3000               	movlw	0
 15609  1726  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15610  1727  303C               	movlw	60
 15611  1728  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15612  1729  3000               	movlw	0
 15613  172A  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15614  172B  3000               	movlw	0
 15615  172C  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15616  172D  3000               	movlw	0
 15617  172E  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15618  172F  3000               	movlw	0
 15619  1730  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15620  1731  0841               	movf	(dwt_configmrxlut@lut1+3)^(0+128),w
 15621  1732  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15622  1733  0840               	movf	(dwt_configmrxlut@lut1+2)^(0+128),w
 15623  1734  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15624  1735  083F               	movf	(dwt_configmrxlut@lut1+1)^(0+128),w
 15625  1736  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15626  1737  083E               	movf	dwt_configmrxlut@lut1^(0+128),w
 15627  1738  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15628  1739  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15629                           
 15630                           ;deca_device.c: 1231: dwt_write32bitoffsetreg(0x30040, 0x0, lut2);
 15631  173C  3000               	movlw	0
 15632  173D  0141               	movlb	1	; select bank1
 15633  173E  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15634  173F  3003               	movlw	3
 15635  1740  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15636  1741  3000               	movlw	0
 15637  1742  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15638  1743  3040               	movlw	64
 15639  1744  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15640  1745  3000               	movlw	0
 15641  1746  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15642  1747  3000               	movlw	0
 15643  1748  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15644  1749  3000               	movlw	0
 15645  174A  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15646  174B  3000               	movlw	0
 15647  174C  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15648  174D  0845               	movf	(dwt_configmrxlut@lut2+3)^(0+128),w
 15649  174E  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15650  174F  0844               	movf	(dwt_configmrxlut@lut2+2)^(0+128),w
 15651  1750  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15652  1751  0843               	movf	(dwt_configmrxlut@lut2+1)^(0+128),w
 15653  1752  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15654  1753  0842               	movf	dwt_configmrxlut@lut2^(0+128),w
 15655  1754  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15656  1755  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15657                           
 15658                           ;deca_device.c: 1232: dwt_write32bitoffsetreg(0x30044, 0x0, lut3);
 15659  1758  3000               	movlw	0
 15660  1759  0141               	movlb	1	; select bank1
 15661  175A  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15662  175B  3003               	movlw	3
 15663  175C  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15664  175D  3000               	movlw	0
 15665  175E  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15666  175F  3044               	movlw	68
 15667  1760  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15668  1761  3000               	movlw	0
 15669  1762  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15670  1763  3000               	movlw	0
 15671  1764  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15672  1765  3000               	movlw	0
 15673  1766  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15674  1767  3000               	movlw	0
 15675  1768  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15676  1769  0849               	movf	(dwt_configmrxlut@lut3+3)^(0+128),w
 15677  176A  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15678  176B  0848               	movf	(dwt_configmrxlut@lut3+2)^(0+128),w
 15679  176C  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15680  176D  0847               	movf	(dwt_configmrxlut@lut3+1)^(0+128),w
 15681  176E  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15682  176F  0846               	movf	dwt_configmrxlut@lut3^(0+128),w
 15683  1770  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15684  1771  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15685                           
 15686                           ;deca_device.c: 1233: dwt_write32bitoffsetreg(0x30048, 0x0, lut4);
 15687  1774  3000               	movlw	0
 15688  1775  0141               	movlb	1	; select bank1
 15689  1776  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15690  1777  3003               	movlw	3
 15691  1778  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15692  1779  3000               	movlw	0
 15693  177A  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15694  177B  3048               	movlw	72
 15695  177C  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15696  177D  3000               	movlw	0
 15697  177E  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15698  177F  3000               	movlw	0
 15699  1780  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15700  1781  3000               	movlw	0
 15701  1782  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15702  1783  3000               	movlw	0
 15703  1784  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15704  1785  084D               	movf	(dwt_configmrxlut@lut4+3)^(0+128),w
 15705  1786  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15706  1787  084C               	movf	(dwt_configmrxlut@lut4+2)^(0+128),w
 15707  1788  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15708  1789  084B               	movf	(dwt_configmrxlut@lut4+1)^(0+128),w
 15709  178A  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15710  178B  084A               	movf	dwt_configmrxlut@lut4^(0+128),w
 15711  178C  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15712  178D  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15713                           
 15714                           ;deca_device.c: 1234: dwt_write32bitoffsetreg(0x3004c, 0x0, lut5);
 15715  1790  3000               	movlw	0
 15716  1791  0141               	movlb	1	; select bank1
 15717  1792  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15718  1793  3003               	movlw	3
 15719  1794  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15720  1795  3000               	movlw	0
 15721  1796  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15722  1797  304C               	movlw	76
 15723  1798  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15724  1799  3000               	movlw	0
 15725  179A  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15726  179B  3000               	movlw	0
 15727  179C  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15728  179D  3000               	movlw	0
 15729  179E  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15730  179F  3000               	movlw	0
 15731  17A0  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15732  17A1  0851               	movf	(dwt_configmrxlut@lut5+3)^(0+128),w
 15733  17A2  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15734  17A3  0850               	movf	(dwt_configmrxlut@lut5+2)^(0+128),w
 15735  17A4  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15736  17A5  084F               	movf	(dwt_configmrxlut@lut5+1)^(0+128),w
 15737  17A6  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15738  17A7  084E               	movf	dwt_configmrxlut@lut5^(0+128),w
 15739  17A8  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15740  17A9  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15741                           
 15742                           ;deca_device.c: 1235: dwt_write32bitoffsetreg(0x30050, 0x0, lut6);
 15743  17AC  3000               	movlw	0
 15744  17AD  0141               	movlb	1	; select bank1
 15745  17AE  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15746  17AF  3003               	movlw	3
 15747  17B0  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15748  17B1  3000               	movlw	0
 15749  17B2  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15750  17B3  3050               	movlw	80
 15751  17B4  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15752  17B5  3000               	movlw	0
 15753  17B6  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15754  17B7  3000               	movlw	0
 15755  17B8  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15756  17B9  3000               	movlw	0
 15757  17BA  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15758  17BB  3000               	movlw	0
 15759  17BC  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15760  17BD  0855               	movf	(dwt_configmrxlut@lut6+3)^(0+128),w
 15761  17BE  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15762  17BF  0854               	movf	(dwt_configmrxlut@lut6+2)^(0+128),w
 15763  17C0  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15764  17C1  0853               	movf	(dwt_configmrxlut@lut6+1)^(0+128),w
 15765  17C2  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15766  17C3  0852               	movf	dwt_configmrxlut@lut6^(0+128),w
 15767  17C4  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15768  17C5  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15769                           
 15770                           ;deca_device.c: 1236: dwt_write32bitoffsetreg(0x3001c, 0x0, 0x10000240);
 15771  17C8  3000               	movlw	0
 15772  17C9  0141               	movlb	1	; select bank1
 15773  17CA  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15774  17CB  3003               	movlw	3
 15775  17CC  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15776  17CD  3000               	movlw	0
 15777  17CE  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15778  17CF  301C               	movlw	28
 15779  17D0  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15780  17D1  3000               	movlw	0
 15781  17D2  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15782  17D3  3000               	movlw	0
 15783  17D4  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15784  17D5  3000               	movlw	0
 15785  17D6  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15786  17D7  3000               	movlw	0
 15787  17D8  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15788  17D9  3010               	movlw	16
 15789  17DA  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15790  17DB  3000               	movlw	0
 15791  17DC  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15792  17DD  3002               	movlw	2
 15793  17DE  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15794  17DF  3040               	movlw	64
 15795  17E0  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15796  17E1  319B  2336  3196   	fcall	_dwt_write32bitoffsetreg
 15797                           
 15798                           ;deca_device.c: 1237: dwt_write32bitoffsetreg(0x30020, 0x0, 0x1b6da489);
 15799  17E4  3000               	movlw	0
 15800  17E5  0141               	movlb	1	; select bank1
 15801  17E6  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15802  17E7  3003               	movlw	3
 15803  17E8  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15804  17E9  3000               	movlw	0
 15805  17EA  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15806  17EB  3020               	movlw	32
 15807  17EC  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15808  17ED  3000               	movlw	0
 15809  17EE  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15810  17EF  3000               	movlw	0
 15811  17F0  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15812  17F1  3000               	movlw	0
 15813  17F2  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15814  17F3  3000               	movlw	0
 15815  17F4  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15816  17F5  301B               	movlw	27
 15817  17F6  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15818  17F7  306D               	movlw	109
 15819  17F8  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15820  17F9  30A4               	movlw	164
 15821  17FA  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15822  17FB  3089               	movlw	137
 15823  17FC  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15824  17FD  319B  2336         	fcall	_dwt_write32bitoffsetreg
 15825  17FF  0008               	return
 15826  1800                     __end_of_dwt_configmrxlut:	
 15827                           
 15828                           	psect	text39
 15829  1B36                     __ptext39:	
 15830 ;; *************** function _dwt_write32bitoffsetreg *****************
 15831 ;; Defined at:
 15832 ;;		line 470 in file "deca_device.c"
 15833 ;; Parameters:    Size  Location     Type
 15834 ;;  regFileID       4   12[BANK1 ] unsigned long 
 15835 ;;  regOffset       4   16[BANK1 ] unsigned long 
 15836 ;;  regval          4   20[BANK1 ] unsigned long 
 15837 ;; Auto vars:     Size  Location     Type
 15838 ;;  buffer          4   73[BANK0 ] unsigned char [4]
 15839 ;;  j               2   77[BANK0 ] int 
 15840 ;; Return value:  Size  Location     Type
 15841 ;;                  1    wreg      void 
 15842 ;; Registers used:
 15843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15844 ;; Tracked objects:
 15845 ;;		On entry : 0/0
 15846 ;;		On exit  : 0/0
 15847 ;;		Unchanged: 0/0
 15848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15849 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15850 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15851 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15852 ;;      Totals:         0       7      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15853 ;;Total ram usage:       19 bytes
 15854 ;; Hardware stack levels used:    1
 15855 ;; Hardware stack levels required when called:    7
 15856 ;; This function calls:
 15857 ;;		_dwt_writetodevice
 15858 ;; This function is called by:
 15859 ;;		_dwt_configuretxrf
 15860 ;;		_dwt_configmrxlut
 15861 ;;		_dwt_configure
 15862 ;;		_dwt_run_pgfcal
 15863 ;;		_dwt_writetxdata
 15864 ;;		_dwt_disable_rf_tx
 15865 ;;		_dwt_enable_rf_tx
 15866 ;;		_dwt_disable_rftx_blocks
 15867 ;;		_dwt_setfinegraintxseq
 15868 ;;		_dwt_setlnapamode
 15869 ;;		_dwt_configurestskey
 15870 ;;		_dwt_configurestsiv
 15871 ;;		_dwt_restoreconfig
 15872 ;;		_dwt_configurestsmode
 15873 ;;		_dwt_readrxdata
 15874 ;;		_dwt_readaccdata
 15875 ;;		__dwt_otpprogword32
 15876 ;;		_dwt_setdblrxbuffmode
 15877 ;;		_dwt_setrxaftertxdelay
 15878 ;;		_dwt_isr
 15879 ;;		_dwt_setleds
 15880 ;;		_dwt_setreferencetrxtime
 15881 ;;		_dwt_setdelayedtrxtime
 15882 ;;		_dwt_setrxtimeout
 15883 ;;		_dwt_setinterrupt
 15884 ;;		_dwt_repeated_cw
 15885 ;;		_dwt_repeated_frames
 15886 ;;		_dwt_set_keyreg_128
 15887 ;;		_dwt_do_aes
 15888 ;; This function uses a non-reentrant model
 15889 ;;
 15890                           
 15891                           
 15892                           ;psect for function _dwt_write32bitoffsetreg
 15893  1B36                     _dwt_write32bitoffsetreg:	
 15894                           
 15895                           ;deca_device.c: 472: int j ;
 15896                           ;deca_device.c: 473: uint8_t buffer[4] ;
 15897                           ;deca_device.c: 475: for ( j = 0 ; j < 4 ; j++ )
 15898                           
 15899                           ;incstack = 0
 15900                           ; Regs used in _dwt_write32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15901  1B36  0140               	movlb	0	; select bank0
 15902  1B37  01ED               	clrf	dwt_write32bitoffsetreg@j
 15903  1B38  01EE               	clrf	dwt_write32bitoffsetreg@j+1
 15904  1B39  086E               	movf	dwt_write32bitoffsetreg@j+1,w
 15905  1B3A  3A80               	xorlw	128
 15906  1B3B  00E8               	movwf	??_dwt_write32bitoffsetreg
 15907  1B3C  3080               	movlw	128
 15908  1B3D  0268               	subwf	??_dwt_write32bitoffsetreg,w
 15909  1B3E  1D03               	skipz
 15910  1B3F  2B42               	goto	u4555
 15911  1B40  3004               	movlw	4
 15912  1B41  026D               	subwf	dwt_write32bitoffsetreg@j,w
 15913  1B42                     u4555:	
 15914  1B42  1803               	btfsc	3,0
 15915  1B43  2B66               	goto	l5101
 15916  1B44                     l5093:	
 15917                           
 15918                           ;deca_device.c: 476: {
 15919                           ;deca_device.c: 477: buffer[j] = (uint8_t)regval;
 15920  1B44  0141               	movlb	1	; select bank1
 15921  1B45  0834               	movf	dwt_write32bitoffsetreg@regval^(0+128),w
 15922  1B46  0140               	movlb	0	; select bank0
 15923  1B47  00E8               	movwf	??_dwt_write32bitoffsetreg
 15924  1B48  086D               	movf	dwt_write32bitoffsetreg@j,w
 15925  1B49  3E69               	addlw	(low (dwt_write32bitoffsetreg@buffer| 0))& (0+255)
 15926  1B4A  0086               	movwf	6
 15927  1B4B  0187               	clrf	7
 15928  1B4C  0868               	movf	??_dwt_write32bitoffsetreg,w
 15929  1B4D  0081               	movwf	1
 15930                           
 15931                           ;deca_device.c: 478: regval >>= 8 ;
 15932  1B4E  3008               	movlw	8
 15933  1B4F                     u4565:	
 15934  1B4F  0141               	movlb	1	; select bank1
 15935  1B50  36B7               	lsrf	(dwt_write32bitoffsetreg@regval+3)^(0+128),f
 15936  1B51  0CB6               	rrf	(dwt_write32bitoffsetreg@regval+2)^(0+128),f
 15937  1B52  0CB5               	rrf	(dwt_write32bitoffsetreg@regval+1)^(0+128),f
 15938  1B53  0CB4               	rrf	dwt_write32bitoffsetreg@regval^(0+128),f
 15939  1B54  0B89               	decfsz	9,f
 15940  1B55  2B4F               	goto	u4565
 15941  1B56  3001               	movlw	1
 15942  1B57  0140               	movlb	0	; select bank0
 15943  1B58  07ED               	addwf	dwt_write32bitoffsetreg@j,f
 15944  1B59  3000               	movlw	0
 15945  1B5A  3DEE               	addwfc	dwt_write32bitoffsetreg@j+1,f
 15946  1B5B  086E               	movf	dwt_write32bitoffsetreg@j+1,w
 15947  1B5C  3A80               	xorlw	128
 15948  1B5D  00E8               	movwf	??_dwt_write32bitoffsetreg
 15949  1B5E  3080               	movlw	128
 15950  1B5F  0268               	subwf	??_dwt_write32bitoffsetreg,w
 15951  1B60  1D03               	skipz
 15952  1B61  2B64               	goto	u4575
 15953  1B62  3004               	movlw	4
 15954  1B63  026D               	subwf	dwt_write32bitoffsetreg@j,w
 15955  1B64                     u4575:	
 15956  1B64  1C03               	skipc
 15957  1B65  2B44               	goto	l5093
 15958  1B66                     l5101:	
 15959                           
 15960                           ;deca_device.c: 479: }
 15961                           ;deca_device.c: 481: dwt_writetodevice(regFileID,regOffset,4,buffer);
 15962  1B66  0141               	movlb	1	; select bank1
 15963  1B67  082F               	movf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128),w
 15964  1B68  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 15965  1B69  082E               	movf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128),w
 15966  1B6A  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 15967  1B6B  082D               	movf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128),w
 15968  1B6C  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 15969  1B6D  082C               	movf	dwt_write32bitoffsetreg@regFileID^(0+128),w
 15970  1B6E  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 15971  1B6F  0831               	movf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128),w
 15972  1B70  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 15973  1B71  0830               	movf	dwt_write32bitoffsetreg@regOffset^(0+128),w
 15974  1B72  00A4               	movwf	dwt_writetodevice@index^(0+128)
 15975  1B73  3000               	movlw	0
 15976  1B74  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 15977  1B75  3000               	movlw	0
 15978  1B76  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 15979  1B77  3000               	movlw	0
 15980  1B78  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 15981  1B79  3004               	movlw	4
 15982  1B7A  00A6               	movwf	dwt_writetodevice@length^(0+128)
 15983  1B7B  3069               	movlw	low dwt_write32bitoffsetreg@buffer
 15984  1B7C  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 15985  1B7D  3000               	movlw	high dwt_write32bitoffsetreg@buffer
 15986  1B7E  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 15987  1B7F  3199  213B         	fcall	_dwt_writetodevice
 15988  1B81  0008               	return
 15989  1B82                     __end_of_dwt_write32bitoffsetreg:	
 15990                           
 15991                           	psect	text40
 15992  193B                     __ptext40:	
 15993 ;; *************** function _dwt_writetodevice *****************
 15994 ;; Defined at:
 15995 ;;		line 333 in file "deca_device.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;  regFileID       4    0[BANK1 ] unsigned long 
 15998 ;;  index           2    4[BANK1 ] unsigned int 
 15999 ;;  length          4    6[BANK1 ] unsigned long 
 16000 ;;  buffer          2   10[BANK1 ] PTR unsigned char 
 16001 ;;		 -> tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), NULL(0), dwt_write8bitoffsetreg@regval(1), 
 16002 ;;		 -> dwt_write16bitoffsetreg@buffer(2), dwt_write32bitoffsetreg@buffer(4), 
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;		None
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  1    wreg      void 
 16007 ;; Registers used:
 16008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16014 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16017 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16018 ;;Total ram usage:       12 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:    6
 16021 ;; This function calls:
 16022 ;;		_dwt_xfer3000
 16023 ;; This function is called by:
 16024 ;;		_dwt_write32bitoffsetreg
 16025 ;;		_dwt_write16bitoffsetreg
 16026 ;;		_dwt_write8bitoffsetreg
 16027 ;;		_dwt_writetxdata
 16028 ;;		_dwt_starttx
 16029 ;;		_dwt_seteui
 16030 ;;		_dwt_signal_rx_buff_free
 16031 ;;		_dwt_forcetrxoff
 16032 ;;		_dwt_rxenable
 16033 ;;		_dwt_update_nonce_CCM
 16034 ;;		_dwt_update_nonce_GCM
 16035 ;;		_dwt_do_aes
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           
 16039                           
 16040                           ;psect for function _dwt_writetodevice
 16041  193B                     _dwt_writetodevice:	
 16042                           
 16043                           ;deca_device.c: 341: dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_WR_BIT);
 16044                           
 16045                           ;incstack = 0
 16046                           ; Regs used in _dwt_writetodevice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16047  193B  0141               	movlb	1	; select bank1
 16048  193C  0823               	movf	(dwt_writetodevice@regFileID+3)^(0+128),w
 16049  193D  0140               	movlb	0	; select bank0
 16050  193E  00CA               	movwf	dwt_xfer3000@regFileID+3
 16051  193F  0141               	movlb	1	; select bank1
 16052  1940  0822               	movf	(dwt_writetodevice@regFileID+2)^(0+128),w
 16053  1941  0140               	movlb	0	; select bank0
 16054  1942  00C9               	movwf	dwt_xfer3000@regFileID+2
 16055  1943  0141               	movlb	1	; select bank1
 16056  1944  0821               	movf	(dwt_writetodevice@regFileID+1)^(0+128),w
 16057  1945  0140               	movlb	0	; select bank0
 16058  1946  00C8               	movwf	dwt_xfer3000@regFileID+1
 16059  1947  0141               	movlb	1	; select bank1
 16060  1948  0820               	movf	dwt_writetodevice@regFileID^(0+128),w
 16061  1949  0140               	movlb	0	; select bank0
 16062  194A  00C7               	movwf	dwt_xfer3000@regFileID
 16063  194B  0141               	movlb	1	; select bank1
 16064  194C  0825               	movf	(dwt_writetodevice@index+1)^(0+128),w
 16065  194D  0140               	movlb	0	; select bank0
 16066  194E  00CC               	movwf	dwt_xfer3000@indx+1
 16067  194F  0141               	movlb	1	; select bank1
 16068  1950  0824               	movf	dwt_writetodevice@index^(0+128),w
 16069  1951  0140               	movlb	0	; select bank0
 16070  1952  00CB               	movwf	dwt_xfer3000@indx
 16071  1953  0141               	movlb	1	; select bank1
 16072  1954  0829               	movf	(dwt_writetodevice@length+3)^(0+128),w
 16073  1955  0140               	movlb	0	; select bank0
 16074  1956  00D0               	movwf	dwt_xfer3000@length+3
 16075  1957  0141               	movlb	1	; select bank1
 16076  1958  0828               	movf	(dwt_writetodevice@length+2)^(0+128),w
 16077  1959  0140               	movlb	0	; select bank0
 16078  195A  00CF               	movwf	dwt_xfer3000@length+2
 16079  195B  0141               	movlb	1	; select bank1
 16080  195C  0827               	movf	(dwt_writetodevice@length+1)^(0+128),w
 16081  195D  0140               	movlb	0	; select bank0
 16082  195E  00CE               	movwf	dwt_xfer3000@length+1
 16083  195F  0141               	movlb	1	; select bank1
 16084  1960  0826               	movf	dwt_writetodevice@length^(0+128),w
 16085  1961  0140               	movlb	0	; select bank0
 16086  1962  00CD               	movwf	dwt_xfer3000@length
 16087  1963  0141               	movlb	1	; select bank1
 16088  1964  082B               	movf	(dwt_writetodevice@buffer+1)^(0+128),w
 16089  1965  0140               	movlb	0	; select bank0
 16090  1966  00D2               	movwf	dwt_xfer3000@buffer+1
 16091  1967  0141               	movlb	1	; select bank1
 16092  1968  082A               	movf	dwt_writetodevice@buffer^(0+128),w
 16093  1969  0140               	movlb	0	; select bank0
 16094  196A  00D1               	movwf	dwt_xfer3000@buffer
 16095  196B  3000               	movlw	0
 16096  196C  00D3               	movwf	dwt_xfer3000@mode
 16097  196D  3080               	movlw	128
 16098  196E  00D4               	movwf	dwt_xfer3000@mode+1
 16099  196F  3189  2165         	fcall	_dwt_xfer3000
 16100  1971  0008               	return
 16101  1972                     __end_of_dwt_writetodevice:	
 16102                           
 16103                           	psect	text41
 16104  1BD0                     __ptext41:	
 16105 ;; *************** function __dwt_kick_dgc_on_wakeup *****************
 16106 ;; Defined at:
 16107 ;;		line 749 in file "deca_device.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  channel         1    wreg     char 
 16110 ;; Auto vars:     Size  Location     Type
 16111 ;;  channel         1   77[BANK0 ] char 
 16112 ;; Return value:  Size  Location     Type
 16113 ;;                  1    wreg      void 
 16114 ;; Registers used:
 16115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16116 ;; Tracked objects:
 16117 ;;		On entry : 0/0
 16118 ;;		On exit  : 0/0
 16119 ;;		Unchanged: 0/0
 16120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16124 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16125 ;;Total ram usage:        1 bytes
 16126 ;; Hardware stack levels used:    1
 16127 ;; Hardware stack levels required when called:    7
 16128 ;; This function calls:
 16129 ;;		_dwt_modify32bitoffsetreg
 16130 ;; This function is called by:
 16131 ;;		_dwt_configure
 16132 ;;		_dwt_restoreconfig
 16133 ;; This function uses a non-reentrant model
 16134 ;;
 16135                           
 16136                           
 16137                           ;psect for function __dwt_kick_dgc_on_wakeup
 16138  1BD0                     __dwt_kick_dgc_on_wakeup:	
 16139                           
 16140                           ;incstack = 0
 16141                           ; Regs used in __dwt_kick_dgc_on_wakeup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16142                           ;__dwt_kick_dgc_on_wakeup@channel stored from wreg
 16143  1BD0  0140               	movlb	0	; select bank0
 16144  1BD1  00ED               	movwf	__dwt_kick_dgc_on_wakeup@channel
 16145                           
 16146                           ;deca_device.c: 752: if (channel == 5)
 16147  1BD2  3005               	movlw	5
 16148  1BD3  066D               	xorwf	__dwt_kick_dgc_on_wakeup@channel,w
 16149  1BD4  1D03               	btfss	3,2
 16150  1BD5  2BFA               	goto	l5301
 16151                           
 16152                           ;deca_device.c: 753: {
 16153                           ;deca_device.c: 754: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x2000U),
 16154                           ;deca_device.c: 755: (DWT_DGC_SEL_CH5 << (13U)) | 0x40U);
 16155  1BD6  3000               	movlw	0
 16156  1BD7  0141               	movlb	1	; select bank1
 16157  1BD8  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16158  1BD9  300B               	movlw	11
 16159  1BDA  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16160  1BDB  3000               	movlw	0
 16161  1BDC  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16162  1BDD  3008               	movlw	8
 16163  1BDE  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16164  1BDF  3000               	movlw	0
 16165  1BE0  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16166  1BE1  3000               	movlw	0
 16167  1BE2  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16168  1BE3  3000               	movlw	0
 16169  1BE4  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16170  1BE5  3000               	movlw	0
 16171  1BE6  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16172  1BE7  3000               	movlw	0
 16173  1BE8  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16174  1BE9  3000               	movlw	0
 16175  1BEA  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16176  1BEB  30DF               	movlw	223
 16177  1BEC  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16178  1BED  30FF               	movlw	255
 16179  1BEE  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16180  1BEF  3000               	movlw	0
 16181  1BF0  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16182  1BF1  3000               	movlw	0
 16183  1BF2  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16184  1BF3  3000               	movlw	0
 16185  1BF4  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16186  1BF5  3040               	movlw	64
 16187  1BF6  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16188  1BF7  3193  2368         	fcall	_dwt_modify32bitoffsetreg
 16189                           
 16190                           ;deca_device.c: 756: }
 16191  1BF9  0008               	return
 16192  1BFA                     l5301:	
 16193                           
 16194                           ;deca_device.c: 757: else if (channel == 9)
 16195  1BFA  3009               	movlw	9
 16196  1BFB  0140               	movlb	0	; select bank0
 16197  1BFC  066D               	xorwf	__dwt_kick_dgc_on_wakeup@channel,w
 16198  1BFD  1D03               	btfss	3,2
 16199  1BFE  0008               	return
 16200                           
 16201                           ;deca_device.c: 758: {
 16202                           ;deca_device.c: 759: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x2000U),
 16203                           ;deca_device.c: 760: (DWT_DGC_SEL_CH9 << (13U)) | 0x40U);
 16204  1BFF  3000               	movlw	0
 16205  1C00  0141               	movlb	1	; select bank1
 16206  1C01  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16207  1C02  300B               	movlw	11
 16208  1C03  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16209  1C04  3000               	movlw	0
 16210  1C05  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16211  1C06  3008               	movlw	8
 16212  1C07  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16213  1C08  3000               	movlw	0
 16214  1C09  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16215  1C0A  3000               	movlw	0
 16216  1C0B  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16217  1C0C  3000               	movlw	0
 16218  1C0D  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16219  1C0E  3000               	movlw	0
 16220  1C0F  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16221  1C10  3000               	movlw	0
 16222  1C11  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16223  1C12  3000               	movlw	0
 16224  1C13  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16225  1C14  30DF               	movlw	223
 16226  1C15  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16227  1C16  30FF               	movlw	255
 16228  1C17  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16229  1C18  3000               	movlw	0
 16230  1C19  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16231  1C1A  3000               	movlw	0
 16232  1C1B  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16233  1C1C  3020               	movlw	32
 16234  1C1D  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16235  1C1E  3040               	movlw	64
 16236  1C1F  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16237  1C20  3193  2368         	fcall	_dwt_modify32bitoffsetreg
 16238  1C22  0008               	return
 16239  1C23                     __end_of__dwt_kick_dgc_on_wakeup:	
 16240                           
 16241                           	psect	text42
 16242  1368                     __ptext42:	
 16243 ;; *************** function _dwt_modify32bitoffsetreg *****************
 16244 ;; Defined at:
 16245 ;;		line 535 in file "deca_device.c"
 16246 ;; Parameters:    Size  Location     Type
 16247 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 16248 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 16249 ;;  _and            4    8[BANK1 ] const unsigned long 
 16250 ;;  _or             4   12[BANK1 ] const unsigned long 
 16251 ;; Auto vars:     Size  Location     Type
 16252 ;;  buf             8   16[BANK1 ] unsigned char [8]
 16253 ;; Return value:  Size  Location     Type
 16254 ;;                  1    wreg      void 
 16255 ;; Registers used:
 16256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16257 ;; Tracked objects:
 16258 ;;		On entry : 0/0
 16259 ;;		On exit  : 0/0
 16260 ;;		Unchanged: 0/0
 16261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16262 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16263 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16264 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16265 ;;      Totals:         0       5      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16266 ;;Total ram usage:       29 bytes
 16267 ;; Hardware stack levels used:    1
 16268 ;; Hardware stack levels required when called:    6
 16269 ;; This function calls:
 16270 ;;		_dwt_xfer3000
 16271 ;; This function is called by:
 16272 ;;		__dwt_kick_dgc_on_wakeup
 16273 ;;		_dwt_setdwstate
 16274 ;;		_dwt_configure
 16275 ;;		_dwt_writetxfctrl
 16276 ;;		_dwt_enable_rf_tx
 16277 ;;		_dwt_enable_rftx_blocks
 16278 ;;		__dwt_kick_ops_table_on_wakeup
 16279 ;;		_dwt_enablegpioclocks
 16280 ;;		_dwt_configurestsmode
 16281 ;;		__dwt_otpprogword32
 16282 ;;		_dwt_enableautoack
 16283 ;;		_dwt_setdblrxbuffmode
 16284 ;;		_dwt_setleds
 16285 ;;		_dwt_setinterrupt
 16286 ;;		_dwt_configuresfdtype
 16287 ;; This function uses a non-reentrant model
 16288 ;;
 16289                           
 16290                           
 16291                           ;psect for function _dwt_modify32bitoffsetreg
 16292  1368                     _dwt_modify32bitoffsetreg:	
 16293                           
 16294                           ;deca_device.c: 537: uint8_t buf[8];
 16295                           ;deca_device.c: 538: buf[0] = (uint8_t)_and;
 16296                           
 16297                           ;incstack = 0
 16298                           ; Regs used in _dwt_modify32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16299  1368  0141               	movlb	1	; select bank1
 16300  1369  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 16301  136A  0140               	movlb	0	; select bank0
 16302  136B  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16303  136C  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16304  136D  0141               	movlb	1	; select bank1
 16305  136E  00B0               	movwf	dwt_modify32bitoffsetreg@buf^(0+128)
 16306                           
 16307                           ;deca_device.c: 539: buf[1] = (uint8_t)(_and>>8);
 16308  136F  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 16309  1370  0140               	movlb	0	; select bank0
 16310  1371  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16311  1372  0141               	movlb	1	; select bank1
 16312  1373  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 16313  1374  0140               	movlb	0	; select bank0
 16314  1375  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 16315  1376  0141               	movlb	1	; select bank1
 16316  1377  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 16317  1378  0140               	movlb	0	; select bank0
 16318  1379  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 16319  137A  0141               	movlb	1	; select bank1
 16320  137B  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 16321  137C  0140               	movlb	0	; select bank0
 16322  137D  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 16323  137E  3008               	movlw	8
 16324  137F                     u4585:	
 16325  137F  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 16326  1380  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 16327  1381  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 16328  1382  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 16329  1383  0B89               	decfsz	9,f
 16330  1384  2B7F               	goto	u4585
 16331  1385  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16332  1386  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 16333  1387  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 16334  1388  0141               	movlb	1	; select bank1
 16335  1389  00B1               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+1)
 16336                           
 16337                           ;deca_device.c: 540: buf[2] = (uint8_t)(_and>>16);
 16338  138A  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 16339  138B  0140               	movlb	0	; select bank0
 16340  138C  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16341  138D  0141               	movlb	1	; select bank1
 16342  138E  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 16343  138F  0140               	movlb	0	; select bank0
 16344  1390  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 16345  1391  0141               	movlb	1	; select bank1
 16346  1392  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 16347  1393  0140               	movlb	0	; select bank0
 16348  1394  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 16349  1395  0141               	movlb	1	; select bank1
 16350  1396  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 16351  1397  0140               	movlb	0	; select bank0
 16352  1398  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 16353  1399  3010               	movlw	16
 16354  139A                     u4595:	
 16355  139A  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 16356  139B  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 16357  139C  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 16358  139D  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 16359  139E  0B89               	decfsz	9,f
 16360  139F  2B9A               	goto	u4595
 16361  13A0  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16362  13A1  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 16363  13A2  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 16364  13A3  0141               	movlb	1	; select bank1
 16365  13A4  00B2               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+2)
 16366                           
 16367                           ;deca_device.c: 541: buf[3] = (uint8_t)(_and>>24);
 16368  13A5  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 16369  13A6  0140               	movlb	0	; select bank0
 16370  13A7  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16371  13A8  0141               	movlb	1	; select bank1
 16372  13A9  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 16373  13AA  0140               	movlb	0	; select bank0
 16374  13AB  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 16375  13AC  0141               	movlb	1	; select bank1
 16376  13AD  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 16377  13AE  0140               	movlb	0	; select bank0
 16378  13AF  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 16379  13B0  0141               	movlb	1	; select bank1
 16380  13B1  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 16381  13B2  0140               	movlb	0	; select bank0
 16382  13B3  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 16383  13B4  3018               	movlw	24
 16384  13B5                     u4605:	
 16385  13B5  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 16386  13B6  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 16387  13B7  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 16388  13B8  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 16389  13B9  0B89               	decfsz	9,f
 16390  13BA  2BB5               	goto	u4605
 16391  13BB  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16392  13BC  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 16393  13BD  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 16394  13BE  0141               	movlb	1	; select bank1
 16395  13BF  00B3               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+3)
 16396                           
 16397                           ;deca_device.c: 542: buf[4] = (uint8_t)_or;
 16398  13C0  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 16399  13C1  0140               	movlb	0	; select bank0
 16400  13C2  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16401  13C3  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16402  13C4  0141               	movlb	1	; select bank1
 16403  13C5  00B4               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+4)
 16404                           
 16405                           ;deca_device.c: 543: buf[5] = (uint8_t)(_or>>8);
 16406  13C6  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 16407  13C7  0140               	movlb	0	; select bank0
 16408  13C8  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16409  13C9  0141               	movlb	1	; select bank1
 16410  13CA  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 16411  13CB  0140               	movlb	0	; select bank0
 16412  13CC  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 16413  13CD  0141               	movlb	1	; select bank1
 16414  13CE  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 16415  13CF  0140               	movlb	0	; select bank0
 16416  13D0  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 16417  13D1  0141               	movlb	1	; select bank1
 16418  13D2  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 16419  13D3  0140               	movlb	0	; select bank0
 16420  13D4  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 16421  13D5  3008               	movlw	8
 16422  13D6                     u4615:	
 16423  13D6  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 16424  13D7  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 16425  13D8  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 16426  13D9  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 16427  13DA  0B89               	decfsz	9,f
 16428  13DB  2BD6               	goto	u4615
 16429  13DC  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16430  13DD  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 16431  13DE  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 16432  13DF  0141               	movlb	1	; select bank1
 16433  13E0  00B5               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+5)
 16434                           
 16435                           ;deca_device.c: 544: buf[6] = (uint8_t)(_or>>16);
 16436  13E1  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 16437  13E2  0140               	movlb	0	; select bank0
 16438  13E3  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16439  13E4  0141               	movlb	1	; select bank1
 16440  13E5  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 16441  13E6  0140               	movlb	0	; select bank0
 16442  13E7  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 16443  13E8  0141               	movlb	1	; select bank1
 16444  13E9  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 16445  13EA  0140               	movlb	0	; select bank0
 16446  13EB  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 16447  13EC  0141               	movlb	1	; select bank1
 16448  13ED  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 16449  13EE  0140               	movlb	0	; select bank0
 16450  13EF  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 16451  13F0  3010               	movlw	16
 16452  13F1                     u4625:	
 16453  13F1  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 16454  13F2  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 16455  13F3  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 16456  13F4  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 16457  13F5  0B89               	decfsz	9,f
 16458  13F6  2BF1               	goto	u4625
 16459  13F7  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16460  13F8  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 16461  13F9  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 16462  13FA  0141               	movlb	1	; select bank1
 16463  13FB  00B6               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+6)
 16464                           
 16465                           ;deca_device.c: 545: buf[7] = (uint8_t)(_or>>24);
 16466  13FC  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 16467  13FD  0140               	movlb	0	; select bank0
 16468  13FE  00E8               	movwf	??_dwt_modify32bitoffsetreg
 16469  13FF  0141               	movlb	1	; select bank1
 16470  1400  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 16471  1401  0140               	movlb	0	; select bank0
 16472  1402  00E9               	movwf	??_dwt_modify32bitoffsetreg+1
 16473  1403  0141               	movlb	1	; select bank1
 16474  1404  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 16475  1405  0140               	movlb	0	; select bank0
 16476  1406  00EA               	movwf	??_dwt_modify32bitoffsetreg+2
 16477  1407  0141               	movlb	1	; select bank1
 16478  1408  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 16479  1409  0140               	movlb	0	; select bank0
 16480  140A  00EB               	movwf	??_dwt_modify32bitoffsetreg+3
 16481  140B  3018               	movlw	24
 16482  140C                     u4635:	
 16483  140C  36EB               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 16484  140D  0CEA               	rrf	??_dwt_modify32bitoffsetreg+2,f
 16485  140E  0CE9               	rrf	??_dwt_modify32bitoffsetreg+1,f
 16486  140F  0CE8               	rrf	??_dwt_modify32bitoffsetreg,f
 16487  1410  0B89               	decfsz	9,f
 16488  1411  2C0C               	goto	u4635
 16489  1412  0868               	movf	??_dwt_modify32bitoffsetreg,w
 16490  1413  00EC               	movwf	??_dwt_modify32bitoffsetreg+4
 16491  1414  086C               	movf	??_dwt_modify32bitoffsetreg+4,w
 16492  1415  0141               	movlb	1	; select bank1
 16493  1416  00B7               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+7)
 16494                           
 16495                           ;deca_device.c: 546: dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND
      +                          _OR_32);
 16496  1417  0823               	movf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128),w
 16497  1418  0140               	movlb	0	; select bank0
 16498  1419  00CA               	movwf	dwt_xfer3000@regFileID+3
 16499  141A  0141               	movlb	1	; select bank1
 16500  141B  0822               	movf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128),w
 16501  141C  0140               	movlb	0	; select bank0
 16502  141D  00C9               	movwf	dwt_xfer3000@regFileID+2
 16503  141E  0141               	movlb	1	; select bank1
 16504  141F  0821               	movf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128),w
 16505  1420  0140               	movlb	0	; select bank0
 16506  1421  00C8               	movwf	dwt_xfer3000@regFileID+1
 16507  1422  0141               	movlb	1	; select bank1
 16508  1423  0820               	movf	dwt_modify32bitoffsetreg@regFileID^(0+128),w
 16509  1424  0140               	movlb	0	; select bank0
 16510  1425  00C7               	movwf	dwt_xfer3000@regFileID
 16511  1426  0141               	movlb	1	; select bank1
 16512  1427  0825               	movf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128),w
 16513  1428  0140               	movlb	0	; select bank0
 16514  1429  00CC               	movwf	dwt_xfer3000@indx+1
 16515  142A  0141               	movlb	1	; select bank1
 16516  142B  0824               	movf	dwt_modify32bitoffsetreg@regOffset^(0+128),w
 16517  142C  0140               	movlb	0	; select bank0
 16518  142D  00CB               	movwf	dwt_xfer3000@indx
 16519  142E  3000               	movlw	0
 16520  142F  00D0               	movwf	dwt_xfer3000@length+3
 16521  1430  3000               	movlw	0
 16522  1431  00CF               	movwf	dwt_xfer3000@length+2
 16523  1432  3000               	movlw	0
 16524  1433  00CE               	movwf	dwt_xfer3000@length+1
 16525  1434  3008               	movlw	8
 16526  1435  00CD               	movwf	dwt_xfer3000@length
 16527  1436  30B0               	movlw	low dwt_modify32bitoffsetreg@buf
 16528  1437  00D1               	movwf	dwt_xfer3000@buffer
 16529  1438  3000               	movlw	high dwt_modify32bitoffsetreg@buf
 16530  1439  00D2               	movwf	dwt_xfer3000@buffer+1
 16531  143A  3003               	movlw	3
 16532  143B  00D3               	movwf	dwt_xfer3000@mode
 16533  143C  3080               	movlw	128
 16534  143D  00D4               	movwf	dwt_xfer3000@mode+1
 16535  143E  3189  2165         	fcall	_dwt_xfer3000
 16536  1440  0008               	return
 16537  1441                     __end_of_dwt_modify32bitoffsetreg:	
 16538                           
 16539                           	psect	text43
 16540  0965                     __ptext43:	
 16541 ;; *************** function _dwt_xfer3000 *****************
 16542 ;; Defined at:
 16543 ;;		line 207 in file "deca_device.c"
 16544 ;; Parameters:    Size  Location     Type
 16545 ;;  regFileID       4   39[BANK0 ] const unsigned long 
 16546 ;;  indx            2   43[BANK0 ] const unsigned int 
 16547 ;;  length          4   45[BANK0 ] const unsigned long 
 16548 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 16549 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 16550 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 16551 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 16552 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 16553 ;;  mode            2   51[BANK0 ] const enum E265
 16554 ;; Auto vars:     Size  Location     Type
 16555 ;;  crc8            1   65[BANK0 ] unsigned char 
 16556 ;;  header          2   68[BANK0 ] unsigned char [2]
 16557 ;;  cnt             2   70[BANK0 ] unsigned int 
 16558 ;;  reg_offset      2   66[BANK0 ] unsigned int 
 16559 ;;  addr            2   63[BANK0 ] unsigned int 
 16560 ;;  reg_file        2   61[BANK0 ] unsigned int 
 16561 ;; Return value:  Size  Location     Type
 16562 ;;                  1    wreg      void 
 16563 ;; Registers used:
 16564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16565 ;; Tracked objects:
 16566 ;;		On entry : 0/0
 16567 ;;		On exit  : 0/0
 16568 ;;		Unchanged: 0/0
 16569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16570 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16571 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16572 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16573 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16574 ;;Total ram usage:       33 bytes
 16575 ;; Hardware stack levels used:    1
 16576 ;; Hardware stack levels required when called:    5
 16577 ;; This function calls:
 16578 ;;		__fassert
 16579 ;;		_dwt_generatecrc8
 16580 ;;		_readfromspi
 16581 ;;		_writetospi
 16582 ;;		_writetospiwithcrc
 16583 ;; This function is called by:
 16584 ;;		_dwt_writetodevice
 16585 ;;		_dwt_readfromdevice
 16586 ;;		_dwt_read8bitoffsetreg
 16587 ;;		_dwt_modify32bitoffsetreg
 16588 ;;		_dwt_modify16bitoffsetreg
 16589 ;;		_dwt_modify8bitoffsetreg
 16590 ;; This function uses a non-reentrant model
 16591 ;;
 16592                           
 16593                           
 16594                           ;psect for function _dwt_xfer3000
 16595  0965                     _dwt_xfer3000:	
 16596                           
 16597                           ;deca_device.c: 216: uint8_t header[2];
 16598                           ;deca_device.c: 217: uint16_t cnt = 0;
 16599                           
 16600                           ;incstack = 0
 16601                           ; Regs used in _dwt_xfer3000: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16602  0965  0140               	movlb	0	; select bank0
 16603  0966  01E6               	clrf	dwt_xfer3000@cnt
 16604  0967  01E7               	clrf	dwt_xfer3000@cnt+1
 16605                           
 16606                           ;deca_device.c: 218: uint16_t reg_file = 0x1F & ((regFileID + indx) >> 16);
 16607  0968  0847               	movf	dwt_xfer3000@regFileID,w
 16608  0969  00D5               	movwf	??_dwt_xfer3000
 16609  096A  0848               	movf	dwt_xfer3000@regFileID+1,w
 16610  096B  00D6               	movwf	??_dwt_xfer3000+1
 16611  096C  0849               	movf	dwt_xfer3000@regFileID+2,w
 16612  096D  00D7               	movwf	??_dwt_xfer3000+2
 16613  096E  084A               	movf	dwt_xfer3000@regFileID+3,w
 16614  096F  00D8               	movwf	??_dwt_xfer3000+3
 16615  0970  084B               	movf	dwt_xfer3000@indx,w
 16616  0971  00D9               	movwf	??_dwt_xfer3000+4
 16617  0972  084C               	movf	dwt_xfer3000@indx+1,w
 16618  0973  00DA               	movwf	??_dwt_xfer3000+5
 16619  0974  01DB               	clrf	??_dwt_xfer3000+6
 16620  0975  01DC               	clrf	??_dwt_xfer3000+7
 16621  0976  0859               	movf	??_dwt_xfer3000+4,w
 16622  0977  07D5               	addwf	??_dwt_xfer3000,f
 16623  0978  085A               	movf	??_dwt_xfer3000+5,w
 16624  0979  3DD6               	addwfc	??_dwt_xfer3000+1,f
 16625  097A  085B               	movf	??_dwt_xfer3000+6,w
 16626  097B  3DD7               	addwfc	??_dwt_xfer3000+2,f
 16627  097C  085C               	movf	??_dwt_xfer3000+7,w
 16628  097D  3DD8               	addwfc	??_dwt_xfer3000+3,f
 16629  097E  3010               	movlw	16
 16630  097F                     u4355:	
 16631  097F  36D8               	lsrf	??_dwt_xfer3000+3,f
 16632  0980  0CD7               	rrf	??_dwt_xfer3000+2,f
 16633  0981  0CD6               	rrf	??_dwt_xfer3000+1,f
 16634  0982  0CD5               	rrf	??_dwt_xfer3000,f
 16635  0983  0B89               	decfsz	9,f
 16636  0984  297F               	goto	u4355
 16637  0985  301F               	movlw	31
 16638  0986  0555               	andwf	??_dwt_xfer3000,w
 16639  0987  00DD               	movwf	dwt_xfer3000@reg_file
 16640  0988  3000               	movlw	0
 16641  0989  0556               	andwf	??_dwt_xfer3000+1,w
 16642  098A  00DE               	movwf	dwt_xfer3000@reg_file+1
 16643                           
 16644                           ;deca_device.c: 219: uint16_t reg_offset = 0x7F & (regFileID + indx);
 16645  098B  0847               	movf	dwt_xfer3000@regFileID,w
 16646  098C  074B               	addwf	dwt_xfer3000@indx,w
 16647  098D  00D5               	movwf	??_dwt_xfer3000
 16648  098E  0848               	movf	dwt_xfer3000@regFileID+1,w
 16649  098F  3D4C               	addwfc	dwt_xfer3000@indx+1,w
 16650  0990  00D6               	movwf	??_dwt_xfer3000+1
 16651  0991  307F               	movlw	127
 16652  0992  0555               	andwf	??_dwt_xfer3000,w
 16653  0993  00E2               	movwf	dwt_xfer3000@reg_offset
 16654  0994  3000               	movlw	0
 16655  0995  0556               	andwf	??_dwt_xfer3000+1,w
 16656  0996  00E3               	movwf	dwt_xfer3000@reg_offset+1
 16657                           
 16658                           ;deca_device.c: 222: if(!(reg_file <= 0x1F)) {_fassert(222, "deca_device.c", "reg_file <
      +                          = 0x1F");};
 16659  0997  3000               	movlw	0
 16660  0998  025E               	subwf	dwt_xfer3000@reg_file+1,w
 16661  0999  3020               	movlw	32
 16662  099A  1903               	skipnz
 16663  099B  025D               	subwf	dwt_xfer3000@reg_file,w
 16664  099C  1C03               	skipc
 16665  099D  29AD               	goto	l4985
 16666  099E  30DE               	movlw	222
 16667  099F  00C1               	movwf	__fassert@line
 16668  09A0  3000               	movlw	0
 16669  09A1  00C2               	movwf	__fassert@line+1
 16670  09A2  30F4               	movlw	low (STR_6| (0+32768))
 16671  09A3  00C3               	movwf	__fassert@file
 16672  09A4  30A8               	movlw	high (STR_6| (0+32768))
 16673  09A5  00C4               	movwf	__fassert@file+1
 16674  09A6  30A7               	movlw	low (STR_7| (0+32768))
 16675  09A7  00C5               	movwf	__fassert@exp
 16676  09A8  30A8               	movlw	high (STR_7| (0+32768))
 16677  09A9  00C6               	movwf	__fassert@exp+1
 16678  09AA  31A5  2558  3189   	fcall	__fassert
 16679  09AD                     l4985:	
 16680                           
 16681                           ;deca_device.c: 223: if(!(reg_offset <= 0x7F)) {_fassert(223, "deca_device.c", "reg_offs
      +                          et <= 0x7F");};
 16682  09AD  3000               	movlw	0
 16683  09AE  0140               	movlb	0	; select bank0
 16684  09AF  0263               	subwf	dwt_xfer3000@reg_offset+1,w
 16685  09B0  3080               	movlw	128
 16686  09B1  1903               	skipnz
 16687  09B2  0262               	subwf	dwt_xfer3000@reg_offset,w
 16688  09B3  1C03               	skipc
 16689  09B4  29C4               	goto	l4989
 16690  09B5  30DF               	movlw	223
 16691  09B6  00C1               	movwf	__fassert@line
 16692  09B7  3000               	movlw	0
 16693  09B8  00C2               	movwf	__fassert@line+1
 16694  09B9  30F4               	movlw	low (STR_6| (0+32768))
 16695  09BA  00C3               	movwf	__fassert@file
 16696  09BB  30A8               	movlw	high (STR_6| (0+32768))
 16697  09BC  00C4               	movwf	__fassert@file+1
 16698  09BD  3072               	movlw	low (STR_9| (0+32768))
 16699  09BE  00C5               	movwf	__fassert@exp
 16700  09BF  30A8               	movlw	high (STR_9| (0+32768))
 16701  09C0  00C6               	movwf	__fassert@exp+1
 16702  09C1  31A5  2558  3189   	fcall	__fassert
 16703  09C4                     l4989:	
 16704                           
 16705                           ;deca_device.c: 224: if(!(length < 0x3100)) {_fassert(224, "deca_device.c", "length < 0x
      +                          3100");};
 16706  09C4  0140               	movlb	0	; select bank0
 16707  09C5  0850               	movf	dwt_xfer3000@length+3,w
 16708  09C6  1D03               	btfss	3,2
 16709  09C7  29CF               	goto	l4991
 16710  09C8  084F               	movf	dwt_xfer3000@length+2,w
 16711  09C9  1D03               	btfss	3,2
 16712  09CA  29CF               	goto	l4991
 16713  09CB  3031               	movlw	49
 16714  09CC  024E               	subwf	dwt_xfer3000@length+1,w
 16715  09CD  1C03               	btfss	3,0
 16716  09CE  29DE               	goto	l4993
 16717  09CF                     l4991:	
 16718  09CF  30E0               	movlw	224
 16719  09D0  00C1               	movwf	__fassert@line
 16720  09D1  3000               	movlw	0
 16721  09D2  00C2               	movwf	__fassert@line+1
 16722  09D3  30F4               	movlw	low (STR_6| (0+32768))
 16723  09D4  00C3               	movwf	__fassert@file
 16724  09D5  30A8               	movlw	high (STR_6| (0+32768))
 16725  09D6  00C4               	movwf	__fassert@file+1
 16726  09D7  30B8               	movlw	low (STR_11| (0+32768))
 16727  09D8  00C5               	movwf	__fassert@exp
 16728  09D9  30A8               	movlw	high (STR_11| (0+32768))
 16729  09DA  00C6               	movwf	__fassert@exp+1
 16730  09DB  31A5  2558  3189   	fcall	__fassert
 16731  09DE                     l4993:	
 16732                           
 16733                           ;deca_device.c: 225: if(!(mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_RD_BIT || mode
      +                           == DW3000_SPI_AND_OR_8 || mode == DW3000_SPI_AND_OR_16 || mode == DW3000_SPI_AND_OR_32)
      +                          ) {_fassert(229, "deca_device.c", "mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_RD_BI
      +                          T || mo
 16734  09DE  3080               	movlw	128
 16735  09DF  0140               	movlb	0	; select bank0
 16736  09E0  0654               	xorwf	dwt_xfer3000@mode+1,w
 16737  09E1  0453               	iorwf	dwt_xfer3000@mode,w
 16738  09E2  1903               	btfsc	3,2
 16739  09E3  2A0B               	goto	l5005
 16740  09E4  0853               	movf	dwt_xfer3000@mode,w
 16741  09E5  0454               	iorwf	dwt_xfer3000@mode+1,w
 16742  09E6  1903               	btfsc	3,2
 16743  09E7  2A0B               	goto	l5005
 16744  09E8  0353               	decf	dwt_xfer3000@mode,w
 16745  09E9  3080               	movlw	128
 16746  09EA  1903               	skipnz
 16747  09EB  0654               	xorwf	dwt_xfer3000@mode+1,w
 16748  09EC  1903               	btfsc	3,2
 16749  09ED  2A0B               	goto	l5005
 16750  09EE  3002               	movlw	2
 16751  09EF  0653               	xorwf	dwt_xfer3000@mode,w
 16752  09F0  3080               	movlw	128
 16753  09F1  1903               	skipnz
 16754  09F2  0654               	xorwf	dwt_xfer3000@mode+1,w
 16755  09F3  1903               	btfsc	3,2
 16756  09F4  2A0B               	goto	l5005
 16757  09F5  3003               	movlw	3
 16758  09F6  0653               	xorwf	dwt_xfer3000@mode,w
 16759  09F7  3080               	movlw	128
 16760  09F8  1903               	skipnz
 16761  09F9  0654               	xorwf	dwt_xfer3000@mode+1,w
 16762  09FA  1903               	btfsc	3,2
 16763  09FB  2A0B               	goto	l5005
 16764  09FC  30E5               	movlw	229
 16765  09FD  00C1               	movwf	__fassert@line
 16766  09FE  3000               	movlw	0
 16767  09FF  00C2               	movwf	__fassert@line+1
 16768  0A00  30F4               	movlw	low (STR_6| (0+32768))
 16769  0A01  00C3               	movwf	__fassert@file
 16770  0A02  30A8               	movlw	high (STR_6| (0+32768))
 16771  0A03  00C4               	movwf	__fassert@file+1
 16772  0A04  3004               	movlw	low (STR_13| (0+32768))
 16773  0A05  00C5               	movwf	__fassert@exp
 16774  0A06  3098               	movlw	high (STR_13| (0+32768))
 16775  0A07  00C6               	movwf	__fassert@exp+1
 16776  0A08  31A5  2558  3189   	fcall	__fassert
 16777  0A0B                     l5005:	
 16778                           
 16779                           ;deca_device.c: 232: uint16_t addr;
 16780                           ;deca_device.c: 233: addr = (reg_file << 9) | (reg_offset << 2);
 16781  0A0B  0140               	movlb	0	; select bank0
 16782  0A0C  0863               	movf	dwt_xfer3000@reg_offset+1,w
 16783  0A0D  00D6               	movwf	??_dwt_xfer3000+1
 16784  0A0E  0862               	movf	dwt_xfer3000@reg_offset,w
 16785  0A0F  00D5               	movwf	??_dwt_xfer3000
 16786  0A10  35D5               	lslf	??_dwt_xfer3000,f
 16787  0A11  0DD6               	rlf	??_dwt_xfer3000+1,f
 16788  0A12  35D5               	lslf	??_dwt_xfer3000,f
 16789  0A13  0DD6               	rlf	??_dwt_xfer3000+1,f
 16790  0A14  085E               	movf	dwt_xfer3000@reg_file+1,w
 16791  0A15  00D8               	movwf	??_dwt_xfer3000+3
 16792  0A16  085D               	movf	dwt_xfer3000@reg_file,w
 16793  0A17  00D7               	movwf	??_dwt_xfer3000+2
 16794  0A18  3009               	movlw	9
 16795  0A19                     u4445:	
 16796  0A19  35D7               	lslf	??_dwt_xfer3000+2,f
 16797  0A1A  0DD8               	rlf	??_dwt_xfer3000+3,f
 16798  0A1B  0B89               	decfsz	9,f
 16799  0A1C  2A19               	goto	u4445
 16800  0A1D  0855               	movf	??_dwt_xfer3000,w
 16801  0A1E  0457               	iorwf	??_dwt_xfer3000+2,w
 16802  0A1F  00DF               	movwf	dwt_xfer3000@addr
 16803  0A20  0856               	movf	??_dwt_xfer3000+1,w
 16804  0A21  0458               	iorwf	??_dwt_xfer3000+3,w
 16805  0A22  00E0               	movwf	dwt_xfer3000@addr+1
 16806                           
 16807                           ;deca_device.c: 234: header[0] = (uint8_t)((mode | addr) >> 8);
 16808  0A23  085F               	movf	dwt_xfer3000@addr,w
 16809  0A24  0453               	iorwf	dwt_xfer3000@mode,w
 16810  0A25  00D5               	movwf	??_dwt_xfer3000
 16811  0A26  0860               	movf	dwt_xfer3000@addr+1,w
 16812  0A27  0454               	iorwf	dwt_xfer3000@mode+1,w
 16813  0A28  00D6               	movwf	??_dwt_xfer3000+1
 16814  0A29  0856               	movf	??_dwt_xfer3000+1,w
 16815  0A2A  00D7               	movwf	??_dwt_xfer3000+2
 16816  0A2B  0857               	movf	??_dwt_xfer3000+2,w
 16817  0A2C  00E4               	movwf	dwt_xfer3000@header
 16818                           
 16819                           ;deca_device.c: 235: header[1] = (uint8_t)(addr | (mode & 0x03));
 16820  0A2D  0853               	movf	dwt_xfer3000@mode,w
 16821  0A2E  3903               	andlw	3
 16822  0A2F  045F               	iorwf	dwt_xfer3000@addr,w
 16823  0A30  00D5               	movwf	??_dwt_xfer3000
 16824  0A31  0855               	movf	??_dwt_xfer3000,w
 16825  0A32  00E5               	movwf	dwt_xfer3000@header+1
 16826                           
 16827                           ;deca_device.c: 236: if ( length == 0)
 16828  0A33  0850               	movf	dwt_xfer3000@length+3,w
 16829  0A34  044F               	iorwf	dwt_xfer3000@length+2,w
 16830  0A35  044E               	iorwf	dwt_xfer3000@length+1,w
 16831  0A36  044D               	iorwf	dwt_xfer3000@length,w
 16832  0A37  1D03               	skipz
 16833  0A38  2A54               	goto	l5021
 16834                           
 16835                           ;deca_device.c: 237: {
 16836                           ;deca_device.c: 241: if(!(mode == DW3000_SPI_WR_BIT)) {_fassert(241, "deca_device.c", "m
      +                          ode == DW3000_SPI_WR_BIT");};
 16837  0A39  3080               	movlw	128
 16838  0A3A  0654               	xorwf	dwt_xfer3000@mode+1,w
 16839  0A3B  0453               	iorwf	dwt_xfer3000@mode,w
 16840  0A3C  1903               	btfsc	3,2
 16841  0A3D  2A4D               	goto	l5017
 16842  0A3E  30F1               	movlw	241
 16843  0A3F  00C1               	movwf	__fassert@line
 16844  0A40  3000               	movlw	0
 16845  0A41  00C2               	movwf	__fassert@line+1
 16846  0A42  30F4               	movlw	low (STR_6| (0+32768))
 16847  0A43  00C3               	movwf	__fassert@file
 16848  0A44  30A8               	movlw	high (STR_6| (0+32768))
 16849  0A45  00C4               	movwf	__fassert@file+1
 16850  0A46  3043               	movlw	low (STR_15| (0+32768))
 16851  0A47  00C5               	movwf	__fassert@exp
 16852  0A48  30A8               	movlw	high (STR_15| (0+32768))
 16853  0A49  00C6               	movwf	__fassert@exp+1
 16854  0A4A  31A5  2558  3189   	fcall	__fassert
 16855  0A4D                     l5017:	
 16856                           
 16857                           ;deca_device.c: 243: header[0] = (uint8_t)((DW3000_SPI_WR_BIT>>8) | (regFileID<<1) | (0<
      +                          <6 | 1<<0));
 16858  0A4D  0140               	movlb	0	; select bank0
 16859  0A4E  3547               	lslf	dwt_xfer3000@regFileID,w
 16860  0A4F  3881               	iorlw	129
 16861  0A50  00D5               	movwf	??_dwt_xfer3000
 16862  0A51  0855               	movf	??_dwt_xfer3000,w
 16863  0A52  00E4               	movwf	dwt_xfer3000@header
 16864  0A53  2A61               	goto	l5027
 16865  0A54                     l5021:	
 16866                           ;deca_device.c: 245: }
 16867                           
 16868                           ;deca_device.c: 244: cnt = 1;
 16869                           
 16870                           
 16871                           ;deca_device.c: 246: else if (reg_offset == 0 && (mode == DW3000_SPI_WR_BIT || mode == D
      +                          W3000_SPI_RD_BIT))
 16872  0A54  0862               	movf	dwt_xfer3000@reg_offset,w
 16873  0A55  0463               	iorwf	dwt_xfer3000@reg_offset+1,w
 16874  0A56  1D03               	btfss	3,2
 16875  0A57  2A63               	goto	l428
 16876  0A58  3080               	movlw	128
 16877  0A59  0654               	xorwf	dwt_xfer3000@mode+1,w
 16878  0A5A  0453               	iorwf	dwt_xfer3000@mode,w
 16879  0A5B  1903               	btfsc	3,2
 16880  0A5C  2A61               	goto	l5027
 16881  0A5D  0853               	movf	dwt_xfer3000@mode,w
 16882  0A5E  0454               	iorwf	dwt_xfer3000@mode+1,w
 16883  0A5F  1D03               	btfss	3,2
 16884  0A60  2A63               	goto	l428
 16885  0A61                     l5027:	
 16886                           ;deca_device.c: 247: {
 16887                           ;deca_device.c: 250: header[0] |= (0<<6 | 0<<0);
 16888                           
 16889                           
 16890                           ;deca_device.c: 251: cnt = 1;
 16891  0A61  3001               	movlw	1
 16892  0A62  2A65               	goto	L19
 16893  0A63                     l428:	
 16894                           ;deca_device.c: 252: }
 16895                           
 16896                           
 16897                           ;deca_device.c: 253: else
 16898                           ;deca_device.c: 254: {
 16899                           ;deca_device.c: 258: header[0] |= (1<<6);
 16900  0A63  1764               	bsf	dwt_xfer3000@header,6
 16901                           
 16902                           ;deca_device.c: 259: cnt = 2;
 16903  0A64  3002               	movlw	2
 16904  0A65                     L19:	
 16905  0A65  00E6               	movwf	dwt_xfer3000@cnt
 16906  0A66  3000               	movlw	0
 16907  0A67  00E7               	movwf	dwt_xfer3000@cnt+1
 16908                           
 16909                           ;deca_device.c: 260: }
 16910                           ;deca_device.c: 261: switch (mode)
 16911  0A68  2AE3               	goto	l5043
 16912  0A69                     l5031:	
 16913                           ;deca_device.c: 262: {
 16914                           ;deca_device.c: 263: case DW3000_SPI_AND_OR_8:
 16915                           
 16916                           
 16917                           ;deca_device.c: 264: case DW3000_SPI_AND_OR_16:
 16918                           ;deca_device.c: 265: case DW3000_SPI_AND_OR_32:
 16919                           ;deca_device.c: 266: case DW3000_SPI_WR_BIT:
 16920                           ;deca_device.c: 267: {
 16921                           ;deca_device.c: 268: uint8_t crc8 = 0;
 16922  0A69  01E1               	clrf	dwt_xfer3000@crc8
 16923                           
 16924                           ;deca_device.c: 269: if (pdw3000local->spicrc != DWT_SPI_CRC_MODE_NO)
 16925  0A6A  0141               	movlb	1	; select bank1
 16926  0A6B  086F               	movf	_pdw3000local^(0+128),w
 16927  0A6C  3E14               	addlw	20
 16928  0A6D  0086               	movwf	6
 16929  0A6E  3002               	movlw	2	; select bank4/5
 16930  0A6F  0087               	movwf	7
 16931  0A70  0801               	movf	1,w
 16932  0A71  1903               	btfsc	3,2
 16933  0A72  2AB2               	goto	l5037
 16934                           
 16935                           ;deca_device.c: 270: {
 16936                           ;deca_device.c: 272: crc8 = dwt_generatecrc8(header, cnt, 0);
 16937  0A73  3064               	movlw	low dwt_xfer3000@header
 16938  0A74  00F0               	movwf	dwt_generatecrc8@byteArray
 16939  0A75  3000               	movlw	high dwt_xfer3000@header
 16940  0A76  00F1               	movwf	dwt_generatecrc8@byteArray+1
 16941  0A77  0140               	movlb	0	; select bank0
 16942  0A78  0867               	movf	dwt_xfer3000@cnt+1,w
 16943  0A79  00F3               	movwf	dwt_generatecrc8@len+1
 16944  0A7A  0866               	movf	dwt_xfer3000@cnt,w
 16945  0A7B  00F2               	movwf	dwt_generatecrc8@len
 16946  0A7C  01F4               	clrf	dwt_generatecrc8@crcRemainderInit
 16947  0A7D  31A7  277C  3189   	fcall	_dwt_generatecrc8
 16948  0A80  0140               	movlb	0	; select bank0
 16949  0A81  00D5               	movwf	??_dwt_xfer3000
 16950  0A82  0855               	movf	??_dwt_xfer3000,w
 16951  0A83  00E1               	movwf	dwt_xfer3000@crc8
 16952                           
 16953                           ;deca_device.c: 273: crc8 = dwt_generatecrc8(buffer, length, crc8);
 16954  0A84  0852               	movf	dwt_xfer3000@buffer+1,w
 16955  0A85  00F1               	movwf	dwt_generatecrc8@byteArray+1
 16956  0A86  0851               	movf	dwt_xfer3000@buffer,w
 16957  0A87  00F0               	movwf	dwt_generatecrc8@byteArray
 16958  0A88  084E               	movf	dwt_xfer3000@length+1,w
 16959  0A89  00F3               	movwf	dwt_generatecrc8@len+1
 16960  0A8A  084D               	movf	dwt_xfer3000@length,w
 16961  0A8B  00F2               	movwf	dwt_generatecrc8@len
 16962  0A8C  0861               	movf	dwt_xfer3000@crc8,w
 16963  0A8D  00D5               	movwf	??_dwt_xfer3000
 16964  0A8E  0855               	movf	??_dwt_xfer3000,w
 16965  0A8F  00F4               	movwf	dwt_generatecrc8@crcRemainderInit
 16966  0A90  31A7  277C  3189   	fcall	_dwt_generatecrc8
 16967  0A93  0140               	movlb	0	; select bank0
 16968  0A94  00D6               	movwf	??_dwt_xfer3000+1
 16969  0A95  0856               	movf	??_dwt_xfer3000+1,w
 16970  0A96  00E1               	movwf	dwt_xfer3000@crc8
 16971                           
 16972                           ;deca_device.c: 276: writetospiwithcrc(cnt, header, length, buffer, crc8);
 16973  0A97  0867               	movf	dwt_xfer3000@cnt+1,w
 16974  0A98  00A1               	movwf	writetospiwithcrc@headerLength+1
 16975  0A99  0866               	movf	dwt_xfer3000@cnt,w
 16976  0A9A  00A0               	movwf	writetospiwithcrc@headerLength
 16977  0A9B  3064               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 16978  0A9C  00D5               	movwf	??_dwt_xfer3000
 16979  0A9D  0855               	movf	??_dwt_xfer3000,w
 16980  0A9E  00A2               	movwf	writetospiwithcrc@headerBuffer
 16981  0A9F  0850               	movf	dwt_xfer3000@length+3,w
 16982  0AA0  00A6               	movwf	writetospiwithcrc@bodyLength+3
 16983  0AA1  084F               	movf	dwt_xfer3000@length+2,w
 16984  0AA2  00A5               	movwf	writetospiwithcrc@bodyLength+2
 16985  0AA3  084E               	movf	dwt_xfer3000@length+1,w
 16986  0AA4  00A4               	movwf	writetospiwithcrc@bodyLength+1
 16987  0AA5  084D               	movf	dwt_xfer3000@length,w
 16988  0AA6  00A3               	movwf	writetospiwithcrc@bodyLength
 16989  0AA7  0852               	movf	dwt_xfer3000@buffer+1,w
 16990  0AA8  00A8               	movwf	writetospiwithcrc@bodyBuffer+1
 16991  0AA9  0851               	movf	dwt_xfer3000@buffer,w
 16992  0AAA  00A7               	movwf	writetospiwithcrc@bodyBuffer
 16993  0AAB  0861               	movf	dwt_xfer3000@crc8,w
 16994  0AAC  00D6               	movwf	??_dwt_xfer3000+1
 16995  0AAD  0856               	movf	??_dwt_xfer3000+1,w
 16996  0AAE  00A9               	movwf	writetospiwithcrc@crc8
 16997  0AAF  31A7  2705         	fcall	_writetospiwithcrc
 16998                           
 16999                           ;deca_device.c: 277: }
 17000  0AB1  0008               	return
 17001  0AB2                     l5037:	
 17002                           
 17003                           ;deca_device.c: 278: else
 17004                           ;deca_device.c: 279: {
 17005                           ;deca_device.c: 281: writetospi(cnt, header, length, buffer);
 17006  0AB2  0140               	movlb	0	; select bank0
 17007  0AB3  0867               	movf	dwt_xfer3000@cnt+1,w
 17008  0AB4  00A1               	movwf	writetospi@headerLength+1
 17009  0AB5  0866               	movf	dwt_xfer3000@cnt,w
 17010  0AB6  00A0               	movwf	writetospi@headerLength
 17011  0AB7  3064               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 17012  0AB8  00D5               	movwf	??_dwt_xfer3000
 17013  0AB9  0855               	movf	??_dwt_xfer3000,w
 17014  0ABA  00A2               	movwf	writetospi@headerBuffer
 17015  0ABB  0850               	movf	dwt_xfer3000@length+3,w
 17016  0ABC  00A6               	movwf	writetospi@bodyLength+3
 17017  0ABD  084F               	movf	dwt_xfer3000@length+2,w
 17018  0ABE  00A5               	movwf	writetospi@bodyLength+2
 17019  0ABF  084E               	movf	dwt_xfer3000@length+1,w
 17020  0AC0  00A4               	movwf	writetospi@bodyLength+1
 17021  0AC1  084D               	movf	dwt_xfer3000@length,w
 17022  0AC2  00A3               	movwf	writetospi@bodyLength
 17023  0AC3  0852               	movf	dwt_xfer3000@buffer+1,w
 17024  0AC4  00A8               	movwf	writetospi@bodyBuffer+1
 17025  0AC5  0851               	movf	dwt_xfer3000@buffer,w
 17026  0AC6  00A7               	movwf	writetospi@bodyBuffer
 17027  0AC7  31A5  25D8         	fcall	_writetospi
 17028                           
 17029                           ;deca_device.c: 282: }
 17030                           ;deca_device.c: 283: break;
 17031  0AC9  0008               	return
 17032  0ACA                     l5039:	
 17033                           ;deca_device.c: 284: }
 17034                           ;deca_device.c: 285: case DW3000_SPI_RD_BIT:
 17035                           
 17036                           
 17037                           ;deca_device.c: 286: {
 17038                           ;deca_device.c: 288: readfromspi(cnt, header, length, buffer);
 17039  0ACA  0140               	movlb	0	; select bank0
 17040  0ACB  0867               	movf	dwt_xfer3000@cnt+1,w
 17041  0ACC  00A1               	movwf	readfromspi@headerLength+1
 17042  0ACD  0866               	movf	dwt_xfer3000@cnt,w
 17043  0ACE  00A0               	movwf	readfromspi@headerLength
 17044  0ACF  3064               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 17045  0AD0  00D5               	movwf	??_dwt_xfer3000
 17046  0AD1  0855               	movf	??_dwt_xfer3000,w
 17047  0AD2  00A2               	movwf	readfromspi@headerBuffer
 17048  0AD3  0850               	movf	dwt_xfer3000@length+3,w
 17049  0AD4  00A6               	movwf	readfromspi@readlength+3
 17050  0AD5  084F               	movf	dwt_xfer3000@length+2,w
 17051  0AD6  00A5               	movwf	readfromspi@readlength+2
 17052  0AD7  084E               	movf	dwt_xfer3000@length+1,w
 17053  0AD8  00A4               	movwf	readfromspi@readlength+1
 17054  0AD9  084D               	movf	dwt_xfer3000@length,w
 17055  0ADA  00A3               	movwf	readfromspi@readlength
 17056  0ADB  0852               	movf	dwt_xfer3000@buffer+1,w
 17057  0ADC  00A8               	movwf	readfromspi@readBuffer+1
 17058  0ADD  0851               	movf	dwt_xfer3000@buffer,w
 17059  0ADE  00A7               	movwf	readfromspi@readBuffer
 17060  0ADF  31A5  25BD         	fcall	_readfromspi
 17061                           
 17062                           ;deca_device.c: 310: break;
 17063  0AE1  0008               	return
 17064  0AE2                     l442:	
 17065                           ;deca_device.c: 313: while(1);
 17066                           
 17067                           ;deca_device.c: 311: }
 17068                           ;deca_device.c: 312: default:
 17069                           
 17070  0AE2  2AE2               	goto	l442
 17071  0AE3                     l5043:	
 17072                           ;deca_device.c: 315: }
 17073                           
 17074                           ;deca_device.c: 314: break;
 17075                           
 17076                           
 17077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 17078                           ; Switch size 1, requested type "space"
 17079                           ; Number of cases is 2, Range of values is 0 to 128
 17080                           ; switch strategies available:
 17081                           ; Name         Instructions Cycles
 17082                           ; simple_byte            7     4 (average)
 17083                           ; jumptable            260     6 (fixed)
 17084                           ;	Chosen strategy is simple_byte
 17085  0AE3  0140               	movlb	0	; select bank0
 17086  0AE4  0854               	movf	dwt_xfer3000@mode+1,w
 17087  0AE5  3A00               	xorlw	0	; case 0
 17088  0AE6  1903               	skipnz
 17089  0AE7  2AEC               	goto	l7147
 17090  0AE8  3A80               	xorlw	128	; case 128
 17091  0AE9  1903               	skipnz
 17092  0AEA  2AF1               	goto	l7149
 17093  0AEB  2AE2               	goto	l442
 17094  0AEC                     l7147:	
 17095                           
 17096                           ; Switch size 1, requested type "space"
 17097                           ; Number of cases is 1, Range of values is 0 to 0
 17098                           ; switch strategies available:
 17099                           ; Name         Instructions Cycles
 17100                           ; simple_byte            4     3 (average)
 17101                           ; direct_byte            8     6 (fixed)
 17102                           ; jumptable            260     6 (fixed)
 17103                           ;	Chosen strategy is simple_byte
 17104  0AEC  0853               	movf	dwt_xfer3000@mode,w
 17105  0AED  3A00               	xorlw	0	; case 0
 17106  0AEE  1903               	skipnz
 17107  0AEF  2ACA               	goto	l5039
 17108  0AF0  2AE2               	goto	l442
 17109  0AF1                     l7149:	
 17110                           
 17111                           ; Switch size 1, requested type "space"
 17112                           ; Number of cases is 4, Range of values is 0 to 3
 17113                           ; switch strategies available:
 17114                           ; Name         Instructions Cycles
 17115                           ; simple_byte           13     7 (average)
 17116                           ; direct_byte           14     6 (fixed)
 17117                           ; jumptable            260     6 (fixed)
 17118                           ;	Chosen strategy is simple_byte
 17119  0AF1  0853               	movf	dwt_xfer3000@mode,w
 17120  0AF2  3A00               	xorlw	0	; case 0
 17121  0AF3  1903               	skipnz
 17122  0AF4  2A69               	goto	l5031
 17123  0AF5  3A01               	xorlw	1	; case 1
 17124  0AF6  1903               	skipnz
 17125  0AF7  2A69               	goto	l5031
 17126  0AF8  3A03               	xorlw	3	; case 2
 17127  0AF9  1903               	skipnz
 17128  0AFA  2A69               	goto	l5031
 17129  0AFB  3A01               	xorlw	1	; case 3
 17130  0AFC  1903               	skipnz
 17131  0AFD  2A69               	goto	l5031
 17132  0AFE  2AE2               	goto	l442
 17133  0AFF  0008               	return
 17134  0B00                     __end_of_dwt_xfer3000:	
 17135                           
 17136                           	psect	text44
 17137  2705                     __ptext44:	
 17138 ;; *************** function _writetospiwithcrc *****************
 17139 ;; Defined at:
 17140 ;;		line 61 in file "deca_spi.c"
 17141 ;; Parameters:    Size  Location     Type
 17142 ;;  headerLength    2    0[BANK0 ] unsigned int 
 17143 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 17144 ;;		 -> dwt_xfer3000@header(2), 
 17145 ;;  bodyLength      4    3[BANK0 ] unsigned long 
 17146 ;;  bodyBuffer      2    7[BANK0 ] PTR const unsigned char 
 17147 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 17148 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 17149 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 17150 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 17151 ;;  crc8            1    9[BANK0 ] unsigned char 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;		None
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  2    0[BANK0 ] int 
 17156 ;; Registers used:
 17157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17163 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17166 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17167 ;;Total ram usage:       10 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:    2
 17170 ;; This function calls:
 17171 ;;		_SPI1_WriteBlock
 17172 ;; This function is called by:
 17173 ;;		_dwt_xfer3000
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           
 17178                           ;psect for function _writetospiwithcrc
 17179  2705                     _writetospiwithcrc:	
 17180                           
 17181                           ;incstack = 0
 17182                           ; Regs used in _writetospiwithcrc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17183                           ;deca_spi.c: 69: do { LATAbits.LATA7 = 0; } while(0);
 17184  2705  0140               	movlb	0	; select bank0
 17185  2706  1396               	bcf	22,7	;volatile
 17186                           
 17187                           ;deca_spi.c: 70: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 17188  2707  0822               	movf	writetospiwithcrc@headerBuffer,w
 17189  2708  00F1               	movwf	SPI1_WriteBlock@block
 17190  2709  3000               	movlw	0
 17191  270A  00F2               	movwf	SPI1_WriteBlock@block+1
 17192  270B  0821               	movf	writetospiwithcrc@headerLength+1,w
 17193  270C  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 17194  270D  0820               	movf	writetospiwithcrc@headerLength,w
 17195  270E  00F3               	movwf	SPI1_WriteBlock@blockSize
 17196  270F  31A5  256E  31A7   	fcall	_SPI1_WriteBlock
 17197                           
 17198                           ;deca_spi.c: 71: SPI1_WriteBlock((uint8_t *)bodyBuffer, bodyLength);
 17199  2712  0140               	movlb	0	; select bank0
 17200  2713  0828               	movf	writetospiwithcrc@bodyBuffer+1,w
 17201  2714  00F2               	movwf	SPI1_WriteBlock@block+1
 17202  2715  0827               	movf	writetospiwithcrc@bodyBuffer,w
 17203  2716  00F1               	movwf	SPI1_WriteBlock@block
 17204  2717  0824               	movf	writetospiwithcrc@bodyLength+1,w
 17205  2718  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 17206  2719  0823               	movf	writetospiwithcrc@bodyLength,w
 17207  271A  00F3               	movwf	SPI1_WriteBlock@blockSize
 17208  271B  31A5  256E  31A7   	fcall	_SPI1_WriteBlock
 17209                           
 17210                           ;deca_spi.c: 72: SPI1_WriteBlock((uint8_t *)&crc8, 1);
 17211  271E  3029               	movlw	low writetospiwithcrc@crc8
 17212  271F  00F1               	movwf	SPI1_WriteBlock@block
 17213  2720  3000               	movlw	high writetospiwithcrc@crc8
 17214  2721  00F2               	movwf	SPI1_WriteBlock@block+1
 17215  2722  3001               	movlw	1
 17216  2723  00F3               	movwf	SPI1_WriteBlock@blockSize
 17217  2724  3000               	movlw	0
 17218  2725  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 17219  2726  31A5  256E         	fcall	_SPI1_WriteBlock
 17220                           
 17221                           ;deca_spi.c: 73: do { LATAbits.LATA7 = 1; } while(0);
 17222  2728  0140               	movlb	0	; select bank0
 17223  2729  1796               	bsf	22,7	;volatile
 17224  272A  0008               	return
 17225  272B                     __end_of_writetospiwithcrc:	
 17226                           ;deca_spi.c: 74: return 0;
 17227                           ;	Return value of _writetospiwithcrc is never used
 17228                           
 17229                           
 17230                           	psect	text45
 17231  25D8                     __ptext45:	
 17232 ;; *************** function _writetospi *****************
 17233 ;; Defined at:
 17234 ;;		line 85 in file "deca_spi.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;  headerLength    2    0[BANK0 ] unsigned int 
 17237 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 17238 ;;		 -> dwt_xfer3000@header(2), 
 17239 ;;  bodyLength      4    3[BANK0 ] unsigned long 
 17240 ;;  bodyBuffer      2    7[BANK0 ] PTR const unsigned char 
 17241 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 17242 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 17243 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 17244 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 17245 ;; Auto vars:     Size  Location     Type
 17246 ;;		None
 17247 ;; Return value:  Size  Location     Type
 17248 ;;                  2    0[BANK0 ] int 
 17249 ;; Registers used:
 17250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17251 ;; Tracked objects:
 17252 ;;		On entry : 0/0
 17253 ;;		On exit  : 0/0
 17254 ;;		Unchanged: 0/0
 17255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17256 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17259 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17260 ;;Total ram usage:        9 bytes
 17261 ;; Hardware stack levels used:    1
 17262 ;; Hardware stack levels required when called:    2
 17263 ;; This function calls:
 17264 ;;		_SPI1_WriteBlock
 17265 ;; This function is called by:
 17266 ;;		_dwt_xfer3000
 17267 ;; This function uses a non-reentrant model
 17268 ;;
 17269                           
 17270                           
 17271                           ;psect for function _writetospi
 17272  25D8                     _writetospi:	
 17273                           
 17274                           ;incstack = 0
 17275                           ; Regs used in _writetospi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17276                           ;deca_spi.c: 90: do { LATAbits.LATA7 = 0; } while(0);
 17277  25D8  0140               	movlb	0	; select bank0
 17278  25D9  1396               	bcf	22,7	;volatile
 17279                           
 17280                           ;deca_spi.c: 91: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 17281  25DA  0822               	movf	writetospi@headerBuffer,w
 17282  25DB  00F1               	movwf	SPI1_WriteBlock@block
 17283  25DC  3000               	movlw	0
 17284  25DD  00F2               	movwf	SPI1_WriteBlock@block+1
 17285  25DE  0821               	movf	writetospi@headerLength+1,w
 17286  25DF  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 17287  25E0  0820               	movf	writetospi@headerLength,w
 17288  25E1  00F3               	movwf	SPI1_WriteBlock@blockSize
 17289  25E2  31A5  256E  31A5   	fcall	_SPI1_WriteBlock
 17290                           
 17291                           ;deca_spi.c: 92: SPI1_WriteBlock((uint8_t *)bodyBuffer, bodyLength);
 17292  25E5  0140               	movlb	0	; select bank0
 17293  25E6  0828               	movf	writetospi@bodyBuffer+1,w
 17294  25E7  00F2               	movwf	SPI1_WriteBlock@block+1
 17295  25E8  0827               	movf	writetospi@bodyBuffer,w
 17296  25E9  00F1               	movwf	SPI1_WriteBlock@block
 17297  25EA  0824               	movf	writetospi@bodyLength+1,w
 17298  25EB  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 17299  25EC  0823               	movf	writetospi@bodyLength,w
 17300  25ED  00F3               	movwf	SPI1_WriteBlock@blockSize
 17301  25EE  31A5  256E         	fcall	_SPI1_WriteBlock
 17302                           
 17303                           ;deca_spi.c: 93: do { LATAbits.LATA7 = 1; } while(0);
 17304  25F0  0140               	movlb	0	; select bank0
 17305  25F1  1796               	bsf	22,7	;volatile
 17306  25F2  0008               	return
 17307  25F3                     __end_of_writetospi:	
 17308                           ;deca_spi.c: 94: return 0;
 17309                           ;	Return value of _writetospi is never used
 17310                           
 17311                           
 17312                           	psect	text46
 17313  25BD                     __ptext46:	
 17314 ;; *************** function _readfromspi *****************
 17315 ;; Defined at:
 17316 ;;		line 104 in file "deca_spi.c"
 17317 ;; Parameters:    Size  Location     Type
 17318 ;;  headerLength    2    0[BANK0 ] unsigned int 
 17319 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 17320 ;;		 -> dwt_xfer3000@header(2), 
 17321 ;;  readlength      4    3[BANK0 ] unsigned long 
 17322 ;;  readBuffer      2    7[BANK0 ] PTR unsigned char 
 17323 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 17324 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 17325 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 17326 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;		None
 17329 ;; Return value:  Size  Location     Type
 17330 ;;                  2    0[BANK0 ] int 
 17331 ;; Registers used:
 17332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17333 ;; Tracked objects:
 17334 ;;		On entry : 0/0
 17335 ;;		On exit  : 0/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17338 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17341 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17342 ;;Total ram usage:        9 bytes
 17343 ;; Hardware stack levels used:    1
 17344 ;; Hardware stack levels required when called:    2
 17345 ;; This function calls:
 17346 ;;		_SPI1_ReadBlock
 17347 ;;		_SPI1_WriteBlock
 17348 ;; This function is called by:
 17349 ;;		_dwt_xfer3000
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353                           
 17354                           ;psect for function _readfromspi
 17355  25BD                     _readfromspi:	
 17356                           
 17357                           ;incstack = 0
 17358                           ; Regs used in _readfromspi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17359                           ;deca_spi.c: 109: do { LATAbits.LATA7 = 0; } while(0);
 17360  25BD  0140               	movlb	0	; select bank0
 17361  25BE  1396               	bcf	22,7	;volatile
 17362                           
 17363                           ;deca_spi.c: 111: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 17364  25BF  0822               	movf	readfromspi@headerBuffer,w
 17365  25C0  00F1               	movwf	SPI1_WriteBlock@block
 17366  25C1  3000               	movlw	0
 17367  25C2  00F2               	movwf	SPI1_WriteBlock@block+1
 17368  25C3  0821               	movf	readfromspi@headerLength+1,w
 17369  25C4  00F4               	movwf	SPI1_WriteBlock@blockSize+1
 17370  25C5  0820               	movf	readfromspi@headerLength,w
 17371  25C6  00F3               	movwf	SPI1_WriteBlock@blockSize
 17372  25C7  31A5  256E  31A5   	fcall	_SPI1_WriteBlock
 17373                           
 17374                           ;deca_spi.c: 113: SPI1_ReadBlock(readBuffer, readlength);
 17375  25CA  0140               	movlb	0	; select bank0
 17376  25CB  0828               	movf	readfromspi@readBuffer+1,w
 17377  25CC  00F2               	movwf	SPI1_ReadBlock@block+1
 17378  25CD  0827               	movf	readfromspi@readBuffer,w
 17379  25CE  00F1               	movwf	SPI1_ReadBlock@block
 17380  25CF  0824               	movf	readfromspi@readlength+1,w
 17381  25D0  00F4               	movwf	SPI1_ReadBlock@blockSize+1
 17382  25D1  0823               	movf	readfromspi@readlength,w
 17383  25D2  00F3               	movwf	SPI1_ReadBlock@blockSize
 17384  25D3  31A6  267F         	fcall	_SPI1_ReadBlock
 17385                           
 17386                           ;deca_spi.c: 115: do { LATAbits.LATA7 = 1; } while(0);
 17387  25D5  0140               	movlb	0	; select bank0
 17388  25D6  1796               	bsf	22,7	;volatile
 17389  25D7  0008               	return
 17390  25D8                     __end_of_readfromspi:	
 17391                           ;deca_spi.c: 117: return 0;
 17392                           ;	Return value of _readfromspi is never used
 17393                           
 17394                           
 17395                           	psect	text47
 17396  256E                     __ptext47:	
 17397 ;; *************** function _SPI1_WriteBlock *****************
 17398 ;; Defined at:
 17399 ;;		line 139 in file "mcc_generated_files/spi1.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  block           2    1[COMMON] PTR void 
 17402 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), writetospiwithcrc@crc8(1), 
 17403 ;;		 -> dwt_update_nonce_CCM@iv(16), NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), 
 17404 ;;		 -> dwt_modify16bitoffsetreg@buf(4), dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16b
      +itoffsetreg@buffer(2), 
 17405 ;;		 -> dwt_write32bitoffsetreg@buffer(4), dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32
      +bitoffsetreg@buffer(4), 
 17406 ;;		 -> dwt_xfer3000@header(2), 
 17407 ;;  blockSize       2    3[COMMON] unsigned int 
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;  data            2    5[COMMON] PTR unsigned char 
 17410 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), writetospiwithcrc@crc8(1), 
 17411 ;;		 -> dwt_update_nonce_CCM@iv(16), NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), 
 17412 ;;		 -> dwt_modify16bitoffsetreg@buf(4), dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16b
      +itoffsetreg@buffer(2), 
 17413 ;;		 -> dwt_write32bitoffsetreg@buffer(4), dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32
      +bitoffsetreg@buffer(4), 
 17414 ;;		 -> dwt_xfer3000@header(2), 
 17415 ;; Return value:  Size  Location     Type
 17416 ;;                  1    wreg      void 
 17417 ;; Registers used:
 17418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17419 ;; Tracked objects:
 17420 ;;		On entry : 0/0
 17421 ;;		On exit  : 0/0
 17422 ;;		Unchanged: 0/0
 17423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17428 ;;Total ram usage:        6 bytes
 17429 ;; Hardware stack levels used:    1
 17430 ;; Hardware stack levels required when called:    1
 17431 ;; This function calls:
 17432 ;;		_SPI1_ExchangeByte
 17433 ;; This function is called by:
 17434 ;;		_writetospiwithcrc
 17435 ;;		_writetospi
 17436 ;;		_readfromspi
 17437 ;; This function uses a non-reentrant model
 17438 ;;
 17439                           
 17440                           
 17441                           ;psect for function _SPI1_WriteBlock
 17442  256E                     _SPI1_WriteBlock:	
 17443                           
 17444                           ;spi1.c: 141: uint8_t *data = block;
 17445                           
 17446                           ;incstack = 0
 17447                           ; Regs used in _SPI1_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17448  256E  0872               	movf	SPI1_WriteBlock@block+1,w
 17449  256F  00F6               	movwf	SPI1_WriteBlock@data+1
 17450  2570  0871               	movf	SPI1_WriteBlock@block,w
 17451  2571  00F5               	movwf	SPI1_WriteBlock@data
 17452  2572                     l4923:	
 17453                           ;spi1.c: 142: while(blockSize--)
 17454                           
 17455  2572  3001               	movlw	1
 17456  2573  02F3               	subwf	SPI1_WriteBlock@blockSize,f
 17457  2574  3000               	movlw	0
 17458  2575  3BF4               	subwfb	SPI1_WriteBlock@blockSize+1,f
 17459  2576  0A73               	incf	SPI1_WriteBlock@blockSize,w
 17460  2577  1903               	btfsc	3,2
 17461  2578  0A74               	incf	SPI1_WriteBlock@blockSize+1,w
 17462  2579  1903               	btfsc	3,2
 17463  257A  0008               	return
 17464                           
 17465                           ;spi1.c: 143: {
 17466                           ;spi1.c: 144: SPI1_ExchangeByte(*data++);
 17467  257B  0875               	movf	SPI1_WriteBlock@data,w
 17468  257C  0086               	movwf	6
 17469  257D  0876               	movf	SPI1_WriteBlock@data+1,w
 17470  257E  0087               	movwf	7
 17471  257F  0801               	movf	1,w
 17472  2580  31A4  24D1  31A5   	fcall	_SPI1_ExchangeByte
 17473  2583  3001               	movlw	1
 17474  2584  07F5               	addwf	SPI1_WriteBlock@data,f
 17475  2585  3000               	movlw	0
 17476  2586  3DF6               	addwfc	SPI1_WriteBlock@data+1,f
 17477  2587  2D72               	goto	l4923
 17478  2588                     __end_of_SPI1_WriteBlock:	
 17479                           
 17480                           	psect	text48
 17481  267F                     __ptext48:	
 17482 ;; *************** function _SPI1_ReadBlock *****************
 17483 ;; Defined at:
 17484 ;;		line 148 in file "mcc_generated_files/spi1.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;  block           2    1[COMMON] PTR void 
 17487 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 17488 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 17489 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 17490 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 17491 ;;  blockSize       2    3[COMMON] unsigned int 
 17492 ;; Auto vars:     Size  Location     Type
 17493 ;;  data            2    6[COMMON] PTR unsigned char 
 17494 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 17495 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 17496 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 17497 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 17498 ;; Return value:  Size  Location     Type
 17499 ;;                  1    wreg      void 
 17500 ;; Registers used:
 17501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17502 ;; Tracked objects:
 17503 ;;		On entry : 0/0
 17504 ;;		On exit  : 0/0
 17505 ;;		Unchanged: 0/0
 17506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17511 ;;Total ram usage:        7 bytes
 17512 ;; Hardware stack levels used:    1
 17513 ;; Hardware stack levels required when called:    1
 17514 ;; This function calls:
 17515 ;;		_SPI1_ExchangeByte
 17516 ;; This function is called by:
 17517 ;;		_readfromspi
 17518 ;; This function uses a non-reentrant model
 17519 ;;
 17520                           
 17521                           
 17522                           ;psect for function _SPI1_ReadBlock
 17523  267F                     _SPI1_ReadBlock:	
 17524                           
 17525                           ;spi1.c: 150: uint8_t *data = block;
 17526                           
 17527                           ;incstack = 0
 17528                           ; Regs used in _SPI1_ReadBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17529  267F  0872               	movf	SPI1_ReadBlock@block+1,w
 17530  2680  00F7               	movwf	SPI1_ReadBlock@data+1
 17531  2681  0871               	movf	SPI1_ReadBlock@block,w
 17532  2682  00F6               	movwf	SPI1_ReadBlock@data
 17533  2683                     l4931:	
 17534                           ;spi1.c: 151: while(blockSize--)
 17535                           
 17536  2683  3001               	movlw	1
 17537  2684  02F3               	subwf	SPI1_ReadBlock@blockSize,f
 17538  2685  3000               	movlw	0
 17539  2686  3BF4               	subwfb	SPI1_ReadBlock@blockSize+1,f
 17540  2687  0A73               	incf	SPI1_ReadBlock@blockSize,w
 17541  2688  1903               	btfsc	3,2
 17542  2689  0A74               	incf	SPI1_ReadBlock@blockSize+1,w
 17543  268A  1903               	btfsc	3,2
 17544  268B  0008               	return
 17545                           
 17546                           ;spi1.c: 152: {
 17547                           ;spi1.c: 153: *data++ = SPI1_ExchangeByte(0);
 17548  268C  3000               	movlw	0
 17549  268D  31A4  24D1  31A6   	fcall	_SPI1_ExchangeByte
 17550  2690  00F5               	movwf	??_SPI1_ReadBlock
 17551  2691  0876               	movf	SPI1_ReadBlock@data,w
 17552  2692  0086               	movwf	6
 17553  2693  0877               	movf	SPI1_ReadBlock@data+1,w
 17554  2694  0087               	movwf	7
 17555  2695  0875               	movf	??_SPI1_ReadBlock,w
 17556  2696  0081               	movwf	1
 17557  2697  3001               	movlw	1
 17558  2698  07F6               	addwf	SPI1_ReadBlock@data,f
 17559  2699  3000               	movlw	0
 17560  269A  3DF7               	addwfc	SPI1_ReadBlock@data+1,f
 17561  269B  2E83               	goto	l4931
 17562  269C                     __end_of_SPI1_ReadBlock:	
 17563                           
 17564                           	psect	text49
 17565  24D1                     __ptext49:	
 17566 ;; *************** function _SPI1_ExchangeByte *****************
 17567 ;; Defined at:
 17568 ;;		line 118 in file "mcc_generated_files/spi1.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;  data            1    wreg     unsigned char 
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;  data            1    0[COMMON] unsigned char 
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  1    wreg      unsigned char 
 17575 ;; Registers used:
 17576 ;;		wreg
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17586 ;;Total ram usage:        1 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; This function calls:
 17589 ;;		Nothing
 17590 ;; This function is called by:
 17591 ;;		_SPI1_WriteBlock
 17592 ;;		_SPI1_ReadBlock
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           
 17597                           ;psect for function _SPI1_ExchangeByte
 17598  24D1                     _SPI1_ExchangeByte:	
 17599                           
 17600                           ;incstack = 0
 17601                           ; Regs used in _SPI1_ExchangeByte: [wreg]
 17602                           ;SPI1_ExchangeByte@data stored from wreg
 17603  24D1  00F0               	movwf	SPI1_ExchangeByte@data
 17604                           
 17605                           ;spi1.c: 120: SSP1BUF = data;
 17606  24D2  0870               	movf	SPI1_ExchangeByte@data,w
 17607  24D3  0143               	movlb	3	; select bank3
 17608  24D4  008C               	movwf	12	;volatile
 17609  24D5                     l266:	
 17610                           ;spi1.c: 121: while(!PIR3bits.SSP1IF);
 17611                           
 17612  24D5  014E               	movlb	14	; select bank14
 17613  24D6  1C0F               	btfss	15,0	;volatile
 17614  24D7  2CD5               	goto	l266
 17615                           
 17616                           ;spi1.c: 122: PIR3bits.SSP1IF = 0;
 17617  24D8  100F               	bcf	15,0	;volatile
 17618                           
 17619                           ;spi1.c: 123: return SSP1BUF;
 17620  24D9  0143               	movlb	3	; select bank3
 17621  24DA  080C               	movf	12,w	;volatile
 17622  24DB  0008               	return
 17623  24DC                     __end_of_SPI1_ExchangeByte:	
 17624                           
 17625                           	psect	text50
 17626  277C                     __ptext50:	
 17627 ;; *************** function _dwt_generatecrc8 *****************
 17628 ;; Defined at:
 17629 ;;		line 642 in file "deca_device.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;  byteArray       2    0[COMMON] PTR const unsigned char 
 17632 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 17633 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 17634 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 17635 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), dwt_xfer300
      +0@header(2), 
 17636 ;;  len             2    2[COMMON] int 
 17637 ;;  crcRemainder    1    4[COMMON] unsigned char 
 17638 ;; Auto vars:     Size  Location     Type
 17639 ;;  byte            2    7[COMMON] int 
 17640 ;;  data            1    6[COMMON] unsigned char 
 17641 ;; Return value:  Size  Location     Type
 17642 ;;                  1    wreg      unsigned char 
 17643 ;; Registers used:
 17644 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17645 ;; Tracked objects:
 17646 ;;		On entry : 0/0
 17647 ;;		On exit  : 0/0
 17648 ;;		Unchanged: 0/0
 17649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17650 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17653 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17654 ;;Total ram usage:        9 bytes
 17655 ;; Hardware stack levels used:    1
 17656 ;; This function calls:
 17657 ;;		Nothing
 17658 ;; This function is called by:
 17659 ;;		_dwt_xfer3000
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663                           
 17664                           ;psect for function _dwt_generatecrc8
 17665  277C                     _dwt_generatecrc8:	
 17666                           
 17667                           ;deca_device.c: 644: uint8_t data;
 17668                           ;deca_device.c: 645: int byte;
 17669                           ;deca_device.c: 650: for (byte = 0; byte < len; ++byte)
 17670                           
 17671                           ;incstack = 0
 17672                           ; Regs used in _dwt_generatecrc8: [wreg+fsr1l+fsr1h+status,2+status,0]
 17673  277C  01F7               	clrf	dwt_generatecrc8@byte
 17674  277D  01F8               	clrf	dwt_generatecrc8@byte+1
 17675  277E                     l4951:	
 17676  277E  0878               	movf	dwt_generatecrc8@byte+1,w
 17677  277F  3A80               	xorlw	128
 17678  2780  00F5               	movwf	??_dwt_generatecrc8
 17679  2781  0873               	movf	dwt_generatecrc8@len+1,w
 17680  2782  3A80               	xorlw	128
 17681  2783  0275               	subwf	??_dwt_generatecrc8,w
 17682  2784  1D03               	skipz
 17683  2785  2F88               	goto	u4345
 17684  2786  0872               	movf	dwt_generatecrc8@len,w
 17685  2787  0277               	subwf	dwt_generatecrc8@byte,w
 17686  2788                     u4345:	
 17687  2788  1803               	btfsc	3,0
 17688  2789  2FA4               	goto	l4953
 17689                           
 17690                           ;deca_device.c: 651: {
 17691                           ;deca_device.c: 652: data = byteArray[byte] ^ crcRemainderInit;
 17692  278A  0877               	movf	dwt_generatecrc8@byte,w
 17693  278B  0770               	addwf	dwt_generatecrc8@byteArray,w
 17694  278C  0086               	movwf	6
 17695  278D  0878               	movf	dwt_generatecrc8@byte+1,w
 17696  278E  3D71               	addwfc	dwt_generatecrc8@byteArray+1,w
 17697  278F  0087               	movwf	7
 17698  2790  0801               	movf	1,w
 17699  2791  0674               	xorwf	dwt_generatecrc8@crcRemainderInit,w
 17700  2792  00F5               	movwf	??_dwt_generatecrc8
 17701  2793  0875               	movf	??_dwt_generatecrc8,w
 17702  2794  00F6               	movwf	dwt_generatecrc8@data
 17703                           
 17704                           ;deca_device.c: 653: crcRemainderInit = crcTable[data];
 17705  2795  0876               	movf	dwt_generatecrc8@data,w
 17706  2796  3EF0               	addlw	240
 17707  2797  0086               	movwf	6
 17708  2798  0187               	clrf	7
 17709  2799  302E               	movlw	46
 17710  279A  3D87               	addwfc	7,f
 17711  279B  0801               	movf	1,w
 17712  279C  00F5               	movwf	??_dwt_generatecrc8
 17713  279D  0875               	movf	??_dwt_generatecrc8,w
 17714  279E  00F4               	movwf	dwt_generatecrc8@crcRemainderInit
 17715  279F  3001               	movlw	1
 17716  27A0  07F7               	addwf	dwt_generatecrc8@byte,f
 17717  27A1  3000               	movlw	0
 17718  27A2  3DF8               	addwfc	dwt_generatecrc8@byte+1,f
 17719  27A3  2F7E               	goto	l4951
 17720  27A4                     l4953:	
 17721                           
 17722                           ;deca_device.c: 654: }
 17723                           ;deca_device.c: 659: return(crcRemainderInit);
 17724  27A4  0874               	movf	dwt_generatecrc8@crcRemainderInit,w
 17725  27A5  0008               	return
 17726  27A6                     __end_of_dwt_generatecrc8:	
 17727                           
 17728                           	psect	text51
 17729  2558                     __ptext51:	
 17730 ;; *************** function __fassert *****************
 17731 ;; Defined at:
 17732 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\assert.c"
 17733 ;; Parameters:    Size  Location     Type
 17734 ;;  line            2   33[BANK0 ] int 
 17735 ;;  file            2   35[BANK0 ] PTR const unsigned char 
 17736 ;;		 -> STR_17(14), STR_14(14), STR_12(14), STR_10(14), 
 17737 ;;		 -> STR_8(14), STR_6(14), 
 17738 ;;  exp             2   37[BANK0 ] PTR const unsigned char 
 17739 ;;		 -> STR_18(2), STR_15(26), STR_13(150), STR_11(16), 
 17740 ;;		 -> STR_9(19), STR_7(17), 
 17741 ;; Auto vars:     Size  Location     Type
 17742 ;;		None
 17743 ;; Return value:  Size  Location     Type
 17744 ;;                  1    wreg      void 
 17745 ;; Registers used:
 17746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17747 ;; Tracked objects:
 17748 ;;		On entry : 0/0
 17749 ;;		On exit  : 0/0
 17750 ;;		Unchanged: 0/0
 17751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17752 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17755 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17756 ;;Total ram usage:        6 bytes
 17757 ;; Hardware stack levels used:    1
 17758 ;; Hardware stack levels required when called:    4
 17759 ;; This function calls:
 17760 ;;		_printf
 17761 ;; This function is called by:
 17762 ;;		_dwt_xfer3000
 17763 ;;		_dwt_readaccdata
 17764 ;; This function uses a non-reentrant model
 17765 ;;
 17766                           
 17767                           
 17768                           ;psect for function __fassert
 17769  2558                     __fassert:	
 17770                           
 17771                           ;incstack = 0
 17772                           ; Regs used in __fassert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17773  2558  3000               	movlw	low (STR_26| (0+32768))
 17774  2559  0140               	movlb	0	; select bank0
 17775  255A  00B4               	movwf	printf@f
 17776  255B  30A8               	movlw	high (STR_26| (0+32768))
 17777  255C  00B5               	movwf	printf@f+1
 17778  255D  0844               	movf	__fassert@file+1,w
 17779  255E  00B7               	movwf	(low ((?_printf| 0+2))+1)
 17780  255F  0843               	movf	__fassert@file,w
 17781  2560  00B6               	movwf	low ((?_printf| 0+2))
 17782  2561  0842               	movf	__fassert@line+1,w
 17783  2562  00B9               	movwf	?_printf+5
 17784  2563  0841               	movf	__fassert@line,w
 17785  2564  00B8               	movwf	?_printf+4
 17786  2565  0846               	movf	__fassert@exp+1,w
 17787  2566  00BB               	movwf	(low ((?_printf| 0+6))+1)
 17788  2567  0845               	movf	__fassert@exp,w
 17789  2568  00BA               	movwf	low ((?_printf| 0+6))
 17790  2569  31A5  2542         	fcall	_printf
 17791  256B  31A5  2D58         	ljmp	$	;# 
 17792  256D  0008               	return
 17793  256E                     __end_of__fassert:	
 17794                           
 17795                           	psect	text52
 17796  2542                     __ptext52:	
 17797 ;; *************** function _printf *****************
 17798 ;; Defined at:
 17799 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 17800 ;; Parameters:    Size  Location     Type
 17801 ;;  f               2   20[BANK0 ] PTR const unsigned char 
 17802 ;;		 -> STR_26(36), 
 17803 ;; Auto vars:     Size  Location     Type
 17804 ;;  pb              3   30[BANK0 ] struct __prbuf
 17805 ;;  ap              1   29[BANK0 ] PTR void [1]
 17806 ;;		 -> ?_sprintf(2), ?_printf(2), 
 17807 ;; Return value:  Size  Location     Type
 17808 ;;                  2   20[BANK0 ] int 
 17809 ;; Registers used:
 17810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17811 ;; Tracked objects:
 17812 ;;		On entry : 0/0
 17813 ;;		On exit  : 0/0
 17814 ;;		Unchanged: 0/0
 17815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17816 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17817 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17819 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17820 ;;Total ram usage:       13 bytes
 17821 ;; Hardware stack levels used:    1
 17822 ;; Hardware stack levels required when called:    3
 17823 ;; This function calls:
 17824 ;;		__doprnt
 17825 ;; This function is called by:
 17826 ;;		__fassert
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           
 17831                           ;psect for function _printf
 17832  2542                     _printf:	
 17833                           
 17834                           ;incstack = 0
 17835                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17836  2542  0140               	movlb	0	; select bank0
 17837  2543  01BE               	clrf	printf@pb
 17838  2544  30A9               	movlw	low _putch
 17839  2545  00BF               	movwf	low ((printf@pb| 0+1))
 17840  2546  3024               	movlw	high _putch
 17841  2547  00C0               	movwf	(low ((printf@pb| 0+1))+1)
 17842  2548  3036               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17843  2549  00BC               	movwf	??_printf
 17844  254A  083C               	movf	??_printf,w
 17845  254B  00BD               	movwf	printf@ap
 17846                           
 17847                           ;	Return value of _printf is never used
 17848  254C  0835               	movf	printf@f+1,w
 17849  254D  00A1               	movwf	__doprnt@f+1
 17850  254E  0834               	movf	printf@f,w
 17851  254F  00A0               	movwf	__doprnt@f
 17852  2550  303D               	movlw	(low (printf@ap| 0))& (0+255)
 17853  2551  00BC               	movwf	??_printf
 17854  2552  083C               	movf	??_printf,w
 17855  2553  00A2               	movwf	__doprnt@ap
 17856  2554  303E               	movlw	(low (printf@pb| 0))& (0+255)
 17857  2555  318C  24BE         	fcall	__doprnt
 17858  2557  0008               	return
 17859  2558                     __end_of_printf:	
 17860                           
 17861                           	psect	text53
 17862  0CBE                     __ptext53:	
 17863 ;; *************** function __doprnt *****************
 17864 ;; Defined at:
 17865 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17866 ;; Parameters:    Size  Location     Type
 17867 ;;  pb              1    wreg     PTR struct __prbuf
 17868 ;;		 -> sprintf@pb(3), printf@pb(3), 
 17869 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 17870 ;;		 -> STR_26(36), STR_5(31), STR_4(14), STR_3(10), 
 17871 ;;		 -> STR_2(10), 
 17872 ;;  ap              1    2[BANK0 ] PTR PTR void 
 17873 ;;		 -> sprintf@ap(1), printf@ap(1), 
 17874 ;; Auto vars:     Size  Location     Type
 17875 ;;  pb              1   19[BANK0 ] PTR struct __prbuf
 17876 ;;		 -> sprintf@pb(3), printf@pb(3), 
 17877 ;;  idx             1    7[BANK0 ] unsigned char 
 17878 ;;  tmpval          4    0        struct .
 17879 ;;  width           2   16[BANK0 ] int 
 17880 ;;  val             2   13[BANK0 ] unsigned int 
 17881 ;;  cp              2   11[BANK0 ] PTR const unsigned char 
 17882 ;;		 -> ?_sprintf(2), ?_printf(2), STR_24(7), NULL(0), 
 17883 ;;		 -> STR_18(2), STR_17(14), STR_15(26), STR_14(14), 
 17884 ;;		 -> STR_13(150), STR_12(14), STR_11(16), STR_10(14), 
 17885 ;;		 -> STR_9(19), STR_8(14), STR_7(17), STR_6(14), 
 17886 ;;		 -> print_uint64_t@print_data(50), print_uint32_t@print_data(20), print_uint16_t@print_data(20), print_uint8_t@print
      +_data(20), 
 17887 ;;  len             2    9[BANK0 ] unsigned int 
 17888 ;;  c               1   18[BANK0 ] char 
 17889 ;;  flag            1   15[BANK0 ] unsigned char 
 17890 ;;  prec            1    8[BANK0 ] char 
 17891 ;; Return value:  Size  Location     Type
 17892 ;;                  2    0[BANK0 ] int 
 17893 ;; Registers used:
 17894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17895 ;; Tracked objects:
 17896 ;;		On entry : 0/0
 17897 ;;		On exit  : 0/0
 17898 ;;		Unchanged: 0/0
 17899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17900 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17901 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17902 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17903 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17904 ;;Total ram usage:       20 bytes
 17905 ;; Hardware stack levels used:    1
 17906 ;; Hardware stack levels required when called:    2
 17907 ;; This function calls:
 17908 ;;		Absolute function
 17909 ;;		___lwdiv
 17910 ;;		___lwmod
 17911 ;;		___wmul
 17912 ;;		_isdigit
 17913 ;;		_putch
 17914 ;; This function is called by:
 17915 ;;		_printf
 17916 ;; This function uses a non-reentrant model
 17917 ;;
 17918                           
 17919                           
 17920                           ;psect for function __doprnt
 17921  0CBE                     __doprnt:	
 17922                           
 17923                           ;incstack = 0
 17924                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17925                           ;__doprnt@pb stored from wreg
 17926  0CBE  0140               	movlb	0	; select bank0
 17927  0CBF  00B3               	movwf	__doprnt@pb
 17928  0CC0                     l4911:	
 17929                           ;doprnt.c: 499: signed char c;
 17930                           ;doprnt.c: 501: int width;
 17931                           ;doprnt.c: 506: signed char prec;
 17932                           ;doprnt.c: 508: unsigned char flag;
 17933                           ;doprnt.c: 523: union {
 17934                           ;doprnt.c: 524: unsigned long vd;
 17935                           ;doprnt.c: 525: double integ;
 17936                           ;doprnt.c: 526: } tmpval;
 17937                           ;doprnt.c: 528: unsigned int val;
 17938                           ;doprnt.c: 529: unsigned len;
 17939                           ;doprnt.c: 530: const char * cp;
 17940                           ;doprnt.c: 536: while(c = *f++) {
 17941                           
 17942  0CC0  0140               	movlb	0	; select bank0
 17943  0CC1  0821               	movf	__doprnt@f+1,w
 17944  0CC2  00A4               	movwf	??__doprnt+1
 17945  0CC3  0820               	movf	__doprnt@f,w
 17946  0CC4  00A3               	movwf	??__doprnt
 17947  0CC5  0AA0               	incf	__doprnt@f,f
 17948  0CC6  1903               	skipnz
 17949  0CC7  0AA1               	incf	__doprnt@f+1,f
 17950  0CC8  0823               	movf	??__doprnt,w
 17951  0CC9  0084               	movwf	4
 17952  0CCA  0824               	movf	??__doprnt+1,w
 17953  0CCB  0085               	movwf	5
 17954  0CCC  0800               	movf	0,w	;code access
 17955  0CCD  00A5               	movwf	??__doprnt+2
 17956  0CCE  0825               	movf	??__doprnt+2,w
 17957  0CCF  00B2               	movwf	__doprnt@c
 17958  0CD0  0832               	movf	__doprnt@c,w
 17959  0CD1  1903               	btfsc	3,2
 17960  0CD2  2FFC               	goto	l4913
 17961                           
 17962                           ;doprnt.c: 538: if(c != '%')
 17963  0CD3  3025               	movlw	37
 17964  0CD4  0632               	xorwf	__doprnt@c,w
 17965  0CD5  1903               	btfsc	3,2
 17966  0CD6  2CFE               	goto	l4733
 17967                           
 17968                           ;doprnt.c: 540: {
 17969                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 17970  0CD7  0A33               	incf	__doprnt@pb,w
 17971  0CD8  0086               	movwf	6
 17972  0CD9  0187               	clrf	7
 17973  0CDA  0016               	moviw fsr1++
 17974  0CDB  0401               	iorwf	1,w
 17975  0CDC  1903               	btfsc	3,2
 17976  0CDD  2CEB               	goto	l4729
 17977  0CDE  0832               	movf	__doprnt@c,w
 17978  0CDF  00A3               	movwf	??__doprnt
 17979  0CE0  0823               	movf	??__doprnt,w
 17980  0CE1  00F1               	movwf	putch@txData
 17981  0CE2  0A33               	incf	__doprnt@pb,w
 17982  0CE3  0086               	movwf	6
 17983  0CE4  0187               	clrf	7
 17984  0CE5  3F41               	moviw [1]fsr1
 17985  0CE6  008A               	movwf	10
 17986  0CE7  3F40               	moviw [0]fsr1
 17987  0CE8  000A               	callw
 17988  0CE9  318C               	pagesel	$
 17989  0CEA  2CC0               	goto	l4911
 17990  0CEB                     l4729:	
 17991  0CEB  0140               	movlb	0	; select bank0
 17992  0CEC  0832               	movf	__doprnt@c,w
 17993  0CED  00A3               	movwf	??__doprnt
 17994  0CEE  0833               	movf	__doprnt@pb,w
 17995  0CEF  0086               	movwf	6
 17996  0CF0  0187               	clrf	7
 17997  0CF1  0801               	movf	1,w
 17998  0CF2  0086               	movwf	6
 17999  0CF3  0187               	clrf	7
 18000  0CF4  0823               	movf	??__doprnt,w
 18001  0CF5  0081               	movwf	1
 18002  0CF6  3001               	movlw	1
 18003  0CF7  00A3               	movwf	??__doprnt
 18004  0CF8  0833               	movf	__doprnt@pb,w
 18005  0CF9  0086               	movwf	6
 18006  0CFA  0187               	clrf	7
 18007  0CFB  0823               	movf	??__doprnt,w
 18008  0CFC  0781               	addwf	1,f
 18009                           
 18010                           ;doprnt.c: 542: continue;
 18011  0CFD  2CC0               	goto	l4911
 18012  0CFE                     l4733:	
 18013                           
 18014                           ;doprnt.c: 543: }
 18015                           ;doprnt.c: 546: width = 0;
 18016  0CFE  01B0               	clrf	__doprnt@width
 18017  0CFF  01B1               	clrf	__doprnt@width+1
 18018                           
 18019                           ;doprnt.c: 548: flag = 0;
 18020  0D00  01AF               	clrf	__doprnt@flag
 18021                           
 18022                           ;doprnt.c: 551: switch(*f) {
 18023                           
 18024                           ;doprnt.c: 550: for(;;) {
 18025  0D01  2D07               	goto	l4739
 18026  0D02                     l1412:	
 18027                           ;doprnt.c: 579: case '0':
 18028                           
 18029                           
 18030                           ;doprnt.c: 580: flag |= 0x04;
 18031  0D02  152F               	bsf	__doprnt@flag,2
 18032                           
 18033                           ;doprnt.c: 581: f++;
 18034  0D03  3001               	movlw	1
 18035  0D04  07A0               	addwf	__doprnt@f,f
 18036  0D05  3000               	movlw	0
 18037  0D06  3DA1               	addwfc	__doprnt@f+1,f
 18038  0D07                     l4739:	
 18039                           ;doprnt.c: 584: }
 18040                           
 18041                           ;doprnt.c: 582: continue;
 18042                           
 18043  0D07  0820               	movf	__doprnt@f,w
 18044  0D08  0084               	movwf	4
 18045  0D09  0821               	movf	__doprnt@f+1,w
 18046  0D0A  0085               	movwf	5
 18047  0D0B  0800               	movf	0,w	;code access
 18048                           
 18049                           ; Switch size 1, requested type "space"
 18050                           ; Number of cases is 1, Range of values is 48 to 48
 18051                           ; switch strategies available:
 18052                           ; Name         Instructions Cycles
 18053                           ; simple_byte            4     3 (average)
 18054                           ; direct_byte           11     9 (fixed)
 18055                           ; jumptable            263     9 (fixed)
 18056                           ;	Chosen strategy is simple_byte
 18057  0D0C  3A30               	xorlw	48	; case 48
 18058  0D0D  1903               	skipnz
 18059  0D0E  2D02               	goto	l1412
 18060  0D0F  2D10               	goto	l4741
 18061  0D10                     l4741:	
 18062                           ;doprnt.c: 586: }
 18063                           
 18064                           ;doprnt.c: 585: break;
 18065                           
 18066                           
 18067                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 18068  0D10  0820               	movf	__doprnt@f,w
 18069  0D11  0084               	movwf	4
 18070  0D12  0821               	movf	__doprnt@f+1,w
 18071  0D13  0085               	movwf	5
 18072  0D14  0800               	movf	0,w	;code access
 18073  0D15  31A4  24F4  318C   	fcall	_isdigit
 18074  0D18  1C03               	btfss	3,0
 18075  0D19  2DF4               	goto	l4797
 18076                           
 18077                           ;doprnt.c: 598: width = 0;
 18078  0D1A  0140               	movlb	0	; select bank0
 18079  0D1B  01B0               	clrf	__doprnt@width
 18080  0D1C  01B1               	clrf	__doprnt@width+1
 18081  0D1D                     l4745:	
 18082                           ;doprnt.c: 599: do {
 18083                           
 18084                           
 18085                           ;doprnt.c: 600: width *= 10;
 18086  0D1D  300A               	movlw	10
 18087  0D1E  00F0               	movwf	___wmul@multiplier
 18088  0D1F  3000               	movlw	0
 18089  0D20  00F1               	movwf	___wmul@multiplier+1
 18090  0D21  0140               	movlb	0	; select bank0
 18091  0D22  0831               	movf	__doprnt@width+1,w
 18092  0D23  00F3               	movwf	___wmul@multiplicand+1
 18093  0D24  0830               	movf	__doprnt@width,w
 18094  0D25  00F2               	movwf	___wmul@multiplicand
 18095  0D26  31A5  25A2  318C   	fcall	___wmul
 18096  0D29  0871               	movf	?___wmul+1,w
 18097  0D2A  0140               	movlb	0	; select bank0
 18098  0D2B  00B1               	movwf	__doprnt@width+1
 18099  0D2C  0870               	movf	?___wmul,w
 18100  0D2D  00B0               	movwf	__doprnt@width
 18101                           
 18102                           ;doprnt.c: 601: width += *f++ - '0';
 18103  0D2E  0820               	movf	__doprnt@f,w
 18104  0D2F  0084               	movwf	4
 18105  0D30  0821               	movf	__doprnt@f+1,w
 18106  0D31  0085               	movwf	5
 18107  0D32  0800               	movf	0,w	;code access
 18108  0D33  3ED0               	addlw	208
 18109  0D34  00A3               	movwf	??__doprnt
 18110  0D35  30FF               	movlw	255
 18111  0D36  1803               	skipnc
 18112  0D37  3000               	movlw	0
 18113  0D38  00A4               	movwf	??__doprnt+1
 18114  0D39  0823               	movf	??__doprnt,w
 18115  0D3A  07B0               	addwf	__doprnt@width,f
 18116  0D3B  0824               	movf	??__doprnt+1,w
 18117  0D3C  3DB1               	addwfc	__doprnt@width+1,f
 18118  0D3D  3001               	movlw	1
 18119  0D3E  07A0               	addwf	__doprnt@f,f
 18120  0D3F  3000               	movlw	0
 18121  0D40  3DA1               	addwfc	__doprnt@f+1,f
 18122                           
 18123                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 18124  0D41  0820               	movf	__doprnt@f,w
 18125  0D42  0084               	movwf	4
 18126  0D43  0821               	movf	__doprnt@f+1,w
 18127  0D44  0085               	movwf	5
 18128  0D45  0800               	movf	0,w	;code access
 18129  0D46  31A4  24F4  318C   	fcall	_isdigit
 18130  0D49  1C03               	btfss	3,0
 18131  0D4A  2DF4               	goto	l4797
 18132  0D4B  2D1D               	goto	l4745
 18133  0D4C                     l1426:	
 18134                           ;doprnt.c: 712: case 'X':
 18135                           
 18136                           ;doprnt.c: 698: case 'i':
 18137                           ;doprnt.c: 699: break;
 18138                           
 18139                           ;doprnt.c: 697: case 'd':
 18140                           
 18141                           ;doprnt.c: 638: goto alldone;
 18142                           
 18143                           ;doprnt.c: 637: case 0:
 18144                           
 18145                           ;doprnt.c: 608: }
 18146                           ;doprnt.c: 635: switch(c = *f++) {
 18147                           
 18148                           
 18149                           ;doprnt.c: 718: case 'x':
 18150                           ;doprnt.c: 721: flag |= 0x80;
 18151  0D4C  0140               	movlb	0	; select bank0
 18152  0D4D  17AF               	bsf	__doprnt@flag,7
 18153                           
 18154                           ;doprnt.c: 723: break;
 18155  0D4E  2E15               	goto	l1424
 18156  0D4F                     l4753:	
 18157                           ;doprnt.c: 728: case 's':
 18158                           
 18159                           
 18160                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 18161  0D4F  0822               	movf	__doprnt@ap,w
 18162  0D50  0086               	movwf	6
 18163  0D51  0187               	clrf	7
 18164  0D52  0801               	movf	1,w
 18165  0D53  0084               	movwf	4
 18166  0D54  0185               	clrf	5
 18167  0D55  3002               	movlw	2
 18168  0D56  0781               	addwf	1,f
 18169  0D57  3F00               	moviw [0]fsr0
 18170  0D58  00AB               	movwf	__doprnt@cp
 18171  0D59  3F01               	moviw [1]fsr0
 18172  0D5A  00AC               	movwf	__doprnt@cp+1
 18173                           
 18174                           ;doprnt.c: 740: if(!cp)
 18175  0D5B  082B               	movf	__doprnt@cp,w
 18176  0D5C  042C               	iorwf	__doprnt@cp+1,w
 18177  0D5D  1D03               	btfss	3,2
 18178  0D5E  2D63               	goto	l4759
 18179                           
 18180                           ;doprnt.c: 741: cp = "(null)";
 18181  0D5F  3055               	movlw	low (STR_24| (0+32768))
 18182  0D60  00AB               	movwf	__doprnt@cp
 18183  0D61  30A9               	movlw	high (STR_24| (0+32768))
 18184  0D62  00AC               	movwf	__doprnt@cp+1
 18185  0D63                     l4759:	
 18186                           
 18187                           ;doprnt.c: 745: len = 0;
 18188  0D63  01A9               	clrf	__doprnt@len
 18189  0D64  01AA               	clrf	__doprnt@len+1
 18190  0D65                     l4763:	
 18191                           ;doprnt.c: 746: while(cp[len])
 18192                           
 18193  0D65  082B               	movf	__doprnt@cp,w
 18194  0D66  0729               	addwf	__doprnt@len,w
 18195  0D67  0084               	movwf	4
 18196  0D68  082C               	movf	__doprnt@cp+1,w
 18197  0D69  3D2A               	addwfc	__doprnt@len+1,w
 18198  0D6A  0085               	movwf	5
 18199  0D6B  0012               	moviw fsr0++
 18200  0D6C  1903               	btfsc	3,2
 18201  0D6D  2D73               	goto	l4765
 18202                           
 18203                           ;doprnt.c: 747: len++;
 18204  0D6E  3001               	movlw	1
 18205  0D6F  07A9               	addwf	__doprnt@len,f
 18206  0D70  3000               	movlw	0
 18207  0D71  3DAA               	addwfc	__doprnt@len+1,f
 18208  0D72  2D65               	goto	l4763
 18209  0D73                     l4765:	
 18210                           
 18211                           ;doprnt.c: 757: if(width > len)
 18212  0D73  0831               	movf	__doprnt@width+1,w
 18213  0D74  022A               	subwf	__doprnt@len+1,w
 18214  0D75  1D03               	skipz
 18215  0D76  2D79               	goto	u4025
 18216  0D77  0830               	movf	__doprnt@width,w
 18217  0D78  0229               	subwf	__doprnt@len,w
 18218  0D79                     u4025:	
 18219  0D79  1803               	skipnc
 18220  0D7A  2D80               	goto	l4769
 18221                           
 18222                           ;doprnt.c: 758: width -= len;
 18223  0D7B  0829               	movf	__doprnt@len,w
 18224  0D7C  02B0               	subwf	__doprnt@width,f
 18225  0D7D  082A               	movf	__doprnt@len+1,w
 18226  0D7E  3BB1               	subwfb	__doprnt@width+1,f
 18227  0D7F  2D82               	goto	l4779
 18228  0D80                     l4769:	
 18229                           
 18230                           ;doprnt.c: 759: else
 18231                           ;doprnt.c: 760: width = 0;
 18232  0D80  01B0               	clrf	__doprnt@width
 18233  0D81  01B1               	clrf	__doprnt@width+1
 18234  0D82                     l4779:	
 18235                           ;doprnt.c: 764: while(width--)
 18236                           
 18237  0D82  30FF               	movlw	255
 18238  0D83  0140               	movlb	0	; select bank0
 18239  0D84  07B0               	addwf	__doprnt@width,f
 18240  0D85  30FF               	movlw	255
 18241  0D86  3DB1               	addwfc	__doprnt@width+1,f
 18242  0D87  0A30               	incf	__doprnt@width,w
 18243  0D88  1903               	btfsc	3,2
 18244  0D89  0A31               	incf	__doprnt@width+1,w
 18245  0D8A  1903               	btfsc	3,2
 18246  0D8B  2DE9               	goto	l4793
 18247                           
 18248                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 18249  0D8C  0A33               	incf	__doprnt@pb,w
 18250  0D8D  0086               	movwf	6
 18251  0D8E  0187               	clrf	7
 18252  0D8F  0016               	moviw fsr1++
 18253  0D90  0401               	iorwf	1,w
 18254  0D91  1903               	btfsc	3,2
 18255  0D92  2DA0               	goto	l4775
 18256  0D93  3020               	movlw	32
 18257  0D94  00A3               	movwf	??__doprnt
 18258  0D95  0823               	movf	??__doprnt,w
 18259  0D96  00F1               	movwf	putch@txData
 18260  0D97  0A33               	incf	__doprnt@pb,w
 18261  0D98  0086               	movwf	6
 18262  0D99  0187               	clrf	7
 18263  0D9A  3F41               	moviw [1]fsr1
 18264  0D9B  008A               	movwf	10
 18265  0D9C  3F40               	moviw [0]fsr1
 18266  0D9D  000A               	callw
 18267  0D9E  318C               	pagesel	$
 18268  0D9F  2D82               	goto	l4779
 18269  0DA0                     l4775:	
 18270  0DA0  3020               	movlw	32
 18271  0DA1  0140               	movlb	0	; select bank0
 18272  0DA2  00A3               	movwf	??__doprnt
 18273  0DA3  0833               	movf	__doprnt@pb,w
 18274  0DA4  0086               	movwf	6
 18275  0DA5  0187               	clrf	7
 18276  0DA6  0801               	movf	1,w
 18277  0DA7  0086               	movwf	6
 18278  0DA8  0187               	clrf	7
 18279  0DA9  0823               	movf	??__doprnt,w
 18280  0DAA  0081               	movwf	1
 18281  0DAB  3001               	movlw	1
 18282  0DAC  00A3               	movwf	??__doprnt
 18283  0DAD  0833               	movf	__doprnt@pb,w
 18284  0DAE  0086               	movwf	6
 18285  0DAF  0187               	clrf	7
 18286  0DB0  0823               	movf	??__doprnt,w
 18287  0DB1  0781               	addwf	1,f
 18288  0DB2  2D82               	goto	l4779
 18289  0DB3                     l4781:	
 18290                           ;doprnt.c: 767: while(len--)
 18291                           
 18292                           
 18293                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 18294  0DB3  0A33               	incf	__doprnt@pb,w
 18295  0DB4  0086               	movwf	6
 18296  0DB5  0187               	clrf	7
 18297  0DB6  0016               	moviw fsr1++
 18298  0DB7  0401               	iorwf	1,w
 18299  0DB8  1903               	btfsc	3,2
 18300  0DB9  2DD0               	goto	l4787
 18301  0DBA  082B               	movf	__doprnt@cp,w
 18302  0DBB  0084               	movwf	4
 18303  0DBC  082C               	movf	__doprnt@cp+1,w
 18304  0DBD  0085               	movwf	5
 18305  0DBE  0800               	movf	0,w	;code access
 18306  0DBF  00A3               	movwf	??__doprnt
 18307  0DC0  0823               	movf	??__doprnt,w
 18308  0DC1  00F1               	movwf	putch@txData
 18309  0DC2  0A33               	incf	__doprnt@pb,w
 18310  0DC3  0086               	movwf	6
 18311  0DC4  0187               	clrf	7
 18312  0DC5  3F41               	moviw [1]fsr1
 18313  0DC6  008A               	movwf	10
 18314  0DC7  3F40               	moviw [0]fsr1
 18315  0DC8  000A               	callw
 18316  0DC9  318C               	pagesel	$
 18317  0DCA  3001               	movlw	1
 18318  0DCB  0140               	movlb	0	; select bank0
 18319  0DCC  07AB               	addwf	__doprnt@cp,f
 18320  0DCD  3000               	movlw	0
 18321  0DCE  3DAC               	addwfc	__doprnt@cp+1,f
 18322  0DCF  2DE9               	goto	l4793
 18323  0DD0                     l4787:	
 18324  0DD0  082B               	movf	__doprnt@cp,w
 18325  0DD1  0084               	movwf	4
 18326  0DD2  082C               	movf	__doprnt@cp+1,w
 18327  0DD3  0085               	movwf	5
 18328  0DD4  0800               	movf	0,w	;code access
 18329  0DD5  00A3               	movwf	??__doprnt
 18330  0DD6  0833               	movf	__doprnt@pb,w
 18331  0DD7  0086               	movwf	6
 18332  0DD8  0187               	clrf	7
 18333  0DD9  0801               	movf	1,w
 18334  0DDA  0086               	movwf	6
 18335  0DDB  0187               	clrf	7
 18336  0DDC  0823               	movf	??__doprnt,w
 18337  0DDD  0081               	movwf	1
 18338  0DDE  3001               	movlw	1
 18339  0DDF  07AB               	addwf	__doprnt@cp,f
 18340  0DE0  3000               	movlw	0
 18341  0DE1  3DAC               	addwfc	__doprnt@cp+1,f
 18342  0DE2  3001               	movlw	1
 18343  0DE3  00A3               	movwf	??__doprnt
 18344  0DE4  0833               	movf	__doprnt@pb,w
 18345  0DE5  0086               	movwf	6
 18346  0DE6  0187               	clrf	7
 18347  0DE7  0823               	movf	??__doprnt,w
 18348  0DE8  0781               	addwf	1,f
 18349  0DE9                     l4793:	
 18350  0DE9  3001               	movlw	1
 18351  0DEA  02A9               	subwf	__doprnt@len,f
 18352  0DEB  3000               	movlw	0
 18353  0DEC  3BAA               	subwfb	__doprnt@len+1,f
 18354  0DED  0A29               	incf	__doprnt@len,w
 18355  0DEE  1D03               	skipz
 18356  0DEF  2DB3               	goto	l4781
 18357  0DF0  0A2A               	incf	__doprnt@len+1,w
 18358  0DF1  1903               	btfsc	3,2
 18359  0DF2  2CC0               	goto	l4911
 18360  0DF3  2DB3               	goto	l4781
 18361  0DF4                     l4797:	
 18362                           ;doprnt.c: 822: }
 18363                           
 18364                           ;doprnt.c: 813: continue;
 18365                           
 18366                           ;doprnt.c: 802: default:
 18367                           
 18368                           ;doprnt.c: 774: continue;
 18369                           
 18370  0DF4  0140               	movlb	0	; select bank0
 18371  0DF5  0821               	movf	__doprnt@f+1,w
 18372  0DF6  00A4               	movwf	??__doprnt+1
 18373  0DF7  0820               	movf	__doprnt@f,w
 18374  0DF8  00A3               	movwf	??__doprnt
 18375  0DF9  0AA0               	incf	__doprnt@f,f
 18376  0DFA  1903               	skipnz
 18377  0DFB  0AA1               	incf	__doprnt@f+1,f
 18378  0DFC  0823               	movf	??__doprnt,w
 18379  0DFD  0084               	movwf	4
 18380  0DFE  0824               	movf	??__doprnt+1,w
 18381  0DFF  0085               	movwf	5
 18382  0E00  0800               	movf	0,w	;code access
 18383  0E01  00B2               	movwf	__doprnt@c
 18384                           
 18385                           ; Switch size 1, requested type "space"
 18386                           ; Number of cases is 6, Range of values is 0 to 120
 18387                           ; switch strategies available:
 18388                           ; Name         Instructions Cycles
 18389                           ; simple_byte           19    10 (average)
 18390                           ; direct_byte          248     6 (fixed)
 18391                           ; jumptable            260     6 (fixed)
 18392                           ;	Chosen strategy is simple_byte
 18393  0E02  3A00               	xorlw	0	; case 0
 18394  0E03  1903               	skipnz
 18395  0E04  2FFC               	goto	l4913
 18396  0E05  3A58               	xorlw	88	; case 88
 18397  0E06  1903               	skipnz
 18398  0E07  2D4C               	goto	l1426
 18399  0E08  3A3C               	xorlw	60	; case 100
 18400  0E09  1903               	skipnz
 18401  0E0A  2E15               	goto	l1424
 18402  0E0B  3A0D               	xorlw	13	; case 105
 18403  0E0C  1903               	skipnz
 18404  0E0D  2E15               	goto	l1424
 18405  0E0E  3A1A               	xorlw	26	; case 115
 18406  0E0F  1903               	skipnz
 18407  0E10  2D4F               	goto	l4753
 18408  0E11  3A0B               	xorlw	11	; case 120
 18409  0E12  1903               	skipnz
 18410  0E13  2D4C               	goto	l1426
 18411  0E14  2CC0               	goto	l4911
 18412  0E15                     l1424:	
 18413                           
 18414                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 18415  0E15  0140               	movlb	0	; select bank0
 18416  0E16  1BAF               	btfsc	__doprnt@flag,7
 18417  0E17  2E30               	goto	l4807
 18418                           
 18419                           ;doprnt.c: 1253: {
 18420                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 18421  0E18  0822               	movf	__doprnt@ap,w
 18422  0E19  0086               	movwf	6
 18423  0E1A  0187               	clrf	7
 18424  0E1B  0801               	movf	1,w
 18425  0E1C  0084               	movwf	4
 18426  0E1D  0185               	clrf	5
 18427  0E1E  3002               	movlw	2
 18428  0E1F  0781               	addwf	1,f
 18429  0E20  3F00               	moviw [0]fsr0
 18430  0E21  00AD               	movwf	__doprnt@val
 18431  0E22  3F01               	moviw [1]fsr0
 18432  0E23  00AE               	movwf	__doprnt@val+1
 18433                           
 18434                           ;doprnt.c: 1261: if((int)val < 0) {
 18435  0E24  1FAE               	btfss	__doprnt@val+1,7
 18436  0E25  2E81               	goto	l4831
 18437                           
 18438                           ;doprnt.c: 1262: flag |= 0x03;
 18439  0E26  3003               	movlw	3
 18440  0E27  00A3               	movwf	??__doprnt
 18441  0E28  0823               	movf	??__doprnt,w
 18442  0E29  04AF               	iorwf	__doprnt@flag,f
 18443                           
 18444                           ;doprnt.c: 1263: val = -val;
 18445  0E2A  09AD               	comf	__doprnt@val,f
 18446  0E2B  09AE               	comf	__doprnt@val+1,f
 18447  0E2C  0AAD               	incf	__doprnt@val,f
 18448  0E2D  1903               	skipnz
 18449  0E2E  0AAE               	incf	__doprnt@val+1,f
 18450                           
 18451                           ;doprnt.c: 1264: }
 18452                           ;doprnt.c: 1266: }
 18453  0E2F  2E81               	goto	l4831
 18454  0E30                     l4807:	
 18455                           
 18456                           ;doprnt.c: 1268: else
 18457                           ;doprnt.c: 1273: {
 18458                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18459  0E30  0822               	movf	__doprnt@ap,w
 18460  0E31  0086               	movwf	6
 18461  0E32  0187               	clrf	7
 18462  0E33  0801               	movf	1,w
 18463  0E34  0084               	movwf	4
 18464  0E35  0185               	clrf	5
 18465  0E36  3002               	movlw	2
 18466  0E37  0781               	addwf	1,f
 18467  0E38  3F00               	moviw [0]fsr0
 18468  0E39  00AD               	movwf	__doprnt@val
 18469  0E3A  3F01               	moviw [1]fsr0
 18470  0E3B  00AE               	movwf	__doprnt@val+1
 18471                           
 18472                           ;doprnt.c: 1287: }
 18473                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 18474  0E3C  2E81               	goto	l4831
 18475  0E3D                     l1449:	
 18476                           ;doprnt.c: 1299: case 0x00:
 18477                           
 18478                           
 18479                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18480  0E3D  01B2               	clrf	__doprnt@c
 18481  0E3E  0AB2               	incf	__doprnt@c,f
 18482  0E3F                     L22:	
 18483  0E3F  3005               	movlw	5
 18484  0E40  0632               	xorwf	__doprnt@c,w
 18485  0E41  1903               	btfsc	3,2
 18486  0E42  2E8A               	goto	l4833
 18487                           
 18488                           ;doprnt.c: 1306: if(val < dpowers[c])
 18489  0E43  0832               	movf	__doprnt@c,w
 18490  0E44  00A3               	movwf	??__doprnt
 18491  0E45  01A4               	clrf	??__doprnt+1
 18492  0E46  35A3               	lslf	??__doprnt,f
 18493  0E47  0DA4               	rlf	??__doprnt+1,f
 18494  0E48  301C               	movlw	low (_dpowers| (0+32768))
 18495  0E49  0723               	addwf	??__doprnt,w
 18496  0E4A  0084               	movwf	4
 18497  0E4B  30A9               	movlw	high (_dpowers| (0+32768))
 18498  0E4C  3D24               	addwfc	??__doprnt+1,w
 18499  0E4D  0085               	movwf	5
 18500  0E4E  3F00               	moviw [0]fsr0
 18501  0E4F  00A5               	movwf	??__doprnt+2
 18502  0E50  3F01               	moviw [1]fsr0
 18503  0E51  00A6               	movwf	??__doprnt+3
 18504  0E52  0826               	movf	??__doprnt+3,w
 18505  0E53  022E               	subwf	__doprnt@val+1,w
 18506  0E54  1D03               	skipz
 18507  0E55  2E58               	goto	u4105
 18508  0E56  0825               	movf	??__doprnt+2,w
 18509  0E57  022D               	subwf	__doprnt@val,w
 18510  0E58                     u4105:	
 18511  0E58  1C03               	btfss	3,0
 18512  0E59  2E8A               	goto	l4833
 18513                           
 18514                           ;doprnt.c: 1307: break;
 18515  0E5A  3001               	movlw	1
 18516  0E5B  00A3               	movwf	??__doprnt
 18517  0E5C  0823               	movf	??__doprnt,w
 18518  0E5D  07B2               	addwf	__doprnt@c,f
 18519  0E5E  2E3F               	goto	L22
 18520  0E5F                     l1454:	
 18521                           ;doprnt.c: 1314: case 0x80:
 18522                           
 18523                           ;doprnt.c: 1309: break;
 18524                           
 18525                           
 18526                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 18527  0E5F  01B2               	clrf	__doprnt@c
 18528  0E60  0AB2               	incf	__doprnt@c,f
 18529  0E61                     L23:	
 18530  0E61  3004               	movlw	4
 18531  0E62  0632               	xorwf	__doprnt@c,w
 18532  0E63  1903               	btfsc	3,2
 18533  0E64  2E8A               	goto	l4833
 18534                           
 18535                           ;doprnt.c: 1317: if(val < hexpowers[c])
 18536  0E65  0832               	movf	__doprnt@c,w
 18537  0E66  00A3               	movwf	??__doprnt
 18538  0E67  01A4               	clrf	??__doprnt+1
 18539  0E68  35A3               	lslf	??__doprnt,f
 18540  0E69  0DA4               	rlf	??__doprnt+1,f
 18541  0E6A  304D               	movlw	low (_hexpowers| (0+32768))
 18542  0E6B  0723               	addwf	??__doprnt,w
 18543  0E6C  0084               	movwf	4
 18544  0E6D  30A9               	movlw	high (_hexpowers| (0+32768))
 18545  0E6E  3D24               	addwfc	??__doprnt+1,w
 18546  0E6F  0085               	movwf	5
 18547  0E70  3F00               	moviw [0]fsr0
 18548  0E71  00A5               	movwf	??__doprnt+2
 18549  0E72  3F01               	moviw [1]fsr0
 18550  0E73  00A6               	movwf	??__doprnt+3
 18551  0E74  0826               	movf	??__doprnt+3,w
 18552  0E75  022E               	subwf	__doprnt@val+1,w
 18553  0E76  1D03               	skipz
 18554  0E77  2E7A               	goto	u4135
 18555  0E78  0825               	movf	??__doprnt+2,w
 18556  0E79  022D               	subwf	__doprnt@val,w
 18557  0E7A                     u4135:	
 18558  0E7A  1C03               	btfss	3,0
 18559  0E7B  2E8A               	goto	l4833
 18560                           
 18561                           ;doprnt.c: 1318: break;
 18562  0E7C  3001               	movlw	1
 18563  0E7D  00A3               	movwf	??__doprnt
 18564  0E7E  0823               	movf	??__doprnt,w
 18565  0E7F  07B2               	addwf	__doprnt@c,f
 18566  0E80  2E61               	goto	L23
 18567  0E81                     l4831:	
 18568                           ;doprnt.c: 1336: }
 18569                           
 18570                           ;doprnt.c: 1320: break;
 18571                           
 18572  0E81  082F               	movf	__doprnt@flag,w
 18573  0E82  3980               	andlw	128
 18574                           
 18575                           ; Switch size 1, requested type "space"
 18576                           ; Number of cases is 2, Range of values is 0 to 128
 18577                           ; switch strategies available:
 18578                           ; Name         Instructions Cycles
 18579                           ; simple_byte            7     4 (average)
 18580                           ; jumptable            260     6 (fixed)
 18581                           ;	Chosen strategy is simple_byte
 18582  0E83  3A00               	xorlw	0	; case 0
 18583  0E84  1903               	skipnz
 18584  0E85  2E3D               	goto	l1449
 18585  0E86  3A80               	xorlw	128	; case 128
 18586  0E87  1903               	skipnz
 18587  0E88  2E5F               	goto	l1454
 18588  0E89  2E8A               	goto	l4833
 18589  0E8A                     l4833:	
 18590                           
 18591                           ;doprnt.c: 1345: if(width && flag & 0x03)
 18592  0E8A  0830               	movf	__doprnt@width,w
 18593  0E8B  0431               	iorwf	__doprnt@width+1,w
 18594  0E8C  1903               	btfsc	3,2
 18595  0E8D  2E96               	goto	l1458
 18596  0E8E  082F               	movf	__doprnt@flag,w
 18597  0E8F  3903               	andlw	3
 18598  0E90  1903               	btfsc	3,2
 18599  0E91  2E96               	goto	l1458
 18600                           
 18601                           ;doprnt.c: 1346: width--;
 18602  0E92  30FF               	movlw	255
 18603  0E93  07B0               	addwf	__doprnt@width,f
 18604  0E94  30FF               	movlw	255
 18605  0E95  3DB1               	addwfc	__doprnt@width+1,f
 18606  0E96                     l1458:	
 18607                           
 18608                           ;doprnt.c: 1381: if(width > c)
 18609  0E96  0832               	movf	__doprnt@c,w
 18610  0E97  00A3               	movwf	??__doprnt
 18611  0E98  01A4               	clrf	??__doprnt+1
 18612  0E99  1BA3               	btfsc	??__doprnt,7
 18613  0E9A  03A4               	decf	??__doprnt+1,f
 18614  0E9B  0824               	movf	??__doprnt+1,w
 18615  0E9C  3A80               	xorlw	128
 18616  0E9D  00A5               	movwf	??__doprnt+2
 18617  0E9E  0831               	movf	__doprnt@width+1,w
 18618  0E9F  3A80               	xorlw	128
 18619  0EA0  0225               	subwf	??__doprnt+2,w
 18620  0EA1  1D03               	skipz
 18621  0EA2  2EA5               	goto	u4175
 18622  0EA3  0830               	movf	__doprnt@width,w
 18623  0EA4  0223               	subwf	??__doprnt,w
 18624  0EA5                     u4175:	
 18625  0EA5  1803               	skipnc
 18626  0EA6  2EB2               	goto	l4841
 18627                           
 18628                           ;doprnt.c: 1382: width -= c;
 18629  0EA7  0140               	movlb	0	; select bank0
 18630  0EA8  0832               	movf	__doprnt@c,w
 18631  0EA9  00A3               	movwf	??__doprnt
 18632  0EAA  01A4               	clrf	??__doprnt+1
 18633  0EAB  1BA3               	btfsc	??__doprnt,7
 18634  0EAC  03A4               	decf	??__doprnt+1,f
 18635  0EAD  0823               	movf	??__doprnt,w
 18636  0EAE  02B0               	subwf	__doprnt@width,f
 18637  0EAF  0824               	movf	??__doprnt+1,w
 18638  0EB0  3BB1               	subwfb	__doprnt@width+1,f
 18639  0EB1  2EB5               	goto	l4843
 18640  0EB2                     l4841:	
 18641                           
 18642                           ;doprnt.c: 1383: else
 18643                           ;doprnt.c: 1384: width = 0;
 18644  0EB2  0140               	movlb	0	; select bank0
 18645  0EB3  01B0               	clrf	__doprnt@width
 18646  0EB4  01B1               	clrf	__doprnt@width+1
 18647  0EB5                     l4843:	
 18648                           
 18649                           ;doprnt.c: 1387: if(flag & 0x04) {
 18650  0EB5  1D2F               	btfss	__doprnt@flag,2
 18651  0EB6  2F12               	goto	l4867
 18652                           
 18653                           ;doprnt.c: 1392: if(flag & 0x03)
 18654  0EB7  082F               	movf	__doprnt@flag,w
 18655  0EB8  3903               	andlw	3
 18656  0EB9  1903               	btfsc	3,2
 18657  0EBA  2EE1               	goto	l4855
 18658                           
 18659                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 18660  0EBB  0A33               	incf	__doprnt@pb,w
 18661  0EBC  0086               	movwf	6
 18662  0EBD  0187               	clrf	7
 18663  0EBE  0016               	moviw fsr1++
 18664  0EBF  0401               	iorwf	1,w
 18665  0EC0  1903               	btfsc	3,2
 18666  0EC1  2ECF               	goto	l4851
 18667  0EC2  302D               	movlw	45
 18668  0EC3  00A3               	movwf	??__doprnt
 18669  0EC4  0823               	movf	??__doprnt,w
 18670  0EC5  00F1               	movwf	putch@txData
 18671  0EC6  0A33               	incf	__doprnt@pb,w
 18672  0EC7  0086               	movwf	6
 18673  0EC8  0187               	clrf	7
 18674  0EC9  3F41               	moviw [1]fsr1
 18675  0ECA  008A               	movwf	10
 18676  0ECB  3F40               	moviw [0]fsr1
 18677  0ECC  000A               	callw
 18678  0ECD  318C               	pagesel	$
 18679  0ECE  2EE1               	goto	l4855
 18680  0ECF                     l4851:	
 18681  0ECF  302D               	movlw	45
 18682  0ED0  0140               	movlb	0	; select bank0
 18683  0ED1  00A3               	movwf	??__doprnt
 18684  0ED2  0833               	movf	__doprnt@pb,w
 18685  0ED3  0086               	movwf	6
 18686  0ED4  0187               	clrf	7
 18687  0ED5  0801               	movf	1,w
 18688  0ED6  0086               	movwf	6
 18689  0ED7  0187               	clrf	7
 18690  0ED8  0823               	movf	??__doprnt,w
 18691  0ED9  0081               	movwf	1
 18692  0EDA  3001               	movlw	1
 18693  0EDB  00A3               	movwf	??__doprnt
 18694  0EDC  0833               	movf	__doprnt@pb,w
 18695  0EDD  0086               	movwf	6
 18696  0EDE  0187               	clrf	7
 18697  0EDF  0823               	movf	??__doprnt,w
 18698  0EE0  0781               	addwf	1,f
 18699  0EE1                     l4855:	
 18700                           
 18701                           ;doprnt.c: 1415: if(width)
 18702  0EE1  0140               	movlb	0	; select bank0
 18703  0EE2                     L24:	
 18704  0EE2  0830               	movf	__doprnt@width,w
 18705  0EE3  0431               	iorwf	__doprnt@width+1,w
 18706  0EE4  1903               	btfsc	3,2
 18707  0EE5  2F6F               	goto	l4889
 18708                           
 18709                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 18710                           
 18711                           ;doprnt.c: 1416: do
 18712  0EE6  0A33               	incf	__doprnt@pb,w
 18713  0EE7  0086               	movwf	6
 18714  0EE8  0187               	clrf	7
 18715  0EE9  0016               	moviw fsr1++
 18716  0EEA  0401               	iorwf	1,w
 18717  0EEB  1903               	btfsc	3,2
 18718  0EEC  2EFA               	goto	l4861
 18719  0EED  3030               	movlw	48
 18720  0EEE  00A3               	movwf	??__doprnt
 18721  0EEF  0823               	movf	??__doprnt,w
 18722  0EF0  00F1               	movwf	putch@txData
 18723  0EF1  0A33               	incf	__doprnt@pb,w
 18724  0EF2  0086               	movwf	6
 18725  0EF3  0187               	clrf	7
 18726  0EF4  3F41               	moviw [1]fsr1
 18727  0EF5  008A               	movwf	10
 18728  0EF6  3F40               	moviw [0]fsr1
 18729  0EF7  000A               	callw
 18730  0EF8  318C               	pagesel	$
 18731  0EF9  2F0C               	goto	l4865
 18732  0EFA                     l4861:	
 18733  0EFA  3030               	movlw	48
 18734  0EFB  0140               	movlb	0	; select bank0
 18735  0EFC  00A3               	movwf	??__doprnt
 18736  0EFD  0833               	movf	__doprnt@pb,w
 18737  0EFE  0086               	movwf	6
 18738  0EFF  0187               	clrf	7
 18739  0F00  0801               	movf	1,w
 18740  0F01  0086               	movwf	6
 18741  0F02  0187               	clrf	7
 18742  0F03  0823               	movf	??__doprnt,w
 18743  0F04  0081               	movwf	1
 18744  0F05  3001               	movlw	1
 18745  0F06  00A3               	movwf	??__doprnt
 18746  0F07  0833               	movf	__doprnt@pb,w
 18747  0F08  0086               	movwf	6
 18748  0F09  0187               	clrf	7
 18749  0F0A  0823               	movf	??__doprnt,w
 18750  0F0B  0781               	addwf	1,f
 18751  0F0C                     l4865:	
 18752                           
 18753                           ;doprnt.c: 1418: while(--width);
 18754  0F0C  30FF               	movlw	255
 18755  0F0D  0140               	movlb	0	; select bank0
 18756  0F0E  07B0               	addwf	__doprnt@width,f
 18757  0F0F  30FF               	movlw	255
 18758  0F10  3DB1               	addwfc	__doprnt@width+1,f
 18759  0F11  2EE2               	goto	L24
 18760  0F12                     l4867:	
 18761                           ;doprnt.c: 1420: } else
 18762                           
 18763                           
 18764                           ;doprnt.c: 1422: {
 18765                           ;doprnt.c: 1424: if(width
 18766                           ;doprnt.c: 1428: )
 18767  0F12  0830               	movf	__doprnt@width,w
 18768  0F13  0431               	iorwf	__doprnt@width+1,w
 18769  0F14  1903               	btfsc	3,2
 18770  0F15  2F45               	goto	l4879
 18771  0F16                     l4869:	
 18772                           ;doprnt.c: 1429: do
 18773                           
 18774                           
 18775                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 18776  0F16  0A33               	incf	__doprnt@pb,w
 18777  0F17  0086               	movwf	6
 18778  0F18  0187               	clrf	7
 18779  0F19  0016               	moviw fsr1++
 18780  0F1A  0401               	iorwf	1,w
 18781  0F1B  1903               	btfsc	3,2
 18782  0F1C  2F2A               	goto	l4873
 18783  0F1D  3020               	movlw	32
 18784  0F1E  00A3               	movwf	??__doprnt
 18785  0F1F  0823               	movf	??__doprnt,w
 18786  0F20  00F1               	movwf	putch@txData
 18787  0F21  0A33               	incf	__doprnt@pb,w
 18788  0F22  0086               	movwf	6
 18789  0F23  0187               	clrf	7
 18790  0F24  3F41               	moviw [1]fsr1
 18791  0F25  008A               	movwf	10
 18792  0F26  3F40               	moviw [0]fsr1
 18793  0F27  000A               	callw
 18794  0F28  318C               	pagesel	$
 18795  0F29  2F3C               	goto	l4877
 18796  0F2A                     l4873:	
 18797  0F2A  3020               	movlw	32
 18798  0F2B  0140               	movlb	0	; select bank0
 18799  0F2C  00A3               	movwf	??__doprnt
 18800  0F2D  0833               	movf	__doprnt@pb,w
 18801  0F2E  0086               	movwf	6
 18802  0F2F  0187               	clrf	7
 18803  0F30  0801               	movf	1,w
 18804  0F31  0086               	movwf	6
 18805  0F32  0187               	clrf	7
 18806  0F33  0823               	movf	??__doprnt,w
 18807  0F34  0081               	movwf	1
 18808  0F35  3001               	movlw	1
 18809  0F36  00A3               	movwf	??__doprnt
 18810  0F37  0833               	movf	__doprnt@pb,w
 18811  0F38  0086               	movwf	6
 18812  0F39  0187               	clrf	7
 18813  0F3A  0823               	movf	??__doprnt,w
 18814  0F3B  0781               	addwf	1,f
 18815  0F3C                     l4877:	
 18816                           
 18817                           ;doprnt.c: 1431: while(--width);
 18818  0F3C  30FF               	movlw	255
 18819  0F3D  0140               	movlb	0	; select bank0
 18820  0F3E  07B0               	addwf	__doprnt@width,f
 18821  0F3F  30FF               	movlw	255
 18822  0F40  3DB1               	addwfc	__doprnt@width+1,f
 18823  0F41  0830               	movf	__doprnt@width,w
 18824  0F42  0431               	iorwf	__doprnt@width+1,w
 18825  0F43  1D03               	btfss	3,2
 18826  0F44  2F16               	goto	l4869
 18827  0F45                     l4879:	
 18828                           
 18829                           ;doprnt.c: 1438: if(flag & 0x03)
 18830  0F45  082F               	movf	__doprnt@flag,w
 18831  0F46  3903               	andlw	3
 18832  0F47  1903               	btfsc	3,2
 18833  0F48  2F6F               	goto	l4889
 18834                           
 18835                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 18836  0F49  0A33               	incf	__doprnt@pb,w
 18837  0F4A  0086               	movwf	6
 18838  0F4B  0187               	clrf	7
 18839  0F4C  0016               	moviw fsr1++
 18840  0F4D  0401               	iorwf	1,w
 18841  0F4E  1903               	btfsc	3,2
 18842  0F4F  2F5D               	goto	l4885
 18843  0F50  302D               	movlw	45
 18844  0F51  00A3               	movwf	??__doprnt
 18845  0F52  0823               	movf	??__doprnt,w
 18846  0F53  00F1               	movwf	putch@txData
 18847  0F54  0A33               	incf	__doprnt@pb,w
 18848  0F55  0086               	movwf	6
 18849  0F56  0187               	clrf	7
 18850  0F57  3F41               	moviw [1]fsr1
 18851  0F58  008A               	movwf	10
 18852  0F59  3F40               	moviw [0]fsr1
 18853  0F5A  000A               	callw
 18854  0F5B  318C               	pagesel	$
 18855  0F5C  2F6F               	goto	l4889
 18856  0F5D                     l4885:	
 18857  0F5D  302D               	movlw	45
 18858  0F5E  0140               	movlb	0	; select bank0
 18859  0F5F  00A3               	movwf	??__doprnt
 18860  0F60  0833               	movf	__doprnt@pb,w
 18861  0F61  0086               	movwf	6
 18862  0F62  0187               	clrf	7
 18863  0F63  0801               	movf	1,w
 18864  0F64  0086               	movwf	6
 18865  0F65  0187               	clrf	7
 18866  0F66  0823               	movf	??__doprnt,w
 18867  0F67  0081               	movwf	1
 18868  0F68  3001               	movlw	1
 18869  0F69  00A3               	movwf	??__doprnt
 18870  0F6A  0833               	movf	__doprnt@pb,w
 18871  0F6B  0086               	movwf	6
 18872  0F6C  0187               	clrf	7
 18873  0F6D  0823               	movf	??__doprnt,w
 18874  0F6E  0781               	addwf	1,f
 18875  0F6F                     l4889:	
 18876                           
 18877                           ;doprnt.c: 1469: }
 18878                           ;doprnt.c: 1472: prec = c;
 18879  0F6F  0140               	movlb	0	; select bank0
 18880  0F70  0832               	movf	__doprnt@c,w
 18881  0F71  00A3               	movwf	??__doprnt
 18882  0F72  0823               	movf	??__doprnt,w
 18883  0F73  00A8               	movwf	__doprnt@prec
 18884                           
 18885                           ;doprnt.c: 1474: while(prec--) {
 18886  0F74  2FF3               	goto	l4909
 18887  0F75                     l4891:	
 18888                           ;doprnt.c: 1478: {
 18889                           ;doprnt.c: 1483: case 0x00:
 18890                           
 18891                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 18892                           
 18893                           
 18894                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18895  0F75  300A               	movlw	10
 18896  0F76  00F8               	movwf	___lwmod@divisor
 18897  0F77  3000               	movlw	0
 18898  0F78  00F9               	movwf	___lwmod@divisor+1
 18899  0F79  0828               	movf	__doprnt@prec,w
 18900  0F7A  00A3               	movwf	??__doprnt
 18901  0F7B  01A4               	clrf	??__doprnt+1
 18902  0F7C  35A3               	lslf	??__doprnt,f
 18903  0F7D  0DA4               	rlf	??__doprnt+1,f
 18904  0F7E  301C               	movlw	low (_dpowers| (0+32768))
 18905  0F7F  0723               	addwf	??__doprnt,w
 18906  0F80  0084               	movwf	4
 18907  0F81  30A9               	movlw	high (_dpowers| (0+32768))
 18908  0F82  3D24               	addwfc	??__doprnt+1,w
 18909  0F83  0085               	movwf	5
 18910  0F84  3F00               	moviw [0]fsr0
 18911  0F85  00F0               	movwf	___lwdiv@divisor
 18912  0F86  3F01               	moviw [1]fsr0
 18913  0F87  00F1               	movwf	___lwdiv@divisor+1
 18914  0F88  082E               	movf	__doprnt@val+1,w
 18915  0F89  00F3               	movwf	___lwdiv@dividend+1
 18916  0F8A  082D               	movf	__doprnt@val,w
 18917  0F8B  00F2               	movwf	___lwdiv@dividend
 18918  0F8C  3198  20D3  318C   	fcall	___lwdiv
 18919  0F8F  0871               	movf	?___lwdiv+1,w
 18920  0F90  00FB               	movwf	___lwmod@dividend+1
 18921  0F91  0870               	movf	?___lwdiv,w
 18922  0F92  00FA               	movwf	___lwmod@dividend
 18923  0F93  3188  2001  318C   	fcall	___lwmod
 18924  0F96  0878               	movf	?___lwmod,w
 18925  0F97  3E30               	addlw	48
 18926  0F98  0140               	movlb	0	; select bank0
 18927  0F99  00A5               	movwf	??__doprnt+2
 18928  0F9A  0825               	movf	??__doprnt+2,w
 18929  0F9B  2FC2               	goto	L21
 18930  0F9C                     l4893:	
 18931                           ;doprnt.c: 1497: case 0x80:
 18932                           
 18933                           ;doprnt.c: 1491: break;
 18934                           
 18935                           
 18936                           ;doprnt.c: 1499: {
 18937                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 18938  0F9C  0828               	movf	__doprnt@prec,w
 18939  0F9D  00A3               	movwf	??__doprnt
 18940  0F9E  01A4               	clrf	??__doprnt+1
 18941  0F9F  35A3               	lslf	??__doprnt,f
 18942  0FA0  0DA4               	rlf	??__doprnt+1,f
 18943  0FA1  304D               	movlw	low (_hexpowers| (0+32768))
 18944  0FA2  0723               	addwf	??__doprnt,w
 18945  0FA3  0084               	movwf	4
 18946  0FA4  30A9               	movlw	high (_hexpowers| (0+32768))
 18947  0FA5  3D24               	addwfc	??__doprnt+1,w
 18948  0FA6  0085               	movwf	5
 18949  0FA7  3F00               	moviw [0]fsr0
 18950  0FA8  00F0               	movwf	___lwdiv@divisor
 18951  0FA9  3F01               	moviw [1]fsr0
 18952  0FAA  00F1               	movwf	___lwdiv@divisor+1
 18953  0FAB  082E               	movf	__doprnt@val+1,w
 18954  0FAC  00F3               	movwf	___lwdiv@dividend+1
 18955  0FAD  082D               	movf	__doprnt@val,w
 18956  0FAE  00F2               	movwf	___lwdiv@dividend
 18957  0FAF  3198  20D3  318C   	fcall	___lwdiv
 18958  0FB2  0870               	movf	?___lwdiv,w
 18959  0FB3  390F               	andlw	15
 18960  0FB4  0140               	movlb	0	; select bank0
 18961  0FB5  00A5               	movwf	??__doprnt+2
 18962  0FB6  0825               	movf	??__doprnt+2,w
 18963  0FB7  00A7               	movwf	__doprnt@idx
 18964                           
 18965                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 18966  0FB8  0827               	movf	__doprnt@idx,w
 18967  0FB9  3E85               	addlw	low (STR_25| (0+32768))
 18968  0FBA  0084               	movwf	4
 18969  0FBB  30A8               	movlw	high (STR_25| (0+32768))
 18970  0FBC  1803               	skipnc
 18971  0FBD  3E01               	addlw	1
 18972  0FBE  0085               	movwf	5
 18973  0FBF  0800               	movf	0,w	;code access
 18974  0FC0  00A3               	movwf	??__doprnt
 18975  0FC1  0823               	movf	??__doprnt,w
 18976  0FC2                     L21:	
 18977  0FC2  00B2               	movwf	__doprnt@c
 18978                           
 18979                           ;doprnt.c: 1523: }
 18980                           
 18981                           ;doprnt.c: 1508: }
 18982                           ;doprnt.c: 1510: break;
 18983  0FC3  2FCD               	goto	l4901
 18984  0FC4                     l4899:	
 18985  0FC4  082F               	movf	__doprnt@flag,w
 18986  0FC5  3980               	andlw	128
 18987                           
 18988                           ; Switch size 1, requested type "space"
 18989                           ; Number of cases is 2, Range of values is 0 to 128
 18990                           ; switch strategies available:
 18991                           ; Name         Instructions Cycles
 18992                           ; simple_byte            7     4 (average)
 18993                           ; jumptable            260     6 (fixed)
 18994                           ;	Chosen strategy is simple_byte
 18995  0FC6  3A00               	xorlw	0	; case 0
 18996  0FC7  1903               	skipnz
 18997  0FC8  2F75               	goto	l4891
 18998  0FC9  3A80               	xorlw	128	; case 128
 18999  0FCA  1903               	skipnz
 19000  0FCB  2F9C               	goto	l4893
 19001  0FCC  2FCD               	goto	l4901
 19002  0FCD                     l4901:	
 19003                           
 19004                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 19005  0FCD  0A33               	incf	__doprnt@pb,w
 19006  0FCE  0086               	movwf	6
 19007  0FCF  0187               	clrf	7
 19008  0FD0  0016               	moviw fsr1++
 19009  0FD1  0401               	iorwf	1,w
 19010  0FD2  1903               	btfsc	3,2
 19011  0FD3  2FE1               	goto	l4905
 19012  0FD4  0832               	movf	__doprnt@c,w
 19013  0FD5  00A3               	movwf	??__doprnt
 19014  0FD6  0823               	movf	??__doprnt,w
 19015  0FD7  00F1               	movwf	putch@txData
 19016  0FD8  0A33               	incf	__doprnt@pb,w
 19017  0FD9  0086               	movwf	6
 19018  0FDA  0187               	clrf	7
 19019  0FDB  3F41               	moviw [1]fsr1
 19020  0FDC  008A               	movwf	10
 19021  0FDD  3F40               	moviw [0]fsr1
 19022  0FDE  000A               	callw
 19023  0FDF  318C               	pagesel	$
 19024  0FE0  2FF3               	goto	l4909
 19025  0FE1                     l4905:	
 19026  0FE1  0140               	movlb	0	; select bank0
 19027  0FE2  0832               	movf	__doprnt@c,w
 19028  0FE3  00A3               	movwf	??__doprnt
 19029  0FE4  0833               	movf	__doprnt@pb,w
 19030  0FE5  0086               	movwf	6
 19031  0FE6  0187               	clrf	7
 19032  0FE7  0801               	movf	1,w
 19033  0FE8  0086               	movwf	6
 19034  0FE9  0187               	clrf	7
 19035  0FEA  0823               	movf	??__doprnt,w
 19036  0FEB  0081               	movwf	1
 19037  0FEC  3001               	movlw	1
 19038  0FED  00A3               	movwf	??__doprnt
 19039  0FEE  0833               	movf	__doprnt@pb,w
 19040  0FEF  0086               	movwf	6
 19041  0FF0  0187               	clrf	7
 19042  0FF1  0823               	movf	??__doprnt,w
 19043  0FF2  0781               	addwf	1,f
 19044  0FF3                     l4909:	
 19045  0FF3  30FF               	movlw	255
 19046  0FF4  0140               	movlb	0	; select bank0
 19047  0FF5  00A3               	movwf	??__doprnt
 19048  0FF6  0823               	movf	??__doprnt,w
 19049  0FF7  07A8               	addwf	__doprnt@prec,f
 19050  0FF8  0A28               	incf	__doprnt@prec,w
 19051  0FF9  1903               	btfsc	3,2
 19052  0FFA  2CC0               	goto	l4911
 19053  0FFB  2FC4               	goto	l4899
 19054  0FFC                     l4913:	
 19055                           ;doprnt.c: 1525: }
 19056                           ;doprnt.c: 1533: }
 19057                           ;doprnt.c: 1535: alldone:
 19058                           
 19059                           
 19060                           ;doprnt.c: 1540: return 0;
 19061  0FFC  0140               	movlb	0	; select bank0
 19062  0FFD  01A0               	clrf	?__doprnt
 19063  0FFE  01A1               	clrf	?__doprnt+1
 19064  0FFF  0008               	return
 19065  1000                     __end_of__doprnt:	
 19066                           
 19067                           	psect	text54
 19068  24A9                     __ptext54:	
 19069 ;; *************** function _putch *****************
 19070 ;; Defined at:
 19071 ;;		line 182 in file "mcc_generated_files/eusart.c"
 19072 ;; Parameters:    Size  Location     Type
 19073 ;;  txData          1    1[COMMON] unsigned char 
 19074 ;; Auto vars:     Size  Location     Type
 19075 ;;		None
 19076 ;; Return value:  Size  Location     Type
 19077 ;;                  1    wreg      void 
 19078 ;; Registers used:
 19079 ;;		wreg, status,2, status,0, pclath, cstack
 19080 ;; Tracked objects:
 19081 ;;		On entry : 0/0
 19082 ;;		On exit  : 0/0
 19083 ;;		Unchanged: 0/0
 19084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19089 ;;Total ram usage:        1 bytes
 19090 ;; Hardware stack levels used:    1
 19091 ;; Hardware stack levels required when called:    1
 19092 ;; This function calls:
 19093 ;;		_EUSART_Write
 19094 ;; This function is called by:
 19095 ;;		_printf
 19096 ;;		__doprnt
 19097 ;; This function uses a non-reentrant model
 19098 ;;
 19099                           
 19100                           
 19101                           ;psect for function _putch
 19102  24A9                     _putch:	
 19103                           
 19104                           ;eusart.c: 184: EUSART_Write(txData);
 19105                           
 19106                           ;incstack = 0
 19107                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 19108  24A9  0871               	movf	putch@txData,w
 19109  24AA  31A4  24B5         	fcall	_EUSART_Write
 19110  24AC  0008               	return
 19111  24AD                     __end_of_putch:	
 19112                           
 19113                           	psect	text55
 19114  24B5                     __ptext55:	
 19115 ;; *************** function _EUSART_Write *****************
 19116 ;; Defined at:
 19117 ;;		line 132 in file "mcc_generated_files/eusart.c"
 19118 ;; Parameters:    Size  Location     Type
 19119 ;;  txData          1    wreg     unsigned char 
 19120 ;; Auto vars:     Size  Location     Type
 19121 ;;  txData          1    0[COMMON] unsigned char 
 19122 ;; Return value:  Size  Location     Type
 19123 ;;                  1    wreg      void 
 19124 ;; Registers used:
 19125 ;;		wreg
 19126 ;; Tracked objects:
 19127 ;;		On entry : 0/0
 19128 ;;		On exit  : 0/0
 19129 ;;		Unchanged: 0/0
 19130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19135 ;;Total ram usage:        1 bytes
 19136 ;; Hardware stack levels used:    1
 19137 ;; This function calls:
 19138 ;;		Nothing
 19139 ;; This function is called by:
 19140 ;;		_printf_string
 19141 ;;		_putch
 19142 ;; This function uses a non-reentrant model
 19143 ;;
 19144                           
 19145                           
 19146                           ;psect for function _EUSART_Write
 19147  24B5                     _EUSART_Write:	
 19148                           
 19149                           ;incstack = 0
 19150                           ; Regs used in _EUSART_Write: [wreg]
 19151                           ;EUSART_Write@txData stored from wreg
 19152  24B5  00F0               	movwf	EUSART_Write@txData
 19153  24B6                     l191:	
 19154                           ;eusart.c: 135: {
 19155                           
 19156                           ;eusart.c: 134: while(0 == PIR3bits.TXIF)
 19157                           
 19158  24B6  014E               	movlb	14	; select bank14
 19159  24B7  1E0F               	btfss	15,4	;volatile
 19160  24B8  2CB6               	goto	l191
 19161                           
 19162                           ;eusart.c: 136: }
 19163                           ;eusart.c: 138: TX1REG = txData;
 19164  24B9  0870               	movf	EUSART_Write@txData,w
 19165  24BA  0142               	movlb	2	; select bank2
 19166  24BB  009A               	movwf	26	;volatile
 19167  24BC  0008               	return
 19168  24BD                     __end_of_EUSART_Write:	
 19169                           
 19170                           	psect	text56
 19171  24F4                     __ptext56:	
 19172 ;; *************** function _isdigit *****************
 19173 ;; Defined at:
 19174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 19175 ;; Parameters:    Size  Location     Type
 19176 ;;  c               1    wreg     unsigned char 
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;  c               1    1[COMMON] unsigned char 
 19179 ;; Return value:  Size  Location     Type
 19180 ;;		None               void
 19181 ;; Registers used:
 19182 ;;		wreg, status,2, status,0
 19183 ;; Tracked objects:
 19184 ;;		On entry : 0/0
 19185 ;;		On exit  : 0/0
 19186 ;;		Unchanged: 0/0
 19187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19192 ;;Total ram usage:        2 bytes
 19193 ;; Hardware stack levels used:    1
 19194 ;; This function calls:
 19195 ;;		Nothing
 19196 ;; This function is called by:
 19197 ;;		__doprnt
 19198 ;; This function uses a non-reentrant model
 19199 ;;
 19200                           
 19201                           
 19202                           ;psect for function _isdigit
 19203  24F4                     _isdigit:	
 19204                           
 19205                           ;incstack = 0
 19206                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 19207                           ;isdigit@c stored from wreg
 19208  24F4  00F1               	movwf	isdigit@c
 19209  24F5  01F0               	clrf	_isdigit$2119
 19210  24F6  303A               	movlw	58
 19211  24F7  0271               	subwf	isdigit@c,w
 19212  24F8  1803               	skipnc
 19213  24F9  2D00               	goto	l4649
 19214  24FA  3030               	movlw	48
 19215  24FB  0271               	subwf	isdigit@c,w
 19216  24FC  1C03               	skipc
 19217  24FD  2D00               	goto	l4649
 19218  24FE  01F0               	clrf	_isdigit$2119
 19219  24FF  0AF0               	incf	_isdigit$2119,f
 19220  2500                     l4649:	
 19221  2500  0C70               	rrf	_isdigit$2119,w
 19222  2501  0008               	return
 19223  2502                     __end_of_isdigit:	
 19224                           
 19225                           	psect	text57
 19226  25A2                     __ptext57:	
 19227 ;; *************** function ___wmul *****************
 19228 ;; Defined at:
 19229 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 19230 ;; Parameters:    Size  Location     Type
 19231 ;;  multiplier      2    0[COMMON] unsigned int 
 19232 ;;  multiplicand    2    2[COMMON] unsigned int 
 19233 ;; Auto vars:     Size  Location     Type
 19234 ;;  product         2    4[COMMON] unsigned int 
 19235 ;; Return value:  Size  Location     Type
 19236 ;;                  2    0[COMMON] unsigned int 
 19237 ;; Registers used:
 19238 ;;		wreg, status,2, status,0
 19239 ;; Tracked objects:
 19240 ;;		On entry : 0/0
 19241 ;;		On exit  : 0/0
 19242 ;;		Unchanged: 0/0
 19243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19247 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19248 ;;Total ram usage:        6 bytes
 19249 ;; Hardware stack levels used:    1
 19250 ;; This function calls:
 19251 ;;		Nothing
 19252 ;; This function is called by:
 19253 ;;		__doprnt
 19254 ;; This function uses a non-reentrant model
 19255 ;;
 19256                           
 19257                           
 19258                           ;psect for function ___wmul
 19259  25A2                     ___wmul:	
 19260                           
 19261                           ;incstack = 0
 19262                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 19263  25A2  01F4               	clrf	___wmul@product
 19264  25A3  01F5               	clrf	___wmul@product+1
 19265  25A4                     l4655:	
 19266  25A4  1C70               	btfss	___wmul@multiplier,0
 19267  25A5  2DAA               	goto	l1571
 19268  25A6  0872               	movf	___wmul@multiplicand,w
 19269  25A7  07F4               	addwf	___wmul@product,f
 19270  25A8  0873               	movf	___wmul@multiplicand+1,w
 19271  25A9  3DF5               	addwfc	___wmul@product+1,f
 19272  25AA                     l1571:	
 19273  25AA  3001               	movlw	1
 19274  25AB                     u3795:	
 19275  25AB  35F2               	lslf	___wmul@multiplicand,f
 19276  25AC  0DF3               	rlf	___wmul@multiplicand+1,f
 19277  25AD  0B89               	decfsz	9,f
 19278  25AE  2DAB               	goto	u3795
 19279  25AF  3001               	movlw	1
 19280  25B0                     u3805:	
 19281  25B0  36F1               	lsrf	___wmul@multiplier+1,f
 19282  25B1  0CF0               	rrf	___wmul@multiplier,f
 19283  25B2  0B89               	decfsz	9,f
 19284  25B3  2DB0               	goto	u3805
 19285  25B4  0870               	movf	___wmul@multiplier,w
 19286  25B5  0471               	iorwf	___wmul@multiplier+1,w
 19287  25B6  1D03               	btfss	3,2
 19288  25B7  2DA4               	goto	l4655
 19289  25B8  0875               	movf	___wmul@product+1,w
 19290  25B9  00F1               	movwf	?___wmul+1
 19291  25BA  0874               	movf	___wmul@product,w
 19292  25BB  00F0               	movwf	?___wmul
 19293  25BC  0008               	return
 19294  25BD                     __end_of___wmul:	
 19295                           
 19296                           	psect	text58
 19297  0801                     __ptext58:	
 19298 ;; *************** function ___lwmod *****************
 19299 ;; Defined at:
 19300 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 19301 ;; Parameters:    Size  Location     Type
 19302 ;;  divisor         2    8[COMMON] unsigned int 
 19303 ;;  dividend        2   10[COMMON] unsigned int 
 19304 ;; Auto vars:     Size  Location     Type
 19305 ;;  counter         1   13[COMMON] unsigned char 
 19306 ;; Return value:  Size  Location     Type
 19307 ;;                  2    8[COMMON] unsigned int 
 19308 ;; Registers used:
 19309 ;;		wreg, status,2, status,0
 19310 ;; Tracked objects:
 19311 ;;		On entry : 0/0
 19312 ;;		On exit  : 0/0
 19313 ;;		Unchanged: 0/0
 19314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19318 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19319 ;;Total ram usage:        6 bytes
 19320 ;; Hardware stack levels used:    1
 19321 ;; This function calls:
 19322 ;;		Nothing
 19323 ;; This function is called by:
 19324 ;;		__doprnt
 19325 ;; This function uses a non-reentrant model
 19326 ;;
 19327                           
 19328                           
 19329                           ;psect for function ___lwmod
 19330  0801                     ___lwmod:	
 19331                           
 19332                           ;incstack = 0
 19333                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 19334  0801  0878               	movf	___lwmod@divisor,w
 19335  0802  0479               	iorwf	___lwmod@divisor+1,w
 19336  0803  1903               	btfsc	3,2
 19337  0804  2828               	goto	l4711
 19338  0805  01FD               	clrf	___lwmod@counter
 19339  0806  0AFD               	incf	___lwmod@counter,f
 19340  0807                     l4701:	
 19341  0807  1BF9               	btfsc	___lwmod@divisor+1,7
 19342  0808  2813               	goto	l4703
 19343  0809  3001               	movlw	1
 19344  080A                     u3905:	
 19345  080A  35F8               	lslf	___lwmod@divisor,f
 19346  080B  0DF9               	rlf	___lwmod@divisor+1,f
 19347  080C  0B89               	decfsz	9,f
 19348  080D  280A               	goto	u3905
 19349  080E  3001               	movlw	1
 19350  080F  00FC               	movwf	??___lwmod
 19351  0810  087C               	movf	??___lwmod,w
 19352  0811  07FD               	addwf	___lwmod@counter,f
 19353  0812  2807               	goto	l4701
 19354  0813                     l4703:	
 19355  0813  0879               	movf	___lwmod@divisor+1,w
 19356  0814  027B               	subwf	___lwmod@dividend+1,w
 19357  0815  1D03               	skipz
 19358  0816  2819               	goto	u3925
 19359  0817  0878               	movf	___lwmod@divisor,w
 19360  0818  027A               	subwf	___lwmod@dividend,w
 19361  0819                     u3925:	
 19362  0819  1C03               	skipc
 19363  081A  281F               	goto	l4707
 19364  081B  0878               	movf	___lwmod@divisor,w
 19365  081C  02FA               	subwf	___lwmod@dividend,f
 19366  081D  0879               	movf	___lwmod@divisor+1,w
 19367  081E  3BFB               	subwfb	___lwmod@dividend+1,f
 19368  081F                     l4707:	
 19369  081F  3001               	movlw	1
 19370  0820                     u3935:	
 19371  0820  36F9               	lsrf	___lwmod@divisor+1,f
 19372  0821  0CF8               	rrf	___lwmod@divisor,f
 19373  0822  0B89               	decfsz	9,f
 19374  0823  2820               	goto	u3935
 19375  0824  3001               	movlw	1
 19376  0825  02FD               	subwf	___lwmod@counter,f
 19377  0826  1D03               	btfss	3,2
 19378  0827  2813               	goto	l4703
 19379  0828                     l4711:	
 19380  0828  087B               	movf	___lwmod@dividend+1,w
 19381  0829  00F9               	movwf	?___lwmod+1
 19382  082A  087A               	movf	___lwmod@dividend,w
 19383  082B  00F8               	movwf	?___lwmod
 19384  082C  0008               	return
 19385  082D                     __end_of___lwmod:	
 19386                           
 19387                           	psect	text59
 19388  18D3                     __ptext59:	
 19389 ;; *************** function ___lwdiv *****************
 19390 ;; Defined at:
 19391 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 19392 ;; Parameters:    Size  Location     Type
 19393 ;;  divisor         2    0[COMMON] unsigned int 
 19394 ;;  dividend        2    2[COMMON] unsigned int 
 19395 ;; Auto vars:     Size  Location     Type
 19396 ;;  quotient        2    5[COMMON] unsigned int 
 19397 ;;  counter         1    7[COMMON] unsigned char 
 19398 ;; Return value:  Size  Location     Type
 19399 ;;                  2    0[COMMON] unsigned int 
 19400 ;; Registers used:
 19401 ;;		wreg, status,2, status,0
 19402 ;; Tracked objects:
 19403 ;;		On entry : 0/0
 19404 ;;		On exit  : 0/0
 19405 ;;		Unchanged: 0/0
 19406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19408 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19410 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19411 ;;Total ram usage:        8 bytes
 19412 ;; Hardware stack levels used:    1
 19413 ;; This function calls:
 19414 ;;		Nothing
 19415 ;; This function is called by:
 19416 ;;		__doprnt
 19417 ;; This function uses a non-reentrant model
 19418 ;;
 19419                           
 19420                           
 19421                           ;psect for function ___lwdiv
 19422  18D3                     ___lwdiv:	
 19423                           
 19424                           ;incstack = 0
 19425                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 19426  18D3  01F5               	clrf	___lwdiv@quotient
 19427  18D4  01F6               	clrf	___lwdiv@quotient+1
 19428  18D5  0870               	movf	___lwdiv@divisor,w
 19429  18D6  0471               	iorwf	___lwdiv@divisor+1,w
 19430  18D7  1903               	btfsc	3,2
 19431  18D8  2902               	goto	l4689
 19432  18D9  01F7               	clrf	___lwdiv@counter
 19433  18DA  0AF7               	incf	___lwdiv@counter,f
 19434  18DB                     l4677:	
 19435  18DB  1BF1               	btfsc	___lwdiv@divisor+1,7
 19436  18DC  28E7               	goto	l4679
 19437  18DD  3001               	movlw	1
 19438  18DE                     u3835:	
 19439  18DE  35F0               	lslf	___lwdiv@divisor,f
 19440  18DF  0DF1               	rlf	___lwdiv@divisor+1,f
 19441  18E0  0B89               	decfsz	9,f
 19442  18E1  28DE               	goto	u3835
 19443  18E2  3001               	movlw	1
 19444  18E3  00F4               	movwf	??___lwdiv
 19445  18E4  0874               	movf	??___lwdiv,w
 19446  18E5  07F7               	addwf	___lwdiv@counter,f
 19447  18E6  28DB               	goto	l4677
 19448  18E7                     l4679:	
 19449  18E7  3001               	movlw	1
 19450  18E8                     u3855:	
 19451  18E8  35F5               	lslf	___lwdiv@quotient,f
 19452  18E9  0DF6               	rlf	___lwdiv@quotient+1,f
 19453  18EA  0B89               	decfsz	9,f
 19454  18EB  28E8               	goto	u3855
 19455  18EC  0871               	movf	___lwdiv@divisor+1,w
 19456  18ED  0273               	subwf	___lwdiv@dividend+1,w
 19457  18EE  1D03               	skipz
 19458  18EF  28F2               	goto	u3865
 19459  18F0  0870               	movf	___lwdiv@divisor,w
 19460  18F1  0272               	subwf	___lwdiv@dividend,w
 19461  18F2                     u3865:	
 19462  18F2  1C03               	skipc
 19463  18F3  28F9               	goto	l4685
 19464  18F4  0870               	movf	___lwdiv@divisor,w
 19465  18F5  02F2               	subwf	___lwdiv@dividend,f
 19466  18F6  0871               	movf	___lwdiv@divisor+1,w
 19467  18F7  3BF3               	subwfb	___lwdiv@dividend+1,f
 19468  18F8  1475               	bsf	___lwdiv@quotient,0
 19469  18F9                     l4685:	
 19470  18F9  3001               	movlw	1
 19471  18FA                     u3875:	
 19472  18FA  36F1               	lsrf	___lwdiv@divisor+1,f
 19473  18FB  0CF0               	rrf	___lwdiv@divisor,f
 19474  18FC  0B89               	decfsz	9,f
 19475  18FD  28FA               	goto	u3875
 19476  18FE  3001               	movlw	1
 19477  18FF  02F7               	subwf	___lwdiv@counter,f
 19478  1900  1D03               	btfss	3,2
 19479  1901  28E7               	goto	l4679
 19480  1902                     l4689:	
 19481  1902  0876               	movf	___lwdiv@quotient+1,w
 19482  1903  00F1               	movwf	?___lwdiv+1
 19483  1904  0875               	movf	___lwdiv@quotient,w
 19484  1905  00F0               	movwf	?___lwdiv
 19485  1906  0008               	return
 19486  1907                     __end_of___lwdiv:	
 19487                           
 19488                           	psect	text60
 19489  272B                     __ptext60:	
 19490 ;; *************** function ___lltoft *****************
 19491 ;; Defined at:
 19492 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 19493 ;; Parameters:    Size  Location     Type
 19494 ;;  c               4    8[COMMON] unsigned long 
 19495 ;; Auto vars:     Size  Location     Type
 19496 ;;  exp             1   13[COMMON] unsigned char 
 19497 ;; Return value:  Size  Location     Type
 19498 ;;                  3    8[COMMON] float 
 19499 ;; Registers used:
 19500 ;;		wreg, status,2, status,0, pclath, cstack
 19501 ;; Tracked objects:
 19502 ;;		On entry : 0/0
 19503 ;;		On exit  : 0/0
 19504 ;;		Unchanged: 0/0
 19505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19509 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19510 ;;Total ram usage:        6 bytes
 19511 ;; Hardware stack levels used:    1
 19512 ;; Hardware stack levels required when called:    1
 19513 ;; This function calls:
 19514 ;;		___ftpack
 19515 ;; This function is called by:
 19516 ;;		_dwt_configure
 19517 ;; This function uses a non-reentrant model
 19518 ;;
 19519                           
 19520                           
 19521                           ;psect for function ___lltoft
 19522  272B                     ___lltoft:	
 19523                           
 19524                           ;incstack = 0
 19525                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 19526  272B  308E               	movlw	142
 19527  272C  00FC               	movwf	??___lltoft
 19528  272D  087C               	movf	??___lltoft,w
 19529  272E  00FD               	movwf	___lltoft@exp
 19530  272F                     l5509:	
 19531  272F  30FF               	movlw	255
 19532  2730  057B               	andwf	___lltoft@c+3,w
 19533  2731  1903               	btfsc	3,2
 19534  2732  2F3F               	goto	l5511
 19535  2733  3001               	movlw	1
 19536  2734                     u5335:	
 19537  2734  36FB               	lsrf	___lltoft@c+3,f
 19538  2735  0CFA               	rrf	___lltoft@c+2,f
 19539  2736  0CF9               	rrf	___lltoft@c+1,f
 19540  2737  0CF8               	rrf	___lltoft@c,f
 19541  2738  0B89               	decfsz	9,f
 19542  2739  2F34               	goto	u5335
 19543  273A  3001               	movlw	1
 19544  273B  00FC               	movwf	??___lltoft
 19545  273C  087C               	movf	??___lltoft,w
 19546  273D  07FD               	addwf	___lltoft@exp,f
 19547  273E  2F2F               	goto	l5509
 19548  273F                     l5511:	
 19549  273F  0878               	movf	___lltoft@c,w
 19550  2740  00F0               	movwf	___ftpack@arg
 19551  2741  0879               	movf	___lltoft@c+1,w
 19552  2742  00F1               	movwf	___ftpack@arg+1
 19553  2743  087A               	movf	___lltoft@c+2,w
 19554  2744  00F2               	movwf	___ftpack@arg+2
 19555  2745  087D               	movf	___lltoft@exp,w
 19556  2746  00FC               	movwf	??___lltoft
 19557  2747  087C               	movf	??___lltoft,w
 19558  2748  00F3               	movwf	___ftpack@exp
 19559  2749  01F4               	clrf	___ftpack@sign
 19560  274A  319C  24DD         	fcall	___ftpack
 19561  274C  0870               	movf	?___ftpack,w
 19562  274D  00F8               	movwf	?___lltoft
 19563  274E  0871               	movf	?___ftpack+1,w
 19564  274F  00F9               	movwf	?___lltoft+1
 19565  2750  0872               	movf	?___ftpack+2,w
 19566  2751  00FA               	movwf	?___lltoft+2
 19567  2752  0008               	return
 19568  2753                     __end_of___lltoft:	
 19569                           
 19570                           	psect	text61
 19571  1057                     __ptext61:	
 19572 ;; *************** function ___fttol *****************
 19573 ;; Defined at:
 19574 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 19575 ;; Parameters:    Size  Location     Type
 19576 ;;  f1              3   16[BANK0 ] float 
 19577 ;; Auto vars:     Size  Location     Type
 19578 ;;  lval            4   25[BANK0 ] unsigned long 
 19579 ;;  exp1            1   29[BANK0 ] unsigned char 
 19580 ;;  sign1           1   24[BANK0 ] unsigned char 
 19581 ;; Return value:  Size  Location     Type
 19582 ;;                  4   16[BANK0 ] long 
 19583 ;; Registers used:
 19584 ;;		wreg, status,2, status,0
 19585 ;; Tracked objects:
 19586 ;;		On entry : 0/0
 19587 ;;		On exit  : 0/0
 19588 ;;		Unchanged: 0/0
 19589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19591 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19592 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19593 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19594 ;;Total ram usage:       14 bytes
 19595 ;; Hardware stack levels used:    1
 19596 ;; This function calls:
 19597 ;;		Nothing
 19598 ;; This function is called by:
 19599 ;;		_dwt_configure
 19600 ;; This function uses a non-reentrant model
 19601 ;;
 19602                           
 19603                           
 19604                           ;psect for function ___fttol
 19605  1057                     ___fttol:	
 19606                           
 19607                           ;incstack = 0
 19608                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 19609  1057  0140               	movlb	0	; select bank0
 19610  1058  0830               	movf	___fttol@f1,w
 19611  1059  00B4               	movwf	??___fttol
 19612  105A  0831               	movf	___fttol@f1+1,w
 19613  105B  00B5               	movwf	??___fttol+1
 19614  105C  0832               	movf	___fttol@f1+2,w
 19615  105D  00B6               	movwf	??___fttol+2
 19616  105E  1003               	clrc
 19617  105F  0D35               	rlf	??___fttol+1,w
 19618  1060  0D36               	rlf	??___fttol+2,w
 19619  1061  00B7               	movwf	??___fttol+3
 19620  1062  0837               	movf	??___fttol+3,w
 19621  1063  00BD               	movwf	___fttol@exp1
 19622  1064  083D               	movf	___fttol@exp1,w
 19623  1065  1D03               	btfss	3,2
 19624  1066  2870               	goto	l5469
 19625  1067  3000               	movlw	0
 19626  1068  00B3               	movwf	?___fttol+3
 19627  1069  3000               	movlw	0
 19628  106A  00B2               	movwf	?___fttol+2
 19629  106B  3000               	movlw	0
 19630  106C  00B1               	movwf	?___fttol+1
 19631  106D  3000               	movlw	0
 19632  106E  00B0               	movwf	?___fttol
 19633  106F  0008               	return
 19634  1070                     l5469:	
 19635  1070  0830               	movf	___fttol@f1,w
 19636  1071  00B4               	movwf	??___fttol
 19637  1072  0831               	movf	___fttol@f1+1,w
 19638  1073  00B5               	movwf	??___fttol+1
 19639  1074  0832               	movf	___fttol@f1+2,w
 19640  1075  00B6               	movwf	??___fttol+2
 19641  1076  3017               	movlw	23
 19642  1077                     u5245:	
 19643  1077  36B6               	lsrf	??___fttol+2,f
 19644  1078  0CB5               	rrf	??___fttol+1,f
 19645  1079  0CB4               	rrf	??___fttol,f
 19646  107A  0B89               	decfsz	9,f
 19647  107B  2877               	goto	u5245
 19648  107C  0834               	movf	??___fttol,w
 19649  107D  00B7               	movwf	??___fttol+3
 19650  107E  0837               	movf	??___fttol+3,w
 19651  107F  00B8               	movwf	___fttol@sign1
 19652  1080  17B1               	bsf	___fttol@f1+1,7
 19653  1081  30FF               	movlw	255
 19654  1082  05B0               	andwf	___fttol@f1,f
 19655  1083  30FF               	movlw	255
 19656  1084  05B1               	andwf	___fttol@f1+1,f
 19657  1085  3000               	movlw	0
 19658  1086  05B2               	andwf	___fttol@f1+2,f
 19659  1087  0830               	movf	___fttol@f1,w
 19660  1088  00B9               	movwf	___fttol@lval
 19661  1089  0831               	movf	___fttol@f1+1,w
 19662  108A  00BA               	movwf	___fttol@lval+1
 19663  108B  0832               	movf	___fttol@f1+2,w
 19664  108C  00BB               	movwf	___fttol@lval+2
 19665  108D  01BC               	clrf	___fttol@lval+3
 19666  108E  308E               	movlw	142
 19667  108F  02BD               	subwf	___fttol@exp1,f
 19668  1090  1FBD               	btfss	___fttol@exp1,7
 19669  1091  28AE               	goto	l5489
 19670  1092  083D               	movf	___fttol@exp1,w
 19671  1093  3A80               	xorlw	128
 19672  1094  3E8F               	addlw	143
 19673  1095  1803               	skipnc
 19674  1096  28A0               	goto	l5487
 19675  1097  3000               	movlw	0
 19676  1098  00B3               	movwf	?___fttol+3
 19677  1099  3000               	movlw	0
 19678  109A  00B2               	movwf	?___fttol+2
 19679  109B  3000               	movlw	0
 19680  109C  00B1               	movwf	?___fttol+1
 19681  109D  3000               	movlw	0
 19682  109E  00B0               	movwf	?___fttol
 19683  109F  0008               	return
 19684  10A0                     l5487:	
 19685  10A0  3001               	movlw	1
 19686  10A1                     u5275:	
 19687  10A1  36BC               	lsrf	___fttol@lval+3,f
 19688  10A2  0CBB               	rrf	___fttol@lval+2,f
 19689  10A3  0CBA               	rrf	___fttol@lval+1,f
 19690  10A4  0CB9               	rrf	___fttol@lval,f
 19691  10A5  0B89               	decfsz	9,f
 19692  10A6  28A1               	goto	u5275
 19693  10A7  3001               	movlw	1
 19694  10A8  00B4               	movwf	??___fttol
 19695  10A9  0834               	movf	??___fttol,w
 19696  10AA  07BD               	addwf	___fttol@exp1,f
 19697  10AB  1903               	btfsc	3,2
 19698  10AC  28C7               	goto	l5497
 19699  10AD  28A0               	goto	l5487
 19700  10AE                     l5489:	
 19701  10AE  3018               	movlw	24
 19702  10AF  023D               	subwf	___fttol@exp1,w
 19703  10B0  1C03               	skipc
 19704  10B1  28C4               	goto	l1830
 19705  10B2  3000               	movlw	0
 19706  10B3  00B3               	movwf	?___fttol+3
 19707  10B4  3000               	movlw	0
 19708  10B5  00B2               	movwf	?___fttol+2
 19709  10B6  3000               	movlw	0
 19710  10B7  00B1               	movwf	?___fttol+1
 19711  10B8  3000               	movlw	0
 19712  10B9  00B0               	movwf	?___fttol
 19713  10BA  0008               	return
 19714  10BB                     l5495:	
 19715  10BB  3001               	movlw	1
 19716  10BC                     u5305:	
 19717  10BC  35B9               	lslf	___fttol@lval,f
 19718  10BD  0DBA               	rlf	___fttol@lval+1,f
 19719  10BE  0DBB               	rlf	___fttol@lval+2,f
 19720  10BF  0DBC               	rlf	___fttol@lval+3,f
 19721  10C0  0B89               	decfsz	9,f
 19722  10C1  28BC               	goto	u5305
 19723  10C2  3001               	movlw	1
 19724  10C3  02BD               	subwf	___fttol@exp1,f
 19725  10C4                     l1830:	
 19726  10C4  083D               	movf	___fttol@exp1,w
 19727  10C5  1D03               	btfss	3,2
 19728  10C6  28BB               	goto	l5495
 19729  10C7                     l5497:	
 19730  10C7  0838               	movf	___fttol@sign1,w
 19731  10C8  1903               	btfsc	3,2
 19732  10C9  28D5               	goto	l5501
 19733  10CA  09B9               	comf	___fttol@lval,f
 19734  10CB  09BA               	comf	___fttol@lval+1,f
 19735  10CC  09BB               	comf	___fttol@lval+2,f
 19736  10CD  09BC               	comf	___fttol@lval+3,f
 19737  10CE  0AB9               	incf	___fttol@lval,f
 19738  10CF  1903               	skipnz
 19739  10D0  0ABA               	incf	___fttol@lval+1,f
 19740  10D1  1903               	skipnz
 19741  10D2  0ABB               	incf	___fttol@lval+2,f
 19742  10D3  1903               	skipnz
 19743  10D4  0ABC               	incf	___fttol@lval+3,f
 19744  10D5                     l5501:	
 19745  10D5  083C               	movf	___fttol@lval+3,w
 19746  10D6  00B3               	movwf	?___fttol+3
 19747  10D7  083B               	movf	___fttol@lval+2,w
 19748  10D8  00B2               	movwf	?___fttol+2
 19749  10D9  083A               	movf	___fttol@lval+1,w
 19750  10DA  00B1               	movwf	?___fttol+1
 19751  10DB  0839               	movf	___fttol@lval,w
 19752  10DC  00B0               	movwf	?___fttol
 19753  10DD  0008               	return
 19754  10DE                     __end_of___fttol:	
 19755                           
 19756                           	psect	text62
 19757  12B4                     __ptext62:	
 19758 ;; *************** function ___ftmul *****************
 19759 ;; Defined at:
 19760 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;  f1              3    0[BANK0 ] float 
 19763 ;;  f2              3    3[BANK0 ] float 
 19764 ;; Auto vars:     Size  Location     Type
 19765 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
 19766 ;;  sign            1   15[BANK0 ] unsigned char 
 19767 ;;  cntr            1   14[BANK0 ] unsigned char 
 19768 ;;  exp             1   10[BANK0 ] unsigned char 
 19769 ;; Return value:  Size  Location     Type
 19770 ;;                  3    0[BANK0 ] float 
 19771 ;; Registers used:
 19772 ;;		wreg, status,2, status,0, pclath, cstack
 19773 ;; Tracked objects:
 19774 ;;		On entry : 0/0
 19775 ;;		On exit  : 0/0
 19776 ;;		Unchanged: 0/0
 19777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19778 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19779 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19780 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19781 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19782 ;;Total ram usage:       16 bytes
 19783 ;; Hardware stack levels used:    1
 19784 ;; Hardware stack levels required when called:    1
 19785 ;; This function calls:
 19786 ;;		___ftpack
 19787 ;; This function is called by:
 19788 ;;		_dwt_configure
 19789 ;;		_dwt_convertrawtemperature
 19790 ;;		_dwt_convertrawvoltage
 19791 ;; This function uses a non-reentrant model
 19792 ;;
 19793                           
 19794                           
 19795                           ;psect for function ___ftmul
 19796  12B4                     ___ftmul:	
 19797                           
 19798                           ;incstack = 0
 19799                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 19800  12B4  0140               	movlb	0	; select bank0
 19801  12B5  0820               	movf	___ftmul@f1,w
 19802  12B6  00A6               	movwf	??___ftmul
 19803  12B7  0821               	movf	___ftmul@f1+1,w
 19804  12B8  00A7               	movwf	??___ftmul+1
 19805  12B9  0822               	movf	___ftmul@f1+2,w
 19806  12BA  00A8               	movwf	??___ftmul+2
 19807  12BB  1003               	clrc
 19808  12BC  0D27               	rlf	??___ftmul+1,w
 19809  12BD  0D28               	rlf	??___ftmul+2,w
 19810  12BE  00A9               	movwf	??___ftmul+3
 19811  12BF  0829               	movf	??___ftmul+3,w
 19812  12C0  00AA               	movwf	___ftmul@exp
 19813  12C1  082A               	movf	___ftmul@exp,w
 19814  12C2  1D03               	btfss	3,2
 19815  12C3  2ACB               	goto	l5419
 19816  12C4  3000               	movlw	0
 19817  12C5  00A0               	movwf	?___ftmul
 19818  12C6  3000               	movlw	0
 19819  12C7  00A1               	movwf	?___ftmul+1
 19820  12C8  3000               	movlw	0
 19821  12C9  00A2               	movwf	?___ftmul+2
 19822  12CA  0008               	return
 19823  12CB                     l5419:	
 19824  12CB  0823               	movf	___ftmul@f2,w
 19825  12CC  00A6               	movwf	??___ftmul
 19826  12CD  0824               	movf	___ftmul@f2+1,w
 19827  12CE  00A7               	movwf	??___ftmul+1
 19828  12CF  0825               	movf	___ftmul@f2+2,w
 19829  12D0  00A8               	movwf	??___ftmul+2
 19830  12D1  1003               	clrc
 19831  12D2  0D27               	rlf	??___ftmul+1,w
 19832  12D3  0D28               	rlf	??___ftmul+2,w
 19833  12D4  00A9               	movwf	??___ftmul+3
 19834  12D5  0829               	movf	??___ftmul+3,w
 19835  12D6  00AF               	movwf	___ftmul@sign
 19836  12D7  082F               	movf	___ftmul@sign,w
 19837  12D8  1D03               	btfss	3,2
 19838  12D9  2AE1               	goto	l5425
 19839  12DA  3000               	movlw	0
 19840  12DB  00A0               	movwf	?___ftmul
 19841  12DC  3000               	movlw	0
 19842  12DD  00A1               	movwf	?___ftmul+1
 19843  12DE  3000               	movlw	0
 19844  12DF  00A2               	movwf	?___ftmul+2
 19845  12E0  0008               	return
 19846  12E1                     l5425:	
 19847  12E1  082F               	movf	___ftmul@sign,w
 19848  12E2  3E7B               	addlw	123
 19849  12E3  00A6               	movwf	??___ftmul
 19850  12E4  0826               	movf	??___ftmul,w
 19851  12E5  07AA               	addwf	___ftmul@exp,f
 19852  12E6  0820               	movf	___ftmul@f1,w
 19853  12E7  00A6               	movwf	??___ftmul
 19854  12E8  0821               	movf	___ftmul@f1+1,w
 19855  12E9  00A7               	movwf	??___ftmul+1
 19856  12EA  0822               	movf	___ftmul@f1+2,w
 19857  12EB  00A8               	movwf	??___ftmul+2
 19858  12EC  3010               	movlw	16
 19859  12ED                     u5135:	
 19860  12ED  36A8               	lsrf	??___ftmul+2,f
 19861  12EE  0CA7               	rrf	??___ftmul+1,f
 19862  12EF  0CA6               	rrf	??___ftmul,f
 19863  12F0  0B89               	decfsz	9,f
 19864  12F1  2AED               	goto	u5135
 19865  12F2  0826               	movf	??___ftmul,w
 19866  12F3  00A9               	movwf	??___ftmul+3
 19867  12F4  0829               	movf	??___ftmul+3,w
 19868  12F5  00AF               	movwf	___ftmul@sign
 19869  12F6  0823               	movf	___ftmul@f2,w
 19870  12F7  00A6               	movwf	??___ftmul
 19871  12F8  0824               	movf	___ftmul@f2+1,w
 19872  12F9  00A7               	movwf	??___ftmul+1
 19873  12FA  0825               	movf	___ftmul@f2+2,w
 19874  12FB  00A8               	movwf	??___ftmul+2
 19875  12FC  3010               	movlw	16
 19876  12FD                     u5145:	
 19877  12FD  36A8               	lsrf	??___ftmul+2,f
 19878  12FE  0CA7               	rrf	??___ftmul+1,f
 19879  12FF  0CA6               	rrf	??___ftmul,f
 19880  1300  0B89               	decfsz	9,f
 19881  1301  2AFD               	goto	u5145
 19882  1302  0826               	movf	??___ftmul,w
 19883  1303  00A9               	movwf	??___ftmul+3
 19884  1304  0829               	movf	??___ftmul+3,w
 19885  1305  06AF               	xorwf	___ftmul@sign,f
 19886  1306  3080               	movlw	128
 19887  1307  00A6               	movwf	??___ftmul
 19888  1308  0826               	movf	??___ftmul,w
 19889  1309  05AF               	andwf	___ftmul@sign,f
 19890  130A  17A1               	bsf	___ftmul@f1+1,7
 19891  130B  17A4               	bsf	___ftmul@f2+1,7
 19892  130C  30FF               	movlw	255
 19893  130D  05A3               	andwf	___ftmul@f2,f
 19894  130E  30FF               	movlw	255
 19895  130F  05A4               	andwf	___ftmul@f2+1,f
 19896  1310  3000               	movlw	0
 19897  1311  05A5               	andwf	___ftmul@f2+2,f
 19898  1312  3000               	movlw	0
 19899  1313  00AB               	movwf	___ftmul@f3_as_product
 19900  1314  3000               	movlw	0
 19901  1315  00AC               	movwf	___ftmul@f3_as_product+1
 19902  1316  3000               	movlw	0
 19903  1317  00AD               	movwf	___ftmul@f3_as_product+2
 19904  1318  3007               	movlw	7
 19905  1319  00A6               	movwf	??___ftmul
 19906  131A  0826               	movf	??___ftmul,w
 19907  131B  00AE               	movwf	___ftmul@cntr
 19908  131C                     l5437:	
 19909  131C  1C20               	btfss	___ftmul@f1,0
 19910  131D  2B24               	goto	l5441
 19911  131E  0823               	movf	___ftmul@f2,w
 19912  131F  07AB               	addwf	___ftmul@f3_as_product,f
 19913  1320  0824               	movf	___ftmul@f2+1,w
 19914  1321  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 19915  1322  0825               	movf	___ftmul@f2+2,w
 19916  1323  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 19917  1324                     l5441:	
 19918  1324  3001               	movlw	1
 19919  1325                     u5165:	
 19920  1325  36A2               	lsrf	___ftmul@f1+2,f
 19921  1326  0CA1               	rrf	___ftmul@f1+1,f
 19922  1327  0CA0               	rrf	___ftmul@f1,f
 19923  1328  0B89               	decfsz	9,f
 19924  1329  2B25               	goto	u5165
 19925  132A  3001               	movlw	1
 19926  132B                     u5175:	
 19927  132B  35A3               	lslf	___ftmul@f2,f
 19928  132C  0DA4               	rlf	___ftmul@f2+1,f
 19929  132D  0DA5               	rlf	___ftmul@f2+2,f
 19930  132E  0B89               	decfsz	9,f
 19931  132F  2B2B               	goto	u5175
 19932  1330  3001               	movlw	1
 19933  1331  02AE               	subwf	___ftmul@cntr,f
 19934  1332  1D03               	btfss	3,2
 19935  1333  2B1C               	goto	l5437
 19936  1334  3009               	movlw	9
 19937  1335  00A6               	movwf	??___ftmul
 19938  1336  0826               	movf	??___ftmul,w
 19939  1337  00AE               	movwf	___ftmul@cntr
 19940  1338                     l5449:	
 19941  1338  1C20               	btfss	___ftmul@f1,0
 19942  1339  2B40               	goto	l5453
 19943  133A  0823               	movf	___ftmul@f2,w
 19944  133B  07AB               	addwf	___ftmul@f3_as_product,f
 19945  133C  0824               	movf	___ftmul@f2+1,w
 19946  133D  3DAC               	addwfc	___ftmul@f3_as_product+1,f
 19947  133E  0825               	movf	___ftmul@f2+2,w
 19948  133F  3DAD               	addwfc	___ftmul@f3_as_product+2,f
 19949  1340                     l5453:	
 19950  1340  3001               	movlw	1
 19951  1341                     u5205:	
 19952  1341  36A2               	lsrf	___ftmul@f1+2,f
 19953  1342  0CA1               	rrf	___ftmul@f1+1,f
 19954  1343  0CA0               	rrf	___ftmul@f1,f
 19955  1344  0B89               	decfsz	9,f
 19956  1345  2B41               	goto	u5205
 19957  1346  3001               	movlw	1
 19958  1347                     u5215:	
 19959  1347  36AD               	lsrf	___ftmul@f3_as_product+2,f
 19960  1348  0CAC               	rrf	___ftmul@f3_as_product+1,f
 19961  1349  0CAB               	rrf	___ftmul@f3_as_product,f
 19962  134A  0B89               	decfsz	9,f
 19963  134B  2B47               	goto	u5215
 19964  134C  3001               	movlw	1
 19965  134D  02AE               	subwf	___ftmul@cntr,f
 19966  134E  1D03               	btfss	3,2
 19967  134F  2B38               	goto	l5449
 19968  1350  082B               	movf	___ftmul@f3_as_product,w
 19969  1351  00F0               	movwf	___ftpack@arg
 19970  1352  082C               	movf	___ftmul@f3_as_product+1,w
 19971  1353  00F1               	movwf	___ftpack@arg+1
 19972  1354  082D               	movf	___ftmul@f3_as_product+2,w
 19973  1355  00F2               	movwf	___ftpack@arg+2
 19974  1356  082A               	movf	___ftmul@exp,w
 19975  1357  00A6               	movwf	??___ftmul
 19976  1358  0826               	movf	??___ftmul,w
 19977  1359  00F3               	movwf	___ftpack@exp
 19978  135A  082F               	movf	___ftmul@sign,w
 19979  135B  00A7               	movwf	??___ftmul+1
 19980  135C  0827               	movf	??___ftmul+1,w
 19981  135D  00F4               	movwf	___ftpack@sign
 19982  135E  319C  24DD         	fcall	___ftpack
 19983  1360  0870               	movf	?___ftpack,w
 19984  1361  0140               	movlb	0	; select bank0
 19985  1362  00A0               	movwf	?___ftmul
 19986  1363  0871               	movf	?___ftpack+1,w
 19987  1364  00A1               	movwf	?___ftmul+1
 19988  1365  0872               	movf	?___ftpack+2,w
 19989  1366  00A2               	movwf	?___ftmul+2
 19990  1367  0008               	return
 19991  1368                     __end_of___ftmul:	
 19992                           
 19993                           	psect	text63
 19994  1CDD                     __ptext63:	
 19995 ;; *************** function ___ftpack *****************
 19996 ;; Defined at:
 19997 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 19998 ;; Parameters:    Size  Location     Type
 19999 ;;  arg             3    0[COMMON] unsigned um
 20000 ;;  exp             1    3[COMMON] unsigned char 
 20001 ;;  sign            1    4[COMMON] unsigned char 
 20002 ;; Auto vars:     Size  Location     Type
 20003 ;;		None
 20004 ;; Return value:  Size  Location     Type
 20005 ;;                  3    0[COMMON] float 
 20006 ;; Registers used:
 20007 ;;		wreg, status,2, status,0
 20008 ;; Tracked objects:
 20009 ;;		On entry : 0/0
 20010 ;;		On exit  : 0/0
 20011 ;;		Unchanged: 0/0
 20012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20013 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20015 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20016 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20017 ;;Total ram usage:        8 bytes
 20018 ;; Hardware stack levels used:    1
 20019 ;; This function calls:
 20020 ;;		Nothing
 20021 ;; This function is called by:
 20022 ;;		___ftmul
 20023 ;;		___lltoft
 20024 ;;		___ftadd
 20025 ;;		___awtoft
 20026 ;;		___ftdiv
 20027 ;; This function uses a non-reentrant model
 20028 ;;
 20029                           
 20030                           
 20031                           ;psect for function ___ftpack
 20032  1CDD                     ___ftpack:	
 20033                           
 20034                           ;incstack = 0
 20035                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 20036  1CDD  0873               	movf	___ftpack@exp,w
 20037  1CDE  1903               	btfsc	3,2
 20038  1CDF  2CE5               	goto	l5259
 20039  1CE0  0872               	movf	___ftpack@arg+2,w
 20040  1CE1  0471               	iorwf	___ftpack@arg+1,w
 20041  1CE2  0470               	iorwf	___ftpack@arg,w
 20042  1CE3  1D03               	skipz
 20043  1CE4  2CF6               	goto	l5265
 20044  1CE5                     l5259:	
 20045  1CE5  3000               	movlw	0
 20046  1CE6  00F0               	movwf	?___ftpack
 20047  1CE7  3000               	movlw	0
 20048  1CE8  00F1               	movwf	?___ftpack+1
 20049  1CE9  3000               	movlw	0
 20050  1CEA  00F2               	movwf	?___ftpack+2
 20051  1CEB  0008               	return
 20052  1CEC                     l5263:	
 20053  1CEC  3001               	movlw	1
 20054  1CED  00F5               	movwf	??___ftpack
 20055  1CEE  0875               	movf	??___ftpack,w
 20056  1CEF  07F3               	addwf	___ftpack@exp,f
 20057  1CF0  3001               	movlw	1
 20058  1CF1                     u4835:	
 20059  1CF1  36F2               	lsrf	___ftpack@arg+2,f
 20060  1CF2  0CF1               	rrf	___ftpack@arg+1,f
 20061  1CF3  0CF0               	rrf	___ftpack@arg,f
 20062  1CF4  0B89               	decfsz	9,f
 20063  1CF5  2CF1               	goto	u4835
 20064  1CF6                     l5265:	
 20065  1CF6  30FE               	movlw	254
 20066  1CF7  0572               	andwf	___ftpack@arg+2,w
 20067  1CF8  1903               	btfsc	3,2
 20068  1CF9  2D0F               	goto	l1739
 20069  1CFA  2CEC               	goto	l5263
 20070  1CFB                     l5267:	
 20071  1CFB  3001               	movlw	1
 20072  1CFC  00F5               	movwf	??___ftpack
 20073  1CFD  0875               	movf	??___ftpack,w
 20074  1CFE  07F3               	addwf	___ftpack@exp,f
 20075  1CFF  3001               	movlw	1
 20076  1D00  07F0               	addwf	___ftpack@arg,f
 20077  1D01  3000               	movlw	0
 20078  1D02  1803               	skipnc
 20079  1D03  3001               	movlw	1
 20080  1D04  07F1               	addwf	___ftpack@arg+1,f
 20081  1D05  3000               	movlw	0
 20082  1D06  1803               	skipnc
 20083  1D07  3001               	movlw	1
 20084  1D08  07F2               	addwf	___ftpack@arg+2,f
 20085  1D09  3001               	movlw	1
 20086  1D0A                     u4855:	
 20087  1D0A  36F2               	lsrf	___ftpack@arg+2,f
 20088  1D0B  0CF1               	rrf	___ftpack@arg+1,f
 20089  1D0C  0CF0               	rrf	___ftpack@arg,f
 20090  1D0D  0B89               	decfsz	9,f
 20091  1D0E  2D0A               	goto	u4855
 20092  1D0F                     l1739:	
 20093  1D0F  30FF               	movlw	255
 20094  1D10  0572               	andwf	___ftpack@arg+2,w
 20095  1D11  1903               	btfsc	3,2
 20096  1D12  2D1C               	goto	l5275
 20097  1D13  2CFB               	goto	l5267
 20098  1D14                     l5273:	
 20099  1D14  3001               	movlw	1
 20100  1D15  02F3               	subwf	___ftpack@exp,f
 20101  1D16  3001               	movlw	1
 20102  1D17                     u4875:	
 20103  1D17  35F0               	lslf	___ftpack@arg,f
 20104  1D18  0DF1               	rlf	___ftpack@arg+1,f
 20105  1D19  0DF2               	rlf	___ftpack@arg+2,f
 20106  1D1A  0B89               	decfsz	9,f
 20107  1D1B  2D17               	goto	u4875
 20108  1D1C                     l5275:	
 20109  1D1C  1BF1               	btfsc	___ftpack@arg+1,7
 20110  1D1D  2D22               	goto	l1746
 20111  1D1E  3002               	movlw	2
 20112  1D1F  0273               	subwf	___ftpack@exp,w
 20113  1D20  1803               	skipnc
 20114  1D21  2D14               	goto	l5273
 20115  1D22                     l1746:	
 20116  1D22  1873               	btfsc	___ftpack@exp,0
 20117  1D23  2D2A               	goto	l1747
 20118  1D24  30FF               	movlw	255
 20119  1D25  05F0               	andwf	___ftpack@arg,f
 20120  1D26  307F               	movlw	127
 20121  1D27  05F1               	andwf	___ftpack@arg+1,f
 20122  1D28  30FF               	movlw	255
 20123  1D29  05F2               	andwf	___ftpack@arg+2,f
 20124  1D2A                     l1747:	
 20125  1D2A  1003               	clrc
 20126  1D2B  0CF3               	rrf	___ftpack@exp,f
 20127  1D2C  0873               	movf	___ftpack@exp,w
 20128  1D2D  00F5               	movwf	??___ftpack
 20129  1D2E  01F6               	clrf	??___ftpack+1
 20130  1D2F  01F7               	clrf	??___ftpack+2
 20131  1D30  3010               	movlw	16
 20132  1D31                     u4915:	
 20133  1D31  35F5               	lslf	??___ftpack,f
 20134  1D32  0DF6               	rlf	??___ftpack+1,f
 20135  1D33  0DF7               	rlf	??___ftpack+2,f
 20136  1D34  0B89               	decfsz	9,f
 20137  1D35  2D31               	goto	u4915
 20138  1D36  0875               	movf	??___ftpack,w
 20139  1D37  04F0               	iorwf	___ftpack@arg,f
 20140  1D38  0876               	movf	??___ftpack+1,w
 20141  1D39  04F1               	iorwf	___ftpack@arg+1,f
 20142  1D3A  0877               	movf	??___ftpack+2,w
 20143  1D3B  04F2               	iorwf	___ftpack@arg+2,f
 20144  1D3C  0874               	movf	___ftpack@sign,w
 20145  1D3D  1903               	btfsc	3,2
 20146  1D3E  0008               	return
 20147  1D3F  17F2               	bsf	___ftpack@arg+2,7
 20148  1D40  0008               	return
 20149  1D41                     __end_of___ftpack:	
 20150                           
 20151                           	psect	text64
 20152  2510                     __ptext64:	
 20153 ;; *************** function _SYSTEM_Initialize *****************
 20154 ;; Defined at:
 20155 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20156 ;; Parameters:    Size  Location     Type
 20157 ;;		None
 20158 ;; Auto vars:     Size  Location     Type
 20159 ;;		None
 20160 ;; Return value:  Size  Location     Type
 20161 ;;                  1    wreg      void 
 20162 ;; Registers used:
 20163 ;;		wreg, status,2, status,0, pclath, cstack
 20164 ;; Tracked objects:
 20165 ;;		On entry : 0/0
 20166 ;;		On exit  : 0/0
 20167 ;;		Unchanged: 0/0
 20168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20173 ;;Total ram usage:        0 bytes
 20174 ;; Hardware stack levels used:    1
 20175 ;; Hardware stack levels required when called:    1
 20176 ;; This function calls:
 20177 ;;		_EUSART_Initialize
 20178 ;;		_OSCILLATOR_Initialize
 20179 ;;		_PIN_MANAGER_Initialize
 20180 ;;		_PMD_Initialize
 20181 ;;		_SPI1_Initialize
 20182 ;; This function is called by:
 20183 ;;		_main
 20184 ;; This function uses a non-reentrant model
 20185 ;;
 20186                           
 20187                           
 20188                           ;psect for function _SYSTEM_Initialize
 20189  2510                     _SYSTEM_Initialize:	
 20190                           
 20191                           ;mcc.c: 52: PMD_Initialize();
 20192                           
 20193                           ;incstack = 0
 20194                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20195  2510  31A4  24AD  31A5   	fcall	_PMD_Initialize
 20196                           
 20197                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 20198  2513  319B  2382  31A5   	fcall	_PIN_MANAGER_Initialize
 20199                           
 20200                           ;mcc.c: 55: OSCILLATOR_Initialize();
 20201  2516  31A4  24BD  31A5   	fcall	_OSCILLATOR_Initialize
 20202                           
 20203                           ;mcc.c: 57: EUSART_Initialize();
 20204  2519  31A4  24C6  31A5   	fcall	_EUSART_Initialize
 20205                           
 20206                           ;mcc.c: 58: SPI1_Initialize();
 20207  251C  31A7  27A6         	fcall	_SPI1_Initialize
 20208  251E  0008               	return
 20209  251F                     __end_of_SYSTEM_Initialize:	
 20210                           
 20211                           	psect	text65
 20212  27A6                     __ptext65:	
 20213 ;; *************** function _SPI1_Initialize *****************
 20214 ;; Defined at:
 20215 ;;		line 64 in file "mcc_generated_files/spi1.c"
 20216 ;; Parameters:    Size  Location     Type
 20217 ;;		None
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;  state           1    0[COMMON] unsigned char 
 20220 ;; Return value:  Size  Location     Type
 20221 ;;                  1    wreg      void 
 20222 ;; Registers used:
 20223 ;;		wreg, status,2
 20224 ;; Tracked objects:
 20225 ;;		On entry : 0/0
 20226 ;;		On exit  : 0/0
 20227 ;;		Unchanged: 0/0
 20228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20233 ;;Total ram usage:        1 bytes
 20234 ;; Hardware stack levels used:    1
 20235 ;; This function calls:
 20236 ;;		Nothing
 20237 ;; This function is called by:
 20238 ;;		_SYSTEM_Initialize
 20239 ;; This function uses a non-reentrant model
 20240 ;;
 20241                           
 20242                           
 20243                           ;psect for function _SPI1_Initialize
 20244  27A6                     _SPI1_Initialize:	
 20245                           
 20246                           ;spi1.c: 66: bool state = GIE;
 20247                           
 20248                           ;incstack = 0
 20249                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
 20250  27A6  3000               	movlw	0
 20251  27A7  1B8B               	btfsc	11,7	;volatile
 20252  27A8  3001               	movlw	1
 20253  27A9  00F0               	movwf	SPI1_Initialize@state
 20254                           
 20255                           ;spi1.c: 67: GIE = 0;
 20256  27AA  138B               	bcf	11,7	;volatile
 20257                           
 20258                           ;spi1.c: 68: PPSLOCK = 0x55;
 20259  27AB  3055               	movlw	85
 20260  27AC  017D               	movlb	61	; select bank61
 20261  27AD  008F               	movwf	15	;volsfr
 20262                           
 20263                           ;spi1.c: 69: PPSLOCK = 0xAA;
 20264  27AE  30AA               	movlw	170
 20265  27AF  008F               	movwf	15	;volsfr
 20266                           
 20267                           ;spi1.c: 70: PPSLOCKbits.PPSLOCKED = 0x00;
 20268  27B0  100F               	bcf	15,0	;volsfr
 20269                           
 20270                           ;spi1.c: 72: SSP1CLKPPS = 18;
 20271  27B1  3012               	movlw	18
 20272  27B2  00C5               	movwf	69	;volatile
 20273                           
 20274                           ;spi1.c: 73: SSP1DATPPS = 16;
 20275  27B3  3010               	movlw	16
 20276  27B4  00C6               	movwf	70	;volatile
 20277                           
 20278                           ;spi1.c: 74: RC2PPS = 20;
 20279  27B5  3014               	movlw	20
 20280  27B6  017E               	movlb	62	; select bank62
 20281  27B7  00A2               	movwf	34	;volatile
 20282                           
 20283                           ;spi1.c: 75: RC1PPS = 21;
 20284  27B8  3015               	movlw	21
 20285  27B9  00A1               	movwf	33	;volatile
 20286                           
 20287                           ;spi1.c: 77: SSP1STAT = 0x80;
 20288  27BA  3080               	movlw	128
 20289  27BB  0143               	movlb	3	; select bank3
 20290  27BC  008F               	movwf	15	;volatile
 20291                           
 20292                           ;spi1.c: 78: SSP1CON1 = 0x00;
 20293  27BD  0190               	clrf	16	;volatile
 20294                           
 20295                           ;spi1.c: 79: SSP1ADD = 0x01;
 20296  27BE  3001               	movlw	1
 20297  27BF  008D               	movwf	13	;volatile
 20298                           
 20299                           ;spi1.c: 80: TRISCbits.TRISC2 = 0;
 20300  27C0  0140               	movlb	0	; select bank0
 20301  27C1  1113               	bcf	19,2	;volatile
 20302                           
 20303                           ;spi1.c: 81: TRISCbits.TRISC0 = 1;
 20304  27C2  1413               	bsf	19,0	;volatile
 20305                           
 20306                           ;spi1.c: 82: SSP1CON1bits.SSPEN = 0;
 20307  27C3  0143               	movlb	3	; select bank3
 20308  27C4  1290               	bcf	16,5	;volatile
 20309                           
 20310                           ;spi1.c: 85: PPSLOCK = 0x55;
 20311  27C5  3055               	movlw	85
 20312  27C6  017D               	movlb	61	; select bank61
 20313  27C7  008F               	movwf	15	;volsfr
 20314                           
 20315                           ;spi1.c: 86: PPSLOCK = 0xAA;
 20316  27C8  30AA               	movlw	170
 20317  27C9  008F               	movwf	15	;volsfr
 20318                           
 20319                           ;spi1.c: 87: PPSLOCKbits.PPSLOCKED = 0x01;
 20320  27CA  140F               	bsf	15,0	;volsfr
 20321                           
 20322                           ;spi1.c: 88: GIE = state;
 20323  27CB  1C70               	btfss	SPI1_Initialize@state,0
 20324  27CC  2FCF               	goto	u1630
 20325  27CD  178B               	bsf	11,7	;volatile
 20326  27CE  0008               	return
 20327  27CF                     u1630:	
 20328  27CF  138B               	bcf	11,7	;volatile
 20329  27D0  0008               	return
 20330  27D1                     __end_of_SPI1_Initialize:	
 20331                           
 20332                           	psect	text66
 20333  24AD                     __ptext66:	
 20334 ;; *************** function _PMD_Initialize *****************
 20335 ;; Defined at:
 20336 ;;		line 75 in file "mcc_generated_files/mcc.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;		None
 20339 ;; Auto vars:     Size  Location     Type
 20340 ;;		None
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  1    wreg      void 
 20343 ;; Registers used:
 20344 ;;		status,2
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/0
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20354 ;;Total ram usage:        0 bytes
 20355 ;; Hardware stack levels used:    1
 20356 ;; This function calls:
 20357 ;;		Nothing
 20358 ;; This function is called by:
 20359 ;;		_SYSTEM_Initialize
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           
 20364                           ;psect for function _PMD_Initialize
 20365  24AD                     _PMD_Initialize:	
 20366                           
 20367                           ;mcc.c: 78: PMD0 = 0x00;
 20368                           
 20369                           ;incstack = 0
 20370                           ; Regs used in _PMD_Initialize: [status,2]
 20371  24AD  014F               	movlb	15	; select bank15
 20372  24AE  0196               	clrf	22	;volatile
 20373                           
 20374                           ;mcc.c: 80: PMD1 = 0x00;
 20375  24AF  0197               	clrf	23	;volatile
 20376                           
 20377                           ;mcc.c: 82: PMD2 = 0x00;
 20378  24B0  0198               	clrf	24	;volatile
 20379                           
 20380                           ;mcc.c: 84: PMD3 = 0x00;
 20381  24B1  0199               	clrf	25	;volatile
 20382                           
 20383                           ;mcc.c: 86: PMD4 = 0x00;
 20384  24B2  019A               	clrf	26	;volatile
 20385                           
 20386                           ;mcc.c: 88: PMD5 = 0x00;
 20387  24B3  019B               	clrf	27	;volatile
 20388  24B4  0008               	return
 20389  24B5                     __end_of_PMD_Initialize:	
 20390                           
 20391                           	psect	text67
 20392  1B82                     __ptext67:	
 20393 ;; *************** function _PIN_MANAGER_Initialize *****************
 20394 ;; Defined at:
 20395 ;;		line 147 in file "mcc_generated_files/pin_manager.c"
 20396 ;; Parameters:    Size  Location     Type
 20397 ;;		None
 20398 ;; Auto vars:     Size  Location     Type
 20399 ;;  state           1    0[COMMON] unsigned char 
 20400 ;; Return value:  Size  Location     Type
 20401 ;;                  1    wreg      void 
 20402 ;; Registers used:
 20403 ;;		wreg, status,2
 20404 ;; Tracked objects:
 20405 ;;		On entry : 0/0
 20406 ;;		On exit  : 0/0
 20407 ;;		Unchanged: 0/0
 20408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20413 ;;Total ram usage:        1 bytes
 20414 ;; Hardware stack levels used:    1
 20415 ;; This function calls:
 20416 ;;		Nothing
 20417 ;; This function is called by:
 20418 ;;		_SYSTEM_Initialize
 20419 ;; This function uses a non-reentrant model
 20420 ;;
 20421                           
 20422                           
 20423                           ;psect for function _PIN_MANAGER_Initialize
 20424  1B82                     _PIN_MANAGER_Initialize:	
 20425                           
 20426                           ;pin_manager.c: 152: LATE = 0x00;
 20427                           
 20428                           ;incstack = 0
 20429                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 20430  1B82  0140               	movlb	0	; select bank0
 20431  1B83  019A               	clrf	26	;volatile
 20432                           
 20433                           ;pin_manager.c: 153: LATD = 0x01;
 20434  1B84  3001               	movlw	1
 20435  1B85  0099               	movwf	25	;volatile
 20436                           
 20437                           ;pin_manager.c: 154: LATA = 0x00;
 20438  1B86  0196               	clrf	22	;volatile
 20439                           
 20440                           ;pin_manager.c: 155: LATB = 0x00;
 20441  1B87  0197               	clrf	23	;volatile
 20442                           
 20443                           ;pin_manager.c: 156: LATC = 0x00;
 20444  1B88  0198               	clrf	24	;volatile
 20445                           
 20446                           ;pin_manager.c: 161: TRISE = 0x07;
 20447  1B89  3007               	movlw	7
 20448  1B8A  0095               	movwf	21	;volatile
 20449                           
 20450                           ;pin_manager.c: 162: TRISA = 0x3F;
 20451  1B8B  303F               	movlw	63
 20452  1B8C  0091               	movwf	17	;volatile
 20453                           
 20454                           ;pin_manager.c: 163: TRISB = 0xEF;
 20455  1B8D  30EF               	movlw	239
 20456  1B8E  0092               	movwf	18	;volatile
 20457                           
 20458                           ;pin_manager.c: 164: TRISC = 0xF9;
 20459  1B8F  30F9               	movlw	249
 20460  1B90  0093               	movwf	19	;volatile
 20461                           
 20462                           ;pin_manager.c: 165: TRISD = 0xFE;
 20463  1B91  30FE               	movlw	254
 20464  1B92  0094               	movwf	20	;volatile
 20465                           
 20466                           ;pin_manager.c: 170: ANSELD = 0xFE;
 20467  1B93  30FE               	movlw	254
 20468  1B94  017E               	movlb	62	; select bank62
 20469  1B95  00D9               	movwf	89	;volatile
 20470                           
 20471                           ;pin_manager.c: 171: ANSELC = 0x7A;
 20472  1B96  307A               	movlw	122
 20473  1B97  00CE               	movwf	78	;volatile
 20474                           
 20475                           ;pin_manager.c: 172: ANSELB = 0xFF;
 20476  1B98  30FF               	movlw	255
 20477  1B99  00C3               	movwf	67	;volatile
 20478                           
 20479                           ;pin_manager.c: 173: ANSELE = 0x07;
 20480  1B9A  3007               	movlw	7
 20481  1B9B  00E4               	movwf	100	;volatile
 20482                           
 20483                           ;pin_manager.c: 174: ANSELA = 0xFF;
 20484  1B9C  30FF               	movlw	255
 20485  1B9D  00B8               	movwf	56	;volatile
 20486                           
 20487                           ;pin_manager.c: 179: WPUD = 0x00;
 20488  1B9E  01DA               	clrf	90	;volatile
 20489                           
 20490                           ;pin_manager.c: 180: WPUE = 0x00;
 20491  1B9F  01E5               	clrf	101	;volatile
 20492                           
 20493                           ;pin_manager.c: 181: WPUB = 0x00;
 20494  1BA0  01C4               	clrf	68	;volatile
 20495                           
 20496                           ;pin_manager.c: 182: WPUA = 0x00;
 20497  1BA1  01B9               	clrf	57	;volatile
 20498                           
 20499                           ;pin_manager.c: 183: WPUC = 0x00;
 20500  1BA2  01CF               	clrf	79	;volatile
 20501                           
 20502                           ;pin_manager.c: 188: ODCONE = 0x00;
 20503  1BA3  01E6               	clrf	102	;volatile
 20504                           
 20505                           ;pin_manager.c: 189: ODCONA = 0x00;
 20506  1BA4  01BA               	clrf	58	;volatile
 20507                           
 20508                           ;pin_manager.c: 190: ODCONB = 0x00;
 20509  1BA5  01C5               	clrf	69	;volatile
 20510                           
 20511                           ;pin_manager.c: 191: ODCONC = 0x00;
 20512  1BA6  01D0               	clrf	80	;volatile
 20513                           
 20514                           ;pin_manager.c: 192: ODCOND = 0x00;
 20515  1BA7  01DB               	clrf	91	;volatile
 20516                           
 20517                           ;pin_manager.c: 200: bool state = GIE;
 20518  1BA8  3000               	movlw	0
 20519  1BA9  1B8B               	btfsc	11,7	;volatile
 20520  1BAA  3001               	movlw	1
 20521  1BAB  00F0               	movwf	PIN_MANAGER_Initialize@state
 20522                           
 20523                           ;pin_manager.c: 201: GIE = 0;
 20524  1BAC  138B               	bcf	11,7	;volatile
 20525                           
 20526                           ;pin_manager.c: 202: PPSLOCK = 0x55;
 20527  1BAD  3055               	movlw	85
 20528  1BAE  017D               	movlb	61	; select bank61
 20529  1BAF  008F               	movwf	15	;volsfr
 20530                           
 20531                           ;pin_manager.c: 203: PPSLOCK = 0xAA;
 20532  1BB0  30AA               	movlw	170
 20533  1BB1  008F               	movwf	15	;volsfr
 20534                           
 20535                           ;pin_manager.c: 204: PPSLOCKbits.PPSLOCKED = 0x00;
 20536  1BB2  100F               	bcf	15,0	;volsfr
 20537                           
 20538                           ;pin_manager.c: 205: TRISCbits.TRISC5 = 0;
 20539  1BB3  0140               	movlb	0	; select bank0
 20540  1BB4  1293               	bcf	19,5	;volatile
 20541                           
 20542                           ;pin_manager.c: 206: TRISCbits.TRISC7 = 1;
 20543  1BB5  1793               	bsf	19,7	;volatile
 20544                           
 20545                           ;pin_manager.c: 210: RXPPS = 0x17;
 20546  1BB6  3017               	movlw	23
 20547  1BB7  017D               	movlb	61	; select bank61
 20548  1BB8  00CB               	movwf	75	;volatile
 20549                           
 20550                           ;pin_manager.c: 211: SSP1CLKPPS = 0x12;
 20551  1BB9  3012               	movlw	18
 20552  1BBA  00C5               	movwf	69	;volatile
 20553                           
 20554                           ;pin_manager.c: 212: RC1PPS = 0x15;
 20555  1BBB  3015               	movlw	21
 20556  1BBC  017E               	movlb	62	; select bank62
 20557  1BBD  00A1               	movwf	33	;volatile
 20558                           
 20559                           ;pin_manager.c: 213: RC2PPS = 0x14;
 20560  1BBE  3014               	movlw	20
 20561  1BBF  00A2               	movwf	34	;volatile
 20562                           
 20563                           ;pin_manager.c: 214: RC5PPS = 0x10;
 20564  1BC0  3010               	movlw	16
 20565  1BC1  00A5               	movwf	37	;volatile
 20566                           
 20567                           ;pin_manager.c: 215: SSP1DATPPS = 0x10;
 20568  1BC2  3010               	movlw	16
 20569  1BC3  017D               	movlb	61	; select bank61
 20570  1BC4  00C6               	movwf	70	;volatile
 20571                           
 20572                           ;pin_manager.c: 217: PPSLOCK = 0x55;
 20573  1BC5  3055               	movlw	85
 20574  1BC6  008F               	movwf	15	;volsfr
 20575                           
 20576                           ;pin_manager.c: 218: PPSLOCK = 0xAA;
 20577  1BC7  30AA               	movlw	170
 20578  1BC8  008F               	movwf	15	;volsfr
 20579                           
 20580                           ;pin_manager.c: 219: PPSLOCKbits.PPSLOCKED = 0x01;
 20581  1BC9  140F               	bsf	15,0	;volsfr
 20582                           
 20583                           ;pin_manager.c: 220: GIE = state;
 20584  1BCA  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 20585  1BCB  2BCE               	goto	u1610
 20586  1BCC  178B               	bsf	11,7	;volatile
 20587  1BCD  0008               	return
 20588  1BCE                     u1610:	
 20589  1BCE  138B               	bcf	11,7	;volatile
 20590  1BCF  0008               	return
 20591  1BD0                     __end_of_PIN_MANAGER_Initialize:	
 20592                           
 20593                           	psect	text68
 20594  24BD                     __ptext68:	
 20595 ;; *************** function _OSCILLATOR_Initialize *****************
 20596 ;; Defined at:
 20597 ;;		line 61 in file "mcc_generated_files/mcc.c"
 20598 ;; Parameters:    Size  Location     Type
 20599 ;;		None
 20600 ;; Auto vars:     Size  Location     Type
 20601 ;;		None
 20602 ;; Return value:  Size  Location     Type
 20603 ;;                  1    wreg      void 
 20604 ;; Registers used:
 20605 ;;		wreg, status,2
 20606 ;; Tracked objects:
 20607 ;;		On entry : 0/0
 20608 ;;		On exit  : 0/0
 20609 ;;		Unchanged: 0/0
 20610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20615 ;;Total ram usage:        0 bytes
 20616 ;; Hardware stack levels used:    1
 20617 ;; This function calls:
 20618 ;;		Nothing
 20619 ;; This function is called by:
 20620 ;;		_SYSTEM_Initialize
 20621 ;; This function uses a non-reentrant model
 20622 ;;
 20623                           
 20624                           
 20625                           ;psect for function _OSCILLATOR_Initialize
 20626  24BD                     _OSCILLATOR_Initialize:	
 20627                           
 20628                           ;mcc.c: 64: OSCCON1 = 0x60;
 20629                           
 20630                           ;incstack = 0
 20631                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 20632  24BD  3060               	movlw	96
 20633  24BE  0151               	movlb	17	; select bank17
 20634  24BF  008D               	movwf	13	;volatile
 20635                           
 20636                           ;mcc.c: 66: OSCCON3 = 0x00;
 20637  24C0  018F               	clrf	15	;volatile
 20638                           
 20639                           ;mcc.c: 68: OSCEN = 0x00;
 20640  24C1  0191               	clrf	17	;volatile
 20641                           
 20642                           ;mcc.c: 70: OSCFRQ = 0x06;
 20643  24C2  3006               	movlw	6
 20644  24C3  0093               	movwf	19	;volatile
 20645                           
 20646                           ;mcc.c: 72: OSCTUNE = 0x00;
 20647  24C4  0192               	clrf	18	;volatile
 20648  24C5  0008               	return
 20649  24C6                     __end_of_OSCILLATOR_Initialize:	
 20650                           
 20651                           	psect	text69
 20652  24C6                     __ptext69:	
 20653 ;; *************** function _EUSART_Initialize *****************
 20654 ;; Defined at:
 20655 ;;		line 66 in file "mcc_generated_files/eusart.c"
 20656 ;; Parameters:    Size  Location     Type
 20657 ;;		None
 20658 ;; Auto vars:     Size  Location     Type
 20659 ;;		None
 20660 ;; Return value:  Size  Location     Type
 20661 ;;                  1    wreg      void 
 20662 ;; Registers used:
 20663 ;;		wreg, status,2
 20664 ;; Tracked objects:
 20665 ;;		On entry : 0/0
 20666 ;;		On exit  : 0/0
 20667 ;;		Unchanged: 0/0
 20668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20673 ;;Total ram usage:        0 bytes
 20674 ;; Hardware stack levels used:    1
 20675 ;; This function calls:
 20676 ;;		Nothing
 20677 ;; This function is called by:
 20678 ;;		_SYSTEM_Initialize
 20679 ;; This function uses a non-reentrant model
 20680 ;;
 20681                           
 20682                           
 20683                           ;psect for function _EUSART_Initialize
 20684  24C6                     _EUSART_Initialize:	
 20685                           
 20686                           ;eusart.c: 71: BAUD1CON = 0x09;
 20687                           
 20688                           ;incstack = 0
 20689                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 20690  24C6  3009               	movlw	9
 20691  24C7  0142               	movlb	2	; select bank2
 20692  24C8  009F               	movwf	31	;volatile
 20693                           
 20694                           ;eusart.c: 74: RC1STA = 0x90;
 20695  24C9  3090               	movlw	144
 20696  24CA  009D               	movwf	29	;volatile
 20697                           
 20698                           ;eusart.c: 77: TX1STA = 0x24;
 20699  24CB  3024               	movlw	36
 20700  24CC  009E               	movwf	30	;volatile
 20701                           
 20702                           ;eusart.c: 80: SP1BRGL = 0x44;
 20703  24CD  3044               	movlw	68
 20704  24CE  009B               	movwf	27	;volatile
 20705                           
 20706                           ;eusart.c: 83: SP1BRGH = 0x00;
 20707  24CF  019C               	clrf	28	;volatile
 20708  24D0  0008               	return
 20709  24D1                     __end_of_EUSART_Initialize:	
 20710                           
 20711                           	psect	text70
 20712  189B                     __ptext70:	
 20713 ;; *************** function _SPI1_WriteByte *****************
 20714 ;; Defined at:
 20715 ;;		line 157 in file "mcc_generated_files/spi1.c"
 20716 ;; Parameters:    Size  Location     Type
 20717 ;;  byte            1    wreg     unsigned char 
 20718 ;; Auto vars:     Size  Location     Type
 20719 ;;  byte            1    0[COMMON] unsigned char 
 20720 ;; Return value:  Size  Location     Type
 20721 ;;                  1    wreg      void 
 20722 ;; Registers used:
 20723 ;;		wreg
 20724 ;; Tracked objects:
 20725 ;;		On entry : 0/0
 20726 ;;		On exit  : 0/0
 20727 ;;		Unchanged: 0/0
 20728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20733 ;;Total ram usage:        1 bytes
 20734 ;; Hardware stack levels used:    1
 20735 ;; This function calls:
 20736 ;;		Nothing
 20737 ;; This function is called by:
 20738 ;;		_main
 20739 ;; This function uses a non-reentrant model
 20740 ;;
 20741                           
 20742                           
 20743                           ;psect for function _SPI1_WriteByte
 20744  189B                     _SPI1_WriteByte:	
 20745                           
 20746                           ;incstack = 0
 20747                           ; Regs used in _SPI1_WriteByte: [wreg]
 20748                           ;SPI1_WriteByte@byte stored from wreg
 20749  189B  00F0               	movwf	SPI1_WriteByte@byte
 20750                           
 20751                           ;spi1.c: 159: SSP1BUF = byte;
 20752  189C  0870               	movf	SPI1_WriteByte@byte,w
 20753  189D  0143               	movlb	3	; select bank3
 20754  189E  008C               	movwf	12	;volatile
 20755  189F  0008               	return
 20756  18A0                     __end_of_SPI1_WriteByte:	
 20757                           
 20758                           	psect	text71
 20759  1C7D                     __ptext71:	
 20760 ;; *************** function _SPI1_Open *****************
 20761 ;; Defined at:
 20762 ;;		line 92 in file "mcc_generated_files/spi1.c"
 20763 ;; Parameters:    Size  Location     Type
 20764 ;;  spi1UniqueCo    1    wreg     enum E92
 20765 ;; Auto vars:     Size  Location     Type
 20766 ;;  spi1UniqueCo    1    5[COMMON] enum E92
 20767 ;;  print_data     20    0        unsigned char [20]
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  1    wreg      unsigned char 
 20770 ;; Registers used:
 20771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/0
 20774 ;;		On exit  : 0/0
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20779 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20780 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20781 ;;Total ram usage:        6 bytes
 20782 ;; Hardware stack levels used:    1
 20783 ;; This function calls:
 20784 ;;		Nothing
 20785 ;; This function is called by:
 20786 ;;		_main
 20787 ;; This function uses a non-reentrant model
 20788 ;;
 20789                           
 20790                           
 20791                           ;psect for function _SPI1_Open
 20792  1C7D                     _SPI1_Open:	
 20793                           
 20794                           ;incstack = 0
 20795                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 20796                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 20797  1C7D  00F5               	movwf	SPI1_Open@spi1UniqueConfiguration
 20798                           
 20799                           ;spi1.c: 95: if(!SSP1CON1bits.SSPEN)
 20800  1C7E  0143               	movlb	3	; select bank3
 20801  1C7F  1A90               	btfsc	16,5	;volatile
 20802  1C80  0008               	return
 20803                           
 20804                           ;spi1.c: 96: {
 20805                           ;spi1.c: 97: char print_data[20];
 20806                           ;spi1.c: 98: SSP1STAT = spi1_configuration[spi1UniqueConfiguration].stat;
 20807  1C81  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 20808  1C82  00F0               	movwf	??_SPI1_Open
 20809  1C83  01F1               	clrf	??_SPI1_Open+1
 20810  1C84  35F0               	lslf	??_SPI1_Open,f
 20811  1C85  0DF1               	rlf	??_SPI1_Open+1,f
 20812  1C86  35F0               	lslf	??_SPI1_Open,f
 20813  1C87  0DF1               	rlf	??_SPI1_Open+1,f
 20814  1C88  0870               	movf	??_SPI1_Open,w
 20815  1C89  3E01               	addlw	1
 20816  1C8A  00F2               	movwf	??_SPI1_Open+2
 20817  1C8B  3000               	movlw	0
 20818  1C8C  3D71               	addwfc	??_SPI1_Open+1,w
 20819  1C8D  00F3               	movwf	??_SPI1_Open+3
 20820  1C8E  3000               	movlw	low (_spi1_configuration| (0+32768))
 20821  1C8F  0772               	addwf	??_SPI1_Open+2,w
 20822  1C90  0084               	movwf	4
 20823  1C91  3098               	movlw	high (_spi1_configuration| (0+32768))
 20824  1C92  3D73               	addwfc	??_SPI1_Open+3,w
 20825  1C93  0085               	movwf	5
 20826  1C94  0800               	movf	0,w	;code access
 20827  1C95  008F               	movwf	15	;volatile
 20828                           
 20829                           ;spi1.c: 99: SSP1CON1 = spi1_configuration[spi1UniqueConfiguration].con1;
 20830  1C96  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 20831  1C97  00F0               	movwf	??_SPI1_Open
 20832  1C98  01F1               	clrf	??_SPI1_Open+1
 20833  1C99  35F0               	lslf	??_SPI1_Open,f
 20834  1C9A  0DF1               	rlf	??_SPI1_Open+1,f
 20835  1C9B  35F0               	lslf	??_SPI1_Open,f
 20836  1C9C  0DF1               	rlf	??_SPI1_Open+1,f
 20837  1C9D  3000               	movlw	low (_spi1_configuration| (0+32768))
 20838  1C9E  0770               	addwf	??_SPI1_Open,w
 20839  1C9F  0084               	movwf	4
 20840  1CA0  3098               	movlw	high (_spi1_configuration| (0+32768))
 20841  1CA1  3D71               	addwfc	??_SPI1_Open+1,w
 20842  1CA2  0085               	movwf	5
 20843  1CA3  0800               	movf	0,w	;code access
 20844  1CA4  0090               	movwf	16	;volatile
 20845                           
 20846                           ;spi1.c: 102: SSP1CON2 = 0x00;
 20847  1CA5  0191               	clrf	17	;volatile
 20848                           
 20849                           ;spi1.c: 103: SSP1ADD = spi1_configuration[spi1UniqueConfiguration].add;
 20850  1CA6  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 20851  1CA7  00F0               	movwf	??_SPI1_Open
 20852  1CA8  01F1               	clrf	??_SPI1_Open+1
 20853  1CA9  35F0               	lslf	??_SPI1_Open,f
 20854  1CAA  0DF1               	rlf	??_SPI1_Open+1,f
 20855  1CAB  35F0               	lslf	??_SPI1_Open,f
 20856  1CAC  0DF1               	rlf	??_SPI1_Open+1,f
 20857  1CAD  0870               	movf	??_SPI1_Open,w
 20858  1CAE  3E02               	addlw	2
 20859  1CAF  00F2               	movwf	??_SPI1_Open+2
 20860  1CB0  3000               	movlw	0
 20861  1CB1  3D71               	addwfc	??_SPI1_Open+1,w
 20862  1CB2  00F3               	movwf	??_SPI1_Open+3
 20863  1CB3  3000               	movlw	low (_spi1_configuration| (0+32768))
 20864  1CB4  0772               	addwf	??_SPI1_Open+2,w
 20865  1CB5  0084               	movwf	4
 20866  1CB6  3098               	movlw	high (_spi1_configuration| (0+32768))
 20867  1CB7  3D73               	addwfc	??_SPI1_Open+3,w
 20868  1CB8  0085               	movwf	5
 20869  1CB9  0800               	movf	0,w	;code access
 20870  1CBA  008D               	movwf	13	;volatile
 20871                           
 20872                           ;spi1.c: 104: TRISCbits.TRISC2 = spi1_configuration[spi1UniqueConfiguration].operation;
 20873  1CBB  0875               	movf	SPI1_Open@spi1UniqueConfiguration,w
 20874  1CBC  00F0               	movwf	??_SPI1_Open
 20875  1CBD  01F1               	clrf	??_SPI1_Open+1
 20876  1CBE  35F0               	lslf	??_SPI1_Open,f
 20877  1CBF  0DF1               	rlf	??_SPI1_Open+1,f
 20878  1CC0  35F0               	lslf	??_SPI1_Open,f
 20879  1CC1  0DF1               	rlf	??_SPI1_Open+1,f
 20880  1CC2  0870               	movf	??_SPI1_Open,w
 20881  1CC3  3E03               	addlw	3
 20882  1CC4  00F2               	movwf	??_SPI1_Open+2
 20883  1CC5  3000               	movlw	0
 20884  1CC6  3D71               	addwfc	??_SPI1_Open+1,w
 20885  1CC7  00F3               	movwf	??_SPI1_Open+3
 20886  1CC8  3000               	movlw	low (_spi1_configuration| (0+32768))
 20887  1CC9  0772               	addwf	??_SPI1_Open+2,w
 20888  1CCA  0084               	movwf	4
 20889  1CCB  3098               	movlw	high (_spi1_configuration| (0+32768))
 20890  1CCC  3D73               	addwfc	??_SPI1_Open+3,w
 20891  1CCD  0085               	movwf	5
 20892  1CCE  0800               	movf	0,w	;code access
 20893  1CCF  00F4               	movwf	??_SPI1_Open+4
 20894  1CD0  0DF4               	rlf	??_SPI1_Open+4,f
 20895  1CD1  0DF4               	rlf	??_SPI1_Open+4,f
 20896  1CD2  0140               	movlb	0	; select bank0
 20897  1CD3  0813               	movf	19,w	;volatile
 20898  1CD4  0674               	xorwf	??_SPI1_Open+4,w
 20899  1CD5  39FB               	andlw	-5
 20900  1CD6  0674               	xorwf	??_SPI1_Open+4,w
 20901  1CD7  0093               	movwf	19	;volatile
 20902                           
 20903                           ;spi1.c: 105: TRISCbits.TRISC0 = 1;
 20904  1CD8  1413               	bsf	19,0	;volatile
 20905                           
 20906                           ;spi1.c: 106: TRISCbits.TRISC1 = 0;
 20907  1CD9  1093               	bcf	19,1	;volatile
 20908                           
 20909                           ;spi1.c: 107: SSP1CON1bits.SSPEN = 1;
 20910  1CDA  0143               	movlb	3	; select bank3
 20911  1CDB  1690               	bsf	16,5	;volatile
 20912                           
 20913                           ;spi1.c: 108: return 1;
 20914                           ;	Return value of _SPI1_Open is never used
 20915  1CDC  0008               	return
 20916  1CDD                     __end_of_SPI1_Open:	
 20917                           ;spi1.c: 109: }
 20918                           ;spi1.c: 110: return 0;
 20919                           ;	Return value of _SPI1_Open is never used
 20920                           
 20921  007E                     btemp	set	126	;btemp
 20922  007E                     wtemp0	set	126


Data Sizes:
    Strings     466
    Constant    36
    Data        66
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     78      80
    BANK2            80     21      78
    BANK3            80      0      67
    BANK4            80      0      36
    BANK5            80      0      46
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           64      0       0
    BANK48            0      0       0
    BANK49            0      0       0
    BANK50            0      0       0

Pointer List with Targets:

    DW3000local.cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    Absolute function$0	PTR const struct . size(2) Largest target is 150
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), NULL(NULL[0]), STR_18(CODE[2]), 
		 -> STR_17(CODE[14]), STR_15(CODE[26]), STR_14(CODE[14]), STR_13(CODE[150]), 
		 -> STR_12(CODE[14]), STR_11(CODE[16]), STR_10(CODE[14]), STR_9(CODE[19]), 
		 -> STR_8(CODE[14]), STR_7(CODE[17]), STR_6(CODE[14]), DW3000local(BANK5[46]), 
		 -> print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), print_uint8_t@print_data(BANK0[20]), 

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 8
		 -> ADDR(BANK2[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), 

    S662$19$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S662$20$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S662$18$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S662$22$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S662$17$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S662$21$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_26(CODE[36]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    _fassert@exp	PTR const unsigned char  size(2) Largest target is 150
		 -> STR_18(CODE[2]), STR_15(CODE[26]), STR_13(CODE[150]), STR_11(CODE[16]), 
		 -> STR_9(CODE[19]), STR_7(CODE[17]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_17(CODE[14]), STR_14(CODE[14]), STR_12(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[14]), STR_6(CODE[14]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 150
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), STR_24(CODE[7]), NULL(NULL[0]), 
		 -> STR_18(CODE[2]), STR_17(CODE[14]), STR_15(CODE[26]), STR_14(CODE[14]), 
		 -> STR_13(CODE[150]), STR_12(CODE[14]), STR_11(CODE[16]), STR_10(CODE[14]), 
		 -> STR_9(CODE[19]), STR_8(CODE[14]), STR_7(CODE[17]), STR_6(CODE[14]), 
		 -> print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), print_uint8_t@print_data(BANK0[20]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_26(CODE[36]), STR_5(CODE[31]), STR_4(CODE[14]), STR_3(CODE[10]), 
		 -> STR_2(CODE[10]), 

    S1816__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1816__prbuf$ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(COMMON[3]), printf@pb(BANK0[3]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    readfromspi@readBuffer	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    readfromspi@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    writetospi@bodyBuffer	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    writetospi@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    writetospiwithcrc@bodyBuffer	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    writetospiwithcrc@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    S991$payload	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.payload	PTR unsigned char  size(1) Largest target is 0

    S991$header	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.header	PTR unsigned char  size(1) Largest target is 0

    S991$nonce	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.nonce	PTR unsigned char  size(1) Largest target is 0

    dwt_writetxdata@txDataBytes	PTR unsigned char  size(1) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), 

    dwt_configure@config	PTR struct . size(1) Largest target is 14
		 -> config(BANK3[14]), 

    dwt_configuretxrf@config	PTR struct . size(1) Largest target is 7
		 -> txconfig_options_ch9(BANK2[7]), 

    dwt_generatecrc8@byteArray	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), dwt_xfer3000@header(BANK0[2]), 

    dwt_readfromdevice@buffer	PTR unsigned char  size(1) Largest target is 8
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_read16bitoffsetreg@buffer(BANK1[2]), 
		 -> dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    dwt_writetodevice@buffer	PTR unsigned char  size(2) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_write8bitoffsetreg@regval(BANK1[1]), 
		 -> dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 

    dwt_xfer3000@buffer	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    S662$cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S662$cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S662$cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S662$cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S662$cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S662$cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S662$cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    pdw3000local.cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    pdw3000local	PTR struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK0[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), writetospiwithcrc@crc8(BANK0[1]), 
		 -> dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), 
		 -> dwt_modify16bitoffsetreg@buf(BANK0[4]), dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), 
		 -> dwt_write32bitoffsetreg@buffer(BANK0[4]), dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_xfer3000@header(BANK0[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), writetospiwithcrc@crc8(BANK0[1]), 
		 -> dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), 
		 -> dwt_modify16bitoffsetreg@buf(BANK0[4]), dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), 
		 -> dwt_write32bitoffsetreg@buffer(BANK0[4]), dwt_read8bitoffsetreg@regval(BANK1[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_xfer3000@header(BANK0[2]), 

    printf_string@data	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_23(CODE[9]), STR_22(CODE[17]), STR_21(CODE[15]), STR_20(CODE[12]), 
		 -> STR_19(CODE[10]), STR_16(CODE[15]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), 
		 -> print_uint16_t@print_data(BANK0[20]), print_uint8_t@print_data(BANK0[20]), STR_1(CODE[21]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _reset_DWIC->_Sleep
    _printf_string->_EUSART_Write
    _dwt_configure->___lltoft
    _get_sts_mnth->___lmul
    _writetospiwithcrc->_SPI1_WriteBlock
    _writetospi->_SPI1_WriteBlock
    _readfromspi->_SPI1_ReadBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    __doprnt->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    ___lltoft->___ftpack
    ___fttol->___lltoft
    ___ftmul->___lltoft
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _SYSTEM_Initialize->_SPI1_Initialize

Critical Paths under _main in BANK0

    _dwt_writetxfctrl->_dwt_read8bitoffsetreg
    _dwt_writetxdata->_dwt_write32bitoffsetreg
    _dwt_starttx->_dwt_read32bitoffsetreg
    _dwt_starttx->_dwt_read8bitoffsetreg
    _dwt_settxantennadelay->_dwt_write16bitoffsetreg
    _dwt_setrxantennadelay->_dwt_write16bitoffsetreg
    _dwt_checkidlerc->_dwt_read16bitoffsetreg
    _dwt_readdevid->_dwt_read32bitoffsetreg
    __dwt_prog_ldo_and_bias_tune->_dwt_modify16bitoffsetreg
    __dwt_otpread->_dwt_read32bitoffsetreg
    _dwt_configuretxrf->_dwt_read8bitoffsetreg
    _dwt_calcbandwidthadj->_dwt_disable_rf_tx
    _dwt_calcbandwidthadj->_dwt_read8bitoffsetreg
    _dwt_enable_rftx_blocks->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_disable_rftx_blocks->_dwt_write32bitoffsetreg
    _dwt_disable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_configure->_dwt_read32bitoffsetreg
    _dwt_configure->_dwt_read8bitoffsetreg
    _dwt_setdwstate->_dwt_force_clocks
    _dwt_force_clocks->_dwt_write16bitoffsetreg
    _dwt_pgf_cal->_dwt_read16bitoffsetreg
    _dwt_run_pgfcal->_dwt_read32bitoffsetreg
    _dwt_run_pgfcal->_dwt_read8bitoffsetreg
    _dwt_read8bitoffsetreg->_dwt_xfer3000
    _dwt_modify8bitoffsetreg->_dwt_xfer3000
    _dwt_readfromdevice->_dwt_xfer3000
    _dwt_modify16bitoffsetreg->_dwt_xfer3000
    _dwt_configmrxlut->_dwt_write32bitoffsetreg
    _dwt_writetodevice->_dwt_xfer3000
    __dwt_kick_dgc_on_wakeup->_dwt_modify32bitoffsetreg
    _dwt_modify32bitoffsetreg->_dwt_xfer3000
    _dwt_xfer3000->__fassert
    __fassert->_printf
    _printf->__doprnt
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    _main->_dw_main
    _dw_main->_dwt_configure
    _dwt_writetxfctrl->_dwt_modify32bitoffsetreg
    _dwt_writetxdata->_dwt_write32bitoffsetreg
    _dwt_starttx->_dwt_read32bitoffsetreg
    _dwt_settxantennadelay->_dwt_write16bitoffsetreg
    _dwt_setrxantennadelay->_dwt_write16bitoffsetreg
    _dwt_initialise->__dwt_otpread
    _dwt_checkidlerc->_dwt_read16bitoffsetreg
    _dwt_check_dev_id->_dwt_readdevid
    _dwt_readdevid->_dwt_read32bitoffsetreg
    __dwt_prog_ldo_and_bias_tune->_dwt_modify16bitoffsetreg
    __dwt_otpread->_dwt_read32bitoffsetreg
    _dwt_configuretxrf->_dwt_calcbandwidthadj
    _dwt_calcbandwidthadj->_dwt_enable_rf_tx
    _dwt_enable_rftx_blocks->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_disable_rftx_blocks->_dwt_write32bitoffsetreg
    _dwt_disable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_configure->_dwt_configmrxlut
    _dwt_setplenfine->_dwt_write8bitoffsetreg
    _dwt_setdwstate->_dwt_modify32bitoffsetreg
    _dwt_force_clocks->_dwt_write16bitoffsetreg
    _dwt_write16bitoffsetreg->_dwt_writetodevice
    _dwt_pgf_cal->_dwt_run_pgfcal
    _dwt_run_pgfcal->_dwt_read32bitoffsetreg
    _dwt_write8bitoffsetreg->_dwt_writetodevice
    _dwt_read32bitoffsetreg->_dwt_readfromdevice
    _dwt_read16bitoffsetreg->_dwt_readfromdevice
    _dwt_configmrxlut->_dwt_write32bitoffsetreg
    _dwt_write32bitoffsetreg->_dwt_writetodevice
    __dwt_kick_dgc_on_wakeup->_dwt_modify32bitoffsetreg

Critical Paths under _main in BANK2

    _dw_main->_dwt_configure

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1173933
                                             76 BANK1      2     2      0
                          _SPI1_Open
                     _SPI1_WriteByte
                  _SYSTEM_Initialize
                            _dw_main
                      _printf_string
 ---------------------------------------------------------------------------------
 (1) _dw_main                                             51    51      0 1173057
                                             75 BANK1      1     1      0
                              _Sleep
                      _dwt_configure
                  _dwt_configuretxrf
                     _dwt_initialise
              _dwt_setrxantennadelay
              _dwt_settxantennadelay
                        _dwt_starttx
                    _dwt_writetxdata
                   _dwt_writetxfctrl
                      _printf_string
                         _reset_DWIC
 ---------------------------------------------------------------------------------
 (2) _reset_DWIC                                           0     0      0     750
                              _Sleep
 ---------------------------------------------------------------------------------
 (2) _dwt_writetxfctrl                                    23    18      5   36558
                                             24 BANK1     23    18      5
           _dwt_modify32bitoffsetreg
              _dwt_read8bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_writetxdata                                      7     2      5   55929
                                             24 BANK1      7     2      5
            _dwt_write32bitoffsetreg
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (2) _dwt_starttx                                         11    11      0   58231
                                             29 BANK1     11    11      0
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (2) _dwt_settxantennadelay                                2     0      2   28574
                                             75 BANK0      2     0      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_setrxantennadelay                                2     0      2   28574
                                             75 BANK0      2     0      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_initialise                                      15    13      2  141235
                                             37 BANK1     15    13      2
                              _Sleep
                       __dwt_otpread
        __dwt_prog_ldo_and_bias_tune
                   _dwt_check_dev_id
                    _dwt_checkidlerc
             _dwt_write8bitoffsetreg
                      _printf_string
 ---------------------------------------------------------------------------------
 (1) _printf_string                                        3     1      2     771
                                              1 COMMON     3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _dwt_checkidlerc                                      8     8      0   21343
                                             20 BANK1      8     8      0
             _dwt_read16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_check_dev_id                                     2     0      2   21772
                                             33 BANK1      2     0      2
                      _dwt_readdevid
 ---------------------------------------------------------------------------------
 (4) _dwt_readdevid                                        4     0      4   21772
                                             29 BANK1      4     0      4
             _dwt_read32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) __dwt_prog_ldo_and_bias_tune                          2     2      0   16332
                                             77 BANK0      2     2      0
           _dwt_modify16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) __dwt_otpread                                         8     4      4   51074
                                             29 BANK1      8     4      4
             _dwt_read32bitoffsetreg
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_configuretxrf                                    4     4      0  316840
                                             35 BANK1      4     4      0
               _dwt_calcbandwidthadj
              _dwt_read8bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_calcbandwidthadj                                 6     2      4  238176
                                             29 BANK1      6     2      4
                  _dwt_disable_rf_tx
            _dwt_disable_rftx_blocks
                   _dwt_enable_rf_tx
             _dwt_enable_rftx_blocks
                   _dwt_force_clocks
            _dwt_modify8bitoffsetreg
              _dwt_read8bitoffsetreg
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_enable_rftx_blocks                               4     0      4   21424
                                             24 BANK1      4     0      4
           _dwt_modify32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_enable_rf_tx                                     5     0      5   56166
                                             24 BANK1      5     0      5
           _dwt_modify32bitoffsetreg
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_disable_rftx_blocks                              0     0      0   34486
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_disable_rf_tx                                    1     1      0   34508
                                             79 BANK0      1     1      0
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_configure                                       42    40      2  504845
                                             54 BANK1     21    19      2
                                              0 BANK2     21    21      0
                              _Sleep
                            ___ftmul
                            ___fttol
                           ___lltoft
            __dwt_kick_dgc_on_wakeup
                   _dwt_configmrxlut
           _dwt_modify16bitoffsetreg
           _dwt_modify32bitoffsetreg
            _dwt_modify8bitoffsetreg
                        _dwt_pgf_cal
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
                     _dwt_setdwstate
                    _dwt_setplenfine
            _dwt_write16bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
                       _get_sts_mnth
 ---------------------------------------------------------------------------------
 (3) _get_sts_mnth                                        14    10      4     892
                                              0 BANK0     14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     348
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dwt_setplenfine                                      2     2      0   29017
                                             72 BANK0      2     2      0
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_setdwstate                                       4     2      2   69101
                                             24 BANK1      4     2      2
                   _dwt_force_clocks
           _dwt_modify32bitoffsetreg
            _dwt_modify8bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_force_clocks                                     4     2      2   29069
                                             75 BANK0      4     2      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write16bitoffsetreg                             13     3     10   28488
                                             72 BANK0      3     3      0
                                             12 BANK1     10     0     10
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_pgf_cal                                          6     4      2  157816
                                             45 BANK1      6     4      2
           _dwt_modify16bitoffsetreg
             _dwt_read16bitoffsetreg
                     _dwt_run_pgfcal
 ---------------------------------------------------------------------------------
 (4) _dwt_run_pgfcal                                      16    14      2  120010
                                             29 BANK1     16    14      2
                              _Sleep
            _dwt_modify8bitoffsetreg
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write8bitoffsetreg                               9     0      9   28995
                                             12 BANK1      9     0      9
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_read8bitoffsetreg                                9     1      8   15041
                                             72 BANK0      8     0      8
                                              0 BANK1      1     1      0
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _dwt_read32bitoffsetreg                              26    18      8   21772
                                             72 BANK0      8     0      8
                                             11 BANK1     18    18      0
                 _dwt_readfromdevice
 ---------------------------------------------------------------------------------
 (4) _dwt_modify8bitoffsetreg                             13     3     10   18800
                                             72 BANK0      3     3      0
                                              0 BANK1     10     0     10
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _Sleep                                                9     5      4     750
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _dwt_read16bitoffsetreg                              17     9      8   21320
                                             72 BANK0      8     0      8
                                             11 BANK1      9     9      0
                 _dwt_readfromdevice
 ---------------------------------------------------------------------------------
 (4) _dwt_readfromdevice                                  11     0     11   18749
                                              0 BANK1     11     0     11
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (4) _dwt_modify16bitoffsetreg                            17     5     12   16332
                                             72 BANK0      5     5      0
                                              0 BANK1     12     0     12
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _dwt_configmrxlut                                    30    28      2   34805
                                             24 BANK1     30    28      2
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write32bitoffsetreg                             19     7     12   34486
                                             72 BANK0      7     7      0
                                             12 BANK1     12     0     12
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_writetodevice                                   12     0     12   21053
                                              0 BANK1     12     0     12
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) __dwt_kick_dgc_on_wakeup                              1     1      0   21168
                                             77 BANK0      1     1      0
           _dwt_modify32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_modify32bitoffsetreg                            29    13     16   21124
                                             72 BANK0      5     5      0
                                              0 BANK1     24     8     16
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (4) _dwt_xfer3000                                        33    19     14   12517
                                             39 BANK0     33    19     14
                           __fassert
                   _dwt_generatecrc8
                        _readfromspi
                         _writetospi
                  _writetospiwithcrc
 ---------------------------------------------------------------------------------
 (5) _writetospiwithcrc                                   10     0     10    1289
                                              0 BANK0     10     0     10
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (5) _writetospi                                           9     0      9    1202
                                              0 BANK0      9     0      9
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (5) _readfromspi                                          9     0      9    1420
                                              0 BANK0      9     0      9
                     _SPI1_ReadBlock
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _SPI1_WriteBlock                                      6     2      4     858
                                              1 COMMON     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _SPI1_ReadBlock                                       7     3      4     218
                                              1 COMMON     7     3      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SPI1_ExchangeByte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _dwt_generatecrc8                                     9     4      5     542
                                              0 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (5) __fassert                                             6     0      6    5159
                                             33 BANK0      6     0      6
                             _printf
 ---------------------------------------------------------------------------------
 (6) _printf                                              13     5      8    3941
                                             20 BANK0     13     5      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (7) __doprnt                                             24    21      3    3739
                                              0 BANK0     20    17      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     388
                                              1 COMMON     1     0      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     296
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2134
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2711
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2001
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      30
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_WriteByte                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                           26    26      0      60
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI1_Open
   _SPI1_WriteByte
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
   _dw_main
     _Sleep
     _dwt_configure
       _Sleep
       ___ftmul
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       __dwt_kick_dgc_on_wakeup
         _dwt_modify32bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_configmrxlut
         _dwt_write32bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_modify16bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_modify8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_pgf_cal
         _dwt_modify16bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_read16bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_run_pgfcal
           _Sleep
           _dwt_modify8bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_read32bitoffsetreg
             _dwt_readfromdevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _dwt_read8bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _dwt_write8bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_setdwstate
         _dwt_force_clocks
           _dwt_write16bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_modify32bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_modify8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_setplenfine
         _dwt_write8bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _get_sts_mnth
         ___lmul
     _dwt_configuretxrf
       _dwt_calcbandwidthadj
         _dwt_disable_rf_tx
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_disable_rftx_blocks
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_enable_rf_tx
           _dwt_modify32bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_enable_rftx_blocks
           _dwt_modify32bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_force_clocks
           _dwt_write16bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_modify8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_read8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_write16bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_initialise
       _Sleep
       __dwt_otpread
         _dwt_read32bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_write16bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       __dwt_prog_ldo_and_bias_tune
         _dwt_modify16bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_check_dev_id
         _dwt_readdevid
           _dwt_read32bitoffsetreg
             _dwt_readfromdevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
       _dwt_checkidlerc
         _dwt_read16bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _printf_string
         _EUSART_Write
     _dwt_setrxantennadelay
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_settxantennadelay
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_starttx
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxdata
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxfctrl
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _printf_string
       _EUSART_Write
     _reset_DWIC
       _Sleep
   _printf_string
     _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     15      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      24      13       45.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      2E      15       57.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0     191      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0     191      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              40      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48               0      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49               0      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50               0      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 09 09:45:14 2021

             dwt_configmrxlut@channel 00B8                    SPI1_WriteByte@byte 0070  
                   _SPI1_ExchangeByte 24D1                     ?_dwt_configmrxlut 00B8  
                      ?_printf_string 0071                     _dwt_configuretxrf 1E8B  
                         __CFG_CP$OFF 0000                    ?_SPI1_ExchangeByte 0070  
                  ??_dwt_configmrxlut 007E                   ___wmul@multiplicand 0072  
                  ?_dwt_configuretxrf 0070              _dwt_modify16bitoffsetreg 1A21  
            _dwt_modify32bitoffsetreg 1368                                   l191 24B6  
                                 l337 1B10                                   l266 24D5  
                                 l442 0AE2                                   l522 0BD6  
                                 l428 0A63                                   l358 275B  
                                 l633 0425                                   l529 0C5C  
                                 l619 0145                                   l660 1D7D  
                                 l670 0960                                   l592 1E11  
                                 l656 0755                                   l648 067F  
                                 l657 078B                                   l981 153F  
                                 l985 1554                                   l978 1617  
                                 _GIE 005F                                   l989 1569  
                        __CFG_CPD$OFF 0000            __end_of_sts_length_factors 28F4  
                       ?_get_sts_mnth 0020               __size_of_PMD_Initialize 0008  
                 ??_SPI1_ExchangeByte 0070                          __CFG_BORV$LO 0000  
                                 wreg 0009                   ??_dwt_configuretxrf 00C3  
                        __CFG_LVP$OFF 0000                          __CFG_ZCD$OFF 0000  
                __end_of__dwt_otpread 1F83                                  l1000 1650  
                                l1412 0D02                                  l1424 0E15  
                                l1426 0D4C                                  l1371 10FD  
                                l1454 0E5F                                  l1449 0E3D  
                                l1458 0E96                                  l1571 25AA  
                                l5021 0A54                                  l5005 0A0B  
                                l5101 1B66                                  l1830 10C4  
                                l5031 0A69                                  l5017 0A4D  
                                l1746 1D22                                  l1747 1D2A  
                                l1739 1D0F                                  l5027 0A61  
                                l5043 0AE3                                  l5037 0AB2  
                                l5301 1BFA                                  l5205 092C  
                                l5039 0ACA                                  l5071 1E4D  
                                l5225 1271                                  l5155 1ACF  
                                l5243 27D9                                  l5235 102C  
                                l5315 19DC                                  l5501 10D5  
                                l4701 0807                                  l5093 1B44  
                                l5077 1E7B                                  l5341 0053  
                                l5263 1CEC                                  l5511 273F  
                                l4703 0813                                  l4711 0828  
                                l5247 27E3                                  l6151 1B1E  
                                l5273 1D14                                  l5265 1CF6  
                                l5441 1324                                  l5425 12E1  
                                l5193 08B4                                  l5185 08A4  
                                l5409 1DA2                                  l5345 00B9  
                                l5275 1D1C                                  l5267 1CFB  
                                l5259 1CE5                                  l5419 12CB  
                                l4707 081F                                  l5179 087F  
                                l5363 1DEF                                  l5453 1340  
                                l5437 131C                                  l5509 272F  
                                l4901 0FCD                                  l4741 0D10  
                                l4733 0CFE                                  l5189 08AD  
                                l5621 0152                                  l5613 0141  
                                l5349 11C9                                  l5293 252E  
                                l5541 0BF2                                  l4655 25A4  
                                l4831 0E81                                  l4807 0E30  
                                l4911 0CC0                                  l5711 05D6  
                                l5631 0164                                  l5623 0154  
                                l5607 0130                                  l5551 0C25  
                                l5543 0BF8                                  l5527 0B77  
                                l5449 1338                                  l4649 2500  
                                l4905 0FE1                                  l4841 0EB2  
                                l4833 0E8A                                  l4753 0D4F  
                                l4913 0FFC                                  l4745 0D1D  
                                l4729 0CEB                                  l5633 0168  
                                l5625 0158                                  l5641 0192  
                                l5617 014E                                  l4851 0ECF  
                                l4843 0EB5                                  l4763 0D65  
                                l4739 0D07                                  l4931 2683  
                                l4923 2572                                  l7147 0AEC  
                                l5379 16CD                                  l5635 016C  
                                l5627 015C                                  l5619 0150  
                                l5571 0CA1                                  l5555 0C38  
                                l5547 0C0E                                  l5811 154B  
                                l5469 1070                                  l4685 18F9  
                                l4677 18DB                                  l4909 0FF3  
                                l4861 0EFA                                  l4781 0DB3  
                                l4765 0D73                                  l7149 0AF1  
                                l5733 0714                                  l5717 064B  
                                l5629 0160                                  l5565 0C6D  
                                l5821 1573                                  l5805 1536  
                                l5495 10BB                                  l5487 10A0  
                                l4679 18E7                                  l4855 0EE1  
                                l4775 0DA0                                  l4759 0D63  
                                l4951 277E                                  l5751 0749  
                                l5743 0727                                  l5727 06EF  
                                l5671 0367                                  l5663 0330  
                                l5639 0171                                  l5559 0C4B  
                                l5497 10C7                                  l5489 10AE  
                                l4689 1902                                  l4873 0F2A  
                                l4865 0F0C                                  l4793 0DE9  
                                l4769 0D80                                  l4953 27A4  
                                l5753 0772                                  l5737 071E  
                                l5593 1ED3                                  l5833 15F5  
                                l5817 1560                                  _ADDR 015F  
                                l4891 0F75                                  l4867 0F12  
                                l4787 0DD0                                  l4779 0D82  
                                l5683 0401                                  l5595 1EE7  
                                l5587 1EB2                                  l5843 1635  
                                l5835 15F8                                  l4893 0F9C  
                                l4885 0F5D                                  l4877 0F3C  
                                l4869 0F16                                  l4797 0DF4  
                                l5669 0349                                  l5677 03CA  
                                l5781 149F                                  l4879 0F45  
                                l4991 09CF                                  l5695 0496  
                                l5847 166C                                  l5863 10FE  
                                l4889 0F6F                                  l4993 09DE  
                                l4985 09AD                                  l5689 046C  
                                l5769 1FB1                                  l4899 0FC4  
                                l5867 1109                                  l4989 09C4  
                                l5877 1138                                  l5799 152A  
                                l5879 113F                                  STR_1 285D  
                                STR_2 2930                                  STR_3 293A  
                                STR_4 2902                                  STR_5 2824  
                                STR_6 28F4                                  STR_7 28A7  
                                STR_8 28F4                                  STR_9 2872  
                                _LATA 0016                                  _LATB 0017  
                                _LATC 0018                                  _LATD 0019  
                                _LATE 001A                                  u1610 1BCE  
                                u1630 27CF                                  u4105 0E58  
                                u4025 0D79                                  u4135 0E7A  
      __end_of_dwt_read16bitoffsetreg 1A21        __end_of_dwt_read32bitoffsetreg 1E8B  
                                u5205 1341                                  u5215 1347  
                                u5135 12ED                                  u4175 0EA5  
                                u5055 1DE9                                  u5145 12FD  
                                u5305 10BC                                  u4345 2788  
                                u5065 1DFC                                  u4355 097F  
                                u4515 2769                                  _PMD0 0796  
                                u5165 1325                                  u5245 1077  
                                u3805 25B0                                  u4445 0A19  
                                u4605 13B5                                  _PMD1 0797  
                                _PMD2 0798                                  u5175 132B  
                                u5335 2734                                  u4615 13D6  
                                u4535 1E5F                                  _PMD3 0799  
                                _PMD4 079A                                  u3905 080A  
                                u4625 13F1                                  _PMD5 079B  
                                u5275 10A1                                  u3835 18DE  
                                u4635 140C                                  u4555 1B42  
                                u3925 0819                                  u4565 1B4F  
                                u3855 18E8                                  u3935 0820  
                                u4575 1B64                                  u5375 0BAF  
                                u3865 18F2                                  u4585 137F  
                                u5705 05AE                                  u5554 01BE  
                                u4915 1D31                                  u4835 1CF1  
                                u3875 18FA                                  u3795 25AB  
                                u4595 139A                                  u5635 03D6  
                                u5555 01BC                                  u5565 01D1  
                                u4855 1D0A                                  u5575 0240  
                                u4785 27E4                                  u5585 026C  
                                u4875 1D17                                  u4795 27EB  
                                u5675 04F8                                  u5835 144F  
                                u5685 051E                                  u5845 145C  
                                u4990 18D1                                  u5695 059B  
                                u5855 14A6                                  u4985 18BF  
                                u5865 14B9                                  u7717 1B06  
                                u7727 1B17                                  u7737 1B24  
                                u7747 276E                                  _WPUA 1F39  
                                _WPUB 1F44                                  _WPUC 1F4F  
                                _WPUD 1F5A                                  _WPUE 1F65  
                        __CFG_WRT$OFF 0000                         __CFG_FCMEN$ON 0000  
                    ??_dwt_initialise 00C7                                  _main 1AED  
           __size_of_dwt_writetxfctrl 00DC                          ___ftpack@arg 0070  
                        ___ftpack@exp 0073                                  fsr0h 0005  
                                fsr1h 0007                                  indf0 0000  
                                fsr0l 0004                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
             __size_of_SPI1_ReadBlock 001D                         __CFG_BOREN$ON 0000  
     __end_of__dwt_kick_dgc_on_wakeup 1C23                                  start 0002  
        dwt_read32bitoffsetreg@buffer 00B3          dwt_read16bitoffsetreg@buffer 00B2  
          __size_of_dwt_disable_rf_tx 005A                          _tx_blink_msg 0220  
           __end_of_SPI1_ExchangeByte 24DC          dwt_read32bitoffsetreg@regval 00B7  
        dwt_read16bitoffsetreg@regval 00B0                         __CFG_CSWEN$ON 0000  
                       __CFG_MCLRE$ON 0000             __end_of_dwt_configuretxrf 1F07  
                        ___ftmul@cntr 002E                          ___ftmul@sign 002F  
                        ___fttol@exp1 003D                          ___fttol@lval 0039  
                  dwt_xfer3000@header 0064                    dwt_xfer3000@buffer 0051  
           __size_of_dwt_check_dev_id 0037                         ?_EUSART_Write 0070  
      __size_of_OSCILLATOR_Initialize 0009         __end_of_OSCILLATOR_Initialize 24C6  
                  dwt_xfer3000@length 004D                                 ?_main 0070  
             dwt_writetxfctrl@ranging 00BC                                 STR_10 28F4  
                               STR_11 28B8                                 STR_12 28F4  
                               STR_20 2910                                 STR_21 28C8  
                               STR_13 1804                                 STR_14 28F4  
                               STR_22 2896                                 STR_23 2944  
                               STR_15 2843                                 STR_24 2955  
                               STR_16 28D7                                 STR_25 2885  
                       __CFG_WDTE$OFF 0000                                 STR_26 2800  
                               STR_19 2926      SPI1_Open@spi1UniqueConfiguration 0075  
            __size_of_dwt_setplenfine 001C                        ??_get_sts_mnth 0024  
                     __end_of___ftmul 1368                       __end_of___fttol 10DE  
                      __CFG_DEBUG$OFF 0000                       __end_of___lwdiv 1907  
                     __end_of___lwmod 082D           dwt_read8bitoffsetreg@regval 00A0  
                               _OSCEN 0891                                 u605m0 1133  
                     __end_of__doprnt 1000                                 _TRISA 0011  
                               _TRISB 0012                                 _TRISC 0013  
                               _TRISD 0014                                 _TRISE 0015  
                               _RXPPS 1ECB                    __size_of_SPI1_Open 0060  
                 ___lmul@multiplicand 0074                          ___lltoft@exp 007D  
                        ?_dwt_pgf_cal 00CD                                 _Sleep 2753  
                   ?_dwt_force_clocks 006B                       __end_of_dw_main 1170  
         dwt_readfromdevice@regFileID 00A0                       __end_of_dpowers 2926  
                     __end_of_isdigit 2502                         ___ftpack@sign 0074  
                               _putch 24A9                    ??_dwt_force_clocks 007E  
                        ?_dwt_starttx 0070                ?_dwt_setrxantennadelay 006B  
                               pclath 000A                          ?_readfromspi 0020  
                    ??_dwt_setdwstate 00BA                                 status 0003  
                               wtemp0 007E              __size_of_SPI1_Initialize 002B  
             __size_of_SPI1_WriteByte 0005          dwt_settxantennadelay@txDelay 006B  
                     ??_printf_string 0073                       __initialization 07A2  
                        __end_of_main 1B36                        ??_EUSART_Write 0070  
                     _dwt_checkidlerc 18A0                          __fassert@exp 0045  
                    ??_dwt_run_pgfcal 00BF                                ??_main 00EC  
                       ___fttol@sign1 0038       dwt_write8bitoffsetreg@regFileID 00AC  
      __size_of_dwt_read8bitoffsetreg 0021              ?_dwt_modify8bitoffsetreg 00A0  
                    dwt_configure@cnt 0158                      dwt_configure@scp 0150  
       __end_of_dwt_read8bitoffsetreg 26BD       dwt_write8bitoffsetreg@regOffset 00B0  
       dwt_writetxfctrl@txFrameLength 00B8                                ?_Sleep 0070  
 __end_of__dwt_prog_ldo_and_bias_tune 1AA8           __dwt_prog_ldo_and_bias_tune 1A64  
          _EUSART_OverrunErrorHandler 0146               ?_dwt_enable_rftx_blocks 00B8  
                              _ANSELA 1F38                                ?_putch 0071  
                              _ANSELB 1F43                                _ANSELC 1F4E  
                              _ANSELD 1F59                                _ANSELE 1F64  
                    __end_of___ftpack 1D41                       dwt_starttx@mode 00C7  
                              _RC1REG 0119                                _RB1PPS 1F19  
                              _RB2PPS 1F1A                                _RC1PPS 1F21  
                              _RC1STA 011D                      __end_of___lltoft 2753  
                              _RC2PPS 1F22                                _RC3PPS 1F23  
                              _RC4PPS 1F24                                _RC5PPS 1F25  
                              _ODCONA 1F3A                                _ODCONB 1F45  
                              _ODCONC 1F50                                _ODCOND 1F5B  
                              _ODCONE 1F66                        __CFG_WDTCCS$SC 0000  
                    __end_of__fassert 256E                                _OSCFRQ 0893  
                              _TX1REG 011A                                _TX1STA 011E  
                  dwt_initialise@mode 00C5         ??__dwt_prog_ldo_and_bias_tune 006D  
        __end_of_dwt_calcbandwidthadj 1203                        __CFG_PWRTE$OFF 0000  
          __size_of_SPI1_ExchangeByte 000B                 dwt_configure@sts_mnth 014E  
                              Sleep@i 0075                     __end_of_SPI1_Open 1CDD  
             readfromspi@headerBuffer 0022            __size_of_dwt_configuretxrf 007C  
             readfromspi@headerLength 0020                                ___lmul 27D1  
                              ___wmul 25A2                         ?_dwt_xfer3000 0047  
                      __CFG_STVREN$ON 0000                             ??___ftmul 0026  
                           ??___fttol 0034                                _dev_id 013C  
                           ??___lwdiv 0074                             ??___lwmod 007C  
                              _config 01D5                     _writetospiwithcrc 2705  
                           ??__doprnt 0023                __size_of_dwt_configure 0692  
            ?_dwt_write16bitoffsetreg 00AC              ?_dwt_write32bitoffsetreg 00AC  
                        __doprnt@flag 002F                                _printf 2542  
                        __doprnt@prec 0028             __size_of_dwt_enable_rf_tx 00B1  
                  ?_writetospiwithcrc 0020                             ??_dw_main 00EB  
               ___ftmul@f3_as_product 002B                        _PMD_Initialize 24AD  
                           ??_isdigit 0070                 __size_of__dwt_otpread 007C  
    dwt_modify8bitoffsetreg@regFileID 00A0              __size_of_dwt_writetxdata 007D  
      __end_of_dwt_enable_rftx_blocks 1057      dwt_modify8bitoffsetreg@regOffset 00A4  
                 ??_writetospiwithcrc 0077         dwt_writetxdata@txBufferOffset 00BB  
                   ??_dwt_setplenfine 0068                __size_of_dwt_readdevid 0024  
                _txconfig_options_ch9 0167                     _SYSTEM_Initialize 2510  
             __end_of__initialization 07FD              __size_of_SPI1_WriteBlock 001A  
                    _dwt_writetxfctrl 1441                        _SPI1_ReadBlock 267F  
            ?_dwt_disable_rftx_blocks 0070                 _dwt_settxantennadelay 2663  
                  ?_SYSTEM_Initialize 0070              ??_dwt_write8bitoffsetreg 007E  
                __end_of_get_sts_mnth 1E16               __end_of_dwt_checkidlerc 18D3  
                dwt_run_pgfcal@result 00C6                            ___ftmul@f1 0020  
                          ___ftmul@f2 0023            ??_dwt_modify16bitoffsetreg 0068  
          ??_dwt_modify32bitoffsetreg 0068                            ___fttol@f1 0030  
                      __pcstackCOMMON 0070                 dwt_writetxfctrl@reg32 00CB  
                       __end_of_Sleep 277C                        ??_dwt_xfer3000 0055  
           __end_of_writetospiwithcrc 272B                          __pidataBANK1 0800  
                        __pidataBANK2 251F                          __pidataBANK3 2502  
                        __pidataBANK4 26E1                   ??_SYSTEM_Initialize 0071  
            dwt_configuretxrf@channel 00C5             __size_of_dwt_generatecrc8 002A  
                          ___lltoft@c 0078                     ??_SPI1_Initialize 0070  
                        __dwt_otpread 1F07           __size_of_dwt_readfromdevice 0034  
                       __end_of_putch 24AD                      _dwt_check_dev_id 19A9  
              __end_of_PMD_Initialize 24B5                 SPI1_ExchangeByte@data 0070  
                 dwt_configure@config 015E                    _spi1_configuration 1800  
                       __fassert@file 0043                         __fassert@line 0041  
                             ??_Sleep 0074             __size_of_dwt_configmrxlut 0179  
                          __doprnt@ap 0022                            __doprnt@cp 002B  
                          __doprnt@pb 0033             __end_of_SYSTEM_Initialize 251F  
                __size_of_dwt_pgf_cal 0067                               ??_putch 0072  
              __end_of_SPI1_ReadBlock 269C                            __pbssBANK1 00EE  
                          __pbssBANK2 0120                            __pbssBANK3 01A0  
                          __pbssBANK5 02A0                         _dwt_configure 0110  
                  dwt_run_pgfcal@data 00C1                    dwt_run_pgfcal@flag 00C5  
                __end_of_EUSART_Write 24BD                    _sts_length_factors 28E6  
                   dwt_configure@chan 015D                     dwt_configure@flag 0152  
                __size_of_dwt_starttx 016A                     dwt_configure@mode 0151  
                   dwt_configure@temp 0154                        _SPI1_WriteByte 189B  
                __size_of_readfromspi 001B                        _SSP1DATPPSbits 1EC6  
                          __pmaintext 1AED           dwt_modify8bitoffsetreg@_and 00A8  
                             ?___lmul 0070                         _dwt_readdevid 26BD  
        dwt_modify32bitoffsetreg@_and 00A8          dwt_modify16bitoffsetreg@_and 00A8  
                             ?___wmul 0070                  dwt_xfer3000@reg_file 005D  
                      ___lmul@product 0078              ?__dwt_kick_dgc_on_wakeup 0070  
                      _SSP2DATPPSbits 1EC9                             ?___ftpack 0070  
                      _SSP1CLKPPSbits 1EC5                               ?_printf 0034  
                     ?_PMD_Initialize 0070                             ?___lltoft 0078  
                 __CFG_RSTOSC$HFINT32 0000                             ?__fassert 0041  
              dwt_xfer3000@reg_offset 0062                  _dwt_calcbandwidthadj 1170  
                             _SP1BRGH 011C                               _SP1BRGL 011B  
                             _OSCCON1 088D                               _OSCCON3 088F  
                      _SSP2CLKPPSbits 1EC8               ??_dwt_setrxantennadelay 007E  
                             _OSCTUNE 0892                               _SSP1ADD 018D  
                             _PPSLOCK 1E8F                               _SSP1BUF 018C  
                        _pdw3000local 00EF                        ?_dwt_configure 00D6  
                     ?_SPI1_ReadBlock 0071                     ??_dwt_writetxdata 00BD  
              __end_of_SPI1_WriteByte 18A0                ?_dwt_settxantennadelay 006B  
       dwt_write32bitoffsetreg@buffer 0069         dwt_write16bitoffsetreg@buffer 0069  
     __size_of_dwt_write8bitoffsetreg 001C         dwt_write32bitoffsetreg@regval 00B4  
       dwt_write16bitoffsetreg@regval 00B4                      ?_dwt_checkidlerc 0070  
           __size_of_dwt_force_clocks 0045                        ?_dwt_readdevid 00BD  
                   ??_SPI1_WriteBlock 0075            __size_of_writetospiwithcrc 0026  
                __CFG_SCANE$available 0000                       __size_of___lmul 002F  
           dwt_initialise@ldo_tune_hi 00D0                       __size_of___wmul 001B  
                             ___ftmul 12B4             dwt_initialise@ldo_tune_lo 00CC  
                             ___fttol 1057                               ___lwdiv 18D3  
                             ___lwmod 0801     dwt_modify16bitoffsetreg@regFileID 00A0  
   dwt_modify32bitoffsetreg@regFileID 00A0                               __doprnt 0CBE  
                          ??___ftpack 0075                            ??___lltoft 007C  
   dwt_modify16bitoffsetreg@regOffset 00A4     dwt_modify32bitoffsetreg@regOffset 00A4  
                             __ptext1 10DE                               __ptext2 2588  
                             __ptext3 1441                               __ptext4 1F83  
                             __ptext5 151D                               __ptext6 2663  
                             __ptext7 2647                               __ptext8 0B00  
                             __ptext9 252E                      _dwt_enable_rf_tx 1203  
                     __size_of_printf 0016                            ??__fassert 007E  
            SPI1_WriteBlock@blockSize 0073                               _dw_main 10DE  
                   __end_of_hexpowers 2955                               _dpowers 291C  
               _OSCILLATOR_Initialize 24BD                 ?_dwt_calcbandwidthadj 00BD  
                             _isdigit 24F4              ??_PIN_MANAGER_Initialize 0070  
                             _prev_ts 01BD            __size_of_SYSTEM_Initialize 000F  
                __end_of_dwt_xfer3000 0B00                               clrloop0 24DD  
                       __doprnt@width 0030                  end_of_initialization 07FD  
               __size_of_get_sts_mnth 006E                       ?_SPI1_WriteByte 0070  
         dwt_calcbandwidthadj@channel 00BF                               init_ram 24E8  
                             initloop 24E9      __size_of_dwt_modify8bitoffsetreg 0037  
                          _reset_DWIC 2588                     _EUSART_Initialize 24C6  
    __end_of_dwt_modify32bitoffsetreg 1441      __end_of_dwt_modify16bitoffsetreg 1A64  
                  ?_EUSART_Initialize 0070                               printf@f 0034  
                          _resp_rx_ts 01C5                      _dwt_generatecrc8 277C  
               __end_of_printf_string 2542               __size_of_dwt_initialise 01BE  
                           _SPI1_Open 1C7D                            _poll_tx_ts 01CD  
               __CFG_WDTCPS$WDTCPS_31 0000               dwt_read32bitoffsetreg@j 00BB  
                 ??_EUSART_Initialize 0070                       _dwt_setplenfine 260F  
            __end_of_dwt_writetxfctrl 151D                _dwt_write8bitoffsetreg 25F3  
           dwt_configure@preamble_len 015B                     _dwt_writetodevice 193B  
                        _get_sts_mnth 1DA8              ??_dwt_read16bitoffsetreg 00AB  
            ??_dwt_read32bitoffsetreg 00AB                   SPI1_ReadBlock@block 0071  
                           _TRISCbits 0013                 __size_of_EUSART_Write 0008  
     __dwt_kick_dgc_on_wakeup@channel 006D                       ??_dwt_configure 00D8  
                  ?_dwt_writetodevice 00A0                      _dwt_configmrxlut 1687  
               _dwt_read8bitoffsetreg 269C                      __CFG_FEXTOSC$OFF 0000  
                    dwt_pgf_cal@ldoen 00CD      __size_of_dwt_write32bitoffsetreg 004C  
    __size_of_dwt_write16bitoffsetreg 0028         dwt_enable_rftx_blocks@channel 00B8  
            __end_of_dwt_check_dev_id 19E0             __end_of_EUSART_Initialize 24D1  
                 ??_dwt_writetodevice 007E                            _status_reg 0138  
                     _SPI1_Initialize 27A6                     printf_string@data 0071  
                     ??_dwt_readdevid 007E                           ___ftmul@exp 002A  
          get_tx_timestamp_u64@F15740 0128               __size_of_dwt_setdwstate 00E4  
                          ?_SPI1_Open 0070                        __end_of___lmul 2800  
                      __end_of___wmul 25BD      __size_of_dwt_disable_rftx_blocks 001C  
                        _EUSART_Write 24B5          dwt_write8bitoffsetreg@regval 00B4  
           __end_of_dwt_writetodevice 1972                ?_OSCILLATOR_Initialize 0070  
                         _DW3000local 02A0                ??_dwt_calcbandwidthadj 00C1  
                          _writetospi 25D8                        __end_of_printf 2558  
                 start_initialization 07A2       __size_of_PIN_MANAGER_Initialize 004E  
             __size_of_dwt_run_pgfcal 0138                   dwt_setdwstate@state 00B8  
                         putch@txData 0071                             Sleep@time 0070  
                         ?_reset_DWIC 0070                      __CFG_LPBOREN$OFF 0000  
                dwt_configure@sts_len 0159                      _dwt_force_clocks 1AA8  
             __end_of_dwt_setplenfine 262B            __end_of_dwt_readfromdevice 193B  
          _EUSART_FramingErrorHandler 0148                      ??_PMD_Initialize 0070  
                            ??___lmul 0078                  dwt_starttx@checkTxOK 00C5  
                            ??___wmul 0074                           __doprnt@idx 0027  
                         __doprnt@len 0029                           __doprnt@val 002D  
                         __pdataBANK1 00EF                           __pdataBANK2 015F  
                         __pdataBANK3 01D5                           __pdataBANK4 0220  
                            ??_printf 003C                 readfromspi@readBuffer 0027  
                     _dwt_writetxdata 1F83                     __size_of___ftpack 0064  
                         __pbssBIGRAM 2EF0                 __size_of_dwt_xfer3000 019B  
                dwt_configmrxlut@lut0 00BA                  dwt_configmrxlut@lut1 00BE  
                dwt_configmrxlut@lut2 00C2                  dwt_configmrxlut@lut3 00C6  
                dwt_configmrxlut@lut4 00CA                  dwt_configmrxlut@lut5 00CE  
                dwt_configmrxlut@lut6 00D2                     __size_of___lltoft 0028  
                           ___latbits 0004                         ??_dwt_pgf_cal 007E  
                   __size_of__fassert 0016     __size_of_dwt_modify32bitoffsetreg 00D9  
   __size_of_dwt_modify16bitoffsetreg 0043                      ??_SPI1_ReadBlock 0075  
                       __pcstackBANK0 0020                         __pcstackBANK1 00A0  
                       __pcstackBANK2 014A                ?_dwt_read8bitoffsetreg 0068  
     __size_of_dwt_read16bitoffsetreg 0041       __size_of_dwt_read32bitoffsetreg 0075  
           ?_dwt_modify16bitoffsetreg 00A0             ?_dwt_modify32bitoffsetreg 00A0  
             __end_of_SPI1_Initialize 27D1                          _isdigit$2119 0070  
             ??_dwt_settxantennadelay 007E               dwt_configuretxrf@config 00C6  
               readfromspi@readlength 0023        __size_of_dwt_setrxantennadelay 001C  
    __size_of__dwt_kick_dgc_on_wakeup 0053         __end_of_dwt_setrxantennadelay 2663  
                       ??_dwt_starttx 00BD                       _SPI1_WriteBlock 256E  
                  dwt_configure@error 014C                         ??_readfromspi 0078  
             _dwt_modify8bitoffsetreg 1972            __size_of_EUSART_Initialize 000B  
                           __doprnt@c 0032                             __doprnt@f 0020  
            __end_of_dwt_enable_rf_tx 12B4                     dwt_run_pgfcal@cnt 00CC  
      dwt_read8bitoffsetreg@regFileID 0068                     dwt_run_pgfcal@val 00C8  
      dwt_read8bitoffsetreg@regOffset 006C                      ___lwdiv@dividend 0072  
              _PIN_MANAGER_Initialize 1B82                 dwt_xfer3000@regFileID 0047  
          dwt_modify8bitoffsetreg@_or 00A9            dwt_modify8bitoffsetreg@buf 0069  
                      _dwt_initialise 0B00                              ?___ftmul 0020  
                            ?___fttol 0030                          _dwt_xfer3000 0965  
                            ?___lwdiv 0070                           ??_SPI1_Open 0070  
                            ?___lwmod 0078                              ?__doprnt 0020  
                    __CFG_PPS1WAY$OFF 0000       dwt_read16bitoffsetreg@regFileID 0068  
     dwt_read32bitoffsetreg@regFileID 0068      dwt_write16bitoffsetreg@regFileID 00AC  
    dwt_write32bitoffsetreg@regFileID 00AC              ??_dwt_enable_rftx_blocks 007E  
          __size_of_dwt_writetodevice 0037       dwt_read16bitoffsetreg@regOffset 006C  
     dwt_read32bitoffsetreg@regOffset 006C                   get_sts_mnth@mod_val 0028  
    dwt_write16bitoffsetreg@regOffset 00B0      dwt_write32bitoffsetreg@regOffset 00B0  
                         ?_writetospi 0020                              ?_dw_main 0070  
                            _BAUD1CON 011F              dwt_readfromdevice@buffer 00AA  
                            ?_isdigit 0070                  dwt_generatecrc8@data 0076  
                 __size_of_reset_DWIC 001A                  dwt_generatecrc8@byte 0077  
            dwt_readfromdevice@length 00A6                        __size_of_Sleep 0029  
                    ??_SPI1_WriteByte 0070                             _hexpowers 294D  
             _dwt_write16bitoffsetreg 0004               _dwt_write32bitoffsetreg 1B36  
                    ___lwdiv@quotient 0075          ?__dwt_prog_ldo_and_bias_tune 0070  
            __end_of_dwt_generatecrc8 27A6         dwt_setplenfine@preambleLength 0069  
                      __size_of_putch 0004                     dwt_starttx@retval 00C3  
                 __end_of_dwt_pgf_cal 1DA8                        ___wmul@product 0074  
                            _LATAbits 0016                              _LATBbits 0017  
                           clear_ram0 24DC                     _eusartRxLastError 00EE  
                dwt_starttx@sys_state 00BF                   __end_of_dwt_starttx 1687  
                            _TAG_ADDR 0142                _dwt_read16bitoffsetreg 19E0  
              _dwt_read32bitoffsetreg 1E16                   __end_of_readfromspi 25D8  
              __end_of_dwt_initialise 0CBE                              _PIR3bits 070F  
                    ?_dwt_setplenfine 0070              __end_of_dwt_configmrxlut 1800  
                            _RNG_ADDR 0140                        _dwt_setdwstate 002C  
                            _SSP1CON1 0190                              _SSP1CON2 0191  
             __end_of_dwt_writetxdata 2000                              _SSP1STAT 018F  
             _dwt_disable_rftx_blocks 262B         writetospiwithcrc@headerBuffer 0022  
             ?_dwt_write8bitoffsetreg 00AC               dwt_writetodevice@buffer 00AA  
       writetospiwithcrc@headerLength 0020                    SPI1_ReadBlock@data 0076  
             dwt_writetodevice@length 00A6                             _rx_buffer 01A0  
            __size_of_dwt_checkidlerc 0033                     ___wmul@multiplier 0070  
         get_sys_timestamp_u64@F15736 0130                       dwt_pgf_cal@temp 00CF  
                   ?_dwt_writetxfctrl 00B8            dwt_writetodevice@regFileID 00A0  
             __end_of_SPI1_WriteBlock 2588                    ??_dwt_writetxfctrl 00BD  
               get_sts_mnth@shift_val 0023                      dwt_xfer3000@addr 005F  
                    dwt_xfer3000@crc8 0061      dwt_generatecrc8@crcRemainderInit 0074  
                    dwt_xfer3000@indx 004B                      dwt_xfer3000@mode 0053  
                      _dwt_run_pgfcal 082D                      ?_SPI1_Initialize 0070  
           ??_dwt_modify8bitoffsetreg 0068                     ___lmul@multiplier 0070  
           dwt_force_clocks@regvalue0 006D                 get_sts_mnth@threshold 0022  
                   ?_dwt_check_dev_id 00C1                    ??_dwt_check_dev_id 007E  
        dwt_setrxantennadelay@rxDelay 006B                   __size_of_writetospi 001B  
              writetospi@headerBuffer 0022                __end_of_dwt_setdwstate 0110  
    dwt_calcbandwidthadj@target_count 00BD                writetospi@headerLength 0020  
                     ?_dwt_initialise 00C5        __end_of_dwt_write8bitoffsetreg 260F  
                       ?__dwt_otpread 00BD               ??_OSCILLATOR_Initialize 0070  
                 _EUSART_ErrorHandler 0144                      __size_of___ftmul 00B4  
                    __size_of___fttol 0087                      __size_of___lwdiv 0034  
                    __size_of___lwmod 002C                              ___ftpack 1CDD  
                    __size_of__doprnt 0342                              ___lltoft 272B  
                            _add_time 01B5       __size_of_dwt_enable_rftx_blocks 0056  
                            __fassert 2558             ??_dwt_write16bitoffsetreg 0068  
           ??_dwt_write32bitoffsetreg 0068                      __size_of_dw_main 0092  
              __end_of_dwt_run_pgfcal 0965                      __size_of_isdigit 000E  
                            _crcTable 2EF0              __end_of_dwt_force_clocks 1AED  
                     ___lwdiv@divisor 0070                           _dwt_pgf_cal 1D41  
                     ___lwdiv@counter 0077               __dwt_kick_dgc_on_wakeup 1BD0  
                            __ptext10 18A0                              __ptext11 19A9  
                            __ptext20 1C23                              __ptext12 26BD  
                            __ptext21 0110                              __ptext13 1A64  
                            __ptext30 25F3                              __ptext22 1DA8  
                            __ptext14 1F07                              __ptext31 269C  
                            __ptext23 27D1                              __ptext15 1E8B  
                            __ptext40 193B                              __ptext32 1E16  
                            __ptext24 260F                              __ptext16 1170  
                            __ptext41 1BD0                              __ptext33 1972  
                            __ptext25 002C                              __ptext17 1001  
                            __ptext50 277C                              __ptext42 1368  
                            __ptext34 2753                              __ptext26 1AA8  
                            __ptext18 1203                              __ptext51 2558  
                            __ptext43 0965                              __ptext35 19E0  
                            __ptext27 0004                              __ptext19 262B  
                            __ptext60 272B                              __ptext52 2542  
                            __ptext44 2705                              __ptext36 1907  
                            __ptext28 1D41                              __ptext61 1057  
                            __ptext53 0CBE                              __ptext45 25D8  
                            __ptext37 1A21                              __ptext29 082D  
                            __ptext70 189B                              __ptext62 12B4  
                            __ptext54 24A9                              __ptext46 25BD  
                            __ptext38 1687                              __ptext71 1C7D  
                            __ptext63 1CDD                              __ptext55 24B5  
                            __ptext47 256E                              __ptext39 1B36  
                            __ptext64 2510                              __ptext56 24F4  
                            __ptext48 267F                              __ptext65 27A6  
                            __ptext57 25A2                              __ptext49 24D1  
                            __ptext66 24AD                              __ptext58 0801  
                            __ptext67 1B82                              __ptext59 18D3  
                            __ptext68 24BD                              __ptext69 24C6  
                  get_sts_mnth@cipher 0020                          _SSP1CON1bits 0190  
               __end_of_dwt_configure 07A2                __size_of_printf_string 0014  
                         _dwt_starttx 151D               dwt_readfromdevice@index 00A4  
                 dwt_generatecrc8@len 0072             dwt_generatecrc8@byteArray 0070  
               __dwt_otpread@ret_data 00C1                           _readfromspi 25BD  
                       __size_of_main 0049                          ??_reset_DWIC 0079  
                __CFG_WDTCWS$WDTCWS_7 0000                       ?_dwt_setdwstate 00B8  
                          _RC1STAbits 011D             ??_dwt_disable_rftx_blocks 007E  
               __end_of_dwt_readdevid 26E1               dwt_enable_rf_tx@channel 00B8  
          get_rx_timestamp_u64@F15744 0120                     _dwt_disable_rf_tx 1C23  
     __end_of_dwt_modify8bitoffsetreg 19A9                        ??__dwt_otpread 007E  
__size_of__dwt_prog_ldo_and_bias_tune 0044        dwt_writetxfctrl@txBufferOffset 00BA  
              dwt_writetodevice@index 00A4           dwt_modify32bitoffsetreg@_or 00AC  
         dwt_modify16bitoffsetreg@_or 00AA           dwt_modify16bitoffsetreg@buf 0069  
         dwt_modify32bitoffsetreg@buf 00B0                            _ODCONAbits 1F3A  
                          _ODCONBbits 1F45                      ?_dwt_writetxdata 00B8  
                      dwt_pgf_cal@val 00D1                    ?_dwt_disable_rf_tx 0070  
                     dwt_xfer3000@cnt 0066           PIN_MANAGER_Initialize@state 0070  
             ??_dwt_read8bitoffsetreg 007E                dwt_force_clocks@clocks 006B  
                 ??_dwt_disable_rf_tx 007E                    _dwt_readfromdevice 1907  
       __size_of_dwt_calcbandwidthadj 0093                       ?_dwt_run_pgfcal 00BD  
                    ?_SPI1_WriteBlock 0071                    __end_of_reset_DWIC 25A2  
                SPI1_WriteBlock@block 0071                     ??_dwt_checkidlerc 00B4  
                      __pstringtext10 2885                        __pstringtext11 2896  
                      __pstringtext20 2930                        __pstringtext12 28A7  
                      __pstringtext21 293A                        __pstringtext13 28B8  
                      __pstringtext22 2944                        __pstringtext14 28C8  
                      __pstringtext23 2955                        __pstringtext15 28D7  
                      __pstringtext24 0000                        __pstringtext16 28F4  
                      __pstringtext17 2902                        __pstringtext18 2910  
                      __pstringtext19 2926                              isdigit@c 0071  
                __dwt_otpread@address 00BD                   ?_dwt_readfromdevice 00A0  
      __size_of_dwt_settxantennadelay 001C         __end_of_dwt_settxantennadelay 267F  
                SPI1_Initialize@state 0070                      ___lwmod@dividend 007A  
              _dwt_enable_rftx_blocks 1001               ?_PIN_MANAGER_Initialize 0070  
                   __CFG_CLKOUTEN$OFF 0000                     get_sts_mnth@value 002A  
                   ?_dwt_enable_rf_tx 00B8       __end_of_dwt_write32bitoffsetreg 1B82  
     __end_of_dwt_write16bitoffsetreg 002C                           _PPSLOCKbits 1E8F  
           __end_of_dwt_disable_rf_tx 1C7D                    ??_dwt_enable_rf_tx 007E  
               writetospiwithcrc@crc8 0029              dwt_write32bitoffsetreg@j 006D  
                            printf@ap 003D                              printf@pb 003E  
         writetospiwithcrc@bodyBuffer 0027                  ??_dwt_readfromdevice 007E  
                       _printf_string 252E           writetospiwithcrc@bodyLength 0023  
                 SPI1_WriteBlock@data 0075                         __pstringtext1 28E6  
                       __pstringtext2 291C                         __pstringtext3 294D  
                       __pstringtext4 1800                         __pstringtext5 2800  
                       __pstringtext6 2824                         __pstringtext7 2843  
                       __pstringtext8 285D                         __pstringtext9 2872  
                        ??_writetospi 0077                  writetospi@bodyBuffer 0027  
                writetospi@bodyLength 0023                            _SSP1DATPPS 1EC6  
         dwt_writetxdata@txDataLength 00B8                            _SSP1CLKPPS 1EC5  
           ??__dwt_kick_dgc_on_wakeup 007E                       ___lwmod@divisor 0078  
                     ___lwmod@counter 007D       __end_of_dwt_disable_rftx_blocks 2647  
                          _TX1STAbits 011E                    dwt_checkidlerc@reg 00B8  
                   ?_dwt_generatecrc8 0070                    EUSART_Write@txData 0070  
          dwt_writetxdata@txDataBytes 00BA                    _dwt_configure$1230 0153  
                  _dwt_configure$1232 014A        __end_of_PIN_MANAGER_Initialize 1BD0  
             SPI1_ReadBlock@blockSize 0073                    ??_dwt_generatecrc8 0075  
               _dwt_setrxantennadelay 2647        dwt_enable_rf_tx@switch_control 00BC  
             ?_dwt_read32bitoffsetreg 0068               ?_dwt_read16bitoffsetreg 0068  
      dwt_disable_rf_tx@switch_config 006F                    __end_of_writetospi 25F3  
          __end_of_spi1_configuration 1804  
