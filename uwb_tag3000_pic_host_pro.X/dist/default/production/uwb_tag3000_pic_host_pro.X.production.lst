

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 10 16:25:32 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	stringtext23,global,class=STRCODE,delta=2
    31                           	psect	stringtext24,global,class=STRCODE,delta=2
    32                           	psect	stringtext25,global,class=STRCODE,delta=2
    33                           	psect	stringtext26,global,class=STRCODE,delta=2
    34                           	psect	stringtext27,global,class=STRCODE,delta=2
    35                           	psect	stringtext28,global,class=STRCODE,delta=2
    36                           	psect	stringtext29,global,class=STRCODE,delta=2
    37                           	psect	cinit,global,class=CODE,merge=1,delta=2
    38                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    39                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    41                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    42                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    43                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    44                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    45                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    46                           	psect	inittext,global,class=CODE,delta=2
    47                           	psect	clrtext,global,class=CODE,delta=2
    48                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    49                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    50                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    51                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    52                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    53                           	psect	text1,local,class=CODE,merge=1,delta=2
    54                           	psect	text2,local,class=CODE,merge=1,delta=2
    55                           	psect	text3,local,class=CODE,merge=1,delta=2
    56                           	psect	text4,local,class=CODE,merge=1,delta=2
    57                           	psect	text5,local,class=CODE,merge=1,delta=2
    58                           	psect	text6,local,class=CODE,merge=1,delta=2
    59                           	psect	text7,local,class=CODE,merge=1,delta=2
    60                           	psect	text8,local,class=CODE,merge=1,delta=2
    61                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text10,local,class=CODE,merge=1,delta=2
    63                           	psect	text11,local,class=CODE,merge=1,delta=2
    64                           	psect	text12,local,class=CODE,merge=1,delta=2
    65                           	psect	text13,local,class=CODE,merge=1,delta=2
    66                           	psect	text14,local,class=CODE,merge=1,delta=2
    67                           	psect	text15,local,class=CODE,merge=1,delta=2
    68                           	psect	text16,local,class=CODE,merge=1,delta=2
    69                           	psect	text17,local,class=CODE,merge=1,delta=2
    70                           	psect	text18,local,class=CODE,merge=1,delta=2
    71                           	psect	text19,local,class=CODE,merge=1,delta=2
    72                           	psect	text20,local,class=CODE,merge=1,delta=2
    73                           	psect	text21,local,class=CODE,merge=1,delta=2
    74                           	psect	text22,local,class=CODE,merge=1,delta=2
    75                           	psect	text23,local,class=CODE,merge=1,delta=2
    76                           	psect	text24,local,class=CODE,merge=1,delta=2
    77                           	psect	text25,local,class=CODE,merge=1,delta=2
    78                           	psect	text26,local,class=CODE,merge=1,delta=2
    79                           	psect	text27,local,class=CODE,merge=1,delta=2
    80                           	psect	text28,local,class=CODE,merge=1,delta=2
    81                           	psect	text29,local,class=CODE,merge=1,delta=2
    82                           	psect	text30,local,class=CODE,merge=1,delta=2
    83                           	psect	text31,local,class=CODE,merge=1,delta=2
    84                           	psect	text32,local,class=CODE,merge=1,delta=2
    85                           	psect	text33,local,class=CODE,merge=1,delta=2
    86                           	psect	text34,local,class=CODE,merge=1,delta=2
    87                           	psect	text35,local,class=CODE,merge=1,delta=2
    88                           	psect	text36,local,class=CODE,merge=1,delta=2
    89                           	psect	text37,local,class=CODE,merge=1,delta=2
    90                           	psect	text38,local,class=CODE,merge=1,delta=2
    91                           	psect	text39,local,class=CODE,merge=1,delta=2
    92                           	psect	text40,local,class=CODE,merge=1,delta=2
    93                           	psect	text41,local,class=CODE,merge=1,delta=2
    94                           	psect	text42,local,class=CODE,merge=1,delta=2
    95                           	psect	text43,local,class=CODE,merge=1,delta=2
    96                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text45,local,class=CODE,merge=1,delta=2
    98                           	psect	text46,local,class=CODE,merge=1,delta=2
    99                           	psect	text47,local,class=CODE,merge=1,delta=2
   100                           	psect	text48,local,class=CODE,merge=1,delta=2
   101                           	psect	text49,local,class=CODE,merge=1,delta=2
   102                           	psect	text50,local,class=CODE,merge=1,delta=2
   103                           	psect	text51,local,class=CODE,merge=1,delta=2
   104                           	psect	text52,local,class=CODE,merge=1,delta=2
   105                           	psect	text53,local,class=CODE,merge=1,delta=2
   106                           	psect	text54,local,class=CODE,merge=1,delta=2
   107                           	psect	text55,local,class=CODE,merge=1,delta=2
   108                           	psect	text56,local,class=CODE,merge=1,delta=2
   109                           	psect	text57,local,class=CODE,merge=1,delta=2
   110                           	psect	text58,local,class=CODE,merge=1,delta=2
   111                           	psect	text59,local,class=CODE,merge=1,delta=2
   112                           	psect	text60,local,class=CODE,merge=1,delta=2
   113                           	psect	text61,local,class=CODE,merge=1,delta=2
   114                           	psect	text62,local,class=CODE,merge=1,delta=2
   115                           	psect	text63,local,class=CODE,merge=1,delta=2
   116                           	psect	text64,local,class=CODE,merge=1,delta=2
   117                           	psect	text65,local,class=CODE,merge=1,delta=2
   118                           	psect	text66,local,class=CODE,merge=1,delta=2
   119                           	psect	text67,local,class=CODE,merge=1,delta=2
   120                           	psect	text68,local,class=CODE,merge=1,delta=2
   121                           	psect	text69,local,class=CODE,merge=1,delta=2
   122                           	psect	text70,local,class=CODE,merge=1,delta=2
   123                           	psect	text71,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text72,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text73,local,class=CODE,merge=1,delta=2
   126                           	psect	text74,local,class=CODE,merge=1,delta=2
   127                           	psect	text75,local,class=CODE,merge=1,delta=2
   128                           	psect	text76,local,class=CODE,merge=1,delta=2,group=2
   129                           	psect	text77,local,class=CODE,merge=1,delta=2,group=2
   130                           	psect	text78,local,class=CODE,merge=1,delta=2,group=2
   131                           	psect	text79,local,class=CODE,merge=1,delta=2,group=2
   132                           	psect	text80,local,class=CODE,merge=1,delta=2,group=2
   133                           	psect	text81,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text82,local,class=CODE,merge=1,delta=2,group=2
   135                           	psect	text83,local,class=CODE,merge=1,delta=2,group=2
   136                           	psect	text84,local,class=CODE,merge=1,delta=2
   137                           	psect	text85,local,class=CODE,merge=1,delta=2
   138                           	psect	text86,local,class=CODE,merge=1,delta=2
   139                           	psect	text87,local,class=CODE,merge=1,delta=2
   140                           	psect	text88,local,class=CODE,merge=1,delta=2
   141                           	psect	text89,local,class=CODE,merge=1,delta=2
   142                           	psect	text90,local,class=CODE,merge=1,delta=2
   143                           	psect	intentry,global,class=CODE,delta=2
   144                           	psect	text92,local,class=CODE,merge=1,delta=2
   145                           	dabs	1,0x1920,80
   146                           	dabs	1,0x18A0,80
   147                           	dabs	1,0x1820,80
   148                           	dabs	1,0x17E0,16
   149                           	dabs	1,0x2EF0,0,_crcTable
   150                           	dabs	1,0x7E,2
   151  0000                     
   152                           ; Version 1.45
   153                           ; Generated 16/11/2017 GMT
   154                           ; 
   155                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   156                           ; All rights reserved.
   157                           ; 
   158                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   159                           ; 
   160                           ; Redistribution and use in source and binary forms, with or without modification, are
   161                           ; permitted provided that the following conditions are met:
   162                           ; 
   163                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   164                           ;        conditions and the following disclaimer.
   165                           ; 
   166                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   167                           ;        of conditions and the following disclaimer in the documentation and/or other
   168                           ;        materials provided with the distribution.
   169                           ; 
   170                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   171                           ;        software without specific prior written permission.
   172                           ; 
   173                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   174                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   175                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   176                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   177                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   178                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   179                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   180                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   181                           ; 
   182                           ; 
   183                           ; Code-generator required, PIC16F18877 Definitions
   184                           ; 
   185                           ; SFR Addresses
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0008                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001C                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  008C                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  008E                     	;# 
   224  008F                     	;# 
   225  0090                     	;# 
   226  0090                     	;# 
   227  0091                     	;# 
   228  0093                     	;# 
   229  0094                     	;# 
   230  0095                     	;# 
   231  0096                     	;# 
   232  0097                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009A                     	;# 
   236  009B                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0110                     	;# 
   246  0110                     	;# 
   247  0111                     	;# 
   248  0112                     	;# 
   249  0112                     	;# 
   250  0113                     	;# 
   251  0114                     	;# 
   252  0114                     	;# 
   253  0115                     	;# 
   254  0116                     	;# 
   255  0116                     	;# 
   256  0117                     	;# 
   257  0119                     	;# 
   258  0119                     	;# 
   259  0119                     	;# 
   260  011A                     	;# 
   261  011A                     	;# 
   262  011A                     	;# 
   263  011B                     	;# 
   264  011B                     	;# 
   265  011B                     	;# 
   266  011B                     	;# 
   267  011B                     	;# 
   268  011C                     	;# 
   269  011C                     	;# 
   270  011C                     	;# 
   271  011D                     	;# 
   272  011D                     	;# 
   273  011D                     	;# 
   274  011E                     	;# 
   275  011E                     	;# 
   276  011E                     	;# 
   277  011F                     	;# 
   278  011F                     	;# 
   279  011F                     	;# 
   280  011F                     	;# 
   281  011F                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  018E                     	;# 
   285  018F                     	;# 
   286  0190                     	;# 
   287  0191                     	;# 
   288  0192                     	;# 
   289  0196                     	;# 
   290  0197                     	;# 
   291  0198                     	;# 
   292  0199                     	;# 
   293  019A                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  020C                     	;# 
   297  020C                     	;# 
   298  020D                     	;# 
   299  020E                     	;# 
   300  020F                     	;# 
   301  020F                     	;# 
   302  0210                     	;# 
   303  0210                     	;# 
   304  0211                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0212                     	;# 
   308  0213                     	;# 
   309  0214                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  0218                     	;# 
   317  0218                     	;# 
   318  0219                     	;# 
   319  021A                     	;# 
   320  021B                     	;# 
   321  021B                     	;# 
   322  021C                     	;# 
   323  021C                     	;# 
   324  021D                     	;# 
   325  021D                     	;# 
   326  021E                     	;# 
   327  021F                     	;# 
   328  028C                     	;# 
   329  028C                     	;# 
   330  028D                     	;# 
   331  028D                     	;# 
   332  028E                     	;# 
   333  028F                     	;# 
   334  0290                     	;# 
   335  0290                     	;# 
   336  0291                     	;# 
   337  0292                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0293                     	;# 
   341  0294                     	;# 
   342  0295                     	;# 
   343  0296                     	;# 
   344  0296                     	;# 
   345  0297                     	;# 
   346  0298                     	;# 
   347  0298                     	;# 
   348  0299                     	;# 
   349  0299                     	;# 
   350  029A                     	;# 
   351  029B                     	;# 
   352  029C                     	;# 
   353  029C                     	;# 
   354  029D                     	;# 
   355  030C                     	;# 
   356  030C                     	;# 
   357  030D                     	;# 
   358  030E                     	;# 
   359  030F                     	;# 
   360  0310                     	;# 
   361  0310                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0314                     	;# 
   366  0314                     	;# 
   367  0315                     	;# 
   368  0316                     	;# 
   369  0317                     	;# 
   370  0318                     	;# 
   371  0318                     	;# 
   372  0319                     	;# 
   373  031A                     	;# 
   374  031B                     	;# 
   375  031C                     	;# 
   376  031C                     	;# 
   377  031D                     	;# 
   378  031E                     	;# 
   379  031F                     	;# 
   380  038C                     	;# 
   381  038D                     	;# 
   382  038E                     	;# 
   383  0390                     	;# 
   384  0391                     	;# 
   385  0392                     	;# 
   386  040C                     	;# 
   387  040D                     	;# 
   388  040E                     	;# 
   389  040F                     	;# 
   390  0410                     	;# 
   391  0411                     	;# 
   392  0416                     	;# 
   393  0416                     	;# 
   394  0417                     	;# 
   395  0418                     	;# 
   396  0418                     	;# 
   397  0419                     	;# 
   398  041A                     	;# 
   399  041A                     	;# 
   400  041B                     	;# 
   401  041C                     	;# 
   402  041C                     	;# 
   403  041D                     	;# 
   404  041E                     	;# 
   405  041F                     	;# 
   406  048C                     	;# 
   407  048C                     	;# 
   408  048D                     	;# 
   409  048E                     	;# 
   410  048F                     	;# 
   411  048F                     	;# 
   412  0490                     	;# 
   413  0491                     	;# 
   414  0492                     	;# 
   415  0492                     	;# 
   416  0493                     	;# 
   417  0494                     	;# 
   418  0495                     	;# 
   419  0495                     	;# 
   420  0496                     	;# 
   421  0497                     	;# 
   422  0498                     	;# 
   423  0499                     	;# 
   424  049A                     	;# 
   425  049B                     	;# 
   426  049C                     	;# 
   427  049D                     	;# 
   428  050C                     	;# 
   429  050C                     	;# 
   430  050D                     	;# 
   431  050E                     	;# 
   432  050F                     	;# 
   433  050F                     	;# 
   434  0510                     	;# 
   435  0511                     	;# 
   436  0512                     	;# 
   437  0512                     	;# 
   438  0513                     	;# 
   439  0514                     	;# 
   440  0515                     	;# 
   441  0515                     	;# 
   442  0516                     	;# 
   443  0517                     	;# 
   444  0518                     	;# 
   445  0519                     	;# 
   446  051A                     	;# 
   447  051B                     	;# 
   448  051C                     	;# 
   449  051D                     	;# 
   450  058C                     	;# 
   451  058C                     	;# 
   452  058D                     	;# 
   453  058E                     	;# 
   454  058F                     	;# 
   455  058F                     	;# 
   456  0590                     	;# 
   457  0591                     	;# 
   458  0592                     	;# 
   459  0593                     	;# 
   460  060C                     	;# 
   461  060D                     	;# 
   462  060E                     	;# 
   463  060F                     	;# 
   464  0610                     	;# 
   465  0611                     	;# 
   466  0612                     	;# 
   467  0613                     	;# 
   468  0614                     	;# 
   469  0616                     	;# 
   470  0617                     	;# 
   471  0618                     	;# 
   472  0619                     	;# 
   473  061A                     	;# 
   474  061B                     	;# 
   475  061C                     	;# 
   476  061D                     	;# 
   477  061E                     	;# 
   478  068C                     	;# 
   479  068D                     	;# 
   480  068E                     	;# 
   481  068F                     	;# 
   482  0690                     	;# 
   483  0691                     	;# 
   484  0692                     	;# 
   485  0693                     	;# 
   486  0694                     	;# 
   487  070C                     	;# 
   488  070D                     	;# 
   489  070E                     	;# 
   490  070F                     	;# 
   491  0710                     	;# 
   492  0711                     	;# 
   493  0712                     	;# 
   494  0713                     	;# 
   495  0714                     	;# 
   496  0716                     	;# 
   497  0717                     	;# 
   498  0718                     	;# 
   499  0719                     	;# 
   500  071A                     	;# 
   501  071B                     	;# 
   502  071C                     	;# 
   503  071D                     	;# 
   504  071E                     	;# 
   505  0796                     	;# 
   506  0797                     	;# 
   507  0798                     	;# 
   508  0799                     	;# 
   509  079A                     	;# 
   510  079B                     	;# 
   511  080C                     	;# 
   512  080D                     	;# 
   513  080E                     	;# 
   514  080F                     	;# 
   515  0810                     	;# 
   516  0811                     	;# 
   517  0812                     	;# 
   518  0813                     	;# 
   519  0814                     	;# 
   520  081A                     	;# 
   521  081B                     	;# 
   522  081C                     	;# 
   523  081D                     	;# 
   524  081E                     	;# 
   525  081F                     	;# 
   526  088C                     	;# 
   527  088D                     	;# 
   528  088E                     	;# 
   529  088F                     	;# 
   530  0890                     	;# 
   531  0891                     	;# 
   532  0892                     	;# 
   533  0893                     	;# 
   534  0895                     	;# 
   535  0896                     	;# 
   536  0897                     	;# 
   537  0898                     	;# 
   538  0899                     	;# 
   539  089A                     	;# 
   540  089B                     	;# 
   541  090C                     	;# 
   542  090E                     	;# 
   543  090F                     	;# 
   544  091F                     	;# 
   545  098F                     	;# 
   546  098F                     	;# 
   547  0990                     	;# 
   548  0991                     	;# 
   549  0992                     	;# 
   550  0993                     	;# 
   551  0994                     	;# 
   552  0995                     	;# 
   553  0996                     	;# 
   554  0997                     	;# 
   555  1E0F                     	;# 
   556  1E10                     	;# 
   557  1E11                     	;# 
   558  1E12                     	;# 
   559  1E13                     	;# 
   560  1E14                     	;# 
   561  1E15                     	;# 
   562  1E16                     	;# 
   563  1E17                     	;# 
   564  1E18                     	;# 
   565  1E19                     	;# 
   566  1E1A                     	;# 
   567  1E1B                     	;# 
   568  1E1C                     	;# 
   569  1E1D                     	;# 
   570  1E1E                     	;# 
   571  1E1F                     	;# 
   572  1E20                     	;# 
   573  1E21                     	;# 
   574  1E22                     	;# 
   575  1E23                     	;# 
   576  1E24                     	;# 
   577  1E25                     	;# 
   578  1E26                     	;# 
   579  1E27                     	;# 
   580  1E28                     	;# 
   581  1E29                     	;# 
   582  1E2A                     	;# 
   583  1E2B                     	;# 
   584  1E2C                     	;# 
   585  1E2D                     	;# 
   586  1E2E                     	;# 
   587  1E2F                     	;# 
   588  1E30                     	;# 
   589  1E31                     	;# 
   590  1E32                     	;# 
   591  1E33                     	;# 
   592  1E34                     	;# 
   593  1E35                     	;# 
   594  1E36                     	;# 
   595  1E37                     	;# 
   596  1E8F                     	;# 
   597  1E90                     	;# 
   598  1E91                     	;# 
   599  1E92                     	;# 
   600  1E93                     	;# 
   601  1E94                     	;# 
   602  1E95                     	;# 
   603  1E96                     	;# 
   604  1E97                     	;# 
   605  1E9C                     	;# 
   606  1E9D                     	;# 
   607  1E9E                     	;# 
   608  1EA1                     	;# 
   609  1EA2                     	;# 
   610  1EA3                     	;# 
   611  1EA4                     	;# 
   612  1EA5                     	;# 
   613  1EA9                     	;# 
   614  1EAA                     	;# 
   615  1EAB                     	;# 
   616  1EAC                     	;# 
   617  1EB1                     	;# 
   618  1EB2                     	;# 
   619  1EB3                     	;# 
   620  1EB8                     	;# 
   621  1EB9                     	;# 
   622  1EBA                     	;# 
   623  1EBB                     	;# 
   624  1EBC                     	;# 
   625  1EBD                     	;# 
   626  1EBE                     	;# 
   627  1EC3                     	;# 
   628  1EC5                     	;# 
   629  1EC6                     	;# 
   630  1EC7                     	;# 
   631  1EC8                     	;# 
   632  1EC9                     	;# 
   633  1ECA                     	;# 
   634  1ECB                     	;# 
   635  1ECC                     	;# 
   636  1F10                     	;# 
   637  1F11                     	;# 
   638  1F12                     	;# 
   639  1F13                     	;# 
   640  1F14                     	;# 
   641  1F15                     	;# 
   642  1F16                     	;# 
   643  1F17                     	;# 
   644  1F18                     	;# 
   645  1F19                     	;# 
   646  1F1A                     	;# 
   647  1F1B                     	;# 
   648  1F1C                     	;# 
   649  1F1D                     	;# 
   650  1F1E                     	;# 
   651  1F1F                     	;# 
   652  1F20                     	;# 
   653  1F21                     	;# 
   654  1F22                     	;# 
   655  1F23                     	;# 
   656  1F24                     	;# 
   657  1F25                     	;# 
   658  1F26                     	;# 
   659  1F27                     	;# 
   660  1F28                     	;# 
   661  1F29                     	;# 
   662  1F2A                     	;# 
   663  1F2B                     	;# 
   664  1F2C                     	;# 
   665  1F2D                     	;# 
   666  1F2E                     	;# 
   667  1F2F                     	;# 
   668  1F30                     	;# 
   669  1F31                     	;# 
   670  1F32                     	;# 
   671  1F38                     	;# 
   672  1F39                     	;# 
   673  1F3A                     	;# 
   674  1F3B                     	;# 
   675  1F3C                     	;# 
   676  1F3D                     	;# 
   677  1F3E                     	;# 
   678  1F3F                     	;# 
   679  1F40                     	;# 
   680  1F41                     	;# 
   681  1F43                     	;# 
   682  1F44                     	;# 
   683  1F45                     	;# 
   684  1F46                     	;# 
   685  1F47                     	;# 
   686  1F48                     	;# 
   687  1F49                     	;# 
   688  1F4A                     	;# 
   689  1F4B                     	;# 
   690  1F4C                     	;# 
   691  1F4E                     	;# 
   692  1F4F                     	;# 
   693  1F50                     	;# 
   694  1F51                     	;# 
   695  1F52                     	;# 
   696  1F53                     	;# 
   697  1F54                     	;# 
   698  1F55                     	;# 
   699  1F56                     	;# 
   700  1F57                     	;# 
   701  1F59                     	;# 
   702  1F5A                     	;# 
   703  1F5B                     	;# 
   704  1F5C                     	;# 
   705  1F5D                     	;# 
   706  1F61                     	;# 
   707  1F62                     	;# 
   708  1F64                     	;# 
   709  1F65                     	;# 
   710  1F66                     	;# 
   711  1F67                     	;# 
   712  1F68                     	;# 
   713  1F69                     	;# 
   714  1F6A                     	;# 
   715  1F6B                     	;# 
   716  1F6C                     	;# 
   717  1F6D                     	;# 
   718  1FE4                     	;# 
   719  1FE5                     	;# 
   720  1FE6                     	;# 
   721  1FE7                     	;# 
   722  1FE8                     	;# 
   723  1FE9                     	;# 
   724  1FEA                     	;# 
   725  1FEB                     	;# 
   726  1FED                     	;# 
   727  1FEE                     	;# 
   728  1FEF                     	;# 
   729  0000                     	;# 
   730  0001                     	;# 
   731  0002                     	;# 
   732  0003                     	;# 
   733  0004                     	;# 
   734  0005                     	;# 
   735  0006                     	;# 
   736  0007                     	;# 
   737  0008                     	;# 
   738  0009                     	;# 
   739  000A                     	;# 
   740  000B                     	;# 
   741  000C                     	;# 
   742  000D                     	;# 
   743  000E                     	;# 
   744  000F                     	;# 
   745  0010                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0013                     	;# 
   749  0014                     	;# 
   750  0015                     	;# 
   751  0016                     	;# 
   752  0017                     	;# 
   753  0018                     	;# 
   754  0019                     	;# 
   755  001A                     	;# 
   756  001C                     	;# 
   757  001C                     	;# 
   758  001D                     	;# 
   759  001D                     	;# 
   760  001E                     	;# 
   761  001F                     	;# 
   762  008C                     	;# 
   763  008C                     	;# 
   764  008D                     	;# 
   765  008E                     	;# 
   766  008E                     	;# 
   767  008F                     	;# 
   768  0090                     	;# 
   769  0090                     	;# 
   770  0091                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  010E                     	;# 
   787  010F                     	;# 
   788  0110                     	;# 
   789  0110                     	;# 
   790  0111                     	;# 
   791  0112                     	;# 
   792  0112                     	;# 
   793  0113                     	;# 
   794  0114                     	;# 
   795  0114                     	;# 
   796  0115                     	;# 
   797  0116                     	;# 
   798  0116                     	;# 
   799  0117                     	;# 
   800  0119                     	;# 
   801  0119                     	;# 
   802  0119                     	;# 
   803  011A                     	;# 
   804  011A                     	;# 
   805  011A                     	;# 
   806  011B                     	;# 
   807  011B                     	;# 
   808  011B                     	;# 
   809  011B                     	;# 
   810  011B                     	;# 
   811  011C                     	;# 
   812  011C                     	;# 
   813  011C                     	;# 
   814  011D                     	;# 
   815  011D                     	;# 
   816  011D                     	;# 
   817  011E                     	;# 
   818  011E                     	;# 
   819  011E                     	;# 
   820  011F                     	;# 
   821  011F                     	;# 
   822  011F                     	;# 
   823  011F                     	;# 
   824  011F                     	;# 
   825  018C                     	;# 
   826  018D                     	;# 
   827  018E                     	;# 
   828  018F                     	;# 
   829  0190                     	;# 
   830  0191                     	;# 
   831  0192                     	;# 
   832  0196                     	;# 
   833  0197                     	;# 
   834  0198                     	;# 
   835  0199                     	;# 
   836  019A                     	;# 
   837  019B                     	;# 
   838  019C                     	;# 
   839  020C                     	;# 
   840  020C                     	;# 
   841  020D                     	;# 
   842  020E                     	;# 
   843  020F                     	;# 
   844  020F                     	;# 
   845  0210                     	;# 
   846  0210                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0214                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0216                     	;# 
   856  0216                     	;# 
   857  0217                     	;# 
   858  0217                     	;# 
   859  0218                     	;# 
   860  0218                     	;# 
   861  0219                     	;# 
   862  021A                     	;# 
   863  021B                     	;# 
   864  021B                     	;# 
   865  021C                     	;# 
   866  021C                     	;# 
   867  021D                     	;# 
   868  021D                     	;# 
   869  021E                     	;# 
   870  021F                     	;# 
   871  028C                     	;# 
   872  028C                     	;# 
   873  028D                     	;# 
   874  028D                     	;# 
   875  028E                     	;# 
   876  028F                     	;# 
   877  0290                     	;# 
   878  0290                     	;# 
   879  0291                     	;# 
   880  0292                     	;# 
   881  0292                     	;# 
   882  0293                     	;# 
   883  0293                     	;# 
   884  0294                     	;# 
   885  0295                     	;# 
   886  0296                     	;# 
   887  0296                     	;# 
   888  0297                     	;# 
   889  0298                     	;# 
   890  0298                     	;# 
   891  0299                     	;# 
   892  0299                     	;# 
   893  029A                     	;# 
   894  029B                     	;# 
   895  029C                     	;# 
   896  029C                     	;# 
   897  029D                     	;# 
   898  030C                     	;# 
   899  030C                     	;# 
   900  030D                     	;# 
   901  030E                     	;# 
   902  030F                     	;# 
   903  0310                     	;# 
   904  0310                     	;# 
   905  0311                     	;# 
   906  0312                     	;# 
   907  0313                     	;# 
   908  0314                     	;# 
   909  0314                     	;# 
   910  0315                     	;# 
   911  0316                     	;# 
   912  0317                     	;# 
   913  0318                     	;# 
   914  0318                     	;# 
   915  0319                     	;# 
   916  031A                     	;# 
   917  031B                     	;# 
   918  031C                     	;# 
   919  031C                     	;# 
   920  031D                     	;# 
   921  031E                     	;# 
   922  031F                     	;# 
   923  038C                     	;# 
   924  038D                     	;# 
   925  038E                     	;# 
   926  0390                     	;# 
   927  0391                     	;# 
   928  0392                     	;# 
   929  040C                     	;# 
   930  040D                     	;# 
   931  040E                     	;# 
   932  040F                     	;# 
   933  0410                     	;# 
   934  0411                     	;# 
   935  0416                     	;# 
   936  0416                     	;# 
   937  0417                     	;# 
   938  0418                     	;# 
   939  0418                     	;# 
   940  0419                     	;# 
   941  041A                     	;# 
   942  041A                     	;# 
   943  041B                     	;# 
   944  041C                     	;# 
   945  041C                     	;# 
   946  041D                     	;# 
   947  041E                     	;# 
   948  041F                     	;# 
   949  048C                     	;# 
   950  048C                     	;# 
   951  048D                     	;# 
   952  048E                     	;# 
   953  048F                     	;# 
   954  048F                     	;# 
   955  0490                     	;# 
   956  0491                     	;# 
   957  0492                     	;# 
   958  0492                     	;# 
   959  0493                     	;# 
   960  0494                     	;# 
   961  0495                     	;# 
   962  0495                     	;# 
   963  0496                     	;# 
   964  0497                     	;# 
   965  0498                     	;# 
   966  0499                     	;# 
   967  049A                     	;# 
   968  049B                     	;# 
   969  049C                     	;# 
   970  049D                     	;# 
   971  050C                     	;# 
   972  050C                     	;# 
   973  050D                     	;# 
   974  050E                     	;# 
   975  050F                     	;# 
   976  050F                     	;# 
   977  0510                     	;# 
   978  0511                     	;# 
   979  0512                     	;# 
   980  0512                     	;# 
   981  0513                     	;# 
   982  0514                     	;# 
   983  0515                     	;# 
   984  0515                     	;# 
   985  0516                     	;# 
   986  0517                     	;# 
   987  0518                     	;# 
   988  0519                     	;# 
   989  051A                     	;# 
   990  051B                     	;# 
   991  051C                     	;# 
   992  051D                     	;# 
   993  058C                     	;# 
   994  058C                     	;# 
   995  058D                     	;# 
   996  058E                     	;# 
   997  058F                     	;# 
   998  058F                     	;# 
   999  0590                     	;# 
  1000  0591                     	;# 
  1001  0592                     	;# 
  1002  0593                     	;# 
  1003  060C                     	;# 
  1004  060D                     	;# 
  1005  060E                     	;# 
  1006  060F                     	;# 
  1007  0610                     	;# 
  1008  0611                     	;# 
  1009  0612                     	;# 
  1010  0613                     	;# 
  1011  0614                     	;# 
  1012  0616                     	;# 
  1013  0617                     	;# 
  1014  0618                     	;# 
  1015  0619                     	;# 
  1016  061A                     	;# 
  1017  061B                     	;# 
  1018  061C                     	;# 
  1019  061D                     	;# 
  1020  061E                     	;# 
  1021  068C                     	;# 
  1022  068D                     	;# 
  1023  068E                     	;# 
  1024  068F                     	;# 
  1025  0690                     	;# 
  1026  0691                     	;# 
  1027  0692                     	;# 
  1028  0693                     	;# 
  1029  0694                     	;# 
  1030  070C                     	;# 
  1031  070D                     	;# 
  1032  070E                     	;# 
  1033  070F                     	;# 
  1034  0710                     	;# 
  1035  0711                     	;# 
  1036  0712                     	;# 
  1037  0713                     	;# 
  1038  0714                     	;# 
  1039  0716                     	;# 
  1040  0717                     	;# 
  1041  0718                     	;# 
  1042  0719                     	;# 
  1043  071A                     	;# 
  1044  071B                     	;# 
  1045  071C                     	;# 
  1046  071D                     	;# 
  1047  071E                     	;# 
  1048  0796                     	;# 
  1049  0797                     	;# 
  1050  0798                     	;# 
  1051  0799                     	;# 
  1052  079A                     	;# 
  1053  079B                     	;# 
  1054  080C                     	;# 
  1055  080D                     	;# 
  1056  080E                     	;# 
  1057  080F                     	;# 
  1058  0810                     	;# 
  1059  0811                     	;# 
  1060  0812                     	;# 
  1061  0813                     	;# 
  1062  0814                     	;# 
  1063  081A                     	;# 
  1064  081B                     	;# 
  1065  081C                     	;# 
  1066  081D                     	;# 
  1067  081E                     	;# 
  1068  081F                     	;# 
  1069  088C                     	;# 
  1070  088D                     	;# 
  1071  088E                     	;# 
  1072  088F                     	;# 
  1073  0890                     	;# 
  1074  0891                     	;# 
  1075  0892                     	;# 
  1076  0893                     	;# 
  1077  0895                     	;# 
  1078  0896                     	;# 
  1079  0897                     	;# 
  1080  0898                     	;# 
  1081  0899                     	;# 
  1082  089A                     	;# 
  1083  089B                     	;# 
  1084  090C                     	;# 
  1085  090E                     	;# 
  1086  090F                     	;# 
  1087  091F                     	;# 
  1088  098F                     	;# 
  1089  098F                     	;# 
  1090  0990                     	;# 
  1091  0991                     	;# 
  1092  0992                     	;# 
  1093  0993                     	;# 
  1094  0994                     	;# 
  1095  0995                     	;# 
  1096  0996                     	;# 
  1097  0997                     	;# 
  1098  1E0F                     	;# 
  1099  1E10                     	;# 
  1100  1E11                     	;# 
  1101  1E12                     	;# 
  1102  1E13                     	;# 
  1103  1E14                     	;# 
  1104  1E15                     	;# 
  1105  1E16                     	;# 
  1106  1E17                     	;# 
  1107  1E18                     	;# 
  1108  1E19                     	;# 
  1109  1E1A                     	;# 
  1110  1E1B                     	;# 
  1111  1E1C                     	;# 
  1112  1E1D                     	;# 
  1113  1E1E                     	;# 
  1114  1E1F                     	;# 
  1115  1E20                     	;# 
  1116  1E21                     	;# 
  1117  1E22                     	;# 
  1118  1E23                     	;# 
  1119  1E24                     	;# 
  1120  1E25                     	;# 
  1121  1E26                     	;# 
  1122  1E27                     	;# 
  1123  1E28                     	;# 
  1124  1E29                     	;# 
  1125  1E2A                     	;# 
  1126  1E2B                     	;# 
  1127  1E2C                     	;# 
  1128  1E2D                     	;# 
  1129  1E2E                     	;# 
  1130  1E2F                     	;# 
  1131  1E30                     	;# 
  1132  1E31                     	;# 
  1133  1E32                     	;# 
  1134  1E33                     	;# 
  1135  1E34                     	;# 
  1136  1E35                     	;# 
  1137  1E36                     	;# 
  1138  1E37                     	;# 
  1139  1E8F                     	;# 
  1140  1E90                     	;# 
  1141  1E91                     	;# 
  1142  1E92                     	;# 
  1143  1E93                     	;# 
  1144  1E94                     	;# 
  1145  1E95                     	;# 
  1146  1E96                     	;# 
  1147  1E97                     	;# 
  1148  1E9C                     	;# 
  1149  1E9D                     	;# 
  1150  1E9E                     	;# 
  1151  1EA1                     	;# 
  1152  1EA2                     	;# 
  1153  1EA3                     	;# 
  1154  1EA4                     	;# 
  1155  1EA5                     	;# 
  1156  1EA9                     	;# 
  1157  1EAA                     	;# 
  1158  1EAB                     	;# 
  1159  1EAC                     	;# 
  1160  1EB1                     	;# 
  1161  1EB2                     	;# 
  1162  1EB3                     	;# 
  1163  1EB8                     	;# 
  1164  1EB9                     	;# 
  1165  1EBA                     	;# 
  1166  1EBB                     	;# 
  1167  1EBC                     	;# 
  1168  1EBD                     	;# 
  1169  1EBE                     	;# 
  1170  1EC3                     	;# 
  1171  1EC5                     	;# 
  1172  1EC6                     	;# 
  1173  1EC7                     	;# 
  1174  1EC8                     	;# 
  1175  1EC9                     	;# 
  1176  1ECA                     	;# 
  1177  1ECB                     	;# 
  1178  1ECC                     	;# 
  1179  1F10                     	;# 
  1180  1F11                     	;# 
  1181  1F12                     	;# 
  1182  1F13                     	;# 
  1183  1F14                     	;# 
  1184  1F15                     	;# 
  1185  1F16                     	;# 
  1186  1F17                     	;# 
  1187  1F18                     	;# 
  1188  1F19                     	;# 
  1189  1F1A                     	;# 
  1190  1F1B                     	;# 
  1191  1F1C                     	;# 
  1192  1F1D                     	;# 
  1193  1F1E                     	;# 
  1194  1F1F                     	;# 
  1195  1F20                     	;# 
  1196  1F21                     	;# 
  1197  1F22                     	;# 
  1198  1F23                     	;# 
  1199  1F24                     	;# 
  1200  1F25                     	;# 
  1201  1F26                     	;# 
  1202  1F27                     	;# 
  1203  1F28                     	;# 
  1204  1F29                     	;# 
  1205  1F2A                     	;# 
  1206  1F2B                     	;# 
  1207  1F2C                     	;# 
  1208  1F2D                     	;# 
  1209  1F2E                     	;# 
  1210  1F2F                     	;# 
  1211  1F30                     	;# 
  1212  1F31                     	;# 
  1213  1F32                     	;# 
  1214  1F38                     	;# 
  1215  1F39                     	;# 
  1216  1F3A                     	;# 
  1217  1F3B                     	;# 
  1218  1F3C                     	;# 
  1219  1F3D                     	;# 
  1220  1F3E                     	;# 
  1221  1F3F                     	;# 
  1222  1F40                     	;# 
  1223  1F41                     	;# 
  1224  1F43                     	;# 
  1225  1F44                     	;# 
  1226  1F45                     	;# 
  1227  1F46                     	;# 
  1228  1F47                     	;# 
  1229  1F48                     	;# 
  1230  1F49                     	;# 
  1231  1F4A                     	;# 
  1232  1F4B                     	;# 
  1233  1F4C                     	;# 
  1234  1F4E                     	;# 
  1235  1F4F                     	;# 
  1236  1F50                     	;# 
  1237  1F51                     	;# 
  1238  1F52                     	;# 
  1239  1F53                     	;# 
  1240  1F54                     	;# 
  1241  1F55                     	;# 
  1242  1F56                     	;# 
  1243  1F57                     	;# 
  1244  1F59                     	;# 
  1245  1F5A                     	;# 
  1246  1F5B                     	;# 
  1247  1F5C                     	;# 
  1248  1F5D                     	;# 
  1249  1F61                     	;# 
  1250  1F62                     	;# 
  1251  1F64                     	;# 
  1252  1F65                     	;# 
  1253  1F66                     	;# 
  1254  1F67                     	;# 
  1255  1F68                     	;# 
  1256  1F69                     	;# 
  1257  1F6A                     	;# 
  1258  1F6B                     	;# 
  1259  1F6C                     	;# 
  1260  1F6D                     	;# 
  1261  1FE4                     	;# 
  1262  1FE5                     	;# 
  1263  1FE6                     	;# 
  1264  1FE7                     	;# 
  1265  1FE8                     	;# 
  1266  1FE9                     	;# 
  1267  1FEA                     	;# 
  1268  1FEB                     	;# 
  1269  1FED                     	;# 
  1270  1FEE                     	;# 
  1271  1FEF                     	;# 
  1272  0000                     	;# 
  1273  0001                     	;# 
  1274  0002                     	;# 
  1275  0003                     	;# 
  1276  0004                     	;# 
  1277  0005                     	;# 
  1278  0006                     	;# 
  1279  0007                     	;# 
  1280  0008                     	;# 
  1281  0009                     	;# 
  1282  000A                     	;# 
  1283  000B                     	;# 
  1284  000C                     	;# 
  1285  000D                     	;# 
  1286  000E                     	;# 
  1287  000F                     	;# 
  1288  0010                     	;# 
  1289  0011                     	;# 
  1290  0012                     	;# 
  1291  0013                     	;# 
  1292  0014                     	;# 
  1293  0015                     	;# 
  1294  0016                     	;# 
  1295  0017                     	;# 
  1296  0018                     	;# 
  1297  0019                     	;# 
  1298  001A                     	;# 
  1299  001C                     	;# 
  1300  001C                     	;# 
  1301  001D                     	;# 
  1302  001D                     	;# 
  1303  001E                     	;# 
  1304  001F                     	;# 
  1305  008C                     	;# 
  1306  008C                     	;# 
  1307  008D                     	;# 
  1308  008E                     	;# 
  1309  008E                     	;# 
  1310  008F                     	;# 
  1311  0090                     	;# 
  1312  0090                     	;# 
  1313  0091                     	;# 
  1314  0093                     	;# 
  1315  0094                     	;# 
  1316  0095                     	;# 
  1317  0096                     	;# 
  1318  0097                     	;# 
  1319  0098                     	;# 
  1320  0099                     	;# 
  1321  009A                     	;# 
  1322  009B                     	;# 
  1323  009C                     	;# 
  1324  009D                     	;# 
  1325  009E                     	;# 
  1326  010C                     	;# 
  1327  010D                     	;# 
  1328  010E                     	;# 
  1329  010E                     	;# 
  1330  010F                     	;# 
  1331  0110                     	;# 
  1332  0110                     	;# 
  1333  0111                     	;# 
  1334  0112                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0114                     	;# 
  1339  0115                     	;# 
  1340  0116                     	;# 
  1341  0116                     	;# 
  1342  0117                     	;# 
  1343  0119                     	;# 
  1344  0119                     	;# 
  1345  0119                     	;# 
  1346  011A                     	;# 
  1347  011A                     	;# 
  1348  011A                     	;# 
  1349  011B                     	;# 
  1350  011B                     	;# 
  1351  011B                     	;# 
  1352  011B                     	;# 
  1353  011B                     	;# 
  1354  011C                     	;# 
  1355  011C                     	;# 
  1356  011C                     	;# 
  1357  011D                     	;# 
  1358  011D                     	;# 
  1359  011D                     	;# 
  1360  011E                     	;# 
  1361  011E                     	;# 
  1362  011E                     	;# 
  1363  011F                     	;# 
  1364  011F                     	;# 
  1365  011F                     	;# 
  1366  011F                     	;# 
  1367  011F                     	;# 
  1368  018C                     	;# 
  1369  018D                     	;# 
  1370  018E                     	;# 
  1371  018F                     	;# 
  1372  0190                     	;# 
  1373  0191                     	;# 
  1374  0192                     	;# 
  1375  0196                     	;# 
  1376  0197                     	;# 
  1377  0198                     	;# 
  1378  0199                     	;# 
  1379  019A                     	;# 
  1380  019B                     	;# 
  1381  019C                     	;# 
  1382  020C                     	;# 
  1383  020C                     	;# 
  1384  020D                     	;# 
  1385  020E                     	;# 
  1386  020F                     	;# 
  1387  020F                     	;# 
  1388  0210                     	;# 
  1389  0210                     	;# 
  1390  0211                     	;# 
  1391  0211                     	;# 
  1392  0212                     	;# 
  1393  0212                     	;# 
  1394  0213                     	;# 
  1395  0214                     	;# 
  1396  0215                     	;# 
  1397  0215                     	;# 
  1398  0216                     	;# 
  1399  0216                     	;# 
  1400  0217                     	;# 
  1401  0217                     	;# 
  1402  0218                     	;# 
  1403  0218                     	;# 
  1404  0219                     	;# 
  1405  021A                     	;# 
  1406  021B                     	;# 
  1407  021B                     	;# 
  1408  021C                     	;# 
  1409  021C                     	;# 
  1410  021D                     	;# 
  1411  021D                     	;# 
  1412  021E                     	;# 
  1413  021F                     	;# 
  1414  028C                     	;# 
  1415  028C                     	;# 
  1416  028D                     	;# 
  1417  028D                     	;# 
  1418  028E                     	;# 
  1419  028F                     	;# 
  1420  0290                     	;# 
  1421  0290                     	;# 
  1422  0291                     	;# 
  1423  0292                     	;# 
  1424  0292                     	;# 
  1425  0293                     	;# 
  1426  0293                     	;# 
  1427  0294                     	;# 
  1428  0295                     	;# 
  1429  0296                     	;# 
  1430  0296                     	;# 
  1431  0297                     	;# 
  1432  0298                     	;# 
  1433  0298                     	;# 
  1434  0299                     	;# 
  1435  0299                     	;# 
  1436  029A                     	;# 
  1437  029B                     	;# 
  1438  029C                     	;# 
  1439  029C                     	;# 
  1440  029D                     	;# 
  1441  030C                     	;# 
  1442  030C                     	;# 
  1443  030D                     	;# 
  1444  030E                     	;# 
  1445  030F                     	;# 
  1446  0310                     	;# 
  1447  0310                     	;# 
  1448  0311                     	;# 
  1449  0312                     	;# 
  1450  0313                     	;# 
  1451  0314                     	;# 
  1452  0314                     	;# 
  1453  0315                     	;# 
  1454  0316                     	;# 
  1455  0317                     	;# 
  1456  0318                     	;# 
  1457  0318                     	;# 
  1458  0319                     	;# 
  1459  031A                     	;# 
  1460  031B                     	;# 
  1461  031C                     	;# 
  1462  031C                     	;# 
  1463  031D                     	;# 
  1464  031E                     	;# 
  1465  031F                     	;# 
  1466  038C                     	;# 
  1467  038D                     	;# 
  1468  038E                     	;# 
  1469  0390                     	;# 
  1470  0391                     	;# 
  1471  0392                     	;# 
  1472  040C                     	;# 
  1473  040D                     	;# 
  1474  040E                     	;# 
  1475  040F                     	;# 
  1476  0410                     	;# 
  1477  0411                     	;# 
  1478  0416                     	;# 
  1479  0416                     	;# 
  1480  0417                     	;# 
  1481  0418                     	;# 
  1482  0418                     	;# 
  1483  0419                     	;# 
  1484  041A                     	;# 
  1485  041A                     	;# 
  1486  041B                     	;# 
  1487  041C                     	;# 
  1488  041C                     	;# 
  1489  041D                     	;# 
  1490  041E                     	;# 
  1491  041F                     	;# 
  1492  048C                     	;# 
  1493  048C                     	;# 
  1494  048D                     	;# 
  1495  048E                     	;# 
  1496  048F                     	;# 
  1497  048F                     	;# 
  1498  0490                     	;# 
  1499  0491                     	;# 
  1500  0492                     	;# 
  1501  0492                     	;# 
  1502  0493                     	;# 
  1503  0494                     	;# 
  1504  0495                     	;# 
  1505  0495                     	;# 
  1506  0496                     	;# 
  1507  0497                     	;# 
  1508  0498                     	;# 
  1509  0499                     	;# 
  1510  049A                     	;# 
  1511  049B                     	;# 
  1512  049C                     	;# 
  1513  049D                     	;# 
  1514  050C                     	;# 
  1515  050C                     	;# 
  1516  050D                     	;# 
  1517  050E                     	;# 
  1518  050F                     	;# 
  1519  050F                     	;# 
  1520  0510                     	;# 
  1521  0511                     	;# 
  1522  0512                     	;# 
  1523  0512                     	;# 
  1524  0513                     	;# 
  1525  0514                     	;# 
  1526  0515                     	;# 
  1527  0515                     	;# 
  1528  0516                     	;# 
  1529  0517                     	;# 
  1530  0518                     	;# 
  1531  0519                     	;# 
  1532  051A                     	;# 
  1533  051B                     	;# 
  1534  051C                     	;# 
  1535  051D                     	;# 
  1536  058C                     	;# 
  1537  058C                     	;# 
  1538  058D                     	;# 
  1539  058E                     	;# 
  1540  058F                     	;# 
  1541  058F                     	;# 
  1542  0590                     	;# 
  1543  0591                     	;# 
  1544  0592                     	;# 
  1545  0593                     	;# 
  1546  060C                     	;# 
  1547  060D                     	;# 
  1548  060E                     	;# 
  1549  060F                     	;# 
  1550  0610                     	;# 
  1551  0611                     	;# 
  1552  0612                     	;# 
  1553  0613                     	;# 
  1554  0614                     	;# 
  1555  0616                     	;# 
  1556  0617                     	;# 
  1557  0618                     	;# 
  1558  0619                     	;# 
  1559  061A                     	;# 
  1560  061B                     	;# 
  1561  061C                     	;# 
  1562  061D                     	;# 
  1563  061E                     	;# 
  1564  068C                     	;# 
  1565  068D                     	;# 
  1566  068E                     	;# 
  1567  068F                     	;# 
  1568  0690                     	;# 
  1569  0691                     	;# 
  1570  0692                     	;# 
  1571  0693                     	;# 
  1572  0694                     	;# 
  1573  070C                     	;# 
  1574  070D                     	;# 
  1575  070E                     	;# 
  1576  070F                     	;# 
  1577  0710                     	;# 
  1578  0711                     	;# 
  1579  0712                     	;# 
  1580  0713                     	;# 
  1581  0714                     	;# 
  1582  0716                     	;# 
  1583  0717                     	;# 
  1584  0718                     	;# 
  1585  0719                     	;# 
  1586  071A                     	;# 
  1587  071B                     	;# 
  1588  071C                     	;# 
  1589  071D                     	;# 
  1590  071E                     	;# 
  1591  0796                     	;# 
  1592  0797                     	;# 
  1593  0798                     	;# 
  1594  0799                     	;# 
  1595  079A                     	;# 
  1596  079B                     	;# 
  1597  080C                     	;# 
  1598  080D                     	;# 
  1599  080E                     	;# 
  1600  080F                     	;# 
  1601  0810                     	;# 
  1602  0811                     	;# 
  1603  0812                     	;# 
  1604  0813                     	;# 
  1605  0814                     	;# 
  1606  081A                     	;# 
  1607  081B                     	;# 
  1608  081C                     	;# 
  1609  081D                     	;# 
  1610  081E                     	;# 
  1611  081F                     	;# 
  1612  088C                     	;# 
  1613  088D                     	;# 
  1614  088E                     	;# 
  1615  088F                     	;# 
  1616  0890                     	;# 
  1617  0891                     	;# 
  1618  0892                     	;# 
  1619  0893                     	;# 
  1620  0895                     	;# 
  1621  0896                     	;# 
  1622  0897                     	;# 
  1623  0898                     	;# 
  1624  0899                     	;# 
  1625  089A                     	;# 
  1626  089B                     	;# 
  1627  090C                     	;# 
  1628  090E                     	;# 
  1629  090F                     	;# 
  1630  091F                     	;# 
  1631  098F                     	;# 
  1632  098F                     	;# 
  1633  0990                     	;# 
  1634  0991                     	;# 
  1635  0992                     	;# 
  1636  0993                     	;# 
  1637  0994                     	;# 
  1638  0995                     	;# 
  1639  0996                     	;# 
  1640  0997                     	;# 
  1641  1E0F                     	;# 
  1642  1E10                     	;# 
  1643  1E11                     	;# 
  1644  1E12                     	;# 
  1645  1E13                     	;# 
  1646  1E14                     	;# 
  1647  1E15                     	;# 
  1648  1E16                     	;# 
  1649  1E17                     	;# 
  1650  1E18                     	;# 
  1651  1E19                     	;# 
  1652  1E1A                     	;# 
  1653  1E1B                     	;# 
  1654  1E1C                     	;# 
  1655  1E1D                     	;# 
  1656  1E1E                     	;# 
  1657  1E1F                     	;# 
  1658  1E20                     	;# 
  1659  1E21                     	;# 
  1660  1E22                     	;# 
  1661  1E23                     	;# 
  1662  1E24                     	;# 
  1663  1E25                     	;# 
  1664  1E26                     	;# 
  1665  1E27                     	;# 
  1666  1E28                     	;# 
  1667  1E29                     	;# 
  1668  1E2A                     	;# 
  1669  1E2B                     	;# 
  1670  1E2C                     	;# 
  1671  1E2D                     	;# 
  1672  1E2E                     	;# 
  1673  1E2F                     	;# 
  1674  1E30                     	;# 
  1675  1E31                     	;# 
  1676  1E32                     	;# 
  1677  1E33                     	;# 
  1678  1E34                     	;# 
  1679  1E35                     	;# 
  1680  1E36                     	;# 
  1681  1E37                     	;# 
  1682  1E8F                     	;# 
  1683  1E90                     	;# 
  1684  1E91                     	;# 
  1685  1E92                     	;# 
  1686  1E93                     	;# 
  1687  1E94                     	;# 
  1688  1E95                     	;# 
  1689  1E96                     	;# 
  1690  1E97                     	;# 
  1691  1E9C                     	;# 
  1692  1E9D                     	;# 
  1693  1E9E                     	;# 
  1694  1EA1                     	;# 
  1695  1EA2                     	;# 
  1696  1EA3                     	;# 
  1697  1EA4                     	;# 
  1698  1EA5                     	;# 
  1699  1EA9                     	;# 
  1700  1EAA                     	;# 
  1701  1EAB                     	;# 
  1702  1EAC                     	;# 
  1703  1EB1                     	;# 
  1704  1EB2                     	;# 
  1705  1EB3                     	;# 
  1706  1EB8                     	;# 
  1707  1EB9                     	;# 
  1708  1EBA                     	;# 
  1709  1EBB                     	;# 
  1710  1EBC                     	;# 
  1711  1EBD                     	;# 
  1712  1EBE                     	;# 
  1713  1EC3                     	;# 
  1714  1EC5                     	;# 
  1715  1EC6                     	;# 
  1716  1EC7                     	;# 
  1717  1EC8                     	;# 
  1718  1EC9                     	;# 
  1719  1ECA                     	;# 
  1720  1ECB                     	;# 
  1721  1ECC                     	;# 
  1722  1F10                     	;# 
  1723  1F11                     	;# 
  1724  1F12                     	;# 
  1725  1F13                     	;# 
  1726  1F14                     	;# 
  1727  1F15                     	;# 
  1728  1F16                     	;# 
  1729  1F17                     	;# 
  1730  1F18                     	;# 
  1731  1F19                     	;# 
  1732  1F1A                     	;# 
  1733  1F1B                     	;# 
  1734  1F1C                     	;# 
  1735  1F1D                     	;# 
  1736  1F1E                     	;# 
  1737  1F1F                     	;# 
  1738  1F20                     	;# 
  1739  1F21                     	;# 
  1740  1F22                     	;# 
  1741  1F23                     	;# 
  1742  1F24                     	;# 
  1743  1F25                     	;# 
  1744  1F26                     	;# 
  1745  1F27                     	;# 
  1746  1F28                     	;# 
  1747  1F29                     	;# 
  1748  1F2A                     	;# 
  1749  1F2B                     	;# 
  1750  1F2C                     	;# 
  1751  1F2D                     	;# 
  1752  1F2E                     	;# 
  1753  1F2F                     	;# 
  1754  1F30                     	;# 
  1755  1F31                     	;# 
  1756  1F32                     	;# 
  1757  1F38                     	;# 
  1758  1F39                     	;# 
  1759  1F3A                     	;# 
  1760  1F3B                     	;# 
  1761  1F3C                     	;# 
  1762  1F3D                     	;# 
  1763  1F3E                     	;# 
  1764  1F3F                     	;# 
  1765  1F40                     	;# 
  1766  1F41                     	;# 
  1767  1F43                     	;# 
  1768  1F44                     	;# 
  1769  1F45                     	;# 
  1770  1F46                     	;# 
  1771  1F47                     	;# 
  1772  1F48                     	;# 
  1773  1F49                     	;# 
  1774  1F4A                     	;# 
  1775  1F4B                     	;# 
  1776  1F4C                     	;# 
  1777  1F4E                     	;# 
  1778  1F4F                     	;# 
  1779  1F50                     	;# 
  1780  1F51                     	;# 
  1781  1F52                     	;# 
  1782  1F53                     	;# 
  1783  1F54                     	;# 
  1784  1F55                     	;# 
  1785  1F56                     	;# 
  1786  1F57                     	;# 
  1787  1F59                     	;# 
  1788  1F5A                     	;# 
  1789  1F5B                     	;# 
  1790  1F5C                     	;# 
  1791  1F5D                     	;# 
  1792  1F61                     	;# 
  1793  1F62                     	;# 
  1794  1F64                     	;# 
  1795  1F65                     	;# 
  1796  1F66                     	;# 
  1797  1F67                     	;# 
  1798  1F68                     	;# 
  1799  1F69                     	;# 
  1800  1F6A                     	;# 
  1801  1F6B                     	;# 
  1802  1F6C                     	;# 
  1803  1F6D                     	;# 
  1804  1FE4                     	;# 
  1805  1FE5                     	;# 
  1806  1FE6                     	;# 
  1807  1FE7                     	;# 
  1808  1FE8                     	;# 
  1809  1FE9                     	;# 
  1810  1FEA                     	;# 
  1811  1FEB                     	;# 
  1812  1FED                     	;# 
  1813  1FEE                     	;# 
  1814  1FEF                     	;# 
  1815  0000                     	;# 
  1816  0001                     	;# 
  1817  0002                     	;# 
  1818  0003                     	;# 
  1819  0004                     	;# 
  1820  0005                     	;# 
  1821  0006                     	;# 
  1822  0007                     	;# 
  1823  0008                     	;# 
  1824  0009                     	;# 
  1825  000A                     	;# 
  1826  000B                     	;# 
  1827  000C                     	;# 
  1828  000D                     	;# 
  1829  000E                     	;# 
  1830  000F                     	;# 
  1831  0010                     	;# 
  1832  0011                     	;# 
  1833  0012                     	;# 
  1834  0013                     	;# 
  1835  0014                     	;# 
  1836  0015                     	;# 
  1837  0016                     	;# 
  1838  0017                     	;# 
  1839  0018                     	;# 
  1840  0019                     	;# 
  1841  001A                     	;# 
  1842  001C                     	;# 
  1843  001C                     	;# 
  1844  001D                     	;# 
  1845  001D                     	;# 
  1846  001E                     	;# 
  1847  001F                     	;# 
  1848  008C                     	;# 
  1849  008C                     	;# 
  1850  008D                     	;# 
  1851  008E                     	;# 
  1852  008E                     	;# 
  1853  008F                     	;# 
  1854  0090                     	;# 
  1855  0090                     	;# 
  1856  0091                     	;# 
  1857  0093                     	;# 
  1858  0094                     	;# 
  1859  0095                     	;# 
  1860  0096                     	;# 
  1861  0097                     	;# 
  1862  0098                     	;# 
  1863  0099                     	;# 
  1864  009A                     	;# 
  1865  009B                     	;# 
  1866  009C                     	;# 
  1867  009D                     	;# 
  1868  009E                     	;# 
  1869  010C                     	;# 
  1870  010D                     	;# 
  1871  010E                     	;# 
  1872  010E                     	;# 
  1873  010F                     	;# 
  1874  0110                     	;# 
  1875  0110                     	;# 
  1876  0111                     	;# 
  1877  0112                     	;# 
  1878  0112                     	;# 
  1879  0113                     	;# 
  1880  0114                     	;# 
  1881  0114                     	;# 
  1882  0115                     	;# 
  1883  0116                     	;# 
  1884  0116                     	;# 
  1885  0117                     	;# 
  1886  0119                     	;# 
  1887  0119                     	;# 
  1888  0119                     	;# 
  1889  011A                     	;# 
  1890  011A                     	;# 
  1891  011A                     	;# 
  1892  011B                     	;# 
  1893  011B                     	;# 
  1894  011B                     	;# 
  1895  011B                     	;# 
  1896  011B                     	;# 
  1897  011C                     	;# 
  1898  011C                     	;# 
  1899  011C                     	;# 
  1900  011D                     	;# 
  1901  011D                     	;# 
  1902  011D                     	;# 
  1903  011E                     	;# 
  1904  011E                     	;# 
  1905  011E                     	;# 
  1906  011F                     	;# 
  1907  011F                     	;# 
  1908  011F                     	;# 
  1909  011F                     	;# 
  1910  011F                     	;# 
  1911  018C                     	;# 
  1912  018D                     	;# 
  1913  018E                     	;# 
  1914  018F                     	;# 
  1915  0190                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0196                     	;# 
  1919  0197                     	;# 
  1920  0198                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019B                     	;# 
  1924  019C                     	;# 
  1925  020C                     	;# 
  1926  020C                     	;# 
  1927  020D                     	;# 
  1928  020E                     	;# 
  1929  020F                     	;# 
  1930  020F                     	;# 
  1931  0210                     	;# 
  1932  0210                     	;# 
  1933  0211                     	;# 
  1934  0211                     	;# 
  1935  0212                     	;# 
  1936  0212                     	;# 
  1937  0213                     	;# 
  1938  0214                     	;# 
  1939  0215                     	;# 
  1940  0215                     	;# 
  1941  0216                     	;# 
  1942  0216                     	;# 
  1943  0217                     	;# 
  1944  0217                     	;# 
  1945  0218                     	;# 
  1946  0218                     	;# 
  1947  0219                     	;# 
  1948  021A                     	;# 
  1949  021B                     	;# 
  1950  021B                     	;# 
  1951  021C                     	;# 
  1952  021C                     	;# 
  1953  021D                     	;# 
  1954  021D                     	;# 
  1955  021E                     	;# 
  1956  021F                     	;# 
  1957  028C                     	;# 
  1958  028C                     	;# 
  1959  028D                     	;# 
  1960  028D                     	;# 
  1961  028E                     	;# 
  1962  028F                     	;# 
  1963  0290                     	;# 
  1964  0290                     	;# 
  1965  0291                     	;# 
  1966  0292                     	;# 
  1967  0292                     	;# 
  1968  0293                     	;# 
  1969  0293                     	;# 
  1970  0294                     	;# 
  1971  0295                     	;# 
  1972  0296                     	;# 
  1973  0296                     	;# 
  1974  0297                     	;# 
  1975  0298                     	;# 
  1976  0298                     	;# 
  1977  0299                     	;# 
  1978  0299                     	;# 
  1979  029A                     	;# 
  1980  029B                     	;# 
  1981  029C                     	;# 
  1982  029C                     	;# 
  1983  029D                     	;# 
  1984  030C                     	;# 
  1985  030C                     	;# 
  1986  030D                     	;# 
  1987  030E                     	;# 
  1988  030F                     	;# 
  1989  0310                     	;# 
  1990  0310                     	;# 
  1991  0311                     	;# 
  1992  0312                     	;# 
  1993  0313                     	;# 
  1994  0314                     	;# 
  1995  0314                     	;# 
  1996  0315                     	;# 
  1997  0316                     	;# 
  1998  0317                     	;# 
  1999  0318                     	;# 
  2000  0318                     	;# 
  2001  0319                     	;# 
  2002  031A                     	;# 
  2003  031B                     	;# 
  2004  031C                     	;# 
  2005  031C                     	;# 
  2006  031D                     	;# 
  2007  031E                     	;# 
  2008  031F                     	;# 
  2009  038C                     	;# 
  2010  038D                     	;# 
  2011  038E                     	;# 
  2012  0390                     	;# 
  2013  0391                     	;# 
  2014  0392                     	;# 
  2015  040C                     	;# 
  2016  040D                     	;# 
  2017  040E                     	;# 
  2018  040F                     	;# 
  2019  0410                     	;# 
  2020  0411                     	;# 
  2021  0416                     	;# 
  2022  0416                     	;# 
  2023  0417                     	;# 
  2024  0418                     	;# 
  2025  0418                     	;# 
  2026  0419                     	;# 
  2027  041A                     	;# 
  2028  041A                     	;# 
  2029  041B                     	;# 
  2030  041C                     	;# 
  2031  041C                     	;# 
  2032  041D                     	;# 
  2033  041E                     	;# 
  2034  041F                     	;# 
  2035  048C                     	;# 
  2036  048C                     	;# 
  2037  048D                     	;# 
  2038  048E                     	;# 
  2039  048F                     	;# 
  2040  048F                     	;# 
  2041  0490                     	;# 
  2042  0491                     	;# 
  2043  0492                     	;# 
  2044  0492                     	;# 
  2045  0493                     	;# 
  2046  0494                     	;# 
  2047  0495                     	;# 
  2048  0495                     	;# 
  2049  0496                     	;# 
  2050  0497                     	;# 
  2051  0498                     	;# 
  2052  0499                     	;# 
  2053  049A                     	;# 
  2054  049B                     	;# 
  2055  049C                     	;# 
  2056  049D                     	;# 
  2057  050C                     	;# 
  2058  050C                     	;# 
  2059  050D                     	;# 
  2060  050E                     	;# 
  2061  050F                     	;# 
  2062  050F                     	;# 
  2063  0510                     	;# 
  2064  0511                     	;# 
  2065  0512                     	;# 
  2066  0512                     	;# 
  2067  0513                     	;# 
  2068  0514                     	;# 
  2069  0515                     	;# 
  2070  0515                     	;# 
  2071  0516                     	;# 
  2072  0517                     	;# 
  2073  0518                     	;# 
  2074  0519                     	;# 
  2075  051A                     	;# 
  2076  051B                     	;# 
  2077  051C                     	;# 
  2078  051D                     	;# 
  2079  058C                     	;# 
  2080  058C                     	;# 
  2081  058D                     	;# 
  2082  058E                     	;# 
  2083  058F                     	;# 
  2084  058F                     	;# 
  2085  0590                     	;# 
  2086  0591                     	;# 
  2087  0592                     	;# 
  2088  0593                     	;# 
  2089  060C                     	;# 
  2090  060D                     	;# 
  2091  060E                     	;# 
  2092  060F                     	;# 
  2093  0610                     	;# 
  2094  0611                     	;# 
  2095  0612                     	;# 
  2096  0613                     	;# 
  2097  0614                     	;# 
  2098  0616                     	;# 
  2099  0617                     	;# 
  2100  0618                     	;# 
  2101  0619                     	;# 
  2102  061A                     	;# 
  2103  061B                     	;# 
  2104  061C                     	;# 
  2105  061D                     	;# 
  2106  061E                     	;# 
  2107  068C                     	;# 
  2108  068D                     	;# 
  2109  068E                     	;# 
  2110  068F                     	;# 
  2111  0690                     	;# 
  2112  0691                     	;# 
  2113  0692                     	;# 
  2114  0693                     	;# 
  2115  0694                     	;# 
  2116  070C                     	;# 
  2117  070D                     	;# 
  2118  070E                     	;# 
  2119  070F                     	;# 
  2120  0710                     	;# 
  2121  0711                     	;# 
  2122  0712                     	;# 
  2123  0713                     	;# 
  2124  0714                     	;# 
  2125  0716                     	;# 
  2126  0717                     	;# 
  2127  0718                     	;# 
  2128  0719                     	;# 
  2129  071A                     	;# 
  2130  071B                     	;# 
  2131  071C                     	;# 
  2132  071D                     	;# 
  2133  071E                     	;# 
  2134  0796                     	;# 
  2135  0797                     	;# 
  2136  0798                     	;# 
  2137  0799                     	;# 
  2138  079A                     	;# 
  2139  079B                     	;# 
  2140  080C                     	;# 
  2141  080D                     	;# 
  2142  080E                     	;# 
  2143  080F                     	;# 
  2144  0810                     	;# 
  2145  0811                     	;# 
  2146  0812                     	;# 
  2147  0813                     	;# 
  2148  0814                     	;# 
  2149  081A                     	;# 
  2150  081B                     	;# 
  2151  081C                     	;# 
  2152  081D                     	;# 
  2153  081E                     	;# 
  2154  081F                     	;# 
  2155  088C                     	;# 
  2156  088D                     	;# 
  2157  088E                     	;# 
  2158  088F                     	;# 
  2159  0890                     	;# 
  2160  0891                     	;# 
  2161  0892                     	;# 
  2162  0893                     	;# 
  2163  0895                     	;# 
  2164  0896                     	;# 
  2165  0897                     	;# 
  2166  0898                     	;# 
  2167  0899                     	;# 
  2168  089A                     	;# 
  2169  089B                     	;# 
  2170  090C                     	;# 
  2171  090E                     	;# 
  2172  090F                     	;# 
  2173  091F                     	;# 
  2174  098F                     	;# 
  2175  098F                     	;# 
  2176  0990                     	;# 
  2177  0991                     	;# 
  2178  0992                     	;# 
  2179  0993                     	;# 
  2180  0994                     	;# 
  2181  0995                     	;# 
  2182  0996                     	;# 
  2183  0997                     	;# 
  2184  1E0F                     	;# 
  2185  1E10                     	;# 
  2186  1E11                     	;# 
  2187  1E12                     	;# 
  2188  1E13                     	;# 
  2189  1E14                     	;# 
  2190  1E15                     	;# 
  2191  1E16                     	;# 
  2192  1E17                     	;# 
  2193  1E18                     	;# 
  2194  1E19                     	;# 
  2195  1E1A                     	;# 
  2196  1E1B                     	;# 
  2197  1E1C                     	;# 
  2198  1E1D                     	;# 
  2199  1E1E                     	;# 
  2200  1E1F                     	;# 
  2201  1E20                     	;# 
  2202  1E21                     	;# 
  2203  1E22                     	;# 
  2204  1E23                     	;# 
  2205  1E24                     	;# 
  2206  1E25                     	;# 
  2207  1E26                     	;# 
  2208  1E27                     	;# 
  2209  1E28                     	;# 
  2210  1E29                     	;# 
  2211  1E2A                     	;# 
  2212  1E2B                     	;# 
  2213  1E2C                     	;# 
  2214  1E2D                     	;# 
  2215  1E2E                     	;# 
  2216  1E2F                     	;# 
  2217  1E30                     	;# 
  2218  1E31                     	;# 
  2219  1E32                     	;# 
  2220  1E33                     	;# 
  2221  1E34                     	;# 
  2222  1E35                     	;# 
  2223  1E36                     	;# 
  2224  1E37                     	;# 
  2225  1E8F                     	;# 
  2226  1E90                     	;# 
  2227  1E91                     	;# 
  2228  1E92                     	;# 
  2229  1E93                     	;# 
  2230  1E94                     	;# 
  2231  1E95                     	;# 
  2232  1E96                     	;# 
  2233  1E97                     	;# 
  2234  1E9C                     	;# 
  2235  1E9D                     	;# 
  2236  1E9E                     	;# 
  2237  1EA1                     	;# 
  2238  1EA2                     	;# 
  2239  1EA3                     	;# 
  2240  1EA4                     	;# 
  2241  1EA5                     	;# 
  2242  1EA9                     	;# 
  2243  1EAA                     	;# 
  2244  1EAB                     	;# 
  2245  1EAC                     	;# 
  2246  1EB1                     	;# 
  2247  1EB2                     	;# 
  2248  1EB3                     	;# 
  2249  1EB8                     	;# 
  2250  1EB9                     	;# 
  2251  1EBA                     	;# 
  2252  1EBB                     	;# 
  2253  1EBC                     	;# 
  2254  1EBD                     	;# 
  2255  1EBE                     	;# 
  2256  1EC3                     	;# 
  2257  1EC5                     	;# 
  2258  1EC6                     	;# 
  2259  1EC7                     	;# 
  2260  1EC8                     	;# 
  2261  1EC9                     	;# 
  2262  1ECA                     	;# 
  2263  1ECB                     	;# 
  2264  1ECC                     	;# 
  2265  1F10                     	;# 
  2266  1F11                     	;# 
  2267  1F12                     	;# 
  2268  1F13                     	;# 
  2269  1F14                     	;# 
  2270  1F15                     	;# 
  2271  1F16                     	;# 
  2272  1F17                     	;# 
  2273  1F18                     	;# 
  2274  1F19                     	;# 
  2275  1F1A                     	;# 
  2276  1F1B                     	;# 
  2277  1F1C                     	;# 
  2278  1F1D                     	;# 
  2279  1F1E                     	;# 
  2280  1F1F                     	;# 
  2281  1F20                     	;# 
  2282  1F21                     	;# 
  2283  1F22                     	;# 
  2284  1F23                     	;# 
  2285  1F24                     	;# 
  2286  1F25                     	;# 
  2287  1F26                     	;# 
  2288  1F27                     	;# 
  2289  1F28                     	;# 
  2290  1F29                     	;# 
  2291  1F2A                     	;# 
  2292  1F2B                     	;# 
  2293  1F2C                     	;# 
  2294  1F2D                     	;# 
  2295  1F2E                     	;# 
  2296  1F2F                     	;# 
  2297  1F30                     	;# 
  2298  1F31                     	;# 
  2299  1F32                     	;# 
  2300  1F38                     	;# 
  2301  1F39                     	;# 
  2302  1F3A                     	;# 
  2303  1F3B                     	;# 
  2304  1F3C                     	;# 
  2305  1F3D                     	;# 
  2306  1F3E                     	;# 
  2307  1F3F                     	;# 
  2308  1F40                     	;# 
  2309  1F41                     	;# 
  2310  1F43                     	;# 
  2311  1F44                     	;# 
  2312  1F45                     	;# 
  2313  1F46                     	;# 
  2314  1F47                     	;# 
  2315  1F48                     	;# 
  2316  1F49                     	;# 
  2317  1F4A                     	;# 
  2318  1F4B                     	;# 
  2319  1F4C                     	;# 
  2320  1F4E                     	;# 
  2321  1F4F                     	;# 
  2322  1F50                     	;# 
  2323  1F51                     	;# 
  2324  1F52                     	;# 
  2325  1F53                     	;# 
  2326  1F54                     	;# 
  2327  1F55                     	;# 
  2328  1F56                     	;# 
  2329  1F57                     	;# 
  2330  1F59                     	;# 
  2331  1F5A                     	;# 
  2332  1F5B                     	;# 
  2333  1F5C                     	;# 
  2334  1F5D                     	;# 
  2335  1F61                     	;# 
  2336  1F62                     	;# 
  2337  1F64                     	;# 
  2338  1F65                     	;# 
  2339  1F66                     	;# 
  2340  1F67                     	;# 
  2341  1F68                     	;# 
  2342  1F69                     	;# 
  2343  1F6A                     	;# 
  2344  1F6B                     	;# 
  2345  1F6C                     	;# 
  2346  1F6D                     	;# 
  2347  1FE4                     	;# 
  2348  1FE5                     	;# 
  2349  1FE6                     	;# 
  2350  1FE7                     	;# 
  2351  1FE8                     	;# 
  2352  1FE9                     	;# 
  2353  1FEA                     	;# 
  2354  1FEB                     	;# 
  2355  1FED                     	;# 
  2356  1FEE                     	;# 
  2357  1FEF                     	;# 
  2358  0000                     	;# 
  2359  0001                     	;# 
  2360  0002                     	;# 
  2361  0003                     	;# 
  2362  0004                     	;# 
  2363  0005                     	;# 
  2364  0006                     	;# 
  2365  0007                     	;# 
  2366  0008                     	;# 
  2367  0009                     	;# 
  2368  000A                     	;# 
  2369  000B                     	;# 
  2370  000C                     	;# 
  2371  000D                     	;# 
  2372  000E                     	;# 
  2373  000F                     	;# 
  2374  0010                     	;# 
  2375  0011                     	;# 
  2376  0012                     	;# 
  2377  0013                     	;# 
  2378  0014                     	;# 
  2379  0015                     	;# 
  2380  0016                     	;# 
  2381  0017                     	;# 
  2382  0018                     	;# 
  2383  0019                     	;# 
  2384  001A                     	;# 
  2385  001C                     	;# 
  2386  001C                     	;# 
  2387  001D                     	;# 
  2388  001D                     	;# 
  2389  001E                     	;# 
  2390  001F                     	;# 
  2391  008C                     	;# 
  2392  008C                     	;# 
  2393  008D                     	;# 
  2394  008E                     	;# 
  2395  008E                     	;# 
  2396  008F                     	;# 
  2397  0090                     	;# 
  2398  0090                     	;# 
  2399  0091                     	;# 
  2400  0093                     	;# 
  2401  0094                     	;# 
  2402  0095                     	;# 
  2403  0096                     	;# 
  2404  0097                     	;# 
  2405  0098                     	;# 
  2406  0099                     	;# 
  2407  009A                     	;# 
  2408  009B                     	;# 
  2409  009C                     	;# 
  2410  009D                     	;# 
  2411  009E                     	;# 
  2412  010C                     	;# 
  2413  010D                     	;# 
  2414  010E                     	;# 
  2415  010E                     	;# 
  2416  010F                     	;# 
  2417  0110                     	;# 
  2418  0110                     	;# 
  2419  0111                     	;# 
  2420  0112                     	;# 
  2421  0112                     	;# 
  2422  0113                     	;# 
  2423  0114                     	;# 
  2424  0114                     	;# 
  2425  0115                     	;# 
  2426  0116                     	;# 
  2427  0116                     	;# 
  2428  0117                     	;# 
  2429  0119                     	;# 
  2430  0119                     	;# 
  2431  0119                     	;# 
  2432  011A                     	;# 
  2433  011A                     	;# 
  2434  011A                     	;# 
  2435  011B                     	;# 
  2436  011B                     	;# 
  2437  011B                     	;# 
  2438  011B                     	;# 
  2439  011B                     	;# 
  2440  011C                     	;# 
  2441  011C                     	;# 
  2442  011C                     	;# 
  2443  011D                     	;# 
  2444  011D                     	;# 
  2445  011D                     	;# 
  2446  011E                     	;# 
  2447  011E                     	;# 
  2448  011E                     	;# 
  2449  011F                     	;# 
  2450  011F                     	;# 
  2451  011F                     	;# 
  2452  011F                     	;# 
  2453  011F                     	;# 
  2454  018C                     	;# 
  2455  018D                     	;# 
  2456  018E                     	;# 
  2457  018F                     	;# 
  2458  0190                     	;# 
  2459  0191                     	;# 
  2460  0192                     	;# 
  2461  0196                     	;# 
  2462  0197                     	;# 
  2463  0198                     	;# 
  2464  0199                     	;# 
  2465  019A                     	;# 
  2466  019B                     	;# 
  2467  019C                     	;# 
  2468  020C                     	;# 
  2469  020C                     	;# 
  2470  020D                     	;# 
  2471  020E                     	;# 
  2472  020F                     	;# 
  2473  020F                     	;# 
  2474  0210                     	;# 
  2475  0210                     	;# 
  2476  0211                     	;# 
  2477  0211                     	;# 
  2478  0212                     	;# 
  2479  0212                     	;# 
  2480  0213                     	;# 
  2481  0214                     	;# 
  2482  0215                     	;# 
  2483  0215                     	;# 
  2484  0216                     	;# 
  2485  0216                     	;# 
  2486  0217                     	;# 
  2487  0217                     	;# 
  2488  0218                     	;# 
  2489  0218                     	;# 
  2490  0219                     	;# 
  2491  021A                     	;# 
  2492  021B                     	;# 
  2493  021B                     	;# 
  2494  021C                     	;# 
  2495  021C                     	;# 
  2496  021D                     	;# 
  2497  021D                     	;# 
  2498  021E                     	;# 
  2499  021F                     	;# 
  2500  028C                     	;# 
  2501  028C                     	;# 
  2502  028D                     	;# 
  2503  028D                     	;# 
  2504  028E                     	;# 
  2505  028F                     	;# 
  2506  0290                     	;# 
  2507  0290                     	;# 
  2508  0291                     	;# 
  2509  0292                     	;# 
  2510  0292                     	;# 
  2511  0293                     	;# 
  2512  0293                     	;# 
  2513  0294                     	;# 
  2514  0295                     	;# 
  2515  0296                     	;# 
  2516  0296                     	;# 
  2517  0297                     	;# 
  2518  0298                     	;# 
  2519  0298                     	;# 
  2520  0299                     	;# 
  2521  0299                     	;# 
  2522  029A                     	;# 
  2523  029B                     	;# 
  2524  029C                     	;# 
  2525  029C                     	;# 
  2526  029D                     	;# 
  2527  030C                     	;# 
  2528  030C                     	;# 
  2529  030D                     	;# 
  2530  030E                     	;# 
  2531  030F                     	;# 
  2532  0310                     	;# 
  2533  0310                     	;# 
  2534  0311                     	;# 
  2535  0312                     	;# 
  2536  0313                     	;# 
  2537  0314                     	;# 
  2538  0314                     	;# 
  2539  0315                     	;# 
  2540  0316                     	;# 
  2541  0317                     	;# 
  2542  0318                     	;# 
  2543  0318                     	;# 
  2544  0319                     	;# 
  2545  031A                     	;# 
  2546  031B                     	;# 
  2547  031C                     	;# 
  2548  031C                     	;# 
  2549  031D                     	;# 
  2550  031E                     	;# 
  2551  031F                     	;# 
  2552  038C                     	;# 
  2553  038D                     	;# 
  2554  038E                     	;# 
  2555  0390                     	;# 
  2556  0391                     	;# 
  2557  0392                     	;# 
  2558  040C                     	;# 
  2559  040D                     	;# 
  2560  040E                     	;# 
  2561  040F                     	;# 
  2562  0410                     	;# 
  2563  0411                     	;# 
  2564  0416                     	;# 
  2565  0416                     	;# 
  2566  0417                     	;# 
  2567  0418                     	;# 
  2568  0418                     	;# 
  2569  0419                     	;# 
  2570  041A                     	;# 
  2571  041A                     	;# 
  2572  041B                     	;# 
  2573  041C                     	;# 
  2574  041C                     	;# 
  2575  041D                     	;# 
  2576  041E                     	;# 
  2577  041F                     	;# 
  2578  048C                     	;# 
  2579  048C                     	;# 
  2580  048D                     	;# 
  2581  048E                     	;# 
  2582  048F                     	;# 
  2583  048F                     	;# 
  2584  0490                     	;# 
  2585  0491                     	;# 
  2586  0492                     	;# 
  2587  0492                     	;# 
  2588  0493                     	;# 
  2589  0494                     	;# 
  2590  0495                     	;# 
  2591  0495                     	;# 
  2592  0496                     	;# 
  2593  0497                     	;# 
  2594  0498                     	;# 
  2595  0499                     	;# 
  2596  049A                     	;# 
  2597  049B                     	;# 
  2598  049C                     	;# 
  2599  049D                     	;# 
  2600  050C                     	;# 
  2601  050C                     	;# 
  2602  050D                     	;# 
  2603  050E                     	;# 
  2604  050F                     	;# 
  2605  050F                     	;# 
  2606  0510                     	;# 
  2607  0511                     	;# 
  2608  0512                     	;# 
  2609  0512                     	;# 
  2610  0513                     	;# 
  2611  0514                     	;# 
  2612  0515                     	;# 
  2613  0515                     	;# 
  2614  0516                     	;# 
  2615  0517                     	;# 
  2616  0518                     	;# 
  2617  0519                     	;# 
  2618  051A                     	;# 
  2619  051B                     	;# 
  2620  051C                     	;# 
  2621  051D                     	;# 
  2622  058C                     	;# 
  2623  058C                     	;# 
  2624  058D                     	;# 
  2625  058E                     	;# 
  2626  058F                     	;# 
  2627  058F                     	;# 
  2628  0590                     	;# 
  2629  0591                     	;# 
  2630  0592                     	;# 
  2631  0593                     	;# 
  2632  060C                     	;# 
  2633  060D                     	;# 
  2634  060E                     	;# 
  2635  060F                     	;# 
  2636  0610                     	;# 
  2637  0611                     	;# 
  2638  0612                     	;# 
  2639  0613                     	;# 
  2640  0614                     	;# 
  2641  0616                     	;# 
  2642  0617                     	;# 
  2643  0618                     	;# 
  2644  0619                     	;# 
  2645  061A                     	;# 
  2646  061B                     	;# 
  2647  061C                     	;# 
  2648  061D                     	;# 
  2649  061E                     	;# 
  2650  068C                     	;# 
  2651  068D                     	;# 
  2652  068E                     	;# 
  2653  068F                     	;# 
  2654  0690                     	;# 
  2655  0691                     	;# 
  2656  0692                     	;# 
  2657  0693                     	;# 
  2658  0694                     	;# 
  2659  070C                     	;# 
  2660  070D                     	;# 
  2661  070E                     	;# 
  2662  070F                     	;# 
  2663  0710                     	;# 
  2664  0711                     	;# 
  2665  0712                     	;# 
  2666  0713                     	;# 
  2667  0714                     	;# 
  2668  0716                     	;# 
  2669  0717                     	;# 
  2670  0718                     	;# 
  2671  0719                     	;# 
  2672  071A                     	;# 
  2673  071B                     	;# 
  2674  071C                     	;# 
  2675  071D                     	;# 
  2676  071E                     	;# 
  2677  0796                     	;# 
  2678  0797                     	;# 
  2679  0798                     	;# 
  2680  0799                     	;# 
  2681  079A                     	;# 
  2682  079B                     	;# 
  2683  080C                     	;# 
  2684  080D                     	;# 
  2685  080E                     	;# 
  2686  080F                     	;# 
  2687  0810                     	;# 
  2688  0811                     	;# 
  2689  0812                     	;# 
  2690  0813                     	;# 
  2691  0814                     	;# 
  2692  081A                     	;# 
  2693  081B                     	;# 
  2694  081C                     	;# 
  2695  081D                     	;# 
  2696  081E                     	;# 
  2697  081F                     	;# 
  2698  088C                     	;# 
  2699  088D                     	;# 
  2700  088E                     	;# 
  2701  088F                     	;# 
  2702  0890                     	;# 
  2703  0891                     	;# 
  2704  0892                     	;# 
  2705  0893                     	;# 
  2706  0895                     	;# 
  2707  0896                     	;# 
  2708  0897                     	;# 
  2709  0898                     	;# 
  2710  0899                     	;# 
  2711  089A                     	;# 
  2712  089B                     	;# 
  2713  090C                     	;# 
  2714  090E                     	;# 
  2715  090F                     	;# 
  2716  091F                     	;# 
  2717  098F                     	;# 
  2718  098F                     	;# 
  2719  0990                     	;# 
  2720  0991                     	;# 
  2721  0992                     	;# 
  2722  0993                     	;# 
  2723  0994                     	;# 
  2724  0995                     	;# 
  2725  0996                     	;# 
  2726  0997                     	;# 
  2727  1E0F                     	;# 
  2728  1E10                     	;# 
  2729  1E11                     	;# 
  2730  1E12                     	;# 
  2731  1E13                     	;# 
  2732  1E14                     	;# 
  2733  1E15                     	;# 
  2734  1E16                     	;# 
  2735  1E17                     	;# 
  2736  1E18                     	;# 
  2737  1E19                     	;# 
  2738  1E1A                     	;# 
  2739  1E1B                     	;# 
  2740  1E1C                     	;# 
  2741  1E1D                     	;# 
  2742  1E1E                     	;# 
  2743  1E1F                     	;# 
  2744  1E20                     	;# 
  2745  1E21                     	;# 
  2746  1E22                     	;# 
  2747  1E23                     	;# 
  2748  1E24                     	;# 
  2749  1E25                     	;# 
  2750  1E26                     	;# 
  2751  1E27                     	;# 
  2752  1E28                     	;# 
  2753  1E29                     	;# 
  2754  1E2A                     	;# 
  2755  1E2B                     	;# 
  2756  1E2C                     	;# 
  2757  1E2D                     	;# 
  2758  1E2E                     	;# 
  2759  1E2F                     	;# 
  2760  1E30                     	;# 
  2761  1E31                     	;# 
  2762  1E32                     	;# 
  2763  1E33                     	;# 
  2764  1E34                     	;# 
  2765  1E35                     	;# 
  2766  1E36                     	;# 
  2767  1E37                     	;# 
  2768  1E8F                     	;# 
  2769  1E90                     	;# 
  2770  1E91                     	;# 
  2771  1E92                     	;# 
  2772  1E93                     	;# 
  2773  1E94                     	;# 
  2774  1E95                     	;# 
  2775  1E96                     	;# 
  2776  1E97                     	;# 
  2777  1E9C                     	;# 
  2778  1E9D                     	;# 
  2779  1E9E                     	;# 
  2780  1EA1                     	;# 
  2781  1EA2                     	;# 
  2782  1EA3                     	;# 
  2783  1EA4                     	;# 
  2784  1EA5                     	;# 
  2785  1EA9                     	;# 
  2786  1EAA                     	;# 
  2787  1EAB                     	;# 
  2788  1EAC                     	;# 
  2789  1EB1                     	;# 
  2790  1EB2                     	;# 
  2791  1EB3                     	;# 
  2792  1EB8                     	;# 
  2793  1EB9                     	;# 
  2794  1EBA                     	;# 
  2795  1EBB                     	;# 
  2796  1EBC                     	;# 
  2797  1EBD                     	;# 
  2798  1EBE                     	;# 
  2799  1EC3                     	;# 
  2800  1EC5                     	;# 
  2801  1EC6                     	;# 
  2802  1EC7                     	;# 
  2803  1EC8                     	;# 
  2804  1EC9                     	;# 
  2805  1ECA                     	;# 
  2806  1ECB                     	;# 
  2807  1ECC                     	;# 
  2808  1F10                     	;# 
  2809  1F11                     	;# 
  2810  1F12                     	;# 
  2811  1F13                     	;# 
  2812  1F14                     	;# 
  2813  1F15                     	;# 
  2814  1F16                     	;# 
  2815  1F17                     	;# 
  2816  1F18                     	;# 
  2817  1F19                     	;# 
  2818  1F1A                     	;# 
  2819  1F1B                     	;# 
  2820  1F1C                     	;# 
  2821  1F1D                     	;# 
  2822  1F1E                     	;# 
  2823  1F1F                     	;# 
  2824  1F20                     	;# 
  2825  1F21                     	;# 
  2826  1F22                     	;# 
  2827  1F23                     	;# 
  2828  1F24                     	;# 
  2829  1F25                     	;# 
  2830  1F26                     	;# 
  2831  1F27                     	;# 
  2832  1F28                     	;# 
  2833  1F29                     	;# 
  2834  1F2A                     	;# 
  2835  1F2B                     	;# 
  2836  1F2C                     	;# 
  2837  1F2D                     	;# 
  2838  1F2E                     	;# 
  2839  1F2F                     	;# 
  2840  1F30                     	;# 
  2841  1F31                     	;# 
  2842  1F32                     	;# 
  2843  1F38                     	;# 
  2844  1F39                     	;# 
  2845  1F3A                     	;# 
  2846  1F3B                     	;# 
  2847  1F3C                     	;# 
  2848  1F3D                     	;# 
  2849  1F3E                     	;# 
  2850  1F3F                     	;# 
  2851  1F40                     	;# 
  2852  1F41                     	;# 
  2853  1F43                     	;# 
  2854  1F44                     	;# 
  2855  1F45                     	;# 
  2856  1F46                     	;# 
  2857  1F47                     	;# 
  2858  1F48                     	;# 
  2859  1F49                     	;# 
  2860  1F4A                     	;# 
  2861  1F4B                     	;# 
  2862  1F4C                     	;# 
  2863  1F4E                     	;# 
  2864  1F4F                     	;# 
  2865  1F50                     	;# 
  2866  1F51                     	;# 
  2867  1F52                     	;# 
  2868  1F53                     	;# 
  2869  1F54                     	;# 
  2870  1F55                     	;# 
  2871  1F56                     	;# 
  2872  1F57                     	;# 
  2873  1F59                     	;# 
  2874  1F5A                     	;# 
  2875  1F5B                     	;# 
  2876  1F5C                     	;# 
  2877  1F5D                     	;# 
  2878  1F61                     	;# 
  2879  1F62                     	;# 
  2880  1F64                     	;# 
  2881  1F65                     	;# 
  2882  1F66                     	;# 
  2883  1F67                     	;# 
  2884  1F68                     	;# 
  2885  1F69                     	;# 
  2886  1F6A                     	;# 
  2887  1F6B                     	;# 
  2888  1F6C                     	;# 
  2889  1F6D                     	;# 
  2890  1FE4                     	;# 
  2891  1FE5                     	;# 
  2892  1FE6                     	;# 
  2893  1FE7                     	;# 
  2894  1FE8                     	;# 
  2895  1FE9                     	;# 
  2896  1FEA                     	;# 
  2897  1FEB                     	;# 
  2898  1FED                     	;# 
  2899  1FEE                     	;# 
  2900  1FEF                     	;# 
  2901  0000                     	;# 
  2902  0001                     	;# 
  2903  0002                     	;# 
  2904  0003                     	;# 
  2905  0004                     	;# 
  2906  0005                     	;# 
  2907  0006                     	;# 
  2908  0007                     	;# 
  2909  0008                     	;# 
  2910  0009                     	;# 
  2911  000A                     	;# 
  2912  000B                     	;# 
  2913  000C                     	;# 
  2914  000D                     	;# 
  2915  000E                     	;# 
  2916  000F                     	;# 
  2917  0010                     	;# 
  2918  0011                     	;# 
  2919  0012                     	;# 
  2920  0013                     	;# 
  2921  0014                     	;# 
  2922  0015                     	;# 
  2923  0016                     	;# 
  2924  0017                     	;# 
  2925  0018                     	;# 
  2926  0019                     	;# 
  2927  001A                     	;# 
  2928  001C                     	;# 
  2929  001C                     	;# 
  2930  001D                     	;# 
  2931  001D                     	;# 
  2932  001E                     	;# 
  2933  001F                     	;# 
  2934  008C                     	;# 
  2935  008C                     	;# 
  2936  008D                     	;# 
  2937  008E                     	;# 
  2938  008E                     	;# 
  2939  008F                     	;# 
  2940  0090                     	;# 
  2941  0090                     	;# 
  2942  0091                     	;# 
  2943  0093                     	;# 
  2944  0094                     	;# 
  2945  0095                     	;# 
  2946  0096                     	;# 
  2947  0097                     	;# 
  2948  0098                     	;# 
  2949  0099                     	;# 
  2950  009A                     	;# 
  2951  009B                     	;# 
  2952  009C                     	;# 
  2953  009D                     	;# 
  2954  009E                     	;# 
  2955  010C                     	;# 
  2956  010D                     	;# 
  2957  010E                     	;# 
  2958  010E                     	;# 
  2959  010F                     	;# 
  2960  0110                     	;# 
  2961  0110                     	;# 
  2962  0111                     	;# 
  2963  0112                     	;# 
  2964  0112                     	;# 
  2965  0113                     	;# 
  2966  0114                     	;# 
  2967  0114                     	;# 
  2968  0115                     	;# 
  2969  0116                     	;# 
  2970  0116                     	;# 
  2971  0117                     	;# 
  2972  0119                     	;# 
  2973  0119                     	;# 
  2974  0119                     	;# 
  2975  011A                     	;# 
  2976  011A                     	;# 
  2977  011A                     	;# 
  2978  011B                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011B                     	;# 
  2982  011B                     	;# 
  2983  011C                     	;# 
  2984  011C                     	;# 
  2985  011C                     	;# 
  2986  011D                     	;# 
  2987  011D                     	;# 
  2988  011D                     	;# 
  2989  011E                     	;# 
  2990  011E                     	;# 
  2991  011E                     	;# 
  2992  011F                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  011F                     	;# 
  2996  011F                     	;# 
  2997  018C                     	;# 
  2998  018D                     	;# 
  2999  018E                     	;# 
  3000  018F                     	;# 
  3001  0190                     	;# 
  3002  0191                     	;# 
  3003  0192                     	;# 
  3004  0196                     	;# 
  3005  0197                     	;# 
  3006  0198                     	;# 
  3007  0199                     	;# 
  3008  019A                     	;# 
  3009  019B                     	;# 
  3010  019C                     	;# 
  3011  020C                     	;# 
  3012  020C                     	;# 
  3013  020D                     	;# 
  3014  020E                     	;# 
  3015  020F                     	;# 
  3016  020F                     	;# 
  3017  0210                     	;# 
  3018  0210                     	;# 
  3019  0211                     	;# 
  3020  0211                     	;# 
  3021  0212                     	;# 
  3022  0212                     	;# 
  3023  0213                     	;# 
  3024  0214                     	;# 
  3025  0215                     	;# 
  3026  0215                     	;# 
  3027  0216                     	;# 
  3028  0216                     	;# 
  3029  0217                     	;# 
  3030  0217                     	;# 
  3031  0218                     	;# 
  3032  0218                     	;# 
  3033  0219                     	;# 
  3034  021A                     	;# 
  3035  021B                     	;# 
  3036  021B                     	;# 
  3037  021C                     	;# 
  3038  021C                     	;# 
  3039  021D                     	;# 
  3040  021D                     	;# 
  3041  021E                     	;# 
  3042  021F                     	;# 
  3043  028C                     	;# 
  3044  028C                     	;# 
  3045  028D                     	;# 
  3046  028D                     	;# 
  3047  028E                     	;# 
  3048  028F                     	;# 
  3049  0290                     	;# 
  3050  0290                     	;# 
  3051  0291                     	;# 
  3052  0292                     	;# 
  3053  0292                     	;# 
  3054  0293                     	;# 
  3055  0293                     	;# 
  3056  0294                     	;# 
  3057  0295                     	;# 
  3058  0296                     	;# 
  3059  0296                     	;# 
  3060  0297                     	;# 
  3061  0298                     	;# 
  3062  0298                     	;# 
  3063  0299                     	;# 
  3064  0299                     	;# 
  3065  029A                     	;# 
  3066  029B                     	;# 
  3067  029C                     	;# 
  3068  029C                     	;# 
  3069  029D                     	;# 
  3070  030C                     	;# 
  3071  030C                     	;# 
  3072  030D                     	;# 
  3073  030E                     	;# 
  3074  030F                     	;# 
  3075  0310                     	;# 
  3076  0310                     	;# 
  3077  0311                     	;# 
  3078  0312                     	;# 
  3079  0313                     	;# 
  3080  0314                     	;# 
  3081  0314                     	;# 
  3082  0315                     	;# 
  3083  0316                     	;# 
  3084  0317                     	;# 
  3085  0318                     	;# 
  3086  0318                     	;# 
  3087  0319                     	;# 
  3088  031A                     	;# 
  3089  031B                     	;# 
  3090  031C                     	;# 
  3091  031C                     	;# 
  3092  031D                     	;# 
  3093  031E                     	;# 
  3094  031F                     	;# 
  3095  038C                     	;# 
  3096  038D                     	;# 
  3097  038E                     	;# 
  3098  0390                     	;# 
  3099  0391                     	;# 
  3100  0392                     	;# 
  3101  040C                     	;# 
  3102  040D                     	;# 
  3103  040E                     	;# 
  3104  040F                     	;# 
  3105  0410                     	;# 
  3106  0411                     	;# 
  3107  0416                     	;# 
  3108  0416                     	;# 
  3109  0417                     	;# 
  3110  0418                     	;# 
  3111  0418                     	;# 
  3112  0419                     	;# 
  3113  041A                     	;# 
  3114  041A                     	;# 
  3115  041B                     	;# 
  3116  041C                     	;# 
  3117  041C                     	;# 
  3118  041D                     	;# 
  3119  041E                     	;# 
  3120  041F                     	;# 
  3121  048C                     	;# 
  3122  048C                     	;# 
  3123  048D                     	;# 
  3124  048E                     	;# 
  3125  048F                     	;# 
  3126  048F                     	;# 
  3127  0490                     	;# 
  3128  0491                     	;# 
  3129  0492                     	;# 
  3130  0492                     	;# 
  3131  0493                     	;# 
  3132  0494                     	;# 
  3133  0495                     	;# 
  3134  0495                     	;# 
  3135  0496                     	;# 
  3136  0497                     	;# 
  3137  0498                     	;# 
  3138  0499                     	;# 
  3139  049A                     	;# 
  3140  049B                     	;# 
  3141  049C                     	;# 
  3142  049D                     	;# 
  3143  050C                     	;# 
  3144  050C                     	;# 
  3145  050D                     	;# 
  3146  050E                     	;# 
  3147  050F                     	;# 
  3148  050F                     	;# 
  3149  0510                     	;# 
  3150  0511                     	;# 
  3151  0512                     	;# 
  3152  0512                     	;# 
  3153  0513                     	;# 
  3154  0514                     	;# 
  3155  0515                     	;# 
  3156  0515                     	;# 
  3157  0516                     	;# 
  3158  0517                     	;# 
  3159  0518                     	;# 
  3160  0519                     	;# 
  3161  051A                     	;# 
  3162  051B                     	;# 
  3163  051C                     	;# 
  3164  051D                     	;# 
  3165  058C                     	;# 
  3166  058C                     	;# 
  3167  058D                     	;# 
  3168  058E                     	;# 
  3169  058F                     	;# 
  3170  058F                     	;# 
  3171  0590                     	;# 
  3172  0591                     	;# 
  3173  0592                     	;# 
  3174  0593                     	;# 
  3175  060C                     	;# 
  3176  060D                     	;# 
  3177  060E                     	;# 
  3178  060F                     	;# 
  3179  0610                     	;# 
  3180  0611                     	;# 
  3181  0612                     	;# 
  3182  0613                     	;# 
  3183  0614                     	;# 
  3184  0616                     	;# 
  3185  0617                     	;# 
  3186  0618                     	;# 
  3187  0619                     	;# 
  3188  061A                     	;# 
  3189  061B                     	;# 
  3190  061C                     	;# 
  3191  061D                     	;# 
  3192  061E                     	;# 
  3193  068C                     	;# 
  3194  068D                     	;# 
  3195  068E                     	;# 
  3196  068F                     	;# 
  3197  0690                     	;# 
  3198  0691                     	;# 
  3199  0692                     	;# 
  3200  0693                     	;# 
  3201  0694                     	;# 
  3202  070C                     	;# 
  3203  070D                     	;# 
  3204  070E                     	;# 
  3205  070F                     	;# 
  3206  0710                     	;# 
  3207  0711                     	;# 
  3208  0712                     	;# 
  3209  0713                     	;# 
  3210  0714                     	;# 
  3211  0716                     	;# 
  3212  0717                     	;# 
  3213  0718                     	;# 
  3214  0719                     	;# 
  3215  071A                     	;# 
  3216  071B                     	;# 
  3217  071C                     	;# 
  3218  071D                     	;# 
  3219  071E                     	;# 
  3220  0796                     	;# 
  3221  0797                     	;# 
  3222  0798                     	;# 
  3223  0799                     	;# 
  3224  079A                     	;# 
  3225  079B                     	;# 
  3226  080C                     	;# 
  3227  080D                     	;# 
  3228  080E                     	;# 
  3229  080F                     	;# 
  3230  0810                     	;# 
  3231  0811                     	;# 
  3232  0812                     	;# 
  3233  0813                     	;# 
  3234  0814                     	;# 
  3235  081A                     	;# 
  3236  081B                     	;# 
  3237  081C                     	;# 
  3238  081D                     	;# 
  3239  081E                     	;# 
  3240  081F                     	;# 
  3241  088C                     	;# 
  3242  088D                     	;# 
  3243  088E                     	;# 
  3244  088F                     	;# 
  3245  0890                     	;# 
  3246  0891                     	;# 
  3247  0892                     	;# 
  3248  0893                     	;# 
  3249  0895                     	;# 
  3250  0896                     	;# 
  3251  0897                     	;# 
  3252  0898                     	;# 
  3253  0899                     	;# 
  3254  089A                     	;# 
  3255  089B                     	;# 
  3256  090C                     	;# 
  3257  090E                     	;# 
  3258  090F                     	;# 
  3259  091F                     	;# 
  3260  098F                     	;# 
  3261  098F                     	;# 
  3262  0990                     	;# 
  3263  0991                     	;# 
  3264  0992                     	;# 
  3265  0993                     	;# 
  3266  0994                     	;# 
  3267  0995                     	;# 
  3268  0996                     	;# 
  3269  0997                     	;# 
  3270  1E0F                     	;# 
  3271  1E10                     	;# 
  3272  1E11                     	;# 
  3273  1E12                     	;# 
  3274  1E13                     	;# 
  3275  1E14                     	;# 
  3276  1E15                     	;# 
  3277  1E16                     	;# 
  3278  1E17                     	;# 
  3279  1E18                     	;# 
  3280  1E19                     	;# 
  3281  1E1A                     	;# 
  3282  1E1B                     	;# 
  3283  1E1C                     	;# 
  3284  1E1D                     	;# 
  3285  1E1E                     	;# 
  3286  1E1F                     	;# 
  3287  1E20                     	;# 
  3288  1E21                     	;# 
  3289  1E22                     	;# 
  3290  1E23                     	;# 
  3291  1E24                     	;# 
  3292  1E25                     	;# 
  3293  1E26                     	;# 
  3294  1E27                     	;# 
  3295  1E28                     	;# 
  3296  1E29                     	;# 
  3297  1E2A                     	;# 
  3298  1E2B                     	;# 
  3299  1E2C                     	;# 
  3300  1E2D                     	;# 
  3301  1E2E                     	;# 
  3302  1E2F                     	;# 
  3303  1E30                     	;# 
  3304  1E31                     	;# 
  3305  1E32                     	;# 
  3306  1E33                     	;# 
  3307  1E34                     	;# 
  3308  1E35                     	;# 
  3309  1E36                     	;# 
  3310  1E37                     	;# 
  3311  1E8F                     	;# 
  3312  1E90                     	;# 
  3313  1E91                     	;# 
  3314  1E92                     	;# 
  3315  1E93                     	;# 
  3316  1E94                     	;# 
  3317  1E95                     	;# 
  3318  1E96                     	;# 
  3319  1E97                     	;# 
  3320  1E9C                     	;# 
  3321  1E9D                     	;# 
  3322  1E9E                     	;# 
  3323  1EA1                     	;# 
  3324  1EA2                     	;# 
  3325  1EA3                     	;# 
  3326  1EA4                     	;# 
  3327  1EA5                     	;# 
  3328  1EA9                     	;# 
  3329  1EAA                     	;# 
  3330  1EAB                     	;# 
  3331  1EAC                     	;# 
  3332  1EB1                     	;# 
  3333  1EB2                     	;# 
  3334  1EB3                     	;# 
  3335  1EB8                     	;# 
  3336  1EB9                     	;# 
  3337  1EBA                     	;# 
  3338  1EBB                     	;# 
  3339  1EBC                     	;# 
  3340  1EBD                     	;# 
  3341  1EBE                     	;# 
  3342  1EC3                     	;# 
  3343  1EC5                     	;# 
  3344  1EC6                     	;# 
  3345  1EC7                     	;# 
  3346  1EC8                     	;# 
  3347  1EC9                     	;# 
  3348  1ECA                     	;# 
  3349  1ECB                     	;# 
  3350  1ECC                     	;# 
  3351  1F10                     	;# 
  3352  1F11                     	;# 
  3353  1F12                     	;# 
  3354  1F13                     	;# 
  3355  1F14                     	;# 
  3356  1F15                     	;# 
  3357  1F16                     	;# 
  3358  1F17                     	;# 
  3359  1F18                     	;# 
  3360  1F19                     	;# 
  3361  1F1A                     	;# 
  3362  1F1B                     	;# 
  3363  1F1C                     	;# 
  3364  1F1D                     	;# 
  3365  1F1E                     	;# 
  3366  1F1F                     	;# 
  3367  1F20                     	;# 
  3368  1F21                     	;# 
  3369  1F22                     	;# 
  3370  1F23                     	;# 
  3371  1F24                     	;# 
  3372  1F25                     	;# 
  3373  1F26                     	;# 
  3374  1F27                     	;# 
  3375  1F28                     	;# 
  3376  1F29                     	;# 
  3377  1F2A                     	;# 
  3378  1F2B                     	;# 
  3379  1F2C                     	;# 
  3380  1F2D                     	;# 
  3381  1F2E                     	;# 
  3382  1F2F                     	;# 
  3383  1F30                     	;# 
  3384  1F31                     	;# 
  3385  1F32                     	;# 
  3386  1F38                     	;# 
  3387  1F39                     	;# 
  3388  1F3A                     	;# 
  3389  1F3B                     	;# 
  3390  1F3C                     	;# 
  3391  1F3D                     	;# 
  3392  1F3E                     	;# 
  3393  1F3F                     	;# 
  3394  1F40                     	;# 
  3395  1F41                     	;# 
  3396  1F43                     	;# 
  3397  1F44                     	;# 
  3398  1F45                     	;# 
  3399  1F46                     	;# 
  3400  1F47                     	;# 
  3401  1F48                     	;# 
  3402  1F49                     	;# 
  3403  1F4A                     	;# 
  3404  1F4B                     	;# 
  3405  1F4C                     	;# 
  3406  1F4E                     	;# 
  3407  1F4F                     	;# 
  3408  1F50                     	;# 
  3409  1F51                     	;# 
  3410  1F52                     	;# 
  3411  1F53                     	;# 
  3412  1F54                     	;# 
  3413  1F55                     	;# 
  3414  1F56                     	;# 
  3415  1F57                     	;# 
  3416  1F59                     	;# 
  3417  1F5A                     	;# 
  3418  1F5B                     	;# 
  3419  1F5C                     	;# 
  3420  1F5D                     	;# 
  3421  1F61                     	;# 
  3422  1F62                     	;# 
  3423  1F64                     	;# 
  3424  1F65                     	;# 
  3425  1F66                     	;# 
  3426  1F67                     	;# 
  3427  1F68                     	;# 
  3428  1F69                     	;# 
  3429  1F6A                     	;# 
  3430  1F6B                     	;# 
  3431  1F6C                     	;# 
  3432  1F6D                     	;# 
  3433  1FE4                     	;# 
  3434  1FE5                     	;# 
  3435  1FE6                     	;# 
  3436  1FE7                     	;# 
  3437  1FE8                     	;# 
  3438  1FE9                     	;# 
  3439  1FEA                     	;# 
  3440  1FEB                     	;# 
  3441  1FED                     	;# 
  3442  1FEE                     	;# 
  3443  1FEF                     	;# 
  3444  0000                     	;# 
  3445  0001                     	;# 
  3446  0002                     	;# 
  3447  0003                     	;# 
  3448  0004                     	;# 
  3449  0005                     	;# 
  3450  0006                     	;# 
  3451  0007                     	;# 
  3452  0008                     	;# 
  3453  0009                     	;# 
  3454  000A                     	;# 
  3455  000B                     	;# 
  3456  000C                     	;# 
  3457  000D                     	;# 
  3458  000E                     	;# 
  3459  000F                     	;# 
  3460  0010                     	;# 
  3461  0011                     	;# 
  3462  0012                     	;# 
  3463  0013                     	;# 
  3464  0014                     	;# 
  3465  0015                     	;# 
  3466  0016                     	;# 
  3467  0017                     	;# 
  3468  0018                     	;# 
  3469  0019                     	;# 
  3470  001A                     	;# 
  3471  001C                     	;# 
  3472  001C                     	;# 
  3473  001D                     	;# 
  3474  001D                     	;# 
  3475  001E                     	;# 
  3476  001F                     	;# 
  3477  008C                     	;# 
  3478  008C                     	;# 
  3479  008D                     	;# 
  3480  008E                     	;# 
  3481  008E                     	;# 
  3482  008F                     	;# 
  3483  0090                     	;# 
  3484  0090                     	;# 
  3485  0091                     	;# 
  3486  0093                     	;# 
  3487  0094                     	;# 
  3488  0095                     	;# 
  3489  0096                     	;# 
  3490  0097                     	;# 
  3491  0098                     	;# 
  3492  0099                     	;# 
  3493  009A                     	;# 
  3494  009B                     	;# 
  3495  009C                     	;# 
  3496  009D                     	;# 
  3497  009E                     	;# 
  3498  010C                     	;# 
  3499  010D                     	;# 
  3500  010E                     	;# 
  3501  010E                     	;# 
  3502  010F                     	;# 
  3503  0110                     	;# 
  3504  0110                     	;# 
  3505  0111                     	;# 
  3506  0112                     	;# 
  3507  0112                     	;# 
  3508  0113                     	;# 
  3509  0114                     	;# 
  3510  0114                     	;# 
  3511  0115                     	;# 
  3512  0116                     	;# 
  3513  0116                     	;# 
  3514  0117                     	;# 
  3515  0119                     	;# 
  3516  0119                     	;# 
  3517  0119                     	;# 
  3518  011A                     	;# 
  3519  011A                     	;# 
  3520  011A                     	;# 
  3521  011B                     	;# 
  3522  011B                     	;# 
  3523  011B                     	;# 
  3524  011B                     	;# 
  3525  011B                     	;# 
  3526  011C                     	;# 
  3527  011C                     	;# 
  3528  011C                     	;# 
  3529  011D                     	;# 
  3530  011D                     	;# 
  3531  011D                     	;# 
  3532  011E                     	;# 
  3533  011E                     	;# 
  3534  011E                     	;# 
  3535  011F                     	;# 
  3536  011F                     	;# 
  3537  011F                     	;# 
  3538  011F                     	;# 
  3539  011F                     	;# 
  3540  018C                     	;# 
  3541  018D                     	;# 
  3542  018E                     	;# 
  3543  018F                     	;# 
  3544  0190                     	;# 
  3545  0191                     	;# 
  3546  0192                     	;# 
  3547  0196                     	;# 
  3548  0197                     	;# 
  3549  0198                     	;# 
  3550  0199                     	;# 
  3551  019A                     	;# 
  3552  019B                     	;# 
  3553  019C                     	;# 
  3554  020C                     	;# 
  3555  020C                     	;# 
  3556  020D                     	;# 
  3557  020E                     	;# 
  3558  020F                     	;# 
  3559  020F                     	;# 
  3560  0210                     	;# 
  3561  0210                     	;# 
  3562  0211                     	;# 
  3563  0211                     	;# 
  3564  0212                     	;# 
  3565  0212                     	;# 
  3566  0213                     	;# 
  3567  0214                     	;# 
  3568  0215                     	;# 
  3569  0215                     	;# 
  3570  0216                     	;# 
  3571  0216                     	;# 
  3572  0217                     	;# 
  3573  0217                     	;# 
  3574  0218                     	;# 
  3575  0218                     	;# 
  3576  0219                     	;# 
  3577  021A                     	;# 
  3578  021B                     	;# 
  3579  021B                     	;# 
  3580  021C                     	;# 
  3581  021C                     	;# 
  3582  021D                     	;# 
  3583  021D                     	;# 
  3584  021E                     	;# 
  3585  021F                     	;# 
  3586  028C                     	;# 
  3587  028C                     	;# 
  3588  028D                     	;# 
  3589  028D                     	;# 
  3590  028E                     	;# 
  3591  028F                     	;# 
  3592  0290                     	;# 
  3593  0290                     	;# 
  3594  0291                     	;# 
  3595  0292                     	;# 
  3596  0292                     	;# 
  3597  0293                     	;# 
  3598  0293                     	;# 
  3599  0294                     	;# 
  3600  0295                     	;# 
  3601  0296                     	;# 
  3602  0296                     	;# 
  3603  0297                     	;# 
  3604  0298                     	;# 
  3605  0298                     	;# 
  3606  0299                     	;# 
  3607  0299                     	;# 
  3608  029A                     	;# 
  3609  029B                     	;# 
  3610  029C                     	;# 
  3611  029C                     	;# 
  3612  029D                     	;# 
  3613  030C                     	;# 
  3614  030C                     	;# 
  3615  030D                     	;# 
  3616  030E                     	;# 
  3617  030F                     	;# 
  3618  0310                     	;# 
  3619  0310                     	;# 
  3620  0311                     	;# 
  3621  0312                     	;# 
  3622  0313                     	;# 
  3623  0314                     	;# 
  3624  0314                     	;# 
  3625  0315                     	;# 
  3626  0316                     	;# 
  3627  0317                     	;# 
  3628  0318                     	;# 
  3629  0318                     	;# 
  3630  0319                     	;# 
  3631  031A                     	;# 
  3632  031B                     	;# 
  3633  031C                     	;# 
  3634  031C                     	;# 
  3635  031D                     	;# 
  3636  031E                     	;# 
  3637  031F                     	;# 
  3638  038C                     	;# 
  3639  038D                     	;# 
  3640  038E                     	;# 
  3641  0390                     	;# 
  3642  0391                     	;# 
  3643  0392                     	;# 
  3644  040C                     	;# 
  3645  040D                     	;# 
  3646  040E                     	;# 
  3647  040F                     	;# 
  3648  0410                     	;# 
  3649  0411                     	;# 
  3650  0416                     	;# 
  3651  0416                     	;# 
  3652  0417                     	;# 
  3653  0418                     	;# 
  3654  0418                     	;# 
  3655  0419                     	;# 
  3656  041A                     	;# 
  3657  041A                     	;# 
  3658  041B                     	;# 
  3659  041C                     	;# 
  3660  041C                     	;# 
  3661  041D                     	;# 
  3662  041E                     	;# 
  3663  041F                     	;# 
  3664  048C                     	;# 
  3665  048C                     	;# 
  3666  048D                     	;# 
  3667  048E                     	;# 
  3668  048F                     	;# 
  3669  048F                     	;# 
  3670  0490                     	;# 
  3671  0491                     	;# 
  3672  0492                     	;# 
  3673  0492                     	;# 
  3674  0493                     	;# 
  3675  0494                     	;# 
  3676  0495                     	;# 
  3677  0495                     	;# 
  3678  0496                     	;# 
  3679  0497                     	;# 
  3680  0498                     	;# 
  3681  0499                     	;# 
  3682  049A                     	;# 
  3683  049B                     	;# 
  3684  049C                     	;# 
  3685  049D                     	;# 
  3686  050C                     	;# 
  3687  050C                     	;# 
  3688  050D                     	;# 
  3689  050E                     	;# 
  3690  050F                     	;# 
  3691  050F                     	;# 
  3692  0510                     	;# 
  3693  0511                     	;# 
  3694  0512                     	;# 
  3695  0512                     	;# 
  3696  0513                     	;# 
  3697  0514                     	;# 
  3698  0515                     	;# 
  3699  0515                     	;# 
  3700  0516                     	;# 
  3701  0517                     	;# 
  3702  0518                     	;# 
  3703  0519                     	;# 
  3704  051A                     	;# 
  3705  051B                     	;# 
  3706  051C                     	;# 
  3707  051D                     	;# 
  3708  058C                     	;# 
  3709  058C                     	;# 
  3710  058D                     	;# 
  3711  058E                     	;# 
  3712  058F                     	;# 
  3713  058F                     	;# 
  3714  0590                     	;# 
  3715  0591                     	;# 
  3716  0592                     	;# 
  3717  0593                     	;# 
  3718  060C                     	;# 
  3719  060D                     	;# 
  3720  060E                     	;# 
  3721  060F                     	;# 
  3722  0610                     	;# 
  3723  0611                     	;# 
  3724  0612                     	;# 
  3725  0613                     	;# 
  3726  0614                     	;# 
  3727  0616                     	;# 
  3728  0617                     	;# 
  3729  0618                     	;# 
  3730  0619                     	;# 
  3731  061A                     	;# 
  3732  061B                     	;# 
  3733  061C                     	;# 
  3734  061D                     	;# 
  3735  061E                     	;# 
  3736  068C                     	;# 
  3737  068D                     	;# 
  3738  068E                     	;# 
  3739  068F                     	;# 
  3740  0690                     	;# 
  3741  0691                     	;# 
  3742  0692                     	;# 
  3743  0693                     	;# 
  3744  0694                     	;# 
  3745  070C                     	;# 
  3746  070D                     	;# 
  3747  070E                     	;# 
  3748  070F                     	;# 
  3749  0710                     	;# 
  3750  0711                     	;# 
  3751  0712                     	;# 
  3752  0713                     	;# 
  3753  0714                     	;# 
  3754  0716                     	;# 
  3755  0717                     	;# 
  3756  0718                     	;# 
  3757  0719                     	;# 
  3758  071A                     	;# 
  3759  071B                     	;# 
  3760  071C                     	;# 
  3761  071D                     	;# 
  3762  071E                     	;# 
  3763  0796                     	;# 
  3764  0797                     	;# 
  3765  0798                     	;# 
  3766  0799                     	;# 
  3767  079A                     	;# 
  3768  079B                     	;# 
  3769  080C                     	;# 
  3770  080D                     	;# 
  3771  080E                     	;# 
  3772  080F                     	;# 
  3773  0810                     	;# 
  3774  0811                     	;# 
  3775  0812                     	;# 
  3776  0813                     	;# 
  3777  0814                     	;# 
  3778  081A                     	;# 
  3779  081B                     	;# 
  3780  081C                     	;# 
  3781  081D                     	;# 
  3782  081E                     	;# 
  3783  081F                     	;# 
  3784  088C                     	;# 
  3785  088D                     	;# 
  3786  088E                     	;# 
  3787  088F                     	;# 
  3788  0890                     	;# 
  3789  0891                     	;# 
  3790  0892                     	;# 
  3791  0893                     	;# 
  3792  0895                     	;# 
  3793  0896                     	;# 
  3794  0897                     	;# 
  3795  0898                     	;# 
  3796  0899                     	;# 
  3797  089A                     	;# 
  3798  089B                     	;# 
  3799  090C                     	;# 
  3800  090E                     	;# 
  3801  090F                     	;# 
  3802  091F                     	;# 
  3803  098F                     	;# 
  3804  098F                     	;# 
  3805  0990                     	;# 
  3806  0991                     	;# 
  3807  0992                     	;# 
  3808  0993                     	;# 
  3809  0994                     	;# 
  3810  0995                     	;# 
  3811  0996                     	;# 
  3812  0997                     	;# 
  3813  1E0F                     	;# 
  3814  1E10                     	;# 
  3815  1E11                     	;# 
  3816  1E12                     	;# 
  3817  1E13                     	;# 
  3818  1E14                     	;# 
  3819  1E15                     	;# 
  3820  1E16                     	;# 
  3821  1E17                     	;# 
  3822  1E18                     	;# 
  3823  1E19                     	;# 
  3824  1E1A                     	;# 
  3825  1E1B                     	;# 
  3826  1E1C                     	;# 
  3827  1E1D                     	;# 
  3828  1E1E                     	;# 
  3829  1E1F                     	;# 
  3830  1E20                     	;# 
  3831  1E21                     	;# 
  3832  1E22                     	;# 
  3833  1E23                     	;# 
  3834  1E24                     	;# 
  3835  1E25                     	;# 
  3836  1E26                     	;# 
  3837  1E27                     	;# 
  3838  1E28                     	;# 
  3839  1E29                     	;# 
  3840  1E2A                     	;# 
  3841  1E2B                     	;# 
  3842  1E2C                     	;# 
  3843  1E2D                     	;# 
  3844  1E2E                     	;# 
  3845  1E2F                     	;# 
  3846  1E30                     	;# 
  3847  1E31                     	;# 
  3848  1E32                     	;# 
  3849  1E33                     	;# 
  3850  1E34                     	;# 
  3851  1E35                     	;# 
  3852  1E36                     	;# 
  3853  1E37                     	;# 
  3854  1E8F                     	;# 
  3855  1E90                     	;# 
  3856  1E91                     	;# 
  3857  1E92                     	;# 
  3858  1E93                     	;# 
  3859  1E94                     	;# 
  3860  1E95                     	;# 
  3861  1E96                     	;# 
  3862  1E97                     	;# 
  3863  1E9C                     	;# 
  3864  1E9D                     	;# 
  3865  1E9E                     	;# 
  3866  1EA1                     	;# 
  3867  1EA2                     	;# 
  3868  1EA3                     	;# 
  3869  1EA4                     	;# 
  3870  1EA5                     	;# 
  3871  1EA9                     	;# 
  3872  1EAA                     	;# 
  3873  1EAB                     	;# 
  3874  1EAC                     	;# 
  3875  1EB1                     	;# 
  3876  1EB2                     	;# 
  3877  1EB3                     	;# 
  3878  1EB8                     	;# 
  3879  1EB9                     	;# 
  3880  1EBA                     	;# 
  3881  1EBB                     	;# 
  3882  1EBC                     	;# 
  3883  1EBD                     	;# 
  3884  1EBE                     	;# 
  3885  1EC3                     	;# 
  3886  1EC5                     	;# 
  3887  1EC6                     	;# 
  3888  1EC7                     	;# 
  3889  1EC8                     	;# 
  3890  1EC9                     	;# 
  3891  1ECA                     	;# 
  3892  1ECB                     	;# 
  3893  1ECC                     	;# 
  3894  1F10                     	;# 
  3895  1F11                     	;# 
  3896  1F12                     	;# 
  3897  1F13                     	;# 
  3898  1F14                     	;# 
  3899  1F15                     	;# 
  3900  1F16                     	;# 
  3901  1F17                     	;# 
  3902  1F18                     	;# 
  3903  1F19                     	;# 
  3904  1F1A                     	;# 
  3905  1F1B                     	;# 
  3906  1F1C                     	;# 
  3907  1F1D                     	;# 
  3908  1F1E                     	;# 
  3909  1F1F                     	;# 
  3910  1F20                     	;# 
  3911  1F21                     	;# 
  3912  1F22                     	;# 
  3913  1F23                     	;# 
  3914  1F24                     	;# 
  3915  1F25                     	;# 
  3916  1F26                     	;# 
  3917  1F27                     	;# 
  3918  1F28                     	;# 
  3919  1F29                     	;# 
  3920  1F2A                     	;# 
  3921  1F2B                     	;# 
  3922  1F2C                     	;# 
  3923  1F2D                     	;# 
  3924  1F2E                     	;# 
  3925  1F2F                     	;# 
  3926  1F30                     	;# 
  3927  1F31                     	;# 
  3928  1F32                     	;# 
  3929  1F38                     	;# 
  3930  1F39                     	;# 
  3931  1F3A                     	;# 
  3932  1F3B                     	;# 
  3933  1F3C                     	;# 
  3934  1F3D                     	;# 
  3935  1F3E                     	;# 
  3936  1F3F                     	;# 
  3937  1F40                     	;# 
  3938  1F41                     	;# 
  3939  1F43                     	;# 
  3940  1F44                     	;# 
  3941  1F45                     	;# 
  3942  1F46                     	;# 
  3943  1F47                     	;# 
  3944  1F48                     	;# 
  3945  1F49                     	;# 
  3946  1F4A                     	;# 
  3947  1F4B                     	;# 
  3948  1F4C                     	;# 
  3949  1F4E                     	;# 
  3950  1F4F                     	;# 
  3951  1F50                     	;# 
  3952  1F51                     	;# 
  3953  1F52                     	;# 
  3954  1F53                     	;# 
  3955  1F54                     	;# 
  3956  1F55                     	;# 
  3957  1F56                     	;# 
  3958  1F57                     	;# 
  3959  1F59                     	;# 
  3960  1F5A                     	;# 
  3961  1F5B                     	;# 
  3962  1F5C                     	;# 
  3963  1F5D                     	;# 
  3964  1F61                     	;# 
  3965  1F62                     	;# 
  3966  1F64                     	;# 
  3967  1F65                     	;# 
  3968  1F66                     	;# 
  3969  1F67                     	;# 
  3970  1F68                     	;# 
  3971  1F69                     	;# 
  3972  1F6A                     	;# 
  3973  1F6B                     	;# 
  3974  1F6C                     	;# 
  3975  1F6D                     	;# 
  3976  1FE4                     	;# 
  3977  1FE5                     	;# 
  3978  1FE6                     	;# 
  3979  1FE7                     	;# 
  3980  1FE8                     	;# 
  3981  1FE9                     	;# 
  3982  1FEA                     	;# 
  3983  1FEB                     	;# 
  3984  1FED                     	;# 
  3985  1FEE                     	;# 
  3986  1FEF                     	;# 
  3987  0000                     	;# 
  3988  0001                     	;# 
  3989  0002                     	;# 
  3990  0003                     	;# 
  3991  0004                     	;# 
  3992  0005                     	;# 
  3993  0006                     	;# 
  3994  0007                     	;# 
  3995  0008                     	;# 
  3996  0009                     	;# 
  3997  000A                     	;# 
  3998  000B                     	;# 
  3999  000C                     	;# 
  4000  000D                     	;# 
  4001  000E                     	;# 
  4002  000F                     	;# 
  4003  0010                     	;# 
  4004  0011                     	;# 
  4005  0012                     	;# 
  4006  0013                     	;# 
  4007  0014                     	;# 
  4008  0015                     	;# 
  4009  0016                     	;# 
  4010  0017                     	;# 
  4011  0018                     	;# 
  4012  0019                     	;# 
  4013  001A                     	;# 
  4014  001C                     	;# 
  4015  001C                     	;# 
  4016  001D                     	;# 
  4017  001D                     	;# 
  4018  001E                     	;# 
  4019  001F                     	;# 
  4020  008C                     	;# 
  4021  008C                     	;# 
  4022  008D                     	;# 
  4023  008E                     	;# 
  4024  008E                     	;# 
  4025  008F                     	;# 
  4026  0090                     	;# 
  4027  0090                     	;# 
  4028  0091                     	;# 
  4029  0093                     	;# 
  4030  0094                     	;# 
  4031  0095                     	;# 
  4032  0096                     	;# 
  4033  0097                     	;# 
  4034  0098                     	;# 
  4035  0099                     	;# 
  4036  009A                     	;# 
  4037  009B                     	;# 
  4038  009C                     	;# 
  4039  009D                     	;# 
  4040  009E                     	;# 
  4041  010C                     	;# 
  4042  010D                     	;# 
  4043  010E                     	;# 
  4044  010E                     	;# 
  4045  010F                     	;# 
  4046  0110                     	;# 
  4047  0110                     	;# 
  4048  0111                     	;# 
  4049  0112                     	;# 
  4050  0112                     	;# 
  4051  0113                     	;# 
  4052  0114                     	;# 
  4053  0114                     	;# 
  4054  0115                     	;# 
  4055  0116                     	;# 
  4056  0116                     	;# 
  4057  0117                     	;# 
  4058  0119                     	;# 
  4059  0119                     	;# 
  4060  0119                     	;# 
  4061  011A                     	;# 
  4062  011A                     	;# 
  4063  011A                     	;# 
  4064  011B                     	;# 
  4065  011B                     	;# 
  4066  011B                     	;# 
  4067  011B                     	;# 
  4068  011B                     	;# 
  4069  011C                     	;# 
  4070  011C                     	;# 
  4071  011C                     	;# 
  4072  011D                     	;# 
  4073  011D                     	;# 
  4074  011D                     	;# 
  4075  011E                     	;# 
  4076  011E                     	;# 
  4077  011E                     	;# 
  4078  011F                     	;# 
  4079  011F                     	;# 
  4080  011F                     	;# 
  4081  011F                     	;# 
  4082  011F                     	;# 
  4083  018C                     	;# 
  4084  018D                     	;# 
  4085  018E                     	;# 
  4086  018F                     	;# 
  4087  0190                     	;# 
  4088  0191                     	;# 
  4089  0192                     	;# 
  4090  0196                     	;# 
  4091  0197                     	;# 
  4092  0198                     	;# 
  4093  0199                     	;# 
  4094  019A                     	;# 
  4095  019B                     	;# 
  4096  019C                     	;# 
  4097  020C                     	;# 
  4098  020C                     	;# 
  4099  020D                     	;# 
  4100  020E                     	;# 
  4101  020F                     	;# 
  4102  020F                     	;# 
  4103  0210                     	;# 
  4104  0210                     	;# 
  4105  0211                     	;# 
  4106  0211                     	;# 
  4107  0212                     	;# 
  4108  0212                     	;# 
  4109  0213                     	;# 
  4110  0214                     	;# 
  4111  0215                     	;# 
  4112  0215                     	;# 
  4113  0216                     	;# 
  4114  0216                     	;# 
  4115  0217                     	;# 
  4116  0217                     	;# 
  4117  0218                     	;# 
  4118  0218                     	;# 
  4119  0219                     	;# 
  4120  021A                     	;# 
  4121  021B                     	;# 
  4122  021B                     	;# 
  4123  021C                     	;# 
  4124  021C                     	;# 
  4125  021D                     	;# 
  4126  021D                     	;# 
  4127  021E                     	;# 
  4128  021F                     	;# 
  4129  028C                     	;# 
  4130  028C                     	;# 
  4131  028D                     	;# 
  4132  028D                     	;# 
  4133  028E                     	;# 
  4134  028F                     	;# 
  4135  0290                     	;# 
  4136  0290                     	;# 
  4137  0291                     	;# 
  4138  0292                     	;# 
  4139  0292                     	;# 
  4140  0293                     	;# 
  4141  0293                     	;# 
  4142  0294                     	;# 
  4143  0295                     	;# 
  4144  0296                     	;# 
  4145  0296                     	;# 
  4146  0297                     	;# 
  4147  0298                     	;# 
  4148  0298                     	;# 
  4149  0299                     	;# 
  4150  0299                     	;# 
  4151  029A                     	;# 
  4152  029B                     	;# 
  4153  029C                     	;# 
  4154  029C                     	;# 
  4155  029D                     	;# 
  4156  030C                     	;# 
  4157  030C                     	;# 
  4158  030D                     	;# 
  4159  030E                     	;# 
  4160  030F                     	;# 
  4161  0310                     	;# 
  4162  0310                     	;# 
  4163  0311                     	;# 
  4164  0312                     	;# 
  4165  0313                     	;# 
  4166  0314                     	;# 
  4167  0314                     	;# 
  4168  0315                     	;# 
  4169  0316                     	;# 
  4170  0317                     	;# 
  4171  0318                     	;# 
  4172  0318                     	;# 
  4173  0319                     	;# 
  4174  031A                     	;# 
  4175  031B                     	;# 
  4176  031C                     	;# 
  4177  031C                     	;# 
  4178  031D                     	;# 
  4179  031E                     	;# 
  4180  031F                     	;# 
  4181  038C                     	;# 
  4182  038D                     	;# 
  4183  038E                     	;# 
  4184  0390                     	;# 
  4185  0391                     	;# 
  4186  0392                     	;# 
  4187  040C                     	;# 
  4188  040D                     	;# 
  4189  040E                     	;# 
  4190  040F                     	;# 
  4191  0410                     	;# 
  4192  0411                     	;# 
  4193  0416                     	;# 
  4194  0416                     	;# 
  4195  0417                     	;# 
  4196  0418                     	;# 
  4197  0418                     	;# 
  4198  0419                     	;# 
  4199  041A                     	;# 
  4200  041A                     	;# 
  4201  041B                     	;# 
  4202  041C                     	;# 
  4203  041C                     	;# 
  4204  041D                     	;# 
  4205  041E                     	;# 
  4206  041F                     	;# 
  4207  048C                     	;# 
  4208  048C                     	;# 
  4209  048D                     	;# 
  4210  048E                     	;# 
  4211  048F                     	;# 
  4212  048F                     	;# 
  4213  0490                     	;# 
  4214  0491                     	;# 
  4215  0492                     	;# 
  4216  0492                     	;# 
  4217  0493                     	;# 
  4218  0494                     	;# 
  4219  0495                     	;# 
  4220  0495                     	;# 
  4221  0496                     	;# 
  4222  0497                     	;# 
  4223  0498                     	;# 
  4224  0499                     	;# 
  4225  049A                     	;# 
  4226  049B                     	;# 
  4227  049C                     	;# 
  4228  049D                     	;# 
  4229  050C                     	;# 
  4230  050C                     	;# 
  4231  050D                     	;# 
  4232  050E                     	;# 
  4233  050F                     	;# 
  4234  050F                     	;# 
  4235  0510                     	;# 
  4236  0511                     	;# 
  4237  0512                     	;# 
  4238  0512                     	;# 
  4239  0513                     	;# 
  4240  0514                     	;# 
  4241  0515                     	;# 
  4242  0515                     	;# 
  4243  0516                     	;# 
  4244  0517                     	;# 
  4245  0518                     	;# 
  4246  0519                     	;# 
  4247  051A                     	;# 
  4248  051B                     	;# 
  4249  051C                     	;# 
  4250  051D                     	;# 
  4251  058C                     	;# 
  4252  058C                     	;# 
  4253  058D                     	;# 
  4254  058E                     	;# 
  4255  058F                     	;# 
  4256  058F                     	;# 
  4257  0590                     	;# 
  4258  0591                     	;# 
  4259  0592                     	;# 
  4260  0593                     	;# 
  4261  060C                     	;# 
  4262  060D                     	;# 
  4263  060E                     	;# 
  4264  060F                     	;# 
  4265  0610                     	;# 
  4266  0611                     	;# 
  4267  0612                     	;# 
  4268  0613                     	;# 
  4269  0614                     	;# 
  4270  0616                     	;# 
  4271  0617                     	;# 
  4272  0618                     	;# 
  4273  0619                     	;# 
  4274  061A                     	;# 
  4275  061B                     	;# 
  4276  061C                     	;# 
  4277  061D                     	;# 
  4278  061E                     	;# 
  4279  068C                     	;# 
  4280  068D                     	;# 
  4281  068E                     	;# 
  4282  068F                     	;# 
  4283  0690                     	;# 
  4284  0691                     	;# 
  4285  0692                     	;# 
  4286  0693                     	;# 
  4287  0694                     	;# 
  4288  070C                     	;# 
  4289  070D                     	;# 
  4290  070E                     	;# 
  4291  070F                     	;# 
  4292  0710                     	;# 
  4293  0711                     	;# 
  4294  0712                     	;# 
  4295  0713                     	;# 
  4296  0714                     	;# 
  4297  0716                     	;# 
  4298  0717                     	;# 
  4299  0718                     	;# 
  4300  0719                     	;# 
  4301  071A                     	;# 
  4302  071B                     	;# 
  4303  071C                     	;# 
  4304  071D                     	;# 
  4305  071E                     	;# 
  4306  0796                     	;# 
  4307  0797                     	;# 
  4308  0798                     	;# 
  4309  0799                     	;# 
  4310  079A                     	;# 
  4311  079B                     	;# 
  4312  080C                     	;# 
  4313  080D                     	;# 
  4314  080E                     	;# 
  4315  080F                     	;# 
  4316  0810                     	;# 
  4317  0811                     	;# 
  4318  0812                     	;# 
  4319  0813                     	;# 
  4320  0814                     	;# 
  4321  081A                     	;# 
  4322  081B                     	;# 
  4323  081C                     	;# 
  4324  081D                     	;# 
  4325  081E                     	;# 
  4326  081F                     	;# 
  4327  088C                     	;# 
  4328  088D                     	;# 
  4329  088E                     	;# 
  4330  088F                     	;# 
  4331  0890                     	;# 
  4332  0891                     	;# 
  4333  0892                     	;# 
  4334  0893                     	;# 
  4335  0895                     	;# 
  4336  0896                     	;# 
  4337  0897                     	;# 
  4338  0898                     	;# 
  4339  0899                     	;# 
  4340  089A                     	;# 
  4341  089B                     	;# 
  4342  090C                     	;# 
  4343  090E                     	;# 
  4344  090F                     	;# 
  4345  091F                     	;# 
  4346  098F                     	;# 
  4347  098F                     	;# 
  4348  0990                     	;# 
  4349  0991                     	;# 
  4350  0992                     	;# 
  4351  0993                     	;# 
  4352  0994                     	;# 
  4353  0995                     	;# 
  4354  0996                     	;# 
  4355  0997                     	;# 
  4356  1E0F                     	;# 
  4357  1E10                     	;# 
  4358  1E11                     	;# 
  4359  1E12                     	;# 
  4360  1E13                     	;# 
  4361  1E14                     	;# 
  4362  1E15                     	;# 
  4363  1E16                     	;# 
  4364  1E17                     	;# 
  4365  1E18                     	;# 
  4366  1E19                     	;# 
  4367  1E1A                     	;# 
  4368  1E1B                     	;# 
  4369  1E1C                     	;# 
  4370  1E1D                     	;# 
  4371  1E1E                     	;# 
  4372  1E1F                     	;# 
  4373  1E20                     	;# 
  4374  1E21                     	;# 
  4375  1E22                     	;# 
  4376  1E23                     	;# 
  4377  1E24                     	;# 
  4378  1E25                     	;# 
  4379  1E26                     	;# 
  4380  1E27                     	;# 
  4381  1E28                     	;# 
  4382  1E29                     	;# 
  4383  1E2A                     	;# 
  4384  1E2B                     	;# 
  4385  1E2C                     	;# 
  4386  1E2D                     	;# 
  4387  1E2E                     	;# 
  4388  1E2F                     	;# 
  4389  1E30                     	;# 
  4390  1E31                     	;# 
  4391  1E32                     	;# 
  4392  1E33                     	;# 
  4393  1E34                     	;# 
  4394  1E35                     	;# 
  4395  1E36                     	;# 
  4396  1E37                     	;# 
  4397  1E8F                     	;# 
  4398  1E90                     	;# 
  4399  1E91                     	;# 
  4400  1E92                     	;# 
  4401  1E93                     	;# 
  4402  1E94                     	;# 
  4403  1E95                     	;# 
  4404  1E96                     	;# 
  4405  1E97                     	;# 
  4406  1E9C                     	;# 
  4407  1E9D                     	;# 
  4408  1E9E                     	;# 
  4409  1EA1                     	;# 
  4410  1EA2                     	;# 
  4411  1EA3                     	;# 
  4412  1EA4                     	;# 
  4413  1EA5                     	;# 
  4414  1EA9                     	;# 
  4415  1EAA                     	;# 
  4416  1EAB                     	;# 
  4417  1EAC                     	;# 
  4418  1EB1                     	;# 
  4419  1EB2                     	;# 
  4420  1EB3                     	;# 
  4421  1EB8                     	;# 
  4422  1EB9                     	;# 
  4423  1EBA                     	;# 
  4424  1EBB                     	;# 
  4425  1EBC                     	;# 
  4426  1EBD                     	;# 
  4427  1EBE                     	;# 
  4428  1EC3                     	;# 
  4429  1EC5                     	;# 
  4430  1EC6                     	;# 
  4431  1EC7                     	;# 
  4432  1EC8                     	;# 
  4433  1EC9                     	;# 
  4434  1ECA                     	;# 
  4435  1ECB                     	;# 
  4436  1ECC                     	;# 
  4437  1F10                     	;# 
  4438  1F11                     	;# 
  4439  1F12                     	;# 
  4440  1F13                     	;# 
  4441  1F14                     	;# 
  4442  1F15                     	;# 
  4443  1F16                     	;# 
  4444  1F17                     	;# 
  4445  1F18                     	;# 
  4446  1F19                     	;# 
  4447  1F1A                     	;# 
  4448  1F1B                     	;# 
  4449  1F1C                     	;# 
  4450  1F1D                     	;# 
  4451  1F1E                     	;# 
  4452  1F1F                     	;# 
  4453  1F20                     	;# 
  4454  1F21                     	;# 
  4455  1F22                     	;# 
  4456  1F23                     	;# 
  4457  1F24                     	;# 
  4458  1F25                     	;# 
  4459  1F26                     	;# 
  4460  1F27                     	;# 
  4461  1F28                     	;# 
  4462  1F29                     	;# 
  4463  1F2A                     	;# 
  4464  1F2B                     	;# 
  4465  1F2C                     	;# 
  4466  1F2D                     	;# 
  4467  1F2E                     	;# 
  4468  1F2F                     	;# 
  4469  1F30                     	;# 
  4470  1F31                     	;# 
  4471  1F32                     	;# 
  4472  1F38                     	;# 
  4473  1F39                     	;# 
  4474  1F3A                     	;# 
  4475  1F3B                     	;# 
  4476  1F3C                     	;# 
  4477  1F3D                     	;# 
  4478  1F3E                     	;# 
  4479  1F3F                     	;# 
  4480  1F40                     	;# 
  4481  1F41                     	;# 
  4482  1F43                     	;# 
  4483  1F44                     	;# 
  4484  1F45                     	;# 
  4485  1F46                     	;# 
  4486  1F47                     	;# 
  4487  1F48                     	;# 
  4488  1F49                     	;# 
  4489  1F4A                     	;# 
  4490  1F4B                     	;# 
  4491  1F4C                     	;# 
  4492  1F4E                     	;# 
  4493  1F4F                     	;# 
  4494  1F50                     	;# 
  4495  1F51                     	;# 
  4496  1F52                     	;# 
  4497  1F53                     	;# 
  4498  1F54                     	;# 
  4499  1F55                     	;# 
  4500  1F56                     	;# 
  4501  1F57                     	;# 
  4502  1F59                     	;# 
  4503  1F5A                     	;# 
  4504  1F5B                     	;# 
  4505  1F5C                     	;# 
  4506  1F5D                     	;# 
  4507  1F61                     	;# 
  4508  1F62                     	;# 
  4509  1F64                     	;# 
  4510  1F65                     	;# 
  4511  1F66                     	;# 
  4512  1F67                     	;# 
  4513  1F68                     	;# 
  4514  1F69                     	;# 
  4515  1F6A                     	;# 
  4516  1F6B                     	;# 
  4517  1F6C                     	;# 
  4518  1F6D                     	;# 
  4519  1FE4                     	;# 
  4520  1FE5                     	;# 
  4521  1FE6                     	;# 
  4522  1FE7                     	;# 
  4523  1FE8                     	;# 
  4524  1FE9                     	;# 
  4525  1FEA                     	;# 
  4526  1FEB                     	;# 
  4527  1FED                     	;# 
  4528  1FEE                     	;# 
  4529  1FEF                     	;# 
  4530  0000                     	;# 
  4531  0001                     	;# 
  4532  0002                     	;# 
  4533  0003                     	;# 
  4534  0004                     	;# 
  4535  0005                     	;# 
  4536  0006                     	;# 
  4537  0007                     	;# 
  4538  0008                     	;# 
  4539  0009                     	;# 
  4540  000A                     	;# 
  4541  000B                     	;# 
  4542  000C                     	;# 
  4543  000D                     	;# 
  4544  000E                     	;# 
  4545  000F                     	;# 
  4546  0010                     	;# 
  4547  0011                     	;# 
  4548  0012                     	;# 
  4549  0013                     	;# 
  4550  0014                     	;# 
  4551  0015                     	;# 
  4552  0016                     	;# 
  4553  0017                     	;# 
  4554  0018                     	;# 
  4555  0019                     	;# 
  4556  001A                     	;# 
  4557  001C                     	;# 
  4558  001C                     	;# 
  4559  001D                     	;# 
  4560  001D                     	;# 
  4561  001E                     	;# 
  4562  001F                     	;# 
  4563  008C                     	;# 
  4564  008C                     	;# 
  4565  008D                     	;# 
  4566  008E                     	;# 
  4567  008E                     	;# 
  4568  008F                     	;# 
  4569  0090                     	;# 
  4570  0090                     	;# 
  4571  0091                     	;# 
  4572  0093                     	;# 
  4573  0094                     	;# 
  4574  0095                     	;# 
  4575  0096                     	;# 
  4576  0097                     	;# 
  4577  0098                     	;# 
  4578  0099                     	;# 
  4579  009A                     	;# 
  4580  009B                     	;# 
  4581  009C                     	;# 
  4582  009D                     	;# 
  4583  009E                     	;# 
  4584  010C                     	;# 
  4585  010D                     	;# 
  4586  010E                     	;# 
  4587  010E                     	;# 
  4588  010F                     	;# 
  4589  0110                     	;# 
  4590  0110                     	;# 
  4591  0111                     	;# 
  4592  0112                     	;# 
  4593  0112                     	;# 
  4594  0113                     	;# 
  4595  0114                     	;# 
  4596  0114                     	;# 
  4597  0115                     	;# 
  4598  0116                     	;# 
  4599  0116                     	;# 
  4600  0117                     	;# 
  4601  0119                     	;# 
  4602  0119                     	;# 
  4603  0119                     	;# 
  4604  011A                     	;# 
  4605  011A                     	;# 
  4606  011A                     	;# 
  4607  011B                     	;# 
  4608  011B                     	;# 
  4609  011B                     	;# 
  4610  011B                     	;# 
  4611  011B                     	;# 
  4612  011C                     	;# 
  4613  011C                     	;# 
  4614  011C                     	;# 
  4615  011D                     	;# 
  4616  011D                     	;# 
  4617  011D                     	;# 
  4618  011E                     	;# 
  4619  011E                     	;# 
  4620  011E                     	;# 
  4621  011F                     	;# 
  4622  011F                     	;# 
  4623  011F                     	;# 
  4624  011F                     	;# 
  4625  011F                     	;# 
  4626  018C                     	;# 
  4627  018D                     	;# 
  4628  018E                     	;# 
  4629  018F                     	;# 
  4630  0190                     	;# 
  4631  0191                     	;# 
  4632  0192                     	;# 
  4633  0196                     	;# 
  4634  0197                     	;# 
  4635  0198                     	;# 
  4636  0199                     	;# 
  4637  019A                     	;# 
  4638  019B                     	;# 
  4639  019C                     	;# 
  4640  020C                     	;# 
  4641  020C                     	;# 
  4642  020D                     	;# 
  4643  020E                     	;# 
  4644  020F                     	;# 
  4645  020F                     	;# 
  4646  0210                     	;# 
  4647  0210                     	;# 
  4648  0211                     	;# 
  4649  0211                     	;# 
  4650  0212                     	;# 
  4651  0212                     	;# 
  4652  0213                     	;# 
  4653  0214                     	;# 
  4654  0215                     	;# 
  4655  0215                     	;# 
  4656  0216                     	;# 
  4657  0216                     	;# 
  4658  0217                     	;# 
  4659  0217                     	;# 
  4660  0218                     	;# 
  4661  0218                     	;# 
  4662  0219                     	;# 
  4663  021A                     	;# 
  4664  021B                     	;# 
  4665  021B                     	;# 
  4666  021C                     	;# 
  4667  021C                     	;# 
  4668  021D                     	;# 
  4669  021D                     	;# 
  4670  021E                     	;# 
  4671  021F                     	;# 
  4672  028C                     	;# 
  4673  028C                     	;# 
  4674  028D                     	;# 
  4675  028D                     	;# 
  4676  028E                     	;# 
  4677  028F                     	;# 
  4678  0290                     	;# 
  4679  0290                     	;# 
  4680  0291                     	;# 
  4681  0292                     	;# 
  4682  0292                     	;# 
  4683  0293                     	;# 
  4684  0293                     	;# 
  4685  0294                     	;# 
  4686  0295                     	;# 
  4687  0296                     	;# 
  4688  0296                     	;# 
  4689  0297                     	;# 
  4690  0298                     	;# 
  4691  0298                     	;# 
  4692  0299                     	;# 
  4693  0299                     	;# 
  4694  029A                     	;# 
  4695  029B                     	;# 
  4696  029C                     	;# 
  4697  029C                     	;# 
  4698  029D                     	;# 
  4699  030C                     	;# 
  4700  030C                     	;# 
  4701  030D                     	;# 
  4702  030E                     	;# 
  4703  030F                     	;# 
  4704  0310                     	;# 
  4705  0310                     	;# 
  4706  0311                     	;# 
  4707  0312                     	;# 
  4708  0313                     	;# 
  4709  0314                     	;# 
  4710  0314                     	;# 
  4711  0315                     	;# 
  4712  0316                     	;# 
  4713  0317                     	;# 
  4714  0318                     	;# 
  4715  0318                     	;# 
  4716  0319                     	;# 
  4717  031A                     	;# 
  4718  031B                     	;# 
  4719  031C                     	;# 
  4720  031C                     	;# 
  4721  031D                     	;# 
  4722  031E                     	;# 
  4723  031F                     	;# 
  4724  038C                     	;# 
  4725  038D                     	;# 
  4726  038E                     	;# 
  4727  0390                     	;# 
  4728  0391                     	;# 
  4729  0392                     	;# 
  4730  040C                     	;# 
  4731  040D                     	;# 
  4732  040E                     	;# 
  4733  040F                     	;# 
  4734  0410                     	;# 
  4735  0411                     	;# 
  4736  0416                     	;# 
  4737  0416                     	;# 
  4738  0417                     	;# 
  4739  0418                     	;# 
  4740  0418                     	;# 
  4741  0419                     	;# 
  4742  041A                     	;# 
  4743  041A                     	;# 
  4744  041B                     	;# 
  4745  041C                     	;# 
  4746  041C                     	;# 
  4747  041D                     	;# 
  4748  041E                     	;# 
  4749  041F                     	;# 
  4750  048C                     	;# 
  4751  048C                     	;# 
  4752  048D                     	;# 
  4753  048E                     	;# 
  4754  048F                     	;# 
  4755  048F                     	;# 
  4756  0490                     	;# 
  4757  0491                     	;# 
  4758  0492                     	;# 
  4759  0492                     	;# 
  4760  0493                     	;# 
  4761  0494                     	;# 
  4762  0495                     	;# 
  4763  0495                     	;# 
  4764  0496                     	;# 
  4765  0497                     	;# 
  4766  0498                     	;# 
  4767  0499                     	;# 
  4768  049A                     	;# 
  4769  049B                     	;# 
  4770  049C                     	;# 
  4771  049D                     	;# 
  4772  050C                     	;# 
  4773  050C                     	;# 
  4774  050D                     	;# 
  4775  050E                     	;# 
  4776  050F                     	;# 
  4777  050F                     	;# 
  4778  0510                     	;# 
  4779  0511                     	;# 
  4780  0512                     	;# 
  4781  0512                     	;# 
  4782  0513                     	;# 
  4783  0514                     	;# 
  4784  0515                     	;# 
  4785  0515                     	;# 
  4786  0516                     	;# 
  4787  0517                     	;# 
  4788  0518                     	;# 
  4789  0519                     	;# 
  4790  051A                     	;# 
  4791  051B                     	;# 
  4792  051C                     	;# 
  4793  051D                     	;# 
  4794  058C                     	;# 
  4795  058C                     	;# 
  4796  058D                     	;# 
  4797  058E                     	;# 
  4798  058F                     	;# 
  4799  058F                     	;# 
  4800  0590                     	;# 
  4801  0591                     	;# 
  4802  0592                     	;# 
  4803  0593                     	;# 
  4804  060C                     	;# 
  4805  060D                     	;# 
  4806  060E                     	;# 
  4807  060F                     	;# 
  4808  0610                     	;# 
  4809  0611                     	;# 
  4810  0612                     	;# 
  4811  0613                     	;# 
  4812  0614                     	;# 
  4813  0616                     	;# 
  4814  0617                     	;# 
  4815  0618                     	;# 
  4816  0619                     	;# 
  4817  061A                     	;# 
  4818  061B                     	;# 
  4819  061C                     	;# 
  4820  061D                     	;# 
  4821  061E                     	;# 
  4822  068C                     	;# 
  4823  068D                     	;# 
  4824  068E                     	;# 
  4825  068F                     	;# 
  4826  0690                     	;# 
  4827  0691                     	;# 
  4828  0692                     	;# 
  4829  0693                     	;# 
  4830  0694                     	;# 
  4831  070C                     	;# 
  4832  070D                     	;# 
  4833  070E                     	;# 
  4834  070F                     	;# 
  4835  0710                     	;# 
  4836  0711                     	;# 
  4837  0712                     	;# 
  4838  0713                     	;# 
  4839  0714                     	;# 
  4840  0716                     	;# 
  4841  0717                     	;# 
  4842  0718                     	;# 
  4843  0719                     	;# 
  4844  071A                     	;# 
  4845  071B                     	;# 
  4846  071C                     	;# 
  4847  071D                     	;# 
  4848  071E                     	;# 
  4849  0796                     	;# 
  4850  0797                     	;# 
  4851  0798                     	;# 
  4852  0799                     	;# 
  4853  079A                     	;# 
  4854  079B                     	;# 
  4855  080C                     	;# 
  4856  080D                     	;# 
  4857  080E                     	;# 
  4858  080F                     	;# 
  4859  0810                     	;# 
  4860  0811                     	;# 
  4861  0812                     	;# 
  4862  0813                     	;# 
  4863  0814                     	;# 
  4864  081A                     	;# 
  4865  081B                     	;# 
  4866  081C                     	;# 
  4867  081D                     	;# 
  4868  081E                     	;# 
  4869  081F                     	;# 
  4870  088C                     	;# 
  4871  088D                     	;# 
  4872  088E                     	;# 
  4873  088F                     	;# 
  4874  0890                     	;# 
  4875  0891                     	;# 
  4876  0892                     	;# 
  4877  0893                     	;# 
  4878  0895                     	;# 
  4879  0896                     	;# 
  4880  0897                     	;# 
  4881  0898                     	;# 
  4882  0899                     	;# 
  4883  089A                     	;# 
  4884  089B                     	;# 
  4885  090C                     	;# 
  4886  090E                     	;# 
  4887  090F                     	;# 
  4888  091F                     	;# 
  4889  098F                     	;# 
  4890  098F                     	;# 
  4891  0990                     	;# 
  4892  0991                     	;# 
  4893  0992                     	;# 
  4894  0993                     	;# 
  4895  0994                     	;# 
  4896  0995                     	;# 
  4897  0996                     	;# 
  4898  0997                     	;# 
  4899  1E0F                     	;# 
  4900  1E10                     	;# 
  4901  1E11                     	;# 
  4902  1E12                     	;# 
  4903  1E13                     	;# 
  4904  1E14                     	;# 
  4905  1E15                     	;# 
  4906  1E16                     	;# 
  4907  1E17                     	;# 
  4908  1E18                     	;# 
  4909  1E19                     	;# 
  4910  1E1A                     	;# 
  4911  1E1B                     	;# 
  4912  1E1C                     	;# 
  4913  1E1D                     	;# 
  4914  1E1E                     	;# 
  4915  1E1F                     	;# 
  4916  1E20                     	;# 
  4917  1E21                     	;# 
  4918  1E22                     	;# 
  4919  1E23                     	;# 
  4920  1E24                     	;# 
  4921  1E25                     	;# 
  4922  1E26                     	;# 
  4923  1E27                     	;# 
  4924  1E28                     	;# 
  4925  1E29                     	;# 
  4926  1E2A                     	;# 
  4927  1E2B                     	;# 
  4928  1E2C                     	;# 
  4929  1E2D                     	;# 
  4930  1E2E                     	;# 
  4931  1E2F                     	;# 
  4932  1E30                     	;# 
  4933  1E31                     	;# 
  4934  1E32                     	;# 
  4935  1E33                     	;# 
  4936  1E34                     	;# 
  4937  1E35                     	;# 
  4938  1E36                     	;# 
  4939  1E37                     	;# 
  4940  1E8F                     	;# 
  4941  1E90                     	;# 
  4942  1E91                     	;# 
  4943  1E92                     	;# 
  4944  1E93                     	;# 
  4945  1E94                     	;# 
  4946  1E95                     	;# 
  4947  1E96                     	;# 
  4948  1E97                     	;# 
  4949  1E9C                     	;# 
  4950  1E9D                     	;# 
  4951  1E9E                     	;# 
  4952  1EA1                     	;# 
  4953  1EA2                     	;# 
  4954  1EA3                     	;# 
  4955  1EA4                     	;# 
  4956  1EA5                     	;# 
  4957  1EA9                     	;# 
  4958  1EAA                     	;# 
  4959  1EAB                     	;# 
  4960  1EAC                     	;# 
  4961  1EB1                     	;# 
  4962  1EB2                     	;# 
  4963  1EB3                     	;# 
  4964  1EB8                     	;# 
  4965  1EB9                     	;# 
  4966  1EBA                     	;# 
  4967  1EBB                     	;# 
  4968  1EBC                     	;# 
  4969  1EBD                     	;# 
  4970  1EBE                     	;# 
  4971  1EC3                     	;# 
  4972  1EC5                     	;# 
  4973  1EC6                     	;# 
  4974  1EC7                     	;# 
  4975  1EC8                     	;# 
  4976  1EC9                     	;# 
  4977  1ECA                     	;# 
  4978  1ECB                     	;# 
  4979  1ECC                     	;# 
  4980  1F10                     	;# 
  4981  1F11                     	;# 
  4982  1F12                     	;# 
  4983  1F13                     	;# 
  4984  1F14                     	;# 
  4985  1F15                     	;# 
  4986  1F16                     	;# 
  4987  1F17                     	;# 
  4988  1F18                     	;# 
  4989  1F19                     	;# 
  4990  1F1A                     	;# 
  4991  1F1B                     	;# 
  4992  1F1C                     	;# 
  4993  1F1D                     	;# 
  4994  1F1E                     	;# 
  4995  1F1F                     	;# 
  4996  1F20                     	;# 
  4997  1F21                     	;# 
  4998  1F22                     	;# 
  4999  1F23                     	;# 
  5000  1F24                     	;# 
  5001  1F25                     	;# 
  5002  1F26                     	;# 
  5003  1F27                     	;# 
  5004  1F28                     	;# 
  5005  1F29                     	;# 
  5006  1F2A                     	;# 
  5007  1F2B                     	;# 
  5008  1F2C                     	;# 
  5009  1F2D                     	;# 
  5010  1F2E                     	;# 
  5011  1F2F                     	;# 
  5012  1F30                     	;# 
  5013  1F31                     	;# 
  5014  1F32                     	;# 
  5015  1F38                     	;# 
  5016  1F39                     	;# 
  5017  1F3A                     	;# 
  5018  1F3B                     	;# 
  5019  1F3C                     	;# 
  5020  1F3D                     	;# 
  5021  1F3E                     	;# 
  5022  1F3F                     	;# 
  5023  1F40                     	;# 
  5024  1F41                     	;# 
  5025  1F43                     	;# 
  5026  1F44                     	;# 
  5027  1F45                     	;# 
  5028  1F46                     	;# 
  5029  1F47                     	;# 
  5030  1F48                     	;# 
  5031  1F49                     	;# 
  5032  1F4A                     	;# 
  5033  1F4B                     	;# 
  5034  1F4C                     	;# 
  5035  1F4E                     	;# 
  5036  1F4F                     	;# 
  5037  1F50                     	;# 
  5038  1F51                     	;# 
  5039  1F52                     	;# 
  5040  1F53                     	;# 
  5041  1F54                     	;# 
  5042  1F55                     	;# 
  5043  1F56                     	;# 
  5044  1F57                     	;# 
  5045  1F59                     	;# 
  5046  1F5A                     	;# 
  5047  1F5B                     	;# 
  5048  1F5C                     	;# 
  5049  1F5D                     	;# 
  5050  1F61                     	;# 
  5051  1F62                     	;# 
  5052  1F64                     	;# 
  5053  1F65                     	;# 
  5054  1F66                     	;# 
  5055  1F67                     	;# 
  5056  1F68                     	;# 
  5057  1F69                     	;# 
  5058  1F6A                     	;# 
  5059  1F6B                     	;# 
  5060  1F6C                     	;# 
  5061  1F6D                     	;# 
  5062  1FE4                     	;# 
  5063  1FE5                     	;# 
  5064  1FE6                     	;# 
  5065  1FE7                     	;# 
  5066  1FE8                     	;# 
  5067  1FE9                     	;# 
  5068  1FEA                     	;# 
  5069  1FEB                     	;# 
  5070  1FED                     	;# 
  5071  1FEE                     	;# 
  5072  1FEF                     	;# 
  5073  0000                     	;# 
  5074  0001                     	;# 
  5075  0002                     	;# 
  5076  0003                     	;# 
  5077  0004                     	;# 
  5078  0005                     	;# 
  5079  0006                     	;# 
  5080  0007                     	;# 
  5081  0008                     	;# 
  5082  0009                     	;# 
  5083  000A                     	;# 
  5084  000B                     	;# 
  5085  000C                     	;# 
  5086  000D                     	;# 
  5087  000E                     	;# 
  5088  000F                     	;# 
  5089  0010                     	;# 
  5090  0011                     	;# 
  5091  0012                     	;# 
  5092  0013                     	;# 
  5093  0014                     	;# 
  5094  0015                     	;# 
  5095  0016                     	;# 
  5096  0017                     	;# 
  5097  0018                     	;# 
  5098  0019                     	;# 
  5099  001A                     	;# 
  5100  001C                     	;# 
  5101  001C                     	;# 
  5102  001D                     	;# 
  5103  001D                     	;# 
  5104  001E                     	;# 
  5105  001F                     	;# 
  5106  008C                     	;# 
  5107  008C                     	;# 
  5108  008D                     	;# 
  5109  008E                     	;# 
  5110  008E                     	;# 
  5111  008F                     	;# 
  5112  0090                     	;# 
  5113  0090                     	;# 
  5114  0091                     	;# 
  5115  0093                     	;# 
  5116  0094                     	;# 
  5117  0095                     	;# 
  5118  0096                     	;# 
  5119  0097                     	;# 
  5120  0098                     	;# 
  5121  0099                     	;# 
  5122  009A                     	;# 
  5123  009B                     	;# 
  5124  009C                     	;# 
  5125  009D                     	;# 
  5126  009E                     	;# 
  5127  010C                     	;# 
  5128  010D                     	;# 
  5129  010E                     	;# 
  5130  010E                     	;# 
  5131  010F                     	;# 
  5132  0110                     	;# 
  5133  0110                     	;# 
  5134  0111                     	;# 
  5135  0112                     	;# 
  5136  0112                     	;# 
  5137  0113                     	;# 
  5138  0114                     	;# 
  5139  0114                     	;# 
  5140  0115                     	;# 
  5141  0116                     	;# 
  5142  0116                     	;# 
  5143  0117                     	;# 
  5144  0119                     	;# 
  5145  0119                     	;# 
  5146  0119                     	;# 
  5147  011A                     	;# 
  5148  011A                     	;# 
  5149  011A                     	;# 
  5150  011B                     	;# 
  5151  011B                     	;# 
  5152  011B                     	;# 
  5153  011B                     	;# 
  5154  011B                     	;# 
  5155  011C                     	;# 
  5156  011C                     	;# 
  5157  011C                     	;# 
  5158  011D                     	;# 
  5159  011D                     	;# 
  5160  011D                     	;# 
  5161  011E                     	;# 
  5162  011E                     	;# 
  5163  011E                     	;# 
  5164  011F                     	;# 
  5165  011F                     	;# 
  5166  011F                     	;# 
  5167  011F                     	;# 
  5168  011F                     	;# 
  5169  018C                     	;# 
  5170  018D                     	;# 
  5171  018E                     	;# 
  5172  018F                     	;# 
  5173  0190                     	;# 
  5174  0191                     	;# 
  5175  0192                     	;# 
  5176  0196                     	;# 
  5177  0197                     	;# 
  5178  0198                     	;# 
  5179  0199                     	;# 
  5180  019A                     	;# 
  5181  019B                     	;# 
  5182  019C                     	;# 
  5183  020C                     	;# 
  5184  020C                     	;# 
  5185  020D                     	;# 
  5186  020E                     	;# 
  5187  020F                     	;# 
  5188  020F                     	;# 
  5189  0210                     	;# 
  5190  0210                     	;# 
  5191  0211                     	;# 
  5192  0211                     	;# 
  5193  0212                     	;# 
  5194  0212                     	;# 
  5195  0213                     	;# 
  5196  0214                     	;# 
  5197  0215                     	;# 
  5198  0215                     	;# 
  5199  0216                     	;# 
  5200  0216                     	;# 
  5201  0217                     	;# 
  5202  0217                     	;# 
  5203  0218                     	;# 
  5204  0218                     	;# 
  5205  0219                     	;# 
  5206  021A                     	;# 
  5207  021B                     	;# 
  5208  021B                     	;# 
  5209  021C                     	;# 
  5210  021C                     	;# 
  5211  021D                     	;# 
  5212  021D                     	;# 
  5213  021E                     	;# 
  5214  021F                     	;# 
  5215  028C                     	;# 
  5216  028C                     	;# 
  5217  028D                     	;# 
  5218  028D                     	;# 
  5219  028E                     	;# 
  5220  028F                     	;# 
  5221  0290                     	;# 
  5222  0290                     	;# 
  5223  0291                     	;# 
  5224  0292                     	;# 
  5225  0292                     	;# 
  5226  0293                     	;# 
  5227  0293                     	;# 
  5228  0294                     	;# 
  5229  0295                     	;# 
  5230  0296                     	;# 
  5231  0296                     	;# 
  5232  0297                     	;# 
  5233  0298                     	;# 
  5234  0298                     	;# 
  5235  0299                     	;# 
  5236  0299                     	;# 
  5237  029A                     	;# 
  5238  029B                     	;# 
  5239  029C                     	;# 
  5240  029C                     	;# 
  5241  029D                     	;# 
  5242  030C                     	;# 
  5243  030C                     	;# 
  5244  030D                     	;# 
  5245  030E                     	;# 
  5246  030F                     	;# 
  5247  0310                     	;# 
  5248  0310                     	;# 
  5249  0311                     	;# 
  5250  0312                     	;# 
  5251  0313                     	;# 
  5252  0314                     	;# 
  5253  0314                     	;# 
  5254  0315                     	;# 
  5255  0316                     	;# 
  5256  0317                     	;# 
  5257  0318                     	;# 
  5258  0318                     	;# 
  5259  0319                     	;# 
  5260  031A                     	;# 
  5261  031B                     	;# 
  5262  031C                     	;# 
  5263  031C                     	;# 
  5264  031D                     	;# 
  5265  031E                     	;# 
  5266  031F                     	;# 
  5267  038C                     	;# 
  5268  038D                     	;# 
  5269  038E                     	;# 
  5270  0390                     	;# 
  5271  0391                     	;# 
  5272  0392                     	;# 
  5273  040C                     	;# 
  5274  040D                     	;# 
  5275  040E                     	;# 
  5276  040F                     	;# 
  5277  0410                     	;# 
  5278  0411                     	;# 
  5279  0416                     	;# 
  5280  0416                     	;# 
  5281  0417                     	;# 
  5282  0418                     	;# 
  5283  0418                     	;# 
  5284  0419                     	;# 
  5285  041A                     	;# 
  5286  041A                     	;# 
  5287  041B                     	;# 
  5288  041C                     	;# 
  5289  041C                     	;# 
  5290  041D                     	;# 
  5291  041E                     	;# 
  5292  041F                     	;# 
  5293  048C                     	;# 
  5294  048C                     	;# 
  5295  048D                     	;# 
  5296  048E                     	;# 
  5297  048F                     	;# 
  5298  048F                     	;# 
  5299  0490                     	;# 
  5300  0491                     	;# 
  5301  0492                     	;# 
  5302  0492                     	;# 
  5303  0493                     	;# 
  5304  0494                     	;# 
  5305  0495                     	;# 
  5306  0495                     	;# 
  5307  0496                     	;# 
  5308  0497                     	;# 
  5309  0498                     	;# 
  5310  0499                     	;# 
  5311  049A                     	;# 
  5312  049B                     	;# 
  5313  049C                     	;# 
  5314  049D                     	;# 
  5315  050C                     	;# 
  5316  050C                     	;# 
  5317  050D                     	;# 
  5318  050E                     	;# 
  5319  050F                     	;# 
  5320  050F                     	;# 
  5321  0510                     	;# 
  5322  0511                     	;# 
  5323  0512                     	;# 
  5324  0512                     	;# 
  5325  0513                     	;# 
  5326  0514                     	;# 
  5327  0515                     	;# 
  5328  0515                     	;# 
  5329  0516                     	;# 
  5330  0517                     	;# 
  5331  0518                     	;# 
  5332  0519                     	;# 
  5333  051A                     	;# 
  5334  051B                     	;# 
  5335  051C                     	;# 
  5336  051D                     	;# 
  5337  058C                     	;# 
  5338  058C                     	;# 
  5339  058D                     	;# 
  5340  058E                     	;# 
  5341  058F                     	;# 
  5342  058F                     	;# 
  5343  0590                     	;# 
  5344  0591                     	;# 
  5345  0592                     	;# 
  5346  0593                     	;# 
  5347  060C                     	;# 
  5348  060D                     	;# 
  5349  060E                     	;# 
  5350  060F                     	;# 
  5351  0610                     	;# 
  5352  0611                     	;# 
  5353  0612                     	;# 
  5354  0613                     	;# 
  5355  0614                     	;# 
  5356  0616                     	;# 
  5357  0617                     	;# 
  5358  0618                     	;# 
  5359  0619                     	;# 
  5360  061A                     	;# 
  5361  061B                     	;# 
  5362  061C                     	;# 
  5363  061D                     	;# 
  5364  061E                     	;# 
  5365  068C                     	;# 
  5366  068D                     	;# 
  5367  068E                     	;# 
  5368  068F                     	;# 
  5369  0690                     	;# 
  5370  0691                     	;# 
  5371  0692                     	;# 
  5372  0693                     	;# 
  5373  0694                     	;# 
  5374  070C                     	;# 
  5375  070D                     	;# 
  5376  070E                     	;# 
  5377  070F                     	;# 
  5378  0710                     	;# 
  5379  0711                     	;# 
  5380  0712                     	;# 
  5381  0713                     	;# 
  5382  0714                     	;# 
  5383  0716                     	;# 
  5384  0717                     	;# 
  5385  0718                     	;# 
  5386  0719                     	;# 
  5387  071A                     	;# 
  5388  071B                     	;# 
  5389  071C                     	;# 
  5390  071D                     	;# 
  5391  071E                     	;# 
  5392  0796                     	;# 
  5393  0797                     	;# 
  5394  0798                     	;# 
  5395  0799                     	;# 
  5396  079A                     	;# 
  5397  079B                     	;# 
  5398  080C                     	;# 
  5399  080D                     	;# 
  5400  080E                     	;# 
  5401  080F                     	;# 
  5402  0810                     	;# 
  5403  0811                     	;# 
  5404  0812                     	;# 
  5405  0813                     	;# 
  5406  0814                     	;# 
  5407  081A                     	;# 
  5408  081B                     	;# 
  5409  081C                     	;# 
  5410  081D                     	;# 
  5411  081E                     	;# 
  5412  081F                     	;# 
  5413  088C                     	;# 
  5414  088D                     	;# 
  5415  088E                     	;# 
  5416  088F                     	;# 
  5417  0890                     	;# 
  5418  0891                     	;# 
  5419  0892                     	;# 
  5420  0893                     	;# 
  5421  0895                     	;# 
  5422  0896                     	;# 
  5423  0897                     	;# 
  5424  0898                     	;# 
  5425  0899                     	;# 
  5426  089A                     	;# 
  5427  089B                     	;# 
  5428  090C                     	;# 
  5429  090E                     	;# 
  5430  090F                     	;# 
  5431  091F                     	;# 
  5432  098F                     	;# 
  5433  098F                     	;# 
  5434  0990                     	;# 
  5435  0991                     	;# 
  5436  0992                     	;# 
  5437  0993                     	;# 
  5438  0994                     	;# 
  5439  0995                     	;# 
  5440  0996                     	;# 
  5441  0997                     	;# 
  5442  1E0F                     	;# 
  5443  1E10                     	;# 
  5444  1E11                     	;# 
  5445  1E12                     	;# 
  5446  1E13                     	;# 
  5447  1E14                     	;# 
  5448  1E15                     	;# 
  5449  1E16                     	;# 
  5450  1E17                     	;# 
  5451  1E18                     	;# 
  5452  1E19                     	;# 
  5453  1E1A                     	;# 
  5454  1E1B                     	;# 
  5455  1E1C                     	;# 
  5456  1E1D                     	;# 
  5457  1E1E                     	;# 
  5458  1E1F                     	;# 
  5459  1E20                     	;# 
  5460  1E21                     	;# 
  5461  1E22                     	;# 
  5462  1E23                     	;# 
  5463  1E24                     	;# 
  5464  1E25                     	;# 
  5465  1E26                     	;# 
  5466  1E27                     	;# 
  5467  1E28                     	;# 
  5468  1E29                     	;# 
  5469  1E2A                     	;# 
  5470  1E2B                     	;# 
  5471  1E2C                     	;# 
  5472  1E2D                     	;# 
  5473  1E2E                     	;# 
  5474  1E2F                     	;# 
  5475  1E30                     	;# 
  5476  1E31                     	;# 
  5477  1E32                     	;# 
  5478  1E33                     	;# 
  5479  1E34                     	;# 
  5480  1E35                     	;# 
  5481  1E36                     	;# 
  5482  1E37                     	;# 
  5483  1E8F                     	;# 
  5484  1E90                     	;# 
  5485  1E91                     	;# 
  5486  1E92                     	;# 
  5487  1E93                     	;# 
  5488  1E94                     	;# 
  5489  1E95                     	;# 
  5490  1E96                     	;# 
  5491  1E97                     	;# 
  5492  1E9C                     	;# 
  5493  1E9D                     	;# 
  5494  1E9E                     	;# 
  5495  1EA1                     	;# 
  5496  1EA2                     	;# 
  5497  1EA3                     	;# 
  5498  1EA4                     	;# 
  5499  1EA5                     	;# 
  5500  1EA9                     	;# 
  5501  1EAA                     	;# 
  5502  1EAB                     	;# 
  5503  1EAC                     	;# 
  5504  1EB1                     	;# 
  5505  1EB2                     	;# 
  5506  1EB3                     	;# 
  5507  1EB8                     	;# 
  5508  1EB9                     	;# 
  5509  1EBA                     	;# 
  5510  1EBB                     	;# 
  5511  1EBC                     	;# 
  5512  1EBD                     	;# 
  5513  1EBE                     	;# 
  5514  1EC3                     	;# 
  5515  1EC5                     	;# 
  5516  1EC6                     	;# 
  5517  1EC7                     	;# 
  5518  1EC8                     	;# 
  5519  1EC9                     	;# 
  5520  1ECA                     	;# 
  5521  1ECB                     	;# 
  5522  1ECC                     	;# 
  5523  1F10                     	;# 
  5524  1F11                     	;# 
  5525  1F12                     	;# 
  5526  1F13                     	;# 
  5527  1F14                     	;# 
  5528  1F15                     	;# 
  5529  1F16                     	;# 
  5530  1F17                     	;# 
  5531  1F18                     	;# 
  5532  1F19                     	;# 
  5533  1F1A                     	;# 
  5534  1F1B                     	;# 
  5535  1F1C                     	;# 
  5536  1F1D                     	;# 
  5537  1F1E                     	;# 
  5538  1F1F                     	;# 
  5539  1F20                     	;# 
  5540  1F21                     	;# 
  5541  1F22                     	;# 
  5542  1F23                     	;# 
  5543  1F24                     	;# 
  5544  1F25                     	;# 
  5545  1F26                     	;# 
  5546  1F27                     	;# 
  5547  1F28                     	;# 
  5548  1F29                     	;# 
  5549  1F2A                     	;# 
  5550  1F2B                     	;# 
  5551  1F2C                     	;# 
  5552  1F2D                     	;# 
  5553  1F2E                     	;# 
  5554  1F2F                     	;# 
  5555  1F30                     	;# 
  5556  1F31                     	;# 
  5557  1F32                     	;# 
  5558  1F38                     	;# 
  5559  1F39                     	;# 
  5560  1F3A                     	;# 
  5561  1F3B                     	;# 
  5562  1F3C                     	;# 
  5563  1F3D                     	;# 
  5564  1F3E                     	;# 
  5565  1F3F                     	;# 
  5566  1F40                     	;# 
  5567  1F41                     	;# 
  5568  1F43                     	;# 
  5569  1F44                     	;# 
  5570  1F45                     	;# 
  5571  1F46                     	;# 
  5572  1F47                     	;# 
  5573  1F48                     	;# 
  5574  1F49                     	;# 
  5575  1F4A                     	;# 
  5576  1F4B                     	;# 
  5577  1F4C                     	;# 
  5578  1F4E                     	;# 
  5579  1F4F                     	;# 
  5580  1F50                     	;# 
  5581  1F51                     	;# 
  5582  1F52                     	;# 
  5583  1F53                     	;# 
  5584  1F54                     	;# 
  5585  1F55                     	;# 
  5586  1F56                     	;# 
  5587  1F57                     	;# 
  5588  1F59                     	;# 
  5589  1F5A                     	;# 
  5590  1F5B                     	;# 
  5591  1F5C                     	;# 
  5592  1F5D                     	;# 
  5593  1F61                     	;# 
  5594  1F62                     	;# 
  5595  1F64                     	;# 
  5596  1F65                     	;# 
  5597  1F66                     	;# 
  5598  1F67                     	;# 
  5599  1F68                     	;# 
  5600  1F69                     	;# 
  5601  1F6A                     	;# 
  5602  1F6B                     	;# 
  5603  1F6C                     	;# 
  5604  1F6D                     	;# 
  5605  1FE4                     	;# 
  5606  1FE5                     	;# 
  5607  1FE6                     	;# 
  5608  1FE7                     	;# 
  5609  1FE8                     	;# 
  5610  1FE9                     	;# 
  5611  1FEA                     	;# 
  5612  1FEB                     	;# 
  5613  1FED                     	;# 
  5614  1FEE                     	;# 
  5615  1FEF                     	;# 
  5616  0000                     	;# 
  5617  0001                     	;# 
  5618  0002                     	;# 
  5619  0003                     	;# 
  5620  0004                     	;# 
  5621  0005                     	;# 
  5622  0006                     	;# 
  5623  0007                     	;# 
  5624  0008                     	;# 
  5625  0009                     	;# 
  5626  000A                     	;# 
  5627  000B                     	;# 
  5628  000C                     	;# 
  5629  000D                     	;# 
  5630  000E                     	;# 
  5631  000F                     	;# 
  5632  0010                     	;# 
  5633  0011                     	;# 
  5634  0012                     	;# 
  5635  0013                     	;# 
  5636  0014                     	;# 
  5637  0015                     	;# 
  5638  0016                     	;# 
  5639  0017                     	;# 
  5640  0018                     	;# 
  5641  0019                     	;# 
  5642  001A                     	;# 
  5643  001C                     	;# 
  5644  001C                     	;# 
  5645  001D                     	;# 
  5646  001D                     	;# 
  5647  001E                     	;# 
  5648  001F                     	;# 
  5649  008C                     	;# 
  5650  008C                     	;# 
  5651  008D                     	;# 
  5652  008E                     	;# 
  5653  008E                     	;# 
  5654  008F                     	;# 
  5655  0090                     	;# 
  5656  0090                     	;# 
  5657  0091                     	;# 
  5658  0093                     	;# 
  5659  0094                     	;# 
  5660  0095                     	;# 
  5661  0096                     	;# 
  5662  0097                     	;# 
  5663  0098                     	;# 
  5664  0099                     	;# 
  5665  009A                     	;# 
  5666  009B                     	;# 
  5667  009C                     	;# 
  5668  009D                     	;# 
  5669  009E                     	;# 
  5670  010C                     	;# 
  5671  010D                     	;# 
  5672  010E                     	;# 
  5673  010E                     	;# 
  5674  010F                     	;# 
  5675  0110                     	;# 
  5676  0110                     	;# 
  5677  0111                     	;# 
  5678  0112                     	;# 
  5679  0112                     	;# 
  5680  0113                     	;# 
  5681  0114                     	;# 
  5682  0114                     	;# 
  5683  0115                     	;# 
  5684  0116                     	;# 
  5685  0116                     	;# 
  5686  0117                     	;# 
  5687  0119                     	;# 
  5688  0119                     	;# 
  5689  0119                     	;# 
  5690  011A                     	;# 
  5691  011A                     	;# 
  5692  011A                     	;# 
  5693  011B                     	;# 
  5694  011B                     	;# 
  5695  011B                     	;# 
  5696  011B                     	;# 
  5697  011B                     	;# 
  5698  011C                     	;# 
  5699  011C                     	;# 
  5700  011C                     	;# 
  5701  011D                     	;# 
  5702  011D                     	;# 
  5703  011D                     	;# 
  5704  011E                     	;# 
  5705  011E                     	;# 
  5706  011E                     	;# 
  5707  011F                     	;# 
  5708  011F                     	;# 
  5709  011F                     	;# 
  5710  011F                     	;# 
  5711  011F                     	;# 
  5712  018C                     	;# 
  5713  018D                     	;# 
  5714  018E                     	;# 
  5715  018F                     	;# 
  5716  0190                     	;# 
  5717  0191                     	;# 
  5718  0192                     	;# 
  5719  0196                     	;# 
  5720  0197                     	;# 
  5721  0198                     	;# 
  5722  0199                     	;# 
  5723  019A                     	;# 
  5724  019B                     	;# 
  5725  019C                     	;# 
  5726  020C                     	;# 
  5727  020C                     	;# 
  5728  020D                     	;# 
  5729  020E                     	;# 
  5730  020F                     	;# 
  5731  020F                     	;# 
  5732  0210                     	;# 
  5733  0210                     	;# 
  5734  0211                     	;# 
  5735  0211                     	;# 
  5736  0212                     	;# 
  5737  0212                     	;# 
  5738  0213                     	;# 
  5739  0214                     	;# 
  5740  0215                     	;# 
  5741  0215                     	;# 
  5742  0216                     	;# 
  5743  0216                     	;# 
  5744  0217                     	;# 
  5745  0217                     	;# 
  5746  0218                     	;# 
  5747  0218                     	;# 
  5748  0219                     	;# 
  5749  021A                     	;# 
  5750  021B                     	;# 
  5751  021B                     	;# 
  5752  021C                     	;# 
  5753  021C                     	;# 
  5754  021D                     	;# 
  5755  021D                     	;# 
  5756  021E                     	;# 
  5757  021F                     	;# 
  5758  028C                     	;# 
  5759  028C                     	;# 
  5760  028D                     	;# 
  5761  028D                     	;# 
  5762  028E                     	;# 
  5763  028F                     	;# 
  5764  0290                     	;# 
  5765  0290                     	;# 
  5766  0291                     	;# 
  5767  0292                     	;# 
  5768  0292                     	;# 
  5769  0293                     	;# 
  5770  0293                     	;# 
  5771  0294                     	;# 
  5772  0295                     	;# 
  5773  0296                     	;# 
  5774  0296                     	;# 
  5775  0297                     	;# 
  5776  0298                     	;# 
  5777  0298                     	;# 
  5778  0299                     	;# 
  5779  0299                     	;# 
  5780  029A                     	;# 
  5781  029B                     	;# 
  5782  029C                     	;# 
  5783  029C                     	;# 
  5784  029D                     	;# 
  5785  030C                     	;# 
  5786  030C                     	;# 
  5787  030D                     	;# 
  5788  030E                     	;# 
  5789  030F                     	;# 
  5790  0310                     	;# 
  5791  0310                     	;# 
  5792  0311                     	;# 
  5793  0312                     	;# 
  5794  0313                     	;# 
  5795  0314                     	;# 
  5796  0314                     	;# 
  5797  0315                     	;# 
  5798  0316                     	;# 
  5799  0317                     	;# 
  5800  0318                     	;# 
  5801  0318                     	;# 
  5802  0319                     	;# 
  5803  031A                     	;# 
  5804  031B                     	;# 
  5805  031C                     	;# 
  5806  031C                     	;# 
  5807  031D                     	;# 
  5808  031E                     	;# 
  5809  031F                     	;# 
  5810  038C                     	;# 
  5811  038D                     	;# 
  5812  038E                     	;# 
  5813  0390                     	;# 
  5814  0391                     	;# 
  5815  0392                     	;# 
  5816  040C                     	;# 
  5817  040D                     	;# 
  5818  040E                     	;# 
  5819  040F                     	;# 
  5820  0410                     	;# 
  5821  0411                     	;# 
  5822  0416                     	;# 
  5823  0416                     	;# 
  5824  0417                     	;# 
  5825  0418                     	;# 
  5826  0418                     	;# 
  5827  0419                     	;# 
  5828  041A                     	;# 
  5829  041A                     	;# 
  5830  041B                     	;# 
  5831  041C                     	;# 
  5832  041C                     	;# 
  5833  041D                     	;# 
  5834  041E                     	;# 
  5835  041F                     	;# 
  5836  048C                     	;# 
  5837  048C                     	;# 
  5838  048D                     	;# 
  5839  048E                     	;# 
  5840  048F                     	;# 
  5841  048F                     	;# 
  5842  0490                     	;# 
  5843  0491                     	;# 
  5844  0492                     	;# 
  5845  0492                     	;# 
  5846  0493                     	;# 
  5847  0494                     	;# 
  5848  0495                     	;# 
  5849  0495                     	;# 
  5850  0496                     	;# 
  5851  0497                     	;# 
  5852  0498                     	;# 
  5853  0499                     	;# 
  5854  049A                     	;# 
  5855  049B                     	;# 
  5856  049C                     	;# 
  5857  049D                     	;# 
  5858  050C                     	;# 
  5859  050C                     	;# 
  5860  050D                     	;# 
  5861  050E                     	;# 
  5862  050F                     	;# 
  5863  050F                     	;# 
  5864  0510                     	;# 
  5865  0511                     	;# 
  5866  0512                     	;# 
  5867  0512                     	;# 
  5868  0513                     	;# 
  5869  0514                     	;# 
  5870  0515                     	;# 
  5871  0515                     	;# 
  5872  0516                     	;# 
  5873  0517                     	;# 
  5874  0518                     	;# 
  5875  0519                     	;# 
  5876  051A                     	;# 
  5877  051B                     	;# 
  5878  051C                     	;# 
  5879  051D                     	;# 
  5880  058C                     	;# 
  5881  058C                     	;# 
  5882  058D                     	;# 
  5883  058E                     	;# 
  5884  058F                     	;# 
  5885  058F                     	;# 
  5886  0590                     	;# 
  5887  0591                     	;# 
  5888  0592                     	;# 
  5889  0593                     	;# 
  5890  060C                     	;# 
  5891  060D                     	;# 
  5892  060E                     	;# 
  5893  060F                     	;# 
  5894  0610                     	;# 
  5895  0611                     	;# 
  5896  0612                     	;# 
  5897  0613                     	;# 
  5898  0614                     	;# 
  5899  0616                     	;# 
  5900  0617                     	;# 
  5901  0618                     	;# 
  5902  0619                     	;# 
  5903  061A                     	;# 
  5904  061B                     	;# 
  5905  061C                     	;# 
  5906  061D                     	;# 
  5907  061E                     	;# 
  5908  068C                     	;# 
  5909  068D                     	;# 
  5910  068E                     	;# 
  5911  068F                     	;# 
  5912  0690                     	;# 
  5913  0691                     	;# 
  5914  0692                     	;# 
  5915  0693                     	;# 
  5916  0694                     	;# 
  5917  070C                     	;# 
  5918  070D                     	;# 
  5919  070E                     	;# 
  5920  070F                     	;# 
  5921  0710                     	;# 
  5922  0711                     	;# 
  5923  0712                     	;# 
  5924  0713                     	;# 
  5925  0714                     	;# 
  5926  0716                     	;# 
  5927  0717                     	;# 
  5928  0718                     	;# 
  5929  0719                     	;# 
  5930  071A                     	;# 
  5931  071B                     	;# 
  5932  071C                     	;# 
  5933  071D                     	;# 
  5934  071E                     	;# 
  5935  0796                     	;# 
  5936  0797                     	;# 
  5937  0798                     	;# 
  5938  0799                     	;# 
  5939  079A                     	;# 
  5940  079B                     	;# 
  5941  080C                     	;# 
  5942  080D                     	;# 
  5943  080E                     	;# 
  5944  080F                     	;# 
  5945  0810                     	;# 
  5946  0811                     	;# 
  5947  0812                     	;# 
  5948  0813                     	;# 
  5949  0814                     	;# 
  5950  081A                     	;# 
  5951  081B                     	;# 
  5952  081C                     	;# 
  5953  081D                     	;# 
  5954  081E                     	;# 
  5955  081F                     	;# 
  5956  088C                     	;# 
  5957  088D                     	;# 
  5958  088E                     	;# 
  5959  088F                     	;# 
  5960  0890                     	;# 
  5961  0891                     	;# 
  5962  0892                     	;# 
  5963  0893                     	;# 
  5964  0895                     	;# 
  5965  0896                     	;# 
  5966  0897                     	;# 
  5967  0898                     	;# 
  5968  0899                     	;# 
  5969  089A                     	;# 
  5970  089B                     	;# 
  5971  090C                     	;# 
  5972  090E                     	;# 
  5973  090F                     	;# 
  5974  091F                     	;# 
  5975  098F                     	;# 
  5976  098F                     	;# 
  5977  0990                     	;# 
  5978  0991                     	;# 
  5979  0992                     	;# 
  5980  0993                     	;# 
  5981  0994                     	;# 
  5982  0995                     	;# 
  5983  0996                     	;# 
  5984  0997                     	;# 
  5985  1E0F                     	;# 
  5986  1E10                     	;# 
  5987  1E11                     	;# 
  5988  1E12                     	;# 
  5989  1E13                     	;# 
  5990  1E14                     	;# 
  5991  1E15                     	;# 
  5992  1E16                     	;# 
  5993  1E17                     	;# 
  5994  1E18                     	;# 
  5995  1E19                     	;# 
  5996  1E1A                     	;# 
  5997  1E1B                     	;# 
  5998  1E1C                     	;# 
  5999  1E1D                     	;# 
  6000  1E1E                     	;# 
  6001  1E1F                     	;# 
  6002  1E20                     	;# 
  6003  1E21                     	;# 
  6004  1E22                     	;# 
  6005  1E23                     	;# 
  6006  1E24                     	;# 
  6007  1E25                     	;# 
  6008  1E26                     	;# 
  6009  1E27                     	;# 
  6010  1E28                     	;# 
  6011  1E29                     	;# 
  6012  1E2A                     	;# 
  6013  1E2B                     	;# 
  6014  1E2C                     	;# 
  6015  1E2D                     	;# 
  6016  1E2E                     	;# 
  6017  1E2F                     	;# 
  6018  1E30                     	;# 
  6019  1E31                     	;# 
  6020  1E32                     	;# 
  6021  1E33                     	;# 
  6022  1E34                     	;# 
  6023  1E35                     	;# 
  6024  1E36                     	;# 
  6025  1E37                     	;# 
  6026  1E8F                     	;# 
  6027  1E90                     	;# 
  6028  1E91                     	;# 
  6029  1E92                     	;# 
  6030  1E93                     	;# 
  6031  1E94                     	;# 
  6032  1E95                     	;# 
  6033  1E96                     	;# 
  6034  1E97                     	;# 
  6035  1E9C                     	;# 
  6036  1E9D                     	;# 
  6037  1E9E                     	;# 
  6038  1EA1                     	;# 
  6039  1EA2                     	;# 
  6040  1EA3                     	;# 
  6041  1EA4                     	;# 
  6042  1EA5                     	;# 
  6043  1EA9                     	;# 
  6044  1EAA                     	;# 
  6045  1EAB                     	;# 
  6046  1EAC                     	;# 
  6047  1EB1                     	;# 
  6048  1EB2                     	;# 
  6049  1EB3                     	;# 
  6050  1EB8                     	;# 
  6051  1EB9                     	;# 
  6052  1EBA                     	;# 
  6053  1EBB                     	;# 
  6054  1EBC                     	;# 
  6055  1EBD                     	;# 
  6056  1EBE                     	;# 
  6057  1EC3                     	;# 
  6058  1EC5                     	;# 
  6059  1EC6                     	;# 
  6060  1EC7                     	;# 
  6061  1EC8                     	;# 
  6062  1EC9                     	;# 
  6063  1ECA                     	;# 
  6064  1ECB                     	;# 
  6065  1ECC                     	;# 
  6066  1F10                     	;# 
  6067  1F11                     	;# 
  6068  1F12                     	;# 
  6069  1F13                     	;# 
  6070  1F14                     	;# 
  6071  1F15                     	;# 
  6072  1F16                     	;# 
  6073  1F17                     	;# 
  6074  1F18                     	;# 
  6075  1F19                     	;# 
  6076  1F1A                     	;# 
  6077  1F1B                     	;# 
  6078  1F1C                     	;# 
  6079  1F1D                     	;# 
  6080  1F1E                     	;# 
  6081  1F1F                     	;# 
  6082  1F20                     	;# 
  6083  1F21                     	;# 
  6084  1F22                     	;# 
  6085  1F23                     	;# 
  6086  1F24                     	;# 
  6087  1F25                     	;# 
  6088  1F26                     	;# 
  6089  1F27                     	;# 
  6090  1F28                     	;# 
  6091  1F29                     	;# 
  6092  1F2A                     	;# 
  6093  1F2B                     	;# 
  6094  1F2C                     	;# 
  6095  1F2D                     	;# 
  6096  1F2E                     	;# 
  6097  1F2F                     	;# 
  6098  1F30                     	;# 
  6099  1F31                     	;# 
  6100  1F32                     	;# 
  6101  1F38                     	;# 
  6102  1F39                     	;# 
  6103  1F3A                     	;# 
  6104  1F3B                     	;# 
  6105  1F3C                     	;# 
  6106  1F3D                     	;# 
  6107  1F3E                     	;# 
  6108  1F3F                     	;# 
  6109  1F40                     	;# 
  6110  1F41                     	;# 
  6111  1F43                     	;# 
  6112  1F44                     	;# 
  6113  1F45                     	;# 
  6114  1F46                     	;# 
  6115  1F47                     	;# 
  6116  1F48                     	;# 
  6117  1F49                     	;# 
  6118  1F4A                     	;# 
  6119  1F4B                     	;# 
  6120  1F4C                     	;# 
  6121  1F4E                     	;# 
  6122  1F4F                     	;# 
  6123  1F50                     	;# 
  6124  1F51                     	;# 
  6125  1F52                     	;# 
  6126  1F53                     	;# 
  6127  1F54                     	;# 
  6128  1F55                     	;# 
  6129  1F56                     	;# 
  6130  1F57                     	;# 
  6131  1F59                     	;# 
  6132  1F5A                     	;# 
  6133  1F5B                     	;# 
  6134  1F5C                     	;# 
  6135  1F5D                     	;# 
  6136  1F61                     	;# 
  6137  1F62                     	;# 
  6138  1F64                     	;# 
  6139  1F65                     	;# 
  6140  1F66                     	;# 
  6141  1F67                     	;# 
  6142  1F68                     	;# 
  6143  1F69                     	;# 
  6144  1F6A                     	;# 
  6145  1F6B                     	;# 
  6146  1F6C                     	;# 
  6147  1F6D                     	;# 
  6148  1FE4                     	;# 
  6149  1FE5                     	;# 
  6150  1FE6                     	;# 
  6151  1FE7                     	;# 
  6152  1FE8                     	;# 
  6153  1FE9                     	;# 
  6154  1FEA                     	;# 
  6155  1FEB                     	;# 
  6156  1FED                     	;# 
  6157  1FEE                     	;# 
  6158  1FEF                     	;# 
  6159  0000                     	;# 
  6160  0001                     	;# 
  6161  0002                     	;# 
  6162  0003                     	;# 
  6163  0004                     	;# 
  6164  0005                     	;# 
  6165  0006                     	;# 
  6166  0007                     	;# 
  6167  0008                     	;# 
  6168  0009                     	;# 
  6169  000A                     	;# 
  6170  000B                     	;# 
  6171  000C                     	;# 
  6172  000D                     	;# 
  6173  000E                     	;# 
  6174  000F                     	;# 
  6175  0010                     	;# 
  6176  0011                     	;# 
  6177  0012                     	;# 
  6178  0013                     	;# 
  6179  0014                     	;# 
  6180  0015                     	;# 
  6181  0016                     	;# 
  6182  0017                     	;# 
  6183  0018                     	;# 
  6184  0019                     	;# 
  6185  001A                     	;# 
  6186  001C                     	;# 
  6187  001C                     	;# 
  6188  001D                     	;# 
  6189  001D                     	;# 
  6190  001E                     	;# 
  6191  001F                     	;# 
  6192  008C                     	;# 
  6193  008C                     	;# 
  6194  008D                     	;# 
  6195  008E                     	;# 
  6196  008E                     	;# 
  6197  008F                     	;# 
  6198  0090                     	;# 
  6199  0090                     	;# 
  6200  0091                     	;# 
  6201  0093                     	;# 
  6202  0094                     	;# 
  6203  0095                     	;# 
  6204  0096                     	;# 
  6205  0097                     	;# 
  6206  0098                     	;# 
  6207  0099                     	;# 
  6208  009A                     	;# 
  6209  009B                     	;# 
  6210  009C                     	;# 
  6211  009D                     	;# 
  6212  009E                     	;# 
  6213  010C                     	;# 
  6214  010D                     	;# 
  6215  010E                     	;# 
  6216  010E                     	;# 
  6217  010F                     	;# 
  6218  0110                     	;# 
  6219  0110                     	;# 
  6220  0111                     	;# 
  6221  0112                     	;# 
  6222  0112                     	;# 
  6223  0113                     	;# 
  6224  0114                     	;# 
  6225  0114                     	;# 
  6226  0115                     	;# 
  6227  0116                     	;# 
  6228  0116                     	;# 
  6229  0117                     	;# 
  6230  0119                     	;# 
  6231  0119                     	;# 
  6232  0119                     	;# 
  6233  011A                     	;# 
  6234  011A                     	;# 
  6235  011A                     	;# 
  6236  011B                     	;# 
  6237  011B                     	;# 
  6238  011B                     	;# 
  6239  011B                     	;# 
  6240  011B                     	;# 
  6241  011C                     	;# 
  6242  011C                     	;# 
  6243  011C                     	;# 
  6244  011D                     	;# 
  6245  011D                     	;# 
  6246  011D                     	;# 
  6247  011E                     	;# 
  6248  011E                     	;# 
  6249  011E                     	;# 
  6250  011F                     	;# 
  6251  011F                     	;# 
  6252  011F                     	;# 
  6253  011F                     	;# 
  6254  011F                     	;# 
  6255  018C                     	;# 
  6256  018D                     	;# 
  6257  018E                     	;# 
  6258  018F                     	;# 
  6259  0190                     	;# 
  6260  0191                     	;# 
  6261  0192                     	;# 
  6262  0196                     	;# 
  6263  0197                     	;# 
  6264  0198                     	;# 
  6265  0199                     	;# 
  6266  019A                     	;# 
  6267  019B                     	;# 
  6268  019C                     	;# 
  6269  020C                     	;# 
  6270  020C                     	;# 
  6271  020D                     	;# 
  6272  020E                     	;# 
  6273  020F                     	;# 
  6274  020F                     	;# 
  6275  0210                     	;# 
  6276  0210                     	;# 
  6277  0211                     	;# 
  6278  0211                     	;# 
  6279  0212                     	;# 
  6280  0212                     	;# 
  6281  0213                     	;# 
  6282  0214                     	;# 
  6283  0215                     	;# 
  6284  0215                     	;# 
  6285  0216                     	;# 
  6286  0216                     	;# 
  6287  0217                     	;# 
  6288  0217                     	;# 
  6289  0218                     	;# 
  6290  0218                     	;# 
  6291  0219                     	;# 
  6292  021A                     	;# 
  6293  021B                     	;# 
  6294  021B                     	;# 
  6295  021C                     	;# 
  6296  021C                     	;# 
  6297  021D                     	;# 
  6298  021D                     	;# 
  6299  021E                     	;# 
  6300  021F                     	;# 
  6301  028C                     	;# 
  6302  028C                     	;# 
  6303  028D                     	;# 
  6304  028D                     	;# 
  6305  028E                     	;# 
  6306  028F                     	;# 
  6307  0290                     	;# 
  6308  0290                     	;# 
  6309  0291                     	;# 
  6310  0292                     	;# 
  6311  0292                     	;# 
  6312  0293                     	;# 
  6313  0293                     	;# 
  6314  0294                     	;# 
  6315  0295                     	;# 
  6316  0296                     	;# 
  6317  0296                     	;# 
  6318  0297                     	;# 
  6319  0298                     	;# 
  6320  0298                     	;# 
  6321  0299                     	;# 
  6322  0299                     	;# 
  6323  029A                     	;# 
  6324  029B                     	;# 
  6325  029C                     	;# 
  6326  029C                     	;# 
  6327  029D                     	;# 
  6328  030C                     	;# 
  6329  030C                     	;# 
  6330  030D                     	;# 
  6331  030E                     	;# 
  6332  030F                     	;# 
  6333  0310                     	;# 
  6334  0310                     	;# 
  6335  0311                     	;# 
  6336  0312                     	;# 
  6337  0313                     	;# 
  6338  0314                     	;# 
  6339  0314                     	;# 
  6340  0315                     	;# 
  6341  0316                     	;# 
  6342  0317                     	;# 
  6343  0318                     	;# 
  6344  0318                     	;# 
  6345  0319                     	;# 
  6346  031A                     	;# 
  6347  031B                     	;# 
  6348  031C                     	;# 
  6349  031C                     	;# 
  6350  031D                     	;# 
  6351  031E                     	;# 
  6352  031F                     	;# 
  6353  038C                     	;# 
  6354  038D                     	;# 
  6355  038E                     	;# 
  6356  0390                     	;# 
  6357  0391                     	;# 
  6358  0392                     	;# 
  6359  040C                     	;# 
  6360  040D                     	;# 
  6361  040E                     	;# 
  6362  040F                     	;# 
  6363  0410                     	;# 
  6364  0411                     	;# 
  6365  0416                     	;# 
  6366  0416                     	;# 
  6367  0417                     	;# 
  6368  0418                     	;# 
  6369  0418                     	;# 
  6370  0419                     	;# 
  6371  041A                     	;# 
  6372  041A                     	;# 
  6373  041B                     	;# 
  6374  041C                     	;# 
  6375  041C                     	;# 
  6376  041D                     	;# 
  6377  041E                     	;# 
  6378  041F                     	;# 
  6379  048C                     	;# 
  6380  048C                     	;# 
  6381  048D                     	;# 
  6382  048E                     	;# 
  6383  048F                     	;# 
  6384  048F                     	;# 
  6385  0490                     	;# 
  6386  0491                     	;# 
  6387  0492                     	;# 
  6388  0492                     	;# 
  6389  0493                     	;# 
  6390  0494                     	;# 
  6391  0495                     	;# 
  6392  0495                     	;# 
  6393  0496                     	;# 
  6394  0497                     	;# 
  6395  0498                     	;# 
  6396  0499                     	;# 
  6397  049A                     	;# 
  6398  049B                     	;# 
  6399  049C                     	;# 
  6400  049D                     	;# 
  6401  050C                     	;# 
  6402  050C                     	;# 
  6403  050D                     	;# 
  6404  050E                     	;# 
  6405  050F                     	;# 
  6406  050F                     	;# 
  6407  0510                     	;# 
  6408  0511                     	;# 
  6409  0512                     	;# 
  6410  0512                     	;# 
  6411  0513                     	;# 
  6412  0514                     	;# 
  6413  0515                     	;# 
  6414  0515                     	;# 
  6415  0516                     	;# 
  6416  0517                     	;# 
  6417  0518                     	;# 
  6418  0519                     	;# 
  6419  051A                     	;# 
  6420  051B                     	;# 
  6421  051C                     	;# 
  6422  051D                     	;# 
  6423  058C                     	;# 
  6424  058C                     	;# 
  6425  058D                     	;# 
  6426  058E                     	;# 
  6427  058F                     	;# 
  6428  058F                     	;# 
  6429  0590                     	;# 
  6430  0591                     	;# 
  6431  0592                     	;# 
  6432  0593                     	;# 
  6433  060C                     	;# 
  6434  060D                     	;# 
  6435  060E                     	;# 
  6436  060F                     	;# 
  6437  0610                     	;# 
  6438  0611                     	;# 
  6439  0612                     	;# 
  6440  0613                     	;# 
  6441  0614                     	;# 
  6442  0616                     	;# 
  6443  0617                     	;# 
  6444  0618                     	;# 
  6445  0619                     	;# 
  6446  061A                     	;# 
  6447  061B                     	;# 
  6448  061C                     	;# 
  6449  061D                     	;# 
  6450  061E                     	;# 
  6451  068C                     	;# 
  6452  068D                     	;# 
  6453  068E                     	;# 
  6454  068F                     	;# 
  6455  0690                     	;# 
  6456  0691                     	;# 
  6457  0692                     	;# 
  6458  0693                     	;# 
  6459  0694                     	;# 
  6460  070C                     	;# 
  6461  070D                     	;# 
  6462  070E                     	;# 
  6463  070F                     	;# 
  6464  0710                     	;# 
  6465  0711                     	;# 
  6466  0712                     	;# 
  6467  0713                     	;# 
  6468  0714                     	;# 
  6469  0716                     	;# 
  6470  0717                     	;# 
  6471  0718                     	;# 
  6472  0719                     	;# 
  6473  071A                     	;# 
  6474  071B                     	;# 
  6475  071C                     	;# 
  6476  071D                     	;# 
  6477  071E                     	;# 
  6478  0796                     	;# 
  6479  0797                     	;# 
  6480  0798                     	;# 
  6481  0799                     	;# 
  6482  079A                     	;# 
  6483  079B                     	;# 
  6484  080C                     	;# 
  6485  080D                     	;# 
  6486  080E                     	;# 
  6487  080F                     	;# 
  6488  0810                     	;# 
  6489  0811                     	;# 
  6490  0812                     	;# 
  6491  0813                     	;# 
  6492  0814                     	;# 
  6493  081A                     	;# 
  6494  081B                     	;# 
  6495  081C                     	;# 
  6496  081D                     	;# 
  6497  081E                     	;# 
  6498  081F                     	;# 
  6499  088C                     	;# 
  6500  088D                     	;# 
  6501  088E                     	;# 
  6502  088F                     	;# 
  6503  0890                     	;# 
  6504  0891                     	;# 
  6505  0892                     	;# 
  6506  0893                     	;# 
  6507  0895                     	;# 
  6508  0896                     	;# 
  6509  0897                     	;# 
  6510  0898                     	;# 
  6511  0899                     	;# 
  6512  089A                     	;# 
  6513  089B                     	;# 
  6514  090C                     	;# 
  6515  090E                     	;# 
  6516  090F                     	;# 
  6517  091F                     	;# 
  6518  098F                     	;# 
  6519  098F                     	;# 
  6520  0990                     	;# 
  6521  0991                     	;# 
  6522  0992                     	;# 
  6523  0993                     	;# 
  6524  0994                     	;# 
  6525  0995                     	;# 
  6526  0996                     	;# 
  6527  0997                     	;# 
  6528  1E0F                     	;# 
  6529  1E10                     	;# 
  6530  1E11                     	;# 
  6531  1E12                     	;# 
  6532  1E13                     	;# 
  6533  1E14                     	;# 
  6534  1E15                     	;# 
  6535  1E16                     	;# 
  6536  1E17                     	;# 
  6537  1E18                     	;# 
  6538  1E19                     	;# 
  6539  1E1A                     	;# 
  6540  1E1B                     	;# 
  6541  1E1C                     	;# 
  6542  1E1D                     	;# 
  6543  1E1E                     	;# 
  6544  1E1F                     	;# 
  6545  1E20                     	;# 
  6546  1E21                     	;# 
  6547  1E22                     	;# 
  6548  1E23                     	;# 
  6549  1E24                     	;# 
  6550  1E25                     	;# 
  6551  1E26                     	;# 
  6552  1E27                     	;# 
  6553  1E28                     	;# 
  6554  1E29                     	;# 
  6555  1E2A                     	;# 
  6556  1E2B                     	;# 
  6557  1E2C                     	;# 
  6558  1E2D                     	;# 
  6559  1E2E                     	;# 
  6560  1E2F                     	;# 
  6561  1E30                     	;# 
  6562  1E31                     	;# 
  6563  1E32                     	;# 
  6564  1E33                     	;# 
  6565  1E34                     	;# 
  6566  1E35                     	;# 
  6567  1E36                     	;# 
  6568  1E37                     	;# 
  6569  1E8F                     	;# 
  6570  1E90                     	;# 
  6571  1E91                     	;# 
  6572  1E92                     	;# 
  6573  1E93                     	;# 
  6574  1E94                     	;# 
  6575  1E95                     	;# 
  6576  1E96                     	;# 
  6577  1E97                     	;# 
  6578  1E9C                     	;# 
  6579  1E9D                     	;# 
  6580  1E9E                     	;# 
  6581  1EA1                     	;# 
  6582  1EA2                     	;# 
  6583  1EA3                     	;# 
  6584  1EA4                     	;# 
  6585  1EA5                     	;# 
  6586  1EA9                     	;# 
  6587  1EAA                     	;# 
  6588  1EAB                     	;# 
  6589  1EAC                     	;# 
  6590  1EB1                     	;# 
  6591  1EB2                     	;# 
  6592  1EB3                     	;# 
  6593  1EB8                     	;# 
  6594  1EB9                     	;# 
  6595  1EBA                     	;# 
  6596  1EBB                     	;# 
  6597  1EBC                     	;# 
  6598  1EBD                     	;# 
  6599  1EBE                     	;# 
  6600  1EC3                     	;# 
  6601  1EC5                     	;# 
  6602  1EC6                     	;# 
  6603  1EC7                     	;# 
  6604  1EC8                     	;# 
  6605  1EC9                     	;# 
  6606  1ECA                     	;# 
  6607  1ECB                     	;# 
  6608  1ECC                     	;# 
  6609  1F10                     	;# 
  6610  1F11                     	;# 
  6611  1F12                     	;# 
  6612  1F13                     	;# 
  6613  1F14                     	;# 
  6614  1F15                     	;# 
  6615  1F16                     	;# 
  6616  1F17                     	;# 
  6617  1F18                     	;# 
  6618  1F19                     	;# 
  6619  1F1A                     	;# 
  6620  1F1B                     	;# 
  6621  1F1C                     	;# 
  6622  1F1D                     	;# 
  6623  1F1E                     	;# 
  6624  1F1F                     	;# 
  6625  1F20                     	;# 
  6626  1F21                     	;# 
  6627  1F22                     	;# 
  6628  1F23                     	;# 
  6629  1F24                     	;# 
  6630  1F25                     	;# 
  6631  1F26                     	;# 
  6632  1F27                     	;# 
  6633  1F28                     	;# 
  6634  1F29                     	;# 
  6635  1F2A                     	;# 
  6636  1F2B                     	;# 
  6637  1F2C                     	;# 
  6638  1F2D                     	;# 
  6639  1F2E                     	;# 
  6640  1F2F                     	;# 
  6641  1F30                     	;# 
  6642  1F31                     	;# 
  6643  1F32                     	;# 
  6644  1F38                     	;# 
  6645  1F39                     	;# 
  6646  1F3A                     	;# 
  6647  1F3B                     	;# 
  6648  1F3C                     	;# 
  6649  1F3D                     	;# 
  6650  1F3E                     	;# 
  6651  1F3F                     	;# 
  6652  1F40                     	;# 
  6653  1F41                     	;# 
  6654  1F43                     	;# 
  6655  1F44                     	;# 
  6656  1F45                     	;# 
  6657  1F46                     	;# 
  6658  1F47                     	;# 
  6659  1F48                     	;# 
  6660  1F49                     	;# 
  6661  1F4A                     	;# 
  6662  1F4B                     	;# 
  6663  1F4C                     	;# 
  6664  1F4E                     	;# 
  6665  1F4F                     	;# 
  6666  1F50                     	;# 
  6667  1F51                     	;# 
  6668  1F52                     	;# 
  6669  1F53                     	;# 
  6670  1F54                     	;# 
  6671  1F55                     	;# 
  6672  1F56                     	;# 
  6673  1F57                     	;# 
  6674  1F59                     	;# 
  6675  1F5A                     	;# 
  6676  1F5B                     	;# 
  6677  1F5C                     	;# 
  6678  1F5D                     	;# 
  6679  1F61                     	;# 
  6680  1F62                     	;# 
  6681  1F64                     	;# 
  6682  1F65                     	;# 
  6683  1F66                     	;# 
  6684  1F67                     	;# 
  6685  1F68                     	;# 
  6686  1F69                     	;# 
  6687  1F6A                     	;# 
  6688  1F6B                     	;# 
  6689  1F6C                     	;# 
  6690  1F6D                     	;# 
  6691  1FE4                     	;# 
  6692  1FE5                     	;# 
  6693  1FE6                     	;# 
  6694  1FE7                     	;# 
  6695  1FE8                     	;# 
  6696  1FE9                     	;# 
  6697  1FEA                     	;# 
  6698  1FEB                     	;# 
  6699  1FED                     	;# 
  6700  1FEE                     	;# 
  6701  1FEF                     	;# 
  6702  0000                     	;# 
  6703  0001                     	;# 
  6704  0002                     	;# 
  6705  0003                     	;# 
  6706  0004                     	;# 
  6707  0005                     	;# 
  6708  0006                     	;# 
  6709  0007                     	;# 
  6710  0008                     	;# 
  6711  0009                     	;# 
  6712  000A                     	;# 
  6713  000B                     	;# 
  6714  000C                     	;# 
  6715  000D                     	;# 
  6716  000E                     	;# 
  6717  000F                     	;# 
  6718  0010                     	;# 
  6719  0011                     	;# 
  6720  0012                     	;# 
  6721  0013                     	;# 
  6722  0014                     	;# 
  6723  0015                     	;# 
  6724  0016                     	;# 
  6725  0017                     	;# 
  6726  0018                     	;# 
  6727  0019                     	;# 
  6728  001A                     	;# 
  6729  001C                     	;# 
  6730  001C                     	;# 
  6731  001D                     	;# 
  6732  001D                     	;# 
  6733  001E                     	;# 
  6734  001F                     	;# 
  6735  008C                     	;# 
  6736  008C                     	;# 
  6737  008D                     	;# 
  6738  008E                     	;# 
  6739  008E                     	;# 
  6740  008F                     	;# 
  6741  0090                     	;# 
  6742  0090                     	;# 
  6743  0091                     	;# 
  6744  0093                     	;# 
  6745  0094                     	;# 
  6746  0095                     	;# 
  6747  0096                     	;# 
  6748  0097                     	;# 
  6749  0098                     	;# 
  6750  0099                     	;# 
  6751  009A                     	;# 
  6752  009B                     	;# 
  6753  009C                     	;# 
  6754  009D                     	;# 
  6755  009E                     	;# 
  6756  010C                     	;# 
  6757  010D                     	;# 
  6758  010E                     	;# 
  6759  010E                     	;# 
  6760  010F                     	;# 
  6761  0110                     	;# 
  6762  0110                     	;# 
  6763  0111                     	;# 
  6764  0112                     	;# 
  6765  0112                     	;# 
  6766  0113                     	;# 
  6767  0114                     	;# 
  6768  0114                     	;# 
  6769  0115                     	;# 
  6770  0116                     	;# 
  6771  0116                     	;# 
  6772  0117                     	;# 
  6773  0119                     	;# 
  6774  0119                     	;# 
  6775  0119                     	;# 
  6776  011A                     	;# 
  6777  011A                     	;# 
  6778  011A                     	;# 
  6779  011B                     	;# 
  6780  011B                     	;# 
  6781  011B                     	;# 
  6782  011B                     	;# 
  6783  011B                     	;# 
  6784  011C                     	;# 
  6785  011C                     	;# 
  6786  011C                     	;# 
  6787  011D                     	;# 
  6788  011D                     	;# 
  6789  011D                     	;# 
  6790  011E                     	;# 
  6791  011E                     	;# 
  6792  011E                     	;# 
  6793  011F                     	;# 
  6794  011F                     	;# 
  6795  011F                     	;# 
  6796  011F                     	;# 
  6797  011F                     	;# 
  6798  018C                     	;# 
  6799  018D                     	;# 
  6800  018E                     	;# 
  6801  018F                     	;# 
  6802  0190                     	;# 
  6803  0191                     	;# 
  6804  0192                     	;# 
  6805  0196                     	;# 
  6806  0197                     	;# 
  6807  0198                     	;# 
  6808  0199                     	;# 
  6809  019A                     	;# 
  6810  019B                     	;# 
  6811  019C                     	;# 
  6812  020C                     	;# 
  6813  020C                     	;# 
  6814  020D                     	;# 
  6815  020E                     	;# 
  6816  020F                     	;# 
  6817  020F                     	;# 
  6818  0210                     	;# 
  6819  0210                     	;# 
  6820  0211                     	;# 
  6821  0211                     	;# 
  6822  0212                     	;# 
  6823  0212                     	;# 
  6824  0213                     	;# 
  6825  0214                     	;# 
  6826  0215                     	;# 
  6827  0215                     	;# 
  6828  0216                     	;# 
  6829  0216                     	;# 
  6830  0217                     	;# 
  6831  0217                     	;# 
  6832  0218                     	;# 
  6833  0218                     	;# 
  6834  0219                     	;# 
  6835  021A                     	;# 
  6836  021B                     	;# 
  6837  021B                     	;# 
  6838  021C                     	;# 
  6839  021C                     	;# 
  6840  021D                     	;# 
  6841  021D                     	;# 
  6842  021E                     	;# 
  6843  021F                     	;# 
  6844  028C                     	;# 
  6845  028C                     	;# 
  6846  028D                     	;# 
  6847  028D                     	;# 
  6848  028E                     	;# 
  6849  028F                     	;# 
  6850  0290                     	;# 
  6851  0290                     	;# 
  6852  0291                     	;# 
  6853  0292                     	;# 
  6854  0292                     	;# 
  6855  0293                     	;# 
  6856  0293                     	;# 
  6857  0294                     	;# 
  6858  0295                     	;# 
  6859  0296                     	;# 
  6860  0296                     	;# 
  6861  0297                     	;# 
  6862  0298                     	;# 
  6863  0298                     	;# 
  6864  0299                     	;# 
  6865  0299                     	;# 
  6866  029A                     	;# 
  6867  029B                     	;# 
  6868  029C                     	;# 
  6869  029C                     	;# 
  6870  029D                     	;# 
  6871  030C                     	;# 
  6872  030C                     	;# 
  6873  030D                     	;# 
  6874  030E                     	;# 
  6875  030F                     	;# 
  6876  0310                     	;# 
  6877  0310                     	;# 
  6878  0311                     	;# 
  6879  0312                     	;# 
  6880  0313                     	;# 
  6881  0314                     	;# 
  6882  0314                     	;# 
  6883  0315                     	;# 
  6884  0316                     	;# 
  6885  0317                     	;# 
  6886  0318                     	;# 
  6887  0318                     	;# 
  6888  0319                     	;# 
  6889  031A                     	;# 
  6890  031B                     	;# 
  6891  031C                     	;# 
  6892  031C                     	;# 
  6893  031D                     	;# 
  6894  031E                     	;# 
  6895  031F                     	;# 
  6896  038C                     	;# 
  6897  038D                     	;# 
  6898  038E                     	;# 
  6899  0390                     	;# 
  6900  0391                     	;# 
  6901  0392                     	;# 
  6902  040C                     	;# 
  6903  040D                     	;# 
  6904  040E                     	;# 
  6905  040F                     	;# 
  6906  0410                     	;# 
  6907  0411                     	;# 
  6908  0416                     	;# 
  6909  0416                     	;# 
  6910  0417                     	;# 
  6911  0418                     	;# 
  6912  0418                     	;# 
  6913  0419                     	;# 
  6914  041A                     	;# 
  6915  041A                     	;# 
  6916  041B                     	;# 
  6917  041C                     	;# 
  6918  041C                     	;# 
  6919  041D                     	;# 
  6920  041E                     	;# 
  6921  041F                     	;# 
  6922  048C                     	;# 
  6923  048C                     	;# 
  6924  048D                     	;# 
  6925  048E                     	;# 
  6926  048F                     	;# 
  6927  048F                     	;# 
  6928  0490                     	;# 
  6929  0491                     	;# 
  6930  0492                     	;# 
  6931  0492                     	;# 
  6932  0493                     	;# 
  6933  0494                     	;# 
  6934  0495                     	;# 
  6935  0495                     	;# 
  6936  0496                     	;# 
  6937  0497                     	;# 
  6938  0498                     	;# 
  6939  0499                     	;# 
  6940  049A                     	;# 
  6941  049B                     	;# 
  6942  049C                     	;# 
  6943  049D                     	;# 
  6944  050C                     	;# 
  6945  050C                     	;# 
  6946  050D                     	;# 
  6947  050E                     	;# 
  6948  050F                     	;# 
  6949  050F                     	;# 
  6950  0510                     	;# 
  6951  0511                     	;# 
  6952  0512                     	;# 
  6953  0512                     	;# 
  6954  0513                     	;# 
  6955  0514                     	;# 
  6956  0515                     	;# 
  6957  0515                     	;# 
  6958  0516                     	;# 
  6959  0517                     	;# 
  6960  0518                     	;# 
  6961  0519                     	;# 
  6962  051A                     	;# 
  6963  051B                     	;# 
  6964  051C                     	;# 
  6965  051D                     	;# 
  6966  058C                     	;# 
  6967  058C                     	;# 
  6968  058D                     	;# 
  6969  058E                     	;# 
  6970  058F                     	;# 
  6971  058F                     	;# 
  6972  0590                     	;# 
  6973  0591                     	;# 
  6974  0592                     	;# 
  6975  0593                     	;# 
  6976  060C                     	;# 
  6977  060D                     	;# 
  6978  060E                     	;# 
  6979  060F                     	;# 
  6980  0610                     	;# 
  6981  0611                     	;# 
  6982  0612                     	;# 
  6983  0613                     	;# 
  6984  0614                     	;# 
  6985  0616                     	;# 
  6986  0617                     	;# 
  6987  0618                     	;# 
  6988  0619                     	;# 
  6989  061A                     	;# 
  6990  061B                     	;# 
  6991  061C                     	;# 
  6992  061D                     	;# 
  6993  061E                     	;# 
  6994  068C                     	;# 
  6995  068D                     	;# 
  6996  068E                     	;# 
  6997  068F                     	;# 
  6998  0690                     	;# 
  6999  0691                     	;# 
  7000  0692                     	;# 
  7001  0693                     	;# 
  7002  0694                     	;# 
  7003  070C                     	;# 
  7004  070D                     	;# 
  7005  070E                     	;# 
  7006  070F                     	;# 
  7007  0710                     	;# 
  7008  0711                     	;# 
  7009  0712                     	;# 
  7010  0713                     	;# 
  7011  0714                     	;# 
  7012  0716                     	;# 
  7013  0717                     	;# 
  7014  0718                     	;# 
  7015  0719                     	;# 
  7016  071A                     	;# 
  7017  071B                     	;# 
  7018  071C                     	;# 
  7019  071D                     	;# 
  7020  071E                     	;# 
  7021  0796                     	;# 
  7022  0797                     	;# 
  7023  0798                     	;# 
  7024  0799                     	;# 
  7025  079A                     	;# 
  7026  079B                     	;# 
  7027  080C                     	;# 
  7028  080D                     	;# 
  7029  080E                     	;# 
  7030  080F                     	;# 
  7031  0810                     	;# 
  7032  0811                     	;# 
  7033  0812                     	;# 
  7034  0813                     	;# 
  7035  0814                     	;# 
  7036  081A                     	;# 
  7037  081B                     	;# 
  7038  081C                     	;# 
  7039  081D                     	;# 
  7040  081E                     	;# 
  7041  081F                     	;# 
  7042  088C                     	;# 
  7043  088D                     	;# 
  7044  088E                     	;# 
  7045  088F                     	;# 
  7046  0890                     	;# 
  7047  0891                     	;# 
  7048  0892                     	;# 
  7049  0893                     	;# 
  7050  0895                     	;# 
  7051  0896                     	;# 
  7052  0897                     	;# 
  7053  0898                     	;# 
  7054  0899                     	;# 
  7055  089A                     	;# 
  7056  089B                     	;# 
  7057  090C                     	;# 
  7058  090E                     	;# 
  7059  090F                     	;# 
  7060  091F                     	;# 
  7061  098F                     	;# 
  7062  098F                     	;# 
  7063  0990                     	;# 
  7064  0991                     	;# 
  7065  0992                     	;# 
  7066  0993                     	;# 
  7067  0994                     	;# 
  7068  0995                     	;# 
  7069  0996                     	;# 
  7070  0997                     	;# 
  7071  1E0F                     	;# 
  7072  1E10                     	;# 
  7073  1E11                     	;# 
  7074  1E12                     	;# 
  7075  1E13                     	;# 
  7076  1E14                     	;# 
  7077  1E15                     	;# 
  7078  1E16                     	;# 
  7079  1E17                     	;# 
  7080  1E18                     	;# 
  7081  1E19                     	;# 
  7082  1E1A                     	;# 
  7083  1E1B                     	;# 
  7084  1E1C                     	;# 
  7085  1E1D                     	;# 
  7086  1E1E                     	;# 
  7087  1E1F                     	;# 
  7088  1E20                     	;# 
  7089  1E21                     	;# 
  7090  1E22                     	;# 
  7091  1E23                     	;# 
  7092  1E24                     	;# 
  7093  1E25                     	;# 
  7094  1E26                     	;# 
  7095  1E27                     	;# 
  7096  1E28                     	;# 
  7097  1E29                     	;# 
  7098  1E2A                     	;# 
  7099  1E2B                     	;# 
  7100  1E2C                     	;# 
  7101  1E2D                     	;# 
  7102  1E2E                     	;# 
  7103  1E2F                     	;# 
  7104  1E30                     	;# 
  7105  1E31                     	;# 
  7106  1E32                     	;# 
  7107  1E33                     	;# 
  7108  1E34                     	;# 
  7109  1E35                     	;# 
  7110  1E36                     	;# 
  7111  1E37                     	;# 
  7112  1E8F                     	;# 
  7113  1E90                     	;# 
  7114  1E91                     	;# 
  7115  1E92                     	;# 
  7116  1E93                     	;# 
  7117  1E94                     	;# 
  7118  1E95                     	;# 
  7119  1E96                     	;# 
  7120  1E97                     	;# 
  7121  1E9C                     	;# 
  7122  1E9D                     	;# 
  7123  1E9E                     	;# 
  7124  1EA1                     	;# 
  7125  1EA2                     	;# 
  7126  1EA3                     	;# 
  7127  1EA4                     	;# 
  7128  1EA5                     	;# 
  7129  1EA9                     	;# 
  7130  1EAA                     	;# 
  7131  1EAB                     	;# 
  7132  1EAC                     	;# 
  7133  1EB1                     	;# 
  7134  1EB2                     	;# 
  7135  1EB3                     	;# 
  7136  1EB8                     	;# 
  7137  1EB9                     	;# 
  7138  1EBA                     	;# 
  7139  1EBB                     	;# 
  7140  1EBC                     	;# 
  7141  1EBD                     	;# 
  7142  1EBE                     	;# 
  7143  1EC3                     	;# 
  7144  1EC5                     	;# 
  7145  1EC6                     	;# 
  7146  1EC7                     	;# 
  7147  1EC8                     	;# 
  7148  1EC9                     	;# 
  7149  1ECA                     	;# 
  7150  1ECB                     	;# 
  7151  1ECC                     	;# 
  7152  1F10                     	;# 
  7153  1F11                     	;# 
  7154  1F12                     	;# 
  7155  1F13                     	;# 
  7156  1F14                     	;# 
  7157  1F15                     	;# 
  7158  1F16                     	;# 
  7159  1F17                     	;# 
  7160  1F18                     	;# 
  7161  1F19                     	;# 
  7162  1F1A                     	;# 
  7163  1F1B                     	;# 
  7164  1F1C                     	;# 
  7165  1F1D                     	;# 
  7166  1F1E                     	;# 
  7167  1F1F                     	;# 
  7168  1F20                     	;# 
  7169  1F21                     	;# 
  7170  1F22                     	;# 
  7171  1F23                     	;# 
  7172  1F24                     	;# 
  7173  1F25                     	;# 
  7174  1F26                     	;# 
  7175  1F27                     	;# 
  7176  1F28                     	;# 
  7177  1F29                     	;# 
  7178  1F2A                     	;# 
  7179  1F2B                     	;# 
  7180  1F2C                     	;# 
  7181  1F2D                     	;# 
  7182  1F2E                     	;# 
  7183  1F2F                     	;# 
  7184  1F30                     	;# 
  7185  1F31                     	;# 
  7186  1F32                     	;# 
  7187  1F38                     	;# 
  7188  1F39                     	;# 
  7189  1F3A                     	;# 
  7190  1F3B                     	;# 
  7191  1F3C                     	;# 
  7192  1F3D                     	;# 
  7193  1F3E                     	;# 
  7194  1F3F                     	;# 
  7195  1F40                     	;# 
  7196  1F41                     	;# 
  7197  1F43                     	;# 
  7198  1F44                     	;# 
  7199  1F45                     	;# 
  7200  1F46                     	;# 
  7201  1F47                     	;# 
  7202  1F48                     	;# 
  7203  1F49                     	;# 
  7204  1F4A                     	;# 
  7205  1F4B                     	;# 
  7206  1F4C                     	;# 
  7207  1F4E                     	;# 
  7208  1F4F                     	;# 
  7209  1F50                     	;# 
  7210  1F51                     	;# 
  7211  1F52                     	;# 
  7212  1F53                     	;# 
  7213  1F54                     	;# 
  7214  1F55                     	;# 
  7215  1F56                     	;# 
  7216  1F57                     	;# 
  7217  1F59                     	;# 
  7218  1F5A                     	;# 
  7219  1F5B                     	;# 
  7220  1F5C                     	;# 
  7221  1F5D                     	;# 
  7222  1F61                     	;# 
  7223  1F62                     	;# 
  7224  1F64                     	;# 
  7225  1F65                     	;# 
  7226  1F66                     	;# 
  7227  1F67                     	;# 
  7228  1F68                     	;# 
  7229  1F69                     	;# 
  7230  1F6A                     	;# 
  7231  1F6B                     	;# 
  7232  1F6C                     	;# 
  7233  1F6D                     	;# 
  7234  1FE4                     	;# 
  7235  1FE5                     	;# 
  7236  1FE6                     	;# 
  7237  1FE7                     	;# 
  7238  1FE8                     	;# 
  7239  1FE9                     	;# 
  7240  1FEA                     	;# 
  7241  1FEB                     	;# 
  7242  1FED                     	;# 
  7243  1FEE                     	;# 
  7244  1FEF                     	;# 
  7245  0000                     	;# 
  7246  0001                     	;# 
  7247  0002                     	;# 
  7248  0003                     	;# 
  7249  0004                     	;# 
  7250  0005                     	;# 
  7251  0006                     	;# 
  7252  0007                     	;# 
  7253  0008                     	;# 
  7254  0009                     	;# 
  7255  000A                     	;# 
  7256  000B                     	;# 
  7257  000C                     	;# 
  7258  000D                     	;# 
  7259  000E                     	;# 
  7260  000F                     	;# 
  7261  0010                     	;# 
  7262  0011                     	;# 
  7263  0012                     	;# 
  7264  0013                     	;# 
  7265  0014                     	;# 
  7266  0015                     	;# 
  7267  0016                     	;# 
  7268  0017                     	;# 
  7269  0018                     	;# 
  7270  0019                     	;# 
  7271  001A                     	;# 
  7272  001C                     	;# 
  7273  001C                     	;# 
  7274  001D                     	;# 
  7275  001D                     	;# 
  7276  001E                     	;# 
  7277  001F                     	;# 
  7278  008C                     	;# 
  7279  008C                     	;# 
  7280  008D                     	;# 
  7281  008E                     	;# 
  7282  008E                     	;# 
  7283  008F                     	;# 
  7284  0090                     	;# 
  7285  0090                     	;# 
  7286  0091                     	;# 
  7287  0093                     	;# 
  7288  0094                     	;# 
  7289  0095                     	;# 
  7290  0096                     	;# 
  7291  0097                     	;# 
  7292  0098                     	;# 
  7293  0099                     	;# 
  7294  009A                     	;# 
  7295  009B                     	;# 
  7296  009C                     	;# 
  7297  009D                     	;# 
  7298  009E                     	;# 
  7299  010C                     	;# 
  7300  010D                     	;# 
  7301  010E                     	;# 
  7302  010E                     	;# 
  7303  010F                     	;# 
  7304  0110                     	;# 
  7305  0110                     	;# 
  7306  0111                     	;# 
  7307  0112                     	;# 
  7308  0112                     	;# 
  7309  0113                     	;# 
  7310  0114                     	;# 
  7311  0114                     	;# 
  7312  0115                     	;# 
  7313  0116                     	;# 
  7314  0116                     	;# 
  7315  0117                     	;# 
  7316  0119                     	;# 
  7317  0119                     	;# 
  7318  0119                     	;# 
  7319  011A                     	;# 
  7320  011A                     	;# 
  7321  011A                     	;# 
  7322  011B                     	;# 
  7323  011B                     	;# 
  7324  011B                     	;# 
  7325  011B                     	;# 
  7326  011B                     	;# 
  7327  011C                     	;# 
  7328  011C                     	;# 
  7329  011C                     	;# 
  7330  011D                     	;# 
  7331  011D                     	;# 
  7332  011D                     	;# 
  7333  011E                     	;# 
  7334  011E                     	;# 
  7335  011E                     	;# 
  7336  011F                     	;# 
  7337  011F                     	;# 
  7338  011F                     	;# 
  7339  011F                     	;# 
  7340  011F                     	;# 
  7341  018C                     	;# 
  7342  018D                     	;# 
  7343  018E                     	;# 
  7344  018F                     	;# 
  7345  0190                     	;# 
  7346  0191                     	;# 
  7347  0192                     	;# 
  7348  0196                     	;# 
  7349  0197                     	;# 
  7350  0198                     	;# 
  7351  0199                     	;# 
  7352  019A                     	;# 
  7353  019B                     	;# 
  7354  019C                     	;# 
  7355  020C                     	;# 
  7356  020C                     	;# 
  7357  020D                     	;# 
  7358  020E                     	;# 
  7359  020F                     	;# 
  7360  020F                     	;# 
  7361  0210                     	;# 
  7362  0210                     	;# 
  7363  0211                     	;# 
  7364  0211                     	;# 
  7365  0212                     	;# 
  7366  0212                     	;# 
  7367  0213                     	;# 
  7368  0214                     	;# 
  7369  0215                     	;# 
  7370  0215                     	;# 
  7371  0216                     	;# 
  7372  0216                     	;# 
  7373  0217                     	;# 
  7374  0217                     	;# 
  7375  0218                     	;# 
  7376  0218                     	;# 
  7377  0219                     	;# 
  7378  021A                     	;# 
  7379  021B                     	;# 
  7380  021B                     	;# 
  7381  021C                     	;# 
  7382  021C                     	;# 
  7383  021D                     	;# 
  7384  021D                     	;# 
  7385  021E                     	;# 
  7386  021F                     	;# 
  7387  028C                     	;# 
  7388  028C                     	;# 
  7389  028D                     	;# 
  7390  028D                     	;# 
  7391  028E                     	;# 
  7392  028F                     	;# 
  7393  0290                     	;# 
  7394  0290                     	;# 
  7395  0291                     	;# 
  7396  0292                     	;# 
  7397  0292                     	;# 
  7398  0293                     	;# 
  7399  0293                     	;# 
  7400  0294                     	;# 
  7401  0295                     	;# 
  7402  0296                     	;# 
  7403  0296                     	;# 
  7404  0297                     	;# 
  7405  0298                     	;# 
  7406  0298                     	;# 
  7407  0299                     	;# 
  7408  0299                     	;# 
  7409  029A                     	;# 
  7410  029B                     	;# 
  7411  029C                     	;# 
  7412  029C                     	;# 
  7413  029D                     	;# 
  7414  030C                     	;# 
  7415  030C                     	;# 
  7416  030D                     	;# 
  7417  030E                     	;# 
  7418  030F                     	;# 
  7419  0310                     	;# 
  7420  0310                     	;# 
  7421  0311                     	;# 
  7422  0312                     	;# 
  7423  0313                     	;# 
  7424  0314                     	;# 
  7425  0314                     	;# 
  7426  0315                     	;# 
  7427  0316                     	;# 
  7428  0317                     	;# 
  7429  0318                     	;# 
  7430  0318                     	;# 
  7431  0319                     	;# 
  7432  031A                     	;# 
  7433  031B                     	;# 
  7434  031C                     	;# 
  7435  031C                     	;# 
  7436  031D                     	;# 
  7437  031E                     	;# 
  7438  031F                     	;# 
  7439  038C                     	;# 
  7440  038D                     	;# 
  7441  038E                     	;# 
  7442  0390                     	;# 
  7443  0391                     	;# 
  7444  0392                     	;# 
  7445  040C                     	;# 
  7446  040D                     	;# 
  7447  040E                     	;# 
  7448  040F                     	;# 
  7449  0410                     	;# 
  7450  0411                     	;# 
  7451  0416                     	;# 
  7452  0416                     	;# 
  7453  0417                     	;# 
  7454  0418                     	;# 
  7455  0418                     	;# 
  7456  0419                     	;# 
  7457  041A                     	;# 
  7458  041A                     	;# 
  7459  041B                     	;# 
  7460  041C                     	;# 
  7461  041C                     	;# 
  7462  041D                     	;# 
  7463  041E                     	;# 
  7464  041F                     	;# 
  7465  048C                     	;# 
  7466  048C                     	;# 
  7467  048D                     	;# 
  7468  048E                     	;# 
  7469  048F                     	;# 
  7470  048F                     	;# 
  7471  0490                     	;# 
  7472  0491                     	;# 
  7473  0492                     	;# 
  7474  0492                     	;# 
  7475  0493                     	;# 
  7476  0494                     	;# 
  7477  0495                     	;# 
  7478  0495                     	;# 
  7479  0496                     	;# 
  7480  0497                     	;# 
  7481  0498                     	;# 
  7482  0499                     	;# 
  7483  049A                     	;# 
  7484  049B                     	;# 
  7485  049C                     	;# 
  7486  049D                     	;# 
  7487  050C                     	;# 
  7488  050C                     	;# 
  7489  050D                     	;# 
  7490  050E                     	;# 
  7491  050F                     	;# 
  7492  050F                     	;# 
  7493  0510                     	;# 
  7494  0511                     	;# 
  7495  0512                     	;# 
  7496  0512                     	;# 
  7497  0513                     	;# 
  7498  0514                     	;# 
  7499  0515                     	;# 
  7500  0515                     	;# 
  7501  0516                     	;# 
  7502  0517                     	;# 
  7503  0518                     	;# 
  7504  0519                     	;# 
  7505  051A                     	;# 
  7506  051B                     	;# 
  7507  051C                     	;# 
  7508  051D                     	;# 
  7509  058C                     	;# 
  7510  058C                     	;# 
  7511  058D                     	;# 
  7512  058E                     	;# 
  7513  058F                     	;# 
  7514  058F                     	;# 
  7515  0590                     	;# 
  7516  0591                     	;# 
  7517  0592                     	;# 
  7518  0593                     	;# 
  7519  060C                     	;# 
  7520  060D                     	;# 
  7521  060E                     	;# 
  7522  060F                     	;# 
  7523  0610                     	;# 
  7524  0611                     	;# 
  7525  0612                     	;# 
  7526  0613                     	;# 
  7527  0614                     	;# 
  7528  0616                     	;# 
  7529  0617                     	;# 
  7530  0618                     	;# 
  7531  0619                     	;# 
  7532  061A                     	;# 
  7533  061B                     	;# 
  7534  061C                     	;# 
  7535  061D                     	;# 
  7536  061E                     	;# 
  7537  068C                     	;# 
  7538  068D                     	;# 
  7539  068E                     	;# 
  7540  068F                     	;# 
  7541  0690                     	;# 
  7542  0691                     	;# 
  7543  0692                     	;# 
  7544  0693                     	;# 
  7545  0694                     	;# 
  7546  070C                     	;# 
  7547  070D                     	;# 
  7548  070E                     	;# 
  7549  070F                     	;# 
  7550  0710                     	;# 
  7551  0711                     	;# 
  7552  0712                     	;# 
  7553  0713                     	;# 
  7554  0714                     	;# 
  7555  0716                     	;# 
  7556  0717                     	;# 
  7557  0718                     	;# 
  7558  0719                     	;# 
  7559  071A                     	;# 
  7560  071B                     	;# 
  7561  071C                     	;# 
  7562  071D                     	;# 
  7563  071E                     	;# 
  7564  0796                     	;# 
  7565  0797                     	;# 
  7566  0798                     	;# 
  7567  0799                     	;# 
  7568  079A                     	;# 
  7569  079B                     	;# 
  7570  080C                     	;# 
  7571  080D                     	;# 
  7572  080E                     	;# 
  7573  080F                     	;# 
  7574  0810                     	;# 
  7575  0811                     	;# 
  7576  0812                     	;# 
  7577  0813                     	;# 
  7578  0814                     	;# 
  7579  081A                     	;# 
  7580  081B                     	;# 
  7581  081C                     	;# 
  7582  081D                     	;# 
  7583  081E                     	;# 
  7584  081F                     	;# 
  7585  088C                     	;# 
  7586  088D                     	;# 
  7587  088E                     	;# 
  7588  088F                     	;# 
  7589  0890                     	;# 
  7590  0891                     	;# 
  7591  0892                     	;# 
  7592  0893                     	;# 
  7593  0895                     	;# 
  7594  0896                     	;# 
  7595  0897                     	;# 
  7596  0898                     	;# 
  7597  0899                     	;# 
  7598  089A                     	;# 
  7599  089B                     	;# 
  7600  090C                     	;# 
  7601  090E                     	;# 
  7602  090F                     	;# 
  7603  091F                     	;# 
  7604  098F                     	;# 
  7605  098F                     	;# 
  7606  0990                     	;# 
  7607  0991                     	;# 
  7608  0992                     	;# 
  7609  0993                     	;# 
  7610  0994                     	;# 
  7611  0995                     	;# 
  7612  0996                     	;# 
  7613  0997                     	;# 
  7614  1E0F                     	;# 
  7615  1E10                     	;# 
  7616  1E11                     	;# 
  7617  1E12                     	;# 
  7618  1E13                     	;# 
  7619  1E14                     	;# 
  7620  1E15                     	;# 
  7621  1E16                     	;# 
  7622  1E17                     	;# 
  7623  1E18                     	;# 
  7624  1E19                     	;# 
  7625  1E1A                     	;# 
  7626  1E1B                     	;# 
  7627  1E1C                     	;# 
  7628  1E1D                     	;# 
  7629  1E1E                     	;# 
  7630  1E1F                     	;# 
  7631  1E20                     	;# 
  7632  1E21                     	;# 
  7633  1E22                     	;# 
  7634  1E23                     	;# 
  7635  1E24                     	;# 
  7636  1E25                     	;# 
  7637  1E26                     	;# 
  7638  1E27                     	;# 
  7639  1E28                     	;# 
  7640  1E29                     	;# 
  7641  1E2A                     	;# 
  7642  1E2B                     	;# 
  7643  1E2C                     	;# 
  7644  1E2D                     	;# 
  7645  1E2E                     	;# 
  7646  1E2F                     	;# 
  7647  1E30                     	;# 
  7648  1E31                     	;# 
  7649  1E32                     	;# 
  7650  1E33                     	;# 
  7651  1E34                     	;# 
  7652  1E35                     	;# 
  7653  1E36                     	;# 
  7654  1E37                     	;# 
  7655  1E8F                     	;# 
  7656  1E90                     	;# 
  7657  1E91                     	;# 
  7658  1E92                     	;# 
  7659  1E93                     	;# 
  7660  1E94                     	;# 
  7661  1E95                     	;# 
  7662  1E96                     	;# 
  7663  1E97                     	;# 
  7664  1E9C                     	;# 
  7665  1E9D                     	;# 
  7666  1E9E                     	;# 
  7667  1EA1                     	;# 
  7668  1EA2                     	;# 
  7669  1EA3                     	;# 
  7670  1EA4                     	;# 
  7671  1EA5                     	;# 
  7672  1EA9                     	;# 
  7673  1EAA                     	;# 
  7674  1EAB                     	;# 
  7675  1EAC                     	;# 
  7676  1EB1                     	;# 
  7677  1EB2                     	;# 
  7678  1EB3                     	;# 
  7679  1EB8                     	;# 
  7680  1EB9                     	;# 
  7681  1EBA                     	;# 
  7682  1EBB                     	;# 
  7683  1EBC                     	;# 
  7684  1EBD                     	;# 
  7685  1EBE                     	;# 
  7686  1EC3                     	;# 
  7687  1EC5                     	;# 
  7688  1EC6                     	;# 
  7689  1EC7                     	;# 
  7690  1EC8                     	;# 
  7691  1EC9                     	;# 
  7692  1ECA                     	;# 
  7693  1ECB                     	;# 
  7694  1ECC                     	;# 
  7695  1F10                     	;# 
  7696  1F11                     	;# 
  7697  1F12                     	;# 
  7698  1F13                     	;# 
  7699  1F14                     	;# 
  7700  1F15                     	;# 
  7701  1F16                     	;# 
  7702  1F17                     	;# 
  7703  1F18                     	;# 
  7704  1F19                     	;# 
  7705  1F1A                     	;# 
  7706  1F1B                     	;# 
  7707  1F1C                     	;# 
  7708  1F1D                     	;# 
  7709  1F1E                     	;# 
  7710  1F1F                     	;# 
  7711  1F20                     	;# 
  7712  1F21                     	;# 
  7713  1F22                     	;# 
  7714  1F23                     	;# 
  7715  1F24                     	;# 
  7716  1F25                     	;# 
  7717  1F26                     	;# 
  7718  1F27                     	;# 
  7719  1F28                     	;# 
  7720  1F29                     	;# 
  7721  1F2A                     	;# 
  7722  1F2B                     	;# 
  7723  1F2C                     	;# 
  7724  1F2D                     	;# 
  7725  1F2E                     	;# 
  7726  1F2F                     	;# 
  7727  1F30                     	;# 
  7728  1F31                     	;# 
  7729  1F32                     	;# 
  7730  1F38                     	;# 
  7731  1F39                     	;# 
  7732  1F3A                     	;# 
  7733  1F3B                     	;# 
  7734  1F3C                     	;# 
  7735  1F3D                     	;# 
  7736  1F3E                     	;# 
  7737  1F3F                     	;# 
  7738  1F40                     	;# 
  7739  1F41                     	;# 
  7740  1F43                     	;# 
  7741  1F44                     	;# 
  7742  1F45                     	;# 
  7743  1F46                     	;# 
  7744  1F47                     	;# 
  7745  1F48                     	;# 
  7746  1F49                     	;# 
  7747  1F4A                     	;# 
  7748  1F4B                     	;# 
  7749  1F4C                     	;# 
  7750  1F4E                     	;# 
  7751  1F4F                     	;# 
  7752  1F50                     	;# 
  7753  1F51                     	;# 
  7754  1F52                     	;# 
  7755  1F53                     	;# 
  7756  1F54                     	;# 
  7757  1F55                     	;# 
  7758  1F56                     	;# 
  7759  1F57                     	;# 
  7760  1F59                     	;# 
  7761  1F5A                     	;# 
  7762  1F5B                     	;# 
  7763  1F5C                     	;# 
  7764  1F5D                     	;# 
  7765  1F61                     	;# 
  7766  1F62                     	;# 
  7767  1F64                     	;# 
  7768  1F65                     	;# 
  7769  1F66                     	;# 
  7770  1F67                     	;# 
  7771  1F68                     	;# 
  7772  1F69                     	;# 
  7773  1F6A                     	;# 
  7774  1F6B                     	;# 
  7775  1F6C                     	;# 
  7776  1F6D                     	;# 
  7777  1FE4                     	;# 
  7778  1FE5                     	;# 
  7779  1FE6                     	;# 
  7780  1FE7                     	;# 
  7781  1FE8                     	;# 
  7782  1FE9                     	;# 
  7783  1FEA                     	;# 
  7784  1FEB                     	;# 
  7785  1FED                     	;# 
  7786  1FEE                     	;# 
  7787  1FEF                     	;_crcTable
  7788                           
  7789                           	psect	idataCOMMON
  7790  07FE                     __pidataCOMMON:	
  7791                           
  7792                           ;initializer for _pdw3000local
  7793  07FE  34A0               	retlw	low (_DW3000local| (0+512))
  7794                           
  7795                           	psect	idataBANK2
  7796  20B8                     __pidataBANK2:	
  7797                           
  7798                           ;initializer for pmic_status_read@pmic_stat_read_time_count
  7799  20B8  3432               	retlw	50
  7800  20B9  3400               	retlw	0
  7801                           
  7802                           ;initializer for set_led_status@tx_led_toggle_count
  7803  20BA  341E               	retlw	30
  7804  20BB  3400               	retlw	0
  7805                           
  7806                           ;initializer for pmic_status_read@pmic_wdt_clr_count
  7807  20BC  341E               	retlw	30
  7808                           
  7809                           ;initializer for _power_connected
  7810  20BD  3402               	retlw	2
  7811                           
  7812                           ;initializer for _pic_active_mode
  7813  20BE  3401               	retlw	1
  7814                           
  7815                           ;initializer for _pmic_stat_reg
  7816  20BF  340B               	retlw	11
  7817                           
  7818                           ;initializer for _enable_sleep
  7819  20C0  3401               	retlw	1
  7820                           
  7821                           	psect	idataBANK3
  7822  189A                     __pidataBANK3:	
  7823                           
  7824                           ;initializer for _config
  7825  189A  3409               	retlw	9
  7826  189B  3402               	retlw	2
  7827  189C  3402               	retlw	2
  7828  189D  3409               	retlw	9
  7829  189E  3409               	retlw	9
  7830  189F  3401               	retlw	1
  7831  18A0  3400               	retlw	0
  7832  18A1  3400               	retlw	0
  7833  18A2  3400               	retlw	0
  7834  18A3  34E9               	retlw	233
  7835  18A4  3403               	retlw	3
  7836  18A5  3400               	retlw	0
  7837  18A6  3401               	retlw	1
  7838  18A7  3400               	retlw	0
  7839                           
  7840                           ;initializer for _ADDR
  7841  18A8  3402               	retlw	2
  7842  18A9  3400               	retlw	0
  7843  18AA  3400               	retlw	0
  7844  18AB  3400               	retlw	0
  7845  18AC  3453               	retlw	83
  7846  18AD  34D6               	retlw	214
  7847  18AE  34F5               	retlw	245
  7848  18AF  34C8               	retlw	200
  7849                           
  7850                           ;initializer for _txconfig_options_ch9
  7851  18B0  3434               	retlw	52
  7852  18B1  34FE               	retlw	254
  7853  18B2  34FE               	retlw	254
  7854  18B3  34FE               	retlw	254
  7855  18B4  34FE               	retlw	254
  7856  18B5  3400               	retlw	0
  7857  18B6  3400               	retlw	0
  7858                           
  7859                           	psect	idataBANK4
  7860  232C                     __pidataBANK4:	
  7861                           
  7862                           ;initializer for _tx_blink_msg
  7863  232C  3400               	retlw	0
  7864  232D  3438               	retlw	56
  7865  232E  3400               	retlw	0
  7866  232F  34CA               	retlw	202
  7867  2330  34DE               	retlw	222
  7868  2331  3400               	retlw	0
  7869  2332  3400               	retlw	0
  7870  2333  3400               	retlw	0
  7871  2334  3400               	retlw	0
  7872  2335  3400               	retlw	0
  7873  2336  3400               	retlw	0
  7874  2337  3400               	retlw	0
  7875  2338  3400               	retlw	0
  7876  2339  3400               	retlw	0
  7877  233A  3400               	retlw	0
  7878  233B  3400               	retlw	0
  7879  233C  3400               	retlw	0
  7880  233D  3400               	retlw	0
  7881  233E  3400               	retlw	0
  7882  233F  3400               	retlw	0
  7883  2340  3400               	retlw	0
  7884  2341  3400               	retlw	0
  7885  2342  3400               	retlw	0
  7886  2343  3400               	retlw	0
  7887  2344  3400               	retlw	0
  7888  2345  3400               	retlw	0
  7889  2346  3400               	retlw	0
  7890  2347  3400               	retlw	0
  7891  2348  3400               	retlw	0
  7892  2349  3400               	retlw	0
  7893  234A  3400               	retlw	0
  7894  234B  3400               	retlw	0
  7895  234C  3400               	retlw	0
  7896  234D  3400               	retlw	0
  7897  234E  3400               	retlw	0
  7898  234F  3400               	retlw	0
  7899                           
  7900                           	psect	stringtext1
  7901  2930                     __pstringtext1:	
  7902  2930                     _sts_length_factors:	
  7903  2930  3400               	retlw	0
  7904  2931  3404               	retlw	4
  7905  2932  34A8               	retlw	168
  7906  2933  3405               	retlw	5
  7907  2934  3400               	retlw	0
  7908  2935  3408               	retlw	8
  7909  2936  3450               	retlw	80
  7910  2937  340B               	retlw	11
  7911  2938  3400               	retlw	0
  7912  2939  3410               	retlw	16
  7913  293A  34A1               	retlw	161
  7914  293B  3416               	retlw	22
  7915  293C  3400               	retlw	0
  7916  293D  3420               	retlw	32
  7917  293E                     __end_of_sts_length_factors:	
  7918                           
  7919                           	psect	stringtext2
  7920  2971                     __pstringtext2:	
  7921  2971                     _dpowers:	
  7922  2971  3401               	retlw	1
  7923  2972  3400               	retlw	0
  7924  2973  340A               	retlw	10
  7925  2974  3400               	retlw	0
  7926  2975  3464               	retlw	100
  7927  2976  3400               	retlw	0
  7928  2977  34E8               	retlw	232
  7929  2978  3403               	retlw	3
  7930  2979  3410               	retlw	16
  7931  297A  3427               	retlw	39
  7932  297B                     __end_of_dpowers:	
  7933                           
  7934                           	psect	stringtext3
  7935  29A2                     __pstringtext3:	
  7936  29A2                     _hexpowers:	
  7937  29A2  3401               	retlw	1
  7938  29A3  3400               	retlw	0
  7939  29A4  3410               	retlw	16
  7940  29A5  3400               	retlw	0
  7941  29A6  3400               	retlw	0
  7942  29A7  3401               	retlw	1
  7943  29A8  3400               	retlw	0
  7944  29A9  3410               	retlw	16
  7945  29AA                     __end_of_hexpowers:	
  7946                           
  7947                           	psect	stringtext4
  7948  1800                     __pstringtext4:	
  7949  1800                     _spi1_configuration:	
  7950  1800  3400               	retlw	0
  7951  1801  3440               	retlw	64
  7952  1802  3401               	retlw	1
  7953  1803  3400               	retlw	0
  7954  1804                     __end_of_spi1_configuration:	
  7955  001E                     _T0CON0bits	set	30
  7956  001C                     _TMR0L	set	28
  7957  001D                     _TMR0H	set	29
  7958  001F                     _T0CON1	set	31
  7959  001E                     _T0CON0	set	30
  7960  000C                     _PORTAbits	set	12
  7961  000D                     _PORTBbits	set	13
  7962  000B                     _INTCONbits	set	11
  7963  0017                     _LATBbits	set	23
  7964  0016                     _LATAbits	set	22
  7965  0018                     _LATCbits	set	24
  7966  0019                     _LATDbits	set	25
  7967  0013                     _TRISCbits	set	19
  7968  0014                     _TRISD	set	20
  7969  0013                     _TRISC	set	19
  7970  0012                     _TRISB	set	18
  7971  0011                     _TRISA	set	17
  7972  0015                     _TRISE	set	21
  7973  0018                     _LATC	set	24
  7974  0017                     _LATB	set	23
  7975  0016                     _LATA	set	22
  7976  0019                     _LATD	set	25
  7977  001A                     _LATE	set	26
  7978  005F                     _GIE	set	95
  7979  011A                     _TX1REG	set	282
  7980  0119                     _RC1REG	set	281
  7981  011D                     _RC1STAbits	set	285
  7982  011E                     _TX1STAbits	set	286
  7983  011C                     _SP1BRGH	set	284
  7984  011B                     _SP1BRGL	set	283
  7985  011E                     _TX1STA	set	286
  7986  011D                     _RC1STA	set	285
  7987  011F                     _BAUD1CON	set	287
  7988  018F                     _SSP1STATbits	set	399
  7989  0191                     _SSP1CON2bits	set	401
  7990  018E                     _SSP1MSK	set	398
  7991  0192                     _SSP1CON3	set	402
  7992  018C                     _SSP1BUF	set	396
  7993  0191                     _SSP1CON2	set	401
  7994  0190                     _SSP1CON1bits	set	400
  7995  018D                     _SSP1ADD	set	397
  7996  0190                     _SSP1CON1	set	400
  7997  018F                     _SSP1STAT	set	399
  7998  070C                     _PIR0bits	set	1804
  7999  0716                     _PIE0bits	set	1814
  8000  0719                     _PIE3bits	set	1817
  8001  070F                     _PIR3bits	set	1807
  8002  079B                     _PMD5	set	1947
  8003  079A                     _PMD4	set	1946
  8004  0799                     _PMD3	set	1945
  8005  0798                     _PMD2	set	1944
  8006  0797                     _PMD1	set	1943
  8007  0796                     _PMD0	set	1942
  8008  080C                     _WDTCON0	set	2060
  8009  0892                     _OSCTUNE	set	2194
  8010  0893                     _OSCFRQ	set	2195
  8011  0891                     _OSCEN	set	2193
  8012  088F                     _OSCCON3	set	2191
  8013  088D                     _OSCCON1	set	2189
  8014  1EC6                     _SSP1DATPPS	set	7878
  8015  1EC5                     _SSP1CLKPPS	set	7877
  8016  1ECB                     _RXPPS	set	7883
  8017  1E8F                     _PPSLOCKbits	set	7823
  8018  1E8F                     _PPSLOCK	set	7823
  8019  1F24                     _RC4PPS	set	7972
  8020  1F23                     _RC3PPS	set	7971
  8021  1F45                     _ODCONBbits	set	8005
  8022  1F3A                     _ODCONAbits	set	7994
  8023  1F21                     _RC1PPS	set	7969
  8024  1F22                     _RC2PPS	set	7970
  8025  1F25                     _RC5PPS	set	7973
  8026  1F5B                     _ODCOND	set	8027
  8027  1F50                     _ODCONC	set	8016
  8028  1F45                     _ODCONB	set	8005
  8029  1F3A                     _ODCONA	set	7994
  8030  1F66                     _ODCONE	set	8038
  8031  1F4F                     _WPUC	set	8015
  8032  1F39                     _WPUA	set	7993
  8033  1F44                     _WPUB	set	8004
  8034  1F65                     _WPUE	set	8037
  8035  1F5A                     _WPUD	set	8026
  8036  1F38                     _ANSELA	set	7992
  8037  1F64                     _ANSELE	set	8036
  8038  1F43                     _ANSELB	set	8003
  8039  1F4E                     _ANSELC	set	8014
  8040  1F59                     _ANSELD	set	8025
  8041  1804                     STR_13:	
  8042  1804  346D               	retlw	109	;'m'
  8043  1805  346F               	retlw	111	;'o'
  8044  1806  3464               	retlw	100	;'d'
  8045  1807  3465               	retlw	101	;'e'
  8046  1808  3420               	retlw	32	;' '
  8047  1809  343D               	retlw	61	;'='
  8048  180A  343D               	retlw	61	;'='
  8049  180B  3420               	retlw	32	;' '
  8050  180C  3444               	retlw	68	;'D'
  8051  180D  3457               	retlw	87	;'W'
  8052  180E  3433               	retlw	51	;'3'
  8053  180F  3430               	retlw	48	;'0'
  8054  1810  3430               	retlw	48	;'0'
  8055  1811  3430               	retlw	48	;'0'
  8056  1812  345F               	retlw	95	;'_'
  8057  1813  3453               	retlw	83	;'S'
  8058  1814  3450               	retlw	80	;'P'
  8059  1815  3449               	retlw	73	;'I'
  8060  1816  345F               	retlw	95	;'_'
  8061  1817  3457               	retlw	87	;'W'
  8062  1818  3452               	retlw	82	;'R'
  8063  1819  345F               	retlw	95	;'_'
  8064  181A  3442               	retlw	66	;'B'
  8065  181B  3449               	retlw	73	;'I'
  8066  181C  3454               	retlw	84	;'T'
  8067  181D  3420               	retlw	32	;' '
  8068  181E  347C               	retlw	124	;'|'
  8069  181F  347C               	retlw	124	;'|'
  8070  1820  3420               	retlw	32	;' '
  8071  1821  346D               	retlw	109	;'m'
  8072  1822  346F               	retlw	111	;'o'
  8073  1823  3464               	retlw	100	;'d'
  8074  1824  3465               	retlw	101	;'e'
  8075  1825  3420               	retlw	32	;' '
  8076  1826  343D               	retlw	61	;'='
  8077  1827  343D               	retlw	61	;'='
  8078  1828  3420               	retlw	32	;' '
  8079  1829  3444               	retlw	68	;'D'
  8080  182A  3457               	retlw	87	;'W'
  8081  182B  3433               	retlw	51	;'3'
  8082  182C  3430               	retlw	48	;'0'
  8083  182D  3430               	retlw	48	;'0'
  8084  182E  3430               	retlw	48	;'0'
  8085  182F  345F               	retlw	95	;'_'
  8086  1830  3453               	retlw	83	;'S'
  8087  1831  3450               	retlw	80	;'P'
  8088  1832  3449               	retlw	73	;'I'
  8089  1833  345F               	retlw	95	;'_'
  8090  1834  3452               	retlw	82	;'R'
  8091  1835  3444               	retlw	68	;'D'
  8092  1836  345F               	retlw	95	;'_'
  8093  1837  3442               	retlw	66	;'B'
  8094  1838  3449               	retlw	73	;'I'
  8095  1839  3454               	retlw	84	;'T'
  8096  183A  3420               	retlw	32	;' '
  8097  183B  347C               	retlw	124	;'|'
  8098  183C  347C               	retlw	124	;'|'
  8099  183D  3420               	retlw	32	;' '
  8100  183E  346D               	retlw	109	;'m'
  8101  183F  346F               	retlw	111	;'o'
  8102  1840  3464               	retlw	100	;'d'
  8103  1841  3465               	retlw	101	;'e'
  8104  1842  3420               	retlw	32	;' '
  8105  1843  343D               	retlw	61	;'='
  8106  1844  343D               	retlw	61	;'='
  8107  1845  3420               	retlw	32	;' '
  8108  1846  3444               	retlw	68	;'D'
  8109  1847  3457               	retlw	87	;'W'
  8110  1848  3433               	retlw	51	;'3'
  8111  1849  3430               	retlw	48	;'0'
  8112  184A  3430               	retlw	48	;'0'
  8113  184B  3430               	retlw	48	;'0'
  8114  184C  345F               	retlw	95	;'_'
  8115  184D  3453               	retlw	83	;'S'
  8116  184E  3450               	retlw	80	;'P'
  8117  184F  3449               	retlw	73	;'I'
  8118  1850  345F               	retlw	95	;'_'
  8119  1851  3441               	retlw	65	;'A'
  8120  1852  344E               	retlw	78	;'N'
  8121  1853  3444               	retlw	68	;'D'
  8122  1854  345F               	retlw	95	;'_'
  8123  1855  344F               	retlw	79	;'O'
  8124  1856  3452               	retlw	82	;'R'
  8125  1857  345F               	retlw	95	;'_'
  8126  1858  3438               	retlw	56	;'8'
  8127  1859  3420               	retlw	32	;' '
  8128  185A  347C               	retlw	124	;'|'
  8129  185B  347C               	retlw	124	;'|'
  8130  185C  3420               	retlw	32	;' '
  8131  185D  346D               	retlw	109	;'m'
  8132  185E  346F               	retlw	111	;'o'
  8133  185F  3464               	retlw	100	;'d'
  8134  1860  3465               	retlw	101	;'e'
  8135  1861  3420               	retlw	32	;' '
  8136  1862  343D               	retlw	61	;'='
  8137  1863  343D               	retlw	61	;'='
  8138  1864  3420               	retlw	32	;' '
  8139  1865  3444               	retlw	68	;'D'
  8140  1866  3457               	retlw	87	;'W'
  8141  1867  3433               	retlw	51	;'3'
  8142  1868  3430               	retlw	48	;'0'
  8143  1869  3430               	retlw	48	;'0'
  8144  186A  3430               	retlw	48	;'0'
  8145  186B  345F               	retlw	95	;'_'
  8146  186C  3453               	retlw	83	;'S'
  8147  186D  3450               	retlw	80	;'P'
  8148  186E  3449               	retlw	73	;'I'
  8149  186F  345F               	retlw	95	;'_'
  8150  1870  3441               	retlw	65	;'A'
  8151  1871  344E               	retlw	78	;'N'
  8152  1872  3444               	retlw	68	;'D'
  8153  1873  345F               	retlw	95	;'_'
  8154  1874  344F               	retlw	79	;'O'
  8155  1875  3452               	retlw	82	;'R'
  8156  1876  345F               	retlw	95	;'_'
  8157  1877  3431               	retlw	49	;'1'
  8158  1878  3436               	retlw	54	;'6'
  8159  1879  3420               	retlw	32	;' '
  8160  187A  347C               	retlw	124	;'|'
  8161  187B  347C               	retlw	124	;'|'
  8162  187C  3420               	retlw	32	;' '
  8163  187D  346D               	retlw	109	;'m'
  8164  187E  346F               	retlw	111	;'o'
  8165  187F  3464               	retlw	100	;'d'
  8166  1880  3465               	retlw	101	;'e'
  8167  1881  3420               	retlw	32	;' '
  8168  1882  343D               	retlw	61	;'='
  8169  1883  343D               	retlw	61	;'='
  8170  1884  3420               	retlw	32	;' '
  8171  1885  3444               	retlw	68	;'D'
  8172  1886  3457               	retlw	87	;'W'
  8173  1887  3433               	retlw	51	;'3'
  8174  1888  3430               	retlw	48	;'0'
  8175  1889  3430               	retlw	48	;'0'
  8176  188A  3430               	retlw	48	;'0'
  8177  188B  345F               	retlw	95	;'_'
  8178  188C  3453               	retlw	83	;'S'
  8179  188D  3450               	retlw	80	;'P'
  8180  188E  3449               	retlw	73	;'I'
  8181  188F  345F               	retlw	95	;'_'
  8182  1890  3441               	retlw	65	;'A'
  8183  1891  344E               	retlw	78	;'N'
  8184  1892  3444               	retlw	68	;'D'
  8185  1893  345F               	retlw	95	;'_'
  8186  1894  344F               	retlw	79	;'O'
  8187  1895  3452               	retlw	82	;'R'
  8188  1896  345F               	retlw	95	;'_'
  8189  1897  3433               	retlw	51	;'3'
  8190  1898  3432               	retlw	50	;'2'
  8191  1899  3400               	retlw	0
  8192                           
  8193                           	psect	stringtext5
  8194  2800                     __pstringtext5:	
  8195  2800                     STR_32:	
  8196  2800  3441               	retlw	65	;'A'
  8197  2801  3473               	retlw	115	;'s'
  8198  2802  3473               	retlw	115	;'s'
  8199  2803  3465               	retlw	101	;'e'
  8200  2804  3472               	retlw	114	;'r'
  8201  2805  3474               	retlw	116	;'t'
  8202  2806  3469               	retlw	105	;'i'
  8203  2807  346F               	retlw	111	;'o'
  8204  2808  346E               	retlw	110	;'n'
  8205  2809  3420               	retlw	32	;' '
  8206  280A  3466               	retlw	102	;'f'
  8207  280B  3461               	retlw	97	;'a'
  8208  280C  3469               	retlw	105	;'i'
  8209  280D  346C               	retlw	108	;'l'
  8210  280E  3465               	retlw	101	;'e'
  8211  280F  3464               	retlw	100	;'d'
  8212  2810  343A               	retlw	58	;':'
  8213  2811  3420               	retlw	32	;' '
  8214  2812  3425               	retlw	37	;'%'
  8215  2813  3473               	retlw	115	;'s'
  8216  2814  3420               	retlw	32	;' '
  8217  2815  346C               	retlw	108	;'l'
  8218  2816  3469               	retlw	105	;'i'
  8219  2817  346E               	retlw	110	;'n'
  8220  2818  3465               	retlw	101	;'e'
  8221  2819  3420               	retlw	32	;' '
  8222  281A  3425               	retlw	37	;'%'
  8223  281B  3464               	retlw	100	;'d'
  8224  281C  343A               	retlw	58	;':'
  8225  281D  3420               	retlw	32	;' '
  8226  281E  3422               	retlw	34	;'"'
  8227  281F  3425               	retlw	37	;'%'
  8228  2820  3473               	retlw	115	;'s'
  8229  2821  3422               	retlw	34	;'"'
  8230  2822  340A               	retlw	10
  8231  2823  3400               	retlw	0
  8232                           
  8233                           	psect	stringtext6
  8234  2824                     __pstringtext6:	
  8235  2824                     STR_5:	
  8236  2824  340A               	retlw	10
  8237  2825  340D               	retlw	13
  8238  2826  3475               	retlw	117	;'u'
  8239  2827  3469               	retlw	105	;'i'
  8240  2828  346E               	retlw	110	;'n'
  8241  2829  3474               	retlw	116	;'t'
  8242  282A  3436               	retlw	54	;'6'
  8243  282B  3434               	retlw	52	;'4'
  8244  282C  345F               	retlw	95	;'_'
  8245  282D  346E               	retlw	110	;'n'
  8246  282E  3475               	retlw	117	;'u'
  8247  282F  346D               	retlw	109	;'m'
  8248  2830  343A               	retlw	58	;':'
  8249  2831  3420               	retlw	32	;' '
  8250  2832  3425               	retlw	37	;'%'
  8251  2833  3430               	retlw	48	;'0'
  8252  2834  3434               	retlw	52	;'4'
  8253  2835  3458               	retlw	88	;'X'
  8254  2836  3425               	retlw	37	;'%'
  8255  2837  3430               	retlw	48	;'0'
  8256  2838  3434               	retlw	52	;'4'
  8257  2839  3458               	retlw	88	;'X'
  8258  283A  3425               	retlw	37	;'%'
  8259  283B  3430               	retlw	48	;'0'
  8260  283C  3434               	retlw	52	;'4'
  8261  283D  3458               	retlw	88	;'X'
  8262  283E  3425               	retlw	37	;'%'
  8263  283F  3430               	retlw	48	;'0'
  8264  2840  3434               	retlw	52	;'4'
  8265  2841  3458               	retlw	88	;'X'
  8266  2842  3400               	retlw	0
  8267                           
  8268                           	psect	stringtext7
  8269  2843                     __pstringtext7:	
  8270  2843                     STR_15:	
  8271  2843  346D               	retlw	109	;'m'
  8272  2844  346F               	retlw	111	;'o'
  8273  2845  3464               	retlw	100	;'d'
  8274  2846  3465               	retlw	101	;'e'
  8275  2847  3420               	retlw	32	;' '
  8276  2848  343D               	retlw	61	;'='
  8277  2849  343D               	retlw	61	;'='
  8278  284A  3420               	retlw	32	;' '
  8279  284B  3444               	retlw	68	;'D'
  8280  284C  3457               	retlw	87	;'W'
  8281  284D  3433               	retlw	51	;'3'
  8282  284E  3430               	retlw	48	;'0'
  8283  284F  3430               	retlw	48	;'0'
  8284  2850  3430               	retlw	48	;'0'
  8285  2851  345F               	retlw	95	;'_'
  8286  2852  3453               	retlw	83	;'S'
  8287  2853  3450               	retlw	80	;'P'
  8288  2854  3449               	retlw	73	;'I'
  8289  2855  345F               	retlw	95	;'_'
  8290  2856  3457               	retlw	87	;'W'
  8291  2857  3452               	retlw	82	;'R'
  8292  2858  345F               	retlw	95	;'_'
  8293  2859  3442               	retlw	66	;'B'
  8294  285A  3449               	retlw	73	;'I'
  8295  285B  3454               	retlw	84	;'T'
  8296  285C  3400               	retlw	0
  8297                           
  8298                           	psect	stringtext8
  8299  285D                     __pstringtext8:	
  8300  285D                     STR_1:	
  8301  285D  340A               	retlw	10
  8302  285E  340D               	retlw	13
  8303  285F  3455               	retlw	85	;'U'
  8304  2860  3457               	retlw	87	;'W'
  8305  2861  3442               	retlw	66	;'B'
  8306  2862  345F               	retlw	95	;'_'
  8307  2863  3454               	retlw	84	;'T'
  8308  2864  3441               	retlw	65	;'A'
  8309  2865  3447               	retlw	71	;'G'
  8310  2866  345F               	retlw	95	;'_'
  8311  2867  3444               	retlw	68	;'D'
  8312  2868  3457               	retlw	87	;'W'
  8313  2869  344D               	retlw	77	;'M'
  8314  286A  3433               	retlw	51	;'3'
  8315  286B  3430               	retlw	48	;'0'
  8316  286C  3430               	retlw	48	;'0'
  8317  286D  3430               	retlw	48	;'0'
  8318  286E  345F               	retlw	95	;'_'
  8319  286F  3450               	retlw	80	;'P'
  8320  2870  3449               	retlw	73	;'I'
  8321  2871  3443               	retlw	67	;'C'
  8322  2872  3400               	retlw	0
  8323                           
  8324                           	psect	stringtext9
  8325  2873                     __pstringtext9:	
  8326  2873                     STR_26:	
  8327  2873  340A               	retlw	10
  8328  2874  340D               	retlw	13
  8329  2875  344D               	retlw	77	;'M'
  8330  2876  3453               	retlw	83	;'S'
  8331  2877  3453               	retlw	83	;'S'
  8332  2878  3453               	retlw	83	;'S'
  8333  2879  3450               	retlw	80	;'P'
  8334  287A  3420               	retlw	32	;' '
  8335  287B  3473               	retlw	115	;'s'
  8336  287C  3465               	retlw	101	;'e'
  8337  287D  3474               	retlw	116	;'t'
  8338  287E  3420               	retlw	32	;' '
  8339  287F  3461               	retlw	97	;'a'
  8340  2880  3473               	retlw	115	;'s'
  8341  2881  3420               	retlw	32	;' '
  8342  2882  3449               	retlw	73	;'I'
  8343  2883  3432               	retlw	50	;'2'
  8344  2884  3443               	retlw	67	;'C'
  8345  2885  3400               	retlw	0
  8346                           
  8347                           	psect	stringtext10
  8348  2886                     __pstringtext10:	
  8349  2886                     STR_25:	
  8350  2886  340A               	retlw	10
  8351  2887  340D               	retlw	13
  8352  2888  344D               	retlw	77	;'M'
  8353  2889  3453               	retlw	83	;'S'
  8354  288A  3453               	retlw	83	;'S'
  8355  288B  3453               	retlw	83	;'S'
  8356  288C  3450               	retlw	80	;'P'
  8357  288D  3420               	retlw	32	;' '
  8358  288E  3473               	retlw	115	;'s'
  8359  288F  3465               	retlw	101	;'e'
  8360  2890  3474               	retlw	116	;'t'
  8361  2891  3420               	retlw	32	;' '
  8362  2892  3461               	retlw	97	;'a'
  8363  2893  3473               	retlw	115	;'s'
  8364  2894  3420               	retlw	32	;' '
  8365  2895  3453               	retlw	83	;'S'
  8366  2896  3450               	retlw	80	;'P'
  8367  2897  3449               	retlw	73	;'I'
  8368  2898  3400               	retlw	0
  8369                           
  8370                           	psect	stringtext11
  8371  2899                     __pstringtext11:	
  8372  2899                     STR_9:	
  8373  2899  3472               	retlw	114	;'r'
  8374  289A  3465               	retlw	101	;'e'
  8375  289B  3467               	retlw	103	;'g'
  8376  289C  345F               	retlw	95	;'_'
  8377  289D  346F               	retlw	111	;'o'
  8378  289E  3466               	retlw	102	;'f'
  8379  289F  3466               	retlw	102	;'f'
  8380  28A0  3473               	retlw	115	;'s'
  8381  28A1  3465               	retlw	101	;'e'
  8382  28A2  3474               	retlw	116	;'t'
  8383  28A3  3420               	retlw	32	;' '
  8384  28A4  343C               	retlw	60	;'<'
  8385  28A5  343D               	retlw	61	;'='
  8386  28A6  3420               	retlw	32	;' '
  8387  28A7  3430               	retlw	48	;'0'
  8388  28A8  3478               	retlw	120	;'x'
  8389  28A9  3437               	retlw	55	;'7'
  8390  28AA  3446               	retlw	70	;'F'
  8391  28AB  3400               	retlw	0
  8392                           
  8393                           	psect	stringtext12
  8394  28AC                     __pstringtext12:	
  8395  28AC                     STR_28:	
  8396  28AC  340A               	retlw	10
  8397  28AD  340D               	retlw	13
  8398  28AE  3442               	retlw	66	;'B'
  8399  28AF  3451               	retlw	81	;'Q'
  8400  28B0  3432               	retlw	50	;'2'
  8401  28B1  3435               	retlw	53	;'5'
  8402  28B2  3438               	retlw	56	;'8'
  8403  28B3  3439               	retlw	57	;'9'
  8404  28B4  3435               	retlw	53	;'5'
  8405  28B5  345F               	retlw	95	;'_'
  8406  28B6  3472               	retlw	114	;'r'
  8407  28B7  3465               	retlw	101	;'e'
  8408  28B8  345F               	retlw	95	;'_'
  8409  28B9  3469               	retlw	105	;'i'
  8410  28BA  346E               	retlw	110	;'n'
  8411  28BB  3469               	retlw	105	;'i'
  8412  28BC  3474               	retlw	116	;'t'
  8413  28BD  3400               	retlw	0
  8414                           
  8415                           	psect	stringtext13
  8416  28BE                     __pstringtext13:	
  8417  28BE                     STR_31:	
  8418  28BE  3430               	retlw	48	;'0'
  8419  28BF  3431               	retlw	49	;'1'
  8420  28C0  3432               	retlw	50	;'2'
  8421  28C1  3433               	retlw	51	;'3'
  8422  28C2  3434               	retlw	52	;'4'
  8423  28C3  3435               	retlw	53	;'5'
  8424  28C4  3436               	retlw	54	;'6'
  8425  28C5  3437               	retlw	55	;'7'
  8426  28C6  3438               	retlw	56	;'8'
  8427  28C7  3439               	retlw	57	;'9'
  8428  28C8  3441               	retlw	65	;'A'
  8429  28C9  3442               	retlw	66	;'B'
  8430  28CA  3443               	retlw	67	;'C'
  8431  28CB  3444               	retlw	68	;'D'
  8432  28CC  3445               	retlw	69	;'E'
  8433  28CD  3446               	retlw	70	;'F'
  8434  28CE  3400               	retlw	0
  8435                           
  8436                           	psect	stringtext14
  8437  28CF                     __pstringtext14:	
  8438  28CF                     STR_29:	
  8439  28CF  340A               	retlw	10
  8440  28D0  340D               	retlw	13
  8441  28D1  3470               	retlw	112	;'p'
  8442  28D2  346D               	retlw	109	;'m'
  8443  28D3  3469               	retlw	105	;'i'
  8444  28D4  3463               	retlw	99	;'c'
  8445  28D5  345F               	retlw	95	;'_'
  8446  28D6  3462               	retlw	98	;'b'
  8447  28D7  3461               	retlw	97	;'a'
  8448  28D8  3474               	retlw	116	;'t'
  8449  28D9  3474               	retlw	116	;'t'
  8450  28DA  345F               	retlw	95	;'_'
  8451  28DB  3472               	retlw	114	;'r'
  8452  28DC  3465               	retlw	101	;'e'
  8453  28DD  3461               	retlw	97	;'a'
  8454  28DE  3464               	retlw	100	;'d'
  8455  28DF  3400               	retlw	0
  8456                           
  8457                           	psect	stringtext15
  8458  28E0                     __pstringtext15:	
  8459  28E0                     STR_21:	
  8460  28E0  340A               	retlw	10
  8461  28E1  340D               	retlw	13
  8462  28E2  3443               	retlw	67	;'C'
  8463  28E3  344F               	retlw	79	;'O'
  8464  28E4  344E               	retlw	78	;'N'
  8465  28E5  3446               	retlw	70	;'F'
  8466  28E6  3449               	retlw	73	;'I'
  8467  28E7  3447               	retlw	71	;'G'
  8468  28E8  345F               	retlw	95	;'_'
  8469  28E9  3453               	retlw	83	;'S'
  8470  28EA  3455               	retlw	85	;'U'
  8471  28EB  3443               	retlw	67	;'C'
  8472  28EC  3443               	retlw	67	;'C'
  8473  28ED  3445               	retlw	69	;'E'
  8474  28EE  3453               	retlw	83	;'S'
  8475  28EF  3453               	retlw	83	;'S'
  8476  28F0  3400               	retlw	0
  8477                           
  8478                           	psect	stringtext16
  8479  28F1                     __pstringtext16:	
  8480  28F1                     STR_7:	
  8481  28F1  3472               	retlw	114	;'r'
  8482  28F2  3465               	retlw	101	;'e'
  8483  28F3  3467               	retlw	103	;'g'
  8484  28F4  345F               	retlw	95	;'_'
  8485  28F5  3466               	retlw	102	;'f'
  8486  28F6  3469               	retlw	105	;'i'
  8487  28F7  346C               	retlw	108	;'l'
  8488  28F8  3465               	retlw	101	;'e'
  8489  28F9  3420               	retlw	32	;' '
  8490  28FA  343C               	retlw	60	;'<'
  8491  28FB  343D               	retlw	61	;'='
  8492  28FC  3420               	retlw	32	;' '
  8493  28FD  3430               	retlw	48	;'0'
  8494  28FE  3478               	retlw	120	;'x'
  8495  28FF  3431               	retlw	49	;'1'
  8496  2900  3446               	retlw	70	;'F'
  8497  2901  3400               	retlw	0
  8498                           
  8499                           	psect	stringtext17
  8500  2902                     __pstringtext17:	
  8501  2902                     STR_11:	
  8502  2902  346C               	retlw	108	;'l'
  8503  2903  3465               	retlw	101	;'e'
  8504  2904  346E               	retlw	110	;'n'
  8505  2905  3467               	retlw	103	;'g'
  8506  2906  3474               	retlw	116	;'t'
  8507  2907  3468               	retlw	104	;'h'
  8508  2908  3420               	retlw	32	;' '
  8509  2909  343C               	retlw	60	;'<'
  8510  290A  3420               	retlw	32	;' '
  8511  290B  3430               	retlw	48	;'0'
  8512  290C  3478               	retlw	120	;'x'
  8513  290D  3433               	retlw	51	;'3'
  8514  290E  3431               	retlw	49	;'1'
  8515  290F  3430               	retlw	48	;'0'
  8516  2910  3430               	retlw	48	;'0'
  8517  2911  3400               	retlw	0
  8518                           
  8519                           	psect	stringtext18
  8520  2912                     __pstringtext18:	
  8521  2912                     STR_27:	
  8522  2912  340A               	retlw	10
  8523  2913  340D               	retlw	13
  8524  2914  3470               	retlw	112	;'p'
  8525  2915  346D               	retlw	109	;'m'
  8526  2916  3469               	retlw	105	;'i'
  8527  2917  3463               	retlw	99	;'c'
  8528  2918  345F               	retlw	95	;'_'
  8529  2919  3477               	retlw	119	;'w'
  8530  291A  3464               	retlw	100	;'d'
  8531  291B  3474               	retlw	116	;'t'
  8532  291C  345F               	retlw	95	;'_'
  8533  291D  3463               	retlw	99	;'c'
  8534  291E  346C               	retlw	108	;'l'
  8535  291F  3472               	retlw	114	;'r'
  8536  2920  3400               	retlw	0
  8537                           
  8538                           	psect	stringtext19
  8539  2921                     __pstringtext19:	
  8540  2921                     STR_20:	
  8541  2921  340A               	retlw	10
  8542  2922  340D               	retlw	13
  8543  2923  3443               	retlw	67	;'C'
  8544  2924  344F               	retlw	79	;'O'
  8545  2925  344E               	retlw	78	;'N'
  8546  2926  3446               	retlw	70	;'F'
  8547  2927  3449               	retlw	73	;'I'
  8548  2928  3447               	retlw	71	;'G'
  8549  2929  345F               	retlw	95	;'_'
  8550  292A  3445               	retlw	69	;'E'
  8551  292B  3452               	retlw	82	;'R'
  8552  292C  3452               	retlw	82	;'R'
  8553  292D  344F               	retlw	79	;'O'
  8554  292E  3452               	retlw	82	;'R'
  8555  292F  3400               	retlw	0
  8556                           
  8557                           	psect	stringtext20
  8558  293E                     __pstringtext20:	
  8559  293E                     STR_6:	
  8560  293E  3464               	retlw	100	;'d'
  8561  293F  3465               	retlw	101	;'e'
  8562  2940  3463               	retlw	99	;'c'
  8563  2941  3461               	retlw	97	;'a'
  8564  2942  345F               	retlw	95	;'_'
  8565  2943  3464               	retlw	100	;'d'
  8566  2944  3465               	retlw	101	;'e'
  8567  2945  3476               	retlw	118	;'v'
  8568  2946  3469               	retlw	105	;'i'
  8569  2947  3463               	retlw	99	;'c'
  8570  2948  3465               	retlw	101	;'e'
  8571  2949  342E               	retlw	46	;'.'
  8572  294A  3463               	retlw	99	;'c'
  8573  294B  3400               	retlw	0
  8574                           
  8575                           	psect	stringtext21
  8576  294C                     __pstringtext21:	
  8577  294C                     STR_4:	
  8578  294C  3476               	retlw	118	;'v'
  8579  294D  3461               	retlw	97	;'a'
  8580  294E  346C               	retlw	108	;'l'
  8581  294F  343A               	retlw	58	;':'
  8582  2950  3420               	retlw	32	;' '
  8583  2951  3425               	retlw	37	;'%'
  8584  2952  3430               	retlw	48	;'0'
  8585  2953  3434               	retlw	52	;'4'
  8586  2954  3458               	retlw	88	;'X'
  8587  2955  3425               	retlw	37	;'%'
  8588  2956  3430               	retlw	48	;'0'
  8589  2957  3434               	retlw	52	;'4'
  8590  2958  3458               	retlw	88	;'X'
  8591  2959  3400               	retlw	0
  8592                           
  8593                           	psect	stringtext22
  8594  295A                     __pstringtext22:	
  8595  295A                     STR_19:	
  8596  295A  340A               	retlw	10
  8597  295B  340D               	retlw	13
  8598  295C  3444               	retlw	68	;'D'
  8599  295D  3457               	retlw	87	;'W'
  8600  295E  344D               	retlw	77	;'M'
  8601  295F  345F               	retlw	95	;'_'
  8602  2960  3445               	retlw	69	;'E'
  8603  2961  3452               	retlw	82	;'R'
  8604  2962  3452               	retlw	82	;'R'
  8605  2963  344F               	retlw	79	;'O'
  8606  2964  3452               	retlw	82	;'R'
  8607  2965  3400               	retlw	0
  8608                           
  8609                           	psect	stringtext23
  8610  2966                     __pstringtext23:	
  8611  2966                     STR_23:	
  8612  2966  340A               	retlw	10
  8613  2967  340D               	retlw	13
  8614  2968  3444               	retlw	68	;'D'
  8615  2969  3461               	retlw	97	;'a'
  8616  296A  3474               	retlw	116	;'t'
  8617  296B  3461               	retlw	97	;'a'
  8618  296C  3453               	retlw	83	;'S'
  8619  296D  3465               	retlw	101	;'e'
  8620  296E  346E               	retlw	110	;'n'
  8621  296F  3464               	retlw	100	;'d'
  8622  2970  3400               	retlw	0
  8623                           
  8624                           	psect	stringtext24
  8625  297B                     __pstringtext24:	
  8626  297B                     STR_18:	
  8627  297B  340A               	retlw	10
  8628  297C  340D               	retlw	13
  8629  297D  3464               	retlw	100	;'d'
  8630  297E  3477               	retlw	119	;'w'
  8631  297F  345F               	retlw	95	;'_'
  8632  2980  346D               	retlw	109	;'m'
  8633  2981  3461               	retlw	97	;'a'
  8634  2982  3469               	retlw	105	;'i'
  8635  2983  346E               	retlw	110	;'n'
  8636  2984  3400               	retlw	0
  8637                           
  8638                           	psect	stringtext25
  8639  2985                     __pstringtext25:	
  8640  2985                     STR_2:	
  8641  2985  3476               	retlw	118	;'v'
  8642  2986  3461               	retlw	97	;'a'
  8643  2987  346C               	retlw	108	;'l'
  8644  2988  343A               	retlw	58	;':'
  8645  2989  3420               	retlw	32	;' '
  8646  298A  3425               	retlw	37	;'%'
  8647  298B  3430               	retlw	48	;'0'
  8648  298C  3432               	retlw	50	;'2'
  8649  298D  3458               	retlw	88	;'X'
  8650  298E  3400               	retlw	0
  8651                           
  8652                           	psect	stringtext26
  8653  298F                     __pstringtext26:	
  8654  298F                     STR_3:	
  8655  298F  3476               	retlw	118	;'v'
  8656  2990  3461               	retlw	97	;'a'
  8657  2991  346C               	retlw	108	;'l'
  8658  2992  343A               	retlw	58	;':'
  8659  2993  3420               	retlw	32	;' '
  8660  2994  3425               	retlw	37	;'%'
  8661  2995  3430               	retlw	48	;'0'
  8662  2996  3434               	retlw	52	;'4'
  8663  2997  3458               	retlw	88	;'X'
  8664  2998  3400               	retlw	0
  8665                           
  8666                           	psect	stringtext27
  8667  2999                     __pstringtext27:	
  8668  2999                     STR_22:	
  8669  2999  340A               	retlw	10
  8670  299A  340D               	retlw	13
  8671  299B  3444               	retlw	68	;'D'
  8672  299C  3457               	retlw	87	;'W'
  8673  299D  344D               	retlw	77	;'M'
  8674  299E  345F               	retlw	95	;'_'
  8675  299F  344F               	retlw	79	;'O'
  8676  29A0  344B               	retlw	75	;'K'
  8677  29A1  3400               	retlw	0
  8678                           
  8679                           	psect	stringtext28
  8680  29AA                     __pstringtext28:	
  8681  29AA                     STR_30:	
  8682  29AA  3428               	retlw	40	;'('
  8683  29AB  346E               	retlw	110	;'n'
  8684  29AC  3475               	retlw	117	;'u'
  8685  29AD  346C               	retlw	108	;'l'
  8686  29AE  346C               	retlw	108	;'l'
  8687  29AF  3429               	retlw	41	;')'
  8688  29B0  3400               	retlw	0
  8689                           
  8690                           	psect	stringtext29
  8691  0000                     __pstringtext29:	
  8692  2910                     
  8693                           ; #config settings
  8694  0000                     
  8695                           	psect	cinit
  8696  001B                     start_initialization:	
  8697  001B                     __initialization:		;BIGRAM
  8698                           
  8699                           ; Initialize objects allocated to COMMON
  8700  001B  3187  27FE  3180   	fcall	__pidataCOMMON	;fetch initializer
  8701  001E  00FC               	movwf	__pdataCOMMON& (0+127)
  8702                           
  8703                           ; Initialize objects allocated to BANK2
  8704  001F  30B8               	movlw	low __pidataBANK2
  8705  0020  0084               	movwf	4
  8706  0021  30A0               	movlw	(high __pidataBANK2)| (0+128)
  8707  0022  0085               	movwf	5
  8708  0023  3067               	movlw	low __pdataBANK2
  8709  0024  0086               	movwf	6
  8710  0025  3001               	movlw	high __pdataBANK2
  8711  0026  0087               	movwf	7
  8712  0027  3000               	movlw	0
  8713  0028  00FF               	movwf	btemp+1
  8714  0029  3009               	movlw	9
  8715  002A  31A0  20FA  3180   	fcall	init_ram
  8716                           
  8717                           ; Initialize objects allocated to BANK3
  8718  002D  309A               	movlw	low __pidataBANK3
  8719  002E  0084               	movwf	4
  8720  002F  3098               	movlw	(high __pidataBANK3)| (0+128)
  8721  0030  0085               	movwf	5
  8722  0031  30CA               	movlw	low __pdataBANK3
  8723  0032  0086               	movwf	6
  8724  0033  3001               	movlw	high __pdataBANK3
  8725  0034  0087               	movwf	7
  8726  0035  3000               	movlw	0
  8727  0036  00FF               	movwf	btemp+1
  8728  0037  301D               	movlw	29
  8729  0038  31A0  20FA  3180   	fcall	init_ram
  8730                           
  8731                           ; Initialize objects allocated to BANK4
  8732  003B  302C               	movlw	low __pidataBANK4
  8733  003C  0084               	movwf	4
  8734  003D  30A3               	movlw	(high __pidataBANK4)| (0+128)
  8735  003E  0085               	movwf	5
  8736  003F  3020               	movlw	low __pdataBANK4
  8737  0040  0086               	movwf	6
  8738  0041  3002               	movlw	high __pdataBANK4
  8739  0042  0087               	movwf	7
  8740  0043  3000               	movlw	0
  8741  0044  00FF               	movwf	btemp+1
  8742  0045  3024               	movlw	36
  8743  0046  31A0  20FA  3180   	fcall	init_ram
  8744                           
  8745                           ; Clear objects allocated to BIGRAM
  8746  0049  30F0               	movlw	low (0+12016)
  8747  004A  0084               	movwf	4
  8748  004B  302E               	movlw	high (0+12016)
  8749  004C  0085               	movwf	5
  8750  004D  3000               	movlw	0
  8751  004E  00FE               	movwf	btemp
  8752  004F  3001               	movlw	1
  8753  0050  00FF               	movwf	btemp+1
  8754  0051  31A0  20EE  3180   	fcall	clear_ram0
  8755                           
  8756                           ; Clear objects allocated to BANK2
  8757  0054  3020               	movlw	low __pbssBANK2
  8758  0055  0084               	movwf	4
  8759  0056  3001               	movlw	high __pbssBANK2
  8760  0057  0085               	movwf	5
  8761  0058  3030               	movlw	48
  8762  0059  00FE               	movwf	btemp
  8763  005A  3000               	movlw	0
  8764  005B  00FF               	movwf	btemp+1
  8765  005C  31A0  20EE  3180   	fcall	clear_ram0
  8766                           
  8767                           ; Clear objects allocated to BANK3
  8768  005F  30A0               	movlw	low __pbssBANK3
  8769  0060  0084               	movwf	4
  8770  0061  3001               	movlw	high __pbssBANK3
  8771  0062  0085               	movwf	5
  8772  0063  302A               	movlw	42
  8773  0064  00FE               	movwf	btemp
  8774  0065  3000               	movlw	0
  8775  0066  00FF               	movwf	btemp+1
  8776  0067  31A0  20EE  3180   	fcall	clear_ram0
  8777                           
  8778                           ; Clear objects allocated to BANK4
  8779  006A  3044               	movlw	low __pbssBANK4
  8780  006B  0084               	movwf	4
  8781  006C  3002               	movlw	high __pbssBANK4
  8782  006D  0085               	movwf	5
  8783  006E  3015               	movlw	21
  8784  006F  00FE               	movwf	btemp
  8785  0070  3000               	movlw	0
  8786  0071  00FF               	movwf	btemp+1
  8787  0072  31A0  20EE  3180   	fcall	clear_ram0
  8788                           
  8789                           ; Clear objects allocated to BANK5
  8790  0075  30A0               	movlw	low __pbssBANK5
  8791  0076  0084               	movwf	4
  8792  0077  3002               	movlw	high __pbssBANK5
  8793  0078  0085               	movwf	5
  8794  0079  302E               	movlw	46
  8795  007A  00FE               	movwf	btemp
  8796  007B  3000               	movlw	0
  8797  007C  00FF               	movwf	btemp+1
  8798  007D  31A0  20EE         	fcall	clear_ram0
  8799  007F                     end_of_initialization:	
  8800                           ;End of C runtime variable initialization code
  8801                           
  8802  007F                     __end_of__initialization:	
  8803  007F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8804  0080  0140               	movlb	0
  8805  0081  319C  2CDB         	ljmp	_main	;jump to C main() function
  8806                           
  8807                           	psect	dataCOMMON
  8808  007C                     __pdataCOMMON:	
  8809  007C                     _pdw3000local:	
  8810  007C                     	ds	1
  8811                           
  8812                           	psect	bssBANK2
  8813  0120                     __pbssBANK2:	
  8814  0120                     get_rx_timestamp_u64@F15761:	
  8815  0120                     	ds	8
  8816  0128                     get_tx_timestamp_u64@F15757:	
  8817  0128                     	ds	8
  8818  0130                     get_sys_timestamp_u64@F15753:	
  8819  0130                     	ds	8
  8820  0138                     _status_reg:	
  8821  0138                     	ds	4
  8822  013C                     _dev_id:	
  8823  013C                     	ds	4
  8824  0140                     _timer0ReloadVal:	
  8825  0140                     	ds	2
  8826  0142                     _RNG_ADDR:	
  8827  0142                     	ds	2
  8828  0144                     _TAG_ADDR:	
  8829  0144                     	ds	2
  8830  0146                     _EUSART_ErrorHandler:	
  8831  0146                     	ds	2
  8832  0148                     _EUSART_OverrunErrorHandler:	
  8833  0148                     	ds	2
  8834  014A                     _EUSART_FramingErrorHandler:	
  8835  014A                     	ds	2
  8836  014C                     set_MSSSP1_mode@current_mode:	
  8837  014C                     	ds	1
  8838  014D                     _battery_level:	
  8839  014D                     	ds	1
  8840  014E                     _timer0_triggered:	
  8841  014E                     	ds	1
  8842  014F                     _eusartRxLastError:	
  8843  014F                     	ds	1
  8844                           
  8845                           	psect	dataBANK2
  8846  0167                     __pdataBANK2:	
  8847  0167                     pmic_status_read@pmic_stat_read_time_count:	
  8848  0167                     	ds	2
  8849  0169                     set_led_status@tx_led_toggle_count:	
  8850  0169                     	ds	2
  8851  016B                     pmic_status_read@pmic_wdt_clr_count:	
  8852  016B                     	ds	1
  8853  016C                     _power_connected:	
  8854  016C                     	ds	1
  8855  016D                     _pic_active_mode:	
  8856  016D                     	ds	1
  8857  016E                     _pmic_stat_reg:	
  8858  016E                     	ds	1
  8859  016F                     _enable_sleep:	
  8860  016F                     	ds	1
  8861                           
  8862                           	psect	bssBANK3
  8863  01A0                     __pbssBANK3:	
  8864  01A0                     _add_time:	
  8865  01A0                     	ds	8
  8866  01A8                     _prev_ts:	
  8867  01A8                     	ds	8
  8868  01B0                     _resp_rx_ts:	
  8869  01B0                     	ds	8
  8870  01B8                     _poll_tx_ts:	
  8871  01B8                     	ds	8
  8872  01C0                     _I2C_read_buff:	
  8873  01C0                     	ds	10
  8874                           
  8875                           	psect	dataBANK3
  8876  01CA                     __pdataBANK3:	
  8877  01CA                     _config:	
  8878  01CA                     	ds	14
  8879  01D8                     _ADDR:	
  8880  01D8                     	ds	8
  8881  01E0                     _txconfig_options_ch9:	
  8882  01E0                     	ds	7
  8883                           
  8884                           	psect	bssBANK4
  8885  0244                     __pbssBANK4:	
  8886  0244                     _rx_buffer:	
  8887  0244                     	ds	21
  8888                           
  8889                           	psect	dataBANK4
  8890  0220                     __pdataBANK4:	
  8891  0220                     _tx_blink_msg:	
  8892  0220                     	ds	36
  8893                           
  8894                           	psect	bssBANK5
  8895  02A0                     __pbssBANK5:	
  8896  02A0                     _DW3000local:	
  8897  02A0                     	ds	46
  8898                           
  8899                           	psect	inittext
  8900  20FA                     init_ram:	
  8901  20FA  00FE               	movwf	126
  8902  20FB                     initloop:	
  8903  20FB  0012               	moviw fsr0++
  8904  20FC  001E               	movwi fsr1++
  8905  20FD  3001               	movlw	1
  8906  20FE  02FE               	subwf	126,f
  8907  20FF  3000               	movlw	0
  8908  2100  3BFF               	subwfb	127,f
  8909  2101  087F               	movf	127,w
  8910  2102  047E               	iorwf	126,w
  8911  2103  1903               	btfsc	3,2
  8912  2104  3400               	retlw	0
  8913  2105  28FB               	goto	initloop
  8914                           
  8915                           	psect	clrtext
  8916  20EE                     clear_ram0:	
  8917                           ;	Called with FSR0 containing the base address, and
  8918                           ;	btemp/btemp+1 has the size to clear
  8919                           
  8920  20EE  0064               	clrwdt	;clear the watchdog before getting into this loop
  8921  20EF                     clrloop0:	
  8922  20EF  0180               	clrf	0	;clear RAM location pointed to by FSR
  8923  20F0  3101               	addfsr 0,1
  8924  20F1  3001               	movlw	1
  8925  20F2  02FE               	subwf	126,f
  8926  20F3  3000               	movlw	0
  8927  20F4  3BFF               	subwfb	127,f
  8928  20F5  087F               	movf	127,w
  8929  20F6  047E               	iorwf	126,w
  8930  20F7  1903               	btfsc	3,2
  8931  20F8  3400               	retlw	0	;all done for this memory range, return
  8932  20F9  28EF               	goto	clrloop0	;have we reached the end yet?
  8933                           
  8934                           	psect	cstackBANK2
  8935  0150                     __pcstackBANK2:	
  8936  0150                     dwt_configure@scp:	
  8937                           
  8938                           ; 1 bytes @ 0x0
  8939  0150                     	ds	1
  8940  0151                     dwt_configure@mode:	
  8941                           
  8942                           ; 1 bytes @ 0x1
  8943  0151                     	ds	1
  8944  0152                     _dwt_configure$1276:	
  8945                           
  8946                           ; 2 bytes @ 0x2
  8947  0152                     	ds	2
  8948  0154                     dwt_configure@error:	
  8949                           
  8950                           ; 2 bytes @ 0x4
  8951  0154                     	ds	2
  8952  0156                     dwt_configure@sts_mnth:	
  8953                           
  8954                           ; 2 bytes @ 0x6
  8955  0156                     	ds	2
  8956  0158                     dwt_configure@flag:	
  8957                           
  8958                           ; 1 bytes @ 0x8
  8959  0158                     	ds	1
  8960  0159                     _dwt_configure$1274:	
  8961                           
  8962                           ; 1 bytes @ 0x9
  8963  0159                     	ds	1
  8964  015A                     dwt_configure@temp:	
  8965                           
  8966                           ; 4 bytes @ 0xA
  8967  015A                     	ds	4
  8968  015E                     dwt_configure@cnt:	
  8969                           
  8970                           ; 1 bytes @ 0xE
  8971  015E                     	ds	1
  8972  015F                     dwt_configure@sts_len:	
  8973                           
  8974                           ; 2 bytes @ 0xF
  8975  015F                     	ds	2
  8976  0161                     dwt_configure@preamble_len:	
  8977                           
  8978                           ; 2 bytes @ 0x11
  8979  0161                     	ds	2
  8980  0163                     dwt_configure@chan:	
  8981                           
  8982                           ; 1 bytes @ 0x13
  8983  0163                     	ds	1
  8984  0164                     dwt_configure@config:	
  8985                           
  8986                           ; 1 bytes @ 0x14
  8987  0164                     	ds	1
  8988  0165                     ??_main:	
  8989                           
  8990                           ; 1 bytes @ 0x15
  8991  0165                     	ds	2
  8992                           
  8993                           	psect	cstackBANK1
  8994  00A0                     __pcstackBANK1:	
  8995  00A0                     ?_dwt_writetodevice:	
  8996  00A0                     ?_dwt_readfromdevice:	
  8997                           ; 1 bytes @ 0x0
  8998                           
  8999  00A0                     ?_dwt_read8bitoffsetreg:	
  9000                           ; 1 bytes @ 0x0
  9001                           
  9002  00A0                     ?_dwt_modify32bitoffsetreg:	
  9003                           ; 1 bytes @ 0x0
  9004                           
  9005  00A0                     ?_dwt_modify16bitoffsetreg:	
  9006                           ; 1 bytes @ 0x0
  9007                           
  9008  00A0                     ?_dwt_modify8bitoffsetreg:	
  9009                           ; 1 bytes @ 0x0
  9010                           
  9011  00A0                     dwt_writetodevice@regFileID:	
  9012                           ; 1 bytes @ 0x0
  9013                           
  9014  00A0                     dwt_readfromdevice@regFileID:	
  9015                           ; 4 bytes @ 0x0
  9016                           
  9017  00A0                     dwt_read8bitoffsetreg@regFileID:	
  9018                           ; 4 bytes @ 0x0
  9019                           
  9020  00A0                     dwt_modify32bitoffsetreg@regFileID:	
  9021                           ; 4 bytes @ 0x0
  9022                           
  9023  00A0                     dwt_modify16bitoffsetreg@regFileID:	
  9024                           ; 4 bytes @ 0x0
  9025                           
  9026  00A0                     dwt_modify8bitoffsetreg@regFileID:	
  9027                           ; 4 bytes @ 0x0
  9028                           
  9029                           
  9030                           ; 4 bytes @ 0x0
  9031  00A0                     	ds	4
  9032  00A4                     dwt_writetodevice@index:	
  9033  00A4                     dwt_readfromdevice@index:	
  9034                           ; 2 bytes @ 0x4
  9035                           
  9036  00A4                     dwt_read8bitoffsetreg@regOffset:	
  9037                           ; 2 bytes @ 0x4
  9038                           
  9039  00A4                     dwt_modify32bitoffsetreg@regOffset:	
  9040                           ; 4 bytes @ 0x4
  9041                           
  9042  00A4                     dwt_modify16bitoffsetreg@regOffset:	
  9043                           ; 4 bytes @ 0x4
  9044                           
  9045  00A4                     dwt_modify8bitoffsetreg@regOffset:	
  9046                           ; 4 bytes @ 0x4
  9047                           
  9048                           
  9049                           ; 4 bytes @ 0x4
  9050  00A4                     	ds	2
  9051  00A6                     dwt_writetodevice@length:	
  9052  00A6                     dwt_readfromdevice@length:	
  9053                           ; 4 bytes @ 0x6
  9054                           
  9055                           
  9056                           ; 4 bytes @ 0x6
  9057  00A6                     	ds	2
  9058  00A8                     dwt_modify8bitoffsetreg@_and:	
  9059  00A8                     dwt_modify16bitoffsetreg@_and:	
  9060                           ; 1 bytes @ 0x8
  9061                           
  9062  00A8                     dwt_modify32bitoffsetreg@_and:	
  9063                           ; 2 bytes @ 0x8
  9064                           
  9065                           
  9066                           ; 4 bytes @ 0x8
  9067  00A8                     	ds	1
  9068  00A9                     dwt_modify8bitoffsetreg@_or:	
  9069                           
  9070                           ; 1 bytes @ 0x9
  9071  00A9                     	ds	1
  9072  00AA                     dwt_readfromdevice@buffer:	
  9073  00AA                     dwt_writetodevice@buffer:	
  9074                           ; 1 bytes @ 0xA
  9075                           
  9076  00AA                     dwt_modify16bitoffsetreg@_or:	
  9077                           ; 2 bytes @ 0xA
  9078                           
  9079                           
  9080                           ; 2 bytes @ 0xA
  9081  00AA                     	ds	1
  9082  00AB                     ?_dwt_read16bitoffsetreg:	
  9083  00AB                     ?_dwt_read32bitoffsetreg:	
  9084                           ; 2 bytes @ 0xB
  9085                           
  9086  00AB                     dwt_read32bitoffsetreg@regFileID:	
  9087                           ; 4 bytes @ 0xB
  9088                           
  9089  00AB                     dwt_read16bitoffsetreg@regFileID:	
  9090                           ; 4 bytes @ 0xB
  9091                           
  9092                           
  9093                           ; 4 bytes @ 0xB
  9094  00AB                     	ds	1
  9095  00AC                     ?_dwt_write32bitoffsetreg:	
  9096  00AC                     ?_dwt_write16bitoffsetreg:	
  9097                           ; 1 bytes @ 0xC
  9098                           
  9099  00AC                     ?_dwt_write8bitoffsetreg:	
  9100                           ; 1 bytes @ 0xC
  9101                           
  9102  00AC                     ??__dwt_prog_ldo_and_bias_tune:	
  9103                           ; 1 bytes @ 0xC
  9104                           
  9105  00AC                     dwt_write32bitoffsetreg@regFileID:	
  9106                           ; 1 bytes @ 0xC
  9107                           
  9108  00AC                     dwt_write16bitoffsetreg@regFileID:	
  9109                           ; 4 bytes @ 0xC
  9110                           
  9111  00AC                     dwt_write8bitoffsetreg@regFileID:	
  9112                           ; 4 bytes @ 0xC
  9113                           
  9114  00AC                     dwt_modify32bitoffsetreg@_or:	
  9115                           ; 4 bytes @ 0xC
  9116                           
  9117                           
  9118                           ; 4 bytes @ 0xC
  9119  00AC                     	ds	3
  9120  00AF                     dwt_read32bitoffsetreg@regOffset:	
  9121  00AF                     dwt_read16bitoffsetreg@regOffset:	
  9122                           ; 4 bytes @ 0xF
  9123                           
  9124                           
  9125                           ; 4 bytes @ 0xF
  9126  00AF                     	ds	1
  9127  00B0                     dwt_write32bitoffsetreg@regOffset:	
  9128  00B0                     dwt_write16bitoffsetreg@regOffset:	
  9129                           ; 4 bytes @ 0x10
  9130                           
  9131  00B0                     dwt_write8bitoffsetreg@regOffset:	
  9132                           ; 4 bytes @ 0x10
  9133                           
  9134  00B0                     dwt_modify32bitoffsetreg@buf:	
  9135                           ; 4 bytes @ 0x10
  9136                           
  9137                           
  9138                           ; 8 bytes @ 0x10
  9139  00B0                     	ds	3
  9140  00B3                     ??_dwt_read32bitoffsetreg:	
  9141  00B3                     dwt_read16bitoffsetreg@regval:	
  9142                           ; 1 bytes @ 0x13
  9143                           
  9144                           
  9145                           ; 2 bytes @ 0x13
  9146  00B3                     	ds	1
  9147  00B4                     dwt_write8bitoffsetreg@regval:	
  9148  00B4                     dwt_write16bitoffsetreg@regval:	
  9149                           ; 1 bytes @ 0x14
  9150                           
  9151  00B4                     dwt_write32bitoffsetreg@regval:	
  9152                           ; 2 bytes @ 0x14
  9153                           
  9154                           
  9155                           ; 4 bytes @ 0x14
  9156  00B4                     	ds	1
  9157  00B5                     dwt_read16bitoffsetreg@buffer:	
  9158                           
  9159                           ; 2 bytes @ 0x15
  9160  00B5                     	ds	1
  9161  00B6                     dwt_force_clocks@regvalue0:	
  9162                           
  9163                           ; 2 bytes @ 0x16
  9164  00B6                     	ds	1
  9165  00B7                     ??_dwt_checkidlerc:	
  9166                           
  9167                           ; 1 bytes @ 0x17
  9168  00B7                     	ds	1
  9169  00B8                     ?_dwt_setdwstate:	
  9170  00B8                     ?_dwt_writetxfctrl:	
  9171                           ; 1 bytes @ 0x18
  9172                           
  9173  00B8                     ?_dwt_enable_rftx_blocks:	
  9174                           ; 1 bytes @ 0x18
  9175                           
  9176  00B8                     __dwt_kick_dgc_on_wakeup@channel:	
  9177                           ; 1 bytes @ 0x18
  9178                           
  9179  00B8                     dwt_setdwstate@state:	
  9180                           ; 1 bytes @ 0x18
  9181                           
  9182  00B8                     dwt_writetxfctrl@txFrameLength:	
  9183                           ; 2 bytes @ 0x18
  9184                           
  9185  00B8                     dwt_write32bitoffsetreg@buffer:	
  9186                           ; 2 bytes @ 0x18
  9187                           
  9188  00B8                     dwt_enable_rftx_blocks@channel:	
  9189                           ; 4 bytes @ 0x18
  9190                           
  9191                           
  9192                           ; 4 bytes @ 0x18
  9193  00B8                     	ds	2
  9194  00BA                     ??_dwt_setdwstate:	
  9195  00BA                     dwt_writetxfctrl@txBufferOffset:	
  9196                           ; 1 bytes @ 0x1A
  9197                           
  9198                           
  9199                           ; 2 bytes @ 0x1A
  9200  00BA                     	ds	1
  9201  00BB                     dwt_read32bitoffsetreg@buffer:	
  9202  00BB                     dwt_checkidlerc@reg:	
  9203                           ; 4 bytes @ 0x1B
  9204                           
  9205                           
  9206                           ; 4 bytes @ 0x1B
  9207  00BB                     	ds	1
  9208  00BC                     dwt_writetxfctrl@ranging:	
  9209  00BC                     dwt_write32bitoffsetreg@j:	
  9210                           ; 1 bytes @ 0x1C
  9211                           
  9212                           
  9213                           ; 2 bytes @ 0x1C
  9214  00BC                     	ds	1
  9215  00BD                     ??_dwt_writetxfctrl:	
  9216                           
  9217                           ; 1 bytes @ 0x1D
  9218  00BD                     	ds	1
  9219  00BE                     ?_dwt_enable_rf_tx:	
  9220  00BE                     ?_dwt_writetxdata:	
  9221                           ; 1 bytes @ 0x1E
  9222                           
  9223  00BE                     dwt_writetxdata@txDataLength:	
  9224                           ; 2 bytes @ 0x1E
  9225                           
  9226  00BE                     dwt_configmrxlut@lut0:	
  9227                           ; 2 bytes @ 0x1E
  9228                           
  9229  00BE                     dwt_enable_rf_tx@channel:	
  9230                           ; 4 bytes @ 0x1E
  9231                           
  9232                           
  9233                           ; 4 bytes @ 0x1E
  9234  00BE                     	ds	1
  9235  00BF                     dwt_read32bitoffsetreg@regval:	
  9236                           
  9237                           ; 4 bytes @ 0x1F
  9238  00BF                     	ds	1
  9239  00C0                     dwt_writetxdata@txDataBytes:	
  9240                           
  9241                           ; 1 bytes @ 0x20
  9242  00C0                     	ds	1
  9243  00C1                     dwt_writetxdata@txBufferOffset:	
  9244                           
  9245                           ; 2 bytes @ 0x21
  9246  00C1                     	ds	1
  9247  00C2                     dwt_enable_rf_tx@switch_control:	
  9248  00C2                     dwt_configmrxlut@lut1:	
  9249                           ; 1 bytes @ 0x22
  9250                           
  9251                           
  9252                           ; 4 bytes @ 0x22
  9253  00C2                     	ds	1
  9254  00C3                     ?_dwt_calcbandwidthadj:	
  9255  00C3                     dwt_read32bitoffsetreg@j:	
  9256                           ; 1 bytes @ 0x23
  9257                           
  9258  00C3                     dwt_calcbandwidthadj@target_count:	
  9259                           ; 2 bytes @ 0x23
  9260                           
  9261                           
  9262                           ; 2 bytes @ 0x23
  9263  00C3                     	ds	2
  9264  00C5                     ?_dwt_run_pgfcal:	
  9265  00C5                     ?__dwt_otpread:	
  9266                           ; 2 bytes @ 0x25
  9267                           
  9268  00C5                     ?_dwt_readdevid:	
  9269                           ; 4 bytes @ 0x25
  9270                           
  9271  00C5                     __dwt_otpread@address:	
  9272                           ; 4 bytes @ 0x25
  9273                           
  9274  00C5                     dwt_calcbandwidthadj@channel:	
  9275                           ; 2 bytes @ 0x25
  9276                           
  9277  00C5                     dwt_starttx@sys_state:	
  9278                           ; 2 bytes @ 0x25
  9279                           
  9280                           
  9281                           ; 4 bytes @ 0x25
  9282  00C5                     	ds	1
  9283  00C6                     dwt_configmrxlut@lut2:	
  9284                           
  9285                           ; 4 bytes @ 0x26
  9286  00C6                     	ds	1
  9287  00C7                     ??_dwt_calcbandwidthadj:	
  9288  00C7                     dwt_run_pgfcal@data:	
  9289                           ; 1 bytes @ 0x27
  9290                           
  9291                           
  9292                           ; 4 bytes @ 0x27
  9293  00C7                     	ds	2
  9294  00C9                     ??_dwt_configuretxrf:	
  9295  00C9                     dwt_starttx@retval:	
  9296                           ; 1 bytes @ 0x29
  9297                           
  9298  00C9                     __dwt_otpread@ret_data:	
  9299                           ; 2 bytes @ 0x29
  9300                           
  9301                           
  9302                           ; 4 bytes @ 0x29
  9303  00C9                     	ds	1
  9304  00CA                     dwt_configmrxlut@lut3:	
  9305                           
  9306                           ; 4 bytes @ 0x2A
  9307  00CA                     	ds	1
  9308  00CB                     dwt_configuretxrf@channel:	
  9309  00CB                     dwt_run_pgfcal@flag:	
  9310                           ; 1 bytes @ 0x2B
  9311                           
  9312  00CB                     dwt_starttx@checkTxOK:	
  9313                           ; 1 bytes @ 0x2B
  9314                           
  9315  00CB                     dwt_writetxfctrl@reg32:	
  9316                           ; 2 bytes @ 0x2B
  9317                           
  9318                           
  9319                           ; 4 bytes @ 0x2B
  9320  00CB                     	ds	1
  9321  00CC                     dwt_configuretxrf@config:	
  9322  00CC                     dwt_run_pgfcal@result:	
  9323                           ; 1 bytes @ 0x2C
  9324                           
  9325                           
  9326                           ; 2 bytes @ 0x2C
  9327  00CC                     	ds	1
  9328  00CD                     ?_dwt_initialise:	
  9329  00CD                     dwt_starttx@mode:	
  9330                           ; 2 bytes @ 0x2D
  9331                           
  9332  00CD                     dwt_initialise@mode:	
  9333                           ; 1 bytes @ 0x2D
  9334                           
  9335                           
  9336                           ; 2 bytes @ 0x2D
  9337  00CD                     	ds	1
  9338  00CE                     dwt_configmrxlut@lut4:	
  9339  00CE                     dwt_run_pgfcal@val:	
  9340                           ; 4 bytes @ 0x2E
  9341                           
  9342                           
  9343                           ; 4 bytes @ 0x2E
  9344  00CE                     	ds	1
  9345  00CF                     ??_transmitt_beacon_pkt:	
  9346  00CF                     ??_dwt_initialise:	
  9347                           ; 1 bytes @ 0x2F
  9348                           
  9349                           
  9350                           ; 1 bytes @ 0x2F
  9351  00CF                     	ds	3
  9352  00D2                     dwt_run_pgfcal@cnt:	
  9353  00D2                     dwt_configmrxlut@lut5:	
  9354                           ; 1 bytes @ 0x32
  9355                           
  9356                           
  9357                           ; 4 bytes @ 0x32
  9358  00D2                     	ds	1
  9359  00D3                     ?_dwt_pgf_cal:	
  9360  00D3                     dwt_pgf_cal@ldoen:	
  9361                           ; 2 bytes @ 0x33
  9362                           
  9363                           
  9364                           ; 2 bytes @ 0x33
  9365  00D3                     	ds	1
  9366  00D4                     dwt_initialise@ldo_tune_lo:	
  9367                           
  9368                           ; 4 bytes @ 0x34
  9369  00D4                     	ds	1
  9370  00D5                     dwt_pgf_cal@temp:	
  9371                           
  9372                           ; 2 bytes @ 0x35
  9373  00D5                     	ds	1
  9374  00D6                     dwt_configmrxlut@lut6:	
  9375                           
  9376                           ; 4 bytes @ 0x36
  9377  00D6                     	ds	1
  9378  00D7                     dwt_pgf_cal@val:	
  9379                           
  9380                           ; 2 bytes @ 0x37
  9381  00D7                     	ds	1
  9382  00D8                     dwt_initialise@ldo_tune_hi:	
  9383                           
  9384                           ; 4 bytes @ 0x38
  9385  00D8                     	ds	2
  9386  00DA                     ?_dwt_configure:	
  9387                           
  9388                           ; 2 bytes @ 0x3A
  9389  00DA                     	ds	2
  9390  00DC                     ??_dwt_configure:	
  9391                           
  9392                           ; 1 bytes @ 0x3C
  9393  00DC                     	ds	19
  9394  00EF                     ??_dw_main:	
  9395                           
  9396                           ; 1 bytes @ 0x4F
  9397  00EF                     	ds	1
  9398                           
  9399                           	psect	cstackCOMMON
  9400  0070                     __pcstackCOMMON:	
  9401  0070                     ?_isdigit:	
  9402  0070                     ?_OSCILLATOR_Initialize:	
  9403                           ; 1 bit 
  9404                           
  9405  0070                     ?_PMD_Initialize:	
  9406                           ; 1 bytes @ 0x0
  9407                           
  9408  0070                     ?_set_MSSSP1_mode:	
  9409                           ; 1 bytes @ 0x0
  9410                           
  9411  0070                     ?_init_bq25895:	
  9412                           ; 1 bytes @ 0x0
  9413                           
  9414  0070                     ?_TMR0_Initialize:	
  9415                           ; 1 bytes @ 0x0
  9416                           
  9417  0070                     ?_dw_main:	
  9418                           ; 1 bytes @ 0x0
  9419                           
  9420  0070                     ?_pmic_status_read:	
  9421                           ; 1 bytes @ 0x0
  9422                           
  9423  0070                     ?_transmitt_beacon_pkt:	
  9424                           ; 1 bytes @ 0x0
  9425                           
  9426  0070                     ?_set_led_status:	
  9427                           ; 1 bytes @ 0x0
  9428                           
  9429  0070                     ?_dwt_checkidlerc:	
  9430                           ; 1 bytes @ 0x0
  9431                           
  9432  0070                     ?_dwt_setplenfine:	
  9433                           ; 1 bytes @ 0x0
  9434                           
  9435  0070                     ?_i2c_start:	
  9436                           ; 1 bytes @ 0x0
  9437                           
  9438  0070                     ?_i2c_write:	
  9439                           ; 1 bytes @ 0x0
  9440                           
  9441  0070                     ?_i2c_stop:	
  9442                           ; 1 bytes @ 0x0
  9443                           
  9444  0070                     ?_i2c_restart:	
  9445                           ; 1 bytes @ 0x0
  9446                           
  9447  0070                     ?_i2c_read:	
  9448                           ; 1 bytes @ 0x0
  9449                           
  9450  0070                     ?_i2c_init:	
  9451                           ; 1 bytes @ 0x0
  9452                           
  9453  0070                     ?_TMR0_Reload:	
  9454                           ; 1 bytes @ 0x0
  9455                           
  9456  0070                     ??_TMR0_Reload:	
  9457                           ; 1 bytes @ 0x0
  9458                           
  9459  0070                     ?_PIN_MANAGER_Initialize:	
  9460                           ; 1 bytes @ 0x0
  9461                           
  9462  0070                     ?_SYSTEM_Initialize:	
  9463                           ; 1 bytes @ 0x0
  9464                           
  9465  0070                     ?_EUSART_Initialize:	
  9466                           ; 1 bytes @ 0x0
  9467                           
  9468  0070                     ?_EUSART_Write:	
  9469                           ; 1 bytes @ 0x0
  9470                           
  9471  0070                     ?_SPI1_Open:	
  9472                           ; 1 bytes @ 0x0
  9473                           
  9474  0070                     ?_SPI1_ExchangeByte:	
  9475                           ; 1 bytes @ 0x0
  9476                           
  9477  0070                     ?_main:	
  9478                           ; 1 bytes @ 0x0
  9479                           
  9480  0070                     ?__dwt_prog_ldo_and_bias_tune:	
  9481                           ; 1 bytes @ 0x0
  9482                           
  9483  0070                     ?__dwt_kick_dgc_on_wakeup:	
  9484                           ; 1 bytes @ 0x0
  9485                           
  9486  0070                     ?_dwt_configuretxrf:	
  9487                           ; 1 bytes @ 0x0
  9488                           
  9489  0070                     ?_dwt_disable_rf_tx:	
  9490                           ; 1 bytes @ 0x0
  9491                           
  9492  0070                     ?_dwt_disable_rftx_blocks:	
  9493                           ; 1 bytes @ 0x0
  9494                           
  9495  0070                     ?_reset_DWIC:	
  9496                           ; 1 bytes @ 0x0
  9497                           
  9498  0070                     ?_bq25895_WDT_reset:	
  9499                           ; 1 bytes @ 0x0
  9500                           
  9501  0070                     ?_INTERRUPT_InterruptManager:	
  9502                           ; 1 bytes @ 0x0
  9503                           
  9504  0070                     ??_INTERRUPT_InterruptManager:	
  9505                           ; 1 bytes @ 0x0
  9506                           
  9507  0070                     ?_dwt_starttx:	
  9508                           ; 1 bytes @ 0x0
  9509                           
  9510                           
  9511                           ; 2 bytes @ 0x0
  9512  0070                     	ds	1
  9513  0071                     ?_Sleep:	
  9514  0071                     ??_OSCILLATOR_Initialize:	
  9515                           ; 1 bytes @ 0x1
  9516                           
  9517  0071                     ??_PMD_Initialize:	
  9518                           ; 1 bytes @ 0x1
  9519                           
  9520  0071                     ??_TMR0_Initialize:	
  9521                           ; 1 bytes @ 0x1
  9522                           
  9523  0071                     ??_set_led_status:	
  9524                           ; 1 bytes @ 0x1
  9525                           
  9526  0071                     ?_dwt_generatecrc8:	
  9527                           ; 1 bytes @ 0x1
  9528                           
  9529  0071                     ??_i2c_start:	
  9530                           ; 1 bytes @ 0x1
  9531                           
  9532  0071                     ??_i2c_write:	
  9533                           ; 1 bytes @ 0x1
  9534                           
  9535  0071                     ??_i2c_stop:	
  9536                           ; 1 bytes @ 0x1
  9537                           
  9538  0071                     ??_i2c_restart:	
  9539                           ; 1 bytes @ 0x1
  9540                           
  9541  0071                     ??_i2c_read:	
  9542                           ; 1 bytes @ 0x1
  9543                           
  9544  0071                     ??_i2c_init:	
  9545                           ; 1 bytes @ 0x1
  9546                           
  9547  0071                     ?_memset:	
  9548                           ; 1 bytes @ 0x1
  9549                           
  9550  0071                     ??_isdigit:	
  9551                           ; 1 bytes @ 0x1
  9552                           
  9553  0071                     ??_EUSART_Initialize:	
  9554                           ; 1 bytes @ 0x1
  9555                           
  9556  0071                     ??_EUSART_Write:	
  9557                           ; 1 bytes @ 0x1
  9558                           
  9559  0071                     ??_SPI1_Open:	
  9560                           ; 1 bytes @ 0x1
  9561                           
  9562  0071                     ??_SPI1_ExchangeByte:	
  9563                           ; 1 bytes @ 0x1
  9564                           
  9565  0071                     ?_copybits8:	
  9566                           ; 1 bytes @ 0x1
  9567                           
  9568  0071                     ?___wmul:	
  9569                           ; 1 bytes @ 0x1
  9570                           
  9571  0071                     ?___lwdiv:	
  9572                           ; 2 bytes @ 0x1
  9573                           
  9574  0071                     ?___ftpack:	
  9575                           ; 2 bytes @ 0x1
  9576                           
  9577  0071                     ?___lmul:	
  9578                           ; 3 bytes @ 0x1
  9579                           
  9580  0071                     EUSART_Write@txData:	
  9581                           ; 4 bytes @ 0x1
  9582                           
  9583  0071                     SPI1_ExchangeByte@data:	
  9584                           ; 1 bytes @ 0x1
  9585                           
  9586  0071                     copybits8@mask:	
  9587                           ; 1 bytes @ 0x1
  9588                           
  9589  0071                     i2c_write@data:	
  9590                           ; 1 bytes @ 0x1
  9591                           
  9592  0071                     i2c_read@ack:	
  9593                           ; 1 bytes @ 0x1
  9594                           
  9595  0071                     _isdigit$2884:	
  9596                           ; 1 bytes @ 0x1
  9597                           
  9598  0071                     dwt_generatecrc8@byteArray:	
  9599                           ; 1 bytes @ 0x1
  9600                           
  9601  0071                     ___wmul@multiplier:	
  9602                           ; 2 bytes @ 0x1
  9603                           
  9604  0071                     ___lwdiv@divisor:	
  9605                           ; 2 bytes @ 0x1
  9606                           
  9607  0071                     memset@c:	
  9608                           ; 2 bytes @ 0x1
  9609                           
  9610  0071                     ___ftpack@arg:	
  9611                           ; 2 bytes @ 0x1
  9612                           
  9613  0071                     Sleep@time:	
  9614                           ; 3 bytes @ 0x1
  9615                           
  9616  0071                     ___lmul@multiplier:	
  9617                           ; 4 bytes @ 0x1
  9618                           
  9619                           
  9620                           ; 4 bytes @ 0x1
  9621  0071                     	ds	1
  9622  0072                     ?_i2c_multi_write:	
  9623  0072                     ?_i2c_single_read:	
  9624                           ; 1 bytes @ 0x2
  9625                           
  9626  0072                     ?_i2c_single_write:	
  9627                           ; 1 bytes @ 0x2
  9628                           
  9629  0072                     ?_printf_string:	
  9630                           ; 1 bytes @ 0x2
  9631                           
  9632  0072                     ?_putch:	
  9633                           ; 1 bytes @ 0x2
  9634                           
  9635  0072                     ?_SPI1_WriteBlock:	
  9636                           ; 1 bytes @ 0x2
  9637                           
  9638  0072                     ?_SPI1_ReadBlock:	
  9639                           ; 1 bytes @ 0x2
  9640                           
  9641  0072                     ?_i2c_multi_read:	
  9642                           ; 1 bytes @ 0x2
  9643                           
  9644  0072                     putch@txData:	
  9645                           ; 2 bytes @ 0x2
  9646                           
  9647  0072                     copybits8@new_value:	
  9648                           ; 1 bytes @ 0x2
  9649                           
  9650  0072                     i2c_multi_write@reg_addr:	
  9651                           ; 1 bytes @ 0x2
  9652                           
  9653  0072                     i2c_multi_read@reg_addr:	
  9654                           ; 1 bytes @ 0x2
  9655                           
  9656  0072                     i2c_single_write@reg_addr:	
  9657                           ; 1 bytes @ 0x2
  9658                           
  9659  0072                     i2c_single_read@reg_addr:	
  9660                           ; 1 bytes @ 0x2
  9661                           
  9662  0072                     isdigit@c:	
  9663                           ; 1 bytes @ 0x2
  9664                           
  9665  0072                     printf_string@data:	
  9666                           ; 1 bytes @ 0x2
  9667                           
  9668  0072                     SPI1_WriteBlock@block:	
  9669                           ; 2 bytes @ 0x2
  9670                           
  9671  0072                     SPI1_ReadBlock@block:	
  9672                           ; 2 bytes @ 0x2
  9673                           
  9674                           
  9675                           ; 2 bytes @ 0x2
  9676  0072                     	ds	1
  9677  0073                     ??_i2c_single_read:	
  9678  0073                     ??_putch:	
  9679                           ; 1 bytes @ 0x3
  9680                           
  9681  0073                     ??_copybits8:	
  9682                           ; 1 bytes @ 0x3
  9683                           
  9684  0073                     copybits8@value:	
  9685                           ; 1 bytes @ 0x3
  9686                           
  9687  0073                     i2c_multi_write@data:	
  9688                           ; 1 bytes @ 0x3
  9689                           
  9690  0073                     i2c_single_write@data:	
  9691                           ; 1 bytes @ 0x3
  9692                           
  9693  0073                     dwt_generatecrc8@len:	
  9694                           ; 1 bytes @ 0x3
  9695                           
  9696  0073                     i2c_multi_read@data:	
  9697                           ; 2 bytes @ 0x3
  9698                           
  9699  0073                     ___wmul@multiplicand:	
  9700                           ; 2 bytes @ 0x3
  9701                           
  9702  0073                     ___lwdiv@dividend:	
  9703                           ; 2 bytes @ 0x3
  9704                           
  9705  0073                     memset@n:	
  9706                           ; 2 bytes @ 0x3
  9707                           
  9708                           
  9709                           ; 2 bytes @ 0x3
  9710  0073                     	ds	1
  9711  0074                     ??_i2c_single_write:	
  9712  0074                     ??_printf_string:	
  9713                           ; 1 bytes @ 0x4
  9714                           
  9715  0074                     i2c_multi_write@length:	
  9716                           ; 1 bytes @ 0x4
  9717                           
  9718  0074                     i2c_single_read@I2C_rsp:	
  9719                           ; 1 bytes @ 0x4
  9720                           
  9721  0074                     ___ftpack@exp:	
  9722                           ; 1 bytes @ 0x4
  9723                           
  9724  0074                     SPI1_WriteBlock@blockSize:	
  9725                           ; 1 bytes @ 0x4
  9726                           
  9727  0074                     SPI1_ReadBlock@blockSize:	
  9728                           ; 2 bytes @ 0x4
  9729                           
  9730                           
  9731                           ; 2 bytes @ 0x4
  9732  0074                     	ds	1
  9733  0075                     ??_Sleep:	
  9734  0075                     ??_i2c_multi_write:	
  9735                           ; 1 bytes @ 0x5
  9736                           
  9737  0075                     ??_memset:	
  9738                           ; 1 bytes @ 0x5
  9739                           
  9740  0075                     ??___wmul:	
  9741                           ; 1 bytes @ 0x5
  9742                           
  9743  0075                     ??___lwdiv:	
  9744                           ; 1 bytes @ 0x5
  9745                           
  9746  0075                     dwt_generatecrc8@crcRemainderInit:	
  9747                           ; 1 bytes @ 0x5
  9748                           
  9749  0075                     i2c_multi_read@length:	
  9750                           ; 1 bytes @ 0x5
  9751                           
  9752  0075                     i2c_single_write@device_addr:	
  9753                           ; 1 bytes @ 0x5
  9754                           
  9755  0075                     i2c_single_read@I2C_data:	
  9756                           ; 1 bytes @ 0x5
  9757                           
  9758  0075                     ___ftpack@sign:	
  9759                           ; 1 bytes @ 0x5
  9760                           
  9761  0075                     ___wmul@product:	
  9762                           ; 1 bytes @ 0x5
  9763                           
  9764  0075                     ___lmul@multiplicand:	
  9765                           ; 2 bytes @ 0x5
  9766                           
  9767                           
  9768                           ; 4 bytes @ 0x5
  9769  0075                     	ds	1
  9770  0076                     ??_dwt_generatecrc8:	
  9771  0076                     ??_i2c_multi_read:	
  9772                           ; 1 bytes @ 0x6
  9773                           
  9774  0076                     ??___ftpack:	
  9775                           ; 1 bytes @ 0x6
  9776                           
  9777  0076                     ??_SPI1_WriteBlock:	
  9778                           ; 1 bytes @ 0x6
  9779                           
  9780  0076                     ??_SPI1_ReadBlock:	
  9781                           ; 1 bytes @ 0x6
  9782                           
  9783  0076                     SPI1_Open@spi1UniqueConfiguration:	
  9784                           ; 1 bytes @ 0x6
  9785                           
  9786  0076                     i2c_single_write@I2C_rsp:	
  9787                           ; 1 bytes @ 0x6
  9788                           
  9789  0076                     i2c_single_read@device_addr:	
  9790                           ; 1 bytes @ 0x6
  9791                           
  9792  0076                     ___lwdiv@counter:	
  9793                           ; 1 bytes @ 0x6
  9794                           
  9795  0076                     memset@p1:	
  9796                           ; 1 bytes @ 0x6
  9797                           
  9798  0076                     SPI1_WriteBlock@data:	
  9799                           ; 1 bytes @ 0x6
  9800                           
  9801  0076                     Sleep@i:	
  9802                           ; 2 bytes @ 0x6
  9803                           
  9804                           
  9805                           ; 4 bytes @ 0x6
  9806  0076                     	ds	1
  9807  0077                     ??_set_MSSSP1_mode:	
  9808  0077                     ??_bq25895_WDT_reset:	
  9809                           ; 1 bytes @ 0x7
  9810                           
  9811  0077                     dwt_generatecrc8@data:	
  9812                           ; 1 bytes @ 0x7
  9813                           
  9814  0077                     i2c_multi_write@device_addr:	
  9815                           ; 1 bytes @ 0x7
  9816                           
  9817  0077                     memset@p:	
  9818                           ; 1 bytes @ 0x7
  9819                           
  9820  0077                     SPI1_ReadBlock@data:	
  9821                           ; 1 bytes @ 0x7
  9822                           
  9823  0077                     ___lwdiv@quotient:	
  9824                           ; 2 bytes @ 0x7
  9825                           
  9826                           
  9827                           ; 2 bytes @ 0x7
  9828  0077                     	ds	1
  9829  0078                     ??_writetospiwithcrc:	
  9830  0078                     ??_writetospi:	
  9831                           ; 1 bytes @ 0x8
  9832                           
  9833  0078                     i2c_multi_write@I2C_rsp:	
  9834                           ; 1 bytes @ 0x8
  9835                           
  9836  0078                     set_MSSSP1_mode@state:	
  9837                           ; 1 bytes @ 0x8
  9838                           
  9839  0078                     dwt_generatecrc8@byte:	
  9840                           ; 1 bytes @ 0x8
  9841                           
  9842                           
  9843                           ; 2 bytes @ 0x8
  9844  0078                     	ds	1
  9845  0079                     ??_readfromspi:	
  9846  0079                     ?_lipo_battery_level:	
  9847                           ; 1 bytes @ 0x9
  9848                           
  9849  0079                     ??___lmul:	
  9850                           ; 1 bytes @ 0x9
  9851                           
  9852  0079                     ??___lltoft:	
  9853                           ; 1 bytes @ 0x9
  9854                           
  9855  0079                     ??___lwmod:	
  9856                           ; 1 bytes @ 0x9
  9857                           
  9858  0079                     i2c_multi_write@j:	
  9859                           ; 1 bytes @ 0x9
  9860                           
  9861  0079                     set_MSSSP1_mode@mode:	
  9862                           ; 1 bytes @ 0x9
  9863                           
  9864  0079                     lipo_battery_level@battery_volt:	
  9865                           ; 1 bytes @ 0x9
  9866                           
  9867                           
  9868                           ; 2 bytes @ 0x9
  9869  0079                     	ds	1
  9870  007A                     ??_PIN_MANAGER_Initialize:	
  9871  007A                     ??_reset_DWIC:	
  9872                           ; 1 bytes @ 0xA
  9873                           
  9874  007A                     PIN_MANAGER_Initialize@state:	
  9875                           ; 1 bytes @ 0xA
  9876                           
  9877  007A                     bq25895_WDT_reset@Reg_03_value:	
  9878                           ; 1 bytes @ 0xA
  9879                           
  9880  007A                     ___lltoft@exp:	
  9881                           ; 1 bytes @ 0xA
  9882                           
  9883  007A                     ___lwmod@counter:	
  9884                           ; 1 bytes @ 0xA
  9885                           
  9886                           
  9887                           ; 1 bytes @ 0xA
  9888  007A                     	ds	1
  9889  007B                     ??_printf:	
  9890  007B                     ??_lipo_battery_level:	
  9891                           ; 1 bytes @ 0xB
  9892                           
  9893  007B                     ??_SYSTEM_Initialize:	
  9894                           ; 1 bytes @ 0xB
  9895                           
  9896                           
  9897                           ; 1 bytes @ 0xB
  9898  007B                     	ds	1
  9899  007C                     ??__fassert:	
  9900  007C                     ??_dwt_check_dev_id:	
  9901                           ; 1 bytes @ 0xC
  9902                           
  9903  007C                     ??__dwt_otpread:	
  9904                           ; 1 bytes @ 0xC
  9905                           
  9906  007C                     ??_dwt_force_clocks:	
  9907                           ; 1 bytes @ 0xC
  9908                           
  9909  007C                     ??_dwt_pgf_cal:	
  9910                           ; 1 bytes @ 0xC
  9911                           
  9912  007C                     ??_dwt_writetodevice:	
  9913                           ; 1 bytes @ 0xC
  9914                           
  9915  007C                     ??_dwt_readfromdevice:	
  9916                           ; 1 bytes @ 0xC
  9917                           
  9918  007C                     ??_dwt_read8bitoffsetreg:	
  9919                           ; 1 bytes @ 0xC
  9920                           
  9921  007C                     ??_dwt_write8bitoffsetreg:	
  9922                           ; 1 bytes @ 0xC
  9923                           
  9924  007C                     ??__dwt_kick_dgc_on_wakeup:	
  9925                           ; 1 bytes @ 0xC
  9926                           
  9927  007C                     ??_dwt_readdevid:	
  9928                           ; 1 bytes @ 0xC
  9929                           
  9930  007C                     ??_dwt_configmrxlut:	
  9931                           ; 1 bytes @ 0xC
  9932                           
  9933  007C                     ??_dwt_setrxantennadelay:	
  9934                           ; 1 bytes @ 0xC
  9935                           
  9936  007C                     ??_dwt_settxantennadelay:	
  9937                           ; 1 bytes @ 0xC
  9938                           
  9939  007C                     ??_dwt_disable_rf_tx:	
  9940                           ; 1 bytes @ 0xC
  9941                           
  9942  007C                     ??_dwt_enable_rf_tx:	
  9943                           ; 1 bytes @ 0xC
  9944                           
  9945  007C                     ??_dwt_enable_rftx_blocks:	
  9946                           ; 1 bytes @ 0xC
  9947                           
  9948  007C                     ??_dwt_disable_rftx_blocks:	
  9949                           ; 1 bytes @ 0xC
  9950                           
  9951                           
  9952                           	psect	cstackBANK0
  9953  0020                     __pcstackBANK0:	
  9954                           ; 1 bytes @ 0xC
  9955                           
  9956  0020                     ?_writetospiwithcrc:	
  9957  0020                     ?_writetospi:	
  9958                           ; 2 bytes @ 0x0
  9959                           
  9960  0020                     ?_readfromspi:	
  9961                           ; 2 bytes @ 0x0
  9962                           
  9963  0020                     ?___lwmod:	
  9964                           ; 2 bytes @ 0x0
  9965                           
  9966  0020                     ?___lltoft:	
  9967                           ; 2 bytes @ 0x0
  9968                           
  9969  0020                     i2c_multi_read@I2C_rsp:	
  9970                           ; 3 bytes @ 0x0
  9971                           
  9972  0020                     lipo_battery_level@battery_level_cal:	
  9973                           ; 1 bytes @ 0x0
  9974                           
  9975  0020                     writetospiwithcrc@headerLength:	
  9976                           ; 1 bytes @ 0x0
  9977                           
  9978  0020                     writetospi@headerLength:	
  9979                           ; 2 bytes @ 0x0
  9980                           
  9981  0020                     readfromspi@headerLength:	
  9982                           ; 2 bytes @ 0x0
  9983                           
  9984  0020                     ___lwmod@divisor:	
  9985                           ; 2 bytes @ 0x0
  9986                           
  9987  0020                     ___lmul@product:	
  9988                           ; 2 bytes @ 0x0
  9989                           
  9990  0020                     ___lltoft@c:	
  9991                           ; 4 bytes @ 0x0
  9992                           
  9993                           
  9994                           ; 4 bytes @ 0x0
  9995  0020                     	ds	1
  9996  0021                     ?_process_pmic_status:	
  9997  0021                     i2c_multi_read@device_addr:	
  9998                           ; 1 bytes @ 0x1
  9999                           
 10000  0021                     process_pmic_status@length:	
 10001                           ; 1 bytes @ 0x1
 10002                           
 10003                           
 10004                           ; 1 bytes @ 0x1
 10005  0021                     	ds	1
 10006  0022                     ??_process_pmic_status:	
 10007  0022                     writetospiwithcrc@headerBuffer:	
 10008                           ; 1 bytes @ 0x2
 10009                           
 10010  0022                     writetospi@headerBuffer:	
 10011                           ; 1 bytes @ 0x2
 10012                           
 10013  0022                     readfromspi@headerBuffer:	
 10014                           ; 1 bytes @ 0x2
 10015                           
 10016  0022                     i2c_multi_read@j:	
 10017                           ; 1 bytes @ 0x2
 10018                           
 10019  0022                     ___lwmod@dividend:	
 10020                           ; 1 bytes @ 0x2
 10021                           
 10022                           
 10023                           ; 2 bytes @ 0x2
 10024  0022                     	ds	1
 10025  0023                     ??_init_bq25895:	
 10026  0023                     writetospiwithcrc@bodyLength:	
 10027                           ; 1 bytes @ 0x3
 10028                           
 10029  0023                     writetospi@bodyLength:	
 10030                           ; 4 bytes @ 0x3
 10031                           
 10032  0023                     readfromspi@readlength:	
 10033                           ; 4 bytes @ 0x3
 10034                           
 10035                           
 10036                           ; 4 bytes @ 0x3
 10037  0023                     	ds	1
 10038  0024                     ?_get_sts_mnth:	
 10039  0024                     ?__doprnt:	
 10040                           ; 2 bytes @ 0x4
 10041                           
 10042  0024                     ?___ftmul:	
 10043                           ; 2 bytes @ 0x4
 10044                           
 10045  0024                     process_pmic_status@VBUS_STAT:	
 10046                           ; 3 bytes @ 0x4
 10047                           
 10048  0024                     get_sts_mnth@cipher:	
 10049                           ; 1 bytes @ 0x4
 10050                           
 10051  0024                     __doprnt@f:	
 10052                           ; 2 bytes @ 0x4
 10053                           
 10054  0024                     ___ftmul@f1:	
 10055                           ; 2 bytes @ 0x4
 10056                           
 10057                           
 10058                           ; 3 bytes @ 0x4
 10059  0024                     	ds	1
 10060  0025                     process_pmic_status@SDP_STAT:	
 10061                           
 10062                           ; 1 bytes @ 0x5
 10063  0025                     	ds	1
 10064  0026                     get_sts_mnth@threshold:	
 10065  0026                     init_bq25895@I2C_rsp:	
 10066                           ; 1 bytes @ 0x6
 10067                           
 10068  0026                     process_pmic_status@VSYS_STAT:	
 10069                           ; 1 bytes @ 0x6
 10070                           
 10071  0026                     __doprnt@ap:	
 10072                           ; 1 bytes @ 0x6
 10073                           
 10074                           
 10075                           ; 1 bytes @ 0x6
 10076  0026                     	ds	1
 10077  0027                     ??__doprnt:	
 10078  0027                     get_sts_mnth@shift_val:	
 10079                           ; 1 bytes @ 0x7
 10080                           
 10081  0027                     writetospiwithcrc@bodyBuffer:	
 10082                           ; 1 bytes @ 0x7
 10083                           
 10084  0027                     writetospi@bodyBuffer:	
 10085                           ; 2 bytes @ 0x7
 10086                           
 10087  0027                     readfromspi@readBuffer:	
 10088                           ; 2 bytes @ 0x7
 10089                           
 10090  0027                     process_pmic_status@battery_volt:	
 10091                           ; 2 bytes @ 0x7
 10092                           
 10093  0027                     ___ftmul@f2:	
 10094                           ; 2 bytes @ 0x7
 10095                           
 10096  0027                     init_bq25895@I2c_buff:	
 10097                           ; 3 bytes @ 0x7
 10098                           
 10099                           
 10100                           ; 9 bytes @ 0x7
 10101  0027                     	ds	1
 10102  0028                     ??_get_sts_mnth:	
 10103                           
 10104                           ; 1 bytes @ 0x8
 10105  0028                     	ds	1
 10106  0029                     writetospiwithcrc@crc8:	
 10107  0029                     process_pmic_status@PG_STAT:	
 10108                           ; 1 bytes @ 0x9
 10109                           
 10110                           
 10111                           ; 1 bytes @ 0x9
 10112  0029                     	ds	1
 10113  002A                     ??___ftmul:	
 10114  002A                     process_pmic_status@CHRG_STAT:	
 10115                           ; 1 bytes @ 0xA
 10116                           
 10117                           
 10118                           ; 1 bytes @ 0xA
 10119  002A                     	ds	1
 10120  002B                     process_pmic_status@status:	
 10121  002B                     __doprnt@idx:	
 10122                           ; 1 bytes @ 0xB
 10123                           
 10124                           
 10125                           ; 1 bytes @ 0xB
 10126  002B                     	ds	1
 10127  002C                     __doprnt@prec:	
 10128  002C                     get_sts_mnth@mod_val:	
 10129                           ; 1 bytes @ 0xC
 10130                           
 10131                           
 10132                           ; 2 bytes @ 0xC
 10133  002C                     	ds	1
 10134  002D                     __doprnt@len:	
 10135                           
 10136                           ; 2 bytes @ 0xD
 10137  002D                     	ds	1
 10138  002E                     ___ftmul@exp:	
 10139  002E                     get_sts_mnth@value:	
 10140                           ; 1 bytes @ 0xE
 10141                           
 10142                           
 10143                           ; 4 bytes @ 0xE
 10144  002E                     	ds	1
 10145  002F                     __doprnt@cp:	
 10146  002F                     ___ftmul@f3_as_product:	
 10147                           ; 2 bytes @ 0xF
 10148                           
 10149                           
 10150                           ; 3 bytes @ 0xF
 10151  002F                     	ds	2
 10152  0031                     __doprnt@val:	
 10153                           
 10154                           ; 2 bytes @ 0x11
 10155  0031                     	ds	1
 10156  0032                     ___ftmul@cntr:	
 10157                           
 10158                           ; 1 bytes @ 0x12
 10159  0032                     	ds	1
 10160  0033                     __doprnt@flag:	
 10161  0033                     ___ftmul@sign:	
 10162                           ; 1 bytes @ 0x13
 10163                           
 10164                           
 10165                           ; 1 bytes @ 0x13
 10166  0033                     	ds	1
 10167  0034                     ?___fttol:	
 10168  0034                     __doprnt@width:	
 10169                           ; 4 bytes @ 0x14
 10170                           
 10171  0034                     ___fttol@f1:	
 10172                           ; 2 bytes @ 0x14
 10173                           
 10174                           
 10175                           ; 3 bytes @ 0x14
 10176  0034                     	ds	2
 10177  0036                     __doprnt@c:	
 10178                           
 10179                           ; 1 bytes @ 0x16
 10180  0036                     	ds	1
 10181  0037                     __doprnt@pb:	
 10182                           
 10183                           ; 1 bytes @ 0x17
 10184  0037                     	ds	1
 10185  0038                     ??___fttol:	
 10186  0038                     ?_printf:	
 10187                           ; 1 bytes @ 0x18
 10188                           
 10189  0038                     printf@f:	
 10190                           ; 2 bytes @ 0x18
 10191                           
 10192                           
 10193                           ; 2 bytes @ 0x18
 10194  0038                     	ds	4
 10195  003C                     ___fttol@sign1:	
 10196                           
 10197                           ; 1 bytes @ 0x1C
 10198  003C                     	ds	1
 10199  003D                     ___fttol@lval:	
 10200                           
 10201                           ; 4 bytes @ 0x1D
 10202  003D                     	ds	3
 10203  0040                     printf@ap:	
 10204                           
 10205                           ; 1 bytes @ 0x20
 10206  0040                     	ds	1
 10207  0041                     ___fttol@exp1:	
 10208  0041                     printf@pb:	
 10209                           ; 1 bytes @ 0x21
 10210                           
 10211                           
 10212                           ; 3 bytes @ 0x21
 10213  0041                     	ds	3
 10214  0044                     ??_pmic_status_read:	
 10215  0044                     ?__fassert:	
 10216                           ; 1 bytes @ 0x24
 10217                           
 10218  0044                     __fassert@line:	
 10219                           ; 1 bytes @ 0x24
 10220                           
 10221                           
 10222                           ; 2 bytes @ 0x24
 10223  0044                     	ds	2
 10224  0046                     pmic_status_read@interrupt_state:	
 10225  0046                     __fassert@file:	
 10226                           ; 1 bytes @ 0x26
 10227                           
 10228                           
 10229                           ; 2 bytes @ 0x26
 10230  0046                     	ds	2
 10231  0048                     __fassert@exp:	
 10232                           
 10233                           ; 2 bytes @ 0x28
 10234  0048                     	ds	2
 10235  004A                     ?_dwt_xfer3000:	
 10236  004A                     dwt_xfer3000@regFileID:	
 10237                           ; 1 bytes @ 0x2A
 10238                           
 10239                           
 10240                           ; 4 bytes @ 0x2A
 10241  004A                     	ds	4
 10242  004E                     dwt_xfer3000@indx:	
 10243                           
 10244                           ; 2 bytes @ 0x2E
 10245  004E                     	ds	2
 10246  0050                     dwt_xfer3000@length:	
 10247                           
 10248                           ; 4 bytes @ 0x30
 10249  0050                     	ds	4
 10250  0054                     dwt_xfer3000@buffer:	
 10251                           
 10252                           ; 2 bytes @ 0x34
 10253  0054                     	ds	2
 10254  0056                     dwt_xfer3000@mode:	
 10255                           
 10256                           ; 2 bytes @ 0x36
 10257  0056                     	ds	2
 10258  0058                     ??_dwt_xfer3000:	
 10259                           
 10260                           ; 1 bytes @ 0x38
 10261  0058                     	ds	8
 10262  0060                     dwt_xfer3000@reg_file:	
 10263                           
 10264                           ; 2 bytes @ 0x40
 10265  0060                     	ds	2
 10266  0062                     dwt_xfer3000@addr:	
 10267                           
 10268                           ; 2 bytes @ 0x42
 10269  0062                     	ds	2
 10270  0064                     dwt_xfer3000@crc8:	
 10271                           
 10272                           ; 1 bytes @ 0x44
 10273  0064                     	ds	1
 10274  0065                     dwt_xfer3000@reg_offset:	
 10275                           
 10276                           ; 2 bytes @ 0x45
 10277  0065                     	ds	2
 10278  0067                     dwt_xfer3000@header:	
 10279                           
 10280                           ; 2 bytes @ 0x47
 10281  0067                     	ds	2
 10282  0069                     dwt_xfer3000@cnt:	
 10283                           
 10284                           ; 2 bytes @ 0x49
 10285  0069                     	ds	2
 10286  006B                     ??_dwt_setplenfine:	
 10287  006B                     ??_dwt_read16bitoffsetreg:	
 10288                           ; 1 bytes @ 0x4B
 10289                           
 10290  006B                     ??_dwt_write32bitoffsetreg:	
 10291                           ; 1 bytes @ 0x4B
 10292                           
 10293  006B                     ??_dwt_write16bitoffsetreg:	
 10294                           ; 1 bytes @ 0x4B
 10295                           
 10296  006B                     ??_dwt_modify32bitoffsetreg:	
 10297                           ; 1 bytes @ 0x4B
 10298                           
 10299  006B                     ??_dwt_modify16bitoffsetreg:	
 10300                           ; 1 bytes @ 0x4B
 10301                           
 10302  006B                     ??_dwt_modify8bitoffsetreg:	
 10303                           ; 1 bytes @ 0x4B
 10304                           
 10305  006B                     ?_dwt_check_dev_id:	
 10306                           ; 1 bytes @ 0x4B
 10307                           
 10308  006B                     dwt_read8bitoffsetreg@regval:	
 10309                           ; 2 bytes @ 0x4B
 10310                           
 10311                           
 10312                           ; 1 bytes @ 0x4B
 10313  006B                     	ds	1
 10314  006C                     ?_dwt_configmrxlut:	
 10315  006C                     ??_dwt_writetxdata:	
 10316                           ; 1 bytes @ 0x4C
 10317                           
 10318  006C                     ??_dwt_starttx:	
 10319                           ; 1 bytes @ 0x4C
 10320                           
 10321  006C                     dwt_setplenfine@preambleLength:	
 10322                           ; 1 bytes @ 0x4C
 10323                           
 10324  006C                     dwt_disable_rf_tx@switch_config:	
 10325                           ; 1 bytes @ 0x4C
 10326                           
 10327  006C                     dwt_write16bitoffsetreg@buffer:	
 10328                           ; 1 bytes @ 0x4C
 10329                           
 10330  006C                     dwt_modify8bitoffsetreg@buf:	
 10331                           ; 2 bytes @ 0x4C
 10332                           
 10333  006C                     dwt_configmrxlut@channel:	
 10334                           ; 2 bytes @ 0x4C
 10335                           
 10336  006C                     dwt_modify16bitoffsetreg@buf:	
 10337                           ; 2 bytes @ 0x4C
 10338                           
 10339                           
 10340                           ; 4 bytes @ 0x4C
 10341  006C                     	ds	2
 10342  006E                     ?_dwt_force_clocks:	
 10343  006E                     ??_dwt_run_pgfcal:	
 10344                           ; 1 bytes @ 0x4E
 10345                           
 10346  006E                     ?_dwt_setrxantennadelay:	
 10347                           ; 1 bytes @ 0x4E
 10348                           
 10349  006E                     ?_dwt_settxantennadelay:	
 10350                           ; 1 bytes @ 0x4E
 10351                           
 10352  006E                     dwt_setrxantennadelay@rxDelay:	
 10353                           ; 1 bytes @ 0x4E
 10354                           
 10355  006E                     dwt_settxantennadelay@txDelay:	
 10356                           ; 2 bytes @ 0x4E
 10357                           
 10358  006E                     dwt_force_clocks@clocks:	
 10359                           ; 2 bytes @ 0x4E
 10360                           
 10361                           
 10362                           ; 2 bytes @ 0x4E
 10363  006E                     	ds	2
 10364                           
 10365                           	psect	maintext
 10366  1CDB                     __pmaintext:	
 10367 ;;
 10368 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 10369 ;;
 10370 ;; *************** function _main *****************
 10371 ;; Defined at:
 10372 ;;		line 69 in file "main.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;		None
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      void 
 10379 ;; Registers used:
 10380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : B3F/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10388 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10389 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10390 ;;Total ram usage:        2 bytes
 10391 ;; Hardware stack levels required when called:   14
 10392 ;; This function calls:
 10393 ;;		_EUSART_Initialize
 10394 ;;		_SYSTEM_Initialize
 10395 ;;		_TMR0_Initialize
 10396 ;;		_dw_main
 10397 ;;		_init_bq25895
 10398 ;;		_pmic_status_read
 10399 ;;		_printf_string
 10400 ;;		_set_MSSSP1_mode
 10401 ;;		_set_led_status
 10402 ;;		_transmitt_beacon_pkt
 10403 ;; This function is called by:
 10404 ;;		Startup code after reset
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           
 10409                           ;psect for function _main
 10410  1CDB                     _main:	
 10411                           
 10412                           ;main.c: 71: SYSTEM_Initialize();
 10413                           
 10414                           ;incstack = 0
 10415                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10416  1CDB  31A0  20E2  319C   	fcall	_SYSTEM_Initialize
 10417  1CDE  0064               	clrwdt	;# 
 10418                           
 10419                           ;main.c: 74: EUSART_Initialize();
 10420  1CDF  31A0  20C1  319C   	fcall	_EUSART_Initialize
 10421                           
 10422                           ;main.c: 75: printf_string("\n\rUWB_TAG_DWM3000_PIC");
 10423  1CE2  305D               	movlw	low (STR_1| (0+32768))
 10424  1CE3  00F2               	movwf	printf_string@data
 10425  1CE4  30A8               	movlw	high (STR_1| (0+32768))
 10426  1CE5  00F3               	movwf	printf_string@data+1
 10427  1CE6  31A1  2131  319C   	fcall	_printf_string
 10428                           
 10429                           ;main.c: 77: set_MSSSP1_mode(2);
 10430  1CE9  3002               	movlw	2
 10431  1CEA  319F  2766  319C   	fcall	_set_MSSSP1_mode
 10432                           
 10433                           ;main.c: 78: init_bq25895();
 10434  1CED  3190  2056  319C   	fcall	_init_bq25895
 10435                           
 10436                           ;main.c: 79: _delay((unsigned long)((50)*(32000000/4000.0)));
 10437  1CF0  3003               	movlw	3
 10438  1CF1  0142               	movlb	2	; select bank2
 10439  1CF2  00E6               	movwf	(??_main^(0+256)+1)
 10440  1CF3  3008               	movlw	8
 10441  1CF4  00E5               	movwf	??_main^(0+256)
 10442  1CF5  3077               	movlw	119
 10443  1CF6                     u12717:	
 10444  1CF6  0B89               	decfsz	9,f
 10445  1CF7  2CF6               	goto	u12717
 10446  1CF8  0BE5               	decfsz	??_main^(0+256),f
 10447  1CF9  2CF6               	goto	u12717
 10448  1CFA  0BE6               	decfsz	(??_main^(0+256)+1),f
 10449  1CFB  2CF6               	goto	u12717
 10450                           
 10451                           ;main.c: 81: do { ODCONAbits.ODCA6 = 0; } while(0);
 10452  1CFC  017E               	movlb	62	; select bank62
 10453  1CFD  133A               	bcf	58,6	;volatile
 10454                           
 10455                           ;main.c: 82: do { LATAbits.LATA6 = 0; } while(0);
 10456  1CFE  0140               	movlb	0	; select bank0
 10457  1CFF  1316               	bcf	22,6	;volatile
 10458                           
 10459                           ;main.c: 83: do { ODCONAbits.ODCA7 = 0; } while(0);
 10460  1D00  017E               	movlb	62	; select bank62
 10461  1D01  13BA               	bcf	58,7	;volatile
 10462                           
 10463                           ;main.c: 84: do { LATAbits.LATA7 = 1; } while(0);
 10464  1D02  0140               	movlb	0	; select bank0
 10465  1D03  1796               	bsf	22,7	;volatile
 10466                           
 10467                           ;main.c: 85: do { ODCONBbits.ODCB4 = 1; } while(0);
 10468  1D04  017E               	movlb	62	; select bank62
 10469  1D05  1645               	bsf	69,4	;volatile
 10470                           
 10471                           ;main.c: 86: do { LATBbits.LATB4 = 1; } while(0);
 10472  1D06  0140               	movlb	0	; select bank0
 10473  1D07  1617               	bsf	23,4	;volatile
 10474                           
 10475                           ;main.c: 88: set_MSSSP1_mode(1);
 10476  1D08  3001               	movlw	1
 10477  1D09  319F  2766  319C   	fcall	_set_MSSSP1_mode
 10478                           
 10479                           ;main.c: 89: _delay((unsigned long)((2)*(32000000/4000.0)));
 10480  1D0C  3015               	movlw	21
 10481  1D0D  0142               	movlb	2	; select bank2
 10482  1D0E  00E5               	movwf	??_main^(0+256)
 10483  1D0F  30C6               	movlw	198
 10484  1D10                     u12727:	
 10485  1D10  0B89               	decfsz	9,f
 10486  1D11  2D10               	goto	u12727
 10487  1D12  0BE5               	decfsz	??_main^(0+256),f
 10488  1D13  2D10               	goto	u12727
 10489  1D14  0000               	nop
 10490                           
 10491                           ;main.c: 90: (INTCONbits.GIE = 1);
 10492  1D15  178B               	bsf	11,7	;volatile
 10493                           
 10494                           ;main.c: 91: (INTCONbits.PEIE = 1);
 10495  1D16  170B               	bsf	11,6	;volatile
 10496                           
 10497                           ;main.c: 92: TMR0_Initialize();
 10498  1D17  31A1  2145  319C   	fcall	_TMR0_Initialize
 10499  1D1A  0064               	clrwdt	;# 
 10500                           
 10501                           ;main.c: 94: dw_main();
 10502  1D1B  319A  226E  319C   	fcall	_dw_main
 10503  1D1E                     l10134:	
 10504                           ;main.c: 96: {
 10505                           ;main.c: 98: do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
 10506                           
 10507                           ;main.c: 95: while(1)
 10508                           
 10509  1D1E  1003               	clrc
 10510  1D1F  0140               	movlb	0	; select bank0
 10511  1D20  1E96               	btfss	22,5	;volatile
 10512  1D21  1403               	setc
 10513  1D22  1C03               	btfss	3,0
 10514  1D23  2D27               	goto	u11440
 10515  1D24  0140               	movlb	0	; select bank0
 10516  1D25  1696               	bsf	22,5	;volatile
 10517  1D26  2D29               	goto	l10136
 10518  1D27                     u11440:	
 10519  1D27  0140               	movlb	0	; select bank0
 10520  1D28  1296               	bcf	22,5	;volatile
 10521  1D29                     l10136:	
 10522                           
 10523                           ;main.c: 101: pmic_status_read();
 10524  1D29  3191  2195  319C   	fcall	_pmic_status_read
 10525                           
 10526                           ;main.c: 102: set_MSSSP1_mode(1);
 10527  1D2C  3001               	movlw	1
 10528  1D2D  319F  2766  319C   	fcall	_set_MSSSP1_mode
 10529                           
 10530                           ;main.c: 103: transmitt_beacon_pkt();
 10531  1D30  31A4  24BC  319C   	fcall	_transmitt_beacon_pkt
 10532                           
 10533                           ;main.c: 104: set_led_status();
 10534  1D33  31A3  2308  319C   	fcall	_set_led_status
 10535  1D36                     l355:	
 10536                           ;main.c: 105: while(!PORTBbits.RB0);
 10537                           
 10538  1D36  0140               	movlb	0	; select bank0
 10539  1D37  1C0D               	btfss	13,0	;volatile
 10540  1D38  2D36               	goto	l355
 10541                           
 10542                           ;main.c: 106: (INTCONbits.GIE = 1);
 10543  1D39  178B               	bsf	11,7	;volatile
 10544                           
 10545                           ;main.c: 107: if(1 == enable_sleep)
 10546  1D3A  0142               	movlb	2	; select bank2
 10547  1D3B  036F               	decf	_enable_sleep^(0+256),w
 10548  1D3C  1D03               	btfss	3,2
 10549  1D3D  2D1E               	goto	l10134
 10550                           
 10551                           ;main.c: 108: {
 10552                           ;main.c: 109: __nop();
 10553  1D3E  0000               	nop
 10554                           
 10555                           ;main.c: 110: __nop();
 10556  1D3F  0000               	nop
 10557                           
 10558                           ;main.c: 111: __nop();
 10559  1D40  0000               	nop
 10560                           
 10561                           ;main.c: 112: __nop();
 10562  1D41  0000               	nop
 10563                           
 10564                           ;main.c: 113: __nop();
 10565  1D42  0000               	nop
 10566                           
 10567                           ;main.c: 114: __nop();
 10568  1D43  0000               	nop
 10569                           
 10570                           ;main.c: 115: __nop();
 10571  1D44  0000               	nop
 10572                           
 10573                           ;main.c: 116: __nop();
 10574  1D45  0000               	nop
 10575                           
 10576                           ;main.c: 117: __nop();
 10577  1D46  0000               	nop
 10578                           
 10579                           ;main.c: 118: __nop();
 10580  1D47  0000               	nop
 10581  1D48  0063               	sleep	;# 
 10582                           
 10583                           ;main.c: 120: __nop();
 10584  1D49  0000               	nop
 10585                           
 10586                           ;main.c: 121: __nop();
 10587  1D4A  0000               	nop
 10588                           
 10589                           ;main.c: 122: __nop();
 10590  1D4B  0000               	nop
 10591                           
 10592                           ;main.c: 123: __nop();
 10593  1D4C  0000               	nop
 10594                           
 10595                           ;main.c: 124: __nop();
 10596  1D4D  0000               	nop
 10597                           
 10598                           ;main.c: 125: __nop();
 10599  1D4E  0000               	nop
 10600  1D4F  2D1E               	goto	l10134
 10601  1D50                     __end_of_main:	
 10602                           
 10603                           	psect	text1
 10604  24BC                     __ptext1:	
 10605 ;; *************** function _transmitt_beacon_pkt *****************
 10606 ;; Defined at:
 10607 ;;		line 179 in file "decawave.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;		None
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;		None
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10623 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10624 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10625 ;;Total ram usage:        1 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; Hardware stack levels required when called:   11
 10628 ;; This function calls:
 10629 ;;		_dwt_starttx
 10630 ;;		_dwt_writetxdata
 10631 ;;		_dwt_writetxfctrl
 10632 ;;		_printf_string
 10633 ;; This function is called by:
 10634 ;;		_main
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           
 10639                           ;psect for function _transmitt_beacon_pkt
 10640  24BC                     _transmitt_beacon_pkt:	
 10641                           
 10642                           ;decawave.c: 182: printf_string("\n\rDataSend");
 10643                           
 10644                           ;incstack = 0
 10645                           ; Regs used in _transmitt_beacon_pkt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10646  24BC  3066               	movlw	low (STR_23| (0+32768))
 10647  24BD  00F2               	movwf	printf_string@data
 10648  24BE  30A9               	movlw	high (STR_23| (0+32768))
 10649  24BF  00F3               	movwf	printf_string@data+1
 10650  24C0  31A1  2131  31A4   	fcall	_printf_string
 10651                           
 10652                           ;decawave.c: 184: tx_blink_msg[2]++;
 10653  24C3  3001               	movlw	1
 10654  24C4  0141               	movlb	1	; select bank1
 10655  24C5  00CF               	movwf	??_transmitt_beacon_pkt^(0+128)
 10656  24C6  084F               	movf	??_transmitt_beacon_pkt^(0+128),w
 10657  24C7  0144               	movlb	4	; select bank4
 10658  24C8  07A2               	addwf	(_tx_blink_msg^(0+512)+2),f
 10659                           
 10660                           ;decawave.c: 185: dwt_writetxdata(sizeof(tx_blink_msg), tx_blink_msg, 0);
 10661  24C9  3024               	movlw	36
 10662  24CA  0141               	movlb	1	; select bank1
 10663  24CB  00BE               	movwf	dwt_writetxdata@txDataLength^(0+128)
 10664  24CC  3000               	movlw	0
 10665  24CD  00BF               	movwf	(dwt_writetxdata@txDataLength^(0+128)+1)
 10666  24CE  3020               	movlw	(low (_tx_blink_msg| (0+512)))& (0+255)
 10667  24CF  00CF               	movwf	??_transmitt_beacon_pkt^(0+128)
 10668  24D0  084F               	movf	??_transmitt_beacon_pkt^(0+128),w
 10669  24D1  00C0               	movwf	dwt_writetxdata@txDataBytes^(0+128)
 10670  24D2  3000               	movlw	0
 10671  24D3  00C1               	movwf	dwt_writetxdata@txBufferOffset^(0+128)
 10672  24D4  00C2               	movwf	(dwt_writetxdata@txBufferOffset+1)^(0+128)
 10673  24D5  319D  25CB  31A4   	fcall	_dwt_writetxdata
 10674                           
 10675                           ;decawave.c: 186: dwt_writetxfctrl(sizeof(tx_blink_msg), 0, 0);
 10676  24D8  3024               	movlw	36
 10677  24D9  0141               	movlb	1	; select bank1
 10678  24DA  00B8               	movwf	dwt_writetxfctrl@txFrameLength^(0+128)
 10679  24DB  3000               	movlw	0
 10680  24DC  00B9               	movwf	(dwt_writetxfctrl@txFrameLength^(0+128)+1)
 10681  24DD  3000               	movlw	0
 10682  24DE  00BA               	movwf	dwt_writetxfctrl@txBufferOffset^(0+128)
 10683  24DF  00BB               	movwf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128)
 10684  24E0  01BC               	clrf	dwt_writetxfctrl@ranging^(0+128)
 10685  24E1  3194  2478  31A4   	fcall	_dwt_writetxfctrl
 10686                           
 10687                           ;decawave.c: 187: dwt_starttx(0x00);
 10688  24E4  3000               	movlw	0
 10689  24E5  3188  2008         	fcall	_dwt_starttx
 10690  24E7  0008               	return
 10691  24E8                     __end_of_transmitt_beacon_pkt:	
 10692                           
 10693                           	psect	text2
 10694  2308                     __ptext2:	
 10695 ;; *************** function _set_led_status *****************
 10696 ;; Defined at:
 10697 ;;		line 14 in file "pic_control_fun.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;		None
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      void 
 10704 ;; Registers used:
 10705 ;;		wreg, status,2, status,0
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10715 ;;Total ram usage:        1 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:    2
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		_main
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           
 10726                           ;psect for function _set_led_status
 10727  2308                     _set_led_status:	
 10728                           
 10729                           ;pic_control_fun.c: 16: static uint16_t tx_led_toggle_count = 30;
 10730                           ;pic_control_fun.c: 18: tx_led_toggle_count += (300 / 100);
 10731                           
 10732                           ;incstack = 0
 10733                           ; Regs used in _set_led_status: [wreg+status,2+status,0]
 10734  2308  3003               	movlw	3
 10735  2309  0142               	movlb	2	; select bank2
 10736  230A  07E9               	addwf	set_led_status@tx_led_toggle_count^(0+256),f
 10737  230B  3000               	movlw	0
 10738  230C  3DEA               	addwfc	(set_led_status@tx_led_toggle_count+1)^(0+256),f
 10739                           
 10740                           ;pic_control_fun.c: 19: if(tx_led_toggle_count >= 30)
 10741  230D  3000               	movlw	0
 10742  230E  026A               	subwf	(set_led_status@tx_led_toggle_count+1)^(0+256),w
 10743  230F  301E               	movlw	30
 10744  2310  1903               	skipnz
 10745  2311  0269               	subwf	set_led_status@tx_led_toggle_count^(0+256),w
 10746  2312  1C03               	skipc
 10747  2313  0008               	return
 10748                           
 10749                           ;pic_control_fun.c: 20: {
 10750                           ;pic_control_fun.c: 21: tx_led_toggle_count = 0;
 10751  2314  01E9               	clrf	set_led_status@tx_led_toggle_count^(0+256)
 10752  2315  01EA               	clrf	(set_led_status@tx_led_toggle_count+1)^(0+256)
 10753                           
 10754                           ;pic_control_fun.c: 22: if( power_connected == 2)
 10755  2316  3002               	movlw	2
 10756  2317  066C               	xorwf	_power_connected^(0+256),w
 10757  2318  1D03               	btfss	3,2
 10758  2319  2B27               	goto	l1546
 10759                           
 10760                           ;pic_control_fun.c: 23: {
 10761                           ;pic_control_fun.c: 24: do { LATAbits.LATA3 = 0; } while(0);
 10762  231A  0140               	movlb	0	; select bank0
 10763  231B  1196               	bcf	22,3	;volatile
 10764                           
 10765                           ;pic_control_fun.c: 25: _delay((unsigned long)((2)*(32000000/4000.0)));
 10766  231C  3015               	movlw	21
 10767  231D  00F1               	movwf	??_set_led_status
 10768  231E  30C6               	movlw	198
 10769  231F                     u12737:	
 10770  231F  0B89               	decfsz	9,f
 10771  2320  2B1F               	goto	u12737
 10772  2321  0BF1               	decfsz	??_set_led_status,f
 10773  2322  2B1F               	goto	u12737
 10774  2323  3200               	nop2
 10775                           
 10776                           ;pic_control_fun.c: 26: do { LATAbits.LATA3 = 1; } while(0);
 10777  2324  0140               	movlb	0	; select bank0
 10778  2325  1596               	bsf	22,3	;volatile
 10779                           
 10780                           ;pic_control_fun.c: 27: }
 10781  2326  0008               	return
 10782  2327                     l1546:	
 10783                           
 10784                           ;pic_control_fun.c: 28: else
 10785                           ;pic_control_fun.c: 29: {
 10786                           ;pic_control_fun.c: 30: if(!PORTAbits.RA3)
 10787  2327  0140               	movlb	0	; select bank0
 10788  2328  198C               	btfsc	12,3	;volatile
 10789  2329  0008               	return
 10790                           
 10791                           ;pic_control_fun.c: 31: {
 10792                           ;pic_control_fun.c: 32: do { LATAbits.LATA3 = 1; } while(0);
 10793  232A  1596               	bsf	22,3	;volatile
 10794  232B  0008               	return
 10795  232C                     __end_of_set_led_status:	
 10796                           
 10797                           	psect	text3
 10798  1195                     __ptext3:	
 10799 ;; *************** function _pmic_status_read *****************
 10800 ;; Defined at:
 10801 ;;		line 118 in file "pic_control_fun.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;		None
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;  interrupt_st    1   38[BANK0 ] unsigned char 
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  1    wreg      void 
 10808 ;; Registers used:
 10809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10817 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10818 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10819 ;;Total ram usage:        3 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:    6
 10822 ;; This function calls:
 10823 ;;		_bq25895_WDT_reset
 10824 ;;		_i2c_multi_read
 10825 ;;		_i2c_single_read
 10826 ;;		_i2c_single_write
 10827 ;;		_init_bq25895
 10828 ;;		_memset
 10829 ;;		_printf
 10830 ;;		_process_pmic_status
 10831 ;;		_set_MSSSP1_mode
 10832 ;; This function is called by:
 10833 ;;		_main
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           
 10838                           ;psect for function _pmic_status_read
 10839  1195                     _pmic_status_read:	
 10840                           
 10841                           ;pic_control_fun.c: 121: bool interrupt_state = (bool)GIE;
 10842                           
 10843                           ;incstack = 0
 10844                           ; Regs used in _pmic_status_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10845  1195  3000               	movlw	0
 10846  1196  1B8B               	btfsc	11,7	;volatile
 10847  1197  3001               	movlw	1
 10848  1198  0140               	movlb	0	; select bank0
 10849  1199  00C6               	movwf	pmic_status_read@interrupt_state
 10850                           
 10851                           ;pic_control_fun.c: 122: static uint16_t pmic_stat_read_time_count = 50;
 10852                           ;pic_control_fun.c: 123: static uint8_t pmic_wdt_clr_count = 30;
 10853                           ;pic_control_fun.c: 124: pmic_stat_read_time_count += (300 / 100);
 10854  119A  3003               	movlw	3
 10855  119B  0142               	movlb	2	; select bank2
 10856  119C  07E7               	addwf	pmic_status_read@pmic_stat_read_time_count^(0+256),f
 10857  119D  3000               	movlw	0
 10858  119E  3DE8               	addwfc	(pmic_status_read@pmic_stat_read_time_count+1)^(0+256),f
 10859                           
 10860                           ;pic_control_fun.c: 126: if(pmic_stat_read_time_count >= 50)
 10861  119F  3000               	movlw	0
 10862  11A0  0268               	subwf	(pmic_status_read@pmic_stat_read_time_count+1)^(0+256),w
 10863  11A1  3032               	movlw	50
 10864  11A2  1903               	skipnz
 10865  11A3  0267               	subwf	pmic_status_read@pmic_stat_read_time_count^(0+256),w
 10866  11A4  1C03               	skipc
 10867  11A5  0008               	return
 10868                           
 10869                           ;pic_control_fun.c: 127: {
 10870                           ;pic_control_fun.c: 128: pmic_stat_read_time_count = 0;
 10871  11A6  01E7               	clrf	pmic_status_read@pmic_stat_read_time_count^(0+256)
 10872  11A7  01E8               	clrf	(pmic_status_read@pmic_stat_read_time_count+1)^(0+256)
 10873                           
 10874                           ;pic_control_fun.c: 129: pmic_wdt_clr_count++;
 10875  11A8  3001               	movlw	1
 10876  11A9  0140               	movlb	0	; select bank0
 10877  11AA  00C4               	movwf	??_pmic_status_read
 10878  11AB  0844               	movf	??_pmic_status_read,w
 10879  11AC  0142               	movlb	2	; select bank2
 10880  11AD  07EB               	addwf	pmic_status_read@pmic_wdt_clr_count^(0+256),f
 10881                           
 10882                           ;pic_control_fun.c: 130: set_MSSSP1_mode(2);
 10883  11AE  3002               	movlw	2
 10884  11AF  319F  2766  3191   	fcall	_set_MSSSP1_mode
 10885                           
 10886                           ;pic_control_fun.c: 131: interrupt_state = (bool)GIE;
 10887  11B2  3000               	movlw	0
 10888  11B3  1B8B               	btfsc	11,7	;volatile
 10889  11B4  3001               	movlw	1
 10890  11B5  0140               	movlb	0	; select bank0
 10891  11B6  00C6               	movwf	pmic_status_read@interrupt_state
 10892                           
 10893                           ;pic_control_fun.c: 132: GIE = 0;
 10894  11B7  138B               	bcf	11,7	;volatile
 10895                           
 10896                           ;pic_control_fun.c: 134: if(pmic_wdt_clr_count > 5)
 10897  11B8  3006               	movlw	6
 10898  11B9  0142               	movlb	2	; select bank2
 10899  11BA  026B               	subwf	pmic_status_read@pmic_wdt_clr_count^(0+256),w
 10900  11BB  1C03               	skipc
 10901  11BC  2A06               	goto	l9858
 10902                           
 10903                           ;pic_control_fun.c: 135: {
 10904                           ;pic_control_fun.c: 137: printf("\n\rpmic_wdt_clr");
 10905  11BD  3012               	movlw	low (STR_27| (0+32768))
 10906  11BE  0140               	movlb	0	; select bank0
 10907  11BF  00B8               	movwf	printf@f
 10908  11C0  30A9               	movlw	high (STR_27| (0+32768))
 10909  11C1  00B9               	movwf	printf@f+1
 10910  11C2  31A1  215A  3191   	fcall	_printf
 10911                           
 10912                           ;pic_control_fun.c: 139: pmic_wdt_clr_count = 0;
 10913  11C5  0142               	movlb	2	; select bank2
 10914  11C6  01EB               	clrf	pmic_status_read@pmic_wdt_clr_count^(0+256)
 10915                           
 10916                           ;pic_control_fun.c: 140: I2C_read_buff[0] = i2c_single_read(0xD4, 0x02);
 10917  11C7  3002               	movlw	2
 10918  11C8  0140               	movlb	0	; select bank0
 10919  11C9  00C4               	movwf	??_pmic_status_read
 10920  11CA  0844               	movf	??_pmic_status_read,w
 10921  11CB  00F2               	movwf	i2c_single_read@reg_addr
 10922  11CC  30D4               	movlw	212
 10923  11CD  31A3  23EA  3191   	fcall	_i2c_single_read
 10924  11D0  0140               	movlb	0	; select bank0
 10925  11D1  00C5               	movwf	??_pmic_status_read+1
 10926  11D2  0845               	movf	??_pmic_status_read+1,w
 10927  11D3  0143               	movlb	3	; select bank3
 10928  11D4  00C0               	movwf	_I2C_read_buff^(0+384)
 10929                           
 10930                           ;pic_control_fun.c: 141: if((I2C_read_buff[0] & 0b00000001) == 0x01)
 10931  11D5  1C40               	btfss	_I2C_read_buff^(0+384),0
 10932  11D6  29EB               	goto	l9852
 10933                           
 10934                           ;pic_control_fun.c: 142: {
 10935                           ;pic_control_fun.c: 144: printf("\n\rBQ25895_re_init");
 10936  11D7  30AC               	movlw	low (STR_28| (0+32768))
 10937  11D8  0140               	movlb	0	; select bank0
 10938  11D9  00B8               	movwf	printf@f
 10939  11DA  30A8               	movlw	high (STR_28| (0+32768))
 10940  11DB  00B9               	movwf	printf@f+1
 10941  11DC  31A1  215A  3191   	fcall	_printf
 10942                           
 10943                           ;pic_control_fun.c: 146: init_bq25895();
 10944  11DF  3190  2056  3191   	fcall	_init_bq25895
 10945                           
 10946                           ;pic_control_fun.c: 147: _delay((unsigned long)((5)*(32000000/4000.0)));
 10947  11E2  3034               	movlw	52
 10948  11E3  0140               	movlb	0	; select bank0
 10949  11E4  00C4               	movwf	??_pmic_status_read
 10950  11E5  30F1               	movlw	241
 10951  11E6                     u12747:	
 10952  11E6  0B89               	decfsz	9,f
 10953  11E7  29E6               	goto	u12747
 10954  11E8  0BC4               	decfsz	??_pmic_status_read,f
 10955  11E9  29E6               	goto	u12747
 10956  11EA  3200               	nop2
 10957  11EB                     l9852:	
 10958                           
 10959                           ;pic_control_fun.c: 148: }
 10960                           ;pic_control_fun.c: 149: I2C_read_buff[0] = (uint8_t)((I2C_read_buff[0] & 0b00111111) | 
      +                          (uint8_t)0b10000000);
 10961  11EB  0143               	movlb	3	; select bank3
 10962  11EC  0840               	movf	_I2C_read_buff^(0+384),w
 10963  11ED  393F               	andlw	63
 10964  11EE  3880               	iorlw	128
 10965  11EF  0140               	movlb	0	; select bank0
 10966  11F0  00C4               	movwf	??_pmic_status_read
 10967  11F1  0844               	movf	??_pmic_status_read,w
 10968  11F2  0143               	movlb	3	; select bank3
 10969  11F3  00C0               	movwf	_I2C_read_buff^(0+384)
 10970                           
 10971                           ;pic_control_fun.c: 150: i2c_single_write(0xD4, 0x02, I2C_read_buff[0]);
 10972  11F4  3002               	movlw	2
 10973  11F5  0140               	movlb	0	; select bank0
 10974  11F6  00C4               	movwf	??_pmic_status_read
 10975  11F7  0844               	movf	??_pmic_status_read,w
 10976  11F8  00F2               	movwf	i2c_single_write@reg_addr
 10977  11F9  0143               	movlb	3	; select bank3
 10978  11FA  0840               	movf	_I2C_read_buff^(0+384),w
 10979  11FB  0140               	movlb	0	; select bank0
 10980  11FC  00C5               	movwf	??_pmic_status_read+1
 10981  11FD  0845               	movf	??_pmic_status_read+1,w
 10982  11FE  00F3               	movwf	i2c_single_write@data
 10983  11FF  30D4               	movlw	212
 10984  1200  31A2  22B2  3191   	fcall	_i2c_single_write
 10985                           
 10986                           ;pic_control_fun.c: 151: bq25895_WDT_reset();
 10987  1203  31A3  2376  3191   	fcall	_bq25895_WDT_reset
 10988  1206                     l9858:	
 10989                           
 10990                           ;pic_control_fun.c: 152: }
 10991                           ;pic_control_fun.c: 155: printf("\n\rpmic_batt_read");
 10992  1206  30CF               	movlw	low (STR_29| (0+32768))
 10993  1207  0140               	movlb	0	; select bank0
 10994  1208  00B8               	movwf	printf@f
 10995  1209  30A8               	movlw	high (STR_29| (0+32768))
 10996  120A  00B9               	movwf	printf@f+1
 10997  120B  31A1  215A  3191   	fcall	_printf
 10998                           
 10999                           ;pic_control_fun.c: 157: memset((void*)I2C_read_buff, 0, 10);
 11000  120E  3000               	movlw	0
 11001  120F  00F1               	movwf	memset@c
 11002  1210  00F2               	movwf	memset@c+1
 11003  1211  300A               	movlw	10
 11004  1212  00F3               	movwf	memset@n
 11005  1213  3000               	movlw	0
 11006  1214  00F4               	movwf	memset@n+1
 11007  1215  30C0               	movlw	(low (_I2C_read_buff| (0+256)))& (0+255)
 11008  1216  31A2  220B  3191   	fcall	_memset
 11009                           
 11010                           ;pic_control_fun.c: 158: i2c_multi_read(0xD4, pmic_stat_reg, I2C_read_buff, 10);
 11011  1219  0142               	movlb	2	; select bank2
 11012  121A  086E               	movf	_pmic_stat_reg^(0+256),w
 11013  121B  0140               	movlb	0	; select bank0
 11014  121C  00C4               	movwf	??_pmic_status_read
 11015  121D  0844               	movf	??_pmic_status_read,w
 11016  121E  00F2               	movwf	i2c_multi_read@reg_addr
 11017  121F  30C0               	movlw	low _I2C_read_buff
 11018  1220  00F3               	movwf	i2c_multi_read@data
 11019  1221  3001               	movlw	high _I2C_read_buff
 11020  1222  00F4               	movwf	i2c_multi_read@data+1
 11021  1223  300A               	movlw	10
 11022  1224  00C5               	movwf	??_pmic_status_read+1
 11023  1225  0845               	movf	??_pmic_status_read+1,w
 11024  1226  00F5               	movwf	i2c_multi_read@length
 11025  1227  30D4               	movlw	212
 11026  1228  3199  2108  3191   	fcall	_i2c_multi_read
 11027                           
 11028                           ;pic_control_fun.c: 159: GIE = interrupt_state;
 11029  122B  0140               	movlb	0	; select bank0
 11030  122C  1C46               	btfss	pmic_status_read@interrupt_state,0
 11031  122D  2A30               	goto	u11060
 11032  122E  178B               	bsf	11,7	;volatile
 11033  122F  2A31               	goto	l9866
 11034  1230                     u11060:	
 11035  1230  138B               	bcf	11,7	;volatile
 11036  1231                     l9866:	
 11037                           
 11038                           ;pic_control_fun.c: 161: process_pmic_status(I2C_read_buff, 10);
 11039  1231  300A               	movlw	10
 11040  1232  0140               	movlb	0	; select bank0
 11041  1233  00C4               	movwf	??_pmic_status_read
 11042  1234  0844               	movf	??_pmic_status_read,w
 11043  1235  00A1               	movwf	process_pmic_status@length
 11044  1236  30C0               	movlw	(low (_I2C_read_buff| (0+256)))& (0+255)
 11045  1237  3190  20F4         	fcall	_process_pmic_status
 11046  1239  0008               	return
 11047  123A                     __end_of_pmic_status_read:	
 11048                           
 11049                           	psect	text4
 11050  1F66                     __ptext4:	
 11051 ;; *************** function _set_MSSSP1_mode *****************
 11052 ;; Defined at:
 11053 ;;		line 38 in file "pic_control_fun.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  mode            1    wreg     unsigned char 
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;  mode            1    9[COMMON] unsigned char 
 11058 ;;  state           1    8[COMMON] unsigned char 
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  1    wreg      void 
 11061 ;; Registers used:
 11062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/0
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11071 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11072 ;;Total ram usage:        3 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; Hardware stack levels required when called:    4
 11075 ;; This function calls:
 11076 ;;		_SPI1_Open
 11077 ;;		_i2c_init
 11078 ;;		_printf_string
 11079 ;; This function is called by:
 11080 ;;		_main
 11081 ;;		_pmic_status_read
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           
 11086                           ;psect for function _set_MSSSP1_mode
 11087  1F66                     _set_MSSSP1_mode:	
 11088                           
 11089                           ;incstack = 0
 11090                           ; Regs used in _set_MSSSP1_mode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11091                           ;set_MSSSP1_mode@mode stored from wreg
 11092  1F66  00F9               	movwf	set_MSSSP1_mode@mode
 11093                           
 11094                           ;pic_control_fun.c: 40: static uint8_t current_mode;
 11095                           ;pic_control_fun.c: 42: if(current_mode != mode)
 11096  1F67  0142               	movlb	2	; select bank2
 11097  1F68  084C               	movf	set_MSSSP1_mode@current_mode^(0+256),w
 11098  1F69  0679               	xorwf	set_MSSSP1_mode@mode,w
 11099  1F6A  1903               	skipnz
 11100  1F6B  0008               	return
 11101                           
 11102                           ;pic_control_fun.c: 43: {
 11103                           ;pic_control_fun.c: 44: bool state = (bool)GIE;
 11104  1F6C  3000               	movlw	0
 11105  1F6D  1B8B               	btfsc	11,7	;volatile
 11106  1F6E  3001               	movlw	1
 11107  1F6F  00F8               	movwf	set_MSSSP1_mode@state
 11108                           
 11109                           ;pic_control_fun.c: 45: GIE = 0;
 11110  1F70  138B               	bcf	11,7	;volatile
 11111                           
 11112                           ;pic_control_fun.c: 46: PPSLOCK = 0x55;
 11113  1F71  3055               	movlw	85
 11114  1F72  017D               	movlb	61	; select bank61
 11115  1F73  008F               	movwf	15	;volsfr
 11116                           
 11117                           ;pic_control_fun.c: 47: PPSLOCK = 0xAA;
 11118  1F74  30AA               	movlw	170
 11119  1F75  008F               	movwf	15	;volsfr
 11120                           
 11121                           ;pic_control_fun.c: 48: PPSLOCKbits.PPSLOCKED = 0x00;
 11122  1F76  100F               	bcf	15,0	;volsfr
 11123                           
 11124                           ;pic_control_fun.c: 49: if(mode == 1)
 11125  1F77  0379               	decf	set_MSSSP1_mode@mode,w
 11126  1F78  1D03               	btfss	3,2
 11127  1F79  2FBF               	goto	l9340
 11128                           
 11129                           ;pic_control_fun.c: 50: {
 11130                           ;pic_control_fun.c: 52: printf_string("\n\rMSSSP set as SPI");
 11131  1F7A  3086               	movlw	low (STR_25| (0+32768))
 11132  1F7B  00F2               	movwf	printf_string@data
 11133  1F7C  30A8               	movlw	high (STR_25| (0+32768))
 11134  1F7D  00F3               	movwf	printf_string@data+1
 11135  1F7E  31A1  2131  319F   	fcall	_printf_string
 11136                           
 11137                           ;pic_control_fun.c: 54: current_mode = 1;
 11138  1F81  0142               	movlb	2	; select bank2
 11139  1F82  01CC               	clrf	set_MSSSP1_mode@current_mode^(0+256)
 11140  1F83  0ACC               	incf	set_MSSSP1_mode@current_mode^(0+256),f
 11141                           
 11142                           ;pic_control_fun.c: 56: RC3PPS = 0x0F;
 11143  1F84  300F               	movlw	15
 11144  1F85  017E               	movlb	62	; select bank62
 11145  1F86  00A3               	movwf	35	;volatile
 11146                           
 11147                           ;pic_control_fun.c: 57: RC4PPS = 0x0F;
 11148  1F87  300F               	movlw	15
 11149  1F88  00A4               	movwf	36	;volatile
 11150                           
 11151                           ;pic_control_fun.c: 58: SSP1STAT = 0x00;
 11152  1F89  0143               	movlb	3	; select bank3
 11153  1F8A  018F               	clrf	15	;volatile
 11154                           
 11155                           ;pic_control_fun.c: 59: SSP1CON1 = 0x00;
 11156  1F8B  0190               	clrf	16	;volatile
 11157                           
 11158                           ;pic_control_fun.c: 60: SSP1CON3 = 0x00;
 11159  1F8C  0192               	clrf	18	;volatile
 11160                           
 11161                           ;pic_control_fun.c: 61: SSP1ADD = 0x00;
 11162  1F8D  018D               	clrf	13	;volatile
 11163                           
 11164                           ;pic_control_fun.c: 62: PIR3bits.SSP1IF = 0;
 11165  1F8E  014E               	movlb	14	; select bank14
 11166  1F8F  100F               	bcf	15,0	;volatile
 11167                           
 11168                           ;pic_control_fun.c: 63: PIE3bits.SSP1IE = 0;
 11169  1F90  1019               	bcf	25,0	;volatile
 11170                           
 11171                           ;pic_control_fun.c: 64: SSP1BUF = 0x00;
 11172  1F91  0143               	movlb	3	; select bank3
 11173  1F92  018C               	clrf	12	;volatile
 11174                           
 11175                           ;pic_control_fun.c: 65: SSP1MSK = 0x00;
 11176  1F93  018E               	clrf	14	;volatile
 11177                           
 11178                           ;pic_control_fun.c: 68: SSP1CLKPPS = 0x12;
 11179  1F94  3012               	movlw	18
 11180  1F95  017D               	movlb	61	; select bank61
 11181  1F96  00C5               	movwf	69	;volatile
 11182                           
 11183                           ;pic_control_fun.c: 69: RC1PPS = 0x15;
 11184  1F97  3015               	movlw	21
 11185  1F98  017E               	movlb	62	; select bank62
 11186  1F99  00A1               	movwf	33	;volatile
 11187                           
 11188                           ;pic_control_fun.c: 70: RC2PPS = 0x14;
 11189  1F9A  3014               	movlw	20
 11190  1F9B  00A2               	movwf	34	;volatile
 11191                           
 11192                           ;pic_control_fun.c: 71: SSP1DATPPS = 0x10;
 11193  1F9C  3010               	movlw	16
 11194  1F9D  017D               	movlb	61	; select bank61
 11195  1F9E  00C6               	movwf	70	;volatile
 11196                           
 11197                           ;pic_control_fun.c: 74: SSP1STAT = 0x80;
 11198  1F9F  3080               	movlw	128
 11199  1FA0  0143               	movlb	3	; select bank3
 11200  1FA1  008F               	movwf	15	;volatile
 11201                           
 11202                           ;pic_control_fun.c: 75: SSP1CON1 = 0x00;
 11203  1FA2  0190               	clrf	16	;volatile
 11204                           
 11205                           ;pic_control_fun.c: 76: SSP1ADD = 0x01;
 11206  1FA3  3001               	movlw	1
 11207  1FA4  008D               	movwf	13	;volatile
 11208                           
 11209                           ;pic_control_fun.c: 78: TRISCbits.TRISC2 = 0;
 11210  1FA5  0140               	movlb	0	; select bank0
 11211  1FA6  1113               	bcf	19,2	;volatile
 11212                           
 11213                           ;pic_control_fun.c: 79: TRISCbits.TRISC0 = 1;
 11214  1FA7  1413               	bsf	19,0	;volatile
 11215                           
 11216                           ;pic_control_fun.c: 80: SSP1CON1bits.SSPEN = 0;
 11217  1FA8  0143               	movlb	3	; select bank3
 11218  1FA9  1290               	bcf	16,5	;volatile
 11219                           
 11220                           ;pic_control_fun.c: 81: _delay((unsigned long)((2)*(32000000/4000.0)));
 11221  1FAA  3015               	movlw	21
 11222  1FAB  00F7               	movwf	??_set_MSSSP1_mode
 11223  1FAC  30C6               	movlw	198
 11224  1FAD                     u12757:	
 11225  1FAD  0B89               	decfsz	9,f
 11226  1FAE  2FAD               	goto	u12757
 11227  1FAF  0BF7               	decfsz	??_set_MSSSP1_mode,f
 11228  1FB0  2FAD               	goto	u12757
 11229  1FB1  3200               	nop2
 11230                           
 11231                           ;pic_control_fun.c: 82: SPI1_Open(0);
 11232  1FB2  3000               	movlw	0
 11233  1FB3  319A  220E  319F   	fcall	_SPI1_Open
 11234                           
 11235                           ;pic_control_fun.c: 83: _delay((unsigned long)((2)*(32000000/4000.0)));
 11236  1FB6  3015               	movlw	21
 11237  1FB7  00F7               	movwf	??_set_MSSSP1_mode
 11238  1FB8  30C6               	movlw	198
 11239  1FB9                     u12767:	
 11240  1FB9  0B89               	decfsz	9,f
 11241  1FBA  2FB9               	goto	u12767
 11242  1FBB  0BF7               	decfsz	??_set_MSSSP1_mode,f
 11243  1FBC  2FB9               	goto	u12767
 11244  1FBD  3200               	nop2
 11245                           
 11246                           ;pic_control_fun.c: 84: }
 11247  1FBE  2FF4               	goto	l9378
 11248  1FBF                     l9340:	
 11249                           
 11250                           ;pic_control_fun.c: 85: else if(mode == 2)
 11251  1FBF  3002               	movlw	2
 11252  1FC0  0679               	xorwf	set_MSSSP1_mode@mode,w
 11253  1FC1  1D03               	btfss	3,2
 11254  1FC2  2FF4               	goto	l9378
 11255                           
 11256                           ;pic_control_fun.c: 86: {
 11257                           ;pic_control_fun.c: 88: printf_string("\n\rMSSSP set as I2C");
 11258  1FC3  3073               	movlw	low (STR_26| (0+32768))
 11259  1FC4  00F2               	movwf	printf_string@data
 11260  1FC5  30A8               	movlw	high (STR_26| (0+32768))
 11261  1FC6  00F3               	movwf	printf_string@data+1
 11262  1FC7  31A1  2131  319F   	fcall	_printf_string
 11263                           
 11264                           ;pic_control_fun.c: 90: current_mode = 2;
 11265  1FCA  3002               	movlw	2
 11266  1FCB  00F7               	movwf	??_set_MSSSP1_mode
 11267  1FCC  0877               	movf	??_set_MSSSP1_mode,w
 11268  1FCD  0142               	movlb	2	; select bank2
 11269  1FCE  00CC               	movwf	set_MSSSP1_mode@current_mode^(0+256)
 11270                           
 11271                           ;pic_control_fun.c: 92: RC1PPS = 0x0F;
 11272  1FCF  300F               	movlw	15
 11273  1FD0  017E               	movlb	62	; select bank62
 11274  1FD1  00A1               	movwf	33	;volatile
 11275                           
 11276                           ;pic_control_fun.c: 93: RC2PPS = 0x0F;
 11277  1FD2  300F               	movlw	15
 11278  1FD3  00A2               	movwf	34	;volatile
 11279                           
 11280                           ;pic_control_fun.c: 94: SSP1STAT = 0x00;
 11281  1FD4  0143               	movlb	3	; select bank3
 11282  1FD5  018F               	clrf	15	;volatile
 11283                           
 11284                           ;pic_control_fun.c: 95: SSP1CON1 = 0x00;
 11285  1FD6  0190               	clrf	16	;volatile
 11286                           
 11287                           ;pic_control_fun.c: 96: SSP1CON3 = 0x00;
 11288  1FD7  0192               	clrf	18	;volatile
 11289                           
 11290                           ;pic_control_fun.c: 97: SSP1ADD = 0x00;
 11291  1FD8  018D               	clrf	13	;volatile
 11292                           
 11293                           ;pic_control_fun.c: 98: PIR3bits.SSP1IF = 0;
 11294  1FD9  014E               	movlb	14	; select bank14
 11295  1FDA  100F               	bcf	15,0	;volatile
 11296                           
 11297                           ;pic_control_fun.c: 99: PIE3bits.SSP1IE = 0;
 11298  1FDB  1019               	bcf	25,0	;volatile
 11299                           
 11300                           ;pic_control_fun.c: 100: SSP1BUF = 0x00;
 11301  1FDC  0143               	movlb	3	; select bank3
 11302  1FDD  018C               	clrf	12	;volatile
 11303                           
 11304                           ;pic_control_fun.c: 101: SSP1MSK = 0x00;
 11305  1FDE  018E               	clrf	14	;volatile
 11306                           
 11307                           ;pic_control_fun.c: 103: RC3PPS = 0x14;
 11308  1FDF  3014               	movlw	20
 11309  1FE0  017E               	movlb	62	; select bank62
 11310  1FE1  00A3               	movwf	35	;volatile
 11311                           
 11312                           ;pic_control_fun.c: 104: RC4PPS = 0x15;
 11313  1FE2  3015               	movlw	21
 11314  1FE3  00A4               	movwf	36	;volatile
 11315                           
 11316                           ;pic_control_fun.c: 105: SSP1CLKPPS = 0x13;
 11317  1FE4  3013               	movlw	19
 11318  1FE5  017D               	movlb	61	; select bank61
 11319  1FE6  00C5               	movwf	69	;volatile
 11320                           
 11321                           ;pic_control_fun.c: 106: SSP1DATPPS = 0x14;
 11322  1FE7  3014               	movlw	20
 11323  1FE8  00C6               	movwf	70	;volatile
 11324                           
 11325                           ;pic_control_fun.c: 108: i2c_init();
 11326  1FE9  31A1  2106  319F   	fcall	_i2c_init
 11327                           
 11328                           ;pic_control_fun.c: 109: _delay((unsigned long)((2)*(32000000/4000.0)));
 11329  1FEC  3015               	movlw	21
 11330  1FED  00F7               	movwf	??_set_MSSSP1_mode
 11331  1FEE  30C6               	movlw	198
 11332  1FEF                     u12777:	
 11333  1FEF  0B89               	decfsz	9,f
 11334  1FF0  2FEF               	goto	u12777
 11335  1FF1  0BF7               	decfsz	??_set_MSSSP1_mode,f
 11336  1FF2  2FEF               	goto	u12777
 11337  1FF3  3200               	nop2
 11338  1FF4                     l9378:	
 11339                           
 11340                           ;pic_control_fun.c: 110: }
 11341                           ;pic_control_fun.c: 111: PPSLOCK = 0x55;
 11342  1FF4  3055               	movlw	85
 11343  1FF5  017D               	movlb	61	; select bank61
 11344  1FF6  008F               	movwf	15	;volsfr
 11345                           
 11346                           ;pic_control_fun.c: 112: PPSLOCK = 0xAA;
 11347  1FF7  30AA               	movlw	170
 11348  1FF8  008F               	movwf	15	;volsfr
 11349                           
 11350                           ;pic_control_fun.c: 113: PPSLOCKbits.PPSLOCKED = 0x01;
 11351  1FF9  140F               	bsf	15,0	;volsfr
 11352                           
 11353                           ;pic_control_fun.c: 114: GIE = state;
 11354  1FFA  1C78               	btfss	set_MSSSP1_mode@state,0
 11355  1FFB  2FFE               	goto	u10190
 11356  1FFC  178B               	bsf	11,7	;volatile
 11357  1FFD  0008               	return
 11358  1FFE                     u10190:	
 11359  1FFE  138B               	bcf	11,7	;volatile
 11360  1FFF  0008               	return
 11361  2000                     __end_of_set_MSSSP1_mode:	
 11362                           
 11363                           	psect	text5
 11364  2106                     __ptext5:	
 11365 ;; *************** function _i2c_init *****************
 11366 ;; Defined at:
 11367 ;;		line 5 in file "pic_i2c.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;		None
 11370 ;; Auto vars:     Size  Location     Type
 11371 ;;		None
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  1    wreg      void 
 11374 ;; Registers used:
 11375 ;;		wreg
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11385 ;;Total ram usage:        0 bytes
 11386 ;; Hardware stack levels used:    1
 11387 ;; Hardware stack levels required when called:    2
 11388 ;; This function calls:
 11389 ;;		Nothing
 11390 ;; This function is called by:
 11391 ;;		_set_MSSSP1_mode
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395                           
 11396                           ;psect for function _i2c_init
 11397  2106                     _i2c_init:	
 11398                           
 11399                           ;pic_i2c.c: 8: SSP1STAT = 0x80;
 11400                           
 11401                           ;incstack = 0
 11402                           ; Regs used in _i2c_init: [wreg]
 11403  2106  3080               	movlw	128
 11404  2107  0143               	movlb	3	; select bank3
 11405  2108  008F               	movwf	15	;volatile
 11406                           
 11407                           ;pic_i2c.c: 10: SSP1CON1 = 0x28;
 11408  2109  3028               	movlw	40
 11409  210A  0090               	movwf	16	;volatile
 11410                           
 11411                           ;pic_i2c.c: 12: SSP1CON3 = 0x08;
 11412  210B  3008               	movlw	8
 11413  210C  0092               	movwf	18	;volatile
 11414                           
 11415                           ;pic_i2c.c: 15: SSP1ADD = 79;
 11416  210D  304F               	movlw	79
 11417  210E  008D               	movwf	13	;volatile
 11418                           
 11419                           ;pic_i2c.c: 18: PIR3bits.SSP1IF = 0;
 11420  210F  014E               	movlb	14	; select bank14
 11421  2110  100F               	bcf	15,0	;volatile
 11422                           
 11423                           ;pic_i2c.c: 20: PIE3bits.SSP1IE = 0;
 11424  2111  1019               	bcf	25,0	;volatile
 11425  2112  0008               	return
 11426  2113                     __end_of_i2c_init:	
 11427                           
 11428                           	psect	text6
 11429  1A0E                     __ptext6:	
 11430 ;; *************** function _SPI1_Open *****************
 11431 ;; Defined at:
 11432 ;;		line 92 in file "mcc_generated_files/spi1.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;  spi1UniqueCo    1    wreg     enum E92
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;  spi1UniqueCo    1    6[COMMON] enum E92
 11437 ;;  print_data     20    0        unsigned char [20]
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      unsigned char 
 11440 ;; Registers used:
 11441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11449 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11451 ;;Total ram usage:        6 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    2
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_set_MSSSP1_mode
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           
 11462                           ;psect for function _SPI1_Open
 11463  1A0E                     _SPI1_Open:	
 11464                           
 11465                           ;incstack = 0
 11466                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
 11467                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 11468  1A0E  00F6               	movwf	SPI1_Open@spi1UniqueConfiguration
 11469                           
 11470                           ;spi1.c: 95: if(!SSP1CON1bits.SSPEN)
 11471  1A0F  0143               	movlb	3	; select bank3
 11472  1A10  1A90               	btfsc	16,5	;volatile
 11473  1A11  0008               	return
 11474                           
 11475                           ;spi1.c: 96: {
 11476                           ;spi1.c: 97: char print_data[20];
 11477                           ;spi1.c: 98: SSP1STAT = spi1_configuration[spi1UniqueConfiguration].stat;
 11478  1A12  0876               	movf	SPI1_Open@spi1UniqueConfiguration,w
 11479  1A13  00F1               	movwf	??_SPI1_Open
 11480  1A14  01F2               	clrf	??_SPI1_Open+1
 11481  1A15  35F1               	lslf	??_SPI1_Open,f
 11482  1A16  0DF2               	rlf	??_SPI1_Open+1,f
 11483  1A17  35F1               	lslf	??_SPI1_Open,f
 11484  1A18  0DF2               	rlf	??_SPI1_Open+1,f
 11485  1A19  0871               	movf	??_SPI1_Open,w
 11486  1A1A  3E01               	addlw	1
 11487  1A1B  00F3               	movwf	??_SPI1_Open+2
 11488  1A1C  3000               	movlw	0
 11489  1A1D  3D72               	addwfc	??_SPI1_Open+1,w
 11490  1A1E  00F4               	movwf	??_SPI1_Open+3
 11491  1A1F  3000               	movlw	low (_spi1_configuration| (0+32768))
 11492  1A20  0773               	addwf	??_SPI1_Open+2,w
 11493  1A21  0084               	movwf	4
 11494  1A22  3098               	movlw	high (_spi1_configuration| (0+32768))
 11495  1A23  3D74               	addwfc	??_SPI1_Open+3,w
 11496  1A24  0085               	movwf	5
 11497  1A25  0800               	movf	0,w	;code access
 11498  1A26  008F               	movwf	15	;volatile
 11499                           
 11500                           ;spi1.c: 99: SSP1CON1 = spi1_configuration[spi1UniqueConfiguration].con1;
 11501  1A27  0876               	movf	SPI1_Open@spi1UniqueConfiguration,w
 11502  1A28  00F1               	movwf	??_SPI1_Open
 11503  1A29  01F2               	clrf	??_SPI1_Open+1
 11504  1A2A  35F1               	lslf	??_SPI1_Open,f
 11505  1A2B  0DF2               	rlf	??_SPI1_Open+1,f
 11506  1A2C  35F1               	lslf	??_SPI1_Open,f
 11507  1A2D  0DF2               	rlf	??_SPI1_Open+1,f
 11508  1A2E  3000               	movlw	low (_spi1_configuration| (0+32768))
 11509  1A2F  0771               	addwf	??_SPI1_Open,w
 11510  1A30  0084               	movwf	4
 11511  1A31  3098               	movlw	high (_spi1_configuration| (0+32768))
 11512  1A32  3D72               	addwfc	??_SPI1_Open+1,w
 11513  1A33  0085               	movwf	5
 11514  1A34  0800               	movf	0,w	;code access
 11515  1A35  0090               	movwf	16	;volatile
 11516                           
 11517                           ;spi1.c: 100: SSP1CON2 = 0x00;
 11518  1A36  0191               	clrf	17	;volatile
 11519                           
 11520                           ;spi1.c: 101: SSP1ADD = spi1_configuration[spi1UniqueConfiguration].add;
 11521  1A37  0876               	movf	SPI1_Open@spi1UniqueConfiguration,w
 11522  1A38  00F1               	movwf	??_SPI1_Open
 11523  1A39  01F2               	clrf	??_SPI1_Open+1
 11524  1A3A  35F1               	lslf	??_SPI1_Open,f
 11525  1A3B  0DF2               	rlf	??_SPI1_Open+1,f
 11526  1A3C  35F1               	lslf	??_SPI1_Open,f
 11527  1A3D  0DF2               	rlf	??_SPI1_Open+1,f
 11528  1A3E  0871               	movf	??_SPI1_Open,w
 11529  1A3F  3E02               	addlw	2
 11530  1A40  00F3               	movwf	??_SPI1_Open+2
 11531  1A41  3000               	movlw	0
 11532  1A42  3D72               	addwfc	??_SPI1_Open+1,w
 11533  1A43  00F4               	movwf	??_SPI1_Open+3
 11534  1A44  3000               	movlw	low (_spi1_configuration| (0+32768))
 11535  1A45  0773               	addwf	??_SPI1_Open+2,w
 11536  1A46  0084               	movwf	4
 11537  1A47  3098               	movlw	high (_spi1_configuration| (0+32768))
 11538  1A48  3D74               	addwfc	??_SPI1_Open+3,w
 11539  1A49  0085               	movwf	5
 11540  1A4A  0800               	movf	0,w	;code access
 11541  1A4B  008D               	movwf	13	;volatile
 11542                           
 11543                           ;spi1.c: 102: TRISCbits.TRISC2 = spi1_configuration[spi1UniqueConfiguration].operation;
 11544  1A4C  0876               	movf	SPI1_Open@spi1UniqueConfiguration,w
 11545  1A4D  00F1               	movwf	??_SPI1_Open
 11546  1A4E  01F2               	clrf	??_SPI1_Open+1
 11547  1A4F  35F1               	lslf	??_SPI1_Open,f
 11548  1A50  0DF2               	rlf	??_SPI1_Open+1,f
 11549  1A51  35F1               	lslf	??_SPI1_Open,f
 11550  1A52  0DF2               	rlf	??_SPI1_Open+1,f
 11551  1A53  0871               	movf	??_SPI1_Open,w
 11552  1A54  3E03               	addlw	3
 11553  1A55  00F3               	movwf	??_SPI1_Open+2
 11554  1A56  3000               	movlw	0
 11555  1A57  3D72               	addwfc	??_SPI1_Open+1,w
 11556  1A58  00F4               	movwf	??_SPI1_Open+3
 11557  1A59  3000               	movlw	low (_spi1_configuration| (0+32768))
 11558  1A5A  0773               	addwf	??_SPI1_Open+2,w
 11559  1A5B  0084               	movwf	4
 11560  1A5C  3098               	movlw	high (_spi1_configuration| (0+32768))
 11561  1A5D  3D74               	addwfc	??_SPI1_Open+3,w
 11562  1A5E  0085               	movwf	5
 11563  1A5F  0800               	movf	0,w	;code access
 11564  1A60  00F5               	movwf	??_SPI1_Open+4
 11565  1A61  0DF5               	rlf	??_SPI1_Open+4,f
 11566  1A62  0DF5               	rlf	??_SPI1_Open+4,f
 11567  1A63  0140               	movlb	0	; select bank0
 11568  1A64  0813               	movf	19,w	;volatile
 11569  1A65  0675               	xorwf	??_SPI1_Open+4,w
 11570  1A66  39FB               	andlw	-5
 11571  1A67  0675               	xorwf	??_SPI1_Open+4,w
 11572  1A68  0093               	movwf	19	;volatile
 11573                           
 11574                           ;spi1.c: 103: TRISCbits.TRISC0 = 1;
 11575  1A69  1413               	bsf	19,0	;volatile
 11576                           
 11577                           ;spi1.c: 104: TRISCbits.TRISC1 = 0;
 11578  1A6A  1093               	bcf	19,1	;volatile
 11579                           
 11580                           ;spi1.c: 105: SSP1CON1bits.SSPEN = 1;
 11581  1A6B  0143               	movlb	3	; select bank3
 11582  1A6C  1690               	bsf	16,5	;volatile
 11583                           
 11584                           ;spi1.c: 106: return 1;
 11585                           ;	Return value of _SPI1_Open is never used
 11586  1A6D  0008               	return
 11587  1A6E                     __end_of_SPI1_Open:	
 11588                           ;spi1.c: 107: }
 11589                           ;spi1.c: 108: return 0;
 11590                           ;	Return value of _SPI1_Open is never used
 11591                           
 11592                           
 11593                           	psect	text7
 11594  10F4                     __ptext7:	
 11595 ;; *************** function _process_pmic_status *****************
 11596 ;; Defined at:
 11597 ;;		line 165 in file "pic_control_fun.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  status          1    wreg     PTR unsigned char 
 11600 ;;		 -> I2C_read_buff(10), 
 11601 ;;  length          1    1[BANK0 ] unsigned char 
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;  status          1   11[BANK0 ] PTR unsigned char 
 11604 ;;		 -> I2C_read_buff(10), 
 11605 ;;  battery_volt    2    7[BANK0 ] unsigned int 
 11606 ;;  CHRG_STAT       1   10[BANK0 ] unsigned char 
 11607 ;;  PG_STAT         1    9[BANK0 ] unsigned char 
 11608 ;;  VSYS_STAT       1    6[BANK0 ] unsigned char 
 11609 ;;  SDP_STAT        1    5[BANK0 ] unsigned char 
 11610 ;;  VBUS_STAT       1    4[BANK0 ] unsigned char 
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  1    wreg      void 
 11613 ;; Registers used:
 11614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11620 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11621 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11622 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11623 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11624 ;;Total ram usage:       11 bytes
 11625 ;; Hardware stack levels used:    1
 11626 ;; Hardware stack levels required when called:    4
 11627 ;; This function calls:
 11628 ;;		___wmul
 11629 ;;		_lipo_battery_level
 11630 ;; This function is called by:
 11631 ;;		_pmic_status_read
 11632 ;; This function uses a non-reentrant model
 11633 ;;
 11634                           
 11635                           
 11636                           ;psect for function _process_pmic_status
 11637  10F4                     _process_pmic_status:	
 11638                           
 11639                           ;incstack = 0
 11640                           ; Regs used in _process_pmic_status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11641                           ;process_pmic_status@status stored from wreg
 11642  10F4  0140               	movlb	0	; select bank0
 11643  10F5  00AB               	movwf	process_pmic_status@status
 11644                           
 11645                           ;pic_control_fun.c: 167: uint8_t VBUS_STAT = 0;
 11646  10F6  01A4               	clrf	process_pmic_status@VBUS_STAT
 11647                           
 11648                           ;pic_control_fun.c: 168: uint8_t CHRG_STAT = 0;
 11649  10F7  01AA               	clrf	process_pmic_status@CHRG_STAT
 11650                           
 11651                           ;pic_control_fun.c: 169: uint8_t PG_STAT = 0;
 11652  10F8  01A9               	clrf	process_pmic_status@PG_STAT
 11653                           
 11654                           ;pic_control_fun.c: 170: uint8_t SDP_STAT = 0;
 11655  10F9  01A5               	clrf	process_pmic_status@SDP_STAT
 11656                           
 11657                           ;pic_control_fun.c: 171: uint8_t VSYS_STAT = 0;
 11658  10FA  01A6               	clrf	process_pmic_status@VSYS_STAT
 11659                           
 11660                           ;pic_control_fun.c: 172: uint16_t battery_volt;
 11661                           ;pic_control_fun.c: 174: VBUS_STAT = (uint8_t)((status[0] & 0b11100000) >> 5);
 11662  10FB  082B               	movf	process_pmic_status@status,w
 11663  10FC  0086               	movwf	6
 11664  10FD  3001               	movlw	1	; select bank2/3
 11665  10FE  0087               	movwf	7
 11666  10FF  0801               	movf	1,w
 11667  1100  00A2               	movwf	??_process_pmic_status
 11668  1101  3005               	movlw	5
 11669  1102                     u10895:	
 11670  1102  36A2               	lsrf	??_process_pmic_status,f
 11671  1103  0B89               	decfsz	9,f
 11672  1104  2902               	goto	u10895
 11673  1105  0822               	movf	??_process_pmic_status,w
 11674  1106  3907               	andlw	7
 11675  1107  00A3               	movwf	??_process_pmic_status+1
 11676  1108  0823               	movf	??_process_pmic_status+1,w
 11677  1109  00A4               	movwf	process_pmic_status@VBUS_STAT
 11678                           
 11679                           ;pic_control_fun.c: 175: CHRG_STAT = (uint8_t)((status[0] & 0b00011000) >> 3);
 11680  110A  082B               	movf	process_pmic_status@status,w
 11681  110B  0086               	movwf	6
 11682  110C  3001               	movlw	1	; select bank2/3
 11683  110D  0087               	movwf	7
 11684  110E  0801               	movf	1,w
 11685  110F  00A2               	movwf	??_process_pmic_status
 11686  1110  3003               	movlw	3
 11687  1111                     u10905:	
 11688  1111  36A2               	lsrf	??_process_pmic_status,f
 11689  1112  0B89               	decfsz	9,f
 11690  1113  2911               	goto	u10905
 11691  1114  0822               	movf	??_process_pmic_status,w
 11692  1115  3903               	andlw	3
 11693  1116  00A3               	movwf	??_process_pmic_status+1
 11694  1117  0823               	movf	??_process_pmic_status+1,w
 11695  1118  00AA               	movwf	process_pmic_status@CHRG_STAT
 11696                           
 11697                           ;pic_control_fun.c: 176: PG_STAT = (uint8_t)((status[0] & 0b00000100) >> 2);
 11698  1119  082B               	movf	process_pmic_status@status,w
 11699  111A  0086               	movwf	6
 11700  111B  3001               	movlw	1	; select bank2/3
 11701  111C  0087               	movwf	7
 11702  111D  0801               	movf	1,w
 11703  111E  00A2               	movwf	??_process_pmic_status
 11704  111F  3002               	movlw	2
 11705  1120                     u10915:	
 11706  1120  36A2               	lsrf	??_process_pmic_status,f
 11707  1121  0B89               	decfsz	9,f
 11708  1122  2920               	goto	u10915
 11709  1123  0822               	movf	??_process_pmic_status,w
 11710  1124  3901               	andlw	1
 11711  1125  00A3               	movwf	??_process_pmic_status+1
 11712  1126  0823               	movf	??_process_pmic_status+1,w
 11713  1127  00A9               	movwf	process_pmic_status@PG_STAT
 11714                           
 11715                           ;pic_control_fun.c: 177: SDP_STAT = (uint8_t)((status[0] & 0b00000010) >> 1);
 11716  1128  082B               	movf	process_pmic_status@status,w
 11717  1129  0086               	movwf	6
 11718  112A  3001               	movlw	1	; select bank2/3
 11719  112B  0087               	movwf	7
 11720  112C  3601               	lsrf	1,w
 11721  112D  3901               	andlw	1
 11722  112E  00A2               	movwf	??_process_pmic_status
 11723  112F  0822               	movf	??_process_pmic_status,w
 11724  1130  00A5               	movwf	process_pmic_status@SDP_STAT
 11725                           
 11726                           ;pic_control_fun.c: 178: VSYS_STAT = (uint8_t)((status[0] & 0b00000001));
 11727  1131  082B               	movf	process_pmic_status@status,w
 11728  1132  0086               	movwf	6
 11729  1133  3001               	movlw	1	; select bank2/3
 11730  1134  0087               	movwf	7
 11731  1135  0801               	movf	1,w
 11732  1136  3901               	andlw	1
 11733  1137  00A2               	movwf	??_process_pmic_status
 11734  1138  0822               	movf	??_process_pmic_status,w
 11735  1139  00A6               	movwf	process_pmic_status@VSYS_STAT
 11736                           
 11737                           ;pic_control_fun.c: 181: if(1 == PG_STAT)
 11738  113A  0329               	decf	process_pmic_status@PG_STAT,w
 11739  113B  1D03               	btfss	3,2
 11740  113C  2962               	goto	l9776
 11741                           
 11742                           ;pic_control_fun.c: 182: {
 11743                           ;pic_control_fun.c: 186: power_connected = 1;
 11744  113D  0142               	movlb	2	; select bank2
 11745  113E  01EC               	clrf	_power_connected^(0+256)
 11746  113F  0AEC               	incf	_power_connected^(0+256),f
 11747                           
 11748                           ;pic_control_fun.c: 187: if((0b00000001 == CHRG_STAT) || (0b00000010 == CHRG_STAT))
 11749  1140  0140               	movlb	0	; select bank0
 11750  1141  032A               	decf	process_pmic_status@CHRG_STAT,w
 11751  1142  1903               	btfsc	3,2
 11752  1143  2948               	goto	l9768
 11753  1144  3002               	movlw	2
 11754  1145  062A               	xorwf	process_pmic_status@CHRG_STAT,w
 11755  1146  1D03               	btfss	3,2
 11756  1147  294F               	goto	l9770
 11757  1148                     l9768:	
 11758                           
 11759                           ;pic_control_fun.c: 188: {
 11760                           ;pic_control_fun.c: 189: if(pic_active_mode == 1)
 11761  1148  0142               	movlb	2	; select bank2
 11762  1149  036D               	decf	_pic_active_mode^(0+256),w
 11763  114A  1D03               	btfss	3,2
 11764  114B  296D               	goto	l9780
 11765                           
 11766                           ;pic_control_fun.c: 190: {
 11767                           ;pic_control_fun.c: 191: do { LATDbits.LATD1 = 0; } while(0);
 11768  114C  0140               	movlb	0	; select bank0
 11769  114D  1099               	bcf	25,1	;volatile
 11770  114E  2959               	goto	l1591
 11771  114F                     l9770:	
 11772                           ;pic_control_fun.c: 193: }
 11773                           ;pic_control_fun.c: 194: }
 11774                           
 11775                           ;pic_control_fun.c: 192: do { LATDbits.LATD3 = 0; } while(0);
 11776                           
 11777                           
 11778                           ;pic_control_fun.c: 195: else if(0b00000011 == CHRG_STAT)
 11779  114F  3003               	movlw	3
 11780  1150  062A               	xorwf	process_pmic_status@CHRG_STAT,w
 11781  1151  1D03               	btfss	3,2
 11782  1152  295B               	goto	l9774
 11783                           
 11784                           ;pic_control_fun.c: 196: {
 11785                           ;pic_control_fun.c: 197: if(pic_active_mode == 1)
 11786  1153  0142               	movlb	2	; select bank2
 11787  1154  036D               	decf	_pic_active_mode^(0+256),w
 11788  1155  1D03               	btfss	3,2
 11789  1156  296D               	goto	l9780
 11790                           
 11791                           ;pic_control_fun.c: 198: {
 11792                           ;pic_control_fun.c: 199: do { LATDbits.LATD1 = 1; } while(0);
 11793  1157  0140               	movlb	0	; select bank0
 11794  1158  1499               	bsf	25,1	;volatile
 11795  1159                     l1591:	
 11796                           ;pic_control_fun.c: 200: do { LATDbits.LATD3 = 0; } while(0);
 11797                           
 11798  1159  1199               	bcf	25,3	;volatile
 11799                           
 11800                           ;pic_control_fun.c: 201: }
 11801                           ;pic_control_fun.c: 202: }
 11802  115A  296D               	goto	l9780
 11803  115B                     l9774:	
 11804                           
 11805                           ;pic_control_fun.c: 203: else
 11806                           ;pic_control_fun.c: 204: {
 11807                           ;pic_control_fun.c: 205: if(pic_active_mode == 1)
 11808  115B  0142               	movlb	2	; select bank2
 11809  115C  036D               	decf	_pic_active_mode^(0+256),w
 11810  115D  1D03               	btfss	3,2
 11811  115E  296D               	goto	l9780
 11812                           
 11813                           ;pic_control_fun.c: 206: {
 11814                           ;pic_control_fun.c: 207: do { LATDbits.LATD1 = 0; } while(0);
 11815  115F  0140               	movlb	0	; select bank0
 11816  1160  1099               	bcf	25,1	;volatile
 11817  1161  296C               	goto	l1603
 11818  1162                     l9776:	
 11819                           ;pic_control_fun.c: 209: }
 11820                           ;pic_control_fun.c: 210: }
 11821                           ;pic_control_fun.c: 211: }
 11822                           
 11823                           ;pic_control_fun.c: 208: do { LATDbits.LATD3 = 1; } while(0);
 11824                           
 11825                           
 11826                           ;pic_control_fun.c: 212: else
 11827                           ;pic_control_fun.c: 213: {
 11828                           ;pic_control_fun.c: 217: power_connected = 2;
 11829  1162  3002               	movlw	2
 11830  1163  00A2               	movwf	??_process_pmic_status
 11831  1164  0822               	movf	??_process_pmic_status,w
 11832  1165  0142               	movlb	2	; select bank2
 11833  1166  00EC               	movwf	_power_connected^(0+256)
 11834                           
 11835                           ;pic_control_fun.c: 218: if(pic_active_mode == 1)
 11836  1167  036D               	decf	_pic_active_mode^(0+256),w
 11837  1168  1D03               	btfss	3,2
 11838  1169  296D               	goto	l9780
 11839                           
 11840                           ;pic_control_fun.c: 219: {
 11841                           ;pic_control_fun.c: 220: do { LATDbits.LATD1 = 1; } while(0);
 11842  116A  0140               	movlb	0	; select bank0
 11843  116B  1499               	bsf	25,1	;volatile
 11844  116C                     l1603:	
 11845                           ;pic_control_fun.c: 221: do { LATDbits.LATD3 = 1; } while(0);
 11846                           
 11847  116C  1599               	bsf	25,3	;volatile
 11848  116D                     l9780:	
 11849                           
 11850                           ;pic_control_fun.c: 222: }
 11851                           ;pic_control_fun.c: 223: }
 11852                           ;pic_control_fun.c: 225: battery_volt = (uint16_t)((( status[3] & 0b01111111) * 20) + 23
      +                          04);
 11853  116D  0140               	movlb	0	; select bank0
 11854  116E  082B               	movf	process_pmic_status@status,w
 11855  116F  3E03               	addlw	3
 11856  1170  0086               	movwf	6
 11857  1171  3001               	movlw	1	; select bank2/3
 11858  1172  0087               	movwf	7
 11859  1173  0801               	movf	1,w
 11860  1174  397F               	andlw	127
 11861  1175  00A2               	movwf	??_process_pmic_status
 11862  1176  01A3               	clrf	??_process_pmic_status+1
 11863  1177  0822               	movf	??_process_pmic_status,w
 11864  1178  00F1               	movwf	___wmul@multiplier
 11865  1179  0823               	movf	??_process_pmic_status+1,w
 11866  117A  00F2               	movwf	___wmul@multiplier+1
 11867  117B  3014               	movlw	20
 11868  117C  00F3               	movwf	___wmul@multiplicand
 11869  117D  3000               	movlw	0
 11870  117E  00F4               	movwf	___wmul@multiplicand+1
 11871  117F  31A1  21BA  3190   	fcall	___wmul
 11872  1182  0871               	movf	?___wmul,w
 11873  1183  3E00               	addlw	0
 11874  1184  0140               	movlb	0	; select bank0
 11875  1185  00A7               	movwf	process_pmic_status@battery_volt
 11876  1186  3009               	movlw	9
 11877  1187  3D72               	addwfc	?___wmul+1,w
 11878  1188  00A8               	movwf	process_pmic_status@battery_volt+1
 11879                           
 11880                           ;pic_control_fun.c: 226: battery_level = lipo_battery_level(battery_volt);
 11881  1189  0828               	movf	process_pmic_status@battery_volt+1,w
 11882  118A  00FA               	movwf	lipo_battery_level@battery_volt+1
 11883  118B  0827               	movf	process_pmic_status@battery_volt,w
 11884  118C  00F9               	movwf	lipo_battery_level@battery_volt
 11885  118D  31A3  239C         	fcall	_lipo_battery_level
 11886  118F  0140               	movlb	0	; select bank0
 11887  1190  00A2               	movwf	??_process_pmic_status
 11888  1191  0822               	movf	??_process_pmic_status,w
 11889  1192  0142               	movlb	2	; select bank2
 11890  1193  00CD               	movwf	_battery_level^(0+256)
 11891  1194  0008               	return
 11892  1195                     __end_of_process_pmic_status:	
 11893                           
 11894                           	psect	text8
 11895  239C                     __ptext8:	
 11896 ;; *************** function _lipo_battery_level *****************
 11897 ;; Defined at:
 11898 ;;		line 229 in file "pic_control_fun.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  battery_volt    2    9[COMMON] unsigned int 
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;  battery_leve    1    0[BANK0 ] unsigned char 
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      unsigned char 
 11905 ;; Registers used:
 11906 ;;		wreg, status,2, status,0, pclath, cstack
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11915 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11916 ;;Total ram usage:        4 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    3
 11919 ;; This function calls:
 11920 ;;		___lwdiv
 11921 ;; This function is called by:
 11922 ;;		_process_pmic_status
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           
 11927                           ;psect for function _lipo_battery_level
 11928  239C                     _lipo_battery_level:	
 11929                           
 11930                           ;pic_control_fun.c: 231: uint8_t battery_level_cal;
 11931                           ;pic_control_fun.c: 233: if(3500 >= battery_volt)
 11932                           
 11933                           ;incstack = 0
 11934                           ; Regs used in _lipo_battery_level: [wreg+status,2+status,0+pclath+cstack]
 11935  239C  300D               	movlw	13
 11936  239D  027A               	subwf	lipo_battery_level@battery_volt+1,w
 11937  239E  30AD               	movlw	173
 11938  239F  1903               	skipnz
 11939  23A0  0279               	subwf	lipo_battery_level@battery_volt,w
 11940  23A1  1803               	skipnc
 11941  23A2  2BA6               	goto	l9206
 11942                           
 11943                           ;pic_control_fun.c: 234: {
 11944                           ;pic_control_fun.c: 235: battery_level_cal = 0;
 11945  23A3  0140               	movlb	0	; select bank0
 11946  23A4  01A0               	clrf	lipo_battery_level@battery_level_cal
 11947                           
 11948                           ;pic_control_fun.c: 236: }
 11949  23A5  2BC0               	goto	l9212
 11950  23A6                     l9206:	
 11951                           
 11952                           ;pic_control_fun.c: 237: else if(4200 < battery_volt)
 11953  23A6  3010               	movlw	16
 11954  23A7  027A               	subwf	lipo_battery_level@battery_volt+1,w
 11955  23A8  3069               	movlw	105
 11956  23A9  1903               	skipnz
 11957  23AA  0279               	subwf	lipo_battery_level@battery_volt,w
 11958  23AB  1C03               	skipc
 11959  23AC  2BAF               	goto	l9210
 11960                           
 11961                           ;pic_control_fun.c: 238: {
 11962                           ;pic_control_fun.c: 239: battery_level_cal = 100;
 11963  23AD  3064               	movlw	100
 11964  23AE  2BBC               	goto	L1
 11965  23AF                     l9210:	
 11966                           ;pic_control_fun.c: 240: }
 11967                           
 11968                           
 11969                           ;pic_control_fun.c: 241: else
 11970                           ;pic_control_fun.c: 242: {
 11971                           ;pic_control_fun.c: 243: battery_level_cal = (battery_volt - 3500)/7;
 11972  23AF  3007               	movlw	7
 11973  23B0  00F1               	movwf	___lwdiv@divisor
 11974  23B1  3000               	movlw	0
 11975  23B2  00F2               	movwf	___lwdiv@divisor+1
 11976  23B3  0879               	movf	lipo_battery_level@battery_volt,w
 11977  23B4  3E54               	addlw	84
 11978  23B5  00F3               	movwf	___lwdiv@dividend
 11979  23B6  30F2               	movlw	242
 11980  23B7  3D7A               	addwfc	lipo_battery_level@battery_volt+1,w
 11981  23B8  00F4               	movwf	___lwdiv@dividend+1
 11982  23B9  31A5  25A4         	fcall	___lwdiv
 11983  23BB  0871               	movf	?___lwdiv,w
 11984  23BC                     L1:	
 11985  23BC  00FB               	movwf	??_lipo_battery_level
 11986  23BD  087B               	movf	??_lipo_battery_level,w
 11987  23BE  0140               	movlb	0	; select bank0
 11988  23BF  00A0               	movwf	lipo_battery_level@battery_level_cal
 11989  23C0                     l9212:	
 11990                           
 11991                           ;pic_control_fun.c: 244: }
 11992                           ;pic_control_fun.c: 245: return battery_level_cal;
 11993  23C0  0820               	movf	lipo_battery_level@battery_level_cal,w
 11994  23C1  0008               	return
 11995  23C2                     __end_of_lipo_battery_level:	
 11996                           
 11997                           	psect	text9
 11998  220B                     __ptext9:	
 11999 ;; *************** function _memset *****************
 12000 ;; Defined at:
 12001 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;  p1              1    wreg     PTR void 
 12004 ;;		 -> I2C_read_buff(10), 
 12005 ;;  c               2    1[COMMON] int 
 12006 ;;  n               2    3[COMMON] unsigned int 
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;  p1              1    6[COMMON] PTR void 
 12009 ;;		 -> I2C_read_buff(10), 
 12010 ;;  p               1    7[COMMON] PTR unsigned char 
 12011 ;;		 -> I2C_read_buff(10), 
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  1    wreg      PTR void 
 12014 ;; Registers used:
 12015 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12016 ;; Tracked objects:
 12017 ;;		On entry : 0/0
 12018 ;;		On exit  : 0/0
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12024 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12025 ;;Total ram usage:        7 bytes
 12026 ;; Hardware stack levels used:    1
 12027 ;; Hardware stack levels required when called:    2
 12028 ;; This function calls:
 12029 ;;		Nothing
 12030 ;; This function is called by:
 12031 ;;		_pmic_status_read
 12032 ;; This function uses a non-reentrant model
 12033 ;;
 12034                           
 12035                           
 12036                           ;psect for function _memset
 12037  220B                     _memset:	
 12038                           
 12039                           ;incstack = 0
 12040                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12041                           ;memset@p1 stored from wreg
 12042  220B  00F6               	movwf	memset@p1
 12043  220C  0876               	movf	memset@p1,w
 12044  220D  00F5               	movwf	??_memset
 12045  220E  0875               	movf	??_memset,w
 12046  220F  00F7               	movwf	memset@p
 12047  2210                     l6878:	
 12048  2210  3001               	movlw	1
 12049  2211  02F3               	subwf	memset@n,f
 12050  2212  3000               	movlw	0
 12051  2213  3BF4               	subwfb	memset@n+1,f
 12052  2214  0A73               	incf	memset@n,w
 12053  2215  1903               	btfsc	3,2
 12054  2216  0A74               	incf	memset@n+1,w
 12055  2217  1903               	btfsc	3,2
 12056  2218  0008               	return
 12057  2219  0871               	movf	memset@c,w
 12058  221A  00F5               	movwf	??_memset
 12059  221B  0877               	movf	memset@p,w
 12060  221C  0086               	movwf	6
 12061  221D  3001               	movlw	1	; select bank2/3
 12062  221E  0087               	movwf	7
 12063  221F  0875               	movf	??_memset,w
 12064  2220  0081               	movwf	1
 12065  2221  3001               	movlw	1
 12066  2222  00F5               	movwf	??_memset
 12067  2223  0875               	movf	??_memset,w
 12068  2224  07F7               	addwf	memset@p,f
 12069  2225  2A10               	goto	l6878
 12070  2226                     __end_of_memset:	
 12071                           ;	Return value of _memset is never used
 12072                           
 12073                           
 12074                           	psect	text10
 12075  1056                     __ptext10:	
 12076 ;; *************** function _init_bq25895 *****************
 12077 ;; Defined at:
 12078 ;;		line 11 in file "bq25895.c"
 12079 ;; Parameters:    Size  Location     Type
 12080 ;;		None
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;  I2c_buff        9    7[BANK0 ] unsigned char [9]
 12083 ;;  I2C_rsp         1    6[BANK0 ] unsigned char 
 12084 ;; Return value:  Size  Location     Type
 12085 ;;                  1    wreg      unsigned char 
 12086 ;; Registers used:
 12087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12088 ;; Tracked objects:
 12089 ;;		On entry : 0/0
 12090 ;;		On exit  : 0/0
 12091 ;;		Unchanged: 0/0
 12092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12094 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12095 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12096 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12097 ;;Total ram usage:       13 bytes
 12098 ;; Hardware stack levels used:    1
 12099 ;; Hardware stack levels required when called:    4
 12100 ;; This function calls:
 12101 ;;		_copybits8
 12102 ;;		_i2c_multi_read
 12103 ;;		_i2c_multi_write
 12104 ;; This function is called by:
 12105 ;;		_main
 12106 ;;		_pmic_status_read
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           
 12111                           ;psect for function _init_bq25895
 12112  1056                     _init_bq25895:	
 12113                           
 12114                           ;bq25895.c: 13: uint8_t I2C_rsp;
 12115                           ;bq25895.c: 14: uint8_t I2c_buff[9];
 12116                           ;bq25895.c: 16: i2c_multi_read(0xD4, 0x00, I2c_buff, 9);
 12117                           
 12118                           ;incstack = 0
 12119                           ; Regs used in _init_bq25895: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12120  1056  01F2               	clrf	i2c_multi_read@reg_addr
 12121  1057  3027               	movlw	low init_bq25895@I2c_buff
 12122  1058  00F3               	movwf	i2c_multi_read@data
 12123  1059  3000               	movlw	high init_bq25895@I2c_buff
 12124  105A  00F4               	movwf	i2c_multi_read@data+1
 12125  105B  3009               	movlw	9
 12126  105C  0140               	movlb	0	; select bank0
 12127  105D  00A3               	movwf	??_init_bq25895
 12128  105E  0823               	movf	??_init_bq25895,w
 12129  105F  00F5               	movwf	i2c_multi_read@length
 12130  1060  30D4               	movlw	212
 12131  1061  3199  2108  3190   	fcall	_i2c_multi_read
 12132                           
 12133                           ;bq25895.c: 17: I2c_buff[0] = copybits8(I2c_buff[0], 0b01111111, 0b00010100);
 12134  1064  307F               	movlw	127
 12135  1065  0140               	movlb	0	; select bank0
 12136  1066  00A3               	movwf	??_init_bq25895
 12137  1067  0823               	movf	??_init_bq25895,w
 12138  1068  00F1               	movwf	copybits8@mask
 12139  1069  3014               	movlw	20
 12140  106A  00A4               	movwf	??_init_bq25895+1
 12141  106B  0824               	movf	??_init_bq25895+1,w
 12142  106C  00F2               	movwf	copybits8@new_value
 12143  106D  0827               	movf	init_bq25895@I2c_buff,w
 12144  106E  31A0  208A  3190   	fcall	_copybits8
 12145  1071  0140               	movlb	0	; select bank0
 12146  1072  00A5               	movwf	??_init_bq25895+2
 12147  1073  0825               	movf	??_init_bq25895+2,w
 12148  1074  00A7               	movwf	init_bq25895@I2c_buff
 12149                           
 12150                           ;bq25895.c: 18: I2c_buff[1] = copybits8(I2c_buff[1], 0b00000000, 0b00000000);
 12151  1075  01F1               	clrf	copybits8@mask
 12152  1076  01F2               	clrf	copybits8@new_value
 12153  1077  0828               	movf	init_bq25895@I2c_buff+1,w
 12154  1078  31A0  208A  3190   	fcall	_copybits8
 12155  107B  0140               	movlb	0	; select bank0
 12156  107C  00A3               	movwf	??_init_bq25895
 12157  107D  0823               	movf	??_init_bq25895,w
 12158  107E  00A8               	movwf	init_bq25895@I2c_buff+1
 12159                           
 12160                           ;bq25895.c: 19: I2c_buff[2] = copybits8(I2c_buff[2], 0b00001101, 0b00000000);
 12161  107F  300D               	movlw	13
 12162  1080  00A3               	movwf	??_init_bq25895
 12163  1081  0823               	movf	??_init_bq25895,w
 12164  1082  00F1               	movwf	copybits8@mask
 12165  1083  01F2               	clrf	copybits8@new_value
 12166  1084  0829               	movf	init_bq25895@I2c_buff+2,w
 12167  1085  31A0  208A  3190   	fcall	_copybits8
 12168  1088  0140               	movlb	0	; select bank0
 12169  1089  00A4               	movwf	??_init_bq25895+1
 12170  108A  0824               	movf	??_init_bq25895+1,w
 12171  108B  00A9               	movwf	init_bq25895@I2c_buff+2
 12172                           
 12173                           ;bq25895.c: 20: I2c_buff[3] = copybits8(I2c_buff[3], 0b01100000, 0b01000000);
 12174  108C  3060               	movlw	96
 12175  108D  00A3               	movwf	??_init_bq25895
 12176  108E  0823               	movf	??_init_bq25895,w
 12177  108F  00F1               	movwf	copybits8@mask
 12178  1090  3040               	movlw	64
 12179  1091  00A4               	movwf	??_init_bq25895+1
 12180  1092  0824               	movf	??_init_bq25895+1,w
 12181  1093  00F2               	movwf	copybits8@new_value
 12182  1094  082A               	movf	init_bq25895@I2c_buff+3,w
 12183  1095  31A0  208A  3190   	fcall	_copybits8
 12184  1098  0140               	movlb	0	; select bank0
 12185  1099  00A5               	movwf	??_init_bq25895+2
 12186  109A  0825               	movf	??_init_bq25895+2,w
 12187  109B  00AA               	movwf	init_bq25895@I2c_buff+3
 12188                           
 12189                           ;bq25895.c: 21: I2c_buff[4] = copybits8(I2c_buff[4], 0b01111111, 0b00010000);
 12190  109C  307F               	movlw	127
 12191  109D  00A3               	movwf	??_init_bq25895
 12192  109E  0823               	movf	??_init_bq25895,w
 12193  109F  00F1               	movwf	copybits8@mask
 12194  10A0  3010               	movlw	16
 12195  10A1  00A4               	movwf	??_init_bq25895+1
 12196  10A2  0824               	movf	??_init_bq25895+1,w
 12197  10A3  00F2               	movwf	copybits8@new_value
 12198  10A4  082B               	movf	init_bq25895@I2c_buff+4,w
 12199  10A5  31A0  208A  3190   	fcall	_copybits8
 12200  10A8  0140               	movlb	0	; select bank0
 12201  10A9  00A5               	movwf	??_init_bq25895+2
 12202  10AA  0825               	movf	??_init_bq25895+2,w
 12203  10AB  00AB               	movwf	init_bq25895@I2c_buff+4
 12204                           
 12205                           ;bq25895.c: 22: I2c_buff[5] = copybits8(I2c_buff[5], 0b00001111, 0b00000011);
 12206  10AC  300F               	movlw	15
 12207  10AD  00A3               	movwf	??_init_bq25895
 12208  10AE  0823               	movf	??_init_bq25895,w
 12209  10AF  00F1               	movwf	copybits8@mask
 12210  10B0  3003               	movlw	3
 12211  10B1  00A4               	movwf	??_init_bq25895+1
 12212  10B2  0824               	movf	??_init_bq25895+1,w
 12213  10B3  00F2               	movwf	copybits8@new_value
 12214  10B4  082C               	movf	init_bq25895@I2c_buff+5,w
 12215  10B5  31A0  208A  3190   	fcall	_copybits8
 12216  10B8  0140               	movlb	0	; select bank0
 12217  10B9  00A5               	movwf	??_init_bq25895+2
 12218  10BA  0825               	movf	??_init_bq25895+2,w
 12219  10BB  00AC               	movwf	init_bq25895@I2c_buff+5
 12220                           
 12221                           ;bq25895.c: 23: I2c_buff[6] = copybits8(I2c_buff[6], 0b00000000, 0b00000000);
 12222  10BC  01F1               	clrf	copybits8@mask
 12223  10BD  01F2               	clrf	copybits8@new_value
 12224  10BE  082D               	movf	init_bq25895@I2c_buff+6,w
 12225  10BF  31A0  208A  3190   	fcall	_copybits8
 12226  10C2  0140               	movlb	0	; select bank0
 12227  10C3  00A3               	movwf	??_init_bq25895
 12228  10C4  0823               	movf	??_init_bq25895,w
 12229  10C5  00AD               	movwf	init_bq25895@I2c_buff+6
 12230                           
 12231                           ;bq25895.c: 24: I2c_buff[7] = copybits8(I2c_buff[7], 0b01000110, 0b00000100);
 12232  10C6  3046               	movlw	70
 12233  10C7  00A3               	movwf	??_init_bq25895
 12234  10C8  0823               	movf	??_init_bq25895,w
 12235  10C9  00F1               	movwf	copybits8@mask
 12236  10CA  3004               	movlw	4
 12237  10CB  00A4               	movwf	??_init_bq25895+1
 12238  10CC  0824               	movf	??_init_bq25895+1,w
 12239  10CD  00F2               	movwf	copybits8@new_value
 12240  10CE  082E               	movf	init_bq25895@I2c_buff+7,w
 12241  10CF  31A0  208A  3190   	fcall	_copybits8
 12242  10D2  0140               	movlb	0	; select bank0
 12243  10D3  00A5               	movwf	??_init_bq25895+2
 12244  10D4  0825               	movf	??_init_bq25895+2,w
 12245  10D5  00AE               	movwf	init_bq25895@I2c_buff+7
 12246                           
 12247                           ;bq25895.c: 25: I2c_buff[8] = copybits8(I2c_buff[8], 0b00000011, 0b00000000);
 12248  10D6  3003               	movlw	3
 12249  10D7  00A3               	movwf	??_init_bq25895
 12250  10D8  0823               	movf	??_init_bq25895,w
 12251  10D9  00F1               	movwf	copybits8@mask
 12252  10DA  01F2               	clrf	copybits8@new_value
 12253  10DB  082F               	movf	init_bq25895@I2c_buff+8,w
 12254  10DC  31A0  208A  3190   	fcall	_copybits8
 12255  10DF  0140               	movlb	0	; select bank0
 12256  10E0  00A4               	movwf	??_init_bq25895+1
 12257  10E1  0824               	movf	??_init_bq25895+1,w
 12258  10E2  00AF               	movwf	init_bq25895@I2c_buff+8
 12259                           
 12260                           ;bq25895.c: 26: I2C_rsp = i2c_multi_write(0xD4, 0x00, I2c_buff, 9);
 12261  10E3  01F2               	clrf	i2c_multi_write@reg_addr
 12262  10E4  3027               	movlw	(low (init_bq25895@I2c_buff| 0))& (0+255)
 12263  10E5  00A3               	movwf	??_init_bq25895
 12264  10E6  0823               	movf	??_init_bq25895,w
 12265  10E7  00F3               	movwf	i2c_multi_write@data
 12266  10E8  3009               	movlw	9
 12267  10E9  00A4               	movwf	??_init_bq25895+1
 12268  10EA  0824               	movf	??_init_bq25895+1,w
 12269  10EB  00F4               	movwf	i2c_multi_write@length
 12270  10EC  30D4               	movlw	212
 12271  10ED  31A5  2515         	fcall	_i2c_multi_write
 12272  10EF  0140               	movlb	0	; select bank0
 12273  10F0  00A5               	movwf	??_init_bq25895+2
 12274  10F1  0825               	movf	??_init_bq25895+2,w
 12275  10F2  00A6               	movwf	init_bq25895@I2C_rsp
 12276  10F3  0008               	return
 12277  10F4                     __end_of_init_bq25895:	
 12278                           ;bq25895.c: 28: return I2C_rsp;
 12279                           ;	Return value of _init_bq25895 is never used
 12280                           
 12281                           
 12282                           	psect	text11
 12283  2515                     __ptext11:	
 12284 ;; *************** function _i2c_multi_write *****************
 12285 ;; Defined at:
 12286 ;;		line 42 in file "bq25895.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;  device_addr     1    wreg     unsigned char 
 12289 ;;  reg_addr        1    2[COMMON] unsigned char 
 12290 ;;  data            1    3[COMMON] PTR unsigned char 
 12291 ;;		 -> init_bq25895@I2c_buff(9), 
 12292 ;;  length          1    4[COMMON] unsigned char 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  device_addr     1    7[COMMON] unsigned char 
 12295 ;;  j               1    9[COMMON] unsigned char 
 12296 ;;  I2C_rsp         1    8[COMMON] unsigned char 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      unsigned char 
 12299 ;; Registers used:
 12300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12306 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12307 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12309 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12310 ;;Total ram usage:        8 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:    3
 12313 ;; This function calls:
 12314 ;;		_i2c_start
 12315 ;;		_i2c_stop
 12316 ;;		_i2c_write
 12317 ;; This function is called by:
 12318 ;;		_init_bq25895
 12319 ;; This function uses a non-reentrant model
 12320 ;;
 12321                           
 12322                           
 12323                           ;psect for function _i2c_multi_write
 12324  2515                     _i2c_multi_write:	
 12325                           
 12326                           ;incstack = 0
 12327                           ; Regs used in _i2c_multi_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12328                           ;i2c_multi_write@device_addr stored from wreg
 12329  2515  00F7               	movwf	i2c_multi_write@device_addr
 12330                           
 12331                           ;bq25895.c: 44: uint8_t I2C_rsp;
 12332                           ;bq25895.c: 45: uint8_t j;
 12333                           ;bq25895.c: 46: i2c_start();
 12334  2516  31A0  2094  31A5   	fcall	_i2c_start
 12335                           
 12336                           ;bq25895.c: 47: I2C_rsp = i2c_write(device_addr);
 12337  2519  0877               	movf	i2c_multi_write@device_addr,w
 12338  251A  31A0  20D7  31A5   	fcall	_i2c_write
 12339  251D  00F5               	movwf	??_i2c_multi_write
 12340  251E  0875               	movf	??_i2c_multi_write,w
 12341  251F  00F8               	movwf	i2c_multi_write@I2C_rsp
 12342                           
 12343                           ;bq25895.c: 48: I2C_rsp = i2c_write(reg_addr);
 12344  2520  0872               	movf	i2c_multi_write@reg_addr,w
 12345  2521  31A0  20D7  31A5   	fcall	_i2c_write
 12346  2524  00F5               	movwf	??_i2c_multi_write
 12347  2525  0875               	movf	??_i2c_multi_write,w
 12348  2526  00F8               	movwf	i2c_multi_write@I2C_rsp
 12349                           
 12350                           ;bq25895.c: 49: for(j=0; j<length; j++)
 12351  2527  01F9               	clrf	i2c_multi_write@j
 12352  2528                     l9166:	
 12353  2528  0874               	movf	i2c_multi_write@length,w
 12354  2529  0279               	subwf	i2c_multi_write@j,w
 12355  252A  1803               	btfsc	3,0
 12356  252B  2D3E               	goto	l9168
 12357                           
 12358                           ;bq25895.c: 50: {
 12359                           ;bq25895.c: 51: I2C_rsp = i2c_write(data[j]);
 12360  252C  0879               	movf	i2c_multi_write@j,w
 12361  252D  0773               	addwf	i2c_multi_write@data,w
 12362  252E  00F5               	movwf	??_i2c_multi_write
 12363  252F  0875               	movf	??_i2c_multi_write,w
 12364  2530  0086               	movwf	6
 12365  2531  0187               	clrf	7
 12366  2532  0801               	movf	1,w
 12367  2533  31A0  20D7  31A5   	fcall	_i2c_write
 12368  2536  00F6               	movwf	??_i2c_multi_write+1
 12369  2537  0876               	movf	??_i2c_multi_write+1,w
 12370  2538  00F8               	movwf	i2c_multi_write@I2C_rsp
 12371  2539  3001               	movlw	1
 12372  253A  00F5               	movwf	??_i2c_multi_write
 12373  253B  0875               	movf	??_i2c_multi_write,w
 12374  253C  07F9               	addwf	i2c_multi_write@j,f
 12375  253D  2D28               	goto	l9166
 12376  253E                     l9168:	
 12377                           
 12378                           ;bq25895.c: 52: }
 12379                           ;bq25895.c: 53: i2c_stop();
 12380  253E  31A0  2099         	fcall	_i2c_stop
 12381                           
 12382                           ;bq25895.c: 54: return I2C_rsp;
 12383  2540  0878               	movf	i2c_multi_write@I2C_rsp,w
 12384  2541  0008               	return
 12385  2542                     __end_of_i2c_multi_write:	
 12386                           
 12387                           	psect	text12
 12388  1908                     __ptext12:	
 12389 ;; *************** function _i2c_multi_read *****************
 12390 ;; Defined at:
 12391 ;;		line 57 in file "bq25895.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;  device_addr     1    wreg     unsigned char 
 12394 ;;  reg_addr        1    2[COMMON] unsigned char 
 12395 ;;  data            2    3[COMMON] PTR unsigned char 
 12396 ;;		 -> I2C_read_buff(10), init_bq25895@I2c_buff(9), 
 12397 ;;  length          1    5[COMMON] unsigned char 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  device_addr     1    1[BANK0 ] unsigned char 
 12400 ;;  j               1    2[BANK0 ] unsigned char 
 12401 ;;  I2C_rsp         1    0[BANK0 ] unsigned char 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  2    2[COMMON] PTR unsigned char 
 12404 ;; Registers used:
 12405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12412 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12414 ;;      Totals:         9       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12415 ;;Total ram usage:       12 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; Hardware stack levels required when called:    3
 12418 ;; This function calls:
 12419 ;;		_i2c_read
 12420 ;;		_i2c_restart
 12421 ;;		_i2c_start
 12422 ;;		_i2c_stop
 12423 ;;		_i2c_write
 12424 ;; This function is called by:
 12425 ;;		_init_bq25895
 12426 ;;		_pmic_status_read
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           
 12431                           ;psect for function _i2c_multi_read
 12432  1908                     _i2c_multi_read:	
 12433                           
 12434                           ;incstack = 0
 12435                           ; Regs used in _i2c_multi_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12436                           ;i2c_multi_read@device_addr stored from wreg
 12437  1908  0140               	movlb	0	; select bank0
 12438  1909  00A1               	movwf	i2c_multi_read@device_addr
 12439                           
 12440                           ;bq25895.c: 59: uint8_t I2C_rsp;
 12441                           ;bq25895.c: 60: uint8_t j;
 12442                           ;bq25895.c: 61: i2c_start();
 12443  190A  31A0  2094  3199   	fcall	_i2c_start
 12444                           
 12445                           ;bq25895.c: 62: I2C_rsp = i2c_write(device_addr);
 12446  190D  0140               	movlb	0	; select bank0
 12447  190E  0821               	movf	i2c_multi_read@device_addr,w
 12448  190F  31A0  20D7  3199   	fcall	_i2c_write
 12449  1912  00F6               	movwf	??_i2c_multi_read
 12450  1913  0876               	movf	??_i2c_multi_read,w
 12451  1914  0140               	movlb	0	; select bank0
 12452  1915  00A0               	movwf	i2c_multi_read@I2C_rsp
 12453                           
 12454                           ;bq25895.c: 63: I2C_rsp = i2c_write(reg_addr);
 12455  1916  0872               	movf	i2c_multi_read@reg_addr,w
 12456  1917  31A0  20D7  3199   	fcall	_i2c_write
 12457  191A  00F6               	movwf	??_i2c_multi_read
 12458  191B  0876               	movf	??_i2c_multi_read,w
 12459  191C  0140               	movlb	0	; select bank0
 12460  191D  00A0               	movwf	i2c_multi_read@I2C_rsp
 12461                           
 12462                           ;bq25895.c: 64: i2c_restart();
 12463  191E  31A0  208F  3199   	fcall	_i2c_restart
 12464                           
 12465                           ;bq25895.c: 65: I2C_rsp = (uint8_t)i2c_write(device_addr + 1);
 12466  1921  0140               	movlb	0	; select bank0
 12467  1922  0821               	movf	i2c_multi_read@device_addr,w
 12468  1923  3E01               	addlw	1
 12469  1924  31A0  20D7  3199   	fcall	_i2c_write
 12470  1927  00F6               	movwf	??_i2c_multi_read
 12471  1928  0876               	movf	??_i2c_multi_read,w
 12472  1929  0140               	movlb	0	; select bank0
 12473  192A  00A0               	movwf	i2c_multi_read@I2C_rsp
 12474                           
 12475                           ;bq25895.c: 67: for(j=0; j<length; j++)
 12476  192B  01A2               	clrf	i2c_multi_read@j
 12477  192C                     l9148:	
 12478  192C  0875               	movf	i2c_multi_read@length,w
 12479  192D  0222               	subwf	i2c_multi_read@j,w
 12480  192E  1803               	btfsc	3,0
 12481  192F  2958               	goto	l9150
 12482                           
 12483                           ;bq25895.c: 68: {
 12484                           ;bq25895.c: 69: if(j == (length - 1))
 12485  1930  0875               	movf	i2c_multi_read@length,w
 12486  1931  3EFF               	addlw	255
 12487  1932  00F6               	movwf	??_i2c_multi_read
 12488  1933  30FF               	movlw	255
 12489  1934  1803               	skipnc
 12490  1935  3000               	movlw	0
 12491  1936  00F7               	movwf	??_i2c_multi_read+1
 12492  1937  0822               	movf	i2c_multi_read@j,w
 12493  1938  0676               	xorwf	??_i2c_multi_read,w
 12494  1939  0477               	iorwf	??_i2c_multi_read+1,w
 12495  193A  1D03               	skipz
 12496  193B  293E               	goto	l9144
 12497                           
 12498                           ;bq25895.c: 70: {
 12499                           ;bq25895.c: 71: data[j] = i2c_read(1);
 12500  193C  3001               	movlw	1
 12501  193D  293F               	goto	L3
 12502  193E                     l9144:	
 12503                           ;bq25895.c: 72: }
 12504                           
 12505                           
 12506                           ;bq25895.c: 73: else
 12507                           ;bq25895.c: 74: {
 12508                           ;bq25895.c: 75: data[j] = i2c_read(0);
 12509  193E  3000               	movlw	0
 12510  193F                     L3:	
 12511  193F  31A1  2121  3199   	fcall	_i2c_read
 12512  1942  00F6               	movwf	??_i2c_multi_read
 12513  1943  0140               	movlb	0	; select bank0
 12514  1944  0822               	movf	i2c_multi_read@j,w
 12515  1945  00F7               	movwf	??_i2c_multi_read+1
 12516  1946  01F8               	clrf	??_i2c_multi_read+2
 12517  1947  0877               	movf	??_i2c_multi_read+1,w
 12518  1948  0773               	addwf	i2c_multi_read@data,w
 12519  1949  00F9               	movwf	??_i2c_multi_read+3
 12520  194A  0878               	movf	??_i2c_multi_read+2,w
 12521  194B  3D74               	addwfc	i2c_multi_read@data+1,w
 12522  194C  00FA               	movwf	??_i2c_multi_read+4
 12523  194D  0879               	movf	??_i2c_multi_read+3,w
 12524  194E  0086               	movwf	6
 12525  194F  087A               	movf	??_i2c_multi_read+4,w
 12526  1950  0087               	movwf	7
 12527  1951  0876               	movf	??_i2c_multi_read,w
 12528  1952  0081               	movwf	1
 12529  1953  3001               	movlw	1
 12530  1954  00F6               	movwf	??_i2c_multi_read
 12531  1955  0876               	movf	??_i2c_multi_read,w
 12532  1956  07A2               	addwf	i2c_multi_read@j,f
 12533  1957  292C               	goto	l9148
 12534  1958                     l9150:	
 12535                           
 12536                           ;bq25895.c: 76: }
 12537                           ;bq25895.c: 77: }
 12538                           ;bq25895.c: 79: i2c_stop();
 12539  1958  31A0  2099         	fcall	_i2c_stop
 12540  195A  0008               	return
 12541  195B                     __end_of_i2c_multi_read:	
 12542                           ;bq25895.c: 81: return data;
 12543                           ;	Return value of _i2c_multi_read is never used
 12544                           
 12545                           
 12546                           	psect	text13
 12547  2376                     __ptext13:	
 12548 ;; *************** function _bq25895_WDT_reset *****************
 12549 ;; Defined at:
 12550 ;;		line 30 in file "bq25895.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;		None
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;  Reg_03_value    1   10[COMMON] unsigned char 
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      unsigned char 
 12557 ;; Registers used:
 12558 ;;		wreg, status,2, status,0, pclath, cstack
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12566 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12568 ;;Total ram usage:        4 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:    4
 12571 ;; This function calls:
 12572 ;;		_copybits8
 12573 ;;		_i2c_single_read
 12574 ;;		_i2c_single_write
 12575 ;; This function is called by:
 12576 ;;		_pmic_status_read
 12577 ;; This function uses a non-reentrant model
 12578 ;;
 12579                           
 12580                           
 12581                           ;psect for function _bq25895_WDT_reset
 12582  2376                     _bq25895_WDT_reset:	
 12583                           
 12584                           ;bq25895.c: 33: uint8_t Reg_03_value;
 12585                           ;bq25895.c: 34: Reg_03_value = i2c_single_read(0xD4, 0x03);
 12586                           
 12587                           ;incstack = 0
 12588                           ; Regs used in _bq25895_WDT_reset: [wreg+status,2+status,0+pclath+cstack]
 12589  2376  3003               	movlw	3
 12590  2377  00F7               	movwf	??_bq25895_WDT_reset
 12591  2378  0877               	movf	??_bq25895_WDT_reset,w
 12592  2379  00F2               	movwf	i2c_single_read@reg_addr
 12593  237A  30D4               	movlw	212
 12594  237B  31A3  23EA  31A3   	fcall	_i2c_single_read
 12595  237E  00F8               	movwf	??_bq25895_WDT_reset+1
 12596  237F  0878               	movf	??_bq25895_WDT_reset+1,w
 12597  2380  00FA               	movwf	bq25895_WDT_reset@Reg_03_value
 12598                           
 12599                           ;bq25895.c: 36: Reg_03_value = copybits8(Reg_03_value, 0b01100000, 0b01000000);
 12600  2381  3060               	movlw	96
 12601  2382  00F7               	movwf	??_bq25895_WDT_reset
 12602  2383  0877               	movf	??_bq25895_WDT_reset,w
 12603  2384  00F1               	movwf	copybits8@mask
 12604  2385  3040               	movlw	64
 12605  2386  00F8               	movwf	??_bq25895_WDT_reset+1
 12606  2387  0878               	movf	??_bq25895_WDT_reset+1,w
 12607  2388  00F2               	movwf	copybits8@new_value
 12608  2389  087A               	movf	bq25895_WDT_reset@Reg_03_value,w
 12609  238A  31A0  208A  31A3   	fcall	_copybits8
 12610  238D  00F9               	movwf	??_bq25895_WDT_reset+2
 12611  238E  0879               	movf	??_bq25895_WDT_reset+2,w
 12612  238F  00FA               	movwf	bq25895_WDT_reset@Reg_03_value
 12613                           
 12614                           ;bq25895.c: 38: i2c_single_write(0xD4, 0x03, Reg_03_value);
 12615  2390  3003               	movlw	3
 12616  2391  00F7               	movwf	??_bq25895_WDT_reset
 12617  2392  0877               	movf	??_bq25895_WDT_reset,w
 12618  2393  00F2               	movwf	i2c_single_write@reg_addr
 12619  2394  087A               	movf	bq25895_WDT_reset@Reg_03_value,w
 12620  2395  00F8               	movwf	??_bq25895_WDT_reset+1
 12621  2396  0878               	movf	??_bq25895_WDT_reset+1,w
 12622  2397  00F3               	movwf	i2c_single_write@data
 12623  2398  30D4               	movlw	212
 12624  2399  31A2  22B2         	fcall	_i2c_single_write
 12625  239B  0008               	return
 12626  239C                     __end_of_bq25895_WDT_reset:	
 12627                           ;bq25895.c: 39: return 0;
 12628                           ;	Return value of _bq25895_WDT_reset is never used
 12629                           
 12630                           
 12631                           	psect	text14
 12632  22B2                     __ptext14:	
 12633 ;; *************** function _i2c_single_write *****************
 12634 ;; Defined at:
 12635 ;;		line 84 in file "bq25895.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;  device_addr     1    wreg     unsigned char 
 12638 ;;  reg_addr        1    2[COMMON] unsigned char 
 12639 ;;  data            1    3[COMMON] unsigned char 
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;  device_addr     1    5[COMMON] unsigned char 
 12642 ;;  I2C_rsp         1    6[COMMON] unsigned char 
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  1    wreg      unsigned char 
 12645 ;; Registers used:
 12646 ;;		wreg, status,2, status,0, pclath, cstack
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12655 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12656 ;;Total ram usage:        5 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; Hardware stack levels required when called:    3
 12659 ;; This function calls:
 12660 ;;		_i2c_start
 12661 ;;		_i2c_stop
 12662 ;;		_i2c_write
 12663 ;; This function is called by:
 12664 ;;		_bq25895_WDT_reset
 12665 ;;		_pmic_status_read
 12666 ;; This function uses a non-reentrant model
 12667 ;;
 12668                           
 12669                           
 12670                           ;psect for function _i2c_single_write
 12671  22B2                     _i2c_single_write:	
 12672                           
 12673                           ;incstack = 0
 12674                           ; Regs used in _i2c_single_write: [wreg+status,2+status,0+pclath+cstack]
 12675                           ;i2c_single_write@device_addr stored from wreg
 12676  22B2  00F5               	movwf	i2c_single_write@device_addr
 12677                           
 12678                           ;bq25895.c: 86: uint8_t I2C_rsp;
 12679                           ;bq25895.c: 87: i2c_start();
 12680  22B3  31A0  2094  31A2   	fcall	_i2c_start
 12681                           
 12682                           ;bq25895.c: 88: I2C_rsp = i2c_write(device_addr);
 12683  22B6  0875               	movf	i2c_single_write@device_addr,w
 12684  22B7  31A0  20D7  31A2   	fcall	_i2c_write
 12685  22BA  00F4               	movwf	??_i2c_single_write
 12686  22BB  0874               	movf	??_i2c_single_write,w
 12687  22BC  00F6               	movwf	i2c_single_write@I2C_rsp
 12688                           
 12689                           ;bq25895.c: 89: I2C_rsp = i2c_write(reg_addr);
 12690  22BD  0872               	movf	i2c_single_write@reg_addr,w
 12691  22BE  31A0  20D7  31A2   	fcall	_i2c_write
 12692  22C1  00F4               	movwf	??_i2c_single_write
 12693  22C2  0874               	movf	??_i2c_single_write,w
 12694  22C3  00F6               	movwf	i2c_single_write@I2C_rsp
 12695                           
 12696                           ;bq25895.c: 90: I2C_rsp = i2c_write(data);
 12697  22C4  0873               	movf	i2c_single_write@data,w
 12698  22C5  31A0  20D7  31A2   	fcall	_i2c_write
 12699  22C8  00F4               	movwf	??_i2c_single_write
 12700  22C9  0874               	movf	??_i2c_single_write,w
 12701  22CA  00F6               	movwf	i2c_single_write@I2C_rsp
 12702                           
 12703                           ;bq25895.c: 91: i2c_stop();
 12704  22CB  31A0  2099         	fcall	_i2c_stop
 12705  22CD  0008               	return
 12706  22CE                     __end_of_i2c_single_write:	
 12707                           ;bq25895.c: 92: return I2C_rsp;
 12708                           ;	Return value of _i2c_single_write is never used
 12709                           
 12710                           
 12711                           	psect	text15
 12712  23EA                     __ptext15:	
 12713 ;; *************** function _i2c_single_read *****************
 12714 ;; Defined at:
 12715 ;;		line 95 in file "bq25895.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;  device_addr     1    wreg     unsigned char 
 12718 ;;  reg_addr        1    2[COMMON] unsigned char 
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;  device_addr     1    6[COMMON] unsigned char 
 12721 ;;  I2C_data        1    5[COMMON] unsigned char 
 12722 ;;  I2C_rsp         1    4[COMMON] unsigned char 
 12723 ;; Return value:  Size  Location     Type
 12724 ;;                  1    wreg      unsigned char 
 12725 ;; Registers used:
 12726 ;;		wreg, status,2, status,0, pclath, cstack
 12727 ;; Tracked objects:
 12728 ;;		On entry : 0/0
 12729 ;;		On exit  : 0/0
 12730 ;;		Unchanged: 0/0
 12731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12732 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12733 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12735 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12736 ;;Total ram usage:        5 bytes
 12737 ;; Hardware stack levels used:    1
 12738 ;; Hardware stack levels required when called:    3
 12739 ;; This function calls:
 12740 ;;		_i2c_read
 12741 ;;		_i2c_restart
 12742 ;;		_i2c_start
 12743 ;;		_i2c_stop
 12744 ;;		_i2c_write
 12745 ;; This function is called by:
 12746 ;;		_bq25895_WDT_reset
 12747 ;;		_pmic_status_read
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           
 12752                           ;psect for function _i2c_single_read
 12753  23EA                     _i2c_single_read:	
 12754                           
 12755                           ;incstack = 0
 12756                           ; Regs used in _i2c_single_read: [wreg+status,2+status,0+pclath+cstack]
 12757                           ;i2c_single_read@device_addr stored from wreg
 12758  23EA  00F6               	movwf	i2c_single_read@device_addr
 12759                           
 12760                           ;bq25895.c: 97: uint8_t I2C_rsp;
 12761                           ;bq25895.c: 98: uint8_t I2C_data;
 12762                           ;bq25895.c: 99: i2c_start();
 12763  23EB  31A0  2094  31A3   	fcall	_i2c_start
 12764                           
 12765                           ;bq25895.c: 100: I2C_rsp = i2c_write(device_addr);
 12766  23EE  0876               	movf	i2c_single_read@device_addr,w
 12767  23EF  31A0  20D7  31A3   	fcall	_i2c_write
 12768  23F2  00F3               	movwf	??_i2c_single_read
 12769  23F3  0873               	movf	??_i2c_single_read,w
 12770  23F4  00F4               	movwf	i2c_single_read@I2C_rsp
 12771                           
 12772                           ;bq25895.c: 101: I2C_rsp = i2c_write(reg_addr);
 12773  23F5  0872               	movf	i2c_single_read@reg_addr,w
 12774  23F6  31A0  20D7  31A3   	fcall	_i2c_write
 12775  23F9  00F3               	movwf	??_i2c_single_read
 12776  23FA  0873               	movf	??_i2c_single_read,w
 12777  23FB  00F4               	movwf	i2c_single_read@I2C_rsp
 12778                           
 12779                           ;bq25895.c: 102: i2c_restart();
 12780  23FC  31A0  208F  31A3   	fcall	_i2c_restart
 12781                           
 12782                           ;bq25895.c: 103: I2C_rsp = (uint8_t)i2c_write(device_addr + 1);
 12783  23FF  0876               	movf	i2c_single_read@device_addr,w
 12784  2400  3E01               	addlw	1
 12785  2401  31A0  20D7  31A3   	fcall	_i2c_write
 12786  2404  00F3               	movwf	??_i2c_single_read
 12787  2405  0873               	movf	??_i2c_single_read,w
 12788  2406  00F4               	movwf	i2c_single_read@I2C_rsp
 12789                           
 12790                           ;bq25895.c: 104: I2C_data = i2c_read(1);
 12791  2407  3001               	movlw	1
 12792  2408  31A1  2121  31A3   	fcall	_i2c_read
 12793  240B  00F3               	movwf	??_i2c_single_read
 12794  240C  0873               	movf	??_i2c_single_read,w
 12795  240D  00F5               	movwf	i2c_single_read@I2C_data
 12796                           
 12797                           ;bq25895.c: 105: i2c_stop();
 12798  240E  31A0  2099         	fcall	_i2c_stop
 12799                           
 12800                           ;bq25895.c: 106: return I2C_data;
 12801  2410  0875               	movf	i2c_single_read@I2C_data,w
 12802  2411  0008               	return
 12803  2412                     __end_of_i2c_single_read:	
 12804                           
 12805                           	psect	text16
 12806  20D7                     __ptext16:	
 12807 ;; *************** function _i2c_write *****************
 12808 ;; Defined at:
 12809 ;;		line 49 in file "pic_i2c.c"
 12810 ;; Parameters:    Size  Location     Type
 12811 ;;  data            1    wreg     unsigned char 
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;  data            1    1[COMMON] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  1    wreg      unsigned char 
 12816 ;; Registers used:
 12817 ;;		wreg, status,2, status,0
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12827 ;;Total ram usage:        1 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    2
 12830 ;; This function calls:
 12831 ;;		Nothing
 12832 ;; This function is called by:
 12833 ;;		_i2c_multi_write
 12834 ;;		_i2c_multi_read
 12835 ;;		_i2c_single_write
 12836 ;;		_i2c_single_read
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           
 12841                           ;psect for function _i2c_write
 12842  20D7                     _i2c_write:	
 12843                           
 12844                           ;incstack = 0
 12845                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
 12846                           ;i2c_write@data stored from wreg
 12847  20D7  00F1               	movwf	i2c_write@data
 12848                           
 12849                           ;pic_i2c.c: 51: SSP1BUF = data;
 12850  20D8  0871               	movf	i2c_write@data,w
 12851  20D9  0143               	movlb	3	; select bank3
 12852  20DA  008C               	movwf	12	;volatile
 12853  20DB                     l1654:	
 12854                           ;pic_i2c.c: 52: while(SSP1STATbits.RW);
 12855                           
 12856  20DB  190F               	btfsc	15,2	;volatile
 12857  20DC  28DB               	goto	l1654
 12858                           
 12859                           ;pic_i2c.c: 54: return SSP1CON2bits.ACKSTAT;
 12860  20DD  0E11               	swapf	17,w	;volatile
 12861  20DE  0C89               	rrf	9,f
 12862  20DF  0C89               	rrf	9,f
 12863  20E0  3901               	andlw	1
 12864  20E1  0008               	return
 12865  20E2                     __end_of_i2c_write:	
 12866                           
 12867                           	psect	text17
 12868  2099                     __ptext17:	
 12869 ;; *************** function _i2c_stop *****************
 12870 ;; Defined at:
 12871 ;;		line 41 in file "pic_i2c.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;		None
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;		None
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  1    wreg      void 
 12878 ;; Registers used:
 12879 ;;		None
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12889 ;;Total ram usage:        0 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; Hardware stack levels required when called:    2
 12892 ;; This function calls:
 12893 ;;		Nothing
 12894 ;; This function is called by:
 12895 ;;		_i2c_multi_write
 12896 ;;		_i2c_multi_read
 12897 ;;		_i2c_single_write
 12898 ;;		_i2c_single_read
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           
 12903                           ;psect for function _i2c_stop
 12904  2099                     _i2c_stop:	
 12905                           
 12906                           ;pic_i2c.c: 43: SSP1CON2bits.PEN = 1;
 12907                           
 12908                           ;incstack = 0
 12909                           ; Regs used in _i2c_stop: []
 12910  2099  0143               	movlb	3	; select bank3
 12911  209A  1511               	bsf	17,2	;volatile
 12912  209B                     l1648:	
 12913                           ;pic_i2c.c: 44: while(SSP1CON2bits.PEN);
 12914                           
 12915  209B  1D11               	btfss	17,2	;volatile
 12916  209C  0008               	return
 12917  209D  289B               	goto	l1648
 12918  209E                     __end_of_i2c_stop:	
 12919                           ;pic_i2c.c: 46: return;
 12920                           
 12921                           
 12922                           	psect	text18
 12923  2094                     __ptext18:	
 12924 ;; *************** function _i2c_start *****************
 12925 ;; Defined at:
 12926 ;;		line 24 in file "pic_i2c.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		None
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12944 ;;Total ram usage:        0 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    2
 12947 ;; This function calls:
 12948 ;;		Nothing
 12949 ;; This function is called by:
 12950 ;;		_i2c_multi_write
 12951 ;;		_i2c_multi_read
 12952 ;;		_i2c_single_write
 12953 ;;		_i2c_single_read
 12954 ;; This function uses a non-reentrant model
 12955 ;;
 12956                           
 12957                           
 12958                           ;psect for function _i2c_start
 12959  2094                     _i2c_start:	
 12960                           
 12961                           ;pic_i2c.c: 26: SSP1CON2bits.SEN = 1;
 12962                           
 12963                           ;incstack = 0
 12964                           ; Regs used in _i2c_start: []
 12965  2094  0143               	movlb	3	; select bank3
 12966  2095  1411               	bsf	17,0	;volatile
 12967  2096                     l1636:	
 12968                           ;pic_i2c.c: 27: while(SSP1CON2bits.SEN);
 12969                           
 12970  2096  1C11               	btfss	17,0	;volatile
 12971  2097  0008               	return
 12972  2098  2896               	goto	l1636
 12973  2099                     __end_of_i2c_start:	
 12974                           ;pic_i2c.c: 29: return;
 12975                           
 12976                           
 12977                           	psect	text19
 12978  208F                     __ptext19:	
 12979 ;; *************** function _i2c_restart *****************
 12980 ;; Defined at:
 12981 ;;		line 32 in file "pic_i2c.c"
 12982 ;; Parameters:    Size  Location     Type
 12983 ;;		None
 12984 ;; Auto vars:     Size  Location     Type
 12985 ;;		None
 12986 ;; Return value:  Size  Location     Type
 12987 ;;                  1    wreg      void 
 12988 ;; Registers used:
 12989 ;;		None
 12990 ;; Tracked objects:
 12991 ;;		On entry : 0/0
 12992 ;;		On exit  : 0/0
 12993 ;;		Unchanged: 0/0
 12994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12999 ;;Total ram usage:        0 bytes
 13000 ;; Hardware stack levels used:    1
 13001 ;; Hardware stack levels required when called:    2
 13002 ;; This function calls:
 13003 ;;		Nothing
 13004 ;; This function is called by:
 13005 ;;		_i2c_multi_read
 13006 ;;		_i2c_single_read
 13007 ;; This function uses a non-reentrant model
 13008 ;;
 13009                           
 13010                           
 13011                           ;psect for function _i2c_restart
 13012  208F                     _i2c_restart:	
 13013                           
 13014                           ;pic_i2c.c: 34: SSP1CON2bits.RSEN = 1;
 13015                           
 13016                           ;incstack = 0
 13017                           ; Regs used in _i2c_restart: []
 13018  208F  0143               	movlb	3	; select bank3
 13019  2090  1491               	bsf	17,1	;volatile
 13020  2091                     l1642:	
 13021                           ;pic_i2c.c: 35: while(SSP1CON2bits.RSEN);
 13022                           
 13023  2091  1C91               	btfss	17,1	;volatile
 13024  2092  0008               	return
 13025  2093  2891               	goto	l1642
 13026  2094                     __end_of_i2c_restart:	
 13027                           ;pic_i2c.c: 37: return;
 13028                           
 13029                           
 13030                           	psect	text20
 13031  2121                     __ptext20:	
 13032 ;; *************** function _i2c_read *****************
 13033 ;; Defined at:
 13034 ;;		line 57 in file "pic_i2c.c"
 13035 ;; Parameters:    Size  Location     Type
 13036 ;;  ack             1    wreg     unsigned char 
 13037 ;; Auto vars:     Size  Location     Type
 13038 ;;  ack             1    1[COMMON] unsigned char 
 13039 ;; Return value:  Size  Location     Type
 13040 ;;                  1    wreg      unsigned char 
 13041 ;; Registers used:
 13042 ;;		wreg, status,0
 13043 ;; Tracked objects:
 13044 ;;		On entry : 0/0
 13045 ;;		On exit  : 0/0
 13046 ;;		Unchanged: 0/0
 13047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13052 ;;Total ram usage:        1 bytes
 13053 ;; Hardware stack levels used:    1
 13054 ;; Hardware stack levels required when called:    2
 13055 ;; This function calls:
 13056 ;;		Nothing
 13057 ;; This function is called by:
 13058 ;;		_i2c_multi_read
 13059 ;;		_i2c_single_read
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           
 13063                           
 13064                           ;psect for function _i2c_read
 13065  2121                     _i2c_read:	
 13066                           
 13067                           ;incstack = 0
 13068                           ; Regs used in _i2c_read: [wreg+status,0]
 13069                           ;i2c_read@ack stored from wreg
 13070  2121  00F1               	movwf	i2c_read@ack
 13071                           
 13072                           ;pic_i2c.c: 59: SSP1CON2bits.RCEN = 1;
 13073  2122  0143               	movlb	3	; select bank3
 13074  2123  1591               	bsf	17,3	;volatile
 13075                           
 13076                           ;pic_i2c.c: 61: SSP1CON2bits.ACKDT = ack;
 13077  2124  0C71               	rrf	i2c_read@ack,w
 13078  2125  1C03               	skipc
 13079  2126  1291               	bcf	17,5	;volatile
 13080  2127  1803               	skipnc
 13081  2128  1691               	bsf	17,5	;volatile
 13082  2129                     l1660:	
 13083                           ;pic_i2c.c: 65: while(!SSP1STATbits.BF);
 13084                           
 13085  2129  1C0F               	btfss	15,0	;volatile
 13086  212A  2929               	goto	l1660
 13087                           
 13088                           ;pic_i2c.c: 67: SSP1CON2bits.RCEN = 0;
 13089  212B  1191               	bcf	17,3	;volatile
 13090                           
 13091                           ;pic_i2c.c: 69: SSP1CON2bits.ACKEN = 1;
 13092  212C  1611               	bsf	17,4	;volatile
 13093  212D                     l1663:	
 13094                           ;pic_i2c.c: 70: while(SSP1CON2bits.ACKEN);
 13095                           
 13096  212D  1A11               	btfsc	17,4	;volatile
 13097  212E  292D               	goto	l1663
 13098                           
 13099                           ;pic_i2c.c: 72: return SSP1BUF;
 13100  212F  080C               	movf	12,w	;volatile
 13101  2130  0008               	return
 13102  2131                     __end_of_i2c_read:	
 13103                           
 13104                           	psect	text21
 13105  208A                     __ptext21:	
 13106 ;; *************** function _copybits8 *****************
 13107 ;; Defined at:
 13108 ;;		line 8 in file "bq25895.c"
 13109 ;; Parameters:    Size  Location     Type
 13110 ;;  value           1    wreg     unsigned char 
 13111 ;;  mask            1    1[COMMON] unsigned char 
 13112 ;;  new_value       1    2[COMMON] unsigned char 
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;  value           1    3[COMMON] unsigned char 
 13115 ;; Return value:  Size  Location     Type
 13116 ;;                  1    wreg      unsigned char 
 13117 ;; Registers used:
 13118 ;;		wreg, status,2, status,0
 13119 ;; Tracked objects:
 13120 ;;		On entry : 0/0
 13121 ;;		On exit  : 0/0
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13127 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13128 ;;Total ram usage:        3 bytes
 13129 ;; Hardware stack levels used:    1
 13130 ;; Hardware stack levels required when called:    2
 13131 ;; This function calls:
 13132 ;;		Nothing
 13133 ;; This function is called by:
 13134 ;;		_init_bq25895
 13135 ;;		_bq25895_WDT_reset
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function _copybits8
 13141  208A                     _copybits8:	
 13142                           
 13143                           ;incstack = 0
 13144                           ; Regs used in _copybits8: [wreg+status,2+status,0]
 13145                           ;copybits8@value stored from wreg
 13146  208A  00F3               	movwf	copybits8@value
 13147  208B  0971               	comf	copybits8@mask,w
 13148  208C  0573               	andwf	copybits8@value,w
 13149  208D  0472               	iorwf	copybits8@new_value,w
 13150  208E  0008               	return
 13151  208F                     __end_of_copybits8:	
 13152                           
 13153                           	psect	text22
 13154  1A6E                     __ptext22:	
 13155 ;; *************** function _dw_main *****************
 13156 ;; Defined at:
 13157 ;;		line 86 in file "decawave.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;		None
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;  data           50    0        unsigned char [50]
 13162 ;; Return value:  Size  Location     Type
 13163 ;;                  1    wreg      void 
 13164 ;; Registers used:
 13165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13166 ;; Tracked objects:
 13167 ;;		On entry : 0/0
 13168 ;;		On exit  : 0/0
 13169 ;;		Unchanged: 0/0
 13170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13173 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13174 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13175 ;;Total ram usage:        1 bytes
 13176 ;; Hardware stack levels used:    1
 13177 ;; Hardware stack levels required when called:   13
 13178 ;; This function calls:
 13179 ;;		_Sleep
 13180 ;;		_dwt_configure
 13181 ;;		_dwt_configuretxrf
 13182 ;;		_dwt_initialise
 13183 ;;		_dwt_setrxantennadelay
 13184 ;;		_dwt_settxantennadelay
 13185 ;;		_dwt_starttx
 13186 ;;		_dwt_writetxdata
 13187 ;;		_dwt_writetxfctrl
 13188 ;;		_printf_string
 13189 ;;		_reset_DWIC
 13190 ;; This function is called by:
 13191 ;;		_main
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           
 13196                           ;psect for function _dw_main
 13197  1A6E                     _dw_main:	
 13198                           
 13199                           ;decawave.c: 88: char data[50];
 13200                           ;decawave.c: 90: printf_string("\n\rdw_main");
 13201                           
 13202                           ;incstack = 0
 13203                           ; Regs used in _dw_main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13204  1A6E  307B               	movlw	low (STR_18| (0+32768))
 13205  1A6F  00F2               	movwf	printf_string@data
 13206  1A70  30A9               	movlw	high (STR_18| (0+32768))
 13207  1A71  00F3               	movwf	printf_string@data+1
 13208  1A72  31A1  2131  319A   	fcall	_printf_string
 13209                           
 13210                           ;decawave.c: 95: reset_DWIC();
 13211  1A75  31A1  21A0  319A   	fcall	_reset_DWIC
 13212                           
 13213                           ;decawave.c: 98: if (dwt_initialise(0x0) == (-1))
 13214  1A78  3000               	movlw	0
 13215  1A79  0141               	movlb	1	; select bank1
 13216  1A7A  00CD               	movwf	dwt_initialise@mode^(0+128)
 13217  1A7B  00CE               	movwf	(dwt_initialise@mode+1)^(0+128)
 13218  1A7C  318B  2306  319A   	fcall	_dwt_initialise
 13219  1A7F  0141               	movlb	1	; select bank1
 13220  1A80  0A4D               	incf	?_dwt_initialise^(0+128),w
 13221  1A81  1D03               	skipz
 13222  1A82  2A8E               	goto	l9792
 13223  1A83  0A4E               	incf	(?_dwt_initialise+1)^(0+128),w
 13224  1A84  1D03               	btfss	3,2
 13225  1A85  2A8E               	goto	l9792
 13226                           
 13227                           ;decawave.c: 99: {
 13228                           ;decawave.c: 101: printf_string("\n\rDWM_ERROR");
 13229  1A86  305A               	movlw	low (STR_19| (0+32768))
 13230  1A87  00F2               	movwf	printf_string@data
 13231  1A88  30A9               	movlw	high (STR_19| (0+32768))
 13232  1A89  00F3               	movwf	printf_string@data+1
 13233  1A8A  31A1  2131  319A   	fcall	_printf_string
 13234  1A8D                     l1387:	
 13235                           ;decawave.c: 103: while (1)
 13236                           
 13237                           
 13238                           ;decawave.c: 104: { };
 13239  1A8D  2A8D               	goto	l1387
 13240  1A8E                     l9792:	
 13241                           
 13242                           ;decawave.c: 105: }
 13243                           ;decawave.c: 106: if(dwt_configure(&config) < 0)
 13244  1A8E  30CA               	movlw	(low (_config| (0+256)))& (0+255)
 13245  1A8F  3180  2083  319A   	fcall	_dwt_configure
 13246  1A92  0141               	movlb	1	; select bank1
 13247  1A93  1FDB               	btfss	(?_dwt_configure+1)^(0+128),7
 13248  1A94  2A99               	goto	l9796
 13249                           
 13250                           ;decawave.c: 107: {
 13251                           ;decawave.c: 109: printf_string("\n\rCONFIG_ERROR");
 13252  1A95  3021               	movlw	low (STR_20| (0+32768))
 13253  1A96  00F2               	movwf	printf_string@data
 13254  1A97  30A9               	movlw	high (STR_20| (0+32768))
 13255  1A98  2A9C               	goto	L4
 13256  1A99                     l9796:	
 13257                           ;decawave.c: 111: }
 13258                           
 13259                           
 13260                           ;decawave.c: 112: else
 13261                           ;decawave.c: 113: {
 13262                           ;decawave.c: 115: printf_string("\n\rCONFIG_SUCCESS");
 13263  1A99  30E0               	movlw	low (STR_21| (0+32768))
 13264  1A9A  00F2               	movwf	printf_string@data
 13265  1A9B  30A8               	movlw	high (STR_21| (0+32768))
 13266  1A9C                     L4:	
 13267  1A9C  00F3               	movwf	printf_string@data+1
 13268  1A9D  31A1  2131  319A   	fcall	_printf_string
 13269                           
 13270                           ;decawave.c: 117: }
 13271                           ;decawave.c: 119: dwt_configuretxrf(&txconfig_options_ch9);
 13272  1AA0  30E0               	movlw	(low (_txconfig_options_ch9| (0+256)))& (0+255)
 13273  1AA1  319D  2550  319A   	fcall	_dwt_configuretxrf
 13274                           
 13275                           ;decawave.c: 130: dwt_setrxantennadelay(16385);
 13276  1AA4  3001               	movlw	1
 13277  1AA5  0140               	movlb	0	; select bank0
 13278  1AA6  00EE               	movwf	dwt_setrxantennadelay@rxDelay
 13279  1AA7  3040               	movlw	64
 13280  1AA8  00EF               	movwf	dwt_setrxantennadelay@rxDelay+1
 13281  1AA9  31A2  227A  319A   	fcall	_dwt_setrxantennadelay
 13282                           
 13283                           ;decawave.c: 131: dwt_settxantennadelay(16385);
 13284  1AAC  3001               	movlw	1
 13285  1AAD  0140               	movlb	0	; select bank0
 13286  1AAE  00EE               	movwf	dwt_settxantennadelay@txDelay
 13287  1AAF  3040               	movlw	64
 13288  1AB0  00EF               	movwf	dwt_settxantennadelay@txDelay+1
 13289  1AB1  31A2  2296  319A   	fcall	_dwt_settxantennadelay
 13290                           
 13291                           ;decawave.c: 132: __builtin_memcpy(&tx_blink_msg[5],&ADDR,8);
 13292  1AB4  30D8               	movlw	low (_ADDR| (0+256))
 13293  1AB5  0084               	movwf	4
 13294  1AB6  3001               	movlw	1	; select bank3/4
 13295  1AB7  0085               	movwf	5
 13296  1AB8  3008               	movlw	8
 13297  1AB9  0141               	movlb	1	; select bank1
 13298  1ABA  00EF               	movwf	??_dw_main^(0+128)
 13299  1ABB  086F               	movf	??_dw_main^(0+128),w
 13300  1ABC  1903               	skipnz
 13301  1ABD  2AC8               	goto	l9806
 13302  1ABE  3005               	movlw	5
 13303  1ABF  3E20               	addlw	(low (_tx_blink_msg| (0+512)))& (0+255)
 13304  1AC0  0086               	movwf	6
 13305  1AC1  3002               	movlw	2	; select bank4/5
 13306  1AC2  0087               	movwf	7
 13307  1AC3                     u1102m0:	
 13308  1AC3  0012               	moviw fsr0++
 13309  1AC4  001E               	movwi fsr1++
 13310  1AC5  0141               	movlb	1	; select bank1
 13311  1AC6  0BEF               	decfsz	??_dw_main^(0+128),f
 13312  1AC7  2AC3               	goto	u1102m0
 13313  1AC8                     l9806:	
 13314                           
 13315                           ;decawave.c: 135: printf_string("\n\rDWM_OK");
 13316  1AC8  3099               	movlw	low (STR_22| (0+32768))
 13317  1AC9  00F2               	movwf	printf_string@data
 13318  1ACA  30A9               	movlw	high (STR_22| (0+32768))
 13319  1ACB  00F3               	movwf	printf_string@data+1
 13320  1ACC  31A1  2131         	fcall	_printf_string
 13321                           
 13322                           ;decawave.c: 137: while (0)
 13323  1ACE  0008               	return
 13324  1ACF                     __end_of_dw_main:	
 13325                           ;decawave.c: 152: dwt_starttx(0x00);
 13326                           
 13327                           ;decawave.c: 151: dwt_writetxfctrl(sizeof(tx_blink_msg), 0, 0);
 13328                           
 13329                           ;decawave.c: 150: dwt_writetxdata(sizeof(tx_blink_msg), tx_blink_msg, 0);
 13330                           
 13331                           ;decawave.c: 149: tx_blink_msg[2]++;
 13332                           
 13333                           ;decawave.c: 147: printf_string("\n\rDataSend");
 13334                           
 13335                           ;decawave.c: 138: {
 13336                           ;decawave.c: 141: Sleep(1000);
 13337                           
 13338                           
 13339                           	psect	text23
 13340  21A0                     __ptext23:	
 13341 ;; *************** function _reset_DWIC *****************
 13342 ;; Defined at:
 13343 ;;		line 129 in file "port.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;		None
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;		None
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  1    wreg      void 
 13350 ;; Registers used:
 13351 ;;		wreg, status,2, status,0, pclath, cstack
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13361 ;;Total ram usage:        0 bytes
 13362 ;; Hardware stack levels used:    1
 13363 ;; Hardware stack levels required when called:    3
 13364 ;; This function calls:
 13365 ;;		_Sleep
 13366 ;; This function is called by:
 13367 ;;		_dw_main
 13368 ;; This function uses a non-reentrant model
 13369 ;;
 13370                           
 13371                           
 13372                           ;psect for function _reset_DWIC
 13373  21A0                     _reset_DWIC:	
 13374                           
 13375                           ;incstack = 0
 13376                           ; Regs used in _reset_DWIC: [wreg+status,2+status,0+pclath+cstack]
 13377                           ;port.c: 131: do { LATBbits.LATB4 = 0; } while(0);
 13378  21A0  0140               	movlb	0	; select bank0
 13379  21A1  1217               	bcf	23,4	;volatile
 13380                           
 13381                           ;port.c: 132: Sleep(1);
 13382  21A2  3000               	movlw	0
 13383  21A3  00F4               	movwf	Sleep@time+3
 13384  21A4  3000               	movlw	0
 13385  21A5  00F3               	movwf	Sleep@time+2
 13386  21A6  3000               	movlw	0
 13387  21A7  00F2               	movwf	Sleep@time+1
 13388  21A8  3001               	movlw	1
 13389  21A9  00F1               	movwf	Sleep@time
 13390  21AA  31A4  2412  31A1   	fcall	_Sleep
 13391                           
 13392                           ;port.c: 133: do { LATBbits.LATB4 = 1; } while(0);
 13393  21AD  0140               	movlb	0	; select bank0
 13394  21AE  1617               	bsf	23,4	;volatile
 13395                           
 13396                           ;port.c: 134: Sleep(2);
 13397  21AF  3000               	movlw	0
 13398  21B0  00F4               	movwf	Sleep@time+3
 13399  21B1  3000               	movlw	0
 13400  21B2  00F3               	movwf	Sleep@time+2
 13401  21B3  3000               	movlw	0
 13402  21B4  00F2               	movwf	Sleep@time+1
 13403  21B5  3002               	movlw	2
 13404  21B6  00F1               	movwf	Sleep@time
 13405  21B7  31A4  2412         	fcall	_Sleep
 13406  21B9  0008               	return
 13407  21BA                     __end_of_reset_DWIC:	
 13408                           
 13409                           	psect	text24
 13410  2131                     __ptext24:	
 13411 ;; *************** function _printf_string *****************
 13412 ;; Defined at:
 13413 ;;		line 169 in file "mcc_generated_files/eusart.c"
 13414 ;; Parameters:    Size  Location     Type
 13415 ;;  data            2    2[COMMON] PTR const unsigned char 
 13416 ;;		 -> STR_26(19), STR_25(19), STR_24(11), STR_23(11), 
 13417 ;;		 -> STR_22(9), STR_21(17), STR_20(15), STR_19(12), 
 13418 ;;		 -> STR_18(10), print_uint64_t@print_data(50), print_uint32_t@print_data(20), print_uint16_t@print_data(20), 
 13419 ;;		 -> print_uint8_t@print_data(20), STR_1(22), 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;		None
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      void 
 13424 ;; Registers used:
 13425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13426 ;; Tracked objects:
 13427 ;;		On entry : 0/0
 13428 ;;		On exit  : 0/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13434 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13435 ;;Total ram usage:        3 bytes
 13436 ;; Hardware stack levels used:    1
 13437 ;; Hardware stack levels required when called:    3
 13438 ;; This function calls:
 13439 ;;		_EUSART_Write
 13440 ;; This function is called by:
 13441 ;;		_main
 13442 ;;		_dw_main
 13443 ;;		_transmitt_beacon_pkt
 13444 ;;		_set_MSSSP1_mode
 13445 ;;		_print_uint8_t
 13446 ;;		_print_uint16_t
 13447 ;;		_print_uint32_t
 13448 ;;		_print_uint64_t
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           
 13453                           ;psect for function _printf_string
 13454  2131                     _printf_string:	
 13455  2131                     l9010:	
 13456                           ;eusart.c: 171: while(*data)
 13457                           
 13458                           ;incstack = 0
 13459                           ; Regs used in _printf_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13460                           
 13461  2131  0872               	movf	printf_string@data,w
 13462  2132  0084               	movwf	4
 13463  2133  0873               	movf	printf_string@data+1,w
 13464  2134  0085               	movwf	5
 13465  2135  0012               	moviw fsr0++
 13466  2136  1903               	btfsc	3,2
 13467  2137  0008               	return
 13468                           
 13469                           ;eusart.c: 172: {
 13470                           ;eusart.c: 173: EUSART_Write(*data++);
 13471  2138  0872               	movf	printf_string@data,w
 13472  2139  0084               	movwf	4
 13473  213A  0873               	movf	printf_string@data+1,w
 13474  213B  0085               	movwf	5
 13475  213C  0800               	movf	0,w	;code access
 13476  213D  3188  2000  31A1   	fcall	_EUSART_Write
 13477  2140  3001               	movlw	1
 13478  2141  07F2               	addwf	printf_string@data,f
 13479  2142  3000               	movlw	0
 13480  2143  3DF3               	addwfc	printf_string@data+1,f
 13481  2144  2931               	goto	l9010
 13482  2145                     __end_of_printf_string:	
 13483                           
 13484                           	psect	text25
 13485  1478                     __ptext25:	
 13486 ;; *************** function _dwt_writetxfctrl *****************
 13487 ;; Defined at:
 13488 ;;		line 1773 in file "deca_device.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  txFrameLengt    2   24[BANK1 ] unsigned int 
 13491 ;;  txBufferOffs    2   26[BANK1 ] unsigned int 
 13492 ;;  ranging         1   28[BANK1 ] unsigned char 
 13493 ;; Auto vars:     Size  Location     Type
 13494 ;;  reg32           4   43[BANK1 ] unsigned long 
 13495 ;; Return value:  Size  Location     Type
 13496 ;;                  1    wreg      void 
 13497 ;; Registers used:
 13498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13499 ;; Tracked objects:
 13500 ;;		On entry : 0/0
 13501 ;;		On exit  : 0/0
 13502 ;;		Unchanged: 0/0
 13503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13504 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13505 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13506 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13507 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13508 ;;Total ram usage:       23 bytes
 13509 ;; Hardware stack levels used:    1
 13510 ;; Hardware stack levels required when called:    9
 13511 ;; This function calls:
 13512 ;;		_dwt_modify32bitoffsetreg
 13513 ;;		_dwt_read8bitoffsetreg
 13514 ;; This function is called by:
 13515 ;;		_dw_main
 13516 ;;		_transmitt_beacon_pkt
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520                           
 13521                           ;psect for function _dwt_writetxfctrl
 13522  1478                     _dwt_writetxfctrl:	
 13523                           
 13524                           ;deca_device.c: 1775: uint32_t reg32;
 13525                           ;deca_device.c: 1783: if(txBufferOffset <= 127)
 13526                           
 13527                           ;incstack = 0
 13528                           ; Regs used in _dwt_writetxfctrl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13529  1478  3000               	movlw	0
 13530  1479  0141               	movlb	1	; select bank1
 13531  147A  023B               	subwf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
 13532  147B  3080               	movlw	128
 13533  147C  1903               	skipnz
 13534  147D  023A               	subwf	dwt_writetxfctrl@txBufferOffset^(0+128),w
 13535  147E  1803               	skipnc
 13536  147F  2CD6               	goto	l9674
 13537                           
 13538                           ;deca_device.c: 1784: {
 13539                           ;deca_device.c: 1786: reg32 = txFrameLength | ((uint32_t)(txBufferOffset) << (16U)) | ((
      +                          uint32_t)ranging << (11U));
 13540  1480  083C               	movf	dwt_writetxfctrl@ranging^(0+128),w
 13541  1481  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
 13542  1482  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
 13543  1483  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
 13544  1484  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
 13545  1485  300B               	movlw	11
 13546  1486                     u10695:	
 13547  1486  35BD               	lslf	??_dwt_writetxfctrl^(0+128),f
 13548  1487  0DBE               	rlf	(??_dwt_writetxfctrl^(0+128)+1),f
 13549  1488  0DBF               	rlf	(??_dwt_writetxfctrl^(0+128)+2),f
 13550  1489  0DC0               	rlf	(??_dwt_writetxfctrl^(0+128)+3),f
 13551  148A  0B89               	decfsz	9,f
 13552  148B  2C86               	goto	u10695
 13553  148C  083A               	movf	dwt_writetxfctrl@txBufferOffset^(0+128),w
 13554  148D  00C1               	movwf	(??_dwt_writetxfctrl+4)^(0+128)
 13555  148E  083B               	movf	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
 13556  148F  00C2               	movwf	((??_dwt_writetxfctrl+4)^(0+128)+1)
 13557  1490  01C3               	clrf	((??_dwt_writetxfctrl+4)^(0+128)+2)
 13558  1491  01C4               	clrf	((??_dwt_writetxfctrl+4)^(0+128)+3)
 13559  1492  3010               	movlw	16
 13560  1493                     u10705:	
 13561  1493  35C1               	lslf	(??_dwt_writetxfctrl+4)^(0+128),f
 13562  1494  0DC2               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+1),f
 13563  1495  0DC3               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+2),f
 13564  1496  0DC4               	rlf	((??_dwt_writetxfctrl+4)^(0+128)+3),f
 13565  1497  0B89               	decfsz	9,f
 13566  1498  2C93               	goto	u10705
 13567  1499  0838               	movf	dwt_writetxfctrl@txFrameLength^(0+128),w
 13568  149A  00C5               	movwf	(??_dwt_writetxfctrl+8)^(0+128)
 13569  149B  0839               	movf	(dwt_writetxfctrl@txFrameLength+1)^(0+128),w
 13570  149C  00C6               	movwf	((??_dwt_writetxfctrl+8)^(0+128)+1)
 13571  149D  01C7               	clrf	((??_dwt_writetxfctrl+8)^(0+128)+2)
 13572  149E  01C8               	clrf	((??_dwt_writetxfctrl+8)^(0+128)+3)
 13573  149F  0845               	movf	(??_dwt_writetxfctrl+8)^(0+128),w
 13574  14A0  04C1               	iorwf	(??_dwt_writetxfctrl+4)^(0+128),f
 13575  14A1  0846               	movf	(??_dwt_writetxfctrl+9)^(0+128),w
 13576  14A2  04C2               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+1),f
 13577  14A3  0847               	movf	(??_dwt_writetxfctrl+10)^(0+128),w
 13578  14A4  04C3               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+2),f
 13579  14A5  0848               	movf	(??_dwt_writetxfctrl+11)^(0+128),w
 13580  14A6  04C4               	iorwf	((??_dwt_writetxfctrl+4)^(0+128)+3),f
 13581  14A7  083D               	movf	??_dwt_writetxfctrl^(0+128),w
 13582  14A8  0441               	iorwf	(??_dwt_writetxfctrl+4)^(0+128),w
 13583  14A9  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
 13584  14AA  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
 13585  14AB  0442               	iorwf	(??_dwt_writetxfctrl+5)^(0+128),w
 13586  14AC  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
 13587  14AD  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
 13588  14AE  0443               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),w
 13589  14AF  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
 13590  14B0  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
 13591  14B1  0444               	iorwf	(??_dwt_writetxfctrl+7)^(0+128),w
 13592  14B2  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
 13593                           
 13594                           ;deca_device.c: 1787: dwt_modify32bitoffsetreg(0x24, 0, ~(0x3ff0000UL | 0x800U | 0x3ffU)
      +                          , reg32);
 13595  14B3  3000               	movlw	0
 13596  14B4  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 13597  14B5  3000               	movlw	0
 13598  14B6  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 13599  14B7  3000               	movlw	0
 13600  14B8  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 13601  14B9  3024               	movlw	36
 13602  14BA  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 13603  14BB  3000               	movlw	0
 13604  14BC  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 13605  14BD  3000               	movlw	0
 13606  14BE  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 13607  14BF  3000               	movlw	0
 13608  14C0  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 13609  14C1  3000               	movlw	0
 13610  14C2  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 13611  14C3  30FC               	movlw	252
 13612  14C4  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 13613  14C5  3000               	movlw	0
 13614  14C6  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 13615  14C7  30F4               	movlw	244
 13616  14C8  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 13617  14C9  3000               	movlw	0
 13618  14CA  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 13619  14CB  084E               	movf	(dwt_writetxfctrl@reg32+3)^(0+128),w
 13620  14CC  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 13621  14CD  084D               	movf	(dwt_writetxfctrl@reg32+2)^(0+128),w
 13622  14CE  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 13623  14CF  084C               	movf	(dwt_writetxfctrl@reg32+1)^(0+128),w
 13624  14D0  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 13625  14D1  084B               	movf	dwt_writetxfctrl@reg32^(0+128),w
 13626  14D2  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 13627  14D3  3193  239F         	fcall	_dwt_modify32bitoffsetreg
 13628                           
 13629                           ;deca_device.c: 1788: }
 13630  14D5  0008               	return
 13631  14D6                     l9674:	
 13632                           
 13633                           ;deca_device.c: 1789: else
 13634                           ;deca_device.c: 1790: {
 13635                           ;deca_device.c: 1792: reg32 = txFrameLength | ((uint32_t)(txBufferOffset + 128) << (16U)
      +                          ) | ((uint32_t)ranging << (11U));
 13636  14D6  0141               	movlb	1	; select bank1
 13637  14D7  083C               	movf	dwt_writetxfctrl@ranging^(0+128),w
 13638  14D8  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
 13639  14D9  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
 13640  14DA  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
 13641  14DB  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
 13642  14DC  300B               	movlw	11
 13643  14DD                     u10715:	
 13644  14DD  35BD               	lslf	??_dwt_writetxfctrl^(0+128),f
 13645  14DE  0DBE               	rlf	(??_dwt_writetxfctrl^(0+128)+1),f
 13646  14DF  0DBF               	rlf	(??_dwt_writetxfctrl^(0+128)+2),f
 13647  14E0  0DC0               	rlf	(??_dwt_writetxfctrl^(0+128)+3),f
 13648  14E1  0B89               	decfsz	9,f
 13649  14E2  2CDD               	goto	u10715
 13650  14E3  083A               	movf	dwt_writetxfctrl@txBufferOffset^(0+128),w
 13651  14E4  3E80               	addlw	128
 13652  14E5  00C1               	movwf	(??_dwt_writetxfctrl+4)^(0+128)
 13653  14E6  3000               	movlw	0
 13654  14E7  3D3B               	addwfc	(dwt_writetxfctrl@txBufferOffset+1)^(0+128),w
 13655  14E8  00C2               	movwf	(??_dwt_writetxfctrl+5)^(0+128)
 13656  14E9  0841               	movf	(??_dwt_writetxfctrl+4)^(0+128),w
 13657  14EA  00C3               	movwf	(??_dwt_writetxfctrl+6)^(0+128)
 13658  14EB  0842               	movf	(??_dwt_writetxfctrl+5)^(0+128),w
 13659  14EC  00C4               	movwf	((??_dwt_writetxfctrl+6)^(0+128)+1)
 13660  14ED  01C5               	clrf	((??_dwt_writetxfctrl+6)^(0+128)+2)
 13661  14EE  01C6               	clrf	((??_dwt_writetxfctrl+6)^(0+128)+3)
 13662  14EF  3010               	movlw	16
 13663  14F0                     u10725:	
 13664  14F0  35C3               	lslf	(??_dwt_writetxfctrl+6)^(0+128),f
 13665  14F1  0DC4               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+1),f
 13666  14F2  0DC5               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+2),f
 13667  14F3  0DC6               	rlf	((??_dwt_writetxfctrl+6)^(0+128)+3),f
 13668  14F4  0B89               	decfsz	9,f
 13669  14F5  2CF0               	goto	u10725
 13670  14F6  0838               	movf	dwt_writetxfctrl@txFrameLength^(0+128),w
 13671  14F7  00C7               	movwf	(??_dwt_writetxfctrl+10)^(0+128)
 13672  14F8  0839               	movf	(dwt_writetxfctrl@txFrameLength+1)^(0+128),w
 13673  14F9  00C8               	movwf	((??_dwt_writetxfctrl+10)^(0+128)+1)
 13674  14FA  01C9               	clrf	((??_dwt_writetxfctrl+10)^(0+128)+2)
 13675  14FB  01CA               	clrf	((??_dwt_writetxfctrl+10)^(0+128)+3)
 13676  14FC  0847               	movf	(??_dwt_writetxfctrl+10)^(0+128),w
 13677  14FD  04C3               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),f
 13678  14FE  0848               	movf	(??_dwt_writetxfctrl+11)^(0+128),w
 13679  14FF  04C4               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+1),f
 13680  1500  0849               	movf	(??_dwt_writetxfctrl+12)^(0+128),w
 13681  1501  04C5               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+2),f
 13682  1502  084A               	movf	(??_dwt_writetxfctrl+13)^(0+128),w
 13683  1503  04C6               	iorwf	((??_dwt_writetxfctrl+6)^(0+128)+3),f
 13684  1504  083D               	movf	??_dwt_writetxfctrl^(0+128),w
 13685  1505  0443               	iorwf	(??_dwt_writetxfctrl+6)^(0+128),w
 13686  1506  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
 13687  1507  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
 13688  1508  0444               	iorwf	(??_dwt_writetxfctrl+7)^(0+128),w
 13689  1509  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
 13690  150A  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
 13691  150B  0445               	iorwf	(??_dwt_writetxfctrl+8)^(0+128),w
 13692  150C  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
 13693  150D  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
 13694  150E  0446               	iorwf	(??_dwt_writetxfctrl+9)^(0+128),w
 13695  150F  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
 13696                           
 13697                           ;deca_device.c: 1793: dwt_modify32bitoffsetreg(0x24, 0, ~(0x3ff0000UL | 0x800U | 0x3ffU)
      +                          , reg32);
 13698  1510  3000               	movlw	0
 13699  1511  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 13700  1512  3000               	movlw	0
 13701  1513  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 13702  1514  3000               	movlw	0
 13703  1515  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 13704  1516  3024               	movlw	36
 13705  1517  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 13706  1518  3000               	movlw	0
 13707  1519  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 13708  151A  3000               	movlw	0
 13709  151B  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 13710  151C  3000               	movlw	0
 13711  151D  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 13712  151E  3000               	movlw	0
 13713  151F  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 13714  1520  30FC               	movlw	252
 13715  1521  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 13716  1522  3000               	movlw	0
 13717  1523  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 13718  1524  30F4               	movlw	244
 13719  1525  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 13720  1526  3000               	movlw	0
 13721  1527  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 13722  1528  084E               	movf	(dwt_writetxfctrl@reg32+3)^(0+128),w
 13723  1529  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 13724  152A  084D               	movf	(dwt_writetxfctrl@reg32+2)^(0+128),w
 13725  152B  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 13726  152C  084C               	movf	(dwt_writetxfctrl@reg32+1)^(0+128),w
 13727  152D  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 13728  152E  084B               	movf	dwt_writetxfctrl@reg32^(0+128),w
 13729  152F  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 13730  1530  3193  239F  3194   	fcall	_dwt_modify32bitoffsetreg
 13731                           
 13732                           ;deca_device.c: 1794: reg32 = dwt_read8bitoffsetreg(0x80000, 0);
 13733  1533  3000               	movlw	0
 13734  1534  0141               	movlb	1	; select bank1
 13735  1535  00A3               	movwf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128)
 13736  1536  3008               	movlw	8
 13737  1537  00A2               	movwf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128)
 13738  1538  3000               	movlw	0
 13739  1539  00A1               	movwf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128)
 13740  153A  3000               	movlw	0
 13741  153B  00A0               	movwf	dwt_read8bitoffsetreg@regFileID^(0+128)
 13742  153C  3000               	movlw	0
 13743  153D  00A7               	movwf	(dwt_read8bitoffsetreg@regOffset+3)^(0+128)
 13744  153E  3000               	movlw	0
 13745  153F  00A6               	movwf	(dwt_read8bitoffsetreg@regOffset+2)^(0+128)
 13746  1540  3000               	movlw	0
 13747  1541  00A5               	movwf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128)
 13748  1542  3000               	movlw	0
 13749  1543  00A4               	movwf	dwt_read8bitoffsetreg@regOffset^(0+128)
 13750  1544  31A4  2490         	fcall	_dwt_read8bitoffsetreg
 13751  1546  0141               	movlb	1	; select bank1
 13752  1547  00BD               	movwf	??_dwt_writetxfctrl^(0+128)
 13753  1548  01BE               	clrf	(??_dwt_writetxfctrl^(0+128)+1)
 13754  1549  01BF               	clrf	(??_dwt_writetxfctrl^(0+128)+2)
 13755  154A  01C0               	clrf	(??_dwt_writetxfctrl^(0+128)+3)
 13756  154B  0840               	movf	(??_dwt_writetxfctrl+3)^(0+128),w
 13757  154C  00CE               	movwf	(dwt_writetxfctrl@reg32+3)^(0+128)
 13758  154D  083F               	movf	(??_dwt_writetxfctrl+2)^(0+128),w
 13759  154E  00CD               	movwf	(dwt_writetxfctrl@reg32+2)^(0+128)
 13760  154F  083E               	movf	(??_dwt_writetxfctrl+1)^(0+128),w
 13761  1550  00CC               	movwf	(dwt_writetxfctrl@reg32+1)^(0+128)
 13762  1551  083D               	movf	??_dwt_writetxfctrl^(0+128),w
 13763  1552  00CB               	movwf	dwt_writetxfctrl@reg32^(0+128)
 13764  1553  0008               	return
 13765  1554                     __end_of_dwt_writetxfctrl:	
 13766                           
 13767                           	psect	text26
 13768  1DCB                     __ptext26:	
 13769 ;; *************** function _dwt_writetxdata *****************
 13770 ;; Defined at:
 13771 ;;		line 1728 in file "deca_device.c"
 13772 ;; Parameters:    Size  Location     Type
 13773 ;;  txDataLength    2   30[BANK1 ] unsigned int 
 13774 ;;  txDataBytes     1   32[BANK1 ] PTR unsigned char 
 13775 ;;		 -> tx_blink_msg(36), 
 13776 ;;  txBufferOffs    2   33[BANK1 ] unsigned int 
 13777 ;; Auto vars:     Size  Location     Type
 13778 ;;		None
 13779 ;; Return value:  Size  Location     Type
 13780 ;;                  2   30[BANK1 ] int 
 13781 ;; Registers used:
 13782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13783 ;; Tracked objects:
 13784 ;;		On entry : 0/0
 13785 ;;		On exit  : 0/0
 13786 ;;		Unchanged: 0/0
 13787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13788 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13790 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13791 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13792 ;;Total ram usage:        7 bytes
 13793 ;; Hardware stack levels used:    1
 13794 ;; Hardware stack levels required when called:   10
 13795 ;; This function calls:
 13796 ;;		_dwt_write32bitoffsetreg
 13797 ;;		_dwt_writetodevice
 13798 ;; This function is called by:
 13799 ;;		_dw_main
 13800 ;;		_transmitt_beacon_pkt
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804                           
 13805                           ;psect for function _dwt_writetxdata
 13806  1DCB                     _dwt_writetxdata:	
 13807                           
 13808                           ;deca_device.c: 1736: if ((txBufferOffset + txDataLength) < (1024))
 13809                           
 13810                           ;incstack = 0
 13811                           ; Regs used in _dwt_writetxdata: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13812  1DCB  0141               	movlb	1	; select bank1
 13813  1DCC  083E               	movf	dwt_writetxdata@txDataLength^(0+128),w
 13814  1DCD  0741               	addwf	dwt_writetxdata@txBufferOffset^(0+128),w
 13815  1DCE  0140               	movlb	0	; select bank0
 13816  1DCF  00EC               	movwf	??_dwt_writetxdata
 13817  1DD0  0141               	movlb	1	; select bank1
 13818  1DD1  083F               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
 13819  1DD2  3D42               	addwfc	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 13820  1DD3  0140               	movlb	0	; select bank0
 13821  1DD4  00ED               	movwf	??_dwt_writetxdata+1
 13822  1DD5  3004               	movlw	4
 13823  1DD6  026D               	subwf	??_dwt_writetxdata+1,w
 13824  1DD7  3000               	movlw	0
 13825  1DD8  1903               	skipnz
 13826  1DD9  026C               	subwf	??_dwt_writetxdata,w
 13827  1DDA  1803               	skipnc
 13828  1DDB  0008               	return
 13829                           
 13830                           ;deca_device.c: 1737: {
 13831                           ;deca_device.c: 1738: if(txBufferOffset <= (127))
 13832  1DDC  3000               	movlw	0
 13833  1DDD  0141               	movlb	1	; select bank1
 13834  1DDE  0242               	subwf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 13835  1DDF  3080               	movlw	128
 13836  1DE0  1903               	skipnz
 13837  1DE1  0241               	subwf	dwt_writetxdata@txBufferOffset^(0+128),w
 13838  1DE2  1803               	skipnc
 13839  1DE3  2DFD               	goto	l9662
 13840                           
 13841                           ;deca_device.c: 1739: {
 13842                           ;deca_device.c: 1741: dwt_writetodevice(0x140000, txBufferOffset, txDataLength, txDataBy
      +                          tes);
 13843  1DE4  3000               	movlw	0
 13844  1DE5  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13845  1DE6  3014               	movlw	20
 13846  1DE7  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13847  1DE8  3000               	movlw	0
 13848  1DE9  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13849  1DEA  3000               	movlw	0
 13850  1DEB  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13851  1DEC  0842               	movf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 13852  1DED  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13853  1DEE  0841               	movf	dwt_writetxdata@txBufferOffset^(0+128),w
 13854  1DEF  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13855  1DF0  083E               	movf	dwt_writetxdata@txDataLength^(0+128),w
 13856  1DF1  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13857  1DF2  083F               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
 13858  1DF3  00A7               	movwf	(dwt_writetodevice@length^(0+128)+1)
 13859  1DF4  01A8               	clrf	(dwt_writetodevice@length^(0+128)+2)
 13860  1DF5  01A9               	clrf	(dwt_writetodevice@length^(0+128)+3)
 13861  1DF6  0840               	movf	dwt_writetxdata@txDataBytes^(0+128),w
 13862  1DF7  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13863  1DF8  3002               	movlw	2
 13864  1DF9  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13865  1DFA  31A6  260C         	fcall	_dwt_writetodevice
 13866                           
 13867                           ;deca_device.c: 1742: }
 13868  1DFC  0008               	return
 13869  1DFD                     l9662:	
 13870                           
 13871                           ;deca_device.c: 1743: else
 13872                           ;deca_device.c: 1744: {
 13873                           ;deca_device.c: 1746: dwt_write32bitoffsetreg(0x1f0004,0,(0x140000 >> 16));
 13874  1DFD  3000               	movlw	0
 13875  1DFE  0141               	movlb	1	; select bank1
 13876  1DFF  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 13877  1E00  301F               	movlw	31
 13878  1E01  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 13879  1E02  3000               	movlw	0
 13880  1E03  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 13881  1E04  3004               	movlw	4
 13882  1E05  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 13883  1E06  3000               	movlw	0
 13884  1E07  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 13885  1E08  3000               	movlw	0
 13886  1E09  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 13887  1E0A  3000               	movlw	0
 13888  1E0B  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 13889  1E0C  3000               	movlw	0
 13890  1E0D  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 13891  1E0E  3000               	movlw	0
 13892  1E0F  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 13893  1E10  3000               	movlw	0
 13894  1E11  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 13895  1E12  3000               	movlw	0
 13896  1E13  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 13897  1E14  3014               	movlw	20
 13898  1E15  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 13899  1E16  3198  20B7  319D   	fcall	_dwt_write32bitoffsetreg
 13900                           
 13901                           ;deca_device.c: 1747: dwt_write32bitoffsetreg(0x1f0008,0,txBufferOffset);
 13902  1E19  3000               	movlw	0
 13903  1E1A  0141               	movlb	1	; select bank1
 13904  1E1B  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 13905  1E1C  301F               	movlw	31
 13906  1E1D  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 13907  1E1E  3000               	movlw	0
 13908  1E1F  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 13909  1E20  3008               	movlw	8
 13910  1E21  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 13911  1E22  3000               	movlw	0
 13912  1E23  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 13913  1E24  3000               	movlw	0
 13914  1E25  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 13915  1E26  3000               	movlw	0
 13916  1E27  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 13917  1E28  3000               	movlw	0
 13918  1E29  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 13919  1E2A  0841               	movf	dwt_writetxdata@txBufferOffset^(0+128),w
 13920  1E2B  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 13921  1E2C  0842               	movf	(dwt_writetxdata@txBufferOffset+1)^(0+128),w
 13922  1E2D  00B5               	movwf	(dwt_write32bitoffsetreg@regval^(0+128)+1)
 13923  1E2E  01B6               	clrf	(dwt_write32bitoffsetreg@regval^(0+128)+2)
 13924  1E2F  01B7               	clrf	(dwt_write32bitoffsetreg@regval^(0+128)+3)
 13925  1E30  3198  20B7  319D   	fcall	_dwt_write32bitoffsetreg
 13926                           
 13927                           ;deca_device.c: 1750: dwt_writetodevice(0x1D0000, 0, txDataLength, txDataBytes);
 13928  1E33  3000               	movlw	0
 13929  1E34  0141               	movlb	1	; select bank1
 13930  1E35  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 13931  1E36  301D               	movlw	29
 13932  1E37  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 13933  1E38  3000               	movlw	0
 13934  1E39  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 13935  1E3A  3000               	movlw	0
 13936  1E3B  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 13937  1E3C  3000               	movlw	0
 13938  1E3D  00A4               	movwf	dwt_writetodevice@index^(0+128)
 13939  1E3E  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 13940  1E3F  083E               	movf	dwt_writetxdata@txDataLength^(0+128),w
 13941  1E40  00A6               	movwf	dwt_writetodevice@length^(0+128)
 13942  1E41  083F               	movf	(dwt_writetxdata@txDataLength+1)^(0+128),w
 13943  1E42  00A7               	movwf	(dwt_writetodevice@length^(0+128)+1)
 13944  1E43  01A8               	clrf	(dwt_writetodevice@length^(0+128)+2)
 13945  1E44  01A9               	clrf	(dwt_writetodevice@length^(0+128)+3)
 13946  1E45  0840               	movf	dwt_writetxdata@txDataBytes^(0+128),w
 13947  1E46  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 13948  1E47  3002               	movlw	2
 13949  1E48  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 13950  1E49  31A6  260C         	fcall	_dwt_writetodevice
 13951                           
 13952                           ;deca_device.c: 1754: else
 13953                           ;deca_device.c: 1755: return (-1);
 13954                           ;	Return value of _dwt_writetxdata is never used
 13955                           
 13956                           ;deca_device.c: 1753: }
 13957                           
 13958                           ;deca_device.c: 1751: }
 13959                           ;deca_device.c: 1752: return (0);
 13960                           ;	Return value of _dwt_writetxdata is never used
 13961  1E4B  0008               	return
 13962  1E4C                     __end_of_dwt_writetxdata:	
 13963                           
 13964                           	psect	text27
 13965  0808                     __ptext27:	
 13966 ;; *************** function _dwt_starttx *****************
 13967 ;; Defined at:
 13968 ;;		line 3688 in file "deca_device.c"
 13969 ;; Parameters:    Size  Location     Type
 13970 ;;  mode            1    wreg     unsigned char 
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;  mode            1   45[BANK1 ] unsigned char 
 13973 ;;  sys_state       4   37[BANK1 ] unsigned long 
 13974 ;;  checkTxOK       2   43[BANK1 ] unsigned int 
 13975 ;;  retval          2   41[BANK1 ] int 
 13976 ;; Return value:  Size  Location     Type
 13977 ;;                  2  993[None  ] int 
 13978 ;; Registers used:
 13979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13980 ;; Tracked objects:
 13981 ;;		On entry : 0/0
 13982 ;;		On exit  : 0/0
 13983 ;;		Unchanged: 0/0
 13984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13986 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13987 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13988 ;;      Totals:         0       2       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13989 ;;Total ram usage:       11 bytes
 13990 ;; Hardware stack levels used:    1
 13991 ;; Hardware stack levels required when called:   10
 13992 ;; This function calls:
 13993 ;;		_dwt_read32bitoffsetreg
 13994 ;;		_dwt_read8bitoffsetreg
 13995 ;;		_dwt_writetodevice
 13996 ;; This function is called by:
 13997 ;;		_dw_main
 13998 ;;		_transmitt_beacon_pkt
 13999 ;; This function uses a non-reentrant model
 14000 ;;
 14001                           
 14002                           
 14003                           ;psect for function _dwt_starttx
 14004  0808                     _dwt_starttx:	
 14005                           
 14006                           ;incstack = 0
 14007                           ; Regs used in _dwt_starttx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14008                           ;dwt_starttx@mode stored from wreg
 14009  0808  0141               	movlb	1	; select bank1
 14010  0809  00CD               	movwf	dwt_starttx@mode^(0+128)
 14011                           
 14012                           ;deca_device.c: 3690: int retval = (0) ;
 14013  080A  01C9               	clrf	dwt_starttx@retval^(0+128)
 14014  080B  01CA               	clrf	(dwt_starttx@retval+1)^(0+128)
 14015                           
 14016                           ;deca_device.c: 3691: uint16_t checkTxOK = 0 ;
 14017  080C  01CB               	clrf	dwt_starttx@checkTxOK^(0+128)
 14018  080D  01CC               	clrf	(dwt_starttx@checkTxOK+1)^(0+128)
 14019                           
 14020                           ;deca_device.c: 3692: uint32_t sys_state;
 14021                           ;deca_device.c: 3694: if ((mode & 0x01) || (mode & 0x04)
 14022                           ;deca_device.c: 3695: || (mode & 0x08) || (mode & 0x10))
 14023  080E  1C4D               	btfss	dwt_starttx@mode^(0+128),0
 14024  080F  194D               	btfsc	dwt_starttx@mode^(0+128),2
 14025  0810  2815               	goto	l9692
 14026  0811  19CD               	btfsc	dwt_starttx@mode^(0+128),3
 14027  0812  2815               	goto	l9692
 14028  0813  1E4D               	btfss	dwt_starttx@mode^(0+128),4
 14029  0814  28FD               	goto	l994
 14030  0815                     l9692:	
 14031                           
 14032                           ;deca_device.c: 3696: {
 14033                           ;deca_device.c: 3697: if(mode & 0x01)
 14034  0815  1C4D               	btfss	dwt_starttx@mode^(0+128),0
 14035  0816  282A               	goto	l997
 14036                           
 14037                           ;deca_device.c: 3698: {
 14038                           ;deca_device.c: 3699: if(mode & 0x02)
 14039  0817  1CCD               	btfss	dwt_starttx@mode^(0+128),1
 14040  0818  2821               	goto	l9698
 14041                           
 14042                           ;deca_device.c: 3700: {
 14043                           ;deca_device.c: 3701: dwt_writetodevice(0xD,0,0,0);
 14044  0819  3000               	movlw	0
 14045  081A  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14046  081B  3000               	movlw	0
 14047  081C  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14048  081D  3000               	movlw	0
 14049  081E  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14050  081F  300D               	movlw	13
 14051  0820  2866               	goto	L5
 14052  0821                     l9698:	
 14053                           ;deca_device.c: 3702: }
 14054                           
 14055                           
 14056                           ;deca_device.c: 3703: else
 14057                           ;deca_device.c: 3704: {
 14058                           ;deca_device.c: 3705: dwt_writetodevice(0x3,0,0,0);
 14059  0821  3000               	movlw	0
 14060  0822  0141               	movlb	1	; select bank1
 14061  0823  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14062  0824  3000               	movlw	0
 14063  0825  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14064  0826  3000               	movlw	0
 14065  0827  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14066  0828  3003               	movlw	3
 14067  0829  2866               	goto	L5
 14068  082A                     l997:	
 14069                           ;deca_device.c: 3706: }
 14070                           ;deca_device.c: 3707: }
 14071                           
 14072                           
 14073                           ;deca_device.c: 3708: else if (mode & 0x08)
 14074  082A  1DCD               	btfss	dwt_starttx@mode^(0+128),3
 14075  082B  283F               	goto	l1001
 14076                           
 14077                           ;deca_device.c: 3709: {
 14078                           ;deca_device.c: 3710: if(mode & 0x02)
 14079  082C  1CCD               	btfss	dwt_starttx@mode^(0+128),1
 14080  082D  2836               	goto	l9704
 14081                           
 14082                           ;deca_device.c: 3711: {
 14083                           ;deca_device.c: 3712: dwt_writetodevice(0xF,0,0,0);
 14084  082E  3000               	movlw	0
 14085  082F  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14086  0830  3000               	movlw	0
 14087  0831  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14088  0832  3000               	movlw	0
 14089  0833  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14090  0834  300F               	movlw	15
 14091  0835  2866               	goto	L5
 14092  0836                     l9704:	
 14093                           ;deca_device.c: 3713: }
 14094                           
 14095                           
 14096                           ;deca_device.c: 3714: else
 14097                           ;deca_device.c: 3715: {
 14098                           ;deca_device.c: 3716: dwt_writetodevice(0x7,0,0,0);
 14099  0836  3000               	movlw	0
 14100  0837  0141               	movlb	1	; select bank1
 14101  0838  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14102  0839  3000               	movlw	0
 14103  083A  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14104  083B  3000               	movlw	0
 14105  083C  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14106  083D  3007               	movlw	7
 14107  083E  2866               	goto	L5
 14108  083F                     l1001:	
 14109                           ;deca_device.c: 3717: }
 14110                           ;deca_device.c: 3718: }
 14111                           
 14112                           
 14113                           ;deca_device.c: 3719: else if (mode & 0x10)
 14114  083F  1E4D               	btfss	dwt_starttx@mode^(0+128),4
 14115  0840  2854               	goto	l1005
 14116                           
 14117                           ;deca_device.c: 3720: {
 14118                           ;deca_device.c: 3721: if(mode & 0x02)
 14119  0841  1CCD               	btfss	dwt_starttx@mode^(0+128),1
 14120  0842  284B               	goto	l9710
 14121                           
 14122                           ;deca_device.c: 3722: {
 14123                           ;deca_device.c: 3723: dwt_writetodevice(0xE,0,0,0);
 14124  0843  3000               	movlw	0
 14125  0844  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14126  0845  3000               	movlw	0
 14127  0846  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14128  0847  3000               	movlw	0
 14129  0848  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14130  0849  300E               	movlw	14
 14131  084A  2866               	goto	L5
 14132  084B                     l9710:	
 14133                           ;deca_device.c: 3724: }
 14134                           
 14135                           
 14136                           ;deca_device.c: 3725: else
 14137                           ;deca_device.c: 3726: {
 14138                           ;deca_device.c: 3727: dwt_writetodevice(0x5,0,0,0);
 14139  084B  3000               	movlw	0
 14140  084C  0141               	movlb	1	; select bank1
 14141  084D  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14142  084E  3000               	movlw	0
 14143  084F  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14144  0850  3000               	movlw	0
 14145  0851  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14146  0852  3005               	movlw	5
 14147  0853  2866               	goto	L5
 14148  0854                     l1005:	
 14149                           ;deca_device.c: 3728: }
 14150                           ;deca_device.c: 3729: }
 14151                           
 14152                           
 14153                           ;deca_device.c: 3730: else
 14154                           ;deca_device.c: 3731: {
 14155                           ;deca_device.c: 3732: if(mode & 0x02)
 14156  0854  1CCD               	btfss	dwt_starttx@mode^(0+128),1
 14157  0855  285E               	goto	l9714
 14158                           
 14159                           ;deca_device.c: 3733: {
 14160                           ;deca_device.c: 3734: dwt_writetodevice(0x10,0,0,0);
 14161  0856  3000               	movlw	0
 14162  0857  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14163  0858  3000               	movlw	0
 14164  0859  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14165  085A  3000               	movlw	0
 14166  085B  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14167  085C  3010               	movlw	16
 14168  085D  2866               	goto	L5
 14169  085E                     l9714:	
 14170                           ;deca_device.c: 3735: }
 14171                           
 14172                           
 14173                           ;deca_device.c: 3736: else
 14174                           ;deca_device.c: 3737: {
 14175                           ;deca_device.c: 3738: dwt_writetodevice(0x9,0,0,0);
 14176  085E  3000               	movlw	0
 14177  085F  0141               	movlb	1	; select bank1
 14178  0860  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14179  0861  3000               	movlw	0
 14180  0862  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14181  0863  3000               	movlw	0
 14182  0864  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14183  0865  3009               	movlw	9
 14184  0866                     L5:	
 14185  0866  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14186  0867  3000               	movlw	0
 14187  0868  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14188  0869  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14189  086A  3000               	movlw	0
 14190  086B  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14191  086C  3000               	movlw	0
 14192  086D  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14193  086E  3000               	movlw	0
 14194  086F  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14195  0870  3000               	movlw	0
 14196  0871  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14197  0872  3000               	movlw	0
 14198  0873  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14199  0874  3000               	movlw	0
 14200  0875  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14201  0876  31A6  260C  3188   	fcall	_dwt_writetodevice
 14202                           
 14203                           ;deca_device.c: 3739: }
 14204                           ;deca_device.c: 3740: }
 14205                           ;deca_device.c: 3742: checkTxOK = dwt_read8bitoffsetreg(0x44, 3);
 14206  0879  3000               	movlw	0
 14207  087A  0141               	movlb	1	; select bank1
 14208  087B  00A3               	movwf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128)
 14209  087C  3000               	movlw	0
 14210  087D  00A2               	movwf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128)
 14211  087E  3000               	movlw	0
 14212  087F  00A1               	movwf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128)
 14213  0880  3044               	movlw	68
 14214  0881  00A0               	movwf	dwt_read8bitoffsetreg@regFileID^(0+128)
 14215  0882  3000               	movlw	0
 14216  0883  00A7               	movwf	(dwt_read8bitoffsetreg@regOffset+3)^(0+128)
 14217  0884  3000               	movlw	0
 14218  0885  00A6               	movwf	(dwt_read8bitoffsetreg@regOffset+2)^(0+128)
 14219  0886  3000               	movlw	0
 14220  0887  00A5               	movwf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128)
 14221  0888  3003               	movlw	3
 14222  0889  00A4               	movwf	dwt_read8bitoffsetreg@regOffset^(0+128)
 14223  088A  31A4  2490  3188   	fcall	_dwt_read8bitoffsetreg
 14224  088D  0140               	movlb	0	; select bank0
 14225  088E  00EC               	movwf	??_dwt_starttx
 14226  088F  01ED               	clrf	??_dwt_starttx+1
 14227  0890  086C               	movf	??_dwt_starttx,w
 14228  0891  0141               	movlb	1	; select bank1
 14229  0892  00CB               	movwf	dwt_starttx@checkTxOK^(0+128)
 14230  0893  0140               	movlb	0	; select bank0
 14231  0894  086D               	movf	??_dwt_starttx+1,w
 14232  0895  0141               	movlb	1	; select bank1
 14233  0896  00CC               	movwf	(dwt_starttx@checkTxOK+1)^(0+128)
 14234                           
 14235                           ;deca_device.c: 3743: if ((checkTxOK & (0x8000000UL>>24)) == 0)
 14236  0897  19CB               	btfsc	dwt_starttx@checkTxOK^(0+128),3
 14237  0898  28DE               	goto	l9728
 14238                           
 14239                           ;deca_device.c: 3744: {
 14240                           ;deca_device.c: 3745: sys_state = dwt_read32bitoffsetreg(0xf0030,0);
 14241  0899  3000               	movlw	0
 14242  089A  00AE               	movwf	(dwt_read32bitoffsetreg@regFileID+3)^(0+128)
 14243  089B  300F               	movlw	15
 14244  089C  00AD               	movwf	(dwt_read32bitoffsetreg@regFileID+2)^(0+128)
 14245  089D  3000               	movlw	0
 14246  089E  00AC               	movwf	(dwt_read32bitoffsetreg@regFileID+1)^(0+128)
 14247  089F  3030               	movlw	48
 14248  08A0  00AB               	movwf	dwt_read32bitoffsetreg@regFileID^(0+128)
 14249  08A1  3000               	movlw	0
 14250  08A2  00B2               	movwf	(dwt_read32bitoffsetreg@regOffset+3)^(0+128)
 14251  08A3  3000               	movlw	0
 14252  08A4  00B1               	movwf	(dwt_read32bitoffsetreg@regOffset+2)^(0+128)
 14253  08A5  3000               	movlw	0
 14254  08A6  00B0               	movwf	(dwt_read32bitoffsetreg@regOffset+1)^(0+128)
 14255  08A7  3000               	movlw	0
 14256  08A8  00AF               	movwf	dwt_read32bitoffsetreg@regOffset^(0+128)
 14257  08A9  319A  22CF  3188   	fcall	_dwt_read32bitoffsetreg
 14258  08AC  0141               	movlb	1	; select bank1
 14259  08AD  082E               	movf	(?_dwt_read32bitoffsetreg+3)^(0+128),w
 14260  08AE  00C8               	movwf	(dwt_starttx@sys_state+3)^(0+128)
 14261  08AF  082D               	movf	(?_dwt_read32bitoffsetreg+2)^(0+128),w
 14262  08B0  00C7               	movwf	(dwt_starttx@sys_state+2)^(0+128)
 14263  08B1  082C               	movf	(?_dwt_read32bitoffsetreg+1)^(0+128),w
 14264  08B2  00C6               	movwf	(dwt_starttx@sys_state+1)^(0+128)
 14265  08B3  082B               	movf	?_dwt_read32bitoffsetreg^(0+128),w
 14266  08B4  00C5               	movwf	dwt_starttx@sys_state^(0+128)
 14267                           
 14268                           ;deca_device.c: 3746: if (sys_state == 0xD0000)
 14269  08B5  300D               	movlw	13
 14270  08B6  0647               	xorwf	(dwt_starttx@sys_state+2)^(0+128),w
 14271  08B7  0445               	iorwf	dwt_starttx@sys_state^(0+128),w
 14272  08B8  0446               	iorwf	(dwt_starttx@sys_state+1)^(0+128),w
 14273  08B9  0448               	iorwf	(dwt_starttx@sys_state+3)^(0+128),w
 14274  08BA  1D03               	btfss	3,2
 14275  08BB  28DB               	goto	l9726
 14276                           
 14277                           ;deca_device.c: 3747: {
 14278                           ;deca_device.c: 3748: dwt_writetodevice(0x0,0,0,0);
 14279  08BC  3000               	movlw	0
 14280  08BD  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14281  08BE  3000               	movlw	0
 14282  08BF  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14283  08C0  3000               	movlw	0
 14284  08C1  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14285  08C2  3000               	movlw	0
 14286  08C3  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14287  08C4  3000               	movlw	0
 14288  08C5  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14289  08C6  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14290  08C7  3000               	movlw	0
 14291  08C8  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14292  08C9  3000               	movlw	0
 14293  08CA  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14294  08CB  3000               	movlw	0
 14295  08CC  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14296  08CD  3000               	movlw	0
 14297  08CE  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14298  08CF  3000               	movlw	0
 14299  08D0  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14300  08D1  3000               	movlw	0
 14301  08D2  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14302  08D3  31A6  260C         	fcall	_dwt_writetodevice
 14303                           
 14304                           ;deca_device.c: 3749: retval = (-1) ;
 14305  08D5  30FF               	movlw	255
 14306  08D6  0141               	movlb	1	; select bank1
 14307  08D7  00C9               	movwf	dwt_starttx@retval^(0+128)
 14308  08D8  30FF               	movlw	255
 14309  08D9  00CA               	movwf	(dwt_starttx@retval^(0+128)+1)
 14310                           
 14311                           ;deca_device.c: 3750: }
 14312  08DA  0008               	return
 14313  08DB                     l9726:	
 14314                           
 14315                           ;deca_device.c: 3751: else
 14316                           ;deca_device.c: 3752: {
 14317                           ;deca_device.c: 3753: retval = (0) ;
 14318  08DB  01C9               	clrf	dwt_starttx@retval^(0+128)
 14319  08DC  01CA               	clrf	(dwt_starttx@retval+1)^(0+128)
 14320                           
 14321                           ;deca_device.c: 3754: }
 14322                           ;deca_device.c: 3755: }
 14323  08DD  0008               	return
 14324  08DE                     l9728:	
 14325                           
 14326                           ;deca_device.c: 3756: else
 14327                           ;deca_device.c: 3757: {
 14328                           ;deca_device.c: 3758: dwt_writetodevice(0x0,0,0,0);
 14329  08DE  3000               	movlw	0
 14330  08DF  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14331  08E0  3000               	movlw	0
 14332  08E1  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14333  08E2  3000               	movlw	0
 14334  08E3  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14335  08E4  3000               	movlw	0
 14336  08E5  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14337  08E6  3000               	movlw	0
 14338  08E7  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14339  08E8  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14340  08E9  3000               	movlw	0
 14341  08EA  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14342  08EB  3000               	movlw	0
 14343  08EC  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14344  08ED  3000               	movlw	0
 14345  08EE  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14346  08EF  3000               	movlw	0
 14347  08F0  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14348  08F1  3000               	movlw	0
 14349  08F2  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14350  08F3  3000               	movlw	0
 14351  08F4  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14352  08F5  31A6  260C         	fcall	_dwt_writetodevice
 14353                           
 14354                           ;deca_device.c: 3759: retval = (-1) ;
 14355  08F7  30FF               	movlw	255
 14356  08F8  0141               	movlb	1	; select bank1
 14357  08F9  00C9               	movwf	dwt_starttx@retval^(0+128)
 14358  08FA  30FF               	movlw	255
 14359  08FB  00CA               	movwf	(dwt_starttx@retval^(0+128)+1)
 14360                           
 14361                           ;deca_device.c: 3763: }
 14362                           ;deca_device.c: 3764: }
 14363  08FC  0008               	return
 14364  08FD                     l994:	
 14365                           
 14366                           ;deca_device.c: 3765: else if(mode & 0x20)
 14367  08FD  1ECD               	btfss	dwt_starttx@mode^(0+128),5
 14368  08FE  2936               	goto	l1016
 14369                           
 14370                           ;deca_device.c: 3766: {
 14371                           ;deca_device.c: 3767: if(mode & 0x02)
 14372  08FF  1CCD               	btfss	dwt_starttx@mode^(0+128),1
 14373  0900  291B               	goto	l9736
 14374                           
 14375                           ;deca_device.c: 3768: {
 14376                           ;deca_device.c: 3769: dwt_writetodevice(0x11,0,0,0);
 14377  0901  3000               	movlw	0
 14378  0902  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14379  0903  3000               	movlw	0
 14380  0904  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14381  0905  3000               	movlw	0
 14382  0906  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14383  0907  3011               	movlw	17
 14384  0908  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14385  0909  3000               	movlw	0
 14386  090A  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14387  090B  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14388  090C  3000               	movlw	0
 14389  090D  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14390  090E  3000               	movlw	0
 14391  090F  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14392  0910  3000               	movlw	0
 14393  0911  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14394  0912  3000               	movlw	0
 14395  0913  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14396  0914  3000               	movlw	0
 14397  0915  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14398  0916  3000               	movlw	0
 14399  0917  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14400  0918  31A6  260C         	fcall	_dwt_writetodevice
 14401                           
 14402                           ;deca_device.c: 3770: }
 14403  091A  0008               	return
 14404  091B                     l9736:	
 14405                           
 14406                           ;deca_device.c: 3771: else
 14407                           ;deca_device.c: 3772: {
 14408                           ;deca_device.c: 3773: dwt_writetodevice(0xB,0,0,0);
 14409  091B  3000               	movlw	0
 14410  091C  0141               	movlb	1	; select bank1
 14411  091D  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14412  091E  3000               	movlw	0
 14413  091F  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14414  0920  3000               	movlw	0
 14415  0921  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14416  0922  300B               	movlw	11
 14417  0923  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14418  0924  3000               	movlw	0
 14419  0925  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14420  0926  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14421  0927  3000               	movlw	0
 14422  0928  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14423  0929  3000               	movlw	0
 14424  092A  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14425  092B  3000               	movlw	0
 14426  092C  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14427  092D  3000               	movlw	0
 14428  092E  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14429  092F  3000               	movlw	0
 14430  0930  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14431  0931  3000               	movlw	0
 14432  0932  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14433  0933  31A6  260C         	fcall	_dwt_writetodevice
 14434                           
 14435                           ;deca_device.c: 3774: }
 14436                           ;deca_device.c: 3775: }
 14437  0935  0008               	return
 14438  0936                     l1016:	
 14439                           
 14440                           ;deca_device.c: 3776: else
 14441                           ;deca_device.c: 3777: {
 14442                           ;deca_device.c: 3778: if(mode & 0x02)
 14443  0936  1CCD               	btfss	dwt_starttx@mode^(0+128),1
 14444  0937  2952               	goto	l9740
 14445                           
 14446                           ;deca_device.c: 3779: {
 14447                           ;deca_device.c: 3780: dwt_writetodevice(0xC,0,0,0);
 14448  0938  3000               	movlw	0
 14449  0939  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14450  093A  3000               	movlw	0
 14451  093B  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14452  093C  3000               	movlw	0
 14453  093D  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14454  093E  300C               	movlw	12
 14455  093F  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14456  0940  3000               	movlw	0
 14457  0941  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14458  0942  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14459  0943  3000               	movlw	0
 14460  0944  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14461  0945  3000               	movlw	0
 14462  0946  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14463  0947  3000               	movlw	0
 14464  0948  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14465  0949  3000               	movlw	0
 14466  094A  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14467  094B  3000               	movlw	0
 14468  094C  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14469  094D  3000               	movlw	0
 14470  094E  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14471  094F  31A6  260C         	fcall	_dwt_writetodevice
 14472                           
 14473                           ;deca_device.c: 3781: }
 14474  0951  0008               	return
 14475  0952                     l9740:	
 14476                           
 14477                           ;deca_device.c: 3782: else
 14478                           ;deca_device.c: 3783: {
 14479                           ;deca_device.c: 3784: dwt_writetodevice(0x1,0,0,0);
 14480  0952  3000               	movlw	0
 14481  0953  0141               	movlb	1	; select bank1
 14482  0954  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 14483  0955  3000               	movlw	0
 14484  0956  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 14485  0957  3000               	movlw	0
 14486  0958  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 14487  0959  3001               	movlw	1
 14488  095A  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 14489  095B  3000               	movlw	0
 14490  095C  00A4               	movwf	dwt_writetodevice@index^(0+128)
 14491  095D  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 14492  095E  3000               	movlw	0
 14493  095F  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 14494  0960  3000               	movlw	0
 14495  0961  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 14496  0962  3000               	movlw	0
 14497  0963  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 14498  0964  3000               	movlw	0
 14499  0965  00A6               	movwf	dwt_writetodevice@length^(0+128)
 14500  0966  3000               	movlw	0
 14501  0967  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 14502  0968  3000               	movlw	0
 14503  0969  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 14504  096A  31A6  260C         	fcall	_dwt_writetodevice
 14505  096C  0008               	return
 14506  096D                     __end_of_dwt_starttx:	
 14507                           ;deca_device.c: 3785: }
 14508                           ;deca_device.c: 3786: }
 14509                           ;deca_device.c: 3788: return retval;
 14510                           ;	Return value of _dwt_starttx is never used
 14511                           
 14512                           
 14513                           	psect	text28
 14514  2296                     __ptext28:	
 14515 ;; *************** function _dwt_settxantennadelay *****************
 14516 ;; Defined at:
 14517 ;;		line 1703 in file "deca_device.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;  txDelay         2   78[BANK0 ] unsigned int 
 14520 ;; Auto vars:     Size  Location     Type
 14521 ;;		None
 14522 ;; Return value:  Size  Location     Type
 14523 ;;                  1    wreg      void 
 14524 ;; Registers used:
 14525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14526 ;; Tracked objects:
 14527 ;;		On entry : 0/0
 14528 ;;		On exit  : 0/0
 14529 ;;		Unchanged: 0/0
 14530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14534 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14535 ;;Total ram usage:        2 bytes
 14536 ;; Hardware stack levels used:    1
 14537 ;; Hardware stack levels required when called:   10
 14538 ;; This function calls:
 14539 ;;		_dwt_write16bitoffsetreg
 14540 ;; This function is called by:
 14541 ;;		_dw_main
 14542 ;; This function uses a non-reentrant model
 14543 ;;
 14544                           
 14545                           
 14546                           ;psect for function _dwt_settxantennadelay
 14547  2296                     _dwt_settxantennadelay:	
 14548                           
 14549                           ;deca_device.c: 1706: dwt_write16bitoffsetreg(0x10004, 0, txDelay);
 14550                           
 14551                           ;incstack = 0
 14552                           ; Regs used in _dwt_settxantennadelay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14553  2296  3000               	movlw	0
 14554  2297  0141               	movlb	1	; select bank1
 14555  2298  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 14556  2299  3001               	movlw	1
 14557  229A  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 14558  229B  3000               	movlw	0
 14559  229C  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 14560  229D  3004               	movlw	4
 14561  229E  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 14562  229F  3000               	movlw	0
 14563  22A0  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 14564  22A1  3000               	movlw	0
 14565  22A2  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 14566  22A3  3000               	movlw	0
 14567  22A4  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 14568  22A5  3000               	movlw	0
 14569  22A6  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 14570  22A7  0140               	movlb	0	; select bank0
 14571  22A8  086F               	movf	dwt_settxantennadelay@txDelay+1,w
 14572  22A9  0141               	movlb	1	; select bank1
 14573  22AA  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 14574  22AB  0140               	movlb	0	; select bank0
 14575  22AC  086E               	movf	dwt_settxantennadelay@txDelay,w
 14576  22AD  0141               	movlb	1	; select bank1
 14577  22AE  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 14578  22AF  31A3  23C2         	fcall	_dwt_write16bitoffsetreg
 14579  22B1  0008               	return
 14580  22B2                     __end_of_dwt_settxantennadelay:	
 14581                           
 14582                           	psect	text29
 14583  227A                     __ptext29:	
 14584 ;; *************** function _dwt_setrxantennadelay *****************
 14585 ;; Defined at:
 14586 ;;		line 1686 in file "deca_device.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;  rxDelay         2   78[BANK0 ] unsigned int 
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;		None
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  1    wreg      void 
 14593 ;; Registers used:
 14594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14603 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14604 ;;Total ram usage:        2 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:   10
 14607 ;; This function calls:
 14608 ;;		_dwt_write16bitoffsetreg
 14609 ;; This function is called by:
 14610 ;;		_dw_main
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           
 14615                           ;psect for function _dwt_setrxantennadelay
 14616  227A                     _dwt_setrxantennadelay:	
 14617                           
 14618                           ;deca_device.c: 1689: dwt_write16bitoffsetreg(0xe0000, 0, rxDelay);
 14619                           
 14620                           ;incstack = 0
 14621                           ; Regs used in _dwt_setrxantennadelay: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14622  227A  3000               	movlw	0
 14623  227B  0141               	movlb	1	; select bank1
 14624  227C  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 14625  227D  300E               	movlw	14
 14626  227E  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 14627  227F  3000               	movlw	0
 14628  2280  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 14629  2281  3000               	movlw	0
 14630  2282  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 14631  2283  3000               	movlw	0
 14632  2284  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 14633  2285  3000               	movlw	0
 14634  2286  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 14635  2287  3000               	movlw	0
 14636  2288  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 14637  2289  3000               	movlw	0
 14638  228A  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 14639  228B  0140               	movlb	0	; select bank0
 14640  228C  086F               	movf	dwt_setrxantennadelay@rxDelay+1,w
 14641  228D  0141               	movlb	1	; select bank1
 14642  228E  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 14643  228F  0140               	movlb	0	; select bank0
 14644  2290  086E               	movf	dwt_setrxantennadelay@rxDelay,w
 14645  2291  0141               	movlb	1	; select bank1
 14646  2292  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 14647  2293  31A3  23C2         	fcall	_dwt_write16bitoffsetreg
 14648  2295  0008               	return
 14649  2296                     __end_of_dwt_setrxantennadelay:	
 14650                           
 14651                           	psect	text30
 14652  0B06                     __ptext30:	
 14653 ;; *************** function _dwt_initialise *****************
 14654 ;; Defined at:
 14655 ;;		line 779 in file "deca_device.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;  mode            2   45[BANK1 ] int 
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;  ldo_tune_hi     4   56[BANK1 ] unsigned long 
 14660 ;;  ldo_tune_lo     4   52[BANK1 ] unsigned long 
 14661 ;; Return value:  Size  Location     Type
 14662 ;;                  2   45[BANK1 ] int 
 14663 ;; Registers used:
 14664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14665 ;; Tracked objects:
 14666 ;;		On entry : 0/0
 14667 ;;		On exit  : 0/0
 14668 ;;		Unchanged: 0/0
 14669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14670 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14671 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14672 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14673 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14674 ;;Total ram usage:       15 bytes
 14675 ;; Hardware stack levels used:    1
 14676 ;; Hardware stack levels required when called:   12
 14677 ;; This function calls:
 14678 ;;		_Sleep
 14679 ;;		__dwt_otpread
 14680 ;;		__dwt_prog_ldo_and_bias_tune
 14681 ;;		_dwt_check_dev_id
 14682 ;;		_dwt_checkidlerc
 14683 ;;		_dwt_write8bitoffsetreg
 14684 ;; This function is called by:
 14685 ;;		_dw_main
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           
 14690                           ;psect for function _dwt_initialise
 14691  0B06                     _dwt_initialise:	
 14692                           
 14693                           ;deca_device.c: 782: uint32_t ldo_tune_lo;
 14694                           ;deca_device.c: 783: uint32_t ldo_tune_hi;
 14695                           ;deca_device.c: 784: pdw3000local->dblbuffon = 0x0;
 14696                           
 14697                           ;incstack = 0
 14698                           ; Regs used in _dwt_initialise: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14699  0B06  087C               	movf	_pdw3000local,w
 14700  0B07  3E0F               	addlw	15
 14701  0B08  0086               	movwf	6
 14702  0B09  3002               	movlw	2	; select bank4/5
 14703  0B0A  0087               	movwf	7
 14704  0B0B  0181               	clrf	1
 14705                           
 14706                           ;deca_device.c: 785: pdw3000local->sleep_mode = 0x0002;
 14707  0B0C  087C               	movf	_pdw3000local,w
 14708  0B0D  3E10               	addlw	16
 14709  0B0E  0086               	movwf	6
 14710  0B0F  3002               	movlw	2	; select bank4/5
 14711  0B10  0087               	movwf	7
 14712  0B11  3002               	movlw	2
 14713  0B12  3FC0               	movwi [0]fsr1
 14714  0B13  3000               	movlw	0
 14715  0B14  3FC1               	movwi [1]fsr1
 14716                           
 14717                           ;deca_device.c: 786: pdw3000local->spicrc = 0;
 14718  0B15  087C               	movf	_pdw3000local,w
 14719  0B16  3E14               	addlw	20
 14720  0B17  0086               	movwf	6
 14721  0B18  3002               	movlw	2	; select bank4/5
 14722  0B19  0087               	movwf	7
 14723  0B1A  0181               	clrf	1
 14724                           
 14725                           ;deca_device.c: 787: pdw3000local->stsconfig = 0;
 14726  0B1B  087C               	movf	_pdw3000local,w
 14727  0B1C  3E15               	addlw	21
 14728  0B1D  0086               	movwf	6
 14729  0B1E  3002               	movlw	2	; select bank4/5
 14730  0B1F  0087               	movwf	7
 14731  0B20  0181               	clrf	1
 14732                           
 14733                           ;deca_device.c: 788: pdw3000local->vBatP = 0;
 14734  0B21  087C               	movf	_pdw3000local,w
 14735  0B22  3E0A               	addlw	10
 14736  0B23  0086               	movwf	6
 14737  0B24  3002               	movlw	2	; select bank4/5
 14738  0B25  0087               	movwf	7
 14739  0B26  0181               	clrf	1
 14740                           
 14741                           ;deca_device.c: 789: pdw3000local->tempP = 0;
 14742  0B27  087C               	movf	_pdw3000local,w
 14743  0B28  3E0B               	addlw	11
 14744  0B29  0086               	movwf	6
 14745  0B2A  3002               	movlw	2	; select bank4/5
 14746  0B2B  0087               	movwf	7
 14747  0B2C  0181               	clrf	1
 14748                           
 14749                           ;deca_device.c: 791: pdw3000local->cbTxDone = (0);
 14750  0B2D  087C               	movf	_pdw3000local,w
 14751  0B2E  3E22               	addlw	34
 14752  0B2F  0086               	movwf	6
 14753  0B30  3002               	movlw	2	; select bank4/5
 14754  0B31  0087               	movwf	7
 14755  0B32  3000               	movlw	0
 14756  0B33  3FC0               	movwi [0]fsr1
 14757  0B34  3FC1               	movwi [1]fsr1
 14758                           
 14759                           ;deca_device.c: 792: pdw3000local->cbRxOk = (0);
 14760  0B35  087C               	movf	_pdw3000local,w
 14761  0B36  3E24               	addlw	36
 14762  0B37  0086               	movwf	6
 14763  0B38  3002               	movlw	2	; select bank4/5
 14764  0B39  0087               	movwf	7
 14765  0B3A  3000               	movlw	0
 14766  0B3B  3FC0               	movwi [0]fsr1
 14767  0B3C  3FC1               	movwi [1]fsr1
 14768                           
 14769                           ;deca_device.c: 793: pdw3000local->cbRxTo = (0);
 14770  0B3D  087C               	movf	_pdw3000local,w
 14771  0B3E  3E26               	addlw	38
 14772  0B3F  0086               	movwf	6
 14773  0B40  3002               	movlw	2	; select bank4/5
 14774  0B41  0087               	movwf	7
 14775  0B42  3000               	movlw	0
 14776  0B43  3FC0               	movwi [0]fsr1
 14777  0B44  3FC1               	movwi [1]fsr1
 14778                           
 14779                           ;deca_device.c: 794: pdw3000local->cbRxErr = (0);
 14780  0B45  087C               	movf	_pdw3000local,w
 14781  0B46  3E28               	addlw	40
 14782  0B47  0086               	movwf	6
 14783  0B48  3002               	movlw	2	; select bank4/5
 14784  0B49  0087               	movwf	7
 14785  0B4A  3000               	movlw	0
 14786  0B4B  3FC0               	movwi [0]fsr1
 14787  0B4C  3FC1               	movwi [1]fsr1
 14788                           
 14789                           ;deca_device.c: 795: pdw3000local->cbSPIRdy = (0);
 14790  0B4D  087C               	movf	_pdw3000local,w
 14791  0B4E  3E2C               	addlw	44
 14792  0B4F  0086               	movwf	6
 14793  0B50  3002               	movlw	2	; select bank4/5
 14794  0B51  0087               	movwf	7
 14795  0B52  3000               	movlw	0
 14796  0B53  3FC0               	movwi [0]fsr1
 14797  0B54  3FC1               	movwi [1]fsr1
 14798                           
 14799                           ;deca_device.c: 796: pdw3000local->cbSPIErr = (0);
 14800  0B55  087C               	movf	_pdw3000local,w
 14801  0B56  3E2A               	addlw	42
 14802  0B57  0086               	movwf	6
 14803  0B58  3002               	movlw	2	; select bank4/5
 14804  0B59  0087               	movwf	7
 14805  0B5A  3000               	movlw	0
 14806  0B5B  3FC0               	movwi [0]fsr1
 14807  0B5C  3FC1               	movwi [1]fsr1
 14808                           
 14809                           ;deca_device.c: 797: Sleep(2);
 14810  0B5D  3000               	movlw	0
 14811  0B5E  00F4               	movwf	Sleep@time+3
 14812  0B5F  3000               	movlw	0
 14813  0B60  00F3               	movwf	Sleep@time+2
 14814  0B61  3000               	movlw	0
 14815  0B62  00F2               	movwf	Sleep@time+1
 14816  0B63  3002               	movlw	2
 14817  0B64  00F1               	movwf	Sleep@time
 14818  0B65  31A4  2412  318B   	fcall	_Sleep
 14819                           
 14820                           ;deca_device.c: 800: if (dwt_check_dev_id()!=(0))
 14821  0B68  31A6  267A  318B   	fcall	_dwt_check_dev_id
 14822  0B6B  0140               	movlb	0	; select bank0
 14823  0B6C  086B               	movf	?_dwt_check_dev_id,w
 14824  0B6D  046C               	iorwf	?_dwt_check_dev_id+1,w
 14825  0B6E  1903               	btfsc	3,2
 14826  0B6F  2B76               	goto	l9420
 14827                           
 14828                           ;deca_device.c: 801: {
 14829                           ;deca_device.c: 805: return (-1);
 14830  0B70  30FF               	movlw	255
 14831  0B71  0141               	movlb	1	; select bank1
 14832  0B72  00CD               	movwf	?_dwt_initialise^(0+128)
 14833  0B73  30FF               	movlw	255
 14834  0B74  00CE               	movwf	(?_dwt_initialise^(0+128)+1)
 14835  0B75  0008               	return
 14836  0B76                     l9420:	
 14837                           ;deca_device.c: 809: { };
 14838                           
 14839                           ;deca_device.c: 806: }
 14840                           ;deca_device.c: 808: while (!dwt_checkidlerc())
 14841                           
 14842  0B76  31A5  2542  318B   	fcall	_dwt_checkidlerc
 14843  0B79  3A00               	xorlw	0
 14844  0B7A  1903               	skipnz
 14845  0B7B  2B76               	goto	l9420
 14846                           
 14847                           ;deca_device.c: 811: ldo_tune_lo = _dwt_otpread((0x04));
 14848  0B7C  3004               	movlw	4
 14849  0B7D  0141               	movlb	1	; select bank1
 14850  0B7E  00C5               	movwf	__dwt_otpread@address^(0+128)
 14851  0B7F  3000               	movlw	0
 14852  0B80  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 14853  0B81  319C  2466  318B   	fcall	__dwt_otpread
 14854  0B84  0141               	movlb	1	; select bank1
 14855  0B85  0848               	movf	(?__dwt_otpread+3)^(0+128),w
 14856  0B86  00D7               	movwf	(dwt_initialise@ldo_tune_lo+3)^(0+128)
 14857  0B87  0847               	movf	(?__dwt_otpread+2)^(0+128),w
 14858  0B88  00D6               	movwf	(dwt_initialise@ldo_tune_lo+2)^(0+128)
 14859  0B89  0846               	movf	(?__dwt_otpread+1)^(0+128),w
 14860  0B8A  00D5               	movwf	(dwt_initialise@ldo_tune_lo+1)^(0+128)
 14861  0B8B  0845               	movf	?__dwt_otpread^(0+128),w
 14862  0B8C  00D4               	movwf	dwt_initialise@ldo_tune_lo^(0+128)
 14863                           
 14864                           ;deca_device.c: 812: ldo_tune_hi = _dwt_otpread((0x05));
 14865  0B8D  3005               	movlw	5
 14866  0B8E  00C5               	movwf	__dwt_otpread@address^(0+128)
 14867  0B8F  3000               	movlw	0
 14868  0B90  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 14869  0B91  319C  2466  318B   	fcall	__dwt_otpread
 14870  0B94  0141               	movlb	1	; select bank1
 14871  0B95  0848               	movf	(?__dwt_otpread+3)^(0+128),w
 14872  0B96  00DB               	movwf	(dwt_initialise@ldo_tune_hi+3)^(0+128)
 14873  0B97  0847               	movf	(?__dwt_otpread+2)^(0+128),w
 14874  0B98  00DA               	movwf	(dwt_initialise@ldo_tune_hi+2)^(0+128)
 14875  0B99  0846               	movf	(?__dwt_otpread+1)^(0+128),w
 14876  0B9A  00D9               	movwf	(dwt_initialise@ldo_tune_hi+1)^(0+128)
 14877  0B9B  0845               	movf	?__dwt_otpread^(0+128),w
 14878  0B9C  00D8               	movwf	dwt_initialise@ldo_tune_hi^(0+128)
 14879                           
 14880                           ;deca_device.c: 813: pdw3000local->bias_tune = (_dwt_otpread((0xA)) >> 16) & 0x1fU;
 14881  0B9D  300A               	movlw	10
 14882  0B9E  00C5               	movwf	__dwt_otpread@address^(0+128)
 14883  0B9F  3000               	movlw	0
 14884  0BA0  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 14885  0BA1  319C  2466  318B   	fcall	__dwt_otpread
 14886  0BA4  0141               	movlb	1	; select bank1
 14887  0BA5  0845               	movf	?__dwt_otpread^(0+128),w
 14888  0BA6  00CF               	movwf	??_dwt_initialise^(0+128)
 14889  0BA7  0846               	movf	(?__dwt_otpread+1)^(0+128),w
 14890  0BA8  00D0               	movwf	(??_dwt_initialise^(0+128)+1)
 14891  0BA9  0847               	movf	(?__dwt_otpread+2)^(0+128),w
 14892  0BAA  00D1               	movwf	(??_dwt_initialise^(0+128)+2)
 14893  0BAB  0848               	movf	(?__dwt_otpread+3)^(0+128),w
 14894  0BAC  00D2               	movwf	(??_dwt_initialise^(0+128)+3)
 14895  0BAD  3010               	movlw	16
 14896  0BAE                     u10235:	
 14897  0BAE  36D2               	lsrf	(??_dwt_initialise^(0+128)+3),f
 14898  0BAF  0CD1               	rrf	(??_dwt_initialise^(0+128)+2),f
 14899  0BB0  0CD0               	rrf	(??_dwt_initialise^(0+128)+1),f
 14900  0BB1  0CCF               	rrf	??_dwt_initialise^(0+128),f
 14901  0BB2  0B89               	decfsz	9,f
 14902  0BB3  2BAE               	goto	u10235
 14903  0BB4  084F               	movf	??_dwt_initialise^(0+128),w
 14904  0BB5  391F               	andlw	31
 14905  0BB6  00D3               	movwf	(??_dwt_initialise+4)^(0+128)
 14906  0BB7  087C               	movf	_pdw3000local,w
 14907  0BB8  3E08               	addlw	8
 14908  0BB9  0086               	movwf	6
 14909  0BBA  3002               	movlw	2	; select bank4/5
 14910  0BBB  0087               	movwf	7
 14911  0BBC  0853               	movf	(??_dwt_initialise+4)^(0+128),w
 14912  0BBD  0081               	movwf	1
 14913                           
 14914                           ;deca_device.c: 815: if ((ldo_tune_lo != 0) && (ldo_tune_hi != 0) && (pdw3000local->bias
      +                          _tune != 0))
 14915  0BBE  0857               	movf	(dwt_initialise@ldo_tune_lo+3)^(0+128),w
 14916  0BBF  0456               	iorwf	(dwt_initialise@ldo_tune_lo+2)^(0+128),w
 14917  0BC0  0455               	iorwf	(dwt_initialise@ldo_tune_lo+1)^(0+128),w
 14918  0BC1  0454               	iorwf	dwt_initialise@ldo_tune_lo^(0+128),w
 14919  0BC2  1903               	skipnz
 14920  0BC3  2BD5               	goto	l538
 14921  0BC4  085B               	movf	(dwt_initialise@ldo_tune_hi+3)^(0+128),w
 14922  0BC5  045A               	iorwf	(dwt_initialise@ldo_tune_hi+2)^(0+128),w
 14923  0BC6  0459               	iorwf	(dwt_initialise@ldo_tune_hi+1)^(0+128),w
 14924  0BC7  0458               	iorwf	dwt_initialise@ldo_tune_hi^(0+128),w
 14925  0BC8  1903               	skipnz
 14926  0BC9  2BD5               	goto	l538
 14927  0BCA  087C               	movf	_pdw3000local,w
 14928  0BCB  3E08               	addlw	8
 14929  0BCC  0086               	movwf	6
 14930  0BCD  3002               	movlw	2	; select bank4/5
 14931  0BCE  0087               	movwf	7
 14932  0BCF  0801               	movf	1,w
 14933  0BD0  1903               	btfsc	3,2
 14934  0BD1  2BD5               	goto	l538
 14935                           
 14936                           ;deca_device.c: 816: {
 14937                           ;deca_device.c: 817: _dwt_prog_ldo_and_bias_tune();
 14938  0BD2  31A6  26EB  318B   	fcall	__dwt_prog_ldo_and_bias_tune
 14939  0BD5                     l538:	
 14940                           
 14941                           ;deca_device.c: 818: }
 14942                           ;deca_device.c: 821: if (_dwt_otpread((0x20)) == 0x10000240)
 14943  0BD5  3020               	movlw	32
 14944  0BD6  0141               	movlb	1	; select bank1
 14945  0BD7  00C5               	movwf	__dwt_otpread@address^(0+128)
 14946  0BD8  3000               	movlw	0
 14947  0BD9  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 14948  0BDA  319C  2466  318B   	fcall	__dwt_otpread
 14949  0BDD  3040               	movlw	64
 14950  0BDE  0141               	movlb	1	; select bank1
 14951  0BDF  0645               	xorwf	?__dwt_otpread^(0+128),w
 14952  0BE0  3002               	movlw	2
 14953  0BE1  1903               	skipnz
 14954  0BE2  0646               	xorwf	(?__dwt_otpread+1)^(0+128),w
 14955  0BE3  3010               	movlw	16
 14956  0BE4  1903               	skipnz
 14957  0BE5  0648               	xorwf	(?__dwt_otpread+3)^(0+128),w
 14958  0BE6  0447               	iorwf	(?__dwt_otpread+2)^(0+128),w
 14959  0BE7  1D03               	btfss	3,2
 14960  0BE8  2BF1               	goto	l9434
 14961                           
 14962                           ;deca_device.c: 822: {
 14963                           ;deca_device.c: 823: pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_OTP;
 14964  0BE9  087C               	movf	_pdw3000local,w
 14965  0BEA  3E09               	addlw	9
 14966  0BEB  0086               	movwf	6
 14967  0BEC  3002               	movlw	2	; select bank4/5
 14968  0BED  0087               	movwf	7
 14969  0BEE  0181               	clrf	1
 14970  0BEF  0A81               	incf	1,f
 14971                           
 14972                           ;deca_device.c: 824: }
 14973  0BF0  2BF7               	goto	l9436
 14974  0BF1                     l9434:	
 14975                           
 14976                           ;deca_device.c: 825: else
 14977                           ;deca_device.c: 826: {
 14978                           ;deca_device.c: 827: pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_SW;
 14979  0BF1  087C               	movf	_pdw3000local,w
 14980  0BF2  3E09               	addlw	9
 14981  0BF3  0086               	movwf	6
 14982  0BF4  3002               	movlw	2	; select bank4/5
 14983  0BF5  0087               	movwf	7
 14984  0BF6  0181               	clrf	1
 14985  0BF7                     l9436:	
 14986                           
 14987                           ;deca_device.c: 828: }
 14988                           ;deca_device.c: 831: if(mode & 0x10)
 14989  0BF7  1E4D               	btfss	dwt_initialise@mode^(0+128),4
 14990  0BF8  2C0D               	goto	l9440
 14991                           
 14992                           ;deca_device.c: 832: pdw3000local->partID = _dwt_otpread((0x06));
 14993  0BF9  3006               	movlw	6
 14994  0BFA  00C5               	movwf	__dwt_otpread@address^(0+128)
 14995  0BFB  3000               	movlw	0
 14996  0BFC  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 14997  0BFD  319C  2466  318B   	fcall	__dwt_otpread
 14998  0C00  087C               	movf	_pdw3000local,w
 14999  0C01  0086               	movwf	6
 15000  0C02  3002               	movlw	2	; select bank4/5
 15001  0C03  0087               	movwf	7
 15002  0C04  0141               	movlb	1	; select bank1
 15003  0C05  0845               	movf	?__dwt_otpread^(0+128),w
 15004  0C06  3FC0               	movwi [0]fsr1
 15005  0C07  0846               	movf	(?__dwt_otpread+1)^(0+128),w
 15006  0C08  3FC1               	movwi [1]fsr1
 15007  0C09  0847               	movf	(?__dwt_otpread+2)^(0+128),w
 15008  0C0A  3FC2               	movwi [2]fsr1
 15009  0C0B  0848               	movf	(?__dwt_otpread+3)^(0+128),w
 15010  0C0C  3FC3               	movwi [3]fsr1
 15011  0C0D                     l9440:	
 15012                           
 15013                           ;deca_device.c: 833: if (mode & 0x20)
 15014  0C0D  1ECD               	btfss	dwt_initialise@mode^(0+128),5
 15015  0C0E  2C24               	goto	l9444
 15016                           
 15017                           ;deca_device.c: 834: pdw3000local->lotID = _dwt_otpread((0x07));
 15018  0C0F  3007               	movlw	7
 15019  0C10  00C5               	movwf	__dwt_otpread@address^(0+128)
 15020  0C11  3000               	movlw	0
 15021  0C12  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 15022  0C13  319C  2466  318B   	fcall	__dwt_otpread
 15023  0C16  087C               	movf	_pdw3000local,w
 15024  0C17  3E04               	addlw	4
 15025  0C18  0086               	movwf	6
 15026  0C19  3002               	movlw	2	; select bank4/5
 15027  0C1A  0087               	movwf	7
 15028  0C1B  0141               	movlb	1	; select bank1
 15029  0C1C  0845               	movf	?__dwt_otpread^(0+128),w
 15030  0C1D  3FC0               	movwi [0]fsr1
 15031  0C1E  0846               	movf	(?__dwt_otpread+1)^(0+128),w
 15032  0C1F  3FC1               	movwi [1]fsr1
 15033  0C20  0847               	movf	(?__dwt_otpread+2)^(0+128),w
 15034  0C21  3FC2               	movwi [2]fsr1
 15035  0C22  0848               	movf	(?__dwt_otpread+3)^(0+128),w
 15036  0C23  3FC3               	movwi [3]fsr1
 15037  0C24                     l9444:	
 15038                           
 15039                           ;deca_device.c: 835: if (mode & 0x40)
 15040  0C24  1F4D               	btfss	dwt_initialise@mode^(0+128),6
 15041  0C25  2C37               	goto	l9448
 15042                           
 15043                           ;deca_device.c: 836: pdw3000local->vBatP = (uint8_t)_dwt_otpread((0x08));
 15044  0C26  3008               	movlw	8
 15045  0C27  00C5               	movwf	__dwt_otpread@address^(0+128)
 15046  0C28  3000               	movlw	0
 15047  0C29  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 15048  0C2A  319C  2466  318B   	fcall	__dwt_otpread
 15049  0C2D  0141               	movlb	1	; select bank1
 15050  0C2E  0845               	movf	?__dwt_otpread^(0+128),w
 15051  0C2F  00CF               	movwf	??_dwt_initialise^(0+128)
 15052  0C30  087C               	movf	_pdw3000local,w
 15053  0C31  3E0A               	addlw	10
 15054  0C32  0086               	movwf	6
 15055  0C33  3002               	movlw	2	; select bank4/5
 15056  0C34  0087               	movwf	7
 15057  0C35  084F               	movf	??_dwt_initialise^(0+128),w
 15058  0C36  0081               	movwf	1
 15059  0C37                     l9448:	
 15060                           
 15061                           ;deca_device.c: 837: if (mode & 0x80)
 15062  0C37  1FCD               	btfss	dwt_initialise@mode^(0+128),7
 15063  0C38  2C4A               	goto	l9452
 15064                           
 15065                           ;deca_device.c: 838: pdw3000local->tempP = (uint8_t)_dwt_otpread((0x09));
 15066  0C39  3009               	movlw	9
 15067  0C3A  00C5               	movwf	__dwt_otpread@address^(0+128)
 15068  0C3B  3000               	movlw	0
 15069  0C3C  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 15070  0C3D  319C  2466  318B   	fcall	__dwt_otpread
 15071  0C40  0141               	movlb	1	; select bank1
 15072  0C41  0845               	movf	?__dwt_otpread^(0+128),w
 15073  0C42  00CF               	movwf	??_dwt_initialise^(0+128)
 15074  0C43  087C               	movf	_pdw3000local,w
 15075  0C44  3E0B               	addlw	11
 15076  0C45  0086               	movwf	6
 15077  0C46  3002               	movlw	2	; select bank4/5
 15078  0C47  0087               	movwf	7
 15079  0C48  084F               	movf	??_dwt_initialise^(0+128),w
 15080  0C49  0081               	movwf	1
 15081  0C4A                     l9452:	
 15082                           
 15083                           ;deca_device.c: 841: if(pdw3000local->tempP == 0)
 15084  0C4A  087C               	movf	_pdw3000local,w
 15085  0C4B  3E0B               	addlw	11
 15086  0C4C  0086               	movwf	6
 15087  0C4D  3002               	movlw	2	; select bank4/5
 15088  0C4E  0087               	movwf	7
 15089  0C4F  0801               	movf	1,w
 15090  0C50  1D03               	btfss	3,2
 15091  0C51  2C5B               	goto	l545
 15092                           
 15093                           ;deca_device.c: 842: {
 15094                           ;deca_device.c: 843: pdw3000local->tempP = 0x85 ;
 15095  0C52  3085               	movlw	133
 15096  0C53  00CF               	movwf	??_dwt_initialise^(0+128)
 15097  0C54  087C               	movf	_pdw3000local,w
 15098  0C55  3E0B               	addlw	11
 15099  0C56  0086               	movwf	6
 15100  0C57  3002               	movlw	2	; select bank4/5
 15101  0C58  0087               	movwf	7
 15102  0C59  084F               	movf	??_dwt_initialise^(0+128),w
 15103  0C5A  0081               	movwf	1
 15104  0C5B                     l545:	
 15105                           
 15106                           ;deca_device.c: 844: }
 15107                           ;deca_device.c: 846: if(pdw3000local->vBatP == 0)
 15108  0C5B  087C               	movf	_pdw3000local,w
 15109  0C5C  3E0A               	addlw	10
 15110  0C5D  0086               	movwf	6
 15111  0C5E  3002               	movlw	2	; select bank4/5
 15112  0C5F  0087               	movwf	7
 15113  0C60  0801               	movf	1,w
 15114  0C61  1D03               	btfss	3,2
 15115  0C62  2C6C               	goto	l9458
 15116                           
 15117                           ;deca_device.c: 847: {
 15118                           ;deca_device.c: 848: pdw3000local->vBatP = 0x74 ;
 15119  0C63  3074               	movlw	116
 15120  0C64  00CF               	movwf	??_dwt_initialise^(0+128)
 15121  0C65  087C               	movf	_pdw3000local,w
 15122  0C66  3E0A               	addlw	10
 15123  0C67  0086               	movwf	6
 15124  0C68  3002               	movlw	2	; select bank4/5
 15125  0C69  0087               	movwf	7
 15126  0C6A  084F               	movf	??_dwt_initialise^(0+128),w
 15127  0C6B  0081               	movwf	1
 15128  0C6C                     l9458:	
 15129                           
 15130                           ;deca_device.c: 849: }
 15131                           ;deca_device.c: 851: pdw3000local->otprev = (uint8_t) _dwt_otpread((0x1F));
 15132  0C6C  301F               	movlw	31
 15133  0C6D  00C5               	movwf	__dwt_otpread@address^(0+128)
 15134  0C6E  3000               	movlw	0
 15135  0C6F  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 15136  0C70  319C  2466  318B   	fcall	__dwt_otpread
 15137  0C73  0141               	movlb	1	; select bank1
 15138  0C74  0845               	movf	?__dwt_otpread^(0+128),w
 15139  0C75  00CF               	movwf	??_dwt_initialise^(0+128)
 15140  0C76  087C               	movf	_pdw3000local,w
 15141  0C77  3E0D               	addlw	13
 15142  0C78  0086               	movwf	6
 15143  0C79  3002               	movlw	2	; select bank4/5
 15144  0C7A  0087               	movwf	7
 15145  0C7B  084F               	movf	??_dwt_initialise^(0+128),w
 15146  0C7C  0081               	movwf	1
 15147                           
 15148                           ;deca_device.c: 853: pdw3000local->init_xtrim =_dwt_otpread((0x1E)) & 0x7f;
 15149  0C7D  301E               	movlw	30
 15150  0C7E  00C5               	movwf	__dwt_otpread@address^(0+128)
 15151  0C7F  3000               	movlw	0
 15152  0C80  00C6               	movwf	(__dwt_otpread@address^(0+128)+1)
 15153  0C81  319C  2466  318B   	fcall	__dwt_otpread
 15154  0C84  0141               	movlb	1	; select bank1
 15155  0C85  0845               	movf	?__dwt_otpread^(0+128),w
 15156  0C86  397F               	andlw	127
 15157  0C87  00CF               	movwf	??_dwt_initialise^(0+128)
 15158  0C88  087C               	movf	_pdw3000local,w
 15159  0C89  3E0E               	addlw	14
 15160  0C8A  0086               	movwf	6
 15161  0C8B  3002               	movlw	2	; select bank4/5
 15162  0C8C  0087               	movwf	7
 15163  0C8D  084F               	movf	??_dwt_initialise^(0+128),w
 15164  0C8E  0081               	movwf	1
 15165                           
 15166                           ;deca_device.c: 854: if(pdw3000local->init_xtrim == 0)
 15167  0C8F  087C               	movf	_pdw3000local,w
 15168  0C90  3E0E               	addlw	14
 15169  0C91  0086               	movwf	6
 15170  0C92  3002               	movlw	2	; select bank4/5
 15171  0C93  0087               	movwf	7
 15172  0C94  0801               	movf	1,w
 15173  0C95  1D03               	btfss	3,2
 15174  0C96  2CA0               	goto	l9464
 15175                           
 15176                           ;deca_device.c: 855: {
 15177                           ;deca_device.c: 856: pdw3000local->init_xtrim = 0x2E ;
 15178  0C97  302E               	movlw	46
 15179  0C98  00CF               	movwf	??_dwt_initialise^(0+128)
 15180  0C99  087C               	movf	_pdw3000local,w
 15181  0C9A  3E0E               	addlw	14
 15182  0C9B  0086               	movwf	6
 15183  0C9C  3002               	movlw	2	; select bank4/5
 15184  0C9D  0087               	movwf	7
 15185  0C9E  084F               	movf	??_dwt_initialise^(0+128),w
 15186  0C9F  0081               	movwf	1
 15187  0CA0                     l9464:	
 15188                           
 15189                           ;deca_device.c: 857: }
 15190                           ;deca_device.c: 858: dwt_write8bitoffsetreg(0x90014, 0, pdw3000local->init_xtrim);
 15191  0CA0  3000               	movlw	0
 15192  0CA1  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 15193  0CA2  3009               	movlw	9
 15194  0CA3  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 15195  0CA4  3000               	movlw	0
 15196  0CA5  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 15197  0CA6  3014               	movlw	20
 15198  0CA7  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 15199  0CA8  3000               	movlw	0
 15200  0CA9  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 15201  0CAA  3000               	movlw	0
 15202  0CAB  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 15203  0CAC  3000               	movlw	0
 15204  0CAD  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 15205  0CAE  3000               	movlw	0
 15206  0CAF  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 15207  0CB0  087C               	movf	_pdw3000local,w
 15208  0CB1  0086               	movwf	6
 15209  0CB2  3002               	movlw	2	; select bank4/5
 15210  0CB3  0087               	movwf	7
 15211  0CB4  3002               	movlw	2	; select bank4/5
 15212  0CB5  3F4E               	moviw [14]fsr1
 15213  0CB6  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 15214  0CB7  31A2  2226         	fcall	_dwt_write8bitoffsetreg
 15215                           
 15216                           ;deca_device.c: 861: return (0) ;
 15217  0CB9  0141               	movlb	1	; select bank1
 15218  0CBA  01CD               	clrf	?_dwt_initialise^(0+128)
 15219  0CBB  01CE               	clrf	(?_dwt_initialise+1)^(0+128)
 15220  0CBC  0008               	return
 15221  0CBD                     __end_of_dwt_initialise:	
 15222                           
 15223                           	psect	text31
 15224  2542                     __ptext31:	
 15225 ;; *************** function _dwt_checkidlerc *****************
 15226 ;; Defined at:
 15227 ;;		line 3294 in file "deca_device.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;		None
 15230 ;; Auto vars:     Size  Location     Type
 15231 ;;  reg             4   27[BANK1 ] unsigned long 
 15232 ;; Return value:  Size  Location     Type
 15233 ;;                  1    wreg      unsigned char 
 15234 ;; Registers used:
 15235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15236 ;; Tracked objects:
 15237 ;;		On entry : 0/0
 15238 ;;		On exit  : 0/0
 15239 ;;		Unchanged: 0/0
 15240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15242 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15243 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15244 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15245 ;;Total ram usage:        8 bytes
 15246 ;; Hardware stack levels used:    1
 15247 ;; Hardware stack levels required when called:   10
 15248 ;; This function calls:
 15249 ;;		_dwt_read16bitoffsetreg
 15250 ;; This function is called by:
 15251 ;;		_dwt_initialise
 15252 ;; This function uses a non-reentrant model
 15253 ;;
 15254                           
 15255                           
 15256                           ;psect for function _dwt_checkidlerc
 15257  2542                     _dwt_checkidlerc:	
 15258                           
 15259                           ;deca_device.c: 3298: uint32_t reg = ((uint32_t)dwt_read16bitoffsetreg(0x44, 2) << 16);
 15260                           
 15261                           ;incstack = 0
 15262                           ; Regs used in _dwt_checkidlerc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15263  2542  3000               	movlw	0
 15264  2543  0141               	movlb	1	; select bank1
 15265  2544  00AE               	movwf	(dwt_read16bitoffsetreg@regFileID+3)^(0+128)
 15266  2545  3000               	movlw	0
 15267  2546  00AD               	movwf	(dwt_read16bitoffsetreg@regFileID+2)^(0+128)
 15268  2547  3000               	movlw	0
 15269  2548  00AC               	movwf	(dwt_read16bitoffsetreg@regFileID+1)^(0+128)
 15270  2549  3044               	movlw	68
 15271  254A  00AB               	movwf	dwt_read16bitoffsetreg@regFileID^(0+128)
 15272  254B  3000               	movlw	0
 15273  254C  00B2               	movwf	(dwt_read16bitoffsetreg@regOffset+3)^(0+128)
 15274  254D  3000               	movlw	0
 15275  254E  00B1               	movwf	(dwt_read16bitoffsetreg@regOffset+2)^(0+128)
 15276  254F  3000               	movlw	0
 15277  2550  00B0               	movwf	(dwt_read16bitoffsetreg@regOffset+1)^(0+128)
 15278  2551  3002               	movlw	2
 15279  2552  00AF               	movwf	dwt_read16bitoffsetreg@regOffset^(0+128)
 15280  2553  31A6  26B1  31A5   	fcall	_dwt_read16bitoffsetreg
 15281  2556  0141               	movlb	1	; select bank1
 15282  2557  082B               	movf	?_dwt_read16bitoffsetreg^(0+128),w
 15283  2558  00B7               	movwf	??_dwt_checkidlerc^(0+128)
 15284  2559  082C               	movf	(?_dwt_read16bitoffsetreg+1)^(0+128),w
 15285  255A  00B8               	movwf	(??_dwt_checkidlerc^(0+128)+1)
 15286  255B  01B9               	clrf	(??_dwt_checkidlerc^(0+128)+2)
 15287  255C  01BA               	clrf	(??_dwt_checkidlerc^(0+128)+3)
 15288  255D  3010               	movlw	16
 15289  255E                     u9845:	
 15290  255E  35B7               	lslf	??_dwt_checkidlerc^(0+128),f
 15291  255F  0DB8               	rlf	(??_dwt_checkidlerc^(0+128)+1),f
 15292  2560  0DB9               	rlf	(??_dwt_checkidlerc^(0+128)+2),f
 15293  2561  0DBA               	rlf	(??_dwt_checkidlerc^(0+128)+3),f
 15294  2562  0B89               	decfsz	9,f
 15295  2563  2D5E               	goto	u9845
 15296  2564  083A               	movf	(??_dwt_checkidlerc+3)^(0+128),w
 15297  2565  00BE               	movwf	(dwt_checkidlerc@reg+3)^(0+128)
 15298  2566  0839               	movf	(??_dwt_checkidlerc+2)^(0+128),w
 15299  2567  00BD               	movwf	(dwt_checkidlerc@reg+2)^(0+128)
 15300  2568  0838               	movf	(??_dwt_checkidlerc+1)^(0+128),w
 15301  2569  00BC               	movwf	(dwt_checkidlerc@reg+1)^(0+128)
 15302  256A  0837               	movf	??_dwt_checkidlerc^(0+128),w
 15303  256B  00BB               	movwf	dwt_checkidlerc@reg^(0+128)
 15304                           
 15305                           ;deca_device.c: 3299: return ( (reg & (0x1000000UL)) == (0x1000000UL));
 15306  256C  1C3E               	btfss	(dwt_checkidlerc@reg+3)^(0+128),0
 15307  256D  2D70               	goto	u9850
 15308  256E  3001               	movlw	1
 15309  256F  0008               	return
 15310  2570                     u9850:	
 15311  2570  3000               	movlw	0
 15312  2571  0008               	return
 15313  2572                     __end_of_dwt_checkidlerc:	
 15314                           
 15315                           	psect	text32
 15316  267A                     __ptext32:	
 15317 ;; *************** function _dwt_check_dev_id *****************
 15318 ;; Defined at:
 15319 ;;		line 3080 in file "deca_device.c"
 15320 ;; Parameters:    Size  Location     Type
 15321 ;;		None
 15322 ;; Auto vars:     Size  Location     Type
 15323 ;;		None
 15324 ;; Return value:  Size  Location     Type
 15325 ;;                  2   75[BANK0 ] int 
 15326 ;; Registers used:
 15327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15328 ;; Tracked objects:
 15329 ;;		On entry : 0/0
 15330 ;;		On exit  : 0/0
 15331 ;;		Unchanged: 0/0
 15332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15337 ;;Total ram usage:        2 bytes
 15338 ;; Hardware stack levels used:    1
 15339 ;; Hardware stack levels required when called:   11
 15340 ;; This function calls:
 15341 ;;		_dwt_readdevid
 15342 ;; This function is called by:
 15343 ;;		_dwt_initialise
 15344 ;; This function uses a non-reentrant model
 15345 ;;
 15346                           
 15347                           
 15348                           ;psect for function _dwt_check_dev_id
 15349  267A                     _dwt_check_dev_id:	
 15350                           
 15351                           ;deca_device.c: 3084: dev_id = dwt_readdevid();
 15352                           
 15353                           ;incstack = 0
 15354                           ; Regs used in _dwt_check_dev_id: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15355  267A  31A2  22EB  31A6   	fcall	_dwt_readdevid
 15356  267D  0141               	movlb	1	; select bank1
 15357  267E  0848               	movf	(?_dwt_readdevid+3)^(0+128),w
 15358  267F  0142               	movlb	2	; select bank2
 15359  2680  00BF               	movwf	(_dev_id+3)^(0+256)
 15360  2681  0141               	movlb	1	; select bank1
 15361  2682  0847               	movf	(?_dwt_readdevid+2)^(0+128),w
 15362  2683  0142               	movlb	2	; select bank2
 15363  2684  00BE               	movwf	(_dev_id+2)^(0+256)
 15364  2685  0141               	movlb	1	; select bank1
 15365  2686  0846               	movf	(?_dwt_readdevid+1)^(0+128),w
 15366  2687  0142               	movlb	2	; select bank2
 15367  2688  00BD               	movwf	(_dev_id+1)^(0+256)
 15368  2689  0141               	movlb	1	; select bank1
 15369  268A  0845               	movf	?_dwt_readdevid^(0+128),w
 15370  268B  0142               	movlb	2	; select bank2
 15371  268C  00BC               	movwf	_dev_id^(0+256)
 15372                           
 15373                           ;deca_device.c: 3086: if (!(((0xDECA0312) == dev_id) || ((0xDECA0302) == dev_id)))
 15374  268D  3012               	movlw	18
 15375  268E  063C               	xorwf	_dev_id^(0+256),w
 15376  268F  3003               	movlw	3
 15377  2690  1903               	skipnz
 15378  2691  063D               	xorwf	(_dev_id+1)^(0+256),w
 15379  2692  30CA               	movlw	202
 15380  2693  1903               	skipnz
 15381  2694  063E               	xorwf	(_dev_id+2)^(0+256),w
 15382  2695  30DE               	movlw	222
 15383  2696  1903               	skipnz
 15384  2697  063F               	xorwf	(_dev_id+3)^(0+256),w
 15385  2698  1903               	btfsc	3,2
 15386  2699  2EAD               	goto	l9032
 15387  269A  3002               	movlw	2
 15388  269B  063C               	xorwf	_dev_id^(0+256),w
 15389  269C  3003               	movlw	3
 15390  269D  1903               	skipnz
 15391  269E  063D               	xorwf	(_dev_id+1)^(0+256),w
 15392  269F  30CA               	movlw	202
 15393  26A0  1903               	skipnz
 15394  26A1  063E               	xorwf	(_dev_id+2)^(0+256),w
 15395  26A2  30DE               	movlw	222
 15396  26A3  1903               	skipnz
 15397  26A4  063F               	xorwf	(_dev_id+3)^(0+256),w
 15398  26A5  1903               	btfsc	3,2
 15399  26A6  2EAD               	goto	l9032
 15400                           
 15401                           ;deca_device.c: 3087: {
 15402                           ;deca_device.c: 3088: return (-1);
 15403  26A7  30FF               	movlw	255
 15404  26A8  0140               	movlb	0	; select bank0
 15405  26A9  00EB               	movwf	?_dwt_check_dev_id
 15406  26AA  30FF               	movlw	255
 15407  26AB  00EC               	movwf	?_dwt_check_dev_id+1
 15408  26AC  0008               	return
 15409  26AD                     l9032:	
 15410                           
 15411                           ;deca_device.c: 3089: }
 15412                           ;deca_device.c: 3090: return (0);
 15413  26AD  0140               	movlb	0	; select bank0
 15414  26AE  01EB               	clrf	?_dwt_check_dev_id
 15415  26AF  01EC               	clrf	?_dwt_check_dev_id+1
 15416  26B0  0008               	return
 15417  26B1                     __end_of_dwt_check_dev_id:	
 15418                           
 15419                           	psect	text33
 15420  22EB                     __ptext33:	
 15421 ;; *************** function _dwt_readdevid *****************
 15422 ;; Defined at:
 15423 ;;		line 1081 in file "deca_device.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;		None
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;		None
 15428 ;; Return value:  Size  Location     Type
 15429 ;;                  4   37[BANK1 ] unsigned long 
 15430 ;; Registers used:
 15431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15432 ;; Tracked objects:
 15433 ;;		On entry : 0/0
 15434 ;;		On exit  : 0/0
 15435 ;;		Unchanged: 0/0
 15436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15437 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15440 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15441 ;;Total ram usage:        4 bytes
 15442 ;; Hardware stack levels used:    1
 15443 ;; Hardware stack levels required when called:   10
 15444 ;; This function calls:
 15445 ;;		_dwt_read32bitoffsetreg
 15446 ;; This function is called by:
 15447 ;;		_dwt_check_dev_id
 15448 ;; This function uses a non-reentrant model
 15449 ;;
 15450                           
 15451                           
 15452                           ;psect for function _dwt_readdevid
 15453  22EB                     _dwt_readdevid:	
 15454                           
 15455                           ;deca_device.c: 1083: return dwt_read32bitoffsetreg(0x0, 0);
 15456                           
 15457                           ;incstack = 0
 15458                           ; Regs used in _dwt_readdevid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15459  22EB  3000               	movlw	0
 15460  22EC  0141               	movlb	1	; select bank1
 15461  22ED  00AE               	movwf	(dwt_read32bitoffsetreg@regFileID+3)^(0+128)
 15462  22EE  3000               	movlw	0
 15463  22EF  00AD               	movwf	(dwt_read32bitoffsetreg@regFileID+2)^(0+128)
 15464  22F0  3000               	movlw	0
 15465  22F1  00AC               	movwf	(dwt_read32bitoffsetreg@regFileID+1)^(0+128)
 15466  22F2  3000               	movlw	0
 15467  22F3  00AB               	movwf	dwt_read32bitoffsetreg@regFileID^(0+128)
 15468  22F4  3000               	movlw	0
 15469  22F5  00B2               	movwf	(dwt_read32bitoffsetreg@regOffset+3)^(0+128)
 15470  22F6  3000               	movlw	0
 15471  22F7  00B1               	movwf	(dwt_read32bitoffsetreg@regOffset+2)^(0+128)
 15472  22F8  3000               	movlw	0
 15473  22F9  00B0               	movwf	(dwt_read32bitoffsetreg@regOffset+1)^(0+128)
 15474  22FA  3000               	movlw	0
 15475  22FB  00AF               	movwf	dwt_read32bitoffsetreg@regOffset^(0+128)
 15476  22FC  319A  22CF         	fcall	_dwt_read32bitoffsetreg
 15477  22FE  0141               	movlb	1	; select bank1
 15478  22FF  082E               	movf	(?_dwt_read32bitoffsetreg+3)^(0+128),w
 15479  2300  00C8               	movwf	(?_dwt_readdevid+3)^(0+128)
 15480  2301  082D               	movf	(?_dwt_read32bitoffsetreg+2)^(0+128),w
 15481  2302  00C7               	movwf	(?_dwt_readdevid+2)^(0+128)
 15482  2303  082C               	movf	(?_dwt_read32bitoffsetreg+1)^(0+128),w
 15483  2304  00C6               	movwf	(?_dwt_readdevid+1)^(0+128)
 15484  2305  082B               	movf	?_dwt_read32bitoffsetreg^(0+128),w
 15485  2306  00C5               	movwf	?_dwt_readdevid^(0+128)
 15486  2307  0008               	return
 15487  2308                     __end_of_dwt_readdevid:	
 15488                           
 15489                           	psect	text34
 15490  26EB                     __ptext34:	
 15491 ;; *************** function __dwt_prog_ldo_and_bias_tune *****************
 15492 ;; Defined at:
 15493 ;;		line 696 in file "deca_device.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;                  1    wreg      void 
 15500 ;; Registers used:
 15501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15509 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15510 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15511 ;;Total ram usage:        2 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:    9
 15514 ;; This function calls:
 15515 ;;		_dwt_modify16bitoffsetreg
 15516 ;; This function is called by:
 15517 ;;		_dwt_initialise
 15518 ;;		_dwt_restoreconfig
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           
 15523                           ;psect for function __dwt_prog_ldo_and_bias_tune
 15524  26EB                     __dwt_prog_ldo_and_bias_tune:	
 15525                           
 15526                           ;deca_device.c: 698: dwt_modify16bitoffsetreg(0xb0008, 0, -1, (0x180u));
 15527                           
 15528                           ;incstack = 0
 15529                           ; Regs used in __dwt_prog_ldo_and_bias_tune: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15530  26EB  3000               	movlw	0
 15531  26EC  0141               	movlb	1	; select bank1
 15532  26ED  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 15533  26EE  300B               	movlw	11
 15534  26EF  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 15535  26F0  3000               	movlw	0
 15536  26F1  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 15537  26F2  3008               	movlw	8
 15538  26F3  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 15539  26F4  3000               	movlw	0
 15540  26F5  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 15541  26F6  3000               	movlw	0
 15542  26F7  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 15543  26F8  3000               	movlw	0
 15544  26F9  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 15545  26FA  3000               	movlw	0
 15546  26FB  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 15547  26FC  30FF               	movlw	255
 15548  26FD  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 15549  26FE  30FF               	movlw	255
 15550  26FF  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 15551  2700  3080               	movlw	128
 15552  2701  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 15553  2702  3001               	movlw	1
 15554  2703  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 15555  2704  31A7  276C  31A6   	fcall	_dwt_modify16bitoffsetreg
 15556                           
 15557                           ;deca_device.c: 699: dwt_modify16bitoffsetreg(0x11001f,0,(uint16_t)~0x1fU,pdw3000local->
      +                          bias_tune);
 15558  2707  3000               	movlw	0
 15559  2708  0141               	movlb	1	; select bank1
 15560  2709  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 15561  270A  3011               	movlw	17
 15562  270B  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 15563  270C  3000               	movlw	0
 15564  270D  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 15565  270E  301F               	movlw	31
 15566  270F  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 15567  2710  3000               	movlw	0
 15568  2711  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 15569  2712  3000               	movlw	0
 15570  2713  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 15571  2714  3000               	movlw	0
 15572  2715  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 15573  2716  3000               	movlw	0
 15574  2717  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 15575  2718  30E0               	movlw	224
 15576  2719  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 15577  271A  30FF               	movlw	255
 15578  271B  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 15579  271C  087C               	movf	_pdw3000local,w
 15580  271D  3E08               	addlw	8
 15581  271E  0086               	movwf	6
 15582  271F  3002               	movlw	2	; select bank4/5
 15583  2720  0087               	movwf	7
 15584  2721  0801               	movf	1,w
 15585  2722  00AC               	movwf	??__dwt_prog_ldo_and_bias_tune^(0+128)
 15586  2723  01AD               	clrf	(??__dwt_prog_ldo_and_bias_tune^(0+128)+1)
 15587  2724  082C               	movf	??__dwt_prog_ldo_and_bias_tune^(0+128),w
 15588  2725  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 15589  2726  082D               	movf	(??__dwt_prog_ldo_and_bias_tune+1)^(0+128),w
 15590  2727  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 15591  2728  31A7  276C         	fcall	_dwt_modify16bitoffsetreg
 15592  272A  0008               	return
 15593  272B                     __end_of__dwt_prog_ldo_and_bias_tune:	
 15594                           
 15595                           	psect	text35
 15596  1C66                     __ptext35:	
 15597 ;; *************** function __dwt_otpread *****************
 15598 ;; Defined at:
 15599 ;;		line 2724 in file "deca_device.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;  address         2   37[BANK1 ] unsigned int 
 15602 ;; Auto vars:     Size  Location     Type
 15603 ;;  ret_data        4   41[BANK1 ] unsigned long 
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  4   37[BANK1 ] unsigned long 
 15606 ;; Registers used:
 15607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 0/0
 15610 ;;		On exit  : 0/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15613 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15614 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15616 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15617 ;;Total ram usage:        8 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:   10
 15620 ;; This function calls:
 15621 ;;		_dwt_read32bitoffsetreg
 15622 ;;		_dwt_write16bitoffsetreg
 15623 ;; This function is called by:
 15624 ;;		_dwt_initialise
 15625 ;;		_dwt_otpread
 15626 ;;		_dwt_otpwriteandverify
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           
 15631                           ;psect for function __dwt_otpread
 15632  1C66                     __dwt_otpread:	
 15633                           
 15634                           ;deca_device.c: 2726: uint32_t ret_data = 0;
 15635                           
 15636                           ;incstack = 0
 15637                           ; Regs used in __dwt_otpread: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15638  1C66  3000               	movlw	0
 15639  1C67  0141               	movlb	1	; select bank1
 15640  1C68  00CC               	movwf	(__dwt_otpread@ret_data+3)^(0+128)
 15641  1C69  3000               	movlw	0
 15642  1C6A  00CB               	movwf	(__dwt_otpread@ret_data+2)^(0+128)
 15643  1C6B  3000               	movlw	0
 15644  1C6C  00CA               	movwf	(__dwt_otpread@ret_data+1)^(0+128)
 15645  1C6D  3000               	movlw	0
 15646  1C6E  00C9               	movwf	__dwt_otpread@ret_data^(0+128)
 15647                           
 15648                           ;deca_device.c: 2729: dwt_write16bitoffsetreg(0xb0008, 0, 0x0001);
 15649  1C6F  3000               	movlw	0
 15650  1C70  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 15651  1C71  300B               	movlw	11
 15652  1C72  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 15653  1C73  3000               	movlw	0
 15654  1C74  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 15655  1C75  3008               	movlw	8
 15656  1C76  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 15657  1C77  3000               	movlw	0
 15658  1C78  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 15659  1C79  3000               	movlw	0
 15660  1C7A  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 15661  1C7B  3000               	movlw	0
 15662  1C7C  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 15663  1C7D  3000               	movlw	0
 15664  1C7E  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 15665  1C7F  3001               	movlw	1
 15666  1C80  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 15667  1C81  3000               	movlw	0
 15668  1C82  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 15669  1C83  31A3  23C2  319C   	fcall	_dwt_write16bitoffsetreg
 15670                           
 15671                           ;deca_device.c: 2731: dwt_write16bitoffsetreg(0xb0004, 0, address);
 15672  1C86  3000               	movlw	0
 15673  1C87  0141               	movlb	1	; select bank1
 15674  1C88  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 15675  1C89  300B               	movlw	11
 15676  1C8A  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 15677  1C8B  3000               	movlw	0
 15678  1C8C  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 15679  1C8D  3004               	movlw	4
 15680  1C8E  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 15681  1C8F  3000               	movlw	0
 15682  1C90  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 15683  1C91  3000               	movlw	0
 15684  1C92  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 15685  1C93  3000               	movlw	0
 15686  1C94  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 15687  1C95  3000               	movlw	0
 15688  1C96  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 15689  1C97  0846               	movf	(__dwt_otpread@address+1)^(0+128),w
 15690  1C98  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 15691  1C99  0845               	movf	__dwt_otpread@address^(0+128),w
 15692  1C9A  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 15693  1C9B  31A3  23C2  319C   	fcall	_dwt_write16bitoffsetreg
 15694                           
 15695                           ;deca_device.c: 2733: dwt_write16bitoffsetreg(0xb0008, 0, 0x0002);
 15696  1C9E  3000               	movlw	0
 15697  1C9F  0141               	movlb	1	; select bank1
 15698  1CA0  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 15699  1CA1  300B               	movlw	11
 15700  1CA2  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 15701  1CA3  3000               	movlw	0
 15702  1CA4  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 15703  1CA5  3008               	movlw	8
 15704  1CA6  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 15705  1CA7  3000               	movlw	0
 15706  1CA8  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 15707  1CA9  3000               	movlw	0
 15708  1CAA  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 15709  1CAB  3000               	movlw	0
 15710  1CAC  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 15711  1CAD  3000               	movlw	0
 15712  1CAE  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 15713  1CAF  3002               	movlw	2
 15714  1CB0  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 15715  1CB1  3000               	movlw	0
 15716  1CB2  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 15717  1CB3  31A3  23C2  319C   	fcall	_dwt_write16bitoffsetreg
 15718                           
 15719                           ;deca_device.c: 2735: ret_data = dwt_read32bitoffsetreg(0xb0010, 0);
 15720  1CB6  3000               	movlw	0
 15721  1CB7  0141               	movlb	1	; select bank1
 15722  1CB8  00AE               	movwf	(dwt_read32bitoffsetreg@regFileID+3)^(0+128)
 15723  1CB9  300B               	movlw	11
 15724  1CBA  00AD               	movwf	(dwt_read32bitoffsetreg@regFileID+2)^(0+128)
 15725  1CBB  3000               	movlw	0
 15726  1CBC  00AC               	movwf	(dwt_read32bitoffsetreg@regFileID+1)^(0+128)
 15727  1CBD  3010               	movlw	16
 15728  1CBE  00AB               	movwf	dwt_read32bitoffsetreg@regFileID^(0+128)
 15729  1CBF  3000               	movlw	0
 15730  1CC0  00B2               	movwf	(dwt_read32bitoffsetreg@regOffset+3)^(0+128)
 15731  1CC1  3000               	movlw	0
 15732  1CC2  00B1               	movwf	(dwt_read32bitoffsetreg@regOffset+2)^(0+128)
 15733  1CC3  3000               	movlw	0
 15734  1CC4  00B0               	movwf	(dwt_read32bitoffsetreg@regOffset+1)^(0+128)
 15735  1CC5  3000               	movlw	0
 15736  1CC6  00AF               	movwf	dwt_read32bitoffsetreg@regOffset^(0+128)
 15737  1CC7  319A  22CF         	fcall	_dwt_read32bitoffsetreg
 15738  1CC9  0141               	movlb	1	; select bank1
 15739  1CCA  082E               	movf	(?_dwt_read32bitoffsetreg+3)^(0+128),w
 15740  1CCB  00CC               	movwf	(__dwt_otpread@ret_data+3)^(0+128)
 15741  1CCC  082D               	movf	(?_dwt_read32bitoffsetreg+2)^(0+128),w
 15742  1CCD  00CB               	movwf	(__dwt_otpread@ret_data+2)^(0+128)
 15743  1CCE  082C               	movf	(?_dwt_read32bitoffsetreg+1)^(0+128),w
 15744  1CCF  00CA               	movwf	(__dwt_otpread@ret_data+1)^(0+128)
 15745  1CD0  082B               	movf	?_dwt_read32bitoffsetreg^(0+128),w
 15746  1CD1  00C9               	movwf	__dwt_otpread@ret_data^(0+128)
 15747                           
 15748                           ;deca_device.c: 2738: return ret_data;
 15749  1CD2  084C               	movf	(__dwt_otpread@ret_data+3)^(0+128),w
 15750  1CD3  00C8               	movwf	(?__dwt_otpread+3)^(0+128)
 15751  1CD4  084B               	movf	(__dwt_otpread@ret_data+2)^(0+128),w
 15752  1CD5  00C7               	movwf	(?__dwt_otpread+2)^(0+128)
 15753  1CD6  084A               	movf	(__dwt_otpread@ret_data+1)^(0+128),w
 15754  1CD7  00C6               	movwf	(?__dwt_otpread+1)^(0+128)
 15755  1CD8  0849               	movf	__dwt_otpread@ret_data^(0+128),w
 15756  1CD9  00C5               	movwf	?__dwt_otpread^(0+128)
 15757  1CDA  0008               	return
 15758  1CDB                     __end_of__dwt_otpread:	
 15759                           
 15760                           	psect	text36
 15761  1D50                     __ptext36:	
 15762 ;; *************** function _dwt_configuretxrf *****************
 15763 ;; Defined at:
 15764 ;;		line 1099 in file "deca_device.c"
 15765 ;; Parameters:    Size  Location     Type
 15766 ;;  config          1    wreg     PTR struct .
 15767 ;;		 -> txconfig_options_ch9(7), 
 15768 ;; Auto vars:     Size  Location     Type
 15769 ;;  config          1   44[BANK1 ] PTR struct .
 15770 ;;		 -> txconfig_options_ch9(7), 
 15771 ;;  channel         1   43[BANK1 ] unsigned char 
 15772 ;; Return value:  Size  Location     Type
 15773 ;;                  1    wreg      void 
 15774 ;; Registers used:
 15775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15776 ;; Tracked objects:
 15777 ;;		On entry : 0/0
 15778 ;;		On exit  : 0/0
 15779 ;;		Unchanged: 0/0
 15780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15782 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15783 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15784 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15785 ;;Total ram usage:        4 bytes
 15786 ;; Hardware stack levels used:    1
 15787 ;; Hardware stack levels required when called:   12
 15788 ;; This function calls:
 15789 ;;		_dwt_calcbandwidthadj
 15790 ;;		_dwt_read8bitoffsetreg
 15791 ;;		_dwt_write32bitoffsetreg
 15792 ;;		_dwt_write8bitoffsetreg
 15793 ;; This function is called by:
 15794 ;;		_dw_main
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           
 15799                           ;psect for function _dwt_configuretxrf
 15800  1D50                     _dwt_configuretxrf:	
 15801                           
 15802                           ;incstack = 0
 15803                           ; Regs used in _dwt_configuretxrf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15804                           ;dwt_configuretxrf@config stored from wreg
 15805  1D50  0141               	movlb	1	; select bank1
 15806  1D51  00CC               	movwf	dwt_configuretxrf@config^(0+128)
 15807                           
 15808                           ;deca_device.c: 1101: if (config->PGcount == 0) {
 15809  1D52  084C               	movf	dwt_configuretxrf@config^(0+128),w
 15810  1D53  3E05               	addlw	5
 15811  1D54  0086               	movwf	6
 15812  1D55  3001               	movlw	1	; select bank2/3
 15813  1D56  0087               	movwf	7
 15814  1D57  0016               	moviw fsr1++
 15815  1D58  0401               	iorwf	1,w
 15816  1D59  1D03               	btfss	3,2
 15817  1D5A  2D77               	goto	l9480
 15818                           
 15819                           ;deca_device.c: 1103: dwt_write8bitoffsetreg(0x7001c, 0, config->PGdly);
 15820  1D5B  3000               	movlw	0
 15821  1D5C  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 15822  1D5D  3007               	movlw	7
 15823  1D5E  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 15824  1D5F  3000               	movlw	0
 15825  1D60  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 15826  1D61  301C               	movlw	28
 15827  1D62  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 15828  1D63  3000               	movlw	0
 15829  1D64  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 15830  1D65  3000               	movlw	0
 15831  1D66  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 15832  1D67  3000               	movlw	0
 15833  1D68  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 15834  1D69  3000               	movlw	0
 15835  1D6A  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 15836  1D6B  084C               	movf	dwt_configuretxrf@config^(0+128),w
 15837  1D6C  0086               	movwf	6
 15838  1D6D  3001               	movlw	1	; select bank2/3
 15839  1D6E  0087               	movwf	7
 15840  1D6F  0801               	movf	1,w
 15841  1D70  00C9               	movwf	??_dwt_configuretxrf^(0+128)
 15842  1D71  0849               	movf	??_dwt_configuretxrf^(0+128),w
 15843  1D72  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 15844  1D73  31A2  2226  319D   	fcall	_dwt_write8bitoffsetreg
 15845                           
 15846                           ;deca_device.c: 1104: }
 15847  1D76  2DAB               	goto	l9488
 15848  1D77                     l9480:	
 15849                           
 15850                           ;deca_device.c: 1105: else
 15851                           ;deca_device.c: 1106: {
 15852                           ;deca_device.c: 1107: uint8_t channel = 5;
 15853  1D77  3005               	movlw	5
 15854  1D78  0141               	movlb	1	; select bank1
 15855  1D79  00C9               	movwf	??_dwt_configuretxrf^(0+128)
 15856  1D7A  0849               	movf	??_dwt_configuretxrf^(0+128),w
 15857  1D7B  00CB               	movwf	dwt_configuretxrf@channel^(0+128)
 15858                           
 15859                           ;deca_device.c: 1108: if (dwt_read8bitoffsetreg(0x10014, 0) & 0x1)
 15860  1D7C  3000               	movlw	0
 15861  1D7D  00A3               	movwf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128)
 15862  1D7E  3001               	movlw	1
 15863  1D7F  00A2               	movwf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128)
 15864  1D80  3000               	movlw	0
 15865  1D81  00A1               	movwf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128)
 15866  1D82  3014               	movlw	20
 15867  1D83  00A0               	movwf	dwt_read8bitoffsetreg@regFileID^(0+128)
 15868  1D84  3000               	movlw	0
 15869  1D85  00A7               	movwf	(dwt_read8bitoffsetreg@regOffset+3)^(0+128)
 15870  1D86  3000               	movlw	0
 15871  1D87  00A6               	movwf	(dwt_read8bitoffsetreg@regOffset+2)^(0+128)
 15872  1D88  3000               	movlw	0
 15873  1D89  00A5               	movwf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128)
 15874  1D8A  3000               	movlw	0
 15875  1D8B  00A4               	movwf	dwt_read8bitoffsetreg@regOffset^(0+128)
 15876  1D8C  31A4  2490  319D   	fcall	_dwt_read8bitoffsetreg
 15877  1D8F  3901               	andlw	1
 15878  1D90  1903               	btfsc	3,2
 15879  1D91  2D97               	goto	l9486
 15880                           
 15881                           ;deca_device.c: 1109: {
 15882                           ;deca_device.c: 1110: channel = 9;
 15883  1D92  3009               	movlw	9
 15884  1D93  0141               	movlb	1	; select bank1
 15885  1D94  00C9               	movwf	??_dwt_configuretxrf^(0+128)
 15886  1D95  0849               	movf	??_dwt_configuretxrf^(0+128),w
 15887  1D96  00CB               	movwf	dwt_configuretxrf@channel^(0+128)
 15888  1D97                     l9486:	
 15889                           
 15890                           ;deca_device.c: 1111: }
 15891                           ;deca_device.c: 1112: dwt_calcbandwidthadj(config->PGcount, channel);
 15892  1D97  0141               	movlb	1	; select bank1
 15893  1D98  084C               	movf	dwt_configuretxrf@config^(0+128),w
 15894  1D99  3E05               	addlw	5
 15895  1D9A  0086               	movwf	6
 15896  1D9B  3001               	movlw	1	; select bank2/3
 15897  1D9C  0087               	movwf	7
 15898  1D9D  3F40               	moviw [0]fsr1
 15899  1D9E  00C3               	movwf	dwt_calcbandwidthadj@target_count^(0+128)
 15900  1D9F  3F41               	moviw [1]fsr1
 15901  1DA0  00C4               	movwf	(dwt_calcbandwidthadj@target_count+1)^(0+128)
 15902  1DA1  084B               	movf	dwt_configuretxrf@channel^(0+128),w
 15903  1DA2  00C9               	movwf	??_dwt_configuretxrf^(0+128)
 15904  1DA3  01CA               	clrf	(??_dwt_configuretxrf^(0+128)+1)
 15905  1DA4  0849               	movf	??_dwt_configuretxrf^(0+128),w
 15906  1DA5  00C5               	movwf	dwt_calcbandwidthadj@channel^(0+128)
 15907  1DA6  084A               	movf	(??_dwt_configuretxrf+1)^(0+128),w
 15908  1DA7  00C6               	movwf	(dwt_calcbandwidthadj@channel+1)^(0+128)
 15909  1DA8  319E  26D3  319D   	fcall	_dwt_calcbandwidthadj
 15910  1DAB                     l9488:	
 15911                           
 15912                           ;deca_device.c: 1113: }
 15913                           ;deca_device.c: 1116: dwt_write32bitoffsetreg(0x1000c,0,config->power);
 15914  1DAB  3000               	movlw	0
 15915  1DAC  0141               	movlb	1	; select bank1
 15916  1DAD  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 15917  1DAE  3001               	movlw	1
 15918  1DAF  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 15919  1DB0  3000               	movlw	0
 15920  1DB1  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 15921  1DB2  300C               	movlw	12
 15922  1DB3  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 15923  1DB4  3000               	movlw	0
 15924  1DB5  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 15925  1DB6  3000               	movlw	0
 15926  1DB7  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 15927  1DB8  3000               	movlw	0
 15928  1DB9  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 15929  1DBA  3000               	movlw	0
 15930  1DBB  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 15931  1DBC  0A4C               	incf	dwt_configuretxrf@config^(0+128),w
 15932  1DBD  0086               	movwf	6
 15933  1DBE  3001               	movlw	1	; select bank2/3
 15934  1DBF  0087               	movwf	7
 15935  1DC0  3F40               	moviw [0]fsr1
 15936  1DC1  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 15937  1DC2  3F41               	moviw [1]fsr1
 15938  1DC3  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 15939  1DC4  3F42               	moviw [2]fsr1
 15940  1DC5  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 15941  1DC6  3F43               	moviw [3]fsr1
 15942  1DC7  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 15943  1DC8  3198  20B7         	fcall	_dwt_write32bitoffsetreg
 15944  1DCA  0008               	return
 15945  1DCB                     __end_of_dwt_configuretxrf:	
 15946                           
 15947                           	psect	text37
 15948  1ED3                     __ptext37:	
 15949 ;; *************** function _dwt_calcbandwidthadj *****************
 15950 ;; Defined at:
 15951 ;;		line 4478 in file "deca_device.c"
 15952 ;; Parameters:    Size  Location     Type
 15953 ;;  target_count    2   35[BANK1 ] unsigned int 
 15954 ;;  channel         2   37[BANK1 ] int 
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;		None
 15957 ;; Return value:  Size  Location     Type
 15958 ;;                  1    wreg      unsigned char 
 15959 ;; Registers used:
 15960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15961 ;; Tracked objects:
 15962 ;;		On entry : 0/0
 15963 ;;		On exit  : 0/0
 15964 ;;		Unchanged: 0/0
 15965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15966 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15968 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15969 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15970 ;;Total ram usage:        6 bytes
 15971 ;; Hardware stack levels used:    1
 15972 ;; Hardware stack levels required when called:   11
 15973 ;; This function calls:
 15974 ;;		_dwt_disable_rf_tx
 15975 ;;		_dwt_disable_rftx_blocks
 15976 ;;		_dwt_enable_rf_tx
 15977 ;;		_dwt_enable_rftx_blocks
 15978 ;;		_dwt_force_clocks
 15979 ;;		_dwt_modify8bitoffsetreg
 15980 ;;		_dwt_read8bitoffsetreg
 15981 ;;		_dwt_write16bitoffsetreg
 15982 ;; This function is called by:
 15983 ;;		_dwt_configuretxrf
 15984 ;; This function uses a non-reentrant model
 15985 ;;
 15986                           
 15987                           
 15988                           ;psect for function _dwt_calcbandwidthadj
 15989  1ED3                     _dwt_calcbandwidthadj:	
 15990                           
 15991                           ;deca_device.c: 4481: dwt_force_clocks((1));
 15992                           
 15993                           ;incstack = 0
 15994                           ; Regs used in _dwt_calcbandwidthadj: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15995  1ED3  3001               	movlw	1
 15996  1ED4  0140               	movlb	0	; select bank0
 15997  1ED5  00EE               	movwf	dwt_force_clocks@clocks
 15998  1ED6  3000               	movlw	0
 15999  1ED7  00EF               	movwf	dwt_force_clocks@clocks+1
 16000  1ED8  31A7  272B  319E   	fcall	_dwt_force_clocks
 16001                           
 16002                           ;deca_device.c: 4482: dwt_enable_rf_tx(channel, 0);
 16003  1EDB  0141               	movlb	1	; select bank1
 16004  1EDC  0845               	movf	dwt_calcbandwidthadj@channel^(0+128),w
 16005  1EDD  00BE               	movwf	dwt_enable_rf_tx@channel^(0+128)
 16006  1EDE  0846               	movf	(dwt_calcbandwidthadj@channel+1)^(0+128),w
 16007  1EDF  00BF               	movwf	(dwt_enable_rf_tx@channel+1)^(0+128)
 16008  1EE0  0D89               	rlf	9,f
 16009  1EE1  3B89               	subwfb	9,f
 16010  1EE2  0989               	comf	9,f
 16011  1EE3  00C0               	movwf	(dwt_enable_rf_tx@channel+2)^(0+128)
 16012  1EE4  00C1               	movwf	(dwt_enable_rf_tx@channel+3)^(0+128)
 16013  1EE5  01C2               	clrf	dwt_enable_rf_tx@switch_control^(0+128)
 16014  1EE6  3192  223A  319E   	fcall	_dwt_enable_rf_tx
 16015                           
 16016                           ;deca_device.c: 4483: dwt_enable_rftx_blocks(channel);
 16017  1EE9  0141               	movlb	1	; select bank1
 16018  1EEA  0845               	movf	dwt_calcbandwidthadj@channel^(0+128),w
 16019  1EEB  00B8               	movwf	dwt_enable_rftx_blocks@channel^(0+128)
 16020  1EEC  0846               	movf	(dwt_calcbandwidthadj@channel+1)^(0+128),w
 16021  1EED  00B9               	movwf	(dwt_enable_rftx_blocks@channel+1)^(0+128)
 16022  1EEE  0D89               	rlf	9,f
 16023  1EEF  3B89               	subwfb	9,f
 16024  1EF0  0989               	comf	9,f
 16025  1EF1  00BA               	movwf	(dwt_enable_rftx_blocks@channel+2)^(0+128)
 16026  1EF2  00BB               	movwf	(dwt_enable_rftx_blocks@channel+3)^(0+128)
 16027  1EF3  3190  2000  319E   	fcall	_dwt_enable_rftx_blocks
 16028                           
 16029                           ;deca_device.c: 4486: dwt_write16bitoffsetreg(0x8001c, 0x0, target_count & 0xfffU);
 16030  1EF6  3000               	movlw	0
 16031  1EF7  0141               	movlb	1	; select bank1
 16032  1EF8  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 16033  1EF9  3008               	movlw	8
 16034  1EFA  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 16035  1EFB  3000               	movlw	0
 16036  1EFC  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 16037  1EFD  301C               	movlw	28
 16038  1EFE  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 16039  1EFF  3000               	movlw	0
 16040  1F00  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 16041  1F01  3000               	movlw	0
 16042  1F02  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 16043  1F03  3000               	movlw	0
 16044  1F04  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 16045  1F05  3000               	movlw	0
 16046  1F06  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 16047  1F07  30FF               	movlw	255
 16048  1F08  0543               	andwf	dwt_calcbandwidthadj@target_count^(0+128),w
 16049  1F09  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 16050  1F0A  300F               	movlw	15
 16051  1F0B  0544               	andwf	(dwt_calcbandwidthadj@target_count+1)^(0+128),w
 16052  1F0C  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 16053  1F0D  31A3  23C2  319E   	fcall	_dwt_write16bitoffsetreg
 16054                           
 16055                           ;deca_device.c: 4488: dwt_modify8bitoffsetreg(0x80010, 0x0, -1, (uint8_t)(0x1U | 0x2U));
 16056  1F10  3000               	movlw	0
 16057  1F11  0141               	movlb	1	; select bank1
 16058  1F12  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 16059  1F13  3008               	movlw	8
 16060  1F14  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 16061  1F15  3000               	movlw	0
 16062  1F16  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 16063  1F17  3010               	movlw	16
 16064  1F18  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 16065  1F19  3000               	movlw	0
 16066  1F1A  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 16067  1F1B  3000               	movlw	0
 16068  1F1C  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 16069  1F1D  3000               	movlw	0
 16070  1F1E  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 16071  1F1F  3000               	movlw	0
 16072  1F20  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 16073  1F21  30FF               	movlw	255
 16074  1F22  00C7               	movwf	??_dwt_calcbandwidthadj^(0+128)
 16075  1F23  0847               	movf	??_dwt_calcbandwidthadj^(0+128),w
 16076  1F24  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 16077  1F25  3003               	movlw	3
 16078  1F26  00C8               	movwf	(??_dwt_calcbandwidthadj+1)^(0+128)
 16079  1F27  0848               	movf	(??_dwt_calcbandwidthadj+1)^(0+128),w
 16080  1F28  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 16081  1F29  31A6  2643  319E   	fcall	_dwt_modify8bitoffsetreg
 16082  1F2C                     l9066:	
 16083                           ;deca_device.c: 4490: while (dwt_read8bitoffsetreg(0x80010, 0) & 0x1U);
 16084                           
 16085  1F2C  3000               	movlw	0
 16086  1F2D  0141               	movlb	1	; select bank1
 16087  1F2E  00A3               	movwf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128)
 16088  1F2F  3008               	movlw	8
 16089  1F30  00A2               	movwf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128)
 16090  1F31  3000               	movlw	0
 16091  1F32  00A1               	movwf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128)
 16092  1F33  3010               	movlw	16
 16093  1F34  00A0               	movwf	dwt_read8bitoffsetreg@regFileID^(0+128)
 16094  1F35  3000               	movlw	0
 16095  1F36  00A7               	movwf	(dwt_read8bitoffsetreg@regOffset+3)^(0+128)
 16096  1F37  3000               	movlw	0
 16097  1F38  00A6               	movwf	(dwt_read8bitoffsetreg@regOffset+2)^(0+128)
 16098  1F39  3000               	movlw	0
 16099  1F3A  00A5               	movwf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128)
 16100  1F3B  3000               	movlw	0
 16101  1F3C  00A4               	movwf	dwt_read8bitoffsetreg@regOffset^(0+128)
 16102  1F3D  31A4  2490  319E   	fcall	_dwt_read8bitoffsetreg
 16103  1F40  3901               	andlw	1
 16104  1F41  1D03               	btfss	3,2
 16105  1F42  2F2C               	goto	l9066
 16106                           
 16107                           ;deca_device.c: 4493: dwt_disable_rftx_blocks();
 16108  1F43  31A2  225E  319E   	fcall	_dwt_disable_rftx_blocks
 16109                           
 16110                           ;deca_device.c: 4494: dwt_disable_rf_tx(0);
 16111  1F46  3000               	movlw	0
 16112  1F47  3199  21B4  319E   	fcall	_dwt_disable_rf_tx
 16113                           
 16114                           ;deca_device.c: 4495: dwt_force_clocks((5));
 16115  1F4A  3005               	movlw	5
 16116  1F4B  0140               	movlb	0	; select bank0
 16117  1F4C  00EE               	movwf	dwt_force_clocks@clocks
 16118  1F4D  3000               	movlw	0
 16119  1F4E  00EF               	movwf	dwt_force_clocks@clocks+1
 16120  1F4F  31A7  272B  319E   	fcall	_dwt_force_clocks
 16121                           
 16122                           ;deca_device.c: 4497: return (dwt_read8bitoffsetreg(0x7001c, 0) & 0x3fU);
 16123                           ;	Return value of _dwt_calcbandwidthadj is never used
 16124  1F52  3000               	movlw	0
 16125  1F53  0141               	movlb	1	; select bank1
 16126  1F54  00A3               	movwf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128)
 16127  1F55  3007               	movlw	7
 16128  1F56  00A2               	movwf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128)
 16129  1F57  3000               	movlw	0
 16130  1F58  00A1               	movwf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128)
 16131  1F59  301C               	movlw	28
 16132  1F5A  00A0               	movwf	dwt_read8bitoffsetreg@regFileID^(0+128)
 16133  1F5B  3000               	movlw	0
 16134  1F5C  00A7               	movwf	(dwt_read8bitoffsetreg@regOffset+3)^(0+128)
 16135  1F5D  3000               	movlw	0
 16136  1F5E  00A6               	movwf	(dwt_read8bitoffsetreg@regOffset+2)^(0+128)
 16137  1F5F  3000               	movlw	0
 16138  1F60  00A5               	movwf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128)
 16139  1F61  3000               	movlw	0
 16140  1F62  00A4               	movwf	dwt_read8bitoffsetreg@regOffset^(0+128)
 16141  1F63  31A4  2490         	fcall	_dwt_read8bitoffsetreg
 16142  1F65  0008               	return
 16143  1F66                     __end_of_dwt_calcbandwidthadj:	
 16144                           
 16145                           	psect	text38
 16146  1000                     __ptext38:	
 16147 ;; *************** function _dwt_enable_rftx_blocks *****************
 16148 ;; Defined at:
 16149 ;;		line 4262 in file "deca_device.c"
 16150 ;; Parameters:    Size  Location     Type
 16151 ;;  channel         4   24[BANK1 ] unsigned long 
 16152 ;; Auto vars:     Size  Location     Type
 16153 ;;		None
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  1    wreg      void 
 16156 ;; Registers used:
 16157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16158 ;; Tracked objects:
 16159 ;;		On entry : 0/0
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16163 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16166 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16167 ;;Total ram usage:        4 bytes
 16168 ;; Hardware stack levels used:    1
 16169 ;; Hardware stack levels required when called:    9
 16170 ;; This function calls:
 16171 ;;		_dwt_modify32bitoffsetreg
 16172 ;; This function is called by:
 16173 ;;		_dwt_calcbandwidthadj
 16174 ;;		_dwt_configcwmode
 16175 ;;		_dwt_configcontinuousframemode
 16176 ;;		_dwt_calcpgcount
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           
 16181                           ;psect for function _dwt_enable_rftx_blocks
 16182  1000                     _dwt_enable_rftx_blocks:	
 16183                           
 16184                           ;deca_device.c: 4264: if (channel == (5))
 16185                           
 16186                           ;incstack = 0
 16187                           ; Regs used in _dwt_enable_rftx_blocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16188  1000  3005               	movlw	5
 16189  1001  0141               	movlb	1	; select bank1
 16190  1002  0638               	xorwf	dwt_enable_rftx_blocks@channel^(0+128),w
 16191  1003  0439               	iorwf	(dwt_enable_rftx_blocks@channel+1)^(0+128),w
 16192  1004  043A               	iorwf	(dwt_enable_rftx_blocks@channel+2)^(0+128),w
 16193  1005  043B               	iorwf	(dwt_enable_rftx_blocks@channel+3)^(0+128),w
 16194  1006  1D03               	btfss	3,2
 16195  1007  282B               	goto	l8932
 16196                           
 16197                           ;deca_device.c: 4265: {
 16198                           ;deca_device.c: 4266: dwt_modify32bitoffsetreg(0x70004, 0, -1, (0x2000000UL | 0x2000U | 
      +                          0x1000U | 0x800U | 0x400U));
 16199  1008  3000               	movlw	0
 16200  1009  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16201  100A  3007               	movlw	7
 16202  100B  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16203  100C  3000               	movlw	0
 16204  100D  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16205  100E  3004               	movlw	4
 16206  100F  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16207  1010  3000               	movlw	0
 16208  1011  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16209  1012  3000               	movlw	0
 16210  1013  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16211  1014  3000               	movlw	0
 16212  1015  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16213  1016  3000               	movlw	0
 16214  1017  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16215  1018  30FF               	movlw	255
 16216  1019  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16217  101A  30FF               	movlw	255
 16218  101B  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16219  101C  30FF               	movlw	255
 16220  101D  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16221  101E  30FF               	movlw	255
 16222  101F  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16223  1020  3002               	movlw	2
 16224  1021  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16225  1022  3000               	movlw	0
 16226  1023  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16227  1024  303C               	movlw	60
 16228  1025  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16229  1026  3000               	movlw	0
 16230  1027  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16231  1028  3193  239F         	fcall	_dwt_modify32bitoffsetreg
 16232                           
 16233                           ;deca_device.c: 4269: }
 16234  102A  0008               	return
 16235  102B                     l8932:	
 16236                           
 16237                           ;deca_device.c: 4270: else if (channel == (9))
 16238  102B  3009               	movlw	9
 16239  102C  0141               	movlb	1	; select bank1
 16240  102D  0638               	xorwf	dwt_enable_rftx_blocks@channel^(0+128),w
 16241  102E  0439               	iorwf	(dwt_enable_rftx_blocks@channel+1)^(0+128),w
 16242  102F  043A               	iorwf	(dwt_enable_rftx_blocks@channel+2)^(0+128),w
 16243  1030  043B               	iorwf	(dwt_enable_rftx_blocks@channel+3)^(0+128),w
 16244  1031  1D03               	btfss	3,2
 16245  1032  0008               	return
 16246                           
 16247                           ;deca_device.c: 4271: {
 16248                           ;deca_device.c: 4272: dwt_modify32bitoffsetreg(0x70004, 0, -1, (0x2000000UL | 0x1000U | 
      +                          0x800U | 0x400U));
 16249  1033  3000               	movlw	0
 16250  1034  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16251  1035  3007               	movlw	7
 16252  1036  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16253  1037  3000               	movlw	0
 16254  1038  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16255  1039  3004               	movlw	4
 16256  103A  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16257  103B  3000               	movlw	0
 16258  103C  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16259  103D  3000               	movlw	0
 16260  103E  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16261  103F  3000               	movlw	0
 16262  1040  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16263  1041  3000               	movlw	0
 16264  1042  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16265  1043  30FF               	movlw	255
 16266  1044  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16267  1045  30FF               	movlw	255
 16268  1046  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16269  1047  30FF               	movlw	255
 16270  1048  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16271  1049  30FF               	movlw	255
 16272  104A  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16273  104B  3002               	movlw	2
 16274  104C  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16275  104D  3000               	movlw	0
 16276  104E  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16277  104F  301C               	movlw	28
 16278  1050  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16279  1051  3000               	movlw	0
 16280  1052  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16281  1053  3193  239F         	fcall	_dwt_modify32bitoffsetreg
 16282  1055  0008               	return
 16283  1056                     __end_of_dwt_enable_rftx_blocks:	
 16284                           
 16285                           	psect	text39
 16286  123A                     __ptext39:	
 16287 ;; *************** function _dwt_enable_rf_tx *****************
 16288 ;; Defined at:
 16289 ;;		line 4169 in file "deca_device.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;  channel         4   30[BANK1 ] unsigned long 
 16292 ;;  switch_contr    1   34[BANK1 ] unsigned char 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;		None
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  1    wreg      void 
 16297 ;; Registers used:
 16298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16299 ;; Tracked objects:
 16300 ;;		On entry : 0/0
 16301 ;;		On exit  : 0/0
 16302 ;;		Unchanged: 0/0
 16303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16304 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16307 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16308 ;;Total ram usage:        5 bytes
 16309 ;; Hardware stack levels used:    1
 16310 ;; Hardware stack levels required when called:   10
 16311 ;; This function calls:
 16312 ;;		_dwt_modify32bitoffsetreg
 16313 ;;		_dwt_write32bitoffsetreg
 16314 ;; This function is called by:
 16315 ;;		_dwt_calcbandwidthadj
 16316 ;;		_dwt_configcwmode
 16317 ;;		_dwt_configcontinuousframemode
 16318 ;;		_dwt_calcpgcount
 16319 ;; This function uses a non-reentrant model
 16320 ;;
 16321                           
 16322                           
 16323                           ;psect for function _dwt_enable_rf_tx
 16324  123A                     _dwt_enable_rf_tx:	
 16325                           
 16326                           ;deca_device.c: 4172: dwt_modify32bitoffsetreg(0x70048, 0, -1, (0x8000000UL | 0x800U));
 16327                           
 16328                           ;incstack = 0
 16329                           ; Regs used in _dwt_enable_rf_tx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16330  123A  3000               	movlw	0
 16331  123B  0141               	movlb	1	; select bank1
 16332  123C  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16333  123D  3007               	movlw	7
 16334  123E  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16335  123F  3000               	movlw	0
 16336  1240  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16337  1241  3048               	movlw	72
 16338  1242  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16339  1243  3000               	movlw	0
 16340  1244  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16341  1245  3000               	movlw	0
 16342  1246  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16343  1247  3000               	movlw	0
 16344  1248  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16345  1249  3000               	movlw	0
 16346  124A  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16347  124B  30FF               	movlw	255
 16348  124C  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16349  124D  30FF               	movlw	255
 16350  124E  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16351  124F  30FF               	movlw	255
 16352  1250  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16353  1251  30FF               	movlw	255
 16354  1252  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16355  1253  3008               	movlw	8
 16356  1254  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16357  1255  3000               	movlw	0
 16358  1256  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16359  1257  3008               	movlw	8
 16360  1258  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16361  1259  3000               	movlw	0
 16362  125A  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16363  125B  3193  239F  3192   	fcall	_dwt_modify32bitoffsetreg
 16364                           
 16365                           ;deca_device.c: 4174: dwt_modify32bitoffsetreg(0x70048, 0, -1, (0x400000UL | 0x200000UL 
      +                          | 0x40U | 0x20U));
 16366  125E  3000               	movlw	0
 16367  125F  0141               	movlb	1	; select bank1
 16368  1260  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16369  1261  3007               	movlw	7
 16370  1262  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16371  1263  3000               	movlw	0
 16372  1264  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16373  1265  3048               	movlw	72
 16374  1266  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16375  1267  3000               	movlw	0
 16376  1268  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16377  1269  3000               	movlw	0
 16378  126A  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16379  126B  3000               	movlw	0
 16380  126C  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16381  126D  3000               	movlw	0
 16382  126E  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16383  126F  30FF               	movlw	255
 16384  1270  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16385  1271  30FF               	movlw	255
 16386  1272  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16387  1273  30FF               	movlw	255
 16388  1274  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16389  1275  30FF               	movlw	255
 16390  1276  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16391  1277  3000               	movlw	0
 16392  1278  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16393  1279  3060               	movlw	96
 16394  127A  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16395  127B  3000               	movlw	0
 16396  127C  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16397  127D  3060               	movlw	96
 16398  127E  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16399  127F  3193  239F  3192   	fcall	_dwt_modify32bitoffsetreg
 16400                           
 16401                           ;deca_device.c: 4180: if (channel == (5))
 16402  1282  3005               	movlw	5
 16403  1283  0141               	movlb	1	; select bank1
 16404  1284  063E               	xorwf	dwt_enable_rf_tx@channel^(0+128),w
 16405  1285  043F               	iorwf	(dwt_enable_rf_tx@channel+1)^(0+128),w
 16406  1286  0440               	iorwf	(dwt_enable_rf_tx@channel+2)^(0+128),w
 16407  1287  0441               	iorwf	(dwt_enable_rf_tx@channel+3)^(0+128),w
 16408  1288  1D03               	btfss	3,2
 16409  1289  2AA8               	goto	l8922
 16410                           
 16411                           ;deca_device.c: 4181: {
 16412                           ;deca_device.c: 4182: dwt_modify32bitoffsetreg(0x70000, 0, -1, (0x2000000UL | 0x2000U | 
      +                          0x1000U | 0x800U | 0x400U));
 16413  128A  3000               	movlw	0
 16414  128B  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16415  128C  3007               	movlw	7
 16416  128D  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16417  128E  3000               	movlw	0
 16418  128F  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16419  1290  3000               	movlw	0
 16420  1291  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16421  1292  3000               	movlw	0
 16422  1293  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16423  1294  3000               	movlw	0
 16424  1295  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16425  1296  3000               	movlw	0
 16426  1297  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16427  1298  3000               	movlw	0
 16428  1299  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16429  129A  30FF               	movlw	255
 16430  129B  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16431  129C  30FF               	movlw	255
 16432  129D  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16433  129E  30FF               	movlw	255
 16434  129F  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16435  12A0  30FF               	movlw	255
 16436  12A1  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16437  12A2  3002               	movlw	2
 16438  12A3  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16439  12A4  3000               	movlw	0
 16440  12A5  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16441  12A6  303C               	movlw	60
 16442  12A7  2AC6               	goto	L6
 16443  12A8                     l8922:	
 16444                           ;deca_device.c: 4185: }
 16445                           
 16446                           
 16447                           ;deca_device.c: 4186: else
 16448                           ;deca_device.c: 4187: {
 16449                           ;deca_device.c: 4188: dwt_modify32bitoffsetreg(0x70000, 0, -1, (0x2000000UL | 0x1000U | 
      +                          0x800U | 0x400U));
 16450  12A8  3000               	movlw	0
 16451  12A9  0141               	movlb	1	; select bank1
 16452  12AA  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 16453  12AB  3007               	movlw	7
 16454  12AC  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 16455  12AD  3000               	movlw	0
 16456  12AE  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 16457  12AF  3000               	movlw	0
 16458  12B0  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 16459  12B1  3000               	movlw	0
 16460  12B2  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 16461  12B3  3000               	movlw	0
 16462  12B4  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 16463  12B5  3000               	movlw	0
 16464  12B6  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 16465  12B7  3000               	movlw	0
 16466  12B8  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 16467  12B9  30FF               	movlw	255
 16468  12BA  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 16469  12BB  30FF               	movlw	255
 16470  12BC  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 16471  12BD  30FF               	movlw	255
 16472  12BE  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 16473  12BF  30FF               	movlw	255
 16474  12C0  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 16475  12C1  3002               	movlw	2
 16476  12C2  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 16477  12C3  3000               	movlw	0
 16478  12C4  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 16479  12C5  301C               	movlw	28
 16480  12C6                     L6:	
 16481  12C6  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 16482  12C7  3000               	movlw	0
 16483  12C8  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 16484  12C9  3193  239F  3192   	fcall	_dwt_modify32bitoffsetreg
 16485                           
 16486                           ;deca_device.c: 4191: }
 16487                           ;deca_device.c: 4193: if (switch_control)
 16488  12CC  0141               	movlb	1	; select bank1
 16489  12CD  0842               	movf	dwt_enable_rf_tx@switch_control^(0+128),w
 16490  12CE  1903               	btfsc	3,2
 16491  12CF  0008               	return
 16492                           
 16493                           ;deca_device.c: 4194: {
 16494                           ;deca_device.c: 4196: dwt_write32bitoffsetreg(0x70014, 0x0, 0x01011100);
 16495  12D0  3000               	movlw	0
 16496  12D1  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16497  12D2  3007               	movlw	7
 16498  12D3  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16499  12D4  3000               	movlw	0
 16500  12D5  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16501  12D6  3014               	movlw	20
 16502  12D7  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16503  12D8  3000               	movlw	0
 16504  12D9  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16505  12DA  3000               	movlw	0
 16506  12DB  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16507  12DC  3000               	movlw	0
 16508  12DD  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16509  12DE  3000               	movlw	0
 16510  12DF  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16511  12E0  3001               	movlw	1
 16512  12E1  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16513  12E2  3001               	movlw	1
 16514  12E3  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16515  12E4  3011               	movlw	17
 16516  12E5  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16517  12E6  3000               	movlw	0
 16518  12E7  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16519  12E8  3198  20B7         	fcall	_dwt_write32bitoffsetreg
 16520  12EA  0008               	return
 16521  12EB                     __end_of_dwt_enable_rf_tx:	
 16522                           
 16523                           	psect	text40
 16524  225E                     __ptext40:	
 16525 ;; *************** function _dwt_disable_rftx_blocks *****************
 16526 ;; Defined at:
 16527 ;;		line 4290 in file "deca_device.c"
 16528 ;; Parameters:    Size  Location     Type
 16529 ;;		None
 16530 ;; Auto vars:     Size  Location     Type
 16531 ;;		None
 16532 ;; Return value:  Size  Location     Type
 16533 ;;                  1    wreg      void 
 16534 ;; Registers used:
 16535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16536 ;; Tracked objects:
 16537 ;;		On entry : 0/0
 16538 ;;		On exit  : 0/0
 16539 ;;		Unchanged: 0/0
 16540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16545 ;;Total ram usage:        0 bytes
 16546 ;; Hardware stack levels used:    1
 16547 ;; Hardware stack levels required when called:   10
 16548 ;; This function calls:
 16549 ;;		_dwt_write32bitoffsetreg
 16550 ;; This function is called by:
 16551 ;;		_dwt_calcbandwidthadj
 16552 ;;		_dwt_calcpgcount
 16553 ;; This function uses a non-reentrant model
 16554 ;;
 16555                           
 16556                           
 16557                           ;psect for function _dwt_disable_rftx_blocks
 16558  225E                     _dwt_disable_rftx_blocks:	
 16559                           
 16560                           ;deca_device.c: 4292: dwt_write32bitoffsetreg(0x70004, 0, 0x00000000);
 16561                           
 16562                           ;incstack = 0
 16563                           ; Regs used in _dwt_disable_rftx_blocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16564  225E  3000               	movlw	0
 16565  225F  0141               	movlb	1	; select bank1
 16566  2260  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16567  2261  3007               	movlw	7
 16568  2262  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16569  2263  3000               	movlw	0
 16570  2264  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16571  2265  3004               	movlw	4
 16572  2266  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16573  2267  3000               	movlw	0
 16574  2268  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16575  2269  3000               	movlw	0
 16576  226A  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16577  226B  3000               	movlw	0
 16578  226C  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16579  226D  3000               	movlw	0
 16580  226E  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16581  226F  3000               	movlw	0
 16582  2270  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16583  2271  3000               	movlw	0
 16584  2272  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16585  2273  3000               	movlw	0
 16586  2274  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16587  2275  3000               	movlw	0
 16588  2276  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16589  2277  3198  20B7         	fcall	_dwt_write32bitoffsetreg
 16590  2279  0008               	return
 16591  227A                     __end_of_dwt_disable_rftx_blocks:	
 16592                           
 16593                           	psect	text41
 16594  19B4                     __ptext41:	
 16595 ;; *************** function _dwt_disable_rf_tx *****************
 16596 ;; Defined at:
 16597 ;;		line 4143 in file "deca_device.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;  switch_confi    1    wreg     unsigned char 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  switch_confi    1   76[BANK0 ] unsigned char 
 16602 ;; Return value:  Size  Location     Type
 16603 ;;                  1    wreg      void 
 16604 ;; Registers used:
 16605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16606 ;; Tracked objects:
 16607 ;;		On entry : 0/0
 16608 ;;		On exit  : 0/0
 16609 ;;		Unchanged: 0/0
 16610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16615 ;;Total ram usage:        1 bytes
 16616 ;; Hardware stack levels used:    1
 16617 ;; Hardware stack levels required when called:   10
 16618 ;; This function calls:
 16619 ;;		_dwt_write32bitoffsetreg
 16620 ;; This function is called by:
 16621 ;;		_dwt_calcbandwidthadj
 16622 ;;		_dwt_calcpgcount
 16623 ;; This function uses a non-reentrant model
 16624 ;;
 16625                           
 16626                           
 16627                           ;psect for function _dwt_disable_rf_tx
 16628  19B4                     _dwt_disable_rf_tx:	
 16629                           
 16630                           ;incstack = 0
 16631                           ; Regs used in _dwt_disable_rf_tx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16632                           ;dwt_disable_rf_tx@switch_config stored from wreg
 16633  19B4  0140               	movlb	0	; select bank0
 16634  19B5  00EC               	movwf	dwt_disable_rf_tx@switch_config
 16635                           
 16636                           ;deca_device.c: 4146: dwt_write32bitoffsetreg(0x70048, 0, 0x00000000);
 16637  19B6  3000               	movlw	0
 16638  19B7  0141               	movlb	1	; select bank1
 16639  19B8  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16640  19B9  3007               	movlw	7
 16641  19BA  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16642  19BB  3000               	movlw	0
 16643  19BC  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16644  19BD  3048               	movlw	72
 16645  19BE  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16646  19BF  3000               	movlw	0
 16647  19C0  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16648  19C1  3000               	movlw	0
 16649  19C2  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16650  19C3  3000               	movlw	0
 16651  19C4  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16652  19C5  3000               	movlw	0
 16653  19C6  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16654  19C7  3000               	movlw	0
 16655  19C8  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16656  19C9  3000               	movlw	0
 16657  19CA  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16658  19CB  3000               	movlw	0
 16659  19CC  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16660  19CD  3000               	movlw	0
 16661  19CE  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16662  19CF  3198  20B7  3199   	fcall	_dwt_write32bitoffsetreg
 16663                           
 16664                           ;deca_device.c: 4149: dwt_write32bitoffsetreg(0x70000, 0, 0x00000000);
 16665  19D2  3000               	movlw	0
 16666  19D3  0141               	movlb	1	; select bank1
 16667  19D4  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16668  19D5  3007               	movlw	7
 16669  19D6  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16670  19D7  3000               	movlw	0
 16671  19D8  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16672  19D9  3000               	movlw	0
 16673  19DA  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16674  19DB  3000               	movlw	0
 16675  19DC  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16676  19DD  3000               	movlw	0
 16677  19DE  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16678  19DF  3000               	movlw	0
 16679  19E0  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16680  19E1  3000               	movlw	0
 16681  19E2  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16682  19E3  3000               	movlw	0
 16683  19E4  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16684  19E5  3000               	movlw	0
 16685  19E6  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16686  19E7  3000               	movlw	0
 16687  19E8  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16688  19E9  3000               	movlw	0
 16689  19EA  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16690  19EB  3198  20B7  3199   	fcall	_dwt_write32bitoffsetreg
 16691                           
 16692                           ;deca_device.c: 4151: if (switch_config)
 16693  19EE  0140               	movlb	0	; select bank0
 16694  19EF  086C               	movf	dwt_disable_rf_tx@switch_config,w
 16695  19F0  1903               	btfsc	3,2
 16696  19F1  0008               	return
 16697                           
 16698                           ;deca_device.c: 4152: {
 16699                           ;deca_device.c: 4154: dwt_write32bitoffsetreg(0x70014, 0x0, 0x1C000000);
 16700  19F2  3000               	movlw	0
 16701  19F3  0141               	movlb	1	; select bank1
 16702  19F4  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 16703  19F5  3007               	movlw	7
 16704  19F6  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 16705  19F7  3000               	movlw	0
 16706  19F8  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 16707  19F9  3014               	movlw	20
 16708  19FA  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 16709  19FB  3000               	movlw	0
 16710  19FC  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 16711  19FD  3000               	movlw	0
 16712  19FE  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 16713  19FF  3000               	movlw	0
 16714  1A00  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 16715  1A01  3000               	movlw	0
 16716  1A02  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 16717  1A03  301C               	movlw	28
 16718  1A04  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 16719  1A05  3000               	movlw	0
 16720  1A06  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 16721  1A07  3000               	movlw	0
 16722  1A08  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 16723  1A09  3000               	movlw	0
 16724  1A0A  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 16725  1A0B  3198  20B7         	fcall	_dwt_write32bitoffsetreg
 16726  1A0D  0008               	return
 16727  1A0E                     __end_of_dwt_disable_rf_tx:	
 16728                           
 16729                           	psect	text42
 16730  0083                     __ptext42:	
 16731 ;; *************** function _dwt_configure *****************
 16732 ;; Defined at:
 16733 ;;		line 1335 in file "deca_device.c"
 16734 ;; Parameters:    Size  Location     Type
 16735 ;;  config          1    wreg     PTR struct .
 16736 ;;		 -> config(14), 
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;  config          1   20[BANK2 ] PTR struct .
 16739 ;;		 -> config(14), 
 16740 ;;  sts_mnth        2    6[BANK2 ] unsigned int 
 16741 ;;  temp            4   10[BANK2 ] unsigned long 
 16742 ;;  preamble_len    2   17[BANK2 ] int 
 16743 ;;  sts_len         2   15[BANK2 ] unsigned int 
 16744 ;;  error           2    4[BANK2 ] int 
 16745 ;;  chan            1   19[BANK2 ] unsigned char 
 16746 ;;  cnt             1   14[BANK2 ] unsigned char 
 16747 ;;  flag            1    8[BANK2 ] unsigned char 
 16748 ;;  mode            1    1[BANK2 ] unsigned char 
 16749 ;;  scp             1    0[BANK2 ] unsigned char 
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  2   58[BANK1 ] int 
 16752 ;; Registers used:
 16753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16759 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16760 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16761 ;;      Temps:          0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16762 ;;      Totals:         0       0      21      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16763 ;;Total ram usage:       42 bytes
 16764 ;; Hardware stack levels used:    1
 16765 ;; Hardware stack levels required when called:   12
 16766 ;; This function calls:
 16767 ;;		_Sleep
 16768 ;;		___ftmul
 16769 ;;		___fttol
 16770 ;;		___lltoft
 16771 ;;		__dwt_kick_dgc_on_wakeup
 16772 ;;		_dwt_configmrxlut
 16773 ;;		_dwt_modify16bitoffsetreg
 16774 ;;		_dwt_modify32bitoffsetreg
 16775 ;;		_dwt_modify8bitoffsetreg
 16776 ;;		_dwt_pgf_cal
 16777 ;;		_dwt_read32bitoffsetreg
 16778 ;;		_dwt_read8bitoffsetreg
 16779 ;;		_dwt_setdwstate
 16780 ;;		_dwt_setplenfine
 16781 ;;		_dwt_write16bitoffsetreg
 16782 ;;		_dwt_write32bitoffsetreg
 16783 ;;		_dwt_write8bitoffsetreg
 16784 ;;		_get_sts_mnth
 16785 ;; This function is called by:
 16786 ;;		_dw_main
 16787 ;; This function uses a non-reentrant model
 16788 ;;
 16789                           
 16790                           
 16791                           ;psect for function _dwt_configure
 16792  0083                     _dwt_configure:	
 16793                           
 16794                           ;incstack = 0
 16795                           ; Regs used in _dwt_configure: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16796                           ;dwt_configure@config stored from wreg
 16797  0083  0142               	movlb	2	; select bank2
 16798  0084  00E4               	movwf	dwt_configure@config^(0+256)
 16799                           
 16800                           ;deca_device.c: 1337: uint8_t chan = config->chan,cnt,flag;
 16801  0085  0864               	movf	dwt_configure@config^(0+256),w
 16802  0086  0086               	movwf	6
 16803  0087  3001               	movlw	1	; select bank2/3
 16804  0088  0087               	movwf	7
 16805  0089  0801               	movf	1,w
 16806  008A  0141               	movlb	1	; select bank1
 16807  008B  00DC               	movwf	??_dwt_configure^(0+128)
 16808  008C  085C               	movf	??_dwt_configure^(0+128),w
 16809  008D  0142               	movlb	2	; select bank2
 16810  008E  00E3               	movwf	dwt_configure@chan^(0+256)
 16811                           
 16812                           ;deca_device.c: 1338: uint32_t temp;
 16813                           ;deca_device.c: 1339: uint8_t scp = ((config->rxCode > 24) || (config->txCode > 24)) ? 1
      +                           : 0;
 16814  008F  01D9               	clrf	_dwt_configure$1274^(0+256)
 16815  0090  0AD9               	incf	_dwt_configure$1274^(0+256),f
 16816  0091  0864               	movf	dwt_configure@config^(0+256),w
 16817  0092  3E04               	addlw	4
 16818  0093  0086               	movwf	6
 16819  0094  3001               	movlw	1	; select bank2/3
 16820  0095  0087               	movwf	7
 16821  0096  3019               	movlw	25
 16822  0097  0201               	subwf	1,w
 16823  0098  1803               	skipnc
 16824  0099  28A3               	goto	l9500
 16825  009A  0864               	movf	dwt_configure@config^(0+256),w
 16826  009B  3E03               	addlw	3
 16827  009C  0086               	movwf	6
 16828  009D  3001               	movlw	1	; select bank2/3
 16829  009E  0087               	movwf	7
 16830  009F  3019               	movlw	25
 16831  00A0  0201               	subwf	1,w
 16832  00A1  1C03               	btfss	3,0
 16833  00A2  01D9               	clrf	_dwt_configure$1274^(0+256)
 16834  00A3                     l9500:	
 16835  00A3  0859               	movf	_dwt_configure$1274^(0+256),w
 16836  00A4  0141               	movlb	1	; select bank1
 16837  00A5  00DC               	movwf	??_dwt_configure^(0+128)
 16838  00A6  085C               	movf	??_dwt_configure^(0+128),w
 16839  00A7  0142               	movlb	2	; select bank2
 16840  00A8  00D0               	movwf	dwt_configure@scp^(0+256)
 16841                           
 16842                           ;deca_device.c: 1340: uint8_t mode = (config->phrMode == 0x1) ? 0x10U : 0;
 16843  00A9  0864               	movf	dwt_configure@config^(0+256),w
 16844  00AA  3E07               	addlw	7
 16845  00AB  0086               	movwf	6
 16846  00AC  3001               	movlw	1	; select bank2/3
 16847  00AD  0087               	movwf	7
 16848  00AE  0301               	decf	1,w
 16849  00AF  1903               	btfsc	3,2
 16850  00B0  28B4               	goto	l9506
 16851  00B1  01D2               	clrf	_dwt_configure$1276^(0+256)
 16852  00B2  01D3               	clrf	(_dwt_configure$1276+1)^(0+256)
 16853  00B3  28B8               	goto	l635
 16854  00B4                     l9506:	
 16855  00B4  3010               	movlw	16
 16856  00B5  00D2               	movwf	_dwt_configure$1276^(0+256)
 16857  00B6  3000               	movlw	0
 16858  00B7  00D3               	movwf	(_dwt_configure$1276^(0+256)+1)
 16859  00B8                     l635:	
 16860  00B8  0852               	movf	_dwt_configure$1276^(0+256),w
 16861  00B9  0141               	movlb	1	; select bank1
 16862  00BA  00DC               	movwf	??_dwt_configure^(0+128)
 16863  00BB  085C               	movf	??_dwt_configure^(0+128),w
 16864  00BC  0142               	movlb	2	; select bank2
 16865  00BD  00D1               	movwf	dwt_configure@mode^(0+256)
 16866                           
 16867                           ;deca_device.c: 1341: uint16_t sts_len;
 16868                           ;deca_device.c: 1342: int error = (0);
 16869  00BE  01D4               	clrf	dwt_configure@error^(0+256)
 16870  00BF  01D5               	clrf	(dwt_configure@error+1)^(0+256)
 16871                           
 16872                           ;deca_device.c: 1365: int preamble_len;
 16873                           ;deca_device.c: 1367: switch (config->txPreambLength)
 16874  00C0  28E4               	goto	l9532
 16875  00C1                     l9510:	
 16876                           ;deca_device.c: 1368: {
 16877                           ;deca_device.c: 1369: case 0x04:
 16878                           
 16879                           
 16880                           ;deca_device.c: 1370: preamble_len = 32;
 16881  00C1  3020               	movlw	32
 16882  00C2  28C8               	goto	L9
 16883  00C3                     l9512:	
 16884                           ;deca_device.c: 1372: case 0x01:
 16885                           
 16886                           ;deca_device.c: 1371: break;
 16887                           
 16888                           
 16889                           ;deca_device.c: 1373: preamble_len = 64;
 16890  00C3  3040               	movlw	64
 16891  00C4  28C8               	goto	L9
 16892  00C5                     l9514:	
 16893                           ;deca_device.c: 1375: case 0x07:
 16894                           
 16895                           ;deca_device.c: 1374: break;
 16896                           
 16897                           
 16898                           ;deca_device.c: 1376: preamble_len = 72;
 16899  00C5  3048               	movlw	72
 16900  00C6  28C8               	goto	L9
 16901  00C7                     l9516:	
 16902                           ;deca_device.c: 1378: case 0x05:
 16903                           
 16904                           ;deca_device.c: 1377: break;
 16905                           
 16906                           
 16907                           ;deca_device.c: 1379: preamble_len = 128;
 16908  00C7  3080               	movlw	128
 16909  00C8                     L9:	
 16910  00C8  00E1               	movwf	dwt_configure@preamble_len^(0+256)
 16911  00C9  3000               	movlw	0
 16912  00CA  28E2               	goto	L15
 16913  00CB                     l9518:	
 16914                           ;deca_device.c: 1381: case 0x09:
 16915                           
 16916                           ;deca_device.c: 1380: break;
 16917                           
 16918                           
 16919                           ;deca_device.c: 1382: preamble_len = 256;
 16920  00CB  3000               	movlw	0
 16921  00CC  00E1               	movwf	dwt_configure@preamble_len^(0+256)
 16922  00CD  3001               	movlw	1
 16923  00CE  28E2               	goto	L15
 16924  00CF                     l9520:	
 16925                           ;deca_device.c: 1384: case 0x0d:
 16926                           
 16927                           ;deca_device.c: 1383: break;
 16928                           
 16929                           
 16930                           ;deca_device.c: 1385: preamble_len = 512;
 16931  00CF  3000               	movlw	0
 16932  00D0  00E1               	movwf	dwt_configure@preamble_len^(0+256)
 16933  00D1  3002               	movlw	2
 16934  00D2  28E2               	goto	L15
 16935  00D3                     l9522:	
 16936                           ;deca_device.c: 1387: case 0x02:
 16937                           
 16938                           ;deca_device.c: 1386: break;
 16939                           
 16940                           
 16941                           ;deca_device.c: 1388: preamble_len = 1024;
 16942  00D3  3000               	movlw	0
 16943  00D4  00E1               	movwf	dwt_configure@preamble_len^(0+256)
 16944  00D5  3004               	movlw	4
 16945  00D6  28E2               	goto	L15
 16946  00D7                     l9524:	
 16947                           ;deca_device.c: 1390: case 0x06:
 16948                           
 16949                           ;deca_device.c: 1389: break;
 16950                           
 16951                           
 16952                           ;deca_device.c: 1391: preamble_len = 1536;
 16953  00D7  3000               	movlw	0
 16954  00D8  00E1               	movwf	dwt_configure@preamble_len^(0+256)
 16955  00D9  3006               	movlw	6
 16956  00DA  28E2               	goto	L15
 16957  00DB                     l9526:	
 16958                           ;deca_device.c: 1393: case 0x0A:
 16959                           
 16960                           ;deca_device.c: 1392: break;
 16961                           
 16962                           
 16963                           ;deca_device.c: 1394: preamble_len = 2048;
 16964  00DB  3000               	movlw	0
 16965  00DC  00E1               	movwf	dwt_configure@preamble_len^(0+256)
 16966  00DD  3008               	movlw	8
 16967  00DE  28E2               	goto	L15
 16968  00DF                     l9528:	
 16969                           ;deca_device.c: 1396: default:
 16970                           
 16971                           ;deca_device.c: 1395: break;
 16972                           
 16973                           
 16974                           ;deca_device.c: 1397: preamble_len = 4096;
 16975  00DF  3000               	movlw	0
 16976  00E0  00E1               	movwf	dwt_configure@preamble_len^(0+256)
 16977  00E1  3010               	movlw	16
 16978  00E2                     L15:	
 16979  00E2  00E2               	movwf	(dwt_configure@preamble_len^(0+256)+1)
 16980                           
 16981                           ;deca_device.c: 1399: }
 16982                           
 16983                           ;deca_device.c: 1398: break;
 16984  00E3  2905               	goto	l9534
 16985  00E4                     l9532:	
 16986  00E4  0A64               	incf	dwt_configure@config^(0+256),w
 16987  00E5  0086               	movwf	6
 16988  00E6  3001               	movlw	1	; select bank2/3
 16989  00E7  0087               	movwf	7
 16990  00E8  0801               	movf	1,w
 16991                           
 16992                           ; Switch size 1, requested type "space"
 16993                           ; Number of cases is 9, Range of values is 1 to 13
 16994                           ; switch strategies available:
 16995                           ; Name         Instructions Cycles
 16996                           ; simple_byte           28    15 (average)
 16997                           ; direct_byte           35     9 (fixed)
 16998                           ; jumptable            263     9 (fixed)
 16999                           ;	Chosen strategy is simple_byte
 17000  00E9  3A01               	xorlw	1	; case 1
 17001  00EA  1903               	skipnz
 17002  00EB  28C3               	goto	l9512
 17003  00EC  3A03               	xorlw	3	; case 2
 17004  00ED  1903               	skipnz
 17005  00EE  28D3               	goto	l9522
 17006  00EF  3A06               	xorlw	6	; case 4
 17007  00F0  1903               	skipnz
 17008  00F1  28C1               	goto	l9510
 17009  00F2  3A01               	xorlw	1	; case 5
 17010  00F3  1903               	skipnz
 17011  00F4  28C7               	goto	l9516
 17012  00F5  3A03               	xorlw	3	; case 6
 17013  00F6  1903               	skipnz
 17014  00F7  28D7               	goto	l9524
 17015  00F8  3A01               	xorlw	1	; case 7
 17016  00F9  1903               	skipnz
 17017  00FA  28C5               	goto	l9514
 17018  00FB  3A0E               	xorlw	14	; case 9
 17019  00FC  1903               	skipnz
 17020  00FD  28CB               	goto	l9518
 17021  00FE  3A03               	xorlw	3	; case 10
 17022  00FF  1903               	skipnz
 17023  0100  28DB               	goto	l9526
 17024  0101  3A07               	xorlw	7	; case 13
 17025  0102  1903               	skipnz
 17026  0103  28CF               	goto	l9520
 17027  0104  28DF               	goto	l9528
 17028  0105                     l9534:	
 17029                           
 17030                           ;deca_device.c: 1401: pdw3000local->sleep_mode &= (~(0x0020 | 0x00C0));
 17031  0105  087C               	movf	_pdw3000local,w
 17032  0106  3E10               	addlw	16
 17033  0107  0086               	movwf	6
 17034  0108  3002               	movlw	2	; select bank4/5
 17035  0109  0087               	movwf	7
 17036  010A  301F               	movlw	31
 17037  010B  0581               	andwf	1,f
 17038  010C  3141               	addfsr 1,1
 17039  010D  30FF               	movlw	255
 17040  010E  0581               	andwf	1,f
 17041                           
 17042                           ;deca_device.c: 1402: pdw3000local->longFrames = config->phrMode ;
 17043  010F  0864               	movf	dwt_configure@config^(0+256),w
 17044  0110  3E07               	addlw	7
 17045  0111  0086               	movwf	6
 17046  0112  3001               	movlw	1	; select bank2/3
 17047  0113  0087               	movwf	7
 17048  0114  0801               	movf	1,w
 17049  0115  0141               	movlb	1	; select bank1
 17050  0116  00DC               	movwf	??_dwt_configure^(0+128)
 17051  0117  087C               	movf	_pdw3000local,w
 17052  0118  3E0C               	addlw	12
 17053  0119  0086               	movwf	6
 17054  011A  3002               	movlw	2	; select bank4/5
 17055  011B  0087               	movwf	7
 17056  011C  085C               	movf	??_dwt_configure^(0+128),w
 17057  011D  0081               	movwf	1
 17058                           
 17059                           ;deca_device.c: 1403: sts_len=((uint16_t)1<<(((uint16_t)(config->stsLength))+2));
 17060  011E  3001               	movlw	1
 17061  011F  00DC               	movwf	??_dwt_configure^(0+128)
 17062  0120  3000               	movlw	0
 17063  0121  00DD               	movwf	(??_dwt_configure^(0+128)+1)
 17064  0122  0142               	movlb	2	; select bank2
 17065  0123  0864               	movf	dwt_configure@config^(0+256),w
 17066  0124  3E0C               	addlw	12
 17067  0125  0086               	movwf	6
 17068  0126  3001               	movlw	1	; select bank2/3
 17069  0127  0087               	movwf	7
 17070  0128  0801               	movf	1,w
 17071  0129  3E02               	addlw	2
 17072  012A  0A89               	incf	9,f
 17073  012B  0141               	movlb	1	; select bank1
 17074  012C  292F               	goto	u10414
 17075  012D                     u10415:	
 17076  012D  35DC               	lslf	??_dwt_configure^(0+128),f
 17077  012E  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 17078  012F                     u10414:	
 17079  012F  0B89               	decfsz	9,f
 17080  0130  292D               	goto	u10415
 17081  0131  085C               	movf	??_dwt_configure^(0+128),w
 17082  0132  0142               	movlb	2	; select bank2
 17083  0133  00DF               	movwf	dwt_configure@sts_len^(0+256)
 17084  0134  0141               	movlb	1	; select bank1
 17085  0135  085D               	movf	(??_dwt_configure+1)^(0+128),w
 17086  0136  0142               	movlb	2	; select bank2
 17087  0137  00E0               	movwf	(dwt_configure@sts_len+1)^(0+256)
 17088                           
 17089                           ;deca_device.c: 1404: pdw3000local->ststhreshold = (int16_t)((((uint32_t)sts_len) * 8) *
      +                           (0.90f));
 17090  0138  085F               	movf	dwt_configure@sts_len^(0+256),w
 17091  0139  0141               	movlb	1	; select bank1
 17092  013A  00DC               	movwf	??_dwt_configure^(0+128)
 17093  013B  0142               	movlb	2	; select bank2
 17094  013C  0860               	movf	(dwt_configure@sts_len+1)^(0+256),w
 17095  013D  0141               	movlb	1	; select bank1
 17096  013E  00DD               	movwf	(??_dwt_configure^(0+128)+1)
 17097  013F  01DE               	clrf	(??_dwt_configure^(0+128)+2)
 17098  0140  01DF               	clrf	(??_dwt_configure^(0+128)+3)
 17099  0141  3003               	movlw	3
 17100  0142                     u10425:	
 17101  0142  35DC               	lslf	??_dwt_configure^(0+128),f
 17102  0143  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 17103  0144  0DDE               	rlf	(??_dwt_configure^(0+128)+2),f
 17104  0145  0DDF               	rlf	(??_dwt_configure^(0+128)+3),f
 17105  0146  0B89               	decfsz	9,f
 17106  0147  2942               	goto	u10425
 17107  0148  085F               	movf	(??_dwt_configure+3)^(0+128),w
 17108  0149  0140               	movlb	0	; select bank0
 17109  014A  00A3               	movwf	___lltoft@c+3
 17110  014B  0141               	movlb	1	; select bank1
 17111  014C  085E               	movf	(??_dwt_configure+2)^(0+128),w
 17112  014D  0140               	movlb	0	; select bank0
 17113  014E  00A2               	movwf	___lltoft@c+2
 17114  014F  0141               	movlb	1	; select bank1
 17115  0150  085D               	movf	(??_dwt_configure+1)^(0+128),w
 17116  0151  0140               	movlb	0	; select bank0
 17117  0152  00A1               	movwf	___lltoft@c+1
 17118  0153  0141               	movlb	1	; select bank1
 17119  0154  085C               	movf	??_dwt_configure^(0+128),w
 17120  0155  0140               	movlb	0	; select bank0
 17121  0156  00A0               	movwf	___lltoft@c
 17122  0157  31A4  2465  3180   	fcall	___lltoft
 17123  015A  0140               	movlb	0	; select bank0
 17124  015B  0820               	movf	?___lltoft,w
 17125  015C  00A7               	movwf	___ftmul@f2
 17126  015D  0821               	movf	?___lltoft+1,w
 17127  015E  00A8               	movwf	___ftmul@f2+1
 17128  015F  0822               	movf	?___lltoft+2,w
 17129  0160  00A9               	movwf	___ftmul@f2+2
 17130  0161  3066               	movlw	102
 17131  0162  00A4               	movwf	___ftmul@f1
 17132  0163  3066               	movlw	102
 17133  0164  00A5               	movwf	___ftmul@f1+1
 17134  0165  303F               	movlw	63
 17135  0166  00A6               	movwf	___ftmul@f1+2
 17136  0167  3192  22EB  3180   	fcall	___ftmul
 17137  016A  0140               	movlb	0	; select bank0
 17138  016B  0824               	movf	?___ftmul,w
 17139  016C  00B4               	movwf	___fttol@f1
 17140  016D  0825               	movf	?___ftmul+1,w
 17141  016E  00B5               	movwf	___fttol@f1+1
 17142  016F  0826               	movf	?___ftmul+2,w
 17143  0170  00B6               	movwf	___fttol@f1+2
 17144  0171  319E  264C  3180   	fcall	___fttol
 17145  0174  087C               	movf	_pdw3000local,w
 17146  0175  3E12               	addlw	18
 17147  0176  0086               	movwf	6
 17148  0177  3002               	movlw	2	; select bank4/5
 17149  0178  0087               	movwf	7
 17150  0179  0140               	movlb	0	; select bank0
 17151  017A  0834               	movf	?___fttol,w
 17152  017B  3FC0               	movwi [0]fsr1
 17153  017C  0835               	movf	?___fttol+1,w
 17154  017D  3FC1               	movwi [1]fsr1
 17155                           
 17156                           ;deca_device.c: 1405: pdw3000local->stsconfig = config->stsMode;
 17157  017E  0142               	movlb	2	; select bank2
 17158  017F  0864               	movf	dwt_configure@config^(0+256),w
 17159  0180  3E0B               	addlw	11
 17160  0181  0086               	movwf	6
 17161  0182  3001               	movlw	1	; select bank2/3
 17162  0183  0087               	movwf	7
 17163  0184  0801               	movf	1,w
 17164  0185  0141               	movlb	1	; select bank1
 17165  0186  00DC               	movwf	??_dwt_configure^(0+128)
 17166  0187  087C               	movf	_pdw3000local,w
 17167  0188  3E15               	addlw	21
 17168  0189  0086               	movwf	6
 17169  018A  3002               	movlw	2	; select bank4/5
 17170  018B  0087               	movwf	7
 17171  018C  085C               	movf	??_dwt_configure^(0+128),w
 17172  018D  0081               	movwf	1
 17173                           
 17174                           ;deca_device.c: 1411: dwt_modify32bitoffsetreg(0x10, 0, ~(0x10U | 0x20U | 0x3000U | 0x30
      +                          000UL | 0x8000U),
 17175                           ;deca_device.c: 1412: ((uint32_t)config->pdoaMode) << (16U)
 17176                           ;deca_device.c: 1413: | ((uint16_t)config->stsMode & 0xB) << (12U)
 17177                           ;deca_device.c: 1414: | (0x20U & ((uint32_t)config->phrRate << (5U)))
 17178                           ;deca_device.c: 1415: | mode);
 17179  018E  3000               	movlw	0
 17180  018F  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 17181  0190  3000               	movlw	0
 17182  0191  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 17183  0192  3000               	movlw	0
 17184  0193  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 17185  0194  3010               	movlw	16
 17186  0195  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 17187  0196  3000               	movlw	0
 17188  0197  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 17189  0198  3000               	movlw	0
 17190  0199  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 17191  019A  3000               	movlw	0
 17192  019B  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 17193  019C  3000               	movlw	0
 17194  019D  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 17195  019E  30FF               	movlw	255
 17196  019F  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 17197  01A0  30FC               	movlw	252
 17198  01A1  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 17199  01A2  304F               	movlw	79
 17200  01A3  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 17201  01A4  30CF               	movlw	207
 17202  01A5  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 17203  01A6  0142               	movlb	2	; select bank2
 17204  01A7  0851               	movf	dwt_configure@mode^(0+256),w
 17205  01A8  0141               	movlb	1	; select bank1
 17206  01A9  00DC               	movwf	??_dwt_configure^(0+128)
 17207  01AA  01DD               	clrf	(??_dwt_configure^(0+128)+1)
 17208  01AB  01DE               	clrf	(??_dwt_configure^(0+128)+2)
 17209  01AC  01DF               	clrf	(??_dwt_configure^(0+128)+3)
 17210  01AD  0142               	movlb	2	; select bank2
 17211  01AE  0864               	movf	dwt_configure@config^(0+256),w
 17212  01AF  3E08               	addlw	8
 17213  01B0  0086               	movwf	6
 17214  01B1  3001               	movlw	1	; select bank2/3
 17215  01B2  0087               	movwf	7
 17216  01B3  0801               	movf	1,w
 17217  01B4  0141               	movlb	1	; select bank1
 17218  01B5  00E0               	movwf	(??_dwt_configure+4)^(0+128)
 17219  01B6  3004               	movlw	4
 17220  01B7                     u10435:	
 17221  01B7  35E0               	lslf	(??_dwt_configure+4)^(0+128),f
 17222  01B8  3EFF               	addlw	-1
 17223  01B9  1D03               	skipz
 17224  01BA  29B7               	goto	u10435
 17225  01BB  3560               	lslf	(??_dwt_configure+4)^(0+128),w
 17226  01BC  3920               	andlw	32
 17227  01BD  00E1               	movwf	(??_dwt_configure+5)^(0+128)
 17228  01BE  01E2               	clrf	((??_dwt_configure+5)^(0+128)+1)
 17229  01BF  01E3               	clrf	((??_dwt_configure+5)^(0+128)+2)
 17230  01C0  01E4               	clrf	((??_dwt_configure+5)^(0+128)+3)
 17231  01C1  0142               	movlb	2	; select bank2
 17232  01C2  0864               	movf	dwt_configure@config^(0+256),w
 17233  01C3  3E0B               	addlw	11
 17234  01C4  0086               	movwf	6
 17235  01C5  3001               	movlw	1	; select bank2/3
 17236  01C6  0087               	movwf	7
 17237  01C7  0801               	movf	1,w
 17238  01C8  390B               	andlw	11
 17239  01C9  0141               	movlb	1	; select bank1
 17240  01CA  00E5               	movwf	(??_dwt_configure+9)^(0+128)
 17241  01CB  01E6               	clrf	((??_dwt_configure+9)^(0+128)+1)
 17242  01CC  0E65               	swapf	(??_dwt_configure+9)^(0+128),w
 17243  01CD  39F0               	andlw	240
 17244  01CE  00E6               	movwf	((??_dwt_configure+9)^(0+128)+1)
 17245  01CF  01E5               	clrf	(??_dwt_configure+9)^(0+128)
 17246  01D0  0865               	movf	(??_dwt_configure+9)^(0+128),w
 17247  01D1  00E7               	movwf	(??_dwt_configure+11)^(0+128)
 17248  01D2  0866               	movf	(??_dwt_configure+10)^(0+128),w
 17249  01D3  00E8               	movwf	((??_dwt_configure+11)^(0+128)+1)
 17250  01D4  01E9               	clrf	((??_dwt_configure+11)^(0+128)+2)
 17251  01D5  01EA               	clrf	((??_dwt_configure+11)^(0+128)+3)
 17252  01D6  0142               	movlb	2	; select bank2
 17253  01D7  0864               	movf	dwt_configure@config^(0+256),w
 17254  01D8  3E0D               	addlw	13
 17255  01D9  0086               	movwf	6
 17256  01DA  3001               	movlw	1	; select bank2/3
 17257  01DB  0087               	movwf	7
 17258  01DC  0801               	movf	1,w
 17259  01DD  0141               	movlb	1	; select bank1
 17260  01DE  00EB               	movwf	(??_dwt_configure+15)^(0+128)
 17261  01DF  01EC               	clrf	((??_dwt_configure+15)^(0+128)+1)
 17262  01E0  01ED               	clrf	((??_dwt_configure+15)^(0+128)+2)
 17263  01E1  01EE               	clrf	((??_dwt_configure+15)^(0+128)+3)
 17264  01E2  3010               	movlw	16
 17265  01E3                     u10445:	
 17266  01E3  35EB               	lslf	(??_dwt_configure+15)^(0+128),f
 17267  01E4  0DEC               	rlf	((??_dwt_configure+15)^(0+128)+1),f
 17268  01E5  0DED               	rlf	((??_dwt_configure+15)^(0+128)+2),f
 17269  01E6  0DEE               	rlf	((??_dwt_configure+15)^(0+128)+3),f
 17270  01E7  0B89               	decfsz	9,f
 17271  01E8  29E3               	goto	u10445
 17272  01E9  086B               	movf	(??_dwt_configure+15)^(0+128),w
 17273  01EA  04E7               	iorwf	(??_dwt_configure+11)^(0+128),f
 17274  01EB  086C               	movf	(??_dwt_configure+16)^(0+128),w
 17275  01EC  04E8               	iorwf	((??_dwt_configure+11)^(0+128)+1),f
 17276  01ED  086D               	movf	(??_dwt_configure+17)^(0+128),w
 17277  01EE  04E9               	iorwf	((??_dwt_configure+11)^(0+128)+2),f
 17278  01EF  086E               	movf	(??_dwt_configure+18)^(0+128),w
 17279  01F0  04EA               	iorwf	((??_dwt_configure+11)^(0+128)+3),f
 17280  01F1  0867               	movf	(??_dwt_configure+11)^(0+128),w
 17281  01F2  04E1               	iorwf	(??_dwt_configure+5)^(0+128),f
 17282  01F3  0868               	movf	(??_dwt_configure+12)^(0+128),w
 17283  01F4  04E2               	iorwf	((??_dwt_configure+5)^(0+128)+1),f
 17284  01F5  0869               	movf	(??_dwt_configure+13)^(0+128),w
 17285  01F6  04E3               	iorwf	((??_dwt_configure+5)^(0+128)+2),f
 17286  01F7  086A               	movf	(??_dwt_configure+14)^(0+128),w
 17287  01F8  04E4               	iorwf	((??_dwt_configure+5)^(0+128)+3),f
 17288  01F9  085C               	movf	??_dwt_configure^(0+128),w
 17289  01FA  0461               	iorwf	(??_dwt_configure+5)^(0+128),w
 17290  01FB  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 17291  01FC  085D               	movf	(??_dwt_configure+1)^(0+128),w
 17292  01FD  0462               	iorwf	(??_dwt_configure+6)^(0+128),w
 17293  01FE  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 17294  01FF  085E               	movf	(??_dwt_configure+2)^(0+128),w
 17295  0200  0463               	iorwf	(??_dwt_configure+7)^(0+128),w
 17296  0201  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 17297  0202  085F               	movf	(??_dwt_configure+3)^(0+128),w
 17298  0203  0464               	iorwf	(??_dwt_configure+8)^(0+128),w
 17299  0204  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 17300  0205  3193  239F  3180   	fcall	_dwt_modify32bitoffsetreg
 17301                           
 17302                           ;deca_device.c: 1417: if (scp)
 17303  0208  0142               	movlb	2	; select bank2
 17304  0209  0850               	movf	dwt_configure@scp^(0+256),w
 17305  020A  1903               	btfsc	3,2
 17306  020B  2AA7               	goto	l9556
 17307                           
 17308                           ;deca_device.c: 1418: {
 17309                           ;deca_device.c: 1420: pdw3000local->sleep_mode |= 0x0020 | 0x0040;
 17310  020C  087C               	movf	_pdw3000local,w
 17311  020D  3E10               	addlw	16
 17312  020E  0086               	movwf	6
 17313  020F  3002               	movlw	2	; select bank4/5
 17314  0210  0087               	movwf	7
 17315  0211  3060               	movlw	96
 17316  0212  0481               	iorwf	1,f
 17317  0213  3141               	addfsr 1,1
 17318  0214  3000               	movlw	0
 17319  0215  0481               	iorwf	1,f
 17320                           
 17321                           ;deca_device.c: 1421: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x1<<11) | 0x400
      +                          U);
 17322  0216  3000               	movlw	0
 17323  0217  0141               	movlb	1	; select bank1
 17324  0218  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 17325  0219  300B               	movlw	11
 17326  021A  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 17327  021B  3000               	movlw	0
 17328  021C  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 17329  021D  3008               	movlw	8
 17330  021E  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 17331  021F  3000               	movlw	0
 17332  0220  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 17333  0221  3000               	movlw	0
 17334  0222  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 17335  0223  3000               	movlw	0
 17336  0224  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 17337  0225  3000               	movlw	0
 17338  0226  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 17339  0227  3000               	movlw	0
 17340  0228  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 17341  0229  3000               	movlw	0
 17342  022A  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 17343  022B  30E7               	movlw	231
 17344  022C  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 17345  022D  30FF               	movlw	255
 17346  022E  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 17347  022F  3000               	movlw	0
 17348  0230  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 17349  0231  3000               	movlw	0
 17350  0232  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 17351  0233  300C               	movlw	12
 17352  0234  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 17353  0235  3000               	movlw	0
 17354  0236  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 17355  0237  3193  239F  3180   	fcall	_dwt_modify32bitoffsetreg
 17356                           
 17357                           ;deca_device.c: 1423: dwt_write32bitoffsetreg(0xe000c, 0, 0x0306);
 17358  023A  3000               	movlw	0
 17359  023B  0141               	movlb	1	; select bank1
 17360  023C  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17361  023D  300E               	movlw	14
 17362  023E  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17363  023F  3000               	movlw	0
 17364  0240  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17365  0241  300C               	movlw	12
 17366  0242  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17367  0243  3000               	movlw	0
 17368  0244  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17369  0245  3000               	movlw	0
 17370  0246  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17371  0247  3000               	movlw	0
 17372  0248  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17373  0249  3000               	movlw	0
 17374  024A  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17375  024B  3000               	movlw	0
 17376  024C  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17377  024D  3000               	movlw	0
 17378  024E  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17379  024F  3003               	movlw	3
 17380  0250  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17381  0251  3006               	movlw	6
 17382  0252  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 17383  0253  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 17384                           
 17385                           ;deca_device.c: 1424: dwt_write32bitoffsetreg(0xe000e, 0, 0x00000000);
 17386  0256  3000               	movlw	0
 17387  0257  0141               	movlb	1	; select bank1
 17388  0258  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17389  0259  300E               	movlw	14
 17390  025A  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17391  025B  3000               	movlw	0
 17392  025C  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17393  025D  300E               	movlw	14
 17394  025E  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17395  025F  3000               	movlw	0
 17396  0260  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17397  0261  3000               	movlw	0
 17398  0262  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17399  0263  3000               	movlw	0
 17400  0264  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17401  0265  3000               	movlw	0
 17402  0266  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17403  0267  3000               	movlw	0
 17404  0268  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17405  0269  3000               	movlw	0
 17406  026A  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17407  026B  3000               	movlw	0
 17408  026C  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17409  026D  3000               	movlw	0
 17410  026E  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 17411  026F  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 17412                           
 17413                           ;deca_device.c: 1426: dwt_write32bitoffsetreg(0xe0012, 0, 0x000C5A0A);
 17414  0272  3000               	movlw	0
 17415  0273  0141               	movlb	1	; select bank1
 17416  0274  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17417  0275  300E               	movlw	14
 17418  0276  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17419  0277  3000               	movlw	0
 17420  0278  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17421  0279  3012               	movlw	18
 17422  027A  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17423  027B  3000               	movlw	0
 17424  027C  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17425  027D  3000               	movlw	0
 17426  027E  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17427  027F  3000               	movlw	0
 17428  0280  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17429  0281  3000               	movlw	0
 17430  0282  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17431  0283  3000               	movlw	0
 17432  0284  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17433  0285  300C               	movlw	12
 17434  0286  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17435  0287  305A               	movlw	90
 17436  0288  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17437  0289  300A               	movlw	10
 17438  028A  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 17439  028B  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 17440                           
 17441                           ;deca_device.c: 1427: dwt_write8bitoffsetreg(0xe0016, 0, 0x7D);
 17442  028E  3000               	movlw	0
 17443  028F  0141               	movlb	1	; select bank1
 17444  0290  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 17445  0291  300E               	movlw	14
 17446  0292  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 17447  0293  3000               	movlw	0
 17448  0294  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 17449  0295  3016               	movlw	22
 17450  0296  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 17451  0297  3000               	movlw	0
 17452  0298  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 17453  0299  3000               	movlw	0
 17454  029A  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 17455  029B  3000               	movlw	0
 17456  029C  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 17457  029D  3000               	movlw	0
 17458  029E  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 17459  029F  307D               	movlw	125
 17460  02A0  00DC               	movwf	??_dwt_configure^(0+128)
 17461  02A1  085C               	movf	??_dwt_configure^(0+128),w
 17462  02A2  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 17463  02A3  31A2  2226  3180   	fcall	_dwt_write8bitoffsetreg
 17464                           
 17465                           ;deca_device.c: 1428: }
 17466  02A6  2B9C               	goto	l649
 17467  02A7                     l9556:	
 17468                           
 17469                           ;deca_device.c: 1429: else
 17470                           ;deca_device.c: 1430: {
 17471                           ;deca_device.c: 1431: uint16_t sts_mnth;
 17472                           ;deca_device.c: 1432: if (config->stsMode != 0x0)
 17473  02A7  0142               	movlb	2	; select bank2
 17474  02A8  0864               	movf	dwt_configure@config^(0+256),w
 17475  02A9  3E0B               	addlw	11
 17476  02AA  0086               	movwf	6
 17477  02AB  3001               	movlw	1	; select bank2/3
 17478  02AC  0087               	movwf	7
 17479  02AD  0801               	movf	1,w
 17480  02AE  1903               	btfsc	3,2
 17481  02AF  2B41               	goto	l9570
 17482                           
 17483                           ;deca_device.c: 1433: {
 17484                           ;deca_device.c: 1436: if ((config->pdoaMode == 0x1) || (config->pdoaMode == 0x0))
 17485  02B0  0864               	movf	dwt_configure@config^(0+256),w
 17486  02B1  3E0D               	addlw	13
 17487  02B2  0086               	movwf	6
 17488  02B3  3001               	movlw	1	; select bank2/3
 17489  02B4  0087               	movwf	7
 17490  02B5  0301               	decf	1,w
 17491  02B6  1903               	btfsc	3,2
 17492  02B7  2AC0               	goto	l9562
 17493  02B8  0864               	movf	dwt_configure@config^(0+256),w
 17494  02B9  3E0D               	addlw	13
 17495  02BA  0086               	movwf	6
 17496  02BB  3001               	movlw	1	; select bank2/3
 17497  02BC  0087               	movwf	7
 17498  02BD  0801               	movf	1,w
 17499  02BE  1D03               	btfss	3,2
 17500  02BF  2ADE               	goto	l9564
 17501  02C0                     l9562:	
 17502                           
 17503                           ;deca_device.c: 1437: {
 17504                           ;deca_device.c: 1439: sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLeng
      +                          th)], (0x10), 3);
 17505  02C0  0864               	movf	dwt_configure@config^(0+256),w
 17506  02C1  3E0C               	addlw	12
 17507  02C2  0086               	movwf	6
 17508  02C3  3001               	movlw	1	; select bank2/3
 17509  02C4  0087               	movwf	7
 17510  02C5  0801               	movf	1,w
 17511  02C6  0141               	movlb	1	; select bank1
 17512  02C7  00DC               	movwf	??_dwt_configure^(0+128)
 17513  02C8  01DD               	clrf	(??_dwt_configure^(0+128)+1)
 17514  02C9  35DC               	lslf	??_dwt_configure^(0+128),f
 17515  02CA  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 17516  02CB  3030               	movlw	low (_sts_length_factors| (0+32768))
 17517  02CC  075C               	addwf	??_dwt_configure^(0+128),w
 17518  02CD  0084               	movwf	4
 17519  02CE  30A9               	movlw	high (_sts_length_factors| (0+32768))
 17520  02CF  3D5D               	addwfc	(??_dwt_configure+1)^(0+128),w
 17521  02D0  0085               	movwf	5
 17522  02D1  3F00               	moviw [0]fsr0
 17523  02D2  0140               	movlb	0	; select bank0
 17524  02D3  00A4               	movwf	get_sts_mnth@cipher
 17525  02D4  3F01               	moviw [1]fsr0
 17526  02D5  00A5               	movwf	get_sts_mnth@cipher+1
 17527  02D6  3010               	movlw	16
 17528  02D7  0141               	movlb	1	; select bank1
 17529  02D8  00DE               	movwf	(??_dwt_configure+2)^(0+128)
 17530  02D9  085E               	movf	(??_dwt_configure+2)^(0+128),w
 17531  02DA  0140               	movlb	0	; select bank0
 17532  02DB  00A6               	movwf	get_sts_mnth@threshold
 17533  02DC  3003               	movlw	3
 17534  02DD  2AFB               	goto	L18
 17535  02DE                     l9564:	
 17536                           ;deca_device.c: 1440: }
 17537                           
 17538                           
 17539                           ;deca_device.c: 1441: else
 17540                           ;deca_device.c: 1442: {
 17541                           ;deca_device.c: 1444: sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLeng
      +                          th)], (0x10), 4);
 17542  02DE  0864               	movf	dwt_configure@config^(0+256),w
 17543  02DF  3E0C               	addlw	12
 17544  02E0  0086               	movwf	6
 17545  02E1  3001               	movlw	1	; select bank2/3
 17546  02E2  0087               	movwf	7
 17547  02E3  0801               	movf	1,w
 17548  02E4  0141               	movlb	1	; select bank1
 17549  02E5  00DC               	movwf	??_dwt_configure^(0+128)
 17550  02E6  01DD               	clrf	(??_dwt_configure^(0+128)+1)
 17551  02E7  35DC               	lslf	??_dwt_configure^(0+128),f
 17552  02E8  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 17553  02E9  3030               	movlw	low (_sts_length_factors| (0+32768))
 17554  02EA  075C               	addwf	??_dwt_configure^(0+128),w
 17555  02EB  0084               	movwf	4
 17556  02EC  30A9               	movlw	high (_sts_length_factors| (0+32768))
 17557  02ED  3D5D               	addwfc	(??_dwt_configure+1)^(0+128),w
 17558  02EE  0085               	movwf	5
 17559  02EF  3F00               	moviw [0]fsr0
 17560  02F0  0140               	movlb	0	; select bank0
 17561  02F1  00A4               	movwf	get_sts_mnth@cipher
 17562  02F2  3F01               	moviw [1]fsr0
 17563  02F3  00A5               	movwf	get_sts_mnth@cipher+1
 17564  02F4  3010               	movlw	16
 17565  02F5  0141               	movlb	1	; select bank1
 17566  02F6  00DE               	movwf	(??_dwt_configure+2)^(0+128)
 17567  02F7  085E               	movf	(??_dwt_configure+2)^(0+128),w
 17568  02F8  0140               	movlb	0	; select bank0
 17569  02F9  00A6               	movwf	get_sts_mnth@threshold
 17570  02FA  3004               	movlw	4
 17571  02FB                     L18:	
 17572  02FB  0141               	movlb	1	; select bank1
 17573  02FC  00DF               	movwf	(??_dwt_configure+3)^(0+128)
 17574  02FD  085F               	movf	(??_dwt_configure+3)^(0+128),w
 17575  02FE  0140               	movlb	0	; select bank0
 17576  02FF  00A7               	movwf	get_sts_mnth@shift_val
 17577  0300  319B  23F8  3180   	fcall	_get_sts_mnth
 17578  0303  0140               	movlb	0	; select bank0
 17579  0304  0825               	movf	?_get_sts_mnth+1,w
 17580  0305  0142               	movlb	2	; select bank2
 17581  0306  00D7               	movwf	(dwt_configure@sts_mnth+1)^(0+256)
 17582  0307  0140               	movlb	0	; select bank0
 17583  0308  0824               	movf	?_get_sts_mnth,w
 17584  0309  0142               	movlb	2	; select bank2
 17585  030A  00D6               	movwf	dwt_configure@sts_mnth^(0+256)
 17586                           
 17587                           ;deca_device.c: 1445: }
 17588                           ;deca_device.c: 1447: preamble_len += (sts_len) * 8;
 17589  030B  0860               	movf	(dwt_configure@sts_len+1)^(0+256),w
 17590  030C  0141               	movlb	1	; select bank1
 17591  030D  00DD               	movwf	(??_dwt_configure^(0+128)+1)
 17592  030E  0142               	movlb	2	; select bank2
 17593  030F  085F               	movf	dwt_configure@sts_len^(0+256),w
 17594  0310  0141               	movlb	1	; select bank1
 17595  0311  00DC               	movwf	??_dwt_configure^(0+128)
 17596  0312  35DC               	lslf	??_dwt_configure^(0+128),f
 17597  0313  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 17598  0314  35DC               	lslf	??_dwt_configure^(0+128),f
 17599  0315  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 17600  0316  35DC               	lslf	??_dwt_configure^(0+128),f
 17601  0317  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 17602  0318  085C               	movf	??_dwt_configure^(0+128),w
 17603  0319  0142               	movlb	2	; select bank2
 17604  031A  07E1               	addwf	dwt_configure@preamble_len^(0+256),f
 17605  031B  0141               	movlb	1	; select bank1
 17606  031C  085D               	movf	(??_dwt_configure+1)^(0+128),w
 17607  031D  0142               	movlb	2	; select bank2
 17608  031E  3DE2               	addwfc	(dwt_configure@preamble_len+1)^(0+256),f
 17609                           
 17610                           ;deca_device.c: 1449: dwt_modify16bitoffsetreg(0xe0012, 2, (uint16_t)~(0x7f0000UL >> 16)
      +                          , sts_mnth & 0x7F);
 17611  031F  3000               	movlw	0
 17612  0320  0141               	movlb	1	; select bank1
 17613  0321  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 17614  0322  300E               	movlw	14
 17615  0323  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 17616  0324  3000               	movlw	0
 17617  0325  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 17618  0326  3012               	movlw	18
 17619  0327  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 17620  0328  3000               	movlw	0
 17621  0329  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 17622  032A  3000               	movlw	0
 17623  032B  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 17624  032C  3000               	movlw	0
 17625  032D  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 17626  032E  3002               	movlw	2
 17627  032F  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 17628  0330  3080               	movlw	128
 17629  0331  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 17630  0332  30FF               	movlw	255
 17631  0333  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 17632  0334  307F               	movlw	127
 17633  0335  0142               	movlb	2	; select bank2
 17634  0336  0556               	andwf	dwt_configure@sts_mnth^(0+256),w
 17635  0337  0141               	movlb	1	; select bank1
 17636  0338  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 17637  0339  3000               	movlw	0
 17638  033A  0142               	movlb	2	; select bank2
 17639  033B  0557               	andwf	(dwt_configure@sts_mnth+1)^(0+256),w
 17640  033C  0141               	movlb	1	; select bank1
 17641  033D  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 17642  033E  31A7  276C  3180   	fcall	_dwt_modify16bitoffsetreg
 17643  0341                     l9570:	
 17644                           
 17645                           ;deca_device.c: 1451: }
 17646                           ;deca_device.c: 1453: if (preamble_len >= 256)
 17647  0341  0142               	movlb	2	; select bank2
 17648  0342  0862               	movf	(dwt_configure@preamble_len+1)^(0+256),w
 17649  0343  3A80               	xorlw	128
 17650  0344  0141               	movlb	1	; select bank1
 17651  0345  00DC               	movwf	??_dwt_configure^(0+128)
 17652  0346  3081               	movlw	129
 17653  0347  025C               	subwf	??_dwt_configure^(0+128),w
 17654  0348  1D03               	skipz
 17655  0349  2B4D               	goto	u10495
 17656  034A  3000               	movlw	0
 17657  034B  0142               	movlb	2	; select bank2
 17658  034C  0261               	subwf	dwt_configure@preamble_len^(0+256),w
 17659  034D                     u10495:	
 17660  034D  1C03               	skipc
 17661  034E  2B78               	goto	l9576
 17662                           
 17663                           ;deca_device.c: 1454: {
 17664                           ;deca_device.c: 1455: pdw3000local->sleep_mode |= 0x0020 | 0x0000;
 17665  034F  087C               	movf	_pdw3000local,w
 17666  0350  3E10               	addlw	16
 17667  0351  0086               	movwf	6
 17668  0352  3002               	movlw	2	; select bank4/5
 17669  0353  0087               	movwf	7
 17670  0354  3020               	movlw	32
 17671  0355  0481               	iorwf	1,f
 17672  0356  3141               	addfsr 1,1
 17673  0357  3000               	movlw	0
 17674  0358  0481               	iorwf	1,f
 17675                           
 17676                           ;deca_device.c: 1456: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x0<<11) | 0x400
      +                          U);
 17677  0359  3000               	movlw	0
 17678  035A  0141               	movlb	1	; select bank1
 17679  035B  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 17680  035C  300B               	movlw	11
 17681  035D  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 17682  035E  3000               	movlw	0
 17683  035F  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 17684  0360  3008               	movlw	8
 17685  0361  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 17686  0362  3000               	movlw	0
 17687  0363  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 17688  0364  3000               	movlw	0
 17689  0365  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 17690  0366  3000               	movlw	0
 17691  0367  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 17692  0368  3000               	movlw	0
 17693  0369  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 17694  036A  3000               	movlw	0
 17695  036B  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 17696  036C  3000               	movlw	0
 17697  036D  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 17698  036E  30E7               	movlw	231
 17699  036F  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 17700  0370  30FF               	movlw	255
 17701  0371  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 17702  0372  3000               	movlw	0
 17703  0373  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 17704  0374  3000               	movlw	0
 17705  0375  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 17706  0376  3004               	movlw	4
 17707  0377  2B96               	goto	L19
 17708  0378                     l9576:	
 17709                           ;deca_device.c: 1457: }
 17710                           
 17711                           
 17712                           ;deca_device.c: 1458: else
 17713                           ;deca_device.c: 1459: {
 17714                           ;deca_device.c: 1460: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x1800U), (0x2<<11) | 0x400
      +                          U);
 17715  0378  3000               	movlw	0
 17716  0379  0141               	movlb	1	; select bank1
 17717  037A  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 17718  037B  300B               	movlw	11
 17719  037C  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 17720  037D  3000               	movlw	0
 17721  037E  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 17722  037F  3008               	movlw	8
 17723  0380  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 17724  0381  3000               	movlw	0
 17725  0382  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 17726  0383  3000               	movlw	0
 17727  0384  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 17728  0385  3000               	movlw	0
 17729  0386  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 17730  0387  3000               	movlw	0
 17731  0388  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 17732  0389  3000               	movlw	0
 17733  038A  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 17734  038B  3000               	movlw	0
 17735  038C  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 17736  038D  30E7               	movlw	231
 17737  038E  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 17738  038F  30FF               	movlw	255
 17739  0390  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 17740  0391  3000               	movlw	0
 17741  0392  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 17742  0393  3000               	movlw	0
 17743  0394  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 17744  0395  3014               	movlw	20
 17745  0396                     L19:	
 17746  0396  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 17747  0397  3000               	movlw	0
 17748  0398  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 17749  0399  3193  239F  3180   	fcall	_dwt_modify32bitoffsetreg
 17750  039C                     l649:	
 17751                           
 17752                           ;deca_device.c: 1461: }
 17753                           ;deca_device.c: 1463: }
 17754                           ;deca_device.c: 1464: dwt_modify8bitoffsetreg(0x60000, 0, (uint8_t) ~0x3U, config->rxPAC
      +                          );
 17755  039C  3000               	movlw	0
 17756  039D  0141               	movlb	1	; select bank1
 17757  039E  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 17758  039F  3006               	movlw	6
 17759  03A0  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 17760  03A1  3000               	movlw	0
 17761  03A2  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 17762  03A3  3000               	movlw	0
 17763  03A4  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 17764  03A5  3000               	movlw	0
 17765  03A6  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 17766  03A7  3000               	movlw	0
 17767  03A8  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 17768  03A9  3000               	movlw	0
 17769  03AA  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 17770  03AB  3000               	movlw	0
 17771  03AC  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 17772  03AD  30FC               	movlw	252
 17773  03AE  00DC               	movwf	??_dwt_configure^(0+128)
 17774  03AF  085C               	movf	??_dwt_configure^(0+128),w
 17775  03B0  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 17776  03B1  0142               	movlb	2	; select bank2
 17777  03B2  0864               	movf	dwt_configure@config^(0+256),w
 17778  03B3  0086               	movwf	6
 17779  03B4  3001               	movlw	1	; select bank2/3
 17780  03B5  0087               	movwf	7
 17781  03B6  3001               	movlw	1	; select bank2/3
 17782  03B7  3F42               	moviw [2]fsr1
 17783  03B8  0141               	movlb	1	; select bank1
 17784  03B9  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 17785  03BA  31A6  2643  3180   	fcall	_dwt_modify8bitoffsetreg
 17786                           
 17787                           ;deca_device.c: 1466: dwt_write8bitoffsetreg(0x20000, 0, sts_len-1);
 17788  03BD  3000               	movlw	0
 17789  03BE  0141               	movlb	1	; select bank1
 17790  03BF  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 17791  03C0  3002               	movlw	2
 17792  03C1  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 17793  03C2  3000               	movlw	0
 17794  03C3  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 17795  03C4  3000               	movlw	0
 17796  03C5  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 17797  03C6  3000               	movlw	0
 17798  03C7  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 17799  03C8  3000               	movlw	0
 17800  03C9  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 17801  03CA  3000               	movlw	0
 17802  03CB  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 17803  03CC  3000               	movlw	0
 17804  03CD  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 17805  03CE  0142               	movlb	2	; select bank2
 17806  03CF  085F               	movf	dwt_configure@sts_len^(0+256),w
 17807  03D0  3EFF               	addlw	255
 17808  03D1  0141               	movlb	1	; select bank1
 17809  03D2  00DC               	movwf	??_dwt_configure^(0+128)
 17810  03D3  085C               	movf	??_dwt_configure^(0+128),w
 17811  03D4  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 17812  03D5  31A2  2226  3180   	fcall	_dwt_write8bitoffsetreg
 17813                           
 17814                           ;deca_device.c: 1468: if (config->txPreambLength == 0x07)
 17815  03D8  0142               	movlb	2	; select bank2
 17816  03D9  0A64               	incf	dwt_configure@config^(0+256),w
 17817  03DA  0086               	movwf	6
 17818  03DB  3001               	movlw	1	; select bank2/3
 17819  03DC  0087               	movwf	7
 17820  03DD  3007               	movlw	7
 17821  03DE  0601               	xorwf	1,w
 17822  03DF  1D03               	btfss	3,2
 17823  03E0  2BE3               	goto	l9582
 17824                           
 17825                           ;deca_device.c: 1469: {
 17826                           ;deca_device.c: 1470: dwt_setplenfine(8);
 17827  03E1  3008               	movlw	8
 17828  03E2  2BE4               	goto	L20
 17829  03E3                     l9582:	
 17830                           ;deca_device.c: 1471: }
 17831                           
 17832                           
 17833                           ;deca_device.c: 1472: else
 17834                           ;deca_device.c: 1473: {
 17835                           ;deca_device.c: 1474: dwt_setplenfine(0);
 17836  03E3  3000               	movlw	0
 17837  03E4                     L20:	
 17838  03E4  31A2  2242  3180   	fcall	_dwt_setplenfine
 17839                           
 17840                           ;deca_device.c: 1475: }
 17841                           ;deca_device.c: 1477: if((config->stsMode & 0x3) == 0x3)
 17842  03E7  0142               	movlb	2	; select bank2
 17843  03E8  0864               	movf	dwt_configure@config^(0+256),w
 17844  03E9  3E0B               	addlw	11
 17845  03EA  0086               	movwf	6
 17846  03EB  3001               	movlw	1	; select bank2/3
 17847  03EC  0087               	movwf	7
 17848  03ED  3003               	movlw	3
 17849  03EE  0501               	andwf	1,w
 17850  03EF  0141               	movlb	1	; select bank1
 17851  03F0  00DC               	movwf	??_dwt_configure^(0+128)
 17852  03F1  3003               	movlw	3
 17853  03F2  065C               	xorwf	??_dwt_configure^(0+128),w
 17854  03F3  1D03               	btfss	3,2
 17855  03F4  2C0D               	goto	l9588
 17856                           
 17857                           ;deca_device.c: 1478: {
 17858                           ;deca_device.c: 1480: dwt_write32bitoffsetreg(0x6000c, 0, 0xAF5F35CC);
 17859  03F5  3000               	movlw	0
 17860  03F6  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17861  03F7  3006               	movlw	6
 17862  03F8  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17863  03F9  3000               	movlw	0
 17864  03FA  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17865  03FB  300C               	movlw	12
 17866  03FC  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17867  03FD  3000               	movlw	0
 17868  03FE  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17869  03FF  3000               	movlw	0
 17870  0400  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17871  0401  3000               	movlw	0
 17872  0402  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17873  0403  3000               	movlw	0
 17874  0404  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17875  0405  30AF               	movlw	175
 17876  0406  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17877  0407  305F               	movlw	95
 17878  0408  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17879  0409  3035               	movlw	53
 17880  040A  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17881  040B  30CC               	movlw	204
 17882  040C  2C25               	goto	L17
 17883  040D                     l9588:	
 17884                           ;deca_device.c: 1481: }
 17885                           
 17886                           
 17887                           ;deca_device.c: 1482: else
 17888                           ;deca_device.c: 1483: {
 17889                           ;deca_device.c: 1485: dwt_write32bitoffsetreg(0x6000c, 0, 0xAF5F584C);
 17890  040D  3000               	movlw	0
 17891  040E  0141               	movlb	1	; select bank1
 17892  040F  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 17893  0410  3006               	movlw	6
 17894  0411  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 17895  0412  3000               	movlw	0
 17896  0413  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 17897  0414  300C               	movlw	12
 17898  0415  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 17899  0416  3000               	movlw	0
 17900  0417  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 17901  0418  3000               	movlw	0
 17902  0419  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 17903  041A  3000               	movlw	0
 17904  041B  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 17905  041C  3000               	movlw	0
 17906  041D  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 17907  041E  30AF               	movlw	175
 17908  041F  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 17909  0420  305F               	movlw	95
 17910  0421  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 17911  0422  3058               	movlw	88
 17912  0423  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 17913  0424  304C               	movlw	76
 17914  0425                     L17:	
 17915  0425  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 17916  0426  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 17917                           
 17918                           ;deca_device.c: 1486: }
 17919                           ;deca_device.c: 1489: temp = dwt_read32bitoffsetreg(0x10014, 0);
 17920  0429  3000               	movlw	0
 17921  042A  0141               	movlb	1	; select bank1
 17922  042B  00AE               	movwf	(dwt_read32bitoffsetreg@regFileID+3)^(0+128)
 17923  042C  3001               	movlw	1
 17924  042D  00AD               	movwf	(dwt_read32bitoffsetreg@regFileID+2)^(0+128)
 17925  042E  3000               	movlw	0
 17926  042F  00AC               	movwf	(dwt_read32bitoffsetreg@regFileID+1)^(0+128)
 17927  0430  3014               	movlw	20
 17928  0431  00AB               	movwf	dwt_read32bitoffsetreg@regFileID^(0+128)
 17929  0432  3000               	movlw	0
 17930  0433  00B2               	movwf	(dwt_read32bitoffsetreg@regOffset+3)^(0+128)
 17931  0434  3000               	movlw	0
 17932  0435  00B1               	movwf	(dwt_read32bitoffsetreg@regOffset+2)^(0+128)
 17933  0436  3000               	movlw	0
 17934  0437  00B0               	movwf	(dwt_read32bitoffsetreg@regOffset+1)^(0+128)
 17935  0438  3000               	movlw	0
 17936  0439  00AF               	movwf	dwt_read32bitoffsetreg@regOffset^(0+128)
 17937  043A  319A  22CF  3180   	fcall	_dwt_read32bitoffsetreg
 17938  043D  0141               	movlb	1	; select bank1
 17939  043E  082E               	movf	(?_dwt_read32bitoffsetreg+3)^(0+128),w
 17940  043F  0142               	movlb	2	; select bank2
 17941  0440  00DD               	movwf	(dwt_configure@temp+3)^(0+256)
 17942  0441  0141               	movlb	1	; select bank1
 17943  0442  082D               	movf	(?_dwt_read32bitoffsetreg+2)^(0+128),w
 17944  0443  0142               	movlb	2	; select bank2
 17945  0444  00DC               	movwf	(dwt_configure@temp+2)^(0+256)
 17946  0445  0141               	movlb	1	; select bank1
 17947  0446  082C               	movf	(?_dwt_read32bitoffsetreg+1)^(0+128),w
 17948  0447  0142               	movlb	2	; select bank2
 17949  0448  00DB               	movwf	(dwt_configure@temp+1)^(0+256)
 17950  0449  0141               	movlb	1	; select bank1
 17951  044A  082B               	movf	?_dwt_read32bitoffsetreg^(0+128),w
 17952  044B  0142               	movlb	2	; select bank2
 17953  044C  00DA               	movwf	dwt_configure@temp^(0+256)
 17954                           
 17955                           ;deca_device.c: 1490: temp &= (~(0x1f00U | 0xf8U | 0x6U | 0x1U));
 17956  044D  3000               	movlw	0
 17957  044E  05DA               	andwf	dwt_configure@temp^(0+256),f
 17958  044F  30E0               	movlw	224
 17959  0450  05DB               	andwf	(dwt_configure@temp+1)^(0+256),f
 17960  0451  3000               	movlw	0
 17961  0452  05DC               	andwf	(dwt_configure@temp+2)^(0+256),f
 17962  0453  3000               	movlw	0
 17963  0454  05DD               	andwf	(dwt_configure@temp+3)^(0+256),f
 17964                           
 17965                           ;deca_device.c: 1492: if (chan == 9) temp |= 0x1U;
 17966  0455  3009               	movlw	9
 17967  0456  0663               	xorwf	dwt_configure@chan^(0+256),w
 17968  0457  1903               	btfsc	3,2
 17969  0458  145A               	bsf	dwt_configure@temp^(0+256),0
 17970                           
 17971                           ;deca_device.c: 1494: temp |= (0x1f00U & ((uint32_t)config->rxCode << (8U)));
 17972  0459  3000               	movlw	0
 17973  045A  0141               	movlb	1	; select bank1
 17974  045B  00DC               	movwf	??_dwt_configure^(0+128)
 17975  045C  301F               	movlw	31
 17976  045D  00DD               	movwf	(??_dwt_configure^(0+128)+1)
 17977  045E  3000               	movlw	0
 17978  045F  00DE               	movwf	(??_dwt_configure^(0+128)+2)
 17979  0460  3000               	movlw	0
 17980  0461  00DF               	movwf	(??_dwt_configure^(0+128)+3)
 17981  0462  0142               	movlb	2	; select bank2
 17982  0463  0864               	movf	dwt_configure@config^(0+256),w
 17983  0464  3E04               	addlw	4
 17984  0465  0086               	movwf	6
 17985  0466  3001               	movlw	1	; select bank2/3
 17986  0467  0087               	movwf	7
 17987  0468  0801               	movf	1,w
 17988  0469  0141               	movlb	1	; select bank1
 17989  046A  00E0               	movwf	(??_dwt_configure+4)^(0+128)
 17990  046B  01E1               	clrf	((??_dwt_configure+4)^(0+128)+1)
 17991  046C  01E2               	clrf	((??_dwt_configure+4)^(0+128)+2)
 17992  046D  01E3               	clrf	((??_dwt_configure+4)^(0+128)+3)
 17993  046E  3008               	movlw	8
 17994  046F                     u10535:	
 17995  046F  35E0               	lslf	(??_dwt_configure+4)^(0+128),f
 17996  0470  0DE1               	rlf	((??_dwt_configure+4)^(0+128)+1),f
 17997  0471  0DE2               	rlf	((??_dwt_configure+4)^(0+128)+2),f
 17998  0472  0DE3               	rlf	((??_dwt_configure+4)^(0+128)+3),f
 17999  0473  0B89               	decfsz	9,f
 18000  0474  2C6F               	goto	u10535
 18001  0475  0860               	movf	(??_dwt_configure+4)^(0+128),w
 18002  0476  05DC               	andwf	??_dwt_configure^(0+128),f
 18003  0477  0861               	movf	(??_dwt_configure+5)^(0+128),w
 18004  0478  05DD               	andwf	(??_dwt_configure^(0+128)+1),f
 18005  0479  0862               	movf	(??_dwt_configure+6)^(0+128),w
 18006  047A  05DE               	andwf	(??_dwt_configure^(0+128)+2),f
 18007  047B  0863               	movf	(??_dwt_configure+7)^(0+128),w
 18008  047C  05DF               	andwf	(??_dwt_configure^(0+128)+3),f
 18009  047D  085C               	movf	??_dwt_configure^(0+128),w
 18010  047E  0142               	movlb	2	; select bank2
 18011  047F  04DA               	iorwf	dwt_configure@temp^(0+256),f
 18012  0480  0141               	movlb	1	; select bank1
 18013  0481  085D               	movf	(??_dwt_configure+1)^(0+128),w
 18014  0482  0142               	movlb	2	; select bank2
 18015  0483  04DB               	iorwf	(dwt_configure@temp+1)^(0+256),f
 18016  0484  0141               	movlb	1	; select bank1
 18017  0485  085E               	movf	(??_dwt_configure+2)^(0+128),w
 18018  0486  0142               	movlb	2	; select bank2
 18019  0487  04DC               	iorwf	(dwt_configure@temp+2)^(0+256),f
 18020  0488  0141               	movlb	1	; select bank1
 18021  0489  085F               	movf	(??_dwt_configure+3)^(0+128),w
 18022  048A  0142               	movlb	2	; select bank2
 18023  048B  04DD               	iorwf	(dwt_configure@temp+3)^(0+256),f
 18024                           
 18025                           ;deca_device.c: 1495: temp |= (0xf8U & ((uint32_t)config->txCode << (3U)));
 18026  048C  0864               	movf	dwt_configure@config^(0+256),w
 18027  048D  3E03               	addlw	3
 18028  048E  0086               	movwf	6
 18029  048F  3001               	movlw	1	; select bank2/3
 18030  0490  0087               	movwf	7
 18031  0491  0801               	movf	1,w
 18032  0492  0141               	movlb	1	; select bank1
 18033  0493  00DC               	movwf	??_dwt_configure^(0+128)
 18034  0494  3002               	movlw	2
 18035  0495                     u10545:	
 18036  0495  35DC               	lslf	??_dwt_configure^(0+128),f
 18037  0496  3EFF               	addlw	-1
 18038  0497  1D03               	skipz
 18039  0498  2C95               	goto	u10545
 18040  0499  355C               	lslf	??_dwt_configure^(0+128),w
 18041  049A  39F8               	andlw	248
 18042  049B  00DD               	movwf	(??_dwt_configure+1)^(0+128)
 18043  049C  01DE               	clrf	((??_dwt_configure+1)^(0+128)+1)
 18044  049D  01DF               	clrf	((??_dwt_configure+1)^(0+128)+2)
 18045  049E  01E0               	clrf	((??_dwt_configure+1)^(0+128)+3)
 18046  049F  085D               	movf	(??_dwt_configure+1)^(0+128),w
 18047  04A0  0142               	movlb	2	; select bank2
 18048  04A1  04DA               	iorwf	dwt_configure@temp^(0+256),f
 18049  04A2  0141               	movlb	1	; select bank1
 18050  04A3  085E               	movf	(??_dwt_configure+2)^(0+128),w
 18051  04A4  0142               	movlb	2	; select bank2
 18052  04A5  04DB               	iorwf	(dwt_configure@temp+1)^(0+256),f
 18053  04A6  0141               	movlb	1	; select bank1
 18054  04A7  085F               	movf	(??_dwt_configure+3)^(0+128),w
 18055  04A8  0142               	movlb	2	; select bank2
 18056  04A9  04DC               	iorwf	(dwt_configure@temp+2)^(0+256),f
 18057  04AA  0141               	movlb	1	; select bank1
 18058  04AB  0860               	movf	(??_dwt_configure+4)^(0+128),w
 18059  04AC  0142               	movlb	2	; select bank2
 18060  04AD  04DD               	iorwf	(dwt_configure@temp+3)^(0+256),f
 18061                           
 18062                           ;deca_device.c: 1496: temp |= (0x6U & ((uint32_t)config->sfdType << (1U)));
 18063  04AE  0864               	movf	dwt_configure@config^(0+256),w
 18064  04AF  3E05               	addlw	5
 18065  04B0  0086               	movwf	6
 18066  04B1  3001               	movlw	1	; select bank2/3
 18067  04B2  0087               	movwf	7
 18068  04B3  3501               	lslf	1,w
 18069  04B4  3906               	andlw	6
 18070  04B5  0141               	movlb	1	; select bank1
 18071  04B6  00DC               	movwf	??_dwt_configure^(0+128)
 18072  04B7  01DD               	clrf	(??_dwt_configure^(0+128)+1)
 18073  04B8  01DE               	clrf	(??_dwt_configure^(0+128)+2)
 18074  04B9  01DF               	clrf	(??_dwt_configure^(0+128)+3)
 18075  04BA  085C               	movf	??_dwt_configure^(0+128),w
 18076  04BB  0142               	movlb	2	; select bank2
 18077  04BC  04DA               	iorwf	dwt_configure@temp^(0+256),f
 18078  04BD  0141               	movlb	1	; select bank1
 18079  04BE  085D               	movf	(??_dwt_configure+1)^(0+128),w
 18080  04BF  0142               	movlb	2	; select bank2
 18081  04C0  04DB               	iorwf	(dwt_configure@temp+1)^(0+256),f
 18082  04C1  0141               	movlb	1	; select bank1
 18083  04C2  085E               	movf	(??_dwt_configure+2)^(0+128),w
 18084  04C3  0142               	movlb	2	; select bank2
 18085  04C4  04DC               	iorwf	(dwt_configure@temp+2)^(0+256),f
 18086  04C5  0141               	movlb	1	; select bank1
 18087  04C6  085F               	movf	(??_dwt_configure+3)^(0+128),w
 18088  04C7  0142               	movlb	2	; select bank2
 18089  04C8  04DD               	iorwf	(dwt_configure@temp+3)^(0+256),f
 18090                           
 18091                           ;deca_device.c: 1498: dwt_write32bitoffsetreg(0x10014, 0, temp);
 18092  04C9  3000               	movlw	0
 18093  04CA  0141               	movlb	1	; select bank1
 18094  04CB  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 18095  04CC  3001               	movlw	1
 18096  04CD  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 18097  04CE  3000               	movlw	0
 18098  04CF  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 18099  04D0  3014               	movlw	20
 18100  04D1  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 18101  04D2  3000               	movlw	0
 18102  04D3  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 18103  04D4  3000               	movlw	0
 18104  04D5  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 18105  04D6  3000               	movlw	0
 18106  04D7  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 18107  04D8  3000               	movlw	0
 18108  04D9  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 18109  04DA  0142               	movlb	2	; select bank2
 18110  04DB  085D               	movf	(dwt_configure@temp+3)^(0+256),w
 18111  04DC  0141               	movlb	1	; select bank1
 18112  04DD  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 18113  04DE  0142               	movlb	2	; select bank2
 18114  04DF  085C               	movf	(dwt_configure@temp+2)^(0+256),w
 18115  04E0  0141               	movlb	1	; select bank1
 18116  04E1  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 18117  04E2  0142               	movlb	2	; select bank2
 18118  04E3  085B               	movf	(dwt_configure@temp+1)^(0+256),w
 18119  04E4  0141               	movlb	1	; select bank1
 18120  04E5  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 18121  04E6  0142               	movlb	2	; select bank2
 18122  04E7  085A               	movf	dwt_configure@temp^(0+256),w
 18123  04E8  0141               	movlb	1	; select bank1
 18124  04E9  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 18125  04EA  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 18126                           
 18127                           ;deca_device.c: 1502: dwt_modify32bitoffsetreg(0x24, 0, ~(0x400U | 0xf000U),
 18128                           ;deca_device.c: 1503: ((uint32_t)config->dataRate << (10U))
 18129                           ;deca_device.c: 1504: | ((uint32_t) config->txPreambLength) << (12U));
 18130  04ED  3000               	movlw	0
 18131  04EE  0141               	movlb	1	; select bank1
 18132  04EF  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 18133  04F0  3000               	movlw	0
 18134  04F1  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 18135  04F2  3000               	movlw	0
 18136  04F3  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 18137  04F4  3024               	movlw	36
 18138  04F5  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 18139  04F6  3000               	movlw	0
 18140  04F7  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 18141  04F8  3000               	movlw	0
 18142  04F9  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 18143  04FA  3000               	movlw	0
 18144  04FB  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 18145  04FC  3000               	movlw	0
 18146  04FD  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 18147  04FE  3000               	movlw	0
 18148  04FF  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 18149  0500  3000               	movlw	0
 18150  0501  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 18151  0502  300B               	movlw	11
 18152  0503  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 18153  0504  30FF               	movlw	255
 18154  0505  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 18155  0506  0142               	movlb	2	; select bank2
 18156  0507  0A64               	incf	dwt_configure@config^(0+256),w
 18157  0508  0086               	movwf	6
 18158  0509  3001               	movlw	1	; select bank2/3
 18159  050A  0087               	movwf	7
 18160  050B  0801               	movf	1,w
 18161  050C  0141               	movlb	1	; select bank1
 18162  050D  00DC               	movwf	??_dwt_configure^(0+128)
 18163  050E  01DD               	clrf	(??_dwt_configure^(0+128)+1)
 18164  050F  01DE               	clrf	(??_dwt_configure^(0+128)+2)
 18165  0510  01DF               	clrf	(??_dwt_configure^(0+128)+3)
 18166  0511  300C               	movlw	12
 18167  0512                     u10555:	
 18168  0512  35DC               	lslf	??_dwt_configure^(0+128),f
 18169  0513  0DDD               	rlf	(??_dwt_configure^(0+128)+1),f
 18170  0514  0DDE               	rlf	(??_dwt_configure^(0+128)+2),f
 18171  0515  0DDF               	rlf	(??_dwt_configure^(0+128)+3),f
 18172  0516  0B89               	decfsz	9,f
 18173  0517  2D12               	goto	u10555
 18174  0518  0142               	movlb	2	; select bank2
 18175  0519  0864               	movf	dwt_configure@config^(0+256),w
 18176  051A  3E06               	addlw	6
 18177  051B  0086               	movwf	6
 18178  051C  3001               	movlw	1	; select bank2/3
 18179  051D  0087               	movwf	7
 18180  051E  0801               	movf	1,w
 18181  051F  0141               	movlb	1	; select bank1
 18182  0520  00E0               	movwf	(??_dwt_configure+4)^(0+128)
 18183  0521  01E1               	clrf	((??_dwt_configure+4)^(0+128)+1)
 18184  0522  01E2               	clrf	((??_dwt_configure+4)^(0+128)+2)
 18185  0523  01E3               	clrf	((??_dwt_configure+4)^(0+128)+3)
 18186  0524  300A               	movlw	10
 18187  0525                     u10565:	
 18188  0525  35E0               	lslf	(??_dwt_configure+4)^(0+128),f
 18189  0526  0DE1               	rlf	((??_dwt_configure+4)^(0+128)+1),f
 18190  0527  0DE2               	rlf	((??_dwt_configure+4)^(0+128)+2),f
 18191  0528  0DE3               	rlf	((??_dwt_configure+4)^(0+128)+3),f
 18192  0529  0B89               	decfsz	9,f
 18193  052A  2D25               	goto	u10565
 18194  052B  085C               	movf	??_dwt_configure^(0+128),w
 18195  052C  0460               	iorwf	(??_dwt_configure+4)^(0+128),w
 18196  052D  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 18197  052E  085D               	movf	(??_dwt_configure+1)^(0+128),w
 18198  052F  0461               	iorwf	(??_dwt_configure+5)^(0+128),w
 18199  0530  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 18200  0531  085E               	movf	(??_dwt_configure+2)^(0+128),w
 18201  0532  0462               	iorwf	(??_dwt_configure+6)^(0+128),w
 18202  0533  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 18203  0534  085F               	movf	(??_dwt_configure+3)^(0+128),w
 18204  0535  0463               	iorwf	(??_dwt_configure+7)^(0+128),w
 18205  0536  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 18206  0537  3193  239F  3180   	fcall	_dwt_modify32bitoffsetreg
 18207                           
 18208                           ;deca_device.c: 1507: if (config->sfdTO == 0)
 18209  053A  0142               	movlb	2	; select bank2
 18210  053B  0864               	movf	dwt_configure@config^(0+256),w
 18211  053C  3E09               	addlw	9
 18212  053D  0086               	movwf	6
 18213  053E  3001               	movlw	1	; select bank2/3
 18214  053F  0087               	movwf	7
 18215  0540  0016               	moviw fsr1++
 18216  0541  0401               	iorwf	1,w
 18217  0542  1D03               	btfss	3,2
 18218  0543  2D4D               	goto	l9604
 18219                           
 18220                           ;deca_device.c: 1508: {
 18221                           ;deca_device.c: 1509: config->sfdTO = 129;
 18222  0544  0864               	movf	dwt_configure@config^(0+256),w
 18223  0545  3E09               	addlw	9
 18224  0546  0086               	movwf	6
 18225  0547  3001               	movlw	1	; select bank2/3
 18226  0548  0087               	movwf	7
 18227  0549  3081               	movlw	129
 18228  054A  3FC0               	movwi [0]fsr1
 18229  054B  3000               	movlw	0
 18230  054C  3FC1               	movwi [1]fsr1
 18231  054D                     l9604:	
 18232                           
 18233                           ;deca_device.c: 1510: }
 18234                           ;deca_device.c: 1511: dwt_write16bitoffsetreg(0x60000, 2, config->sfdTO);
 18235  054D  3000               	movlw	0
 18236  054E  0141               	movlb	1	; select bank1
 18237  054F  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 18238  0550  3006               	movlw	6
 18239  0551  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 18240  0552  3000               	movlw	0
 18241  0553  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 18242  0554  3000               	movlw	0
 18243  0555  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 18244  0556  3000               	movlw	0
 18245  0557  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 18246  0558  3000               	movlw	0
 18247  0559  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 18248  055A  3000               	movlw	0
 18249  055B  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 18250  055C  3002               	movlw	2
 18251  055D  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 18252  055E  0142               	movlb	2	; select bank2
 18253  055F  0864               	movf	dwt_configure@config^(0+256),w
 18254  0560  3E09               	addlw	9
 18255  0561  0086               	movwf	6
 18256  0562  3001               	movlw	1	; select bank2/3
 18257  0563  0087               	movwf	7
 18258  0564  3F40               	moviw [0]fsr1
 18259  0565  0141               	movlb	1	; select bank1
 18260  0566  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 18261  0567  3F41               	moviw [1]fsr1
 18262  0568  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 18263  0569  31A3  23C2  3180   	fcall	_dwt_write16bitoffsetreg
 18264                           
 18265                           ;deca_device.c: 1514: if (chan == 9)
 18266  056C  3009               	movlw	9
 18267  056D  0142               	movlb	2	; select bank2
 18268  056E  0663               	xorwf	dwt_configure@chan^(0+256),w
 18269  056F  1D03               	btfss	3,2
 18270  0570  2DC2               	goto	l9610
 18271                           
 18272                           ;deca_device.c: 1515: {
 18273                           ;deca_device.c: 1517: dwt_write32bitoffsetreg(0x7001c, 0, 0x1C010034UL);
 18274  0571  3000               	movlw	0
 18275  0572  0141               	movlb	1	; select bank1
 18276  0573  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 18277  0574  3007               	movlw	7
 18278  0575  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 18279  0576  3000               	movlw	0
 18280  0577  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 18281  0578  301C               	movlw	28
 18282  0579  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 18283  057A  3000               	movlw	0
 18284  057B  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 18285  057C  3000               	movlw	0
 18286  057D  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 18287  057E  3000               	movlw	0
 18288  057F  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 18289  0580  3000               	movlw	0
 18290  0581  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 18291  0582  301C               	movlw	28
 18292  0583  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 18293  0584  3001               	movlw	1
 18294  0585  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 18295  0586  3000               	movlw	0
 18296  0587  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 18297  0588  3034               	movlw	52
 18298  0589  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 18299  058A  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 18300                           
 18301                           ;deca_device.c: 1518: dwt_write16bitoffsetreg(0x90000, 0, 0x0F3C);
 18302  058D  3000               	movlw	0
 18303  058E  0141               	movlb	1	; select bank1
 18304  058F  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 18305  0590  3009               	movlw	9
 18306  0591  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 18307  0592  3000               	movlw	0
 18308  0593  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 18309  0594  3000               	movlw	0
 18310  0595  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 18311  0596  3000               	movlw	0
 18312  0597  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 18313  0598  3000               	movlw	0
 18314  0599  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 18315  059A  3000               	movlw	0
 18316  059B  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 18317  059C  3000               	movlw	0
 18318  059D  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 18319  059E  303C               	movlw	60
 18320  059F  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 18321  05A0  300F               	movlw	15
 18322  05A1  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 18323  05A2  31A3  23C2  3180   	fcall	_dwt_write16bitoffsetreg
 18324                           
 18325                           ;deca_device.c: 1520: dwt_write32bitoffsetreg(0x70010, 0, 0x08B5A833UL);
 18326  05A5  3000               	movlw	0
 18327  05A6  0141               	movlb	1	; select bank1
 18328  05A7  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 18329  05A8  3007               	movlw	7
 18330  05A9  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 18331  05AA  3000               	movlw	0
 18332  05AB  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 18333  05AC  3010               	movlw	16
 18334  05AD  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 18335  05AE  3000               	movlw	0
 18336  05AF  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 18337  05B0  3000               	movlw	0
 18338  05B1  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 18339  05B2  3000               	movlw	0
 18340  05B3  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 18341  05B4  3000               	movlw	0
 18342  05B5  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 18343  05B6  3008               	movlw	8
 18344  05B7  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 18345  05B8  30B5               	movlw	181
 18346  05B9  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 18347  05BA  30A8               	movlw	168
 18348  05BB  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 18349  05BC  3033               	movlw	51
 18350  05BD  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 18351  05BE  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 18352                           
 18353                           ;deca_device.c: 1521: }
 18354  05C1  2DF6               	goto	l664
 18355  05C2                     l9610:	
 18356                           
 18357                           ;deca_device.c: 1522: else
 18358                           ;deca_device.c: 1523: {
 18359                           ;deca_device.c: 1525: dwt_write32bitoffsetreg(0x7001c, 0, 0x1C071134UL);
 18360  05C2  3000               	movlw	0
 18361  05C3  0141               	movlb	1	; select bank1
 18362  05C4  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 18363  05C5  3007               	movlw	7
 18364  05C6  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 18365  05C7  3000               	movlw	0
 18366  05C8  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 18367  05C9  301C               	movlw	28
 18368  05CA  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 18369  05CB  3000               	movlw	0
 18370  05CC  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 18371  05CD  3000               	movlw	0
 18372  05CE  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 18373  05CF  3000               	movlw	0
 18374  05D0  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 18375  05D1  3000               	movlw	0
 18376  05D2  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 18377  05D3  301C               	movlw	28
 18378  05D4  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 18379  05D5  3007               	movlw	7
 18380  05D6  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 18381  05D7  3011               	movlw	17
 18382  05D8  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 18383  05D9  3034               	movlw	52
 18384  05DA  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 18385  05DB  3198  20B7  3180   	fcall	_dwt_write32bitoffsetreg
 18386                           
 18387                           ;deca_device.c: 1526: dwt_write16bitoffsetreg(0x90000, 0, 0x1F3C);
 18388  05DE  3000               	movlw	0
 18389  05DF  0141               	movlb	1	; select bank1
 18390  05E0  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 18391  05E1  3009               	movlw	9
 18392  05E2  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 18393  05E3  3000               	movlw	0
 18394  05E4  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 18395  05E5  3000               	movlw	0
 18396  05E6  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 18397  05E7  3000               	movlw	0
 18398  05E8  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 18399  05E9  3000               	movlw	0
 18400  05EA  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 18401  05EB  3000               	movlw	0
 18402  05EC  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 18403  05ED  3000               	movlw	0
 18404  05EE  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 18405  05EF  303C               	movlw	60
 18406  05F0  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 18407  05F1  301F               	movlw	31
 18408  05F2  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 18409  05F3  31A3  23C2  3180   	fcall	_dwt_write16bitoffsetreg
 18410  05F6                     l664:	
 18411                           
 18412                           ;deca_device.c: 1527: }
 18413                           ;deca_device.c: 1529: dwt_write8bitoffsetreg(0x70050, 1, 0x14);
 18414  05F6  3000               	movlw	0
 18415  05F7  0141               	movlb	1	; select bank1
 18416  05F8  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 18417  05F9  3007               	movlw	7
 18418  05FA  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 18419  05FB  3000               	movlw	0
 18420  05FC  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 18421  05FD  3050               	movlw	80
 18422  05FE  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 18423  05FF  3000               	movlw	0
 18424  0600  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 18425  0601  3000               	movlw	0
 18426  0602  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 18427  0603  3000               	movlw	0
 18428  0604  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 18429  0605  3001               	movlw	1
 18430  0606  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 18431  0607  3014               	movlw	20
 18432  0608  00DC               	movwf	??_dwt_configure^(0+128)
 18433  0609  085C               	movf	??_dwt_configure^(0+128),w
 18434  060A  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 18435  060B  31A2  2226  3180   	fcall	_dwt_write8bitoffsetreg
 18436                           
 18437                           ;deca_device.c: 1530: dwt_write8bitoffsetreg(0x70018, 2, 0x0E);
 18438  060E  3000               	movlw	0
 18439  060F  0141               	movlb	1	; select bank1
 18440  0610  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 18441  0611  3007               	movlw	7
 18442  0612  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 18443  0613  3000               	movlw	0
 18444  0614  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 18445  0615  3018               	movlw	24
 18446  0616  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 18447  0617  3000               	movlw	0
 18448  0618  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 18449  0619  3000               	movlw	0
 18450  061A  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 18451  061B  3000               	movlw	0
 18452  061C  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 18453  061D  3002               	movlw	2
 18454  061E  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 18455  061F  300E               	movlw	14
 18456  0620  00DC               	movwf	??_dwt_configure^(0+128)
 18457  0621  085C               	movf	??_dwt_configure^(0+128),w
 18458  0622  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 18459  0623  31A2  2226  3180   	fcall	_dwt_write8bitoffsetreg
 18460                           
 18461                           ;deca_device.c: 1531: dwt_write8bitoffsetreg(0x90008, 0, 0x81);
 18462  0626  3000               	movlw	0
 18463  0627  0141               	movlb	1	; select bank1
 18464  0628  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 18465  0629  3009               	movlw	9
 18466  062A  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 18467  062B  3000               	movlw	0
 18468  062C  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 18469  062D  3008               	movlw	8
 18470  062E  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 18471  062F  3000               	movlw	0
 18472  0630  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 18473  0631  3000               	movlw	0
 18474  0632  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 18475  0633  3000               	movlw	0
 18476  0634  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 18477  0635  3000               	movlw	0
 18478  0636  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 18479  0637  3081               	movlw	129
 18480  0638  00DC               	movwf	??_dwt_configure^(0+128)
 18481  0639  085C               	movf	??_dwt_configure^(0+128),w
 18482  063A  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 18483  063B  31A2  2226  3180   	fcall	_dwt_write8bitoffsetreg
 18484                           
 18485                           ;deca_device.c: 1534: dwt_write8bitoffsetreg(0x44, 0, 0x2U);
 18486  063E  3000               	movlw	0
 18487  063F  0141               	movlb	1	; select bank1
 18488  0640  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 18489  0641  3000               	movlw	0
 18490  0642  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 18491  0643  3000               	movlw	0
 18492  0644  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 18493  0645  3044               	movlw	68
 18494  0646  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 18495  0647  3000               	movlw	0
 18496  0648  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 18497  0649  3000               	movlw	0
 18498  064A  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 18499  064B  3000               	movlw	0
 18500  064C  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 18501  064D  3000               	movlw	0
 18502  064E  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 18503  064F  3002               	movlw	2
 18504  0650  00DC               	movwf	??_dwt_configure^(0+128)
 18505  0651  085C               	movf	??_dwt_configure^(0+128),w
 18506  0652  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 18507  0653  31A2  2226  3180   	fcall	_dwt_write8bitoffsetreg
 18508                           
 18509                           ;deca_device.c: 1537: dwt_setdwstate(0x1);
 18510  0656  3001               	movlw	1
 18511  0657  0141               	movlb	1	; select bank1
 18512  0658  00B8               	movwf	dwt_setdwstate@state^(0+128)
 18513  0659  3000               	movlw	0
 18514  065A  00B9               	movwf	(dwt_setdwstate@state^(0+128)+1)
 18515  065B  3187  271A  3180   	fcall	_dwt_setdwstate
 18516                           
 18517                           ;deca_device.c: 1539: for (flag=1,cnt=0;cnt<(6);cnt++)
 18518  065E  0142               	movlb	2	; select bank2
 18519  065F  01D8               	clrf	dwt_configure@flag^(0+256)
 18520  0660  0AD8               	incf	dwt_configure@flag^(0+256),f
 18521  0661  01DE               	clrf	dwt_configure@cnt^(0+256)
 18522  0662  3006               	movlw	6
 18523  0663  025E               	subwf	dwt_configure@cnt^(0+256),w
 18524  0664  1803               	btfsc	3,0
 18525  0665  2E95               	goto	l9630
 18526  0666                     l9620:	
 18527                           
 18528                           ;deca_device.c: 1540: {
 18529                           ;deca_device.c: 1541: Sleep(1);
 18530  0666  3000               	movlw	0
 18531  0667  00F4               	movwf	Sleep@time+3
 18532  0668  3000               	movlw	0
 18533  0669  00F3               	movwf	Sleep@time+2
 18534  066A  3000               	movlw	0
 18535  066B  00F2               	movwf	Sleep@time+1
 18536  066C  3001               	movlw	1
 18537  066D  00F1               	movwf	Sleep@time
 18538  066E  31A4  2412  3180   	fcall	_Sleep
 18539                           
 18540                           ;deca_device.c: 1542: if ((dwt_read8bitoffsetreg(0x44, 0) & 0x2U))
 18541  0671  3000               	movlw	0
 18542  0672  0141               	movlb	1	; select bank1
 18543  0673  00A3               	movwf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128)
 18544  0674  3000               	movlw	0
 18545  0675  00A2               	movwf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128)
 18546  0676  3000               	movlw	0
 18547  0677  00A1               	movwf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128)
 18548  0678  3044               	movlw	68
 18549  0679  00A0               	movwf	dwt_read8bitoffsetreg@regFileID^(0+128)
 18550  067A  3000               	movlw	0
 18551  067B  00A7               	movwf	(dwt_read8bitoffsetreg@regOffset+3)^(0+128)
 18552  067C  3000               	movlw	0
 18553  067D  00A6               	movwf	(dwt_read8bitoffsetreg@regOffset+2)^(0+128)
 18554  067E  3000               	movlw	0
 18555  067F  00A5               	movwf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128)
 18556  0680  3000               	movlw	0
 18557  0681  00A4               	movwf	dwt_read8bitoffsetreg@regOffset^(0+128)
 18558  0682  31A4  2490  3180   	fcall	_dwt_read8bitoffsetreg
 18559  0685  3902               	andlw	2
 18560  0686  1903               	btfsc	3,2
 18561  0687  2E8B               	goto	l9626
 18562                           
 18563                           ;deca_device.c: 1543: {
 18564                           ;deca_device.c: 1544: flag=0;
 18565  0688  0142               	movlb	2	; select bank2
 18566  0689  01D8               	clrf	dwt_configure@flag^(0+256)
 18567                           
 18568                           ;deca_device.c: 1545: break;
 18569  068A  2E95               	goto	l9630
 18570  068B                     l9626:	
 18571  068B  3001               	movlw	1
 18572  068C  0141               	movlb	1	; select bank1
 18573  068D  00DC               	movwf	??_dwt_configure^(0+128)
 18574  068E  085C               	movf	??_dwt_configure^(0+128),w
 18575  068F  0142               	movlb	2	; select bank2
 18576  0690  07DE               	addwf	dwt_configure@cnt^(0+256),f
 18577  0691  3006               	movlw	6
 18578  0692  025E               	subwf	dwt_configure@cnt^(0+256),w
 18579  0693  1C03               	skipc
 18580  0694  2E66               	goto	l9620
 18581  0695                     l9630:	
 18582                           
 18583                           ;deca_device.c: 1546: }
 18584                           ;deca_device.c: 1547: }
 18585                           ;deca_device.c: 1548: if (flag)
 18586  0695  0858               	movf	dwt_configure@flag^(0+256),w
 18587  0696  1903               	btfsc	3,2
 18588  0697  2E9E               	goto	l9636
 18589                           
 18590                           ;deca_device.c: 1549: {
 18591                           ;deca_device.c: 1550: return (-1);
 18592  0698  30FF               	movlw	255
 18593  0699  0141               	movlb	1	; select bank1
 18594  069A  00DA               	movwf	?_dwt_configure^(0+128)
 18595  069B  30FF               	movlw	255
 18596  069C  00DB               	movwf	(?_dwt_configure^(0+128)+1)
 18597  069D  0008               	return
 18598  069E                     l9636:	
 18599                           
 18600                           ;deca_device.c: 1551: }
 18601                           ;deca_device.c: 1553: if ((config->rxCode >= 9) && (config->rxCode <= 24))
 18602  069E  0142               	movlb	2	; select bank2
 18603  069F  0864               	movf	dwt_configure@config^(0+256),w
 18604  06A0  3E04               	addlw	4
 18605  06A1  0086               	movwf	6
 18606  06A2  3001               	movlw	1	; select bank2/3
 18607  06A3  0087               	movwf	7
 18608  06A4  3009               	movlw	9
 18609  06A5  0201               	subwf	1,w
 18610  06A6  1C03               	skipc
 18611  06A7  2EEA               	goto	l9646
 18612  06A8  0864               	movf	dwt_configure@config^(0+256),w
 18613  06A9  3E04               	addlw	4
 18614  06AA  0086               	movwf	6
 18615  06AB  3001               	movlw	1	; select bank2/3
 18616  06AC  0087               	movwf	7
 18617  06AD  3019               	movlw	25
 18618  06AE  0201               	subwf	1,w
 18619  06AF  1803               	skipnc
 18620  06B0  2EEA               	goto	l9646
 18621                           
 18622                           ;deca_device.c: 1554: {
 18623                           ;deca_device.c: 1557: if (pdw3000local->dgc_otp_set == DWT_DGC_LOAD_FROM_OTP)
 18624  06B1  087C               	movf	_pdw3000local,w
 18625  06B2  3E09               	addlw	9
 18626  06B3  0086               	movwf	6
 18627  06B4  3002               	movlw	2	; select bank4/5
 18628  06B5  0087               	movwf	7
 18629  06B6  0301               	decf	1,w
 18630  06B7  1D03               	btfss	3,2
 18631  06B8  2EBE               	goto	l9644
 18632                           
 18633                           ;deca_device.c: 1558: {
 18634                           ;deca_device.c: 1559: _dwt_kick_dgc_on_wakeup(chan);
 18635  06B9  0863               	movf	dwt_configure@chan^(0+256),w
 18636  06BA  31A7  27AF  3180   	fcall	__dwt_kick_dgc_on_wakeup
 18637                           
 18638                           ;deca_device.c: 1560: }
 18639  06BD  2ECD               	goto	l672
 18640  06BE                     l9644:	
 18641                           
 18642                           ;deca_device.c: 1562: else
 18643                           ;deca_device.c: 1563: {
 18644                           ;deca_device.c: 1564: dwt_configmrxlut(chan);
 18645  06BE  0142               	movlb	2	; select bank2
 18646  06BF  0863               	movf	dwt_configure@chan^(0+256),w
 18647  06C0  0141               	movlb	1	; select bank1
 18648  06C1  00DC               	movwf	??_dwt_configure^(0+128)
 18649  06C2  01DD               	clrf	(??_dwt_configure^(0+128)+1)
 18650  06C3  085C               	movf	??_dwt_configure^(0+128),w
 18651  06C4  0140               	movlb	0	; select bank0
 18652  06C5  00EC               	movwf	dwt_configmrxlut@channel
 18653  06C6  0141               	movlb	1	; select bank1
 18654  06C7  085D               	movf	(??_dwt_configure+1)^(0+128),w
 18655  06C8  0140               	movlb	0	; select bank0
 18656  06C9  00ED               	movwf	dwt_configmrxlut@channel+1
 18657  06CA  3196  2684  3180   	fcall	_dwt_configmrxlut
 18658  06CD                     l672:	
 18659                           
 18660                           ;deca_device.c: 1565: }
 18661                           ;deca_device.c: 1566: dwt_modify16bitoffsetreg(0x30018, 0x0, (uint16_t)~0x7e00U, 0x32 <<
      +                           (9U));
 18662  06CD  3000               	movlw	0
 18663  06CE  0141               	movlb	1	; select bank1
 18664  06CF  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 18665  06D0  3003               	movlw	3
 18666  06D1  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 18667  06D2  3000               	movlw	0
 18668  06D3  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 18669  06D4  3018               	movlw	24
 18670  06D5  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 18671  06D6  3000               	movlw	0
 18672  06D7  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 18673  06D8  3000               	movlw	0
 18674  06D9  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 18675  06DA  3000               	movlw	0
 18676  06DB  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 18677  06DC  3000               	movlw	0
 18678  06DD  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 18679  06DE  30FF               	movlw	255
 18680  06DF  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 18681  06E0  3081               	movlw	129
 18682  06E1  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 18683  06E2  3000               	movlw	0
 18684  06E3  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 18685  06E4  3064               	movlw	100
 18686  06E5  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 18687  06E6  31A7  276C  3180   	fcall	_dwt_modify16bitoffsetreg
 18688                           
 18689                           ;deca_device.c: 1567: }
 18690  06E9  2F03               	goto	l673
 18691  06EA                     l9646:	
 18692                           
 18693                           ;deca_device.c: 1568: else
 18694                           ;deca_device.c: 1569: {
 18695                           ;deca_device.c: 1570: dwt_modify8bitoffsetreg(0x30018, 0x0, (uint8_t)~0x1U, 0);
 18696  06EA  3000               	movlw	0
 18697  06EB  0141               	movlb	1	; select bank1
 18698  06EC  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 18699  06ED  3003               	movlw	3
 18700  06EE  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 18701  06EF  3000               	movlw	0
 18702  06F0  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 18703  06F1  3018               	movlw	24
 18704  06F2  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 18705  06F3  3000               	movlw	0
 18706  06F4  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 18707  06F5  3000               	movlw	0
 18708  06F6  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 18709  06F7  3000               	movlw	0
 18710  06F8  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 18711  06F9  3000               	movlw	0
 18712  06FA  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 18713  06FB  30FE               	movlw	254
 18714  06FC  00DC               	movwf	??_dwt_configure^(0+128)
 18715  06FD  085C               	movf	??_dwt_configure^(0+128),w
 18716  06FE  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 18717  06FF  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 18718  0700  31A6  2643  3180   	fcall	_dwt_modify8bitoffsetreg
 18719  0703                     l673:	
 18720                           
 18721                           ;deca_device.c: 1571: }
 18722                           ;deca_device.c: 1575: error = dwt_pgf_cal(1);
 18723  0703  3001               	movlw	1
 18724  0704  0141               	movlb	1	; select bank1
 18725  0705  00D3               	movwf	dwt_pgf_cal@ldoen^(0+128)
 18726  0706  3000               	movlw	0
 18727  0707  00D4               	movwf	(dwt_pgf_cal@ldoen^(0+128)+1)
 18728  0708  319B  2331         	fcall	_dwt_pgf_cal
 18729  070A  0141               	movlb	1	; select bank1
 18730  070B  0854               	movf	(?_dwt_pgf_cal+1)^(0+128),w
 18731  070C  0142               	movlb	2	; select bank2
 18732  070D  00D5               	movwf	(dwt_configure@error+1)^(0+256)
 18733  070E  0141               	movlb	1	; select bank1
 18734  070F  0853               	movf	?_dwt_pgf_cal^(0+128),w
 18735  0710  0142               	movlb	2	; select bank2
 18736  0711  00D4               	movwf	dwt_configure@error^(0+256)
 18737                           
 18738                           ;deca_device.c: 1578: return error;
 18739  0712  0855               	movf	(dwt_configure@error+1)^(0+256),w
 18740  0713  0141               	movlb	1	; select bank1
 18741  0714  00DB               	movwf	(?_dwt_configure+1)^(0+128)
 18742  0715  0142               	movlb	2	; select bank2
 18743  0716  0854               	movf	dwt_configure@error^(0+256),w
 18744  0717  0141               	movlb	1	; select bank1
 18745  0718  00DA               	movwf	?_dwt_configure^(0+128)
 18746  0719  0008               	return
 18747  071A                     __end_of_dwt_configure:	
 18748                           
 18749                           	psect	text43
 18750  1BF8                     __ptext43:	
 18751 ;; *************** function _get_sts_mnth *****************
 18752 ;; Defined at:
 18753 ;;		line 1174 in file "deca_device.c"
 18754 ;; Parameters:    Size  Location     Type
 18755 ;;  cipher          2    4[BANK0 ] unsigned int 
 18756 ;;  threshold       1    6[BANK0 ] unsigned char 
 18757 ;;  shift_val       1    7[BANK0 ] unsigned char 
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;  value           4   14[BANK0 ] unsigned long 
 18760 ;;  mod_val         2   12[BANK0 ] unsigned int 
 18761 ;; Return value:  Size  Location     Type
 18762 ;;                  2    4[BANK0 ] unsigned int 
 18763 ;; Registers used:
 18764 ;;		wreg, status,2, status,0, pclath, cstack
 18765 ;; Tracked objects:
 18766 ;;		On entry : 0/0
 18767 ;;		On exit  : 0/0
 18768 ;;		Unchanged: 0/0
 18769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18770 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18771 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18772 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18773 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18774 ;;Total ram usage:       14 bytes
 18775 ;; Hardware stack levels used:    1
 18776 ;; Hardware stack levels required when called:    3
 18777 ;; This function calls:
 18778 ;;		___lmul
 18779 ;; This function is called by:
 18780 ;;		_dwt_configure
 18781 ;; This function uses a non-reentrant model
 18782 ;;
 18783                           
 18784                           
 18785                           ;psect for function _get_sts_mnth
 18786  1BF8                     _get_sts_mnth:	
 18787                           
 18788                           ;deca_device.c: 1176: uint32_t value;
 18789                           ;deca_device.c: 1177: uint16_t mod_val;
 18790                           ;deca_device.c: 1179: value = cipher* (uint32_t)threshold;
 18791                           
 18792                           ;incstack = 0
 18793                           ; Regs used in _get_sts_mnth: [wreg+status,2+status,0+pclath+cstack]
 18794  1BF8  0140               	movlb	0	; select bank0
 18795  1BF9  0824               	movf	get_sts_mnth@cipher,w
 18796  1BFA  00F1               	movwf	___lmul@multiplier
 18797  1BFB  0825               	movf	get_sts_mnth@cipher+1,w
 18798  1BFC  00F2               	movwf	___lmul@multiplier+1
 18799  1BFD  01F3               	clrf	___lmul@multiplier+2
 18800  1BFE  01F4               	clrf	___lmul@multiplier+3
 18801  1BFF  0826               	movf	get_sts_mnth@threshold,w
 18802  1C00  00A8               	movwf	??_get_sts_mnth
 18803  1C01  01A9               	clrf	??_get_sts_mnth+1
 18804  1C02  01AA               	clrf	??_get_sts_mnth+2
 18805  1C03  01AB               	clrf	??_get_sts_mnth+3
 18806  1C04  082B               	movf	??_get_sts_mnth+3,w
 18807  1C05  00F8               	movwf	___lmul@multiplicand+3
 18808  1C06  082A               	movf	??_get_sts_mnth+2,w
 18809  1C07  00F7               	movwf	___lmul@multiplicand+2
 18810  1C08  0829               	movf	??_get_sts_mnth+1,w
 18811  1C09  00F6               	movwf	___lmul@multiplicand+1
 18812  1C0A  0828               	movf	??_get_sts_mnth,w
 18813  1C0B  00F5               	movwf	___lmul@multiplicand
 18814  1C0C  31A5  2572  319B   	fcall	___lmul
 18815  1C0F  0874               	movf	?___lmul+3,w
 18816  1C10  0140               	movlb	0	; select bank0
 18817  1C11  00B1               	movwf	get_sts_mnth@value+3
 18818  1C12  0873               	movf	?___lmul+2,w
 18819  1C13  00B0               	movwf	get_sts_mnth@value+2
 18820  1C14  0872               	movf	?___lmul+1,w
 18821  1C15  00AF               	movwf	get_sts_mnth@value+1
 18822  1C16  0871               	movf	?___lmul,w
 18823  1C17  00AE               	movwf	get_sts_mnth@value
 18824                           
 18825                           ;deca_device.c: 1180: if (shift_val == 3)
 18826  1C18  3003               	movlw	3
 18827  1C19  0627               	xorwf	get_sts_mnth@shift_val,w
 18828  1C1A  1D03               	btfss	3,2
 18829  1C1B  2C3F               	goto	l9080
 18830                           
 18831                           ;deca_device.c: 1181: {
 18832                           ;deca_device.c: 1182: value *= 181;
 18833  1C1C  3000               	movlw	0
 18834  1C1D  00F4               	movwf	___lmul@multiplier+3
 18835  1C1E  3000               	movlw	0
 18836  1C1F  00F3               	movwf	___lmul@multiplier+2
 18837  1C20  3000               	movlw	0
 18838  1C21  00F2               	movwf	___lmul@multiplier+1
 18839  1C22  30B5               	movlw	181
 18840  1C23  00F1               	movwf	___lmul@multiplier
 18841  1C24  0831               	movf	get_sts_mnth@value+3,w
 18842  1C25  00F8               	movwf	___lmul@multiplicand+3
 18843  1C26  0830               	movf	get_sts_mnth@value+2,w
 18844  1C27  00F7               	movwf	___lmul@multiplicand+2
 18845  1C28  082F               	movf	get_sts_mnth@value+1,w
 18846  1C29  00F6               	movwf	___lmul@multiplicand+1
 18847  1C2A  082E               	movf	get_sts_mnth@value,w
 18848  1C2B  00F5               	movwf	___lmul@multiplicand
 18849  1C2C  31A5  2572  319B   	fcall	___lmul
 18850  1C2F  0874               	movf	?___lmul+3,w
 18851  1C30  0140               	movlb	0	; select bank0
 18852  1C31  00B1               	movwf	get_sts_mnth@value+3
 18853  1C32  0873               	movf	?___lmul+2,w
 18854  1C33  00B0               	movwf	get_sts_mnth@value+2
 18855  1C34  0872               	movf	?___lmul+1,w
 18856  1C35  00AF               	movwf	get_sts_mnth@value+1
 18857  1C36  0871               	movf	?___lmul,w
 18858  1C37  00AE               	movwf	get_sts_mnth@value
 18859                           
 18860                           ;deca_device.c: 1183: value >>= 7;
 18861  1C38  3007               	movlw	7
 18862  1C39                     u9915:	
 18863  1C39  36B1               	lsrf	get_sts_mnth@value+3,f
 18864  1C3A  0CB0               	rrf	get_sts_mnth@value+2,f
 18865  1C3B  0CAF               	rrf	get_sts_mnth@value+1,f
 18866  1C3C  0CAE               	rrf	get_sts_mnth@value,f
 18867  1C3D  0B89               	decfsz	9,f
 18868  1C3E  2C39               	goto	u9915
 18869  1C3F                     l9080:	
 18870                           
 18871                           ;deca_device.c: 1184: }
 18872                           ;deca_device.c: 1186: mod_val = value % 2048+ (2048>>1);
 18873  1C3F  30FF               	movlw	255
 18874  1C40  052E               	andwf	get_sts_mnth@value,w
 18875  1C41  00A8               	movwf	??_get_sts_mnth
 18876  1C42  3007               	movlw	7
 18877  1C43  052F               	andwf	get_sts_mnth@value+1,w
 18878  1C44  00A9               	movwf	??_get_sts_mnth+1
 18879  1C45  0828               	movf	??_get_sts_mnth,w
 18880  1C46  3E00               	addlw	0
 18881  1C47  00AC               	movwf	get_sts_mnth@mod_val
 18882  1C48  3004               	movlw	4
 18883  1C49  3D29               	addwfc	??_get_sts_mnth+1,w
 18884  1C4A  00AD               	movwf	get_sts_mnth@mod_val+1
 18885                           
 18886                           ;deca_device.c: 1187: value >>= 11;
 18887  1C4B  300B               	movlw	11
 18888  1C4C                     u9925:	
 18889  1C4C  36B1               	lsrf	get_sts_mnth@value+3,f
 18890  1C4D  0CB0               	rrf	get_sts_mnth@value+2,f
 18891  1C4E  0CAF               	rrf	get_sts_mnth@value+1,f
 18892  1C4F  0CAE               	rrf	get_sts_mnth@value,f
 18893  1C50  0B89               	decfsz	9,f
 18894  1C51  2C4C               	goto	u9925
 18895                           
 18896                           ;deca_device.c: 1189: if (mod_val >= 2048)
 18897  1C52  3008               	movlw	8
 18898  1C53  022D               	subwf	get_sts_mnth@mod_val+1,w
 18899  1C54  3000               	movlw	0
 18900  1C55  1903               	skipnz
 18901  1C56  022C               	subwf	get_sts_mnth@mod_val,w
 18902  1C57  1C03               	skipc
 18903  1C58  2C61               	goto	l608
 18904                           
 18905                           ;deca_device.c: 1190: value += 1;
 18906  1C59  3001               	movlw	1
 18907  1C5A  07AE               	addwf	get_sts_mnth@value,f
 18908  1C5B  3000               	movlw	0
 18909  1C5C  3DAF               	addwfc	get_sts_mnth@value+1,f
 18910  1C5D  3000               	movlw	0
 18911  1C5E  3DB0               	addwfc	get_sts_mnth@value+2,f
 18912  1C5F  3000               	movlw	0
 18913  1C60  3DB1               	addwfc	get_sts_mnth@value+3,f
 18914  1C61                     l608:	
 18915                           
 18916                           ;deca_device.c: 1192: return (uint16_t)value;
 18917  1C61  082F               	movf	get_sts_mnth@value+1,w
 18918  1C62  00A5               	movwf	?_get_sts_mnth+1
 18919  1C63  082E               	movf	get_sts_mnth@value,w
 18920  1C64  00A4               	movwf	?_get_sts_mnth
 18921  1C65  0008               	return
 18922  1C66                     __end_of_get_sts_mnth:	
 18923                           
 18924                           	psect	text44
 18925  2572                     __ptext44:	
 18926 ;; *************** function ___lmul *****************
 18927 ;; Defined at:
 18928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 18929 ;; Parameters:    Size  Location     Type
 18930 ;;  multiplier      4    1[COMMON] unsigned long 
 18931 ;;  multiplicand    4    5[COMMON] unsigned long 
 18932 ;; Auto vars:     Size  Location     Type
 18933 ;;  product         4    0[BANK0 ] unsigned long 
 18934 ;; Return value:  Size  Location     Type
 18935 ;;                  4    1[COMMON] unsigned long 
 18936 ;; Registers used:
 18937 ;;		wreg, status,2, status,0
 18938 ;; Tracked objects:
 18939 ;;		On entry : 0/0
 18940 ;;		On exit  : 0/0
 18941 ;;		Unchanged: 0/0
 18942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18943 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18944 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18946 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18947 ;;Total ram usage:       12 bytes
 18948 ;; Hardware stack levels used:    1
 18949 ;; Hardware stack levels required when called:    2
 18950 ;; This function calls:
 18951 ;;		Nothing
 18952 ;; This function is called by:
 18953 ;;		_get_sts_mnth
 18954 ;; This function uses a non-reentrant model
 18955 ;;
 18956                           
 18957                           
 18958                           ;psect for function ___lmul
 18959  2572                     ___lmul:	
 18960                           
 18961                           ;incstack = 0
 18962                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 18963  2572  3000               	movlw	0
 18964  2573  0140               	movlb	0	; select bank0
 18965  2574  00A3               	movwf	___lmul@product+3
 18966  2575  3000               	movlw	0
 18967  2576  00A2               	movwf	___lmul@product+2
 18968  2577  3000               	movlw	0
 18969  2578  00A1               	movwf	___lmul@product+1
 18970  2579  3000               	movlw	0
 18971  257A  00A0               	movwf	___lmul@product
 18972  257B                     l8960:	
 18973  257B  1C71               	btfss	___lmul@multiplier,0
 18974  257C  2D86               	goto	l8964
 18975  257D  0875               	movf	___lmul@multiplicand,w
 18976  257E  0140               	movlb	0	; select bank0
 18977  257F  07A0               	addwf	___lmul@product,f
 18978  2580  0876               	movf	___lmul@multiplicand+1,w
 18979  2581  3DA1               	addwfc	___lmul@product+1,f
 18980  2582  0877               	movf	___lmul@multiplicand+2,w
 18981  2583  3DA2               	addwfc	___lmul@product+2,f
 18982  2584  0878               	movf	___lmul@multiplicand+3,w
 18983  2585  3DA3               	addwfc	___lmul@product+3,f
 18984  2586                     l8964:	
 18985  2586  3001               	movlw	1
 18986  2587                     u9645:	
 18987  2587  35F5               	lslf	___lmul@multiplicand,f
 18988  2588  0DF6               	rlf	___lmul@multiplicand+1,f
 18989  2589  0DF7               	rlf	___lmul@multiplicand+2,f
 18990  258A  0DF8               	rlf	___lmul@multiplicand+3,f
 18991  258B  0B89               	decfsz	9,f
 18992  258C  2D87               	goto	u9645
 18993  258D  3001               	movlw	1
 18994  258E                     u9655:	
 18995  258E  36F4               	lsrf	___lmul@multiplier+3,f
 18996  258F  0CF3               	rrf	___lmul@multiplier+2,f
 18997  2590  0CF2               	rrf	___lmul@multiplier+1,f
 18998  2591  0CF1               	rrf	___lmul@multiplier,f
 18999  2592  0B89               	decfsz	9,f
 19000  2593  2D8E               	goto	u9655
 19001  2594  0874               	movf	___lmul@multiplier+3,w
 19002  2595  0473               	iorwf	___lmul@multiplier+2,w
 19003  2596  0472               	iorwf	___lmul@multiplier+1,w
 19004  2597  0471               	iorwf	___lmul@multiplier,w
 19005  2598  1D03               	skipz
 19006  2599  2D7B               	goto	l8960
 19007  259A  0140               	movlb	0	; select bank0
 19008  259B  0823               	movf	___lmul@product+3,w
 19009  259C  00F4               	movwf	?___lmul+3
 19010  259D  0822               	movf	___lmul@product+2,w
 19011  259E  00F3               	movwf	?___lmul+2
 19012  259F  0821               	movf	___lmul@product+1,w
 19013  25A0  00F2               	movwf	?___lmul+1
 19014  25A1  0820               	movf	___lmul@product,w
 19015  25A2  00F1               	movwf	?___lmul
 19016  25A3  0008               	return
 19017  25A4                     __end_of___lmul:	
 19018                           
 19019                           	psect	text45
 19020  2242                     __ptext45:	
 19021 ;; *************** function _dwt_setplenfine *****************
 19022 ;; Defined at:
 19023 ;;		line 1811 in file "deca_device.c"
 19024 ;; Parameters:    Size  Location     Type
 19025 ;;  preambleLeng    1    wreg     unsigned char 
 19026 ;; Auto vars:     Size  Location     Type
 19027 ;;  preambleLeng    1   76[BANK0 ] unsigned char 
 19028 ;; Return value:  Size  Location     Type
 19029 ;;                  1    wreg      void 
 19030 ;; Registers used:
 19031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19032 ;; Tracked objects:
 19033 ;;		On entry : 0/0
 19034 ;;		On exit  : 0/0
 19035 ;;		Unchanged: 0/0
 19036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19041 ;;Total ram usage:        2 bytes
 19042 ;; Hardware stack levels used:    1
 19043 ;; Hardware stack levels required when called:   10
 19044 ;; This function calls:
 19045 ;;		_dwt_write8bitoffsetreg
 19046 ;; This function is called by:
 19047 ;;		_dwt_configure
 19048 ;; This function uses a non-reentrant model
 19049 ;;
 19050                           
 19051                           
 19052                           ;psect for function _dwt_setplenfine
 19053  2242                     _dwt_setplenfine:	
 19054                           
 19055                           ;incstack = 0
 19056                           ; Regs used in _dwt_setplenfine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19057                           ;dwt_setplenfine@preambleLength stored from wreg
 19058  2242  0140               	movlb	0	; select bank0
 19059  2243  00EC               	movwf	dwt_setplenfine@preambleLength
 19060                           
 19061                           ;deca_device.c: 1813: dwt_write8bitoffsetreg(0x28, 1, preambleLength);
 19062  2244  3000               	movlw	0
 19063  2245  0141               	movlb	1	; select bank1
 19064  2246  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 19065  2247  3000               	movlw	0
 19066  2248  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 19067  2249  3000               	movlw	0
 19068  224A  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 19069  224B  3028               	movlw	40
 19070  224C  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 19071  224D  3000               	movlw	0
 19072  224E  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 19073  224F  3000               	movlw	0
 19074  2250  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 19075  2251  3000               	movlw	0
 19076  2252  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 19077  2253  3001               	movlw	1
 19078  2254  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 19079  2255  0140               	movlb	0	; select bank0
 19080  2256  086C               	movf	dwt_setplenfine@preambleLength,w
 19081  2257  00EB               	movwf	??_dwt_setplenfine
 19082  2258  086B               	movf	??_dwt_setplenfine,w
 19083  2259  0141               	movlb	1	; select bank1
 19084  225A  00B4               	movwf	dwt_write8bitoffsetreg@regval^(0+128)
 19085  225B  31A2  2226         	fcall	_dwt_write8bitoffsetreg
 19086  225D  0008               	return
 19087  225E                     __end_of_dwt_setplenfine:	
 19088                           
 19089                           	psect	text46
 19090  071A                     __ptext46:	
 19091 ;; *************** function _dwt_setdwstate *****************
 19092 ;; Defined at:
 19093 ;;		line 876 in file "deca_device.c"
 19094 ;; Parameters:    Size  Location     Type
 19095 ;;  state           2   24[BANK1 ] int 
 19096 ;; Auto vars:     Size  Location     Type
 19097 ;;		None
 19098 ;; Return value:  Size  Location     Type
 19099 ;;                  1    wreg      void 
 19100 ;; Registers used:
 19101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19102 ;; Tracked objects:
 19103 ;;		On entry : 0/0
 19104 ;;		On exit  : 0/0
 19105 ;;		Unchanged: 0/0
 19106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19107 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19109 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19110 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19111 ;;Total ram usage:        4 bytes
 19112 ;; Hardware stack levels used:    1
 19113 ;; Hardware stack levels required when called:   11
 19114 ;; This function calls:
 19115 ;;		_dwt_force_clocks
 19116 ;;		_dwt_modify32bitoffsetreg
 19117 ;;		_dwt_modify8bitoffsetreg
 19118 ;; This function is called by:
 19119 ;;		_dwt_configure
 19120 ;; This function uses a non-reentrant model
 19121 ;;
 19122                           
 19123                           
 19124                           ;psect for function _dwt_setdwstate
 19125  071A                     _dwt_setdwstate:	
 19126                           
 19127                           ;deca_device.c: 878: if (state == 0x1)
 19128                           
 19129                           ;incstack = 0
 19130                           ; Regs used in _dwt_setdwstate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19131  071A  0141               	movlb	1	; select bank1
 19132  071B  0338               	decf	dwt_setdwstate@state^(0+128),w
 19133  071C  0439               	iorwf	(dwt_setdwstate@state+1)^(0+128),w
 19134  071D  1D03               	btfss	3,2
 19135  071E  2F41               	goto	l9058
 19136                           
 19137                           ;deca_device.c: 880: {
 19138                           ;deca_device.c: 882: dwt_force_clocks((5));
 19139  071F  3005               	movlw	5
 19140  0720  0140               	movlb	0	; select bank0
 19141  0721  00EE               	movwf	dwt_force_clocks@clocks
 19142  0722  3000               	movlw	0
 19143  0723  00EF               	movwf	dwt_force_clocks@clocks+1
 19144  0724  31A7  272B  3187   	fcall	_dwt_force_clocks
 19145                           
 19146                           ;deca_device.c: 883: dwt_modify8bitoffsetreg(0x110008, 0x01, -1, 0x100U>>8);
 19147  0727  3000               	movlw	0
 19148  0728  0141               	movlb	1	; select bank1
 19149  0729  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 19150  072A  3011               	movlw	17
 19151  072B  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 19152  072C  3000               	movlw	0
 19153  072D  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 19154  072E  3008               	movlw	8
 19155  072F  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 19156  0730  3000               	movlw	0
 19157  0731  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 19158  0732  3000               	movlw	0
 19159  0733  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 19160  0734  3000               	movlw	0
 19161  0735  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 19162  0736  3001               	movlw	1
 19163  0737  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 19164  0738  30FF               	movlw	255
 19165  0739  00BA               	movwf	??_dwt_setdwstate^(0+128)
 19166  073A  083A               	movf	??_dwt_setdwstate^(0+128),w
 19167  073B  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 19168  073C  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 19169  073D  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 19170  073E  31A6  2643         	fcall	_dwt_modify8bitoffsetreg
 19171                           
 19172                           ;deca_device.c: 884: }
 19173  0740  0008               	return
 19174  0741                     l9058:	
 19175                           
 19176                           ;deca_device.c: 885: else if(state == 0x2)
 19177  0741  3002               	movlw	2
 19178  0742  0141               	movlb	1	; select bank1
 19179  0743  0638               	xorwf	dwt_setdwstate@state^(0+128),w
 19180  0744  0439               	iorwf	(dwt_setdwstate@state+1)^(0+128),w
 19181  0745  1D03               	btfss	3,2
 19182  0746  2FA7               	goto	l9062
 19183                           
 19184                           ;deca_device.c: 886: {
 19185                           ;deca_device.c: 888: dwt_modify8bitoffsetreg(0x110004, 0, -1, (3));
 19186  0747  3000               	movlw	0
 19187  0748  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 19188  0749  3011               	movlw	17
 19189  074A  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 19190  074B  3000               	movlw	0
 19191  074C  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 19192  074D  3004               	movlw	4
 19193  074E  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 19194  074F  3000               	movlw	0
 19195  0750  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 19196  0751  3000               	movlw	0
 19197  0752  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 19198  0753  3000               	movlw	0
 19199  0754  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 19200  0755  3000               	movlw	0
 19201  0756  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 19202  0757  30FF               	movlw	255
 19203  0758  00BA               	movwf	??_dwt_setdwstate^(0+128)
 19204  0759  083A               	movf	??_dwt_setdwstate^(0+128),w
 19205  075A  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 19206  075B  3003               	movlw	3
 19207  075C  00BB               	movwf	(??_dwt_setdwstate+1)^(0+128)
 19208  075D  083B               	movf	(??_dwt_setdwstate+1)^(0+128),w
 19209  075E  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 19210  075F  31A6  2643  3187   	fcall	_dwt_modify8bitoffsetreg
 19211                           
 19212                           ;deca_device.c: 890: dwt_modify32bitoffsetreg(0x110008, 0x0, (uint32_t) ~0x100U, 0x80000
      +                          0UL);
 19213  0762  3000               	movlw	0
 19214  0763  0141               	movlb	1	; select bank1
 19215  0764  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 19216  0765  3011               	movlw	17
 19217  0766  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 19218  0767  3000               	movlw	0
 19219  0768  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 19220  0769  3008               	movlw	8
 19221  076A  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 19222  076B  3000               	movlw	0
 19223  076C  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 19224  076D  3000               	movlw	0
 19225  076E  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 19226  076F  3000               	movlw	0
 19227  0770  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 19228  0771  3000               	movlw	0
 19229  0772  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 19230  0773  3000               	movlw	0
 19231  0774  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 19232  0775  3000               	movlw	0
 19233  0776  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 19234  0777  30FE               	movlw	254
 19235  0778  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 19236  0779  30FF               	movlw	255
 19237  077A  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 19238  077B  3000               	movlw	0
 19239  077C  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 19240  077D  3080               	movlw	128
 19241  077E  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 19242  077F  3000               	movlw	0
 19243  0780  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 19244  0781  3000               	movlw	0
 19245  0782  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 19246  0783  3193  239F  3187   	fcall	_dwt_modify32bitoffsetreg
 19247                           
 19248                           ;deca_device.c: 892: dwt_modify8bitoffsetreg(0x110008, 0x2, (uint8_t) ~(0x800000UL>>16),
      +                           0);
 19249  0786  3000               	movlw	0
 19250  0787  0141               	movlb	1	; select bank1
 19251  0788  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 19252  0789  3011               	movlw	17
 19253  078A  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 19254  078B  3000               	movlw	0
 19255  078C  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 19256  078D  3008               	movlw	8
 19257  078E  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 19258  078F  3000               	movlw	0
 19259  0790  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 19260  0791  3000               	movlw	0
 19261  0792  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 19262  0793  3000               	movlw	0
 19263  0794  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 19264  0795  3002               	movlw	2
 19265  0796  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 19266  0797  307F               	movlw	127
 19267  0798  00BA               	movwf	??_dwt_setdwstate^(0+128)
 19268  0799  083A               	movf	??_dwt_setdwstate^(0+128),w
 19269  079A  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 19270  079B  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 19271  079C  31A6  2643  3187   	fcall	_dwt_modify8bitoffsetreg
 19272                           
 19273                           ;deca_device.c: 894: dwt_force_clocks((5));
 19274  079F  3005               	movlw	5
 19275  07A0  0140               	movlb	0	; select bank0
 19276  07A1  00EE               	movwf	dwt_force_clocks@clocks
 19277  07A2  3000               	movlw	0
 19278  07A3  00EF               	movwf	dwt_force_clocks@clocks+1
 19279  07A4  31A7  272B         	fcall	_dwt_force_clocks
 19280                           
 19281                           ;deca_device.c: 895: }
 19282  07A6  0008               	return
 19283  07A7                     l9062:	
 19284                           
 19285                           ;deca_device.c: 896: else
 19286                           ;deca_device.c: 898: {
 19287                           ;deca_device.c: 899: dwt_modify8bitoffsetreg(0x110004, 0, -1, (1));
 19288  07A7  3000               	movlw	0
 19289  07A8  0141               	movlb	1	; select bank1
 19290  07A9  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 19291  07AA  3011               	movlw	17
 19292  07AB  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 19293  07AC  3000               	movlw	0
 19294  07AD  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 19295  07AE  3004               	movlw	4
 19296  07AF  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 19297  07B0  3000               	movlw	0
 19298  07B1  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 19299  07B2  3000               	movlw	0
 19300  07B3  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 19301  07B4  3000               	movlw	0
 19302  07B5  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 19303  07B6  3000               	movlw	0
 19304  07B7  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 19305  07B8  30FF               	movlw	255
 19306  07B9  00BA               	movwf	??_dwt_setdwstate^(0+128)
 19307  07BA  083A               	movf	??_dwt_setdwstate^(0+128),w
 19308  07BB  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 19309  07BC  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 19310  07BD  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 19311  07BE  31A6  2643  3187   	fcall	_dwt_modify8bitoffsetreg
 19312                           
 19313                           ;deca_device.c: 901: dwt_modify32bitoffsetreg(0x110008, 0x0, (uint32_t) ~0x100U, 0x80000
      +                          0UL);
 19314  07C1  3000               	movlw	0
 19315  07C2  0141               	movlb	1	; select bank1
 19316  07C3  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 19317  07C4  3011               	movlw	17
 19318  07C5  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 19319  07C6  3000               	movlw	0
 19320  07C7  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 19321  07C8  3008               	movlw	8
 19322  07C9  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 19323  07CA  3000               	movlw	0
 19324  07CB  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 19325  07CC  3000               	movlw	0
 19326  07CD  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 19327  07CE  3000               	movlw	0
 19328  07CF  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 19329  07D0  3000               	movlw	0
 19330  07D1  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 19331  07D2  3000               	movlw	0
 19332  07D3  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 19333  07D4  3000               	movlw	0
 19334  07D5  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 19335  07D6  30FE               	movlw	254
 19336  07D7  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 19337  07D8  30FF               	movlw	255
 19338  07D9  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 19339  07DA  3000               	movlw	0
 19340  07DB  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 19341  07DC  3080               	movlw	128
 19342  07DD  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 19343  07DE  3000               	movlw	0
 19344  07DF  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 19345  07E0  3000               	movlw	0
 19346  07E1  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 19347  07E2  3193  239F  3187   	fcall	_dwt_modify32bitoffsetreg
 19348                           
 19349                           ;deca_device.c: 902: dwt_modify8bitoffsetreg(0x110008, 0x2, (uint8_t) ~(0x800000UL>>16),
      +                           0);
 19350  07E5  3000               	movlw	0
 19351  07E6  0141               	movlb	1	; select bank1
 19352  07E7  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 19353  07E8  3011               	movlw	17
 19354  07E9  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 19355  07EA  3000               	movlw	0
 19356  07EB  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 19357  07EC  3008               	movlw	8
 19358  07ED  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 19359  07EE  3000               	movlw	0
 19360  07EF  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 19361  07F0  3000               	movlw	0
 19362  07F1  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 19363  07F2  3000               	movlw	0
 19364  07F3  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 19365  07F4  3002               	movlw	2
 19366  07F5  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 19367  07F6  307F               	movlw	127
 19368  07F7  00BA               	movwf	??_dwt_setdwstate^(0+128)
 19369  07F8  083A               	movf	??_dwt_setdwstate^(0+128),w
 19370  07F9  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 19371  07FA  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 19372  07FB  31A6  2643         	fcall	_dwt_modify8bitoffsetreg
 19373  07FD  0008               	return
 19374  07FE                     __end_of_dwt_setdwstate:	
 19375                           
 19376                           	psect	text47
 19377  272B                     __ptext47:	
 19378 ;; *************** function _dwt_force_clocks *****************
 19379 ;; Defined at:
 19380 ;;		line 3612 in file "deca_device.c"
 19381 ;; Parameters:    Size  Location     Type
 19382 ;;  clocks          2   78[BANK0 ] int 
 19383 ;; Auto vars:     Size  Location     Type
 19384 ;;  regvalue0       2   22[BANK1 ] unsigned int 
 19385 ;; Return value:  Size  Location     Type
 19386 ;;                  1    wreg      void 
 19387 ;; Registers used:
 19388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19389 ;; Tracked objects:
 19390 ;;		On entry : 0/0
 19391 ;;		On exit  : 0/0
 19392 ;;		Unchanged: 0/0
 19393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19394 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19395 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19397 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19398 ;;Total ram usage:        4 bytes
 19399 ;; Hardware stack levels used:    1
 19400 ;; Hardware stack levels required when called:   10
 19401 ;; This function calls:
 19402 ;;		_dwt_write16bitoffsetreg
 19403 ;; This function is called by:
 19404 ;;		_dwt_setdwstate
 19405 ;;		_dwt_calcbandwidthadj
 19406 ;;		_dwt_configcwmode
 19407 ;;		_dwt_configcontinuousframemode
 19408 ;;		_dwt_calcpgcount
 19409 ;; This function uses a non-reentrant model
 19410 ;;
 19411                           
 19412                           
 19413                           ;psect for function _dwt_force_clocks
 19414  272B                     _dwt_force_clocks:	
 19415                           
 19416                           ;deca_device.c: 3615: if (clocks == (1))
 19417                           
 19418                           ;incstack = 0
 19419                           ; Regs used in _dwt_force_clocks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19420  272B  0140               	movlb	0	; select bank0
 19421  272C  036E               	decf	dwt_force_clocks@clocks,w
 19422  272D  046F               	iorwf	dwt_force_clocks@clocks+1,w
 19423  272E  1D03               	btfss	3,2
 19424  272F  2F4E               	goto	l8852
 19425                           
 19426                           ;deca_device.c: 3616: {
 19427                           ;deca_device.c: 3617: uint16_t regvalue0 = 0x1000U | 0x800U;
 19428  2730  3000               	movlw	0
 19429  2731  0141               	movlb	1	; select bank1
 19430  2732  00B6               	movwf	dwt_force_clocks@regvalue0^(0+128)
 19431  2733  3018               	movlw	24
 19432  2734  00B7               	movwf	(dwt_force_clocks@regvalue0^(0+128)+1)
 19433                           
 19434                           ;deca_device.c: 3620: regvalue0 |= ((uint16_t) (2)) << (0U);
 19435  2735  14B6               	bsf	dwt_force_clocks@regvalue0^(0+128),1
 19436                           
 19437                           ;deca_device.c: 3623: regvalue0 |= ((uint16_t) (2)) << (4U);
 19438  2736  16B6               	bsf	dwt_force_clocks@regvalue0^(0+128),5
 19439                           
 19440                           ;deca_device.c: 3625: dwt_write16bitoffsetreg(0x110004, 0x0, regvalue0);
 19441  2737  3000               	movlw	0
 19442  2738  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 19443  2739  3011               	movlw	17
 19444  273A  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 19445  273B  3000               	movlw	0
 19446  273C  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 19447  273D  3004               	movlw	4
 19448  273E  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 19449  273F  3000               	movlw	0
 19450  2740  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 19451  2741  3000               	movlw	0
 19452  2742  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 19453  2743  3000               	movlw	0
 19454  2744  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 19455  2745  3000               	movlw	0
 19456  2746  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 19457  2747  0837               	movf	(dwt_force_clocks@regvalue0+1)^(0+128),w
 19458  2748  00B5               	movwf	(dwt_write16bitoffsetreg@regval+1)^(0+128)
 19459  2749  0836               	movf	dwt_force_clocks@regvalue0^(0+128),w
 19460  274A  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 19461  274B  31A3  23C2  31A7   	fcall	_dwt_write16bitoffsetreg
 19462  274E                     l8852:	
 19463                           
 19464                           ;deca_device.c: 3627: }
 19465                           ;deca_device.c: 3629: if (clocks == (5))
 19466  274E  3005               	movlw	5
 19467  274F  0140               	movlb	0	; select bank0
 19468  2750  066E               	xorwf	dwt_force_clocks@clocks,w
 19469  2751  046F               	iorwf	dwt_force_clocks@clocks+1,w
 19470  2752  1D03               	btfss	3,2
 19471  2753  0008               	return
 19472                           
 19473                           ;deca_device.c: 3630: {
 19474                           ;deca_device.c: 3632: dwt_write16bitoffsetreg(0x110004, 0x0, (uint16_t) (0x200 | 0x20000
      +                          0 | 0x100000));
 19475  2754  3000               	movlw	0
 19476  2755  0141               	movlb	1	; select bank1
 19477  2756  00AF               	movwf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128)
 19478  2757  3011               	movlw	17
 19479  2758  00AE               	movwf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128)
 19480  2759  3000               	movlw	0
 19481  275A  00AD               	movwf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128)
 19482  275B  3004               	movlw	4
 19483  275C  00AC               	movwf	dwt_write16bitoffsetreg@regFileID^(0+128)
 19484  275D  3000               	movlw	0
 19485  275E  00B3               	movwf	(dwt_write16bitoffsetreg@regOffset+3)^(0+128)
 19486  275F  3000               	movlw	0
 19487  2760  00B2               	movwf	(dwt_write16bitoffsetreg@regOffset+2)^(0+128)
 19488  2761  3000               	movlw	0
 19489  2762  00B1               	movwf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128)
 19490  2763  3000               	movlw	0
 19491  2764  00B0               	movwf	dwt_write16bitoffsetreg@regOffset^(0+128)
 19492  2765  3000               	movlw	0
 19493  2766  00B4               	movwf	dwt_write16bitoffsetreg@regval^(0+128)
 19494  2767  3002               	movlw	2
 19495  2768  00B5               	movwf	(dwt_write16bitoffsetreg@regval^(0+128)+1)
 19496  2769  31A3  23C2         	fcall	_dwt_write16bitoffsetreg
 19497  276B  0008               	return
 19498  276C                     __end_of_dwt_force_clocks:	
 19499                           
 19500                           	psect	text48
 19501  23C2                     __ptext48:	
 19502 ;; *************** function _dwt_write16bitoffsetreg *****************
 19503 ;; Defined at:
 19504 ;;		line 493 in file "deca_device.c"
 19505 ;; Parameters:    Size  Location     Type
 19506 ;;  regFileID       4   12[BANK1 ] unsigned long 
 19507 ;;  regOffset       4   16[BANK1 ] unsigned long 
 19508 ;;  regval          2   20[BANK1 ] unsigned int 
 19509 ;; Auto vars:     Size  Location     Type
 19510 ;;  buffer          2   76[BANK0 ] unsigned char [2]
 19511 ;; Return value:  Size  Location     Type
 19512 ;;                  1    wreg      void 
 19513 ;; Registers used:
 19514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19515 ;; Tracked objects:
 19516 ;;		On entry : 0/0
 19517 ;;		On exit  : 0/0
 19518 ;;		Unchanged: 0/0
 19519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19520 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19523 ;;      Totals:         0       3      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19524 ;;Total ram usage:       13 bytes
 19525 ;; Hardware stack levels used:    1
 19526 ;; Hardware stack levels required when called:    9
 19527 ;; This function calls:
 19528 ;;		_dwt_writetodevice
 19529 ;; This function is called by:
 19530 ;;		_dwt_configure
 19531 ;;		_dwt_setrxantennadelay
 19532 ;;		_dwt_settxantennadelay
 19533 ;;		__dwt_otpread
 19534 ;;		_dwt_force_clocks
 19535 ;;		_dwt_calcbandwidthadj
 19536 ;;		_dwt_configureframefilter
 19537 ;;		_dwt_setpanid
 19538 ;;		_dwt_setaddress16
 19539 ;;		_dwt_aon_read
 19540 ;;		_dwt_aon_write
 19541 ;;		___dwt_otp_write_wdata_id_reg
 19542 ;;		__dwt_otpprogword32
 19543 ;;		_dwt_configuresleep
 19544 ;;		_dwt_clearaonconfig
 19545 ;;		_dwt_isr
 19546 ;;		_dwt_setsniffmode
 19547 ;;		_dwt_setpreambledetecttimeout
 19548 ;;		_dwt_configure_aes
 19549 ;;		_dwt_configure_le_address
 19550 ;; This function uses a non-reentrant model
 19551 ;;
 19552                           
 19553                           
 19554                           ;psect for function _dwt_write16bitoffsetreg
 19555  23C2                     _dwt_write16bitoffsetreg:	
 19556                           
 19557                           ;deca_device.c: 495: uint8_t buffer[2] ;
 19558                           ;deca_device.c: 497: buffer[0] = (uint8_t)regval;
 19559                           
 19560                           ;incstack = 0
 19561                           ; Regs used in _dwt_write16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19562  23C2  0141               	movlb	1	; select bank1
 19563  23C3  0834               	movf	dwt_write16bitoffsetreg@regval^(0+128),w
 19564  23C4  0140               	movlb	0	; select bank0
 19565  23C5  00EB               	movwf	??_dwt_write16bitoffsetreg
 19566  23C6  086B               	movf	??_dwt_write16bitoffsetreg,w
 19567  23C7  00EC               	movwf	dwt_write16bitoffsetreg@buffer
 19568                           
 19569                           ;deca_device.c: 498: buffer[1] = regval >> 8 ;
 19570  23C8  0141               	movlb	1	; select bank1
 19571  23C9  0835               	movf	(dwt_write16bitoffsetreg@regval+1)^(0+128),w
 19572  23CA  0140               	movlb	0	; select bank0
 19573  23CB  00EB               	movwf	??_dwt_write16bitoffsetreg
 19574  23CC  086B               	movf	??_dwt_write16bitoffsetreg,w
 19575  23CD  00ED               	movwf	dwt_write16bitoffsetreg@buffer+1
 19576                           
 19577                           ;deca_device.c: 500: dwt_writetodevice(regFileID,regOffset,2,buffer);
 19578  23CE  0141               	movlb	1	; select bank1
 19579  23CF  082F               	movf	(dwt_write16bitoffsetreg@regFileID+3)^(0+128),w
 19580  23D0  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 19581  23D1  082E               	movf	(dwt_write16bitoffsetreg@regFileID+2)^(0+128),w
 19582  23D2  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 19583  23D3  082D               	movf	(dwt_write16bitoffsetreg@regFileID+1)^(0+128),w
 19584  23D4  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 19585  23D5  082C               	movf	dwt_write16bitoffsetreg@regFileID^(0+128),w
 19586  23D6  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 19587  23D7  0831               	movf	(dwt_write16bitoffsetreg@regOffset+1)^(0+128),w
 19588  23D8  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 19589  23D9  0830               	movf	dwt_write16bitoffsetreg@regOffset^(0+128),w
 19590  23DA  00A4               	movwf	dwt_writetodevice@index^(0+128)
 19591  23DB  3000               	movlw	0
 19592  23DC  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 19593  23DD  3000               	movlw	0
 19594  23DE  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 19595  23DF  3000               	movlw	0
 19596  23E0  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 19597  23E1  3002               	movlw	2
 19598  23E2  00A6               	movwf	dwt_writetodevice@length^(0+128)
 19599  23E3  306C               	movlw	low dwt_write16bitoffsetreg@buffer
 19600  23E4  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 19601  23E5  3000               	movlw	high dwt_write16bitoffsetreg@buffer
 19602  23E6  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 19603  23E7  31A6  260C         	fcall	_dwt_writetodevice
 19604  23E9  0008               	return
 19605  23EA                     __end_of_dwt_write16bitoffsetreg:	
 19606                           
 19607                           	psect	text49
 19608  1B31                     __ptext49:	
 19609 ;; *************** function _dwt_pgf_cal *****************
 19610 ;; Defined at:
 19611 ;;		line 1592 in file "deca_device.c"
 19612 ;; Parameters:    Size  Location     Type
 19613 ;;  ldoen           2   51[BANK1 ] int 
 19614 ;; Auto vars:     Size  Location     Type
 19615 ;;  val             2   55[BANK1 ] unsigned int 
 19616 ;;  temp            2   53[BANK1 ] int 
 19617 ;; Return value:  Size  Location     Type
 19618 ;;                  2   51[BANK1 ] int 
 19619 ;; Registers used:
 19620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19621 ;; Tracked objects:
 19622 ;;		On entry : 0/0
 19623 ;;		On exit  : 0/0
 19624 ;;		Unchanged: 0/0
 19625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19626 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19627 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19629 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19630 ;;Total ram usage:        6 bytes
 19631 ;; Hardware stack levels used:    1
 19632 ;; Hardware stack levels required when called:   11
 19633 ;; This function calls:
 19634 ;;		_dwt_modify16bitoffsetreg
 19635 ;;		_dwt_read16bitoffsetreg
 19636 ;;		_dwt_run_pgfcal
 19637 ;; This function is called by:
 19638 ;;		_dwt_configure
 19639 ;; This function uses a non-reentrant model
 19640 ;;
 19641                           
 19642                           
 19643                           ;psect for function _dwt_pgf_cal
 19644  1B31                     _dwt_pgf_cal:	
 19645                           
 19646                           ;deca_device.c: 1594: int temp;
 19647                           ;deca_device.c: 1595: uint16_t val;
 19648                           ;deca_device.c: 1598: if (ldoen == 1)
 19649                           
 19650                           ;incstack = 0
 19651                           ; Regs used in _dwt_pgf_cal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19652  1B31  0141               	movlb	1	; select bank1
 19653  1B32  0353               	decf	dwt_pgf_cal@ldoen^(0+128),w
 19654  1B33  0454               	iorwf	(dwt_pgf_cal@ldoen+1)^(0+128),w
 19655  1B34  1D03               	btfss	3,2
 19656  1B35  2B69               	goto	l676
 19657                           
 19658                           ;deca_device.c: 1599: {
 19659                           ;deca_device.c: 1600: val = dwt_read16bitoffsetreg(0x70048, 0);
 19660  1B36  3000               	movlw	0
 19661  1B37  00AE               	movwf	(dwt_read16bitoffsetreg@regFileID+3)^(0+128)
 19662  1B38  3007               	movlw	7
 19663  1B39  00AD               	movwf	(dwt_read16bitoffsetreg@regFileID+2)^(0+128)
 19664  1B3A  3000               	movlw	0
 19665  1B3B  00AC               	movwf	(dwt_read16bitoffsetreg@regFileID+1)^(0+128)
 19666  1B3C  3048               	movlw	72
 19667  1B3D  00AB               	movwf	dwt_read16bitoffsetreg@regFileID^(0+128)
 19668  1B3E  3000               	movlw	0
 19669  1B3F  00B2               	movwf	(dwt_read16bitoffsetreg@regOffset+3)^(0+128)
 19670  1B40  3000               	movlw	0
 19671  1B41  00B1               	movwf	(dwt_read16bitoffsetreg@regOffset+2)^(0+128)
 19672  1B42  3000               	movlw	0
 19673  1B43  00B0               	movwf	(dwt_read16bitoffsetreg@regOffset+1)^(0+128)
 19674  1B44  3000               	movlw	0
 19675  1B45  00AF               	movwf	dwt_read16bitoffsetreg@regOffset^(0+128)
 19676  1B46  31A6  26B1  319B   	fcall	_dwt_read16bitoffsetreg
 19677  1B49  0141               	movlb	1	; select bank1
 19678  1B4A  082C               	movf	(?_dwt_read16bitoffsetreg+1)^(0+128),w
 19679  1B4B  00D8               	movwf	(dwt_pgf_cal@val+1)^(0+128)
 19680  1B4C  082B               	movf	?_dwt_read16bitoffsetreg^(0+128),w
 19681  1B4D  00D7               	movwf	dwt_pgf_cal@val^(0+128)
 19682                           
 19683                           ;deca_device.c: 1602: dwt_modify16bitoffsetreg(0x70048, 0, -1, ( 0x100U | 0x4U | 0x1U));
 19684  1B4E  3000               	movlw	0
 19685  1B4F  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 19686  1B50  3007               	movlw	7
 19687  1B51  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 19688  1B52  3000               	movlw	0
 19689  1B53  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 19690  1B54  3048               	movlw	72
 19691  1B55  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 19692  1B56  3000               	movlw	0
 19693  1B57  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 19694  1B58  3000               	movlw	0
 19695  1B59  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 19696  1B5A  3000               	movlw	0
 19697  1B5B  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 19698  1B5C  3000               	movlw	0
 19699  1B5D  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 19700  1B5E  30FF               	movlw	255
 19701  1B5F  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 19702  1B60  30FF               	movlw	255
 19703  1B61  00A9               	movwf	(dwt_modify16bitoffsetreg@_and^(0+128)+1)
 19704  1B62  3005               	movlw	5
 19705  1B63  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 19706  1B64  3001               	movlw	1
 19707  1B65  00AB               	movwf	(dwt_modify16bitoffsetreg@_or^(0+128)+1)
 19708  1B66  31A7  276C  319B   	fcall	_dwt_modify16bitoffsetreg
 19709  1B69                     l676:	
 19710                           
 19711                           ;deca_device.c: 1606: }
 19712                           ;deca_device.c: 1609: temp = dwt_run_pgfcal();
 19713  1B69  3195  2554  319B   	fcall	_dwt_run_pgfcal
 19714  1B6C  0141               	movlb	1	; select bank1
 19715  1B6D  0846               	movf	(?_dwt_run_pgfcal+1)^(0+128),w
 19716  1B6E  00D6               	movwf	(dwt_pgf_cal@temp+1)^(0+128)
 19717  1B6F  0845               	movf	?_dwt_run_pgfcal^(0+128),w
 19718  1B70  00D5               	movwf	dwt_pgf_cal@temp^(0+128)
 19719                           
 19720                           ;deca_device.c: 1612: if (ldoen == 1)
 19721  1B71  0353               	decf	dwt_pgf_cal@ldoen^(0+128),w
 19722  1B72  0454               	iorwf	(dwt_pgf_cal@ldoen+1)^(0+128),w
 19723  1B73  1D03               	btfss	3,2
 19724  1B74  2B8E               	goto	l9126
 19725                           
 19726                           ;deca_device.c: 1613: {
 19727                           ;deca_device.c: 1614: dwt_modify16bitoffsetreg(0x70048, 0, val, 0);
 19728  1B75  3000               	movlw	0
 19729  1B76  00A3               	movwf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128)
 19730  1B77  3007               	movlw	7
 19731  1B78  00A2               	movwf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128)
 19732  1B79  3000               	movlw	0
 19733  1B7A  00A1               	movwf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128)
 19734  1B7B  3048               	movlw	72
 19735  1B7C  00A0               	movwf	dwt_modify16bitoffsetreg@regFileID^(0+128)
 19736  1B7D  3000               	movlw	0
 19737  1B7E  00A7               	movwf	(dwt_modify16bitoffsetreg@regOffset+3)^(0+128)
 19738  1B7F  3000               	movlw	0
 19739  1B80  00A6               	movwf	(dwt_modify16bitoffsetreg@regOffset+2)^(0+128)
 19740  1B81  3000               	movlw	0
 19741  1B82  00A5               	movwf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128)
 19742  1B83  3000               	movlw	0
 19743  1B84  00A4               	movwf	dwt_modify16bitoffsetreg@regOffset^(0+128)
 19744  1B85  0858               	movf	(dwt_pgf_cal@val+1)^(0+128),w
 19745  1B86  00A9               	movwf	(dwt_modify16bitoffsetreg@_and+1)^(0+128)
 19746  1B87  0857               	movf	dwt_pgf_cal@val^(0+128),w
 19747  1B88  00A8               	movwf	dwt_modify16bitoffsetreg@_and^(0+128)
 19748  1B89  3000               	movlw	0
 19749  1B8A  00AA               	movwf	dwt_modify16bitoffsetreg@_or^(0+128)
 19750  1B8B  00AB               	movwf	(dwt_modify16bitoffsetreg@_or+1)^(0+128)
 19751  1B8C  31A7  276C         	fcall	_dwt_modify16bitoffsetreg
 19752  1B8E                     l9126:	
 19753                           
 19754                           ;deca_device.c: 1615: }
 19755                           ;deca_device.c: 1616: return temp;
 19756  1B8E  0141               	movlb	1	; select bank1
 19757  1B8F  0856               	movf	(dwt_pgf_cal@temp+1)^(0+128),w
 19758  1B90  00D4               	movwf	(?_dwt_pgf_cal+1)^(0+128)
 19759  1B91  0855               	movf	dwt_pgf_cal@temp^(0+128),w
 19760  1B92  00D3               	movwf	?_dwt_pgf_cal^(0+128)
 19761  1B93  0008               	return
 19762  1B94                     __end_of_dwt_pgf_cal:	
 19763                           
 19764                           	psect	text50
 19765  1554                     __ptext50:	
 19766 ;; *************** function _dwt_run_pgfcal *****************
 19767 ;; Defined at:
 19768 ;;		line 1628 in file "deca_device.c"
 19769 ;; Parameters:    Size  Location     Type
 19770 ;;		None
 19771 ;; Auto vars:     Size  Location     Type
 19772 ;;  val             4   46[BANK1 ] unsigned long 
 19773 ;;  data            4   39[BANK1 ] unsigned long 
 19774 ;;  result          2   44[BANK1 ] int 
 19775 ;;  cnt             1   50[BANK1 ] unsigned char 
 19776 ;;  flag            1   43[BANK1 ] unsigned char 
 19777 ;; Return value:  Size  Location     Type
 19778 ;;                  2   37[BANK1 ] int 
 19779 ;; Registers used:
 19780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19781 ;; Tracked objects:
 19782 ;;		On entry : 0/0
 19783 ;;		On exit  : 0/0
 19784 ;;		Unchanged: 0/0
 19785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19786 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19787 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19789 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19790 ;;Total ram usage:       16 bytes
 19791 ;; Hardware stack levels used:    1
 19792 ;; Hardware stack levels required when called:   10
 19793 ;; This function calls:
 19794 ;;		_Sleep
 19795 ;;		_dwt_modify8bitoffsetreg
 19796 ;;		_dwt_read32bitoffsetreg
 19797 ;;		_dwt_read8bitoffsetreg
 19798 ;;		_dwt_write32bitoffsetreg
 19799 ;;		_dwt_write8bitoffsetreg
 19800 ;; This function is called by:
 19801 ;;		_dwt_pgf_cal
 19802 ;; This function uses a non-reentrant model
 19803 ;;
 19804                           
 19805                           
 19806                           ;psect for function _dwt_run_pgfcal
 19807  1554                     _dwt_run_pgfcal:	
 19808                           
 19809                           ;deca_device.c: 1630: int result = (0);
 19810                           
 19811                           ;incstack = 0
 19812                           ; Regs used in _dwt_run_pgfcal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19813  1554  0141               	movlb	1	; select bank1
 19814  1555  01CC               	clrf	dwt_run_pgfcal@result^(0+128)
 19815  1556  01CD               	clrf	(dwt_run_pgfcal@result+1)^(0+128)
 19816                           
 19817                           ;deca_device.c: 1631: uint32_t data;
 19818                           ;deca_device.c: 1632: uint32_t val = 0;
 19819  1557  3000               	movlw	0
 19820  1558  00D1               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 19821  1559  3000               	movlw	0
 19822  155A  00D0               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 19823  155B  3000               	movlw	0
 19824  155C  00CF               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 19825  155D  3000               	movlw	0
 19826  155E  00CE               	movwf	dwt_run_pgfcal@val^(0+128)
 19827                           
 19828                           ;deca_device.c: 1633: uint8_t cnt,flag;
 19829                           ;deca_device.c: 1636: data = (((uint32_t)0x02) << (16U)) | (0x3U & 0x1);
 19830  155F  3000               	movlw	0
 19831  1560  00CA               	movwf	(dwt_run_pgfcal@data+3)^(0+128)
 19832  1561  3002               	movlw	2
 19833  1562  00C9               	movwf	(dwt_run_pgfcal@data+2)^(0+128)
 19834  1563  3000               	movlw	0
 19835  1564  00C8               	movwf	(dwt_run_pgfcal@data+1)^(0+128)
 19836  1565  3001               	movlw	1
 19837  1566  00C7               	movwf	dwt_run_pgfcal@data^(0+128)
 19838                           
 19839                           ;deca_device.c: 1637: dwt_write32bitoffsetreg(0x4000c, 0x0, data);
 19840  1567  3000               	movlw	0
 19841  1568  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 19842  1569  3004               	movlw	4
 19843  156A  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 19844  156B  3000               	movlw	0
 19845  156C  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 19846  156D  300C               	movlw	12
 19847  156E  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 19848  156F  3000               	movlw	0
 19849  1570  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 19850  1571  3000               	movlw	0
 19851  1572  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 19852  1573  3000               	movlw	0
 19853  1574  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 19854  1575  3000               	movlw	0
 19855  1576  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 19856  1577  084A               	movf	(dwt_run_pgfcal@data+3)^(0+128),w
 19857  1578  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 19858  1579  0849               	movf	(dwt_run_pgfcal@data+2)^(0+128),w
 19859  157A  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 19860  157B  0848               	movf	(dwt_run_pgfcal@data+1)^(0+128),w
 19861  157C  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 19862  157D  0847               	movf	dwt_run_pgfcal@data^(0+128),w
 19863  157E  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 19864  157F  3198  20B7  3195   	fcall	_dwt_write32bitoffsetreg
 19865                           
 19866                           ;deca_device.c: 1639: dwt_modify8bitoffsetreg(0x4000c, 0x0, -1, 0x10U);
 19867  1582  3000               	movlw	0
 19868  1583  0141               	movlb	1	; select bank1
 19869  1584  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 19870  1585  3004               	movlw	4
 19871  1586  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 19872  1587  3000               	movlw	0
 19873  1588  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 19874  1589  300C               	movlw	12
 19875  158A  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 19876  158B  3000               	movlw	0
 19877  158C  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 19878  158D  3000               	movlw	0
 19879  158E  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 19880  158F  3000               	movlw	0
 19881  1590  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 19882  1591  3000               	movlw	0
 19883  1592  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 19884  1593  30FF               	movlw	255
 19885  1594  0140               	movlb	0	; select bank0
 19886  1595  00EE               	movwf	??_dwt_run_pgfcal
 19887  1596  086E               	movf	??_dwt_run_pgfcal,w
 19888  1597  0141               	movlb	1	; select bank1
 19889  1598  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 19890  1599  3010               	movlw	16
 19891  159A  0140               	movlb	0	; select bank0
 19892  159B  00EF               	movwf	??_dwt_run_pgfcal+1
 19893  159C  086F               	movf	??_dwt_run_pgfcal+1,w
 19894  159D  0141               	movlb	1	; select bank1
 19895  159E  00A9               	movwf	dwt_modify8bitoffsetreg@_or^(0+128)
 19896  159F  31A6  2643  3195   	fcall	_dwt_modify8bitoffsetreg
 19897                           
 19898                           ;deca_device.c: 1641: for (flag=1,cnt=0;cnt<(3);cnt++)
 19899  15A2  0141               	movlb	1	; select bank1
 19900  15A3  01CB               	clrf	dwt_run_pgfcal@flag^(0+128)
 19901  15A4  0ACB               	incf	dwt_run_pgfcal@flag^(0+128),f
 19902  15A5  01D2               	clrf	dwt_run_pgfcal@cnt^(0+128)
 19903  15A6  3003               	movlw	3
 19904  15A7  0252               	subwf	dwt_run_pgfcal@cnt^(0+128),w
 19905  15A8  1803               	btfsc	3,0
 19906  15A9  2DD9               	goto	l8886
 19907  15AA                     l8876:	
 19908                           
 19909                           ;deca_device.c: 1642: {
 19910                           ;deca_device.c: 1643: Sleep(1);
 19911  15AA  3000               	movlw	0
 19912  15AB  00F4               	movwf	Sleep@time+3
 19913  15AC  3000               	movlw	0
 19914  15AD  00F3               	movwf	Sleep@time+2
 19915  15AE  3000               	movlw	0
 19916  15AF  00F2               	movwf	Sleep@time+1
 19917  15B0  3001               	movlw	1
 19918  15B1  00F1               	movwf	Sleep@time
 19919  15B2  31A4  2412  3195   	fcall	_Sleep
 19920                           
 19921                           ;deca_device.c: 1644: if(dwt_read8bitoffsetreg(0x40020, 0x0) == 1)
 19922  15B5  3000               	movlw	0
 19923  15B6  0141               	movlb	1	; select bank1
 19924  15B7  00A3               	movwf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128)
 19925  15B8  3004               	movlw	4
 19926  15B9  00A2               	movwf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128)
 19927  15BA  3000               	movlw	0
 19928  15BB  00A1               	movwf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128)
 19929  15BC  3020               	movlw	32
 19930  15BD  00A0               	movwf	dwt_read8bitoffsetreg@regFileID^(0+128)
 19931  15BE  3000               	movlw	0
 19932  15BF  00A7               	movwf	(dwt_read8bitoffsetreg@regOffset+3)^(0+128)
 19933  15C0  3000               	movlw	0
 19934  15C1  00A6               	movwf	(dwt_read8bitoffsetreg@regOffset+2)^(0+128)
 19935  15C2  3000               	movlw	0
 19936  15C3  00A5               	movwf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128)
 19937  15C4  3000               	movlw	0
 19938  15C5  00A4               	movwf	dwt_read8bitoffsetreg@regOffset^(0+128)
 19939  15C6  31A4  2490  3195   	fcall	_dwt_read8bitoffsetreg
 19940  15C9  3A01               	xorlw	1
 19941  15CA  1D03               	skipz
 19942  15CB  2DCF               	goto	l8882
 19943                           
 19944                           ;deca_device.c: 1645: {
 19945                           ;deca_device.c: 1646: flag=0;
 19946  15CC  0141               	movlb	1	; select bank1
 19947  15CD  01CB               	clrf	dwt_run_pgfcal@flag^(0+128)
 19948                           
 19949                           ;deca_device.c: 1647: break;
 19950  15CE  2DD9               	goto	l8886
 19951  15CF                     l8882:	
 19952  15CF  3001               	movlw	1
 19953  15D0  0140               	movlb	0	; select bank0
 19954  15D1  00EE               	movwf	??_dwt_run_pgfcal
 19955  15D2  086E               	movf	??_dwt_run_pgfcal,w
 19956  15D3  0141               	movlb	1	; select bank1
 19957  15D4  07D2               	addwf	dwt_run_pgfcal@cnt^(0+128),f
 19958  15D5  3003               	movlw	3
 19959  15D6  0252               	subwf	dwt_run_pgfcal@cnt^(0+128),w
 19960  15D7  1C03               	skipc
 19961  15D8  2DAA               	goto	l8876
 19962  15D9                     l8886:	
 19963                           
 19964                           ;deca_device.c: 1648: }
 19965                           ;deca_device.c: 1649: }
 19966                           ;deca_device.c: 1650: if (flag)
 19967  15D9  084B               	movf	dwt_run_pgfcal@flag^(0+128),w
 19968  15DA  1903               	btfsc	3,2
 19969  15DB  2DE0               	goto	l8890
 19970                           
 19971                           ;deca_device.c: 1651: {
 19972                           ;deca_device.c: 1652: result = (-1);
 19973  15DC  30FF               	movlw	255
 19974  15DD  00CC               	movwf	dwt_run_pgfcal@result^(0+128)
 19975  15DE  30FF               	movlw	255
 19976  15DF  00CD               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 19977  15E0                     l8890:	
 19978                           
 19979                           ;deca_device.c: 1653: }
 19980                           ;deca_device.c: 1656: dwt_write8bitoffsetreg(0x4000c, 0x0, 0);
 19981  15E0  3000               	movlw	0
 19982  15E1  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 19983  15E2  3004               	movlw	4
 19984  15E3  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 19985  15E4  3000               	movlw	0
 19986  15E5  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 19987  15E6  300C               	movlw	12
 19988  15E7  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 19989  15E8  3000               	movlw	0
 19990  15E9  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 19991  15EA  3000               	movlw	0
 19992  15EB  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 19993  15EC  3000               	movlw	0
 19994  15ED  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 19995  15EE  3000               	movlw	0
 19996  15EF  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 19997  15F0  01B4               	clrf	dwt_write8bitoffsetreg@regval^(0+128)
 19998  15F1  31A2  2226  3195   	fcall	_dwt_write8bitoffsetreg
 19999                           
 20000                           ;deca_device.c: 1657: dwt_write8bitoffsetreg(0x40020, 0x0, 1);
 20001  15F4  3000               	movlw	0
 20002  15F5  0141               	movlb	1	; select bank1
 20003  15F6  00AF               	movwf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128)
 20004  15F7  3004               	movlw	4
 20005  15F8  00AE               	movwf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128)
 20006  15F9  3000               	movlw	0
 20007  15FA  00AD               	movwf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128)
 20008  15FB  3020               	movlw	32
 20009  15FC  00AC               	movwf	dwt_write8bitoffsetreg@regFileID^(0+128)
 20010  15FD  3000               	movlw	0
 20011  15FE  00B3               	movwf	(dwt_write8bitoffsetreg@regOffset+3)^(0+128)
 20012  15FF  3000               	movlw	0
 20013  1600  00B2               	movwf	(dwt_write8bitoffsetreg@regOffset+2)^(0+128)
 20014  1601  3000               	movlw	0
 20015  1602  00B1               	movwf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128)
 20016  1603  3000               	movlw	0
 20017  1604  00B0               	movwf	dwt_write8bitoffsetreg@regOffset^(0+128)
 20018  1605  01B4               	clrf	dwt_write8bitoffsetreg@regval^(0+128)
 20019  1606  0AB4               	incf	dwt_write8bitoffsetreg@regval^(0+128),f
 20020  1607  31A2  2226  3195   	fcall	_dwt_write8bitoffsetreg
 20021                           
 20022                           ;deca_device.c: 1658: dwt_modify8bitoffsetreg(0x4000c, 0x2, -1, 0x1);
 20023  160A  3000               	movlw	0
 20024  160B  0141               	movlb	1	; select bank1
 20025  160C  00A3               	movwf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128)
 20026  160D  3004               	movlw	4
 20027  160E  00A2               	movwf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128)
 20028  160F  3000               	movlw	0
 20029  1610  00A1               	movwf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128)
 20030  1611  300C               	movlw	12
 20031  1612  00A0               	movwf	dwt_modify8bitoffsetreg@regFileID^(0+128)
 20032  1613  3000               	movlw	0
 20033  1614  00A7               	movwf	(dwt_modify8bitoffsetreg@regOffset+3)^(0+128)
 20034  1615  3000               	movlw	0
 20035  1616  00A6               	movwf	(dwt_modify8bitoffsetreg@regOffset+2)^(0+128)
 20036  1617  3000               	movlw	0
 20037  1618  00A5               	movwf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128)
 20038  1619  3002               	movlw	2
 20039  161A  00A4               	movwf	dwt_modify8bitoffsetreg@regOffset^(0+128)
 20040  161B  30FF               	movlw	255
 20041  161C  0140               	movlb	0	; select bank0
 20042  161D  00EE               	movwf	??_dwt_run_pgfcal
 20043  161E  086E               	movf	??_dwt_run_pgfcal,w
 20044  161F  0141               	movlb	1	; select bank1
 20045  1620  00A8               	movwf	dwt_modify8bitoffsetreg@_and^(0+128)
 20046  1621  01A9               	clrf	dwt_modify8bitoffsetreg@_or^(0+128)
 20047  1622  0AA9               	incf	dwt_modify8bitoffsetreg@_or^(0+128),f
 20048  1623  31A6  2643  3195   	fcall	_dwt_modify8bitoffsetreg
 20049                           
 20050                           ;deca_device.c: 1659: val = dwt_read32bitoffsetreg(0x40014, 0x0);
 20051  1626  3000               	movlw	0
 20052  1627  0141               	movlb	1	; select bank1
 20053  1628  00AE               	movwf	(dwt_read32bitoffsetreg@regFileID+3)^(0+128)
 20054  1629  3004               	movlw	4
 20055  162A  00AD               	movwf	(dwt_read32bitoffsetreg@regFileID+2)^(0+128)
 20056  162B  3000               	movlw	0
 20057  162C  00AC               	movwf	(dwt_read32bitoffsetreg@regFileID+1)^(0+128)
 20058  162D  3014               	movlw	20
 20059  162E  00AB               	movwf	dwt_read32bitoffsetreg@regFileID^(0+128)
 20060  162F  3000               	movlw	0
 20061  1630  00B2               	movwf	(dwt_read32bitoffsetreg@regOffset+3)^(0+128)
 20062  1631  3000               	movlw	0
 20063  1632  00B1               	movwf	(dwt_read32bitoffsetreg@regOffset+2)^(0+128)
 20064  1633  3000               	movlw	0
 20065  1634  00B0               	movwf	(dwt_read32bitoffsetreg@regOffset+1)^(0+128)
 20066  1635  3000               	movlw	0
 20067  1636  00AF               	movwf	dwt_read32bitoffsetreg@regOffset^(0+128)
 20068  1637  319A  22CF  3195   	fcall	_dwt_read32bitoffsetreg
 20069  163A  0141               	movlb	1	; select bank1
 20070  163B  082E               	movf	(?_dwt_read32bitoffsetreg+3)^(0+128),w
 20071  163C  00D1               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 20072  163D  082D               	movf	(?_dwt_read32bitoffsetreg+2)^(0+128),w
 20073  163E  00D0               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 20074  163F  082C               	movf	(?_dwt_read32bitoffsetreg+1)^(0+128),w
 20075  1640  00CF               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 20076  1641  082B               	movf	?_dwt_read32bitoffsetreg^(0+128),w
 20077  1642  00CE               	movwf	dwt_run_pgfcal@val^(0+128)
 20078                           
 20079                           ;deca_device.c: 1660: if (val == 0x1fffffff)
 20080  1643  0A4E               	incf	dwt_run_pgfcal@val^(0+128),w
 20081  1644  1D03               	skipz
 20082  1645  2E53               	goto	l8902
 20083  1646  0A4F               	incf	(dwt_run_pgfcal@val+1)^(0+128),w
 20084  1647  1D03               	skipz
 20085  1648  2E53               	goto	l8902
 20086  1649  0A50               	incf	(dwt_run_pgfcal@val+2)^(0+128),w
 20087  164A  301F               	movlw	31
 20088  164B  1903               	skipnz
 20089  164C  0651               	xorwf	(dwt_run_pgfcal@val+3)^(0+128),w
 20090  164D  1D03               	btfss	3,2
 20091  164E  2E53               	goto	l8902
 20092                           
 20093                           ;deca_device.c: 1661: {
 20094                           ;deca_device.c: 1663: result = (-1);
 20095  164F  30FF               	movlw	255
 20096  1650  00CC               	movwf	dwt_run_pgfcal@result^(0+128)
 20097  1651  30FF               	movlw	255
 20098  1652  00CD               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 20099  1653                     l8902:	
 20100                           
 20101                           ;deca_device.c: 1664: }
 20102                           ;deca_device.c: 1665: val = dwt_read32bitoffsetreg(0x4001c, 0x0);
 20103  1653  3000               	movlw	0
 20104  1654  00AE               	movwf	(dwt_read32bitoffsetreg@regFileID+3)^(0+128)
 20105  1655  3004               	movlw	4
 20106  1656  00AD               	movwf	(dwt_read32bitoffsetreg@regFileID+2)^(0+128)
 20107  1657  3000               	movlw	0
 20108  1658  00AC               	movwf	(dwt_read32bitoffsetreg@regFileID+1)^(0+128)
 20109  1659  301C               	movlw	28
 20110  165A  00AB               	movwf	dwt_read32bitoffsetreg@regFileID^(0+128)
 20111  165B  3000               	movlw	0
 20112  165C  00B2               	movwf	(dwt_read32bitoffsetreg@regOffset+3)^(0+128)
 20113  165D  3000               	movlw	0
 20114  165E  00B1               	movwf	(dwt_read32bitoffsetreg@regOffset+2)^(0+128)
 20115  165F  3000               	movlw	0
 20116  1660  00B0               	movwf	(dwt_read32bitoffsetreg@regOffset+1)^(0+128)
 20117  1661  3000               	movlw	0
 20118  1662  00AF               	movwf	dwt_read32bitoffsetreg@regOffset^(0+128)
 20119  1663  319A  22CF  3195   	fcall	_dwt_read32bitoffsetreg
 20120  1666  0141               	movlb	1	; select bank1
 20121  1667  082E               	movf	(?_dwt_read32bitoffsetreg+3)^(0+128),w
 20122  1668  00D1               	movwf	(dwt_run_pgfcal@val+3)^(0+128)
 20123  1669  082D               	movf	(?_dwt_read32bitoffsetreg+2)^(0+128),w
 20124  166A  00D0               	movwf	(dwt_run_pgfcal@val+2)^(0+128)
 20125  166B  082C               	movf	(?_dwt_read32bitoffsetreg+1)^(0+128),w
 20126  166C  00CF               	movwf	(dwt_run_pgfcal@val+1)^(0+128)
 20127  166D  082B               	movf	?_dwt_read32bitoffsetreg^(0+128),w
 20128  166E  00CE               	movwf	dwt_run_pgfcal@val^(0+128)
 20129                           
 20130                           ;deca_device.c: 1666: if (val == 0x1fffffff)
 20131  166F  0A4E               	incf	dwt_run_pgfcal@val^(0+128),w
 20132  1670  1D03               	skipz
 20133  1671  2E7F               	goto	l686
 20134  1672  0A4F               	incf	(dwt_run_pgfcal@val+1)^(0+128),w
 20135  1673  1D03               	skipz
 20136  1674  2E7F               	goto	l686
 20137  1675  0A50               	incf	(dwt_run_pgfcal@val+2)^(0+128),w
 20138  1676  301F               	movlw	31
 20139  1677  1903               	skipnz
 20140  1678  0651               	xorwf	(dwt_run_pgfcal@val+3)^(0+128),w
 20141  1679  1D03               	btfss	3,2
 20142  167A  2E7F               	goto	l686
 20143                           
 20144                           ;deca_device.c: 1667: {
 20145                           ;deca_device.c: 1669: result = (-1);
 20146  167B  30FF               	movlw	255
 20147  167C  00CC               	movwf	dwt_run_pgfcal@result^(0+128)
 20148  167D  30FF               	movlw	255
 20149  167E  00CD               	movwf	(dwt_run_pgfcal@result^(0+128)+1)
 20150  167F                     l686:	
 20151                           
 20152                           ;deca_device.c: 1670: }
 20153                           ;deca_device.c: 1672: return result;
 20154  167F  084D               	movf	(dwt_run_pgfcal@result+1)^(0+128),w
 20155  1680  00C6               	movwf	(?_dwt_run_pgfcal+1)^(0+128)
 20156  1681  084C               	movf	dwt_run_pgfcal@result^(0+128),w
 20157  1682  00C5               	movwf	?_dwt_run_pgfcal^(0+128)
 20158  1683  0008               	return
 20159  1684                     __end_of_dwt_run_pgfcal:	
 20160                           
 20161                           	psect	text51
 20162  2226                     __ptext51:	
 20163 ;; *************** function _dwt_write8bitoffsetreg *****************
 20164 ;; Defined at:
 20165 ;;		line 515 in file "deca_device.c"
 20166 ;; Parameters:    Size  Location     Type
 20167 ;;  regFileID       4   12[BANK1 ] unsigned long 
 20168 ;;  regOffset       4   16[BANK1 ] unsigned long 
 20169 ;;  regval          1   20[BANK1 ] unsigned char 
 20170 ;; Auto vars:     Size  Location     Type
 20171 ;;		None
 20172 ;; Return value:  Size  Location     Type
 20173 ;;                  1    wreg      void 
 20174 ;; Registers used:
 20175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20176 ;; Tracked objects:
 20177 ;;		On entry : 0/0
 20178 ;;		On exit  : 0/0
 20179 ;;		Unchanged: 0/0
 20180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20181 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20184 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20185 ;;Total ram usage:        9 bytes
 20186 ;; Hardware stack levels used:    1
 20187 ;; Hardware stack levels required when called:    9
 20188 ;; This function calls:
 20189 ;;		_dwt_writetodevice
 20190 ;; This function is called by:
 20191 ;;		_dwt_initialise
 20192 ;;		_dwt_configuretxrf
 20193 ;;		_dwt_configure
 20194 ;;		_dwt_run_pgfcal
 20195 ;;		_dwt_setplenfine
 20196 ;;		_dwt_restoreconfig
 20197 ;;		_dwt_aon_read
 20198 ;;		_dwt_aon_write
 20199 ;;		_dwt_entersleep
 20200 ;;		_dwt_configuresleep
 20201 ;;		_dwt_clearaonconfig
 20202 ;;		_dwt_configciadiag
 20203 ;;		_dwt_enableautoack
 20204 ;;		_dwt_isr
 20205 ;;		_dwt_configeventcounters
 20206 ;;		_dwt_softreset
 20207 ;;		_dwt_setxtaltrim
 20208 ;;		_dwt_readtempvbat
 20209 ;;		_dwt_calcpgcount
 20210 ;;		_dwt_wait_aes_poll
 20211 ;;		_dwt_do_aes
 20212 ;; This function uses a non-reentrant model
 20213 ;;
 20214                           
 20215                           
 20216                           ;psect for function _dwt_write8bitoffsetreg
 20217  2226                     _dwt_write8bitoffsetreg:	
 20218                           
 20219                           ;deca_device.c: 519: dwt_writetodevice(regFileID, regOffset, 1, &regval);
 20220                           
 20221                           ;incstack = 0
 20222                           ; Regs used in _dwt_write8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20223  2226  0141               	movlb	1	; select bank1
 20224  2227  082F               	movf	(dwt_write8bitoffsetreg@regFileID+3)^(0+128),w
 20225  2228  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 20226  2229  082E               	movf	(dwt_write8bitoffsetreg@regFileID+2)^(0+128),w
 20227  222A  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 20228  222B  082D               	movf	(dwt_write8bitoffsetreg@regFileID+1)^(0+128),w
 20229  222C  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 20230  222D  082C               	movf	dwt_write8bitoffsetreg@regFileID^(0+128),w
 20231  222E  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 20232  222F  0831               	movf	(dwt_write8bitoffsetreg@regOffset+1)^(0+128),w
 20233  2230  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 20234  2231  0830               	movf	dwt_write8bitoffsetreg@regOffset^(0+128),w
 20235  2232  00A4               	movwf	dwt_writetodevice@index^(0+128)
 20236  2233  3000               	movlw	0
 20237  2234  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 20238  2235  3000               	movlw	0
 20239  2236  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 20240  2237  3000               	movlw	0
 20241  2238  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 20242  2239  3001               	movlw	1
 20243  223A  00A6               	movwf	dwt_writetodevice@length^(0+128)
 20244  223B  30B4               	movlw	low dwt_write8bitoffsetreg@regval
 20245  223C  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 20246  223D  3000               	movlw	high dwt_write8bitoffsetreg@regval
 20247  223E  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 20248  223F  31A6  260C         	fcall	_dwt_writetodevice
 20249  2241  0008               	return
 20250  2242                     __end_of_dwt_write8bitoffsetreg:	
 20251                           
 20252                           	psect	text52
 20253  2490                     __ptext52:	
 20254 ;; *************** function _dwt_read8bitoffsetreg *****************
 20255 ;; Defined at:
 20256 ;;		line 446 in file "deca_device.c"
 20257 ;; Parameters:    Size  Location     Type
 20258 ;;  regFileID       4    0[BANK1 ] unsigned long 
 20259 ;;  regOffset       4    4[BANK1 ] unsigned long 
 20260 ;; Auto vars:     Size  Location     Type
 20261 ;;  regval          1   75[BANK0 ] unsigned char 
 20262 ;; Return value:  Size  Location     Type
 20263 ;;                  1    wreg      unsigned char 
 20264 ;; Registers used:
 20265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20266 ;; Tracked objects:
 20267 ;;		On entry : 0/0
 20268 ;;		On exit  : 0/0
 20269 ;;		Unchanged: 0/0
 20270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20271 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20274 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20275 ;;Total ram usage:        9 bytes
 20276 ;; Hardware stack levels used:    1
 20277 ;; Hardware stack levels required when called:    8
 20278 ;; This function calls:
 20279 ;;		_dwt_xfer3000
 20280 ;; This function is called by:
 20281 ;;		_dwt_configuretxrf
 20282 ;;		_dwt_configure
 20283 ;;		_dwt_run_pgfcal
 20284 ;;		_dwt_writetxfctrl
 20285 ;;		_dwt_starttx
 20286 ;;		_dwt_calcbandwidthadj
 20287 ;;		_dwt_readpgdelay
 20288 ;;		_dwt_aon_read
 20289 ;;		_dwt_checkirq
 20290 ;;		_dwt_isr
 20291 ;;		_dwt_rxenable
 20292 ;;		_dwt_readtempvbat
 20293 ;;		_dwt_readwakeuptemp
 20294 ;;		_dwt_readwakeupvbat
 20295 ;;		_dwt_calcpgcount
 20296 ;;		_dwt_wait_aes_poll
 20297 ;; This function uses a non-reentrant model
 20298 ;;
 20299                           
 20300                           
 20301                           ;psect for function _dwt_read8bitoffsetreg
 20302  2490                     _dwt_read8bitoffsetreg:	
 20303                           
 20304                           ;deca_device.c: 448: uint8_t regval;
 20305                           ;deca_device.c: 449: dwt_xfer3000(regFileID, regOffset, 1, &regval, DW3000_SPI_RD_BIT);
 20306                           
 20307                           ;incstack = 0
 20308                           ; Regs used in _dwt_read8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20309  2490  0141               	movlb	1	; select bank1
 20310  2491  0823               	movf	(dwt_read8bitoffsetreg@regFileID+3)^(0+128),w
 20311  2492  0140               	movlb	0	; select bank0
 20312  2493  00CD               	movwf	dwt_xfer3000@regFileID+3
 20313  2494  0141               	movlb	1	; select bank1
 20314  2495  0822               	movf	(dwt_read8bitoffsetreg@regFileID+2)^(0+128),w
 20315  2496  0140               	movlb	0	; select bank0
 20316  2497  00CC               	movwf	dwt_xfer3000@regFileID+2
 20317  2498  0141               	movlb	1	; select bank1
 20318  2499  0821               	movf	(dwt_read8bitoffsetreg@regFileID+1)^(0+128),w
 20319  249A  0140               	movlb	0	; select bank0
 20320  249B  00CB               	movwf	dwt_xfer3000@regFileID+1
 20321  249C  0141               	movlb	1	; select bank1
 20322  249D  0820               	movf	dwt_read8bitoffsetreg@regFileID^(0+128),w
 20323  249E  0140               	movlb	0	; select bank0
 20324  249F  00CA               	movwf	dwt_xfer3000@regFileID
 20325  24A0  0141               	movlb	1	; select bank1
 20326  24A1  0825               	movf	(dwt_read8bitoffsetreg@regOffset+1)^(0+128),w
 20327  24A2  0140               	movlb	0	; select bank0
 20328  24A3  00CF               	movwf	dwt_xfer3000@indx+1
 20329  24A4  0141               	movlb	1	; select bank1
 20330  24A5  0824               	movf	dwt_read8bitoffsetreg@regOffset^(0+128),w
 20331  24A6  0140               	movlb	0	; select bank0
 20332  24A7  00CE               	movwf	dwt_xfer3000@indx
 20333  24A8  3000               	movlw	0
 20334  24A9  00D3               	movwf	dwt_xfer3000@length+3
 20335  24AA  3000               	movlw	0
 20336  24AB  00D2               	movwf	dwt_xfer3000@length+2
 20337  24AC  3000               	movlw	0
 20338  24AD  00D1               	movwf	dwt_xfer3000@length+1
 20339  24AE  3001               	movlw	1
 20340  24AF  00D0               	movwf	dwt_xfer3000@length
 20341  24B0  306B               	movlw	low dwt_read8bitoffsetreg@regval
 20342  24B1  00D4               	movwf	dwt_xfer3000@buffer
 20343  24B2  3000               	movlw	high dwt_read8bitoffsetreg@regval
 20344  24B3  00D5               	movwf	dwt_xfer3000@buffer+1
 20345  24B4  3000               	movlw	0
 20346  24B5  00D6               	movwf	dwt_xfer3000@mode
 20347  24B6  00D7               	movwf	dwt_xfer3000@mode+1
 20348  24B7  3189  216D         	fcall	_dwt_xfer3000
 20349                           
 20350                           ;deca_device.c: 452: return regval ;
 20351  24B9  0140               	movlb	0	; select bank0
 20352  24BA  086B               	movf	dwt_read8bitoffsetreg@regval,w
 20353  24BB  0008               	return
 20354  24BC                     __end_of_dwt_read8bitoffsetreg:	
 20355                           
 20356                           	psect	text53
 20357  1ACF                     __ptext53:	
 20358 ;; *************** function _dwt_read32bitoffsetreg *****************
 20359 ;; Defined at:
 20360 ;;		line 394 in file "deca_device.c"
 20361 ;; Parameters:    Size  Location     Type
 20362 ;;  regFileID       4   11[BANK1 ] unsigned long 
 20363 ;;  regOffset       4   15[BANK1 ] unsigned long 
 20364 ;; Auto vars:     Size  Location     Type
 20365 ;;  buffer          4   27[BANK1 ] unsigned char [4]
 20366 ;;  regval          4   31[BANK1 ] unsigned long 
 20367 ;;  j               2   35[BANK1 ] int 
 20368 ;; Return value:  Size  Location     Type
 20369 ;;                  4   11[BANK1 ] unsigned long 
 20370 ;; Registers used:
 20371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20372 ;; Tracked objects:
 20373 ;;		On entry : 0/0
 20374 ;;		On exit  : 0/0
 20375 ;;		Unchanged: 0/0
 20376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20377 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20378 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20379 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20380 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20381 ;;Total ram usage:       26 bytes
 20382 ;; Hardware stack levels used:    1
 20383 ;; Hardware stack levels required when called:    9
 20384 ;; This function calls:
 20385 ;;		_dwt_readfromdevice
 20386 ;; This function is called by:
 20387 ;;		_dwt_readdevid
 20388 ;;		_dwt_configure
 20389 ;;		_dwt_run_pgfcal
 20390 ;;		__dwt_otpread
 20391 ;;		_dwt_starttx
 20392 ;;		_dwt_setlnapamode
 20393 ;;		_dwt_readtxtimestamphi32
 20394 ;;		_dwt_readtxtimestamplo32
 20395 ;;		_dwt_readrxtimestamphi32
 20396 ;;		_dwt_readrxtimestamplo32
 20397 ;;		_dwt_readsystimestamphi32
 20398 ;;		__dwt_otpprogword32
 20399 ;;		_dwt_setrxaftertxdelay
 20400 ;;		_dwt_isr
 20401 ;;		_dwt_readeventcounters
 20402 ;; This function uses a non-reentrant model
 20403 ;;
 20404                           
 20405                           
 20406                           ;psect for function _dwt_read32bitoffsetreg
 20407  1ACF                     _dwt_read32bitoffsetreg:	
 20408                           
 20409                           ;deca_device.c: 396: int j ;
 20410                           ;deca_device.c: 397: uint32_t regval = 0 ;
 20411                           
 20412                           ;incstack = 0
 20413                           ; Regs used in _dwt_read32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20414  1ACF  3000               	movlw	0
 20415  1AD0  0141               	movlb	1	; select bank1
 20416  1AD1  00C2               	movwf	(dwt_read32bitoffsetreg@regval+3)^(0+128)
 20417  1AD2  3000               	movlw	0
 20418  1AD3  00C1               	movwf	(dwt_read32bitoffsetreg@regval+2)^(0+128)
 20419  1AD4  3000               	movlw	0
 20420  1AD5  00C0               	movwf	(dwt_read32bitoffsetreg@regval+1)^(0+128)
 20421  1AD6  3000               	movlw	0
 20422  1AD7  00BF               	movwf	dwt_read32bitoffsetreg@regval^(0+128)
 20423                           
 20424                           ;deca_device.c: 398: uint8_t buffer[4] ;
 20425                           ;deca_device.c: 400: dwt_readfromdevice(regFileID,regOffset,4,buffer);
 20426  1AD8  082E               	movf	(dwt_read32bitoffsetreg@regFileID+3)^(0+128),w
 20427  1AD9  00A3               	movwf	(dwt_readfromdevice@regFileID+3)^(0+128)
 20428  1ADA  082D               	movf	(dwt_read32bitoffsetreg@regFileID+2)^(0+128),w
 20429  1ADB  00A2               	movwf	(dwt_readfromdevice@regFileID+2)^(0+128)
 20430  1ADC  082C               	movf	(dwt_read32bitoffsetreg@regFileID+1)^(0+128),w
 20431  1ADD  00A1               	movwf	(dwt_readfromdevice@regFileID+1)^(0+128)
 20432  1ADE  082B               	movf	dwt_read32bitoffsetreg@regFileID^(0+128),w
 20433  1ADF  00A0               	movwf	dwt_readfromdevice@regFileID^(0+128)
 20434  1AE0  0830               	movf	(dwt_read32bitoffsetreg@regOffset+1)^(0+128),w
 20435  1AE1  00A5               	movwf	(dwt_readfromdevice@index+1)^(0+128)
 20436  1AE2  082F               	movf	dwt_read32bitoffsetreg@regOffset^(0+128),w
 20437  1AE3  00A4               	movwf	dwt_readfromdevice@index^(0+128)
 20438  1AE4  3000               	movlw	0
 20439  1AE5  00A9               	movwf	(dwt_readfromdevice@length+3)^(0+128)
 20440  1AE6  3000               	movlw	0
 20441  1AE7  00A8               	movwf	(dwt_readfromdevice@length+2)^(0+128)
 20442  1AE8  3000               	movlw	0
 20443  1AE9  00A7               	movwf	(dwt_readfromdevice@length+1)^(0+128)
 20444  1AEA  3004               	movlw	4
 20445  1AEB  00A6               	movwf	dwt_readfromdevice@length^(0+128)
 20446  1AEC  30BB               	movlw	(low (dwt_read32bitoffsetreg@buffer| 0))& (0+255)
 20447  1AED  00B3               	movwf	??_dwt_read32bitoffsetreg^(0+128)
 20448  1AEE  0833               	movf	??_dwt_read32bitoffsetreg^(0+128),w
 20449  1AEF  00AA               	movwf	dwt_readfromdevice@buffer^(0+128)
 20450  1AF0  31A5  25D8  319A   	fcall	_dwt_readfromdevice
 20451                           
 20452                           ;deca_device.c: 403: for (j = 3 ; j >= 0 ; j --)
 20453  1AF3  3003               	movlw	3
 20454  1AF4  0141               	movlb	1	; select bank1
 20455  1AF5  00C3               	movwf	dwt_read32bitoffsetreg@j^(0+128)
 20456  1AF6  3000               	movlw	0
 20457  1AF7  00C4               	movwf	(dwt_read32bitoffsetreg@j^(0+128)+1)
 20458  1AF8  1BC4               	btfsc	(dwt_read32bitoffsetreg@j+1)^(0+128),7
 20459  1AF9  2B28               	goto	l8774
 20460  1AFA                     l8768:	
 20461                           
 20462                           ;deca_device.c: 404: {
 20463                           ;deca_device.c: 405: regval = (regval << 8) + buffer[j] ;
 20464  1AFA  0843               	movf	dwt_read32bitoffsetreg@j^(0+128),w
 20465  1AFB  3EBB               	addlw	(low (dwt_read32bitoffsetreg@buffer| 0))& (0+255)
 20466  1AFC  0086               	movwf	6
 20467  1AFD  0187               	clrf	7
 20468  1AFE  0801               	movf	1,w
 20469  1AFF  00B3               	movwf	??_dwt_read32bitoffsetreg^(0+128)
 20470  1B00  01B4               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+1)
 20471  1B01  01B5               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+2)
 20472  1B02  01B6               	clrf	(??_dwt_read32bitoffsetreg^(0+128)+3)
 20473  1B03  083F               	movf	dwt_read32bitoffsetreg@regval^(0+128),w
 20474  1B04  00B7               	movwf	(??_dwt_read32bitoffsetreg+4)^(0+128)
 20475  1B05  0840               	movf	(dwt_read32bitoffsetreg@regval+1)^(0+128),w
 20476  1B06  00B8               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+1)
 20477  1B07  0841               	movf	(dwt_read32bitoffsetreg@regval+2)^(0+128),w
 20478  1B08  00B9               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+2)
 20479  1B09  0842               	movf	(dwt_read32bitoffsetreg@regval+3)^(0+128),w
 20480  1B0A  00BA               	movwf	((??_dwt_read32bitoffsetreg+4)^(0+128)+3)
 20481  1B0B  3008               	movlw	8
 20482  1B0C                     u9335:	
 20483  1B0C  35B7               	lslf	(??_dwt_read32bitoffsetreg+4)^(0+128),f
 20484  1B0D  0DB8               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+1),f
 20485  1B0E  0DB9               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+2),f
 20486  1B0F  0DBA               	rlf	((??_dwt_read32bitoffsetreg+4)^(0+128)+3),f
 20487  1B10  0B89               	decfsz	9,f
 20488  1B11  2B0C               	goto	u9335
 20489  1B12  0837               	movf	(??_dwt_read32bitoffsetreg+4)^(0+128),w
 20490  1B13  07B3               	addwf	??_dwt_read32bitoffsetreg^(0+128),f
 20491  1B14  0838               	movf	(??_dwt_read32bitoffsetreg+5)^(0+128),w
 20492  1B15  3DB4               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+1),f
 20493  1B16  0839               	movf	(??_dwt_read32bitoffsetreg+6)^(0+128),w
 20494  1B17  3DB5               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+2),f
 20495  1B18  083A               	movf	(??_dwt_read32bitoffsetreg+7)^(0+128),w
 20496  1B19  3DB6               	addwfc	(??_dwt_read32bitoffsetreg^(0+128)+3),f
 20497  1B1A  0836               	movf	(??_dwt_read32bitoffsetreg+3)^(0+128),w
 20498  1B1B  00C2               	movwf	(dwt_read32bitoffsetreg@regval+3)^(0+128)
 20499  1B1C  0835               	movf	(??_dwt_read32bitoffsetreg+2)^(0+128),w
 20500  1B1D  00C1               	movwf	(dwt_read32bitoffsetreg@regval+2)^(0+128)
 20501  1B1E  0834               	movf	(??_dwt_read32bitoffsetreg+1)^(0+128),w
 20502  1B1F  00C0               	movwf	(dwt_read32bitoffsetreg@regval+1)^(0+128)
 20503  1B20  0833               	movf	??_dwt_read32bitoffsetreg^(0+128),w
 20504  1B21  00BF               	movwf	dwt_read32bitoffsetreg@regval^(0+128)
 20505  1B22  30FF               	movlw	255
 20506  1B23  07C3               	addwf	dwt_read32bitoffsetreg@j^(0+128),f
 20507  1B24  30FF               	movlw	255
 20508  1B25  3DC4               	addwfc	(dwt_read32bitoffsetreg@j+1)^(0+128),f
 20509  1B26  1FC4               	btfss	(dwt_read32bitoffsetreg@j+1)^(0+128),7
 20510  1B27  2AFA               	goto	l8768
 20511  1B28                     l8774:	
 20512                           
 20513                           ;deca_device.c: 406: }
 20514                           ;deca_device.c: 408: return (regval);
 20515  1B28  0842               	movf	(dwt_read32bitoffsetreg@regval+3)^(0+128),w
 20516  1B29  00AE               	movwf	(?_dwt_read32bitoffsetreg+3)^(0+128)
 20517  1B2A  0841               	movf	(dwt_read32bitoffsetreg@regval+2)^(0+128),w
 20518  1B2B  00AD               	movwf	(?_dwt_read32bitoffsetreg+2)^(0+128)
 20519  1B2C  0840               	movf	(dwt_read32bitoffsetreg@regval+1)^(0+128),w
 20520  1B2D  00AC               	movwf	(?_dwt_read32bitoffsetreg+1)^(0+128)
 20521  1B2E  083F               	movf	dwt_read32bitoffsetreg@regval^(0+128),w
 20522  1B2F  00AB               	movwf	?_dwt_read32bitoffsetreg^(0+128)
 20523  1B30  0008               	return
 20524  1B31                     __end_of_dwt_read32bitoffsetreg:	
 20525                           
 20526                           	psect	text54
 20527  2643                     __ptext54:	
 20528 ;; *************** function _dwt_modify8bitoffsetreg *****************
 20529 ;; Defined at:
 20530 ;;		line 576 in file "deca_device.c"
 20531 ;; Parameters:    Size  Location     Type
 20532 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 20533 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 20534 ;;  _and            1    8[BANK1 ] const unsigned char 
 20535 ;;  _or             1    9[BANK1 ] const unsigned char 
 20536 ;; Auto vars:     Size  Location     Type
 20537 ;;  buf             2   76[BANK0 ] unsigned char [2]
 20538 ;; Return value:  Size  Location     Type
 20539 ;;                  1    wreg      void 
 20540 ;; Registers used:
 20541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20542 ;; Tracked objects:
 20543 ;;		On entry : 0/0
 20544 ;;		On exit  : 0/0
 20545 ;;		Unchanged: 0/0
 20546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20547 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20548 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20550 ;;      Totals:         0       3      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20551 ;;Total ram usage:       13 bytes
 20552 ;; Hardware stack levels used:    1
 20553 ;; Hardware stack levels required when called:    8
 20554 ;; This function calls:
 20555 ;;		_dwt_xfer3000
 20556 ;; This function is called by:
 20557 ;;		_dwt_setdwstate
 20558 ;;		_dwt_configure
 20559 ;;		_dwt_run_pgfcal
 20560 ;;		_dwt_calcbandwidthadj
 20561 ;;		_dwt_enablespicrccheck
 20562 ;;		_dwt_configurestsloadiv
 20563 ;;		_dwt_configureframefilter
 20564 ;;		_dwt_entersleep
 20565 ;;		_dwt_calibratesleepcnt
 20566 ;;		_dwt_configciadiag
 20567 ;;		_dwt_softreset
 20568 ;;		_dwt_repeated_frames
 20569 ;;		_dwt_readtempvbat
 20570 ;;		_dwt_calcpgcount
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           
 20575                           ;psect for function _dwt_modify8bitoffsetreg
 20576  2643                     _dwt_modify8bitoffsetreg:	
 20577                           
 20578                           ;deca_device.c: 578: uint8_t buf[2];
 20579                           ;deca_device.c: 579: buf[0] = _and;
 20580                           
 20581                           ;incstack = 0
 20582                           ; Regs used in _dwt_modify8bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20583  2643  0141               	movlb	1	; select bank1
 20584  2644  0828               	movf	dwt_modify8bitoffsetreg@_and^(0+128),w
 20585  2645  0140               	movlb	0	; select bank0
 20586  2646  00EB               	movwf	??_dwt_modify8bitoffsetreg
 20587  2647  086B               	movf	??_dwt_modify8bitoffsetreg,w
 20588  2648  00EC               	movwf	dwt_modify8bitoffsetreg@buf
 20589                           
 20590                           ;deca_device.c: 580: buf[1] = _or;
 20591  2649  0141               	movlb	1	; select bank1
 20592  264A  0829               	movf	dwt_modify8bitoffsetreg@_or^(0+128),w
 20593  264B  0140               	movlb	0	; select bank0
 20594  264C  00EB               	movwf	??_dwt_modify8bitoffsetreg
 20595  264D  086B               	movf	??_dwt_modify8bitoffsetreg,w
 20596  264E  00ED               	movwf	dwt_modify8bitoffsetreg@buf+1
 20597                           
 20598                           ;deca_device.c: 581: dwt_xfer3000(regFileID, regOffset, sizeof(buf),buf, DW3000_SPI_AND_
      +                          OR_8);
 20599  264F  0141               	movlb	1	; select bank1
 20600  2650  0823               	movf	(dwt_modify8bitoffsetreg@regFileID+3)^(0+128),w
 20601  2651  0140               	movlb	0	; select bank0
 20602  2652  00CD               	movwf	dwt_xfer3000@regFileID+3
 20603  2653  0141               	movlb	1	; select bank1
 20604  2654  0822               	movf	(dwt_modify8bitoffsetreg@regFileID+2)^(0+128),w
 20605  2655  0140               	movlb	0	; select bank0
 20606  2656  00CC               	movwf	dwt_xfer3000@regFileID+2
 20607  2657  0141               	movlb	1	; select bank1
 20608  2658  0821               	movf	(dwt_modify8bitoffsetreg@regFileID+1)^(0+128),w
 20609  2659  0140               	movlb	0	; select bank0
 20610  265A  00CB               	movwf	dwt_xfer3000@regFileID+1
 20611  265B  0141               	movlb	1	; select bank1
 20612  265C  0820               	movf	dwt_modify8bitoffsetreg@regFileID^(0+128),w
 20613  265D  0140               	movlb	0	; select bank0
 20614  265E  00CA               	movwf	dwt_xfer3000@regFileID
 20615  265F  0141               	movlb	1	; select bank1
 20616  2660  0825               	movf	(dwt_modify8bitoffsetreg@regOffset+1)^(0+128),w
 20617  2661  0140               	movlb	0	; select bank0
 20618  2662  00CF               	movwf	dwt_xfer3000@indx+1
 20619  2663  0141               	movlb	1	; select bank1
 20620  2664  0824               	movf	dwt_modify8bitoffsetreg@regOffset^(0+128),w
 20621  2665  0140               	movlb	0	; select bank0
 20622  2666  00CE               	movwf	dwt_xfer3000@indx
 20623  2667  3000               	movlw	0
 20624  2668  00D3               	movwf	dwt_xfer3000@length+3
 20625  2669  3000               	movlw	0
 20626  266A  00D2               	movwf	dwt_xfer3000@length+2
 20627  266B  3000               	movlw	0
 20628  266C  00D1               	movwf	dwt_xfer3000@length+1
 20629  266D  3002               	movlw	2
 20630  266E  00D0               	movwf	dwt_xfer3000@length
 20631  266F  306C               	movlw	low dwt_modify8bitoffsetreg@buf
 20632  2670  00D4               	movwf	dwt_xfer3000@buffer
 20633  2671  3000               	movlw	high dwt_modify8bitoffsetreg@buf
 20634  2672  00D5               	movwf	dwt_xfer3000@buffer+1
 20635  2673  3001               	movlw	1
 20636  2674  00D6               	movwf	dwt_xfer3000@mode
 20637  2675  3080               	movlw	128
 20638  2676  00D7               	movwf	dwt_xfer3000@mode+1
 20639  2677  3189  216D         	fcall	_dwt_xfer3000
 20640  2679  0008               	return
 20641  267A                     __end_of_dwt_modify8bitoffsetreg:	
 20642                           
 20643                           	psect	text55
 20644  26B1                     __ptext55:	
 20645 ;; *************** function _dwt_read16bitoffsetreg *****************
 20646 ;; Defined at:
 20647 ;;		line 423 in file "deca_device.c"
 20648 ;; Parameters:    Size  Location     Type
 20649 ;;  regFileID       4   11[BANK1 ] unsigned long 
 20650 ;;  regOffset       4   15[BANK1 ] unsigned long 
 20651 ;; Auto vars:     Size  Location     Type
 20652 ;;  buffer          2   21[BANK1 ] unsigned char [2]
 20653 ;;  regval          2   19[BANK1 ] unsigned int 
 20654 ;; Return value:  Size  Location     Type
 20655 ;;                  2   11[BANK1 ] unsigned int 
 20656 ;; Registers used:
 20657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20658 ;; Tracked objects:
 20659 ;;		On entry : 0/0
 20660 ;;		On exit  : 0/0
 20661 ;;		Unchanged: 0/0
 20662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20663 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20664 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20665 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20666 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20667 ;;Total ram usage:       17 bytes
 20668 ;; Hardware stack levels used:    1
 20669 ;; Hardware stack levels required when called:    9
 20670 ;; This function calls:
 20671 ;;		_dwt_readfromdevice
 20672 ;; This function is called by:
 20673 ;;		_dwt_pgf_cal
 20674 ;;		_dwt_checkidlerc
 20675 ;;		_dwt_restoreconfig
 20676 ;;		_dwt_readclockoffset
 20677 ;;		_dwt_readstsquality
 20678 ;;		_dwt_readstsstatus
 20679 ;;		_dwt_readpdoa
 20680 ;;		_dwt_isr
 20681 ;;		_dwt_readtempvbat
 20682 ;;		_dwt_calcpgcount
 20683 ;; This function uses a non-reentrant model
 20684 ;;
 20685                           
 20686                           
 20687                           ;psect for function _dwt_read16bitoffsetreg
 20688  26B1                     _dwt_read16bitoffsetreg:	
 20689                           
 20690                           ;deca_device.c: 425: uint16_t regval = 0 ;
 20691                           
 20692                           ;incstack = 0
 20693                           ; Regs used in _dwt_read16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20694  26B1  0141               	movlb	1	; select bank1
 20695  26B2  01B3               	clrf	dwt_read16bitoffsetreg@regval^(0+128)
 20696  26B3  01B4               	clrf	(dwt_read16bitoffsetreg@regval+1)^(0+128)
 20697                           
 20698                           ;deca_device.c: 426: uint8_t buffer[2] ;
 20699                           ;deca_device.c: 428: dwt_readfromdevice(regFileID,regOffset,2,buffer);
 20700  26B4  082E               	movf	(dwt_read16bitoffsetreg@regFileID+3)^(0+128),w
 20701  26B5  00A3               	movwf	(dwt_readfromdevice@regFileID+3)^(0+128)
 20702  26B6  082D               	movf	(dwt_read16bitoffsetreg@regFileID+2)^(0+128),w
 20703  26B7  00A2               	movwf	(dwt_readfromdevice@regFileID+2)^(0+128)
 20704  26B8  082C               	movf	(dwt_read16bitoffsetreg@regFileID+1)^(0+128),w
 20705  26B9  00A1               	movwf	(dwt_readfromdevice@regFileID+1)^(0+128)
 20706  26BA  082B               	movf	dwt_read16bitoffsetreg@regFileID^(0+128),w
 20707  26BB  00A0               	movwf	dwt_readfromdevice@regFileID^(0+128)
 20708  26BC  0830               	movf	(dwt_read16bitoffsetreg@regOffset+1)^(0+128),w
 20709  26BD  00A5               	movwf	(dwt_readfromdevice@index+1)^(0+128)
 20710  26BE  082F               	movf	dwt_read16bitoffsetreg@regOffset^(0+128),w
 20711  26BF  00A4               	movwf	dwt_readfromdevice@index^(0+128)
 20712  26C0  3000               	movlw	0
 20713  26C1  00A9               	movwf	(dwt_readfromdevice@length+3)^(0+128)
 20714  26C2  3000               	movlw	0
 20715  26C3  00A8               	movwf	(dwt_readfromdevice@length+2)^(0+128)
 20716  26C4  3000               	movlw	0
 20717  26C5  00A7               	movwf	(dwt_readfromdevice@length+1)^(0+128)
 20718  26C6  3002               	movlw	2
 20719  26C7  00A6               	movwf	dwt_readfromdevice@length^(0+128)
 20720  26C8  30B5               	movlw	(low (dwt_read16bitoffsetreg@buffer| 0))& (0+255)
 20721  26C9  0140               	movlb	0	; select bank0
 20722  26CA  00EB               	movwf	??_dwt_read16bitoffsetreg
 20723  26CB  086B               	movf	??_dwt_read16bitoffsetreg,w
 20724  26CC  0141               	movlb	1	; select bank1
 20725  26CD  00AA               	movwf	dwt_readfromdevice@buffer^(0+128)
 20726  26CE  31A5  25D8         	fcall	_dwt_readfromdevice
 20727                           
 20728                           ;deca_device.c: 430: regval = ((uint16_t)buffer[1] << 8) + buffer[0] ;
 20729  26D0  0141               	movlb	1	; select bank1
 20730  26D1  0835               	movf	dwt_read16bitoffsetreg@buffer^(0+128),w
 20731  26D2  0140               	movlb	0	; select bank0
 20732  26D3  00EB               	movwf	??_dwt_read16bitoffsetreg
 20733  26D4  01EC               	clrf	??_dwt_read16bitoffsetreg+1
 20734  26D5  0141               	movlb	1	; select bank1
 20735  26D6  0836               	movf	(dwt_read16bitoffsetreg@buffer^(0+128)+1),w
 20736  26D7  0140               	movlb	0	; select bank0
 20737  26D8  00ED               	movwf	??_dwt_read16bitoffsetreg+2
 20738  26D9  01EE               	clrf	??_dwt_read16bitoffsetreg+3
 20739  26DA  086D               	movf	??_dwt_read16bitoffsetreg+2,w
 20740  26DB  00EE               	movwf	??_dwt_read16bitoffsetreg+3
 20741  26DC  01ED               	clrf	??_dwt_read16bitoffsetreg+2
 20742  26DD  086B               	movf	??_dwt_read16bitoffsetreg,w
 20743  26DE  076D               	addwf	??_dwt_read16bitoffsetreg+2,w
 20744  26DF  0141               	movlb	1	; select bank1
 20745  26E0  00B3               	movwf	dwt_read16bitoffsetreg@regval^(0+128)
 20746  26E1  0140               	movlb	0	; select bank0
 20747  26E2  086C               	movf	??_dwt_read16bitoffsetreg+1,w
 20748  26E3  3D6E               	addwfc	??_dwt_read16bitoffsetreg+3,w
 20749  26E4  0141               	movlb	1	; select bank1
 20750  26E5  00B4               	movwf	(dwt_read16bitoffsetreg@regval+1)^(0+128)
 20751                           
 20752                           ;deca_device.c: 431: return regval ;
 20753  26E6  0834               	movf	(dwt_read16bitoffsetreg@regval+1)^(0+128),w
 20754  26E7  00AC               	movwf	(?_dwt_read16bitoffsetreg+1)^(0+128)
 20755  26E8  0833               	movf	dwt_read16bitoffsetreg@regval^(0+128),w
 20756  26E9  00AB               	movwf	?_dwt_read16bitoffsetreg^(0+128)
 20757  26EA  0008               	return
 20758  26EB                     __end_of_dwt_read16bitoffsetreg:	
 20759                           
 20760                           	psect	text56
 20761  25D8                     __ptext56:	
 20762 ;; *************** function _dwt_readfromdevice *****************
 20763 ;; Defined at:
 20764 ;;		line 372 in file "deca_device.c"
 20765 ;; Parameters:    Size  Location     Type
 20766 ;;  regFileID       4    0[BANK1 ] unsigned long 
 20767 ;;  index           2    4[BANK1 ] unsigned int 
 20768 ;;  length          4    6[BANK1 ] unsigned long 
 20769 ;;  buffer          1   10[BANK1 ] PTR unsigned char 
 20770 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), dwt_readcarrierintegrator@buffer(3), dwt_read16bitoffse
      +treg@buffer(2), 
 20771 ;;		 -> dwt_read32bitoffsetreg@buffer(4), 
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;		None
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  1    wreg      void 
 20776 ;; Registers used:
 20777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20778 ;; Tracked objects:
 20779 ;;		On entry : 0/0
 20780 ;;		On exit  : 0/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20783 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20786 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20787 ;;Total ram usage:       11 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:    8
 20790 ;; This function calls:
 20791 ;;		_dwt_xfer3000
 20792 ;; This function is called by:
 20793 ;;		_dwt_read32bitoffsetreg
 20794 ;;		_dwt_read16bitoffsetreg
 20795 ;;		_dwt_read_rx_scratch_data
 20796 ;;		_dwt_readrxdata
 20797 ;;		_dwt_readaccdata
 20798 ;;		_dwt_readcarrierintegrator
 20799 ;;		_dwt_readtxtimestamp
 20800 ;;		_dwt_readtdoa
 20801 ;;		_dwt_readrxtimestamp
 20802 ;;		_dwt_readrxtimestampunadj
 20803 ;;		_dwt_readrxtimestamp_ipatov
 20804 ;;		_dwt_readrxtimestamp_sts
 20805 ;;		_dwt_readsystime
 20806 ;;		_dwt_geteui
 20807 ;;		_dwt_do_aes
 20808 ;; This function uses a non-reentrant model
 20809 ;;
 20810                           
 20811                           
 20812                           ;psect for function _dwt_readfromdevice
 20813  25D8                     _dwt_readfromdevice:	
 20814                           
 20815                           ;deca_device.c: 380: dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_RD_BIT);
 20816                           
 20817                           ;incstack = 0
 20818                           ; Regs used in _dwt_readfromdevice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20819  25D8  0141               	movlb	1	; select bank1
 20820  25D9  0823               	movf	(dwt_readfromdevice@regFileID+3)^(0+128),w
 20821  25DA  0140               	movlb	0	; select bank0
 20822  25DB  00CD               	movwf	dwt_xfer3000@regFileID+3
 20823  25DC  0141               	movlb	1	; select bank1
 20824  25DD  0822               	movf	(dwt_readfromdevice@regFileID+2)^(0+128),w
 20825  25DE  0140               	movlb	0	; select bank0
 20826  25DF  00CC               	movwf	dwt_xfer3000@regFileID+2
 20827  25E0  0141               	movlb	1	; select bank1
 20828  25E1  0821               	movf	(dwt_readfromdevice@regFileID+1)^(0+128),w
 20829  25E2  0140               	movlb	0	; select bank0
 20830  25E3  00CB               	movwf	dwt_xfer3000@regFileID+1
 20831  25E4  0141               	movlb	1	; select bank1
 20832  25E5  0820               	movf	dwt_readfromdevice@regFileID^(0+128),w
 20833  25E6  0140               	movlb	0	; select bank0
 20834  25E7  00CA               	movwf	dwt_xfer3000@regFileID
 20835  25E8  0141               	movlb	1	; select bank1
 20836  25E9  0825               	movf	(dwt_readfromdevice@index+1)^(0+128),w
 20837  25EA  0140               	movlb	0	; select bank0
 20838  25EB  00CF               	movwf	dwt_xfer3000@indx+1
 20839  25EC  0141               	movlb	1	; select bank1
 20840  25ED  0824               	movf	dwt_readfromdevice@index^(0+128),w
 20841  25EE  0140               	movlb	0	; select bank0
 20842  25EF  00CE               	movwf	dwt_xfer3000@indx
 20843  25F0  0141               	movlb	1	; select bank1
 20844  25F1  0829               	movf	(dwt_readfromdevice@length+3)^(0+128),w
 20845  25F2  0140               	movlb	0	; select bank0
 20846  25F3  00D3               	movwf	dwt_xfer3000@length+3
 20847  25F4  0141               	movlb	1	; select bank1
 20848  25F5  0828               	movf	(dwt_readfromdevice@length+2)^(0+128),w
 20849  25F6  0140               	movlb	0	; select bank0
 20850  25F7  00D2               	movwf	dwt_xfer3000@length+2
 20851  25F8  0141               	movlb	1	; select bank1
 20852  25F9  0827               	movf	(dwt_readfromdevice@length+1)^(0+128),w
 20853  25FA  0140               	movlb	0	; select bank0
 20854  25FB  00D1               	movwf	dwt_xfer3000@length+1
 20855  25FC  0141               	movlb	1	; select bank1
 20856  25FD  0826               	movf	dwt_readfromdevice@length^(0+128),w
 20857  25FE  0140               	movlb	0	; select bank0
 20858  25FF  00D0               	movwf	dwt_xfer3000@length
 20859  2600  0141               	movlb	1	; select bank1
 20860  2601  082A               	movf	dwt_readfromdevice@buffer^(0+128),w
 20861  2602  0140               	movlb	0	; select bank0
 20862  2603  00D4               	movwf	dwt_xfer3000@buffer
 20863  2604  3000               	movlw	0
 20864  2605  00D5               	movwf	dwt_xfer3000@buffer+1
 20865  2606  3000               	movlw	0
 20866  2607  00D6               	movwf	dwt_xfer3000@mode
 20867  2608  00D7               	movwf	dwt_xfer3000@mode+1
 20868  2609  3189  216D         	fcall	_dwt_xfer3000
 20869  260B  0008               	return
 20870  260C                     __end_of_dwt_readfromdevice:	
 20871                           
 20872                           	psect	text57
 20873  276C                     __ptext57:	
 20874 ;; *************** function _dwt_modify16bitoffsetreg *****************
 20875 ;; Defined at:
 20876 ;;		line 556 in file "deca_device.c"
 20877 ;; Parameters:    Size  Location     Type
 20878 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 20879 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 20880 ;;  _and            2    8[BANK1 ] const unsigned int 
 20881 ;;  _or             2   10[BANK1 ] const unsigned int 
 20882 ;; Auto vars:     Size  Location     Type
 20883 ;;  buf             4   76[BANK0 ] unsigned char [4]
 20884 ;; Return value:  Size  Location     Type
 20885 ;;                  1    wreg      void 
 20886 ;; Registers used:
 20887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20888 ;; Tracked objects:
 20889 ;;		On entry : 0/0
 20890 ;;		On exit  : 0/0
 20891 ;;		Unchanged: 0/0
 20892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20893 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20894 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20896 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20897 ;;Total ram usage:       17 bytes
 20898 ;; Hardware stack levels used:    1
 20899 ;; Hardware stack levels required when called:    8
 20900 ;; This function calls:
 20901 ;;		_dwt_xfer3000
 20902 ;; This function is called by:
 20903 ;;		__dwt_prog_ldo_and_bias_tune
 20904 ;;		_dwt_configure
 20905 ;;		_dwt_pgf_cal
 20906 ;;		_dwt_readaccdata
 20907 ;;		_dwt_entersleepaftertx
 20908 ;;		_dwt_enableautoack
 20909 ;;		_dwt_setleds
 20910 ;;		_dwt_setrxtimeout
 20911 ;; This function uses a non-reentrant model
 20912 ;;
 20913                           
 20914                           
 20915                           ;psect for function _dwt_modify16bitoffsetreg
 20916  276C                     _dwt_modify16bitoffsetreg:	
 20917                           
 20918                           ;deca_device.c: 558: uint8_t buf[4];
 20919                           ;deca_device.c: 559: buf[0] = (uint8_t)_and;
 20920                           
 20921                           ;incstack = 0
 20922                           ; Regs used in _dwt_modify16bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20923  276C  0141               	movlb	1	; select bank1
 20924  276D  0828               	movf	dwt_modify16bitoffsetreg@_and^(0+128),w
 20925  276E  0140               	movlb	0	; select bank0
 20926  276F  00EB               	movwf	??_dwt_modify16bitoffsetreg
 20927  2770  086B               	movf	??_dwt_modify16bitoffsetreg,w
 20928  2771  00EC               	movwf	dwt_modify16bitoffsetreg@buf
 20929                           
 20930                           ;deca_device.c: 560: buf[1] = (uint8_t)(_and>>8);
 20931  2772  0141               	movlb	1	; select bank1
 20932  2773  0829               	movf	(dwt_modify16bitoffsetreg@_and+1)^(0+128),w
 20933  2774  0140               	movlb	0	; select bank0
 20934  2775  00EB               	movwf	??_dwt_modify16bitoffsetreg
 20935  2776  086B               	movf	??_dwt_modify16bitoffsetreg,w
 20936  2777  00ED               	movwf	dwt_modify16bitoffsetreg@buf+1
 20937                           
 20938                           ;deca_device.c: 561: buf[2] = (uint8_t)_or;
 20939  2778  0141               	movlb	1	; select bank1
 20940  2779  082A               	movf	dwt_modify16bitoffsetreg@_or^(0+128),w
 20941  277A  0140               	movlb	0	; select bank0
 20942  277B  00EB               	movwf	??_dwt_modify16bitoffsetreg
 20943  277C  086B               	movf	??_dwt_modify16bitoffsetreg,w
 20944  277D  00EE               	movwf	dwt_modify16bitoffsetreg@buf+2
 20945                           
 20946                           ;deca_device.c: 562: buf[3] = (uint8_t)(_or>>8);
 20947  277E  0141               	movlb	1	; select bank1
 20948  277F  082B               	movf	(dwt_modify16bitoffsetreg@_or+1)^(0+128),w
 20949  2780  0140               	movlb	0	; select bank0
 20950  2781  00EB               	movwf	??_dwt_modify16bitoffsetreg
 20951  2782  086B               	movf	??_dwt_modify16bitoffsetreg,w
 20952  2783  00EF               	movwf	dwt_modify16bitoffsetreg@buf+3
 20953                           
 20954                           ;deca_device.c: 563: dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND
      +                          _OR_16);
 20955  2784  0141               	movlb	1	; select bank1
 20956  2785  0823               	movf	(dwt_modify16bitoffsetreg@regFileID+3)^(0+128),w
 20957  2786  0140               	movlb	0	; select bank0
 20958  2787  00CD               	movwf	dwt_xfer3000@regFileID+3
 20959  2788  0141               	movlb	1	; select bank1
 20960  2789  0822               	movf	(dwt_modify16bitoffsetreg@regFileID+2)^(0+128),w
 20961  278A  0140               	movlb	0	; select bank0
 20962  278B  00CC               	movwf	dwt_xfer3000@regFileID+2
 20963  278C  0141               	movlb	1	; select bank1
 20964  278D  0821               	movf	(dwt_modify16bitoffsetreg@regFileID+1)^(0+128),w
 20965  278E  0140               	movlb	0	; select bank0
 20966  278F  00CB               	movwf	dwt_xfer3000@regFileID+1
 20967  2790  0141               	movlb	1	; select bank1
 20968  2791  0820               	movf	dwt_modify16bitoffsetreg@regFileID^(0+128),w
 20969  2792  0140               	movlb	0	; select bank0
 20970  2793  00CA               	movwf	dwt_xfer3000@regFileID
 20971  2794  0141               	movlb	1	; select bank1
 20972  2795  0825               	movf	(dwt_modify16bitoffsetreg@regOffset+1)^(0+128),w
 20973  2796  0140               	movlb	0	; select bank0
 20974  2797  00CF               	movwf	dwt_xfer3000@indx+1
 20975  2798  0141               	movlb	1	; select bank1
 20976  2799  0824               	movf	dwt_modify16bitoffsetreg@regOffset^(0+128),w
 20977  279A  0140               	movlb	0	; select bank0
 20978  279B  00CE               	movwf	dwt_xfer3000@indx
 20979  279C  3000               	movlw	0
 20980  279D  00D3               	movwf	dwt_xfer3000@length+3
 20981  279E  3000               	movlw	0
 20982  279F  00D2               	movwf	dwt_xfer3000@length+2
 20983  27A0  3000               	movlw	0
 20984  27A1  00D1               	movwf	dwt_xfer3000@length+1
 20985  27A2  3004               	movlw	4
 20986  27A3  00D0               	movwf	dwt_xfer3000@length
 20987  27A4  306C               	movlw	low dwt_modify16bitoffsetreg@buf
 20988  27A5  00D4               	movwf	dwt_xfer3000@buffer
 20989  27A6  3000               	movlw	high dwt_modify16bitoffsetreg@buf
 20990  27A7  00D5               	movwf	dwt_xfer3000@buffer+1
 20991  27A8  3002               	movlw	2
 20992  27A9  00D6               	movwf	dwt_xfer3000@mode
 20993  27AA  3080               	movlw	128
 20994  27AB  00D7               	movwf	dwt_xfer3000@mode+1
 20995  27AC  3189  216D         	fcall	_dwt_xfer3000
 20996  27AE  0008               	return
 20997  27AF                     __end_of_dwt_modify16bitoffsetreg:	
 20998                           
 20999                           	psect	text58
 21000  1684                     __ptext58:	
 21001 ;; *************** function _dwt_configmrxlut *****************
 21002 ;; Defined at:
 21003 ;;		line 1203 in file "deca_device.c"
 21004 ;; Parameters:    Size  Location     Type
 21005 ;;  channel         2   76[BANK0 ] int 
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;  lut6            4   54[BANK1 ] unsigned long 
 21008 ;;  lut5            4   50[BANK1 ] unsigned long 
 21009 ;;  lut4            4   46[BANK1 ] unsigned long 
 21010 ;;  lut3            4   42[BANK1 ] unsigned long 
 21011 ;;  lut2            4   38[BANK1 ] unsigned long 
 21012 ;;  lut1            4   34[BANK1 ] unsigned long 
 21013 ;;  lut0            4   30[BANK1 ] unsigned long 
 21014 ;; Return value:  Size  Location     Type
 21015 ;;                  1    wreg      void 
 21016 ;; Registers used:
 21017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21018 ;; Tracked objects:
 21019 ;;		On entry : 0/0
 21020 ;;		On exit  : 0/0
 21021 ;;		Unchanged: 0/0
 21022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21024 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21026 ;;      Totals:         0       2      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21027 ;;Total ram usage:       30 bytes
 21028 ;; Hardware stack levels used:    1
 21029 ;; Hardware stack levels required when called:   10
 21030 ;; This function calls:
 21031 ;;		_dwt_write32bitoffsetreg
 21032 ;; This function is called by:
 21033 ;;		_dwt_configure
 21034 ;;		_dwt_restoreconfig
 21035 ;; This function uses a non-reentrant model
 21036 ;;
 21037                           
 21038                           
 21039                           ;psect for function _dwt_configmrxlut
 21040  1684                     _dwt_configmrxlut:	
 21041                           
 21042                           ;deca_device.c: 1205: uint32_t lut0, lut1, lut2, lut3, lut4, lut5, lut6 = 0;
 21043                           
 21044                           ;incstack = 0
 21045                           ; Regs used in _dwt_configmrxlut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21046  1684  3000               	movlw	0
 21047  1685  0141               	movlb	1	; select bank1
 21048  1686  00D9               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 21049  1687  3000               	movlw	0
 21050  1688  00D8               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 21051  1689  3000               	movlw	0
 21052  168A  00D7               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 21053  168B  3000               	movlw	0
 21054  168C  00D6               	movwf	dwt_configmrxlut@lut6^(0+128)
 21055                           
 21056                           ;deca_device.c: 1207: if (channel == 5)
 21057  168D  3005               	movlw	5
 21058  168E  0140               	movlb	0	; select bank0
 21059  168F  066C               	xorwf	dwt_configmrxlut@channel,w
 21060  1690  046D               	iorwf	dwt_configmrxlut@channel+1,w
 21061  1691  1D03               	btfss	3,2
 21062  1692  2ECC               	goto	l9096
 21063                           
 21064                           ;deca_device.c: 1208: {
 21065                           ;deca_device.c: 1209: lut0 = (uint32_t)CH5_DGC_LUT_0;
 21066  1693  3000               	movlw	0
 21067  1694  0141               	movlb	1	; select bank1
 21068  1695  00C1               	movwf	(dwt_configmrxlut@lut0+3)^(0+128)
 21069  1696  3000               	movlw	0
 21070  1697  00C0               	movwf	(dwt_configmrxlut@lut0+2)^(0+128)
 21071  1698  30C0               	movlw	192
 21072  1699  00BF               	movwf	(dwt_configmrxlut@lut0+1)^(0+128)
 21073  169A  30FD               	movlw	253
 21074  169B  00BE               	movwf	dwt_configmrxlut@lut0^(0+128)
 21075                           
 21076                           ;deca_device.c: 1210: lut1 = (uint32_t)CH5_DGC_LUT_1;
 21077  169C  3000               	movlw	0
 21078  169D  00C5               	movwf	(dwt_configmrxlut@lut1+3)^(0+128)
 21079  169E  3000               	movlw	0
 21080  169F  00C4               	movwf	(dwt_configmrxlut@lut1+2)^(0+128)
 21081  16A0  30C4               	movlw	196
 21082  16A1  00C3               	movwf	(dwt_configmrxlut@lut1+1)^(0+128)
 21083  16A2  303E               	movlw	62
 21084  16A3  00C2               	movwf	dwt_configmrxlut@lut1^(0+128)
 21085                           
 21086                           ;deca_device.c: 1211: lut2 = (uint32_t)CH5_DGC_LUT_2;
 21087  16A4  3000               	movlw	0
 21088  16A5  00C9               	movwf	(dwt_configmrxlut@lut2+3)^(0+128)
 21089  16A6  3000               	movlw	0
 21090  16A7  00C8               	movwf	(dwt_configmrxlut@lut2+2)^(0+128)
 21091  16A8  30C6               	movlw	198
 21092  16A9  00C7               	movwf	(dwt_configmrxlut@lut2+1)^(0+128)
 21093  16AA  30BE               	movlw	190
 21094  16AB  00C6               	movwf	dwt_configmrxlut@lut2^(0+128)
 21095                           
 21096                           ;deca_device.c: 1212: lut3 = (uint32_t)CH5_DGC_LUT_3;
 21097  16AC  3000               	movlw	0
 21098  16AD  00CD               	movwf	(dwt_configmrxlut@lut3+3)^(0+128)
 21099  16AE  3000               	movlw	0
 21100  16AF  00CC               	movwf	(dwt_configmrxlut@lut3+2)^(0+128)
 21101  16B0  30C7               	movlw	199
 21102  16B1  00CB               	movwf	(dwt_configmrxlut@lut3+1)^(0+128)
 21103  16B2  307E               	movlw	126
 21104  16B3  00CA               	movwf	dwt_configmrxlut@lut3^(0+128)
 21105                           
 21106                           ;deca_device.c: 1213: lut4 = (uint32_t)CH5_DGC_LUT_4;
 21107  16B4  3000               	movlw	0
 21108  16B5  00D1               	movwf	(dwt_configmrxlut@lut4+3)^(0+128)
 21109  16B6  3000               	movlw	0
 21110  16B7  00D0               	movwf	(dwt_configmrxlut@lut4+2)^(0+128)
 21111  16B8  30CF               	movlw	207
 21112  16B9  00CF               	movwf	(dwt_configmrxlut@lut4+1)^(0+128)
 21113  16BA  3036               	movlw	54
 21114  16BB  00CE               	movwf	dwt_configmrxlut@lut4^(0+128)
 21115                           
 21116                           ;deca_device.c: 1214: lut5 = (uint32_t)CH5_DGC_LUT_5;
 21117  16BC  3000               	movlw	0
 21118  16BD  00D5               	movwf	(dwt_configmrxlut@lut5+3)^(0+128)
 21119  16BE  3000               	movlw	0
 21120  16BF  00D4               	movwf	(dwt_configmrxlut@lut5+2)^(0+128)
 21121  16C0  30CF               	movlw	207
 21122  16C1  00D3               	movwf	(dwt_configmrxlut@lut5+1)^(0+128)
 21123  16C2  30B5               	movlw	181
 21124  16C3  00D2               	movwf	dwt_configmrxlut@lut5^(0+128)
 21125                           
 21126                           ;deca_device.c: 1215: lut6 = (uint32_t)CH5_DGC_LUT_6;
 21127  16C4  3000               	movlw	0
 21128  16C5  00D9               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 21129  16C6  3000               	movlw	0
 21130  16C7  00D8               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 21131  16C8  30CF               	movlw	207
 21132  16C9  00D7               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 21133  16CA  30F5               	movlw	245
 21134  16CB  2F04               	goto	L21
 21135  16CC                     l9096:	
 21136                           ;deca_device.c: 1216: }
 21137                           
 21138                           
 21139                           ;deca_device.c: 1217: else
 21140                           ;deca_device.c: 1218: {
 21141                           ;deca_device.c: 1219: lut0 = (uint32_t)CH9_DGC_LUT_0;
 21142  16CC  3000               	movlw	0
 21143  16CD  0141               	movlb	1	; select bank1
 21144  16CE  00C1               	movwf	(dwt_configmrxlut@lut0+3)^(0+128)
 21145  16CF  3000               	movlw	0
 21146  16D0  00C0               	movwf	(dwt_configmrxlut@lut0+2)^(0+128)
 21147  16D1  30A8               	movlw	168
 21148  16D2  00BF               	movwf	(dwt_configmrxlut@lut0+1)^(0+128)
 21149  16D3  30FE               	movlw	254
 21150  16D4  00BE               	movwf	dwt_configmrxlut@lut0^(0+128)
 21151                           
 21152                           ;deca_device.c: 1220: lut1 = (uint32_t)CH9_DGC_LUT_1;
 21153  16D5  3000               	movlw	0
 21154  16D6  00C5               	movwf	(dwt_configmrxlut@lut1+3)^(0+128)
 21155  16D7  3000               	movlw	0
 21156  16D8  00C4               	movwf	(dwt_configmrxlut@lut1+2)^(0+128)
 21157  16D9  30AC               	movlw	172
 21158  16DA  00C3               	movwf	(dwt_configmrxlut@lut1+1)^(0+128)
 21159  16DB  3036               	movlw	54
 21160  16DC  00C2               	movwf	dwt_configmrxlut@lut1^(0+128)
 21161                           
 21162                           ;deca_device.c: 1221: lut2 = (uint32_t)CH9_DGC_LUT_2;
 21163  16DD  3000               	movlw	0
 21164  16DE  00C9               	movwf	(dwt_configmrxlut@lut2+3)^(0+128)
 21165  16DF  3000               	movlw	0
 21166  16E0  00C8               	movwf	(dwt_configmrxlut@lut2+2)^(0+128)
 21167  16E1  30A5               	movlw	165
 21168  16E2  00C7               	movwf	(dwt_configmrxlut@lut2+1)^(0+128)
 21169  16E3  30FE               	movlw	254
 21170  16E4  00C6               	movwf	dwt_configmrxlut@lut2^(0+128)
 21171                           
 21172                           ;deca_device.c: 1222: lut3 = (uint32_t)CH9_DGC_LUT_3;
 21173  16E5  3000               	movlw	0
 21174  16E6  00CD               	movwf	(dwt_configmrxlut@lut3+3)^(0+128)
 21175  16E7  3000               	movlw	0
 21176  16E8  00CC               	movwf	(dwt_configmrxlut@lut3+2)^(0+128)
 21177  16E9  30AF               	movlw	175
 21178  16EA  00CB               	movwf	(dwt_configmrxlut@lut3+1)^(0+128)
 21179  16EB  303E               	movlw	62
 21180  16EC  00CA               	movwf	dwt_configmrxlut@lut3^(0+128)
 21181                           
 21182                           ;deca_device.c: 1223: lut4 = (uint32_t)CH9_DGC_LUT_4;
 21183  16ED  3000               	movlw	0
 21184  16EE  00D1               	movwf	(dwt_configmrxlut@lut4+3)^(0+128)
 21185  16EF  3000               	movlw	0
 21186  16F0  00D0               	movwf	(dwt_configmrxlut@lut4+2)^(0+128)
 21187  16F1  30AF               	movlw	175
 21188  16F2  00CF               	movwf	(dwt_configmrxlut@lut4+1)^(0+128)
 21189  16F3  307D               	movlw	125
 21190  16F4  00CE               	movwf	dwt_configmrxlut@lut4^(0+128)
 21191                           
 21192                           ;deca_device.c: 1224: lut5 = (uint32_t)CH9_DGC_LUT_5;
 21193  16F5  3000               	movlw	0
 21194  16F6  00D5               	movwf	(dwt_configmrxlut@lut5+3)^(0+128)
 21195  16F7  3000               	movlw	0
 21196  16F8  00D4               	movwf	(dwt_configmrxlut@lut5+2)^(0+128)
 21197  16F9  30AF               	movlw	175
 21198  16FA  00D3               	movwf	(dwt_configmrxlut@lut5+1)^(0+128)
 21199  16FB  30B5               	movlw	181
 21200  16FC  00D2               	movwf	dwt_configmrxlut@lut5^(0+128)
 21201                           
 21202                           ;deca_device.c: 1225: lut6 = (uint32_t)CH9_DGC_LUT_6;
 21203  16FD  3000               	movlw	0
 21204  16FE  00D9               	movwf	(dwt_configmrxlut@lut6+3)^(0+128)
 21205  16FF  3000               	movlw	0
 21206  1700  00D8               	movwf	(dwt_configmrxlut@lut6+2)^(0+128)
 21207  1701  30AF               	movlw	175
 21208  1702  00D7               	movwf	(dwt_configmrxlut@lut6+1)^(0+128)
 21209  1703  30B5               	movlw	181
 21210  1704                     L21:	
 21211  1704  00D6               	movwf	dwt_configmrxlut@lut6^(0+128)
 21212                           
 21213                           ;deca_device.c: 1226: }
 21214                           ;deca_device.c: 1227: dwt_write32bitoffsetreg(0x30038, 0x0, lut0);
 21215  1705  3000               	movlw	0
 21216  1706  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21217  1707  3003               	movlw	3
 21218  1708  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21219  1709  3000               	movlw	0
 21220  170A  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21221  170B  3038               	movlw	56
 21222  170C  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21223  170D  3000               	movlw	0
 21224  170E  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21225  170F  3000               	movlw	0
 21226  1710  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21227  1711  3000               	movlw	0
 21228  1712  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21229  1713  3000               	movlw	0
 21230  1714  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21231  1715  0841               	movf	(dwt_configmrxlut@lut0+3)^(0+128),w
 21232  1716  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21233  1717  0840               	movf	(dwt_configmrxlut@lut0+2)^(0+128),w
 21234  1718  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21235  1719  083F               	movf	(dwt_configmrxlut@lut0+1)^(0+128),w
 21236  171A  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21237  171B  083E               	movf	dwt_configmrxlut@lut0^(0+128),w
 21238  171C  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21239  171D  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21240                           
 21241                           ;deca_device.c: 1228: dwt_write32bitoffsetreg(0x3003c, 0x0, lut1);
 21242  1720  3000               	movlw	0
 21243  1721  0141               	movlb	1	; select bank1
 21244  1722  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21245  1723  3003               	movlw	3
 21246  1724  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21247  1725  3000               	movlw	0
 21248  1726  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21249  1727  303C               	movlw	60
 21250  1728  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21251  1729  3000               	movlw	0
 21252  172A  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21253  172B  3000               	movlw	0
 21254  172C  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21255  172D  3000               	movlw	0
 21256  172E  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21257  172F  3000               	movlw	0
 21258  1730  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21259  1731  0845               	movf	(dwt_configmrxlut@lut1+3)^(0+128),w
 21260  1732  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21261  1733  0844               	movf	(dwt_configmrxlut@lut1+2)^(0+128),w
 21262  1734  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21263  1735  0843               	movf	(dwt_configmrxlut@lut1+1)^(0+128),w
 21264  1736  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21265  1737  0842               	movf	dwt_configmrxlut@lut1^(0+128),w
 21266  1738  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21267  1739  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21268                           
 21269                           ;deca_device.c: 1229: dwt_write32bitoffsetreg(0x30040, 0x0, lut2);
 21270  173C  3000               	movlw	0
 21271  173D  0141               	movlb	1	; select bank1
 21272  173E  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21273  173F  3003               	movlw	3
 21274  1740  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21275  1741  3000               	movlw	0
 21276  1742  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21277  1743  3040               	movlw	64
 21278  1744  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21279  1745  3000               	movlw	0
 21280  1746  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21281  1747  3000               	movlw	0
 21282  1748  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21283  1749  3000               	movlw	0
 21284  174A  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21285  174B  3000               	movlw	0
 21286  174C  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21287  174D  0849               	movf	(dwt_configmrxlut@lut2+3)^(0+128),w
 21288  174E  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21289  174F  0848               	movf	(dwt_configmrxlut@lut2+2)^(0+128),w
 21290  1750  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21291  1751  0847               	movf	(dwt_configmrxlut@lut2+1)^(0+128),w
 21292  1752  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21293  1753  0846               	movf	dwt_configmrxlut@lut2^(0+128),w
 21294  1754  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21295  1755  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21296                           
 21297                           ;deca_device.c: 1230: dwt_write32bitoffsetreg(0x30044, 0x0, lut3);
 21298  1758  3000               	movlw	0
 21299  1759  0141               	movlb	1	; select bank1
 21300  175A  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21301  175B  3003               	movlw	3
 21302  175C  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21303  175D  3000               	movlw	0
 21304  175E  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21305  175F  3044               	movlw	68
 21306  1760  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21307  1761  3000               	movlw	0
 21308  1762  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21309  1763  3000               	movlw	0
 21310  1764  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21311  1765  3000               	movlw	0
 21312  1766  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21313  1767  3000               	movlw	0
 21314  1768  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21315  1769  084D               	movf	(dwt_configmrxlut@lut3+3)^(0+128),w
 21316  176A  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21317  176B  084C               	movf	(dwt_configmrxlut@lut3+2)^(0+128),w
 21318  176C  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21319  176D  084B               	movf	(dwt_configmrxlut@lut3+1)^(0+128),w
 21320  176E  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21321  176F  084A               	movf	dwt_configmrxlut@lut3^(0+128),w
 21322  1770  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21323  1771  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21324                           
 21325                           ;deca_device.c: 1231: dwt_write32bitoffsetreg(0x30048, 0x0, lut4);
 21326  1774  3000               	movlw	0
 21327  1775  0141               	movlb	1	; select bank1
 21328  1776  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21329  1777  3003               	movlw	3
 21330  1778  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21331  1779  3000               	movlw	0
 21332  177A  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21333  177B  3048               	movlw	72
 21334  177C  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21335  177D  3000               	movlw	0
 21336  177E  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21337  177F  3000               	movlw	0
 21338  1780  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21339  1781  3000               	movlw	0
 21340  1782  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21341  1783  3000               	movlw	0
 21342  1784  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21343  1785  0851               	movf	(dwt_configmrxlut@lut4+3)^(0+128),w
 21344  1786  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21345  1787  0850               	movf	(dwt_configmrxlut@lut4+2)^(0+128),w
 21346  1788  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21347  1789  084F               	movf	(dwt_configmrxlut@lut4+1)^(0+128),w
 21348  178A  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21349  178B  084E               	movf	dwt_configmrxlut@lut4^(0+128),w
 21350  178C  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21351  178D  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21352                           
 21353                           ;deca_device.c: 1232: dwt_write32bitoffsetreg(0x3004c, 0x0, lut5);
 21354  1790  3000               	movlw	0
 21355  1791  0141               	movlb	1	; select bank1
 21356  1792  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21357  1793  3003               	movlw	3
 21358  1794  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21359  1795  3000               	movlw	0
 21360  1796  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21361  1797  304C               	movlw	76
 21362  1798  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21363  1799  3000               	movlw	0
 21364  179A  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21365  179B  3000               	movlw	0
 21366  179C  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21367  179D  3000               	movlw	0
 21368  179E  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21369  179F  3000               	movlw	0
 21370  17A0  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21371  17A1  0855               	movf	(dwt_configmrxlut@lut5+3)^(0+128),w
 21372  17A2  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21373  17A3  0854               	movf	(dwt_configmrxlut@lut5+2)^(0+128),w
 21374  17A4  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21375  17A5  0853               	movf	(dwt_configmrxlut@lut5+1)^(0+128),w
 21376  17A6  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21377  17A7  0852               	movf	dwt_configmrxlut@lut5^(0+128),w
 21378  17A8  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21379  17A9  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21380                           
 21381                           ;deca_device.c: 1233: dwt_write32bitoffsetreg(0x30050, 0x0, lut6);
 21382  17AC  3000               	movlw	0
 21383  17AD  0141               	movlb	1	; select bank1
 21384  17AE  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21385  17AF  3003               	movlw	3
 21386  17B0  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21387  17B1  3000               	movlw	0
 21388  17B2  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21389  17B3  3050               	movlw	80
 21390  17B4  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21391  17B5  3000               	movlw	0
 21392  17B6  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21393  17B7  3000               	movlw	0
 21394  17B8  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21395  17B9  3000               	movlw	0
 21396  17BA  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21397  17BB  3000               	movlw	0
 21398  17BC  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21399  17BD  0859               	movf	(dwt_configmrxlut@lut6+3)^(0+128),w
 21400  17BE  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21401  17BF  0858               	movf	(dwt_configmrxlut@lut6+2)^(0+128),w
 21402  17C0  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21403  17C1  0857               	movf	(dwt_configmrxlut@lut6+1)^(0+128),w
 21404  17C2  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21405  17C3  0856               	movf	dwt_configmrxlut@lut6^(0+128),w
 21406  17C4  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21407  17C5  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21408                           
 21409                           ;deca_device.c: 1234: dwt_write32bitoffsetreg(0x3001c, 0x0, 0x10000240);
 21410  17C8  3000               	movlw	0
 21411  17C9  0141               	movlb	1	; select bank1
 21412  17CA  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21413  17CB  3003               	movlw	3
 21414  17CC  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21415  17CD  3000               	movlw	0
 21416  17CE  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21417  17CF  301C               	movlw	28
 21418  17D0  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21419  17D1  3000               	movlw	0
 21420  17D2  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21421  17D3  3000               	movlw	0
 21422  17D4  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21423  17D5  3000               	movlw	0
 21424  17D6  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21425  17D7  3000               	movlw	0
 21426  17D8  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21427  17D9  3010               	movlw	16
 21428  17DA  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21429  17DB  3000               	movlw	0
 21430  17DC  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21431  17DD  3002               	movlw	2
 21432  17DE  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21433  17DF  3040               	movlw	64
 21434  17E0  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21435  17E1  3198  20B7  3196   	fcall	_dwt_write32bitoffsetreg
 21436                           
 21437                           ;deca_device.c: 1235: dwt_write32bitoffsetreg(0x30020, 0x0, 0x1b6da489);
 21438  17E4  3000               	movlw	0
 21439  17E5  0141               	movlb	1	; select bank1
 21440  17E6  00AF               	movwf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128)
 21441  17E7  3003               	movlw	3
 21442  17E8  00AE               	movwf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128)
 21443  17E9  3000               	movlw	0
 21444  17EA  00AD               	movwf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128)
 21445  17EB  3020               	movlw	32
 21446  17EC  00AC               	movwf	dwt_write32bitoffsetreg@regFileID^(0+128)
 21447  17ED  3000               	movlw	0
 21448  17EE  00B3               	movwf	(dwt_write32bitoffsetreg@regOffset+3)^(0+128)
 21449  17EF  3000               	movlw	0
 21450  17F0  00B2               	movwf	(dwt_write32bitoffsetreg@regOffset+2)^(0+128)
 21451  17F1  3000               	movlw	0
 21452  17F2  00B1               	movwf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128)
 21453  17F3  3000               	movlw	0
 21454  17F4  00B0               	movwf	dwt_write32bitoffsetreg@regOffset^(0+128)
 21455  17F5  301B               	movlw	27
 21456  17F6  00B7               	movwf	(dwt_write32bitoffsetreg@regval+3)^(0+128)
 21457  17F7  306D               	movlw	109
 21458  17F8  00B6               	movwf	(dwt_write32bitoffsetreg@regval+2)^(0+128)
 21459  17F9  30A4               	movlw	164
 21460  17FA  00B5               	movwf	(dwt_write32bitoffsetreg@regval+1)^(0+128)
 21461  17FB  3089               	movlw	137
 21462  17FC  00B4               	movwf	dwt_write32bitoffsetreg@regval^(0+128)
 21463  17FD  3198  20B7         	fcall	_dwt_write32bitoffsetreg
 21464  17FF  0008               	return
 21465  1800                     __end_of_dwt_configmrxlut:	
 21466                           
 21467                           	psect	text59
 21468  18B7                     __ptext59:	
 21469 ;; *************** function _dwt_write32bitoffsetreg *****************
 21470 ;; Defined at:
 21471 ;;		line 467 in file "deca_device.c"
 21472 ;; Parameters:    Size  Location     Type
 21473 ;;  regFileID       4   12[BANK1 ] unsigned long 
 21474 ;;  regOffset       4   16[BANK1 ] unsigned long 
 21475 ;;  regval          4   20[BANK1 ] unsigned long 
 21476 ;; Auto vars:     Size  Location     Type
 21477 ;;  buffer          4   24[BANK1 ] unsigned char [4]
 21478 ;;  j               2   28[BANK1 ] int 
 21479 ;; Return value:  Size  Location     Type
 21480 ;;                  1    wreg      void 
 21481 ;; Registers used:
 21482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21483 ;; Tracked objects:
 21484 ;;		On entry : 0/0
 21485 ;;		On exit  : 0/0
 21486 ;;		Unchanged: 0/0
 21487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21488 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21489 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21491 ;;      Totals:         0       1      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21492 ;;Total ram usage:       19 bytes
 21493 ;; Hardware stack levels used:    1
 21494 ;; Hardware stack levels required when called:    9
 21495 ;; This function calls:
 21496 ;;		_dwt_writetodevice
 21497 ;; This function is called by:
 21498 ;;		_dwt_configuretxrf
 21499 ;;		_dwt_configmrxlut
 21500 ;;		_dwt_configure
 21501 ;;		_dwt_run_pgfcal
 21502 ;;		_dwt_writetxdata
 21503 ;;		_dwt_disable_rf_tx
 21504 ;;		_dwt_enable_rf_tx
 21505 ;;		_dwt_disable_rftx_blocks
 21506 ;;		_dwt_setfinegraintxseq
 21507 ;;		_dwt_setlnapamode
 21508 ;;		_dwt_configurestskey
 21509 ;;		_dwt_configurestsiv
 21510 ;;		_dwt_restoreconfig
 21511 ;;		_dwt_configurestsmode
 21512 ;;		_dwt_readrxdata
 21513 ;;		_dwt_readaccdata
 21514 ;;		__dwt_otpprogword32
 21515 ;;		_dwt_setdblrxbuffmode
 21516 ;;		_dwt_setrxaftertxdelay
 21517 ;;		_dwt_isr
 21518 ;;		_dwt_setleds
 21519 ;;		_dwt_setreferencetrxtime
 21520 ;;		_dwt_setdelayedtrxtime
 21521 ;;		_dwt_setrxtimeout
 21522 ;;		_dwt_setinterrupt
 21523 ;;		_dwt_repeated_cw
 21524 ;;		_dwt_repeated_frames
 21525 ;;		_dwt_set_keyreg_128
 21526 ;;		_dwt_do_aes
 21527 ;; This function uses a non-reentrant model
 21528 ;;
 21529                           
 21530                           
 21531                           ;psect for function _dwt_write32bitoffsetreg
 21532  18B7                     _dwt_write32bitoffsetreg:	
 21533                           
 21534                           ;deca_device.c: 469: int j ;
 21535                           ;deca_device.c: 470: uint8_t buffer[4] ;
 21536                           ;deca_device.c: 472: for ( j = 0 ; j < 4 ; j++ )
 21537                           
 21538                           ;incstack = 0
 21539                           ; Regs used in _dwt_write32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21540  18B7  0141               	movlb	1	; select bank1
 21541  18B8  01BC               	clrf	dwt_write32bitoffsetreg@j^(0+128)
 21542  18B9  01BD               	clrf	(dwt_write32bitoffsetreg@j+1)^(0+128)
 21543  18BA  083D               	movf	(dwt_write32bitoffsetreg@j+1)^(0+128),w
 21544  18BB  3A80               	xorlw	128
 21545  18BC  0140               	movlb	0	; select bank0
 21546  18BD  00EB               	movwf	??_dwt_write32bitoffsetreg
 21547  18BE  3080               	movlw	128
 21548  18BF  026B               	subwf	??_dwt_write32bitoffsetreg,w
 21549  18C0  1D03               	skipz
 21550  18C1  28C5               	goto	u9355
 21551  18C2  3004               	movlw	4
 21552  18C3  0141               	movlb	1	; select bank1
 21553  18C4  023C               	subwf	dwt_write32bitoffsetreg@j^(0+128),w
 21554  18C5                     u9355:	
 21555  18C5  1803               	btfsc	3,0
 21556  18C6  28EC               	goto	l8798
 21557  18C7                     l8790:	
 21558                           
 21559                           ;deca_device.c: 473: {
 21560                           ;deca_device.c: 474: buffer[j] = (uint8_t)regval;
 21561  18C7  0141               	movlb	1	; select bank1
 21562  18C8  0834               	movf	dwt_write32bitoffsetreg@regval^(0+128),w
 21563  18C9  0140               	movlb	0	; select bank0
 21564  18CA  00EB               	movwf	??_dwt_write32bitoffsetreg
 21565  18CB  0141               	movlb	1	; select bank1
 21566  18CC  083C               	movf	dwt_write32bitoffsetreg@j^(0+128),w
 21567  18CD  3EB8               	addlw	(low (dwt_write32bitoffsetreg@buffer| 0))& (0+255)
 21568  18CE  0086               	movwf	6
 21569  18CF  0187               	clrf	7
 21570  18D0  0140               	movlb	0	; select bank0
 21571  18D1  086B               	movf	??_dwt_write32bitoffsetreg,w
 21572  18D2  0081               	movwf	1
 21573                           
 21574                           ;deca_device.c: 475: regval >>= 8 ;
 21575  18D3  3008               	movlw	8
 21576  18D4                     u9365:	
 21577  18D4  0141               	movlb	1	; select bank1
 21578  18D5  36B7               	lsrf	(dwt_write32bitoffsetreg@regval+3)^(0+128),f
 21579  18D6  0CB6               	rrf	(dwt_write32bitoffsetreg@regval+2)^(0+128),f
 21580  18D7  0CB5               	rrf	(dwt_write32bitoffsetreg@regval+1)^(0+128),f
 21581  18D8  0CB4               	rrf	dwt_write32bitoffsetreg@regval^(0+128),f
 21582  18D9  0B89               	decfsz	9,f
 21583  18DA  28D4               	goto	u9365
 21584  18DB  3001               	movlw	1
 21585  18DC  07BC               	addwf	dwt_write32bitoffsetreg@j^(0+128),f
 21586  18DD  3000               	movlw	0
 21587  18DE  3DBD               	addwfc	(dwt_write32bitoffsetreg@j+1)^(0+128),f
 21588  18DF  083D               	movf	(dwt_write32bitoffsetreg@j+1)^(0+128),w
 21589  18E0  3A80               	xorlw	128
 21590  18E1  0140               	movlb	0	; select bank0
 21591  18E2  00EB               	movwf	??_dwt_write32bitoffsetreg
 21592  18E3  3080               	movlw	128
 21593  18E4  026B               	subwf	??_dwt_write32bitoffsetreg,w
 21594  18E5  1D03               	skipz
 21595  18E6  28EA               	goto	u9375
 21596  18E7  3004               	movlw	4
 21597  18E8  0141               	movlb	1	; select bank1
 21598  18E9  023C               	subwf	dwt_write32bitoffsetreg@j^(0+128),w
 21599  18EA                     u9375:	
 21600  18EA  1C03               	skipc
 21601  18EB  28C7               	goto	l8790
 21602  18EC                     l8798:	
 21603                           
 21604                           ;deca_device.c: 476: }
 21605                           ;deca_device.c: 478: dwt_writetodevice(regFileID,regOffset,4,buffer);
 21606  18EC  0141               	movlb	1	; select bank1
 21607  18ED  082F               	movf	(dwt_write32bitoffsetreg@regFileID+3)^(0+128),w
 21608  18EE  00A3               	movwf	(dwt_writetodevice@regFileID+3)^(0+128)
 21609  18EF  082E               	movf	(dwt_write32bitoffsetreg@regFileID+2)^(0+128),w
 21610  18F0  00A2               	movwf	(dwt_writetodevice@regFileID+2)^(0+128)
 21611  18F1  082D               	movf	(dwt_write32bitoffsetreg@regFileID+1)^(0+128),w
 21612  18F2  00A1               	movwf	(dwt_writetodevice@regFileID+1)^(0+128)
 21613  18F3  082C               	movf	dwt_write32bitoffsetreg@regFileID^(0+128),w
 21614  18F4  00A0               	movwf	dwt_writetodevice@regFileID^(0+128)
 21615  18F5  0831               	movf	(dwt_write32bitoffsetreg@regOffset+1)^(0+128),w
 21616  18F6  00A5               	movwf	(dwt_writetodevice@index+1)^(0+128)
 21617  18F7  0830               	movf	dwt_write32bitoffsetreg@regOffset^(0+128),w
 21618  18F8  00A4               	movwf	dwt_writetodevice@index^(0+128)
 21619  18F9  3000               	movlw	0
 21620  18FA  00A9               	movwf	(dwt_writetodevice@length+3)^(0+128)
 21621  18FB  3000               	movlw	0
 21622  18FC  00A8               	movwf	(dwt_writetodevice@length+2)^(0+128)
 21623  18FD  3000               	movlw	0
 21624  18FE  00A7               	movwf	(dwt_writetodevice@length+1)^(0+128)
 21625  18FF  3004               	movlw	4
 21626  1900  00A6               	movwf	dwt_writetodevice@length^(0+128)
 21627  1901  30B8               	movlw	low dwt_write32bitoffsetreg@buffer
 21628  1902  00AA               	movwf	dwt_writetodevice@buffer^(0+128)
 21629  1903  3000               	movlw	high dwt_write32bitoffsetreg@buffer
 21630  1904  00AB               	movwf	(dwt_writetodevice@buffer+1)^(0+128)
 21631  1905  31A6  260C         	fcall	_dwt_writetodevice
 21632  1907  0008               	return
 21633  1908                     __end_of_dwt_write32bitoffsetreg:	
 21634                           
 21635                           	psect	text60
 21636  260C                     __ptext60:	
 21637 ;; *************** function _dwt_writetodevice *****************
 21638 ;; Defined at:
 21639 ;;		line 332 in file "deca_device.c"
 21640 ;; Parameters:    Size  Location     Type
 21641 ;;  regFileID       4    0[BANK1 ] unsigned long 
 21642 ;;  index           2    4[BANK1 ] unsigned int 
 21643 ;;  length          4    6[BANK1 ] unsigned long 
 21644 ;;  buffer          2   10[BANK1 ] PTR unsigned char 
 21645 ;;		 -> tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), NULL(0), dwt_write8bitoffsetreg@regval(1), 
 21646 ;;		 -> dwt_write16bitoffsetreg@buffer(2), dwt_write32bitoffsetreg@buffer(4), 
 21647 ;; Auto vars:     Size  Location     Type
 21648 ;;		None
 21649 ;; Return value:  Size  Location     Type
 21650 ;;                  1    wreg      void 
 21651 ;; Registers used:
 21652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21653 ;; Tracked objects:
 21654 ;;		On entry : 0/0
 21655 ;;		On exit  : 0/0
 21656 ;;		Unchanged: 0/0
 21657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21658 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21661 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21662 ;;Total ram usage:       12 bytes
 21663 ;; Hardware stack levels used:    1
 21664 ;; Hardware stack levels required when called:    8
 21665 ;; This function calls:
 21666 ;;		_dwt_xfer3000
 21667 ;; This function is called by:
 21668 ;;		_dwt_write32bitoffsetreg
 21669 ;;		_dwt_write16bitoffsetreg
 21670 ;;		_dwt_write8bitoffsetreg
 21671 ;;		_dwt_writetxdata
 21672 ;;		_dwt_starttx
 21673 ;;		_dwt_seteui
 21674 ;;		_dwt_signal_rx_buff_free
 21675 ;;		_dwt_forcetrxoff
 21676 ;;		_dwt_rxenable
 21677 ;;		_dwt_update_nonce_CCM
 21678 ;;		_dwt_update_nonce_GCM
 21679 ;;		_dwt_do_aes
 21680 ;; This function uses a non-reentrant model
 21681 ;;
 21682                           
 21683                           
 21684                           ;psect for function _dwt_writetodevice
 21685  260C                     _dwt_writetodevice:	
 21686                           
 21687                           ;deca_device.c: 340: dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_WR_BIT);
 21688                           
 21689                           ;incstack = 0
 21690                           ; Regs used in _dwt_writetodevice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21691  260C  0141               	movlb	1	; select bank1
 21692  260D  0823               	movf	(dwt_writetodevice@regFileID+3)^(0+128),w
 21693  260E  0140               	movlb	0	; select bank0
 21694  260F  00CD               	movwf	dwt_xfer3000@regFileID+3
 21695  2610  0141               	movlb	1	; select bank1
 21696  2611  0822               	movf	(dwt_writetodevice@regFileID+2)^(0+128),w
 21697  2612  0140               	movlb	0	; select bank0
 21698  2613  00CC               	movwf	dwt_xfer3000@regFileID+2
 21699  2614  0141               	movlb	1	; select bank1
 21700  2615  0821               	movf	(dwt_writetodevice@regFileID+1)^(0+128),w
 21701  2616  0140               	movlb	0	; select bank0
 21702  2617  00CB               	movwf	dwt_xfer3000@regFileID+1
 21703  2618  0141               	movlb	1	; select bank1
 21704  2619  0820               	movf	dwt_writetodevice@regFileID^(0+128),w
 21705  261A  0140               	movlb	0	; select bank0
 21706  261B  00CA               	movwf	dwt_xfer3000@regFileID
 21707  261C  0141               	movlb	1	; select bank1
 21708  261D  0825               	movf	(dwt_writetodevice@index+1)^(0+128),w
 21709  261E  0140               	movlb	0	; select bank0
 21710  261F  00CF               	movwf	dwt_xfer3000@indx+1
 21711  2620  0141               	movlb	1	; select bank1
 21712  2621  0824               	movf	dwt_writetodevice@index^(0+128),w
 21713  2622  0140               	movlb	0	; select bank0
 21714  2623  00CE               	movwf	dwt_xfer3000@indx
 21715  2624  0141               	movlb	1	; select bank1
 21716  2625  0829               	movf	(dwt_writetodevice@length+3)^(0+128),w
 21717  2626  0140               	movlb	0	; select bank0
 21718  2627  00D3               	movwf	dwt_xfer3000@length+3
 21719  2628  0141               	movlb	1	; select bank1
 21720  2629  0828               	movf	(dwt_writetodevice@length+2)^(0+128),w
 21721  262A  0140               	movlb	0	; select bank0
 21722  262B  00D2               	movwf	dwt_xfer3000@length+2
 21723  262C  0141               	movlb	1	; select bank1
 21724  262D  0827               	movf	(dwt_writetodevice@length+1)^(0+128),w
 21725  262E  0140               	movlb	0	; select bank0
 21726  262F  00D1               	movwf	dwt_xfer3000@length+1
 21727  2630  0141               	movlb	1	; select bank1
 21728  2631  0826               	movf	dwt_writetodevice@length^(0+128),w
 21729  2632  0140               	movlb	0	; select bank0
 21730  2633  00D0               	movwf	dwt_xfer3000@length
 21731  2634  0141               	movlb	1	; select bank1
 21732  2635  082B               	movf	(dwt_writetodevice@buffer+1)^(0+128),w
 21733  2636  0140               	movlb	0	; select bank0
 21734  2637  00D5               	movwf	dwt_xfer3000@buffer+1
 21735  2638  0141               	movlb	1	; select bank1
 21736  2639  082A               	movf	dwt_writetodevice@buffer^(0+128),w
 21737  263A  0140               	movlb	0	; select bank0
 21738  263B  00D4               	movwf	dwt_xfer3000@buffer
 21739  263C  3000               	movlw	0
 21740  263D  00D6               	movwf	dwt_xfer3000@mode
 21741  263E  3080               	movlw	128
 21742  263F  00D7               	movwf	dwt_xfer3000@mode+1
 21743  2640  3189  216D         	fcall	_dwt_xfer3000
 21744  2642  0008               	return
 21745  2643                     __end_of_dwt_writetodevice:	
 21746                           
 21747                           	psect	text61
 21748  27AF                     __ptext61:	
 21749 ;; *************** function __dwt_kick_dgc_on_wakeup *****************
 21750 ;; Defined at:
 21751 ;;		line 746 in file "deca_device.c"
 21752 ;; Parameters:    Size  Location     Type
 21753 ;;  channel         1    wreg     char 
 21754 ;; Auto vars:     Size  Location     Type
 21755 ;;  channel         1   24[BANK1 ] char 
 21756 ;; Return value:  Size  Location     Type
 21757 ;;                  1    wreg      void 
 21758 ;; Registers used:
 21759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21760 ;; Tracked objects:
 21761 ;;		On entry : 0/0
 21762 ;;		On exit  : 0/0
 21763 ;;		Unchanged: 0/0
 21764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21766 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21768 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21769 ;;Total ram usage:        1 bytes
 21770 ;; Hardware stack levels used:    1
 21771 ;; Hardware stack levels required when called:    9
 21772 ;; This function calls:
 21773 ;;		_dwt_modify32bitoffsetreg
 21774 ;; This function is called by:
 21775 ;;		_dwt_configure
 21776 ;;		_dwt_restoreconfig
 21777 ;; This function uses a non-reentrant model
 21778 ;;
 21779                           
 21780                           
 21781                           ;psect for function __dwt_kick_dgc_on_wakeup
 21782  27AF                     __dwt_kick_dgc_on_wakeup:	
 21783                           
 21784                           ;incstack = 0
 21785                           ; Regs used in __dwt_kick_dgc_on_wakeup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21786                           ;__dwt_kick_dgc_on_wakeup@channel stored from wreg
 21787  27AF  0141               	movlb	1	; select bank1
 21788  27B0  00B8               	movwf	__dwt_kick_dgc_on_wakeup@channel^(0+128)
 21789                           
 21790                           ;deca_device.c: 749: if (channel == 5)
 21791  27B1  3005               	movlw	5
 21792  27B2  0638               	xorwf	__dwt_kick_dgc_on_wakeup@channel^(0+128),w
 21793  27B3  1D03               	btfss	3,2
 21794  27B4  2FD8               	goto	l9018
 21795                           
 21796                           ;deca_device.c: 750: {
 21797                           ;deca_device.c: 751: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x2000U),
 21798                           ;deca_device.c: 752: (DWT_DGC_SEL_CH5 << (13U)) | 0x40U);
 21799  27B5  3000               	movlw	0
 21800  27B6  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 21801  27B7  300B               	movlw	11
 21802  27B8  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 21803  27B9  3000               	movlw	0
 21804  27BA  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 21805  27BB  3008               	movlw	8
 21806  27BC  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 21807  27BD  3000               	movlw	0
 21808  27BE  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 21809  27BF  3000               	movlw	0
 21810  27C0  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 21811  27C1  3000               	movlw	0
 21812  27C2  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 21813  27C3  3000               	movlw	0
 21814  27C4  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 21815  27C5  3000               	movlw	0
 21816  27C6  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 21817  27C7  3000               	movlw	0
 21818  27C8  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 21819  27C9  30DF               	movlw	223
 21820  27CA  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 21821  27CB  30FF               	movlw	255
 21822  27CC  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 21823  27CD  3000               	movlw	0
 21824  27CE  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 21825  27CF  3000               	movlw	0
 21826  27D0  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 21827  27D1  3000               	movlw	0
 21828  27D2  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 21829  27D3  3040               	movlw	64
 21830  27D4  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 21831  27D5  3193  239F         	fcall	_dwt_modify32bitoffsetreg
 21832                           
 21833                           ;deca_device.c: 753: }
 21834  27D7  0008               	return
 21835  27D8                     l9018:	
 21836                           
 21837                           ;deca_device.c: 754: else if (channel == 9)
 21838  27D8  3009               	movlw	9
 21839  27D9  0141               	movlb	1	; select bank1
 21840  27DA  0638               	xorwf	__dwt_kick_dgc_on_wakeup@channel^(0+128),w
 21841  27DB  1D03               	btfss	3,2
 21842  27DC  0008               	return
 21843                           
 21844                           ;deca_device.c: 755: {
 21845                           ;deca_device.c: 756: dwt_modify32bitoffsetreg(0xb0008, 0, ~(0x2000U),
 21846                           ;deca_device.c: 757: (DWT_DGC_SEL_CH9 << (13U)) | 0x40U);
 21847  27DD  3000               	movlw	0
 21848  27DE  00A3               	movwf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128)
 21849  27DF  300B               	movlw	11
 21850  27E0  00A2               	movwf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128)
 21851  27E1  3000               	movlw	0
 21852  27E2  00A1               	movwf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128)
 21853  27E3  3008               	movlw	8
 21854  27E4  00A0               	movwf	dwt_modify32bitoffsetreg@regFileID^(0+128)
 21855  27E5  3000               	movlw	0
 21856  27E6  00A7               	movwf	(dwt_modify32bitoffsetreg@regOffset+3)^(0+128)
 21857  27E7  3000               	movlw	0
 21858  27E8  00A6               	movwf	(dwt_modify32bitoffsetreg@regOffset+2)^(0+128)
 21859  27E9  3000               	movlw	0
 21860  27EA  00A5               	movwf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128)
 21861  27EB  3000               	movlw	0
 21862  27EC  00A4               	movwf	dwt_modify32bitoffsetreg@regOffset^(0+128)
 21863  27ED  3000               	movlw	0
 21864  27EE  00AB               	movwf	(dwt_modify32bitoffsetreg@_and+3)^(0+128)
 21865  27EF  3000               	movlw	0
 21866  27F0  00AA               	movwf	(dwt_modify32bitoffsetreg@_and+2)^(0+128)
 21867  27F1  30DF               	movlw	223
 21868  27F2  00A9               	movwf	(dwt_modify32bitoffsetreg@_and+1)^(0+128)
 21869  27F3  30FF               	movlw	255
 21870  27F4  00A8               	movwf	dwt_modify32bitoffsetreg@_and^(0+128)
 21871  27F5  3000               	movlw	0
 21872  27F6  00AF               	movwf	(dwt_modify32bitoffsetreg@_or+3)^(0+128)
 21873  27F7  3000               	movlw	0
 21874  27F8  00AE               	movwf	(dwt_modify32bitoffsetreg@_or+2)^(0+128)
 21875  27F9  3020               	movlw	32
 21876  27FA  00AD               	movwf	(dwt_modify32bitoffsetreg@_or+1)^(0+128)
 21877  27FB  3040               	movlw	64
 21878  27FC  00AC               	movwf	dwt_modify32bitoffsetreg@_or^(0+128)
 21879  27FD  3193  239F         	fcall	_dwt_modify32bitoffsetreg
 21880  27FF  0008               	return
 21881  2800                     __end_of__dwt_kick_dgc_on_wakeup:	
 21882                           
 21883                           	psect	text62
 21884  139F                     __ptext62:	
 21885 ;; *************** function _dwt_modify32bitoffsetreg *****************
 21886 ;; Defined at:
 21887 ;;		line 532 in file "deca_device.c"
 21888 ;; Parameters:    Size  Location     Type
 21889 ;;  regFileID       4    0[BANK1 ] const unsigned long 
 21890 ;;  regOffset       4    4[BANK1 ] const unsigned long 
 21891 ;;  _and            4    8[BANK1 ] const unsigned long 
 21892 ;;  _or             4   12[BANK1 ] const unsigned long 
 21893 ;; Auto vars:     Size  Location     Type
 21894 ;;  buf             8   16[BANK1 ] unsigned char [8]
 21895 ;; Return value:  Size  Location     Type
 21896 ;;                  1    wreg      void 
 21897 ;; Registers used:
 21898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21899 ;; Tracked objects:
 21900 ;;		On entry : 0/0
 21901 ;;		On exit  : 0/0
 21902 ;;		Unchanged: 0/0
 21903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21904 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21905 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21906 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21907 ;;      Totals:         0       5      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21908 ;;Total ram usage:       29 bytes
 21909 ;; Hardware stack levels used:    1
 21910 ;; Hardware stack levels required when called:    8
 21911 ;; This function calls:
 21912 ;;		_dwt_xfer3000
 21913 ;; This function is called by:
 21914 ;;		__dwt_kick_dgc_on_wakeup
 21915 ;;		_dwt_setdwstate
 21916 ;;		_dwt_configure
 21917 ;;		_dwt_writetxfctrl
 21918 ;;		_dwt_enable_rf_tx
 21919 ;;		_dwt_enable_rftx_blocks
 21920 ;;		__dwt_kick_ops_table_on_wakeup
 21921 ;;		_dwt_enablegpioclocks
 21922 ;;		_dwt_configurestsmode
 21923 ;;		__dwt_otpprogword32
 21924 ;;		_dwt_enableautoack
 21925 ;;		_dwt_setdblrxbuffmode
 21926 ;;		_dwt_setleds
 21927 ;;		_dwt_setinterrupt
 21928 ;;		_dwt_configuresfdtype
 21929 ;; This function uses a non-reentrant model
 21930 ;;
 21931                           
 21932                           
 21933                           ;psect for function _dwt_modify32bitoffsetreg
 21934  139F                     _dwt_modify32bitoffsetreg:	
 21935                           
 21936                           ;deca_device.c: 534: uint8_t buf[8];
 21937                           ;deca_device.c: 535: buf[0] = (uint8_t)_and;
 21938                           
 21939                           ;incstack = 0
 21940                           ; Regs used in _dwt_modify32bitoffsetreg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21941  139F  0141               	movlb	1	; select bank1
 21942  13A0  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 21943  13A1  0140               	movlb	0	; select bank0
 21944  13A2  00EB               	movwf	??_dwt_modify32bitoffsetreg
 21945  13A3  086B               	movf	??_dwt_modify32bitoffsetreg,w
 21946  13A4  0141               	movlb	1	; select bank1
 21947  13A5  00B0               	movwf	dwt_modify32bitoffsetreg@buf^(0+128)
 21948                           
 21949                           ;deca_device.c: 536: buf[1] = (uint8_t)(_and>>8);
 21950  13A6  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 21951  13A7  0140               	movlb	0	; select bank0
 21952  13A8  00EB               	movwf	??_dwt_modify32bitoffsetreg
 21953  13A9  0141               	movlb	1	; select bank1
 21954  13AA  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 21955  13AB  0140               	movlb	0	; select bank0
 21956  13AC  00EC               	movwf	??_dwt_modify32bitoffsetreg+1
 21957  13AD  0141               	movlb	1	; select bank1
 21958  13AE  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 21959  13AF  0140               	movlb	0	; select bank0
 21960  13B0  00ED               	movwf	??_dwt_modify32bitoffsetreg+2
 21961  13B1  0141               	movlb	1	; select bank1
 21962  13B2  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 21963  13B3  0140               	movlb	0	; select bank0
 21964  13B4  00EE               	movwf	??_dwt_modify32bitoffsetreg+3
 21965  13B5  3008               	movlw	8
 21966  13B6                     u9385:	
 21967  13B6  36EE               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 21968  13B7  0CED               	rrf	??_dwt_modify32bitoffsetreg+2,f
 21969  13B8  0CEC               	rrf	??_dwt_modify32bitoffsetreg+1,f
 21970  13B9  0CEB               	rrf	??_dwt_modify32bitoffsetreg,f
 21971  13BA  0B89               	decfsz	9,f
 21972  13BB  2BB6               	goto	u9385
 21973  13BC  086B               	movf	??_dwt_modify32bitoffsetreg,w
 21974  13BD  00EF               	movwf	??_dwt_modify32bitoffsetreg+4
 21975  13BE  086F               	movf	??_dwt_modify32bitoffsetreg+4,w
 21976  13BF  0141               	movlb	1	; select bank1
 21977  13C0  00B1               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+1)
 21978                           
 21979                           ;deca_device.c: 537: buf[2] = (uint8_t)(_and>>16);
 21980  13C1  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 21981  13C2  0140               	movlb	0	; select bank0
 21982  13C3  00EB               	movwf	??_dwt_modify32bitoffsetreg
 21983  13C4  0141               	movlb	1	; select bank1
 21984  13C5  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 21985  13C6  0140               	movlb	0	; select bank0
 21986  13C7  00EC               	movwf	??_dwt_modify32bitoffsetreg+1
 21987  13C8  0141               	movlb	1	; select bank1
 21988  13C9  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 21989  13CA  0140               	movlb	0	; select bank0
 21990  13CB  00ED               	movwf	??_dwt_modify32bitoffsetreg+2
 21991  13CC  0141               	movlb	1	; select bank1
 21992  13CD  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 21993  13CE  0140               	movlb	0	; select bank0
 21994  13CF  00EE               	movwf	??_dwt_modify32bitoffsetreg+3
 21995  13D0  3010               	movlw	16
 21996  13D1                     u9395:	
 21997  13D1  36EE               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 21998  13D2  0CED               	rrf	??_dwt_modify32bitoffsetreg+2,f
 21999  13D3  0CEC               	rrf	??_dwt_modify32bitoffsetreg+1,f
 22000  13D4  0CEB               	rrf	??_dwt_modify32bitoffsetreg,f
 22001  13D5  0B89               	decfsz	9,f
 22002  13D6  2BD1               	goto	u9395
 22003  13D7  086B               	movf	??_dwt_modify32bitoffsetreg,w
 22004  13D8  00EF               	movwf	??_dwt_modify32bitoffsetreg+4
 22005  13D9  086F               	movf	??_dwt_modify32bitoffsetreg+4,w
 22006  13DA  0141               	movlb	1	; select bank1
 22007  13DB  00B2               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+2)
 22008                           
 22009                           ;deca_device.c: 538: buf[3] = (uint8_t)(_and>>24);
 22010  13DC  0828               	movf	dwt_modify32bitoffsetreg@_and^(0+128),w
 22011  13DD  0140               	movlb	0	; select bank0
 22012  13DE  00EB               	movwf	??_dwt_modify32bitoffsetreg
 22013  13DF  0141               	movlb	1	; select bank1
 22014  13E0  0829               	movf	(dwt_modify32bitoffsetreg@_and+1)^(0+128),w
 22015  13E1  0140               	movlb	0	; select bank0
 22016  13E2  00EC               	movwf	??_dwt_modify32bitoffsetreg+1
 22017  13E3  0141               	movlb	1	; select bank1
 22018  13E4  082A               	movf	(dwt_modify32bitoffsetreg@_and+2)^(0+128),w
 22019  13E5  0140               	movlb	0	; select bank0
 22020  13E6  00ED               	movwf	??_dwt_modify32bitoffsetreg+2
 22021  13E7  0141               	movlb	1	; select bank1
 22022  13E8  082B               	movf	(dwt_modify32bitoffsetreg@_and+3)^(0+128),w
 22023  13E9  0140               	movlb	0	; select bank0
 22024  13EA  00EE               	movwf	??_dwt_modify32bitoffsetreg+3
 22025  13EB  3018               	movlw	24
 22026  13EC                     u9405:	
 22027  13EC  36EE               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 22028  13ED  0CED               	rrf	??_dwt_modify32bitoffsetreg+2,f
 22029  13EE  0CEC               	rrf	??_dwt_modify32bitoffsetreg+1,f
 22030  13EF  0CEB               	rrf	??_dwt_modify32bitoffsetreg,f
 22031  13F0  0B89               	decfsz	9,f
 22032  13F1  2BEC               	goto	u9405
 22033  13F2  086B               	movf	??_dwt_modify32bitoffsetreg,w
 22034  13F3  00EF               	movwf	??_dwt_modify32bitoffsetreg+4
 22035  13F4  086F               	movf	??_dwt_modify32bitoffsetreg+4,w
 22036  13F5  0141               	movlb	1	; select bank1
 22037  13F6  00B3               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+3)
 22038                           
 22039                           ;deca_device.c: 539: buf[4] = (uint8_t)_or;
 22040  13F7  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 22041  13F8  0140               	movlb	0	; select bank0
 22042  13F9  00EB               	movwf	??_dwt_modify32bitoffsetreg
 22043  13FA  086B               	movf	??_dwt_modify32bitoffsetreg,w
 22044  13FB  0141               	movlb	1	; select bank1
 22045  13FC  00B4               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+4)
 22046                           
 22047                           ;deca_device.c: 540: buf[5] = (uint8_t)(_or>>8);
 22048  13FD  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 22049  13FE  0140               	movlb	0	; select bank0
 22050  13FF  00EB               	movwf	??_dwt_modify32bitoffsetreg
 22051  1400  0141               	movlb	1	; select bank1
 22052  1401  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 22053  1402  0140               	movlb	0	; select bank0
 22054  1403  00EC               	movwf	??_dwt_modify32bitoffsetreg+1
 22055  1404  0141               	movlb	1	; select bank1
 22056  1405  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 22057  1406  0140               	movlb	0	; select bank0
 22058  1407  00ED               	movwf	??_dwt_modify32bitoffsetreg+2
 22059  1408  0141               	movlb	1	; select bank1
 22060  1409  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 22061  140A  0140               	movlb	0	; select bank0
 22062  140B  00EE               	movwf	??_dwt_modify32bitoffsetreg+3
 22063  140C  3008               	movlw	8
 22064  140D                     u9415:	
 22065  140D  36EE               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 22066  140E  0CED               	rrf	??_dwt_modify32bitoffsetreg+2,f
 22067  140F  0CEC               	rrf	??_dwt_modify32bitoffsetreg+1,f
 22068  1410  0CEB               	rrf	??_dwt_modify32bitoffsetreg,f
 22069  1411  0B89               	decfsz	9,f
 22070  1412  2C0D               	goto	u9415
 22071  1413  086B               	movf	??_dwt_modify32bitoffsetreg,w
 22072  1414  00EF               	movwf	??_dwt_modify32bitoffsetreg+4
 22073  1415  086F               	movf	??_dwt_modify32bitoffsetreg+4,w
 22074  1416  0141               	movlb	1	; select bank1
 22075  1417  00B5               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+5)
 22076                           
 22077                           ;deca_device.c: 541: buf[6] = (uint8_t)(_or>>16);
 22078  1418  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 22079  1419  0140               	movlb	0	; select bank0
 22080  141A  00EB               	movwf	??_dwt_modify32bitoffsetreg
 22081  141B  0141               	movlb	1	; select bank1
 22082  141C  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 22083  141D  0140               	movlb	0	; select bank0
 22084  141E  00EC               	movwf	??_dwt_modify32bitoffsetreg+1
 22085  141F  0141               	movlb	1	; select bank1
 22086  1420  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 22087  1421  0140               	movlb	0	; select bank0
 22088  1422  00ED               	movwf	??_dwt_modify32bitoffsetreg+2
 22089  1423  0141               	movlb	1	; select bank1
 22090  1424  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 22091  1425  0140               	movlb	0	; select bank0
 22092  1426  00EE               	movwf	??_dwt_modify32bitoffsetreg+3
 22093  1427  3010               	movlw	16
 22094  1428                     u9425:	
 22095  1428  36EE               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 22096  1429  0CED               	rrf	??_dwt_modify32bitoffsetreg+2,f
 22097  142A  0CEC               	rrf	??_dwt_modify32bitoffsetreg+1,f
 22098  142B  0CEB               	rrf	??_dwt_modify32bitoffsetreg,f
 22099  142C  0B89               	decfsz	9,f
 22100  142D  2C28               	goto	u9425
 22101  142E  086B               	movf	??_dwt_modify32bitoffsetreg,w
 22102  142F  00EF               	movwf	??_dwt_modify32bitoffsetreg+4
 22103  1430  086F               	movf	??_dwt_modify32bitoffsetreg+4,w
 22104  1431  0141               	movlb	1	; select bank1
 22105  1432  00B6               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+6)
 22106                           
 22107                           ;deca_device.c: 542: buf[7] = (uint8_t)(_or>>24);
 22108  1433  082C               	movf	dwt_modify32bitoffsetreg@_or^(0+128),w
 22109  1434  0140               	movlb	0	; select bank0
 22110  1435  00EB               	movwf	??_dwt_modify32bitoffsetreg
 22111  1436  0141               	movlb	1	; select bank1
 22112  1437  082D               	movf	(dwt_modify32bitoffsetreg@_or+1)^(0+128),w
 22113  1438  0140               	movlb	0	; select bank0
 22114  1439  00EC               	movwf	??_dwt_modify32bitoffsetreg+1
 22115  143A  0141               	movlb	1	; select bank1
 22116  143B  082E               	movf	(dwt_modify32bitoffsetreg@_or+2)^(0+128),w
 22117  143C  0140               	movlb	0	; select bank0
 22118  143D  00ED               	movwf	??_dwt_modify32bitoffsetreg+2
 22119  143E  0141               	movlb	1	; select bank1
 22120  143F  082F               	movf	(dwt_modify32bitoffsetreg@_or+3)^(0+128),w
 22121  1440  0140               	movlb	0	; select bank0
 22122  1441  00EE               	movwf	??_dwt_modify32bitoffsetreg+3
 22123  1442  3018               	movlw	24
 22124  1443                     u9435:	
 22125  1443  36EE               	lsrf	??_dwt_modify32bitoffsetreg+3,f
 22126  1444  0CED               	rrf	??_dwt_modify32bitoffsetreg+2,f
 22127  1445  0CEC               	rrf	??_dwt_modify32bitoffsetreg+1,f
 22128  1446  0CEB               	rrf	??_dwt_modify32bitoffsetreg,f
 22129  1447  0B89               	decfsz	9,f
 22130  1448  2C43               	goto	u9435
 22131  1449  086B               	movf	??_dwt_modify32bitoffsetreg,w
 22132  144A  00EF               	movwf	??_dwt_modify32bitoffsetreg+4
 22133  144B  086F               	movf	??_dwt_modify32bitoffsetreg+4,w
 22134  144C  0141               	movlb	1	; select bank1
 22135  144D  00B7               	movwf	(dwt_modify32bitoffsetreg@buf^(0+128)+7)
 22136                           
 22137                           ;deca_device.c: 543: dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND
      +                          _OR_32);
 22138  144E  0823               	movf	(dwt_modify32bitoffsetreg@regFileID+3)^(0+128),w
 22139  144F  0140               	movlb	0	; select bank0
 22140  1450  00CD               	movwf	dwt_xfer3000@regFileID+3
 22141  1451  0141               	movlb	1	; select bank1
 22142  1452  0822               	movf	(dwt_modify32bitoffsetreg@regFileID+2)^(0+128),w
 22143  1453  0140               	movlb	0	; select bank0
 22144  1454  00CC               	movwf	dwt_xfer3000@regFileID+2
 22145  1455  0141               	movlb	1	; select bank1
 22146  1456  0821               	movf	(dwt_modify32bitoffsetreg@regFileID+1)^(0+128),w
 22147  1457  0140               	movlb	0	; select bank0
 22148  1458  00CB               	movwf	dwt_xfer3000@regFileID+1
 22149  1459  0141               	movlb	1	; select bank1
 22150  145A  0820               	movf	dwt_modify32bitoffsetreg@regFileID^(0+128),w
 22151  145B  0140               	movlb	0	; select bank0
 22152  145C  00CA               	movwf	dwt_xfer3000@regFileID
 22153  145D  0141               	movlb	1	; select bank1
 22154  145E  0825               	movf	(dwt_modify32bitoffsetreg@regOffset+1)^(0+128),w
 22155  145F  0140               	movlb	0	; select bank0
 22156  1460  00CF               	movwf	dwt_xfer3000@indx+1
 22157  1461  0141               	movlb	1	; select bank1
 22158  1462  0824               	movf	dwt_modify32bitoffsetreg@regOffset^(0+128),w
 22159  1463  0140               	movlb	0	; select bank0
 22160  1464  00CE               	movwf	dwt_xfer3000@indx
 22161  1465  3000               	movlw	0
 22162  1466  00D3               	movwf	dwt_xfer3000@length+3
 22163  1467  3000               	movlw	0
 22164  1468  00D2               	movwf	dwt_xfer3000@length+2
 22165  1469  3000               	movlw	0
 22166  146A  00D1               	movwf	dwt_xfer3000@length+1
 22167  146B  3008               	movlw	8
 22168  146C  00D0               	movwf	dwt_xfer3000@length
 22169  146D  30B0               	movlw	low dwt_modify32bitoffsetreg@buf
 22170  146E  00D4               	movwf	dwt_xfer3000@buffer
 22171  146F  3000               	movlw	high dwt_modify32bitoffsetreg@buf
 22172  1470  00D5               	movwf	dwt_xfer3000@buffer+1
 22173  1471  3003               	movlw	3
 22174  1472  00D6               	movwf	dwt_xfer3000@mode
 22175  1473  3080               	movlw	128
 22176  1474  00D7               	movwf	dwt_xfer3000@mode+1
 22177  1475  3189  216D         	fcall	_dwt_xfer3000
 22178  1477  0008               	return
 22179  1478                     __end_of_dwt_modify32bitoffsetreg:	
 22180                           
 22181                           	psect	text63
 22182  096D                     __ptext63:	
 22183 ;; *************** function _dwt_xfer3000 *****************
 22184 ;; Defined at:
 22185 ;;		line 207 in file "deca_device.c"
 22186 ;; Parameters:    Size  Location     Type
 22187 ;;  regFileID       4   42[BANK0 ] const unsigned long 
 22188 ;;  indx            2   46[BANK0 ] const unsigned int 
 22189 ;;  length          4   48[BANK0 ] const unsigned long 
 22190 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 22191 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 22192 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 22193 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 22194 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 22195 ;;  mode            2   54[BANK0 ] const enum E266
 22196 ;; Auto vars:     Size  Location     Type
 22197 ;;  crc8            1   68[BANK0 ] unsigned char 
 22198 ;;  header          2   71[BANK0 ] unsigned char [2]
 22199 ;;  cnt             2   73[BANK0 ] unsigned int 
 22200 ;;  reg_offset      2   69[BANK0 ] unsigned int 
 22201 ;;  addr            2   66[BANK0 ] unsigned int 
 22202 ;;  reg_file        2   64[BANK0 ] unsigned int 
 22203 ;; Return value:  Size  Location     Type
 22204 ;;                  1    wreg      void 
 22205 ;; Registers used:
 22206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22207 ;; Tracked objects:
 22208 ;;		On entry : 0/0
 22209 ;;		On exit  : 0/0
 22210 ;;		Unchanged: 0/0
 22211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22212 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22213 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22214 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22215 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22216 ;;Total ram usage:       33 bytes
 22217 ;; Hardware stack levels used:    1
 22218 ;; Hardware stack levels required when called:    7
 22219 ;; This function calls:
 22220 ;;		__fassert
 22221 ;;		_dwt_generatecrc8
 22222 ;;		_readfromspi
 22223 ;;		_writetospi
 22224 ;;		_writetospiwithcrc
 22225 ;; This function is called by:
 22226 ;;		_dwt_writetodevice
 22227 ;;		_dwt_readfromdevice
 22228 ;;		_dwt_read8bitoffsetreg
 22229 ;;		_dwt_modify32bitoffsetreg
 22230 ;;		_dwt_modify16bitoffsetreg
 22231 ;;		_dwt_modify8bitoffsetreg
 22232 ;; This function uses a non-reentrant model
 22233 ;;
 22234                           
 22235                           
 22236                           ;psect for function _dwt_xfer3000
 22237  096D                     _dwt_xfer3000:	
 22238                           
 22239                           ;deca_device.c: 216: uint8_t header[2];
 22240                           ;deca_device.c: 217: uint16_t cnt = 0;
 22241                           
 22242                           ;incstack = 0
 22243                           ; Regs used in _dwt_xfer3000: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22244  096D  0140               	movlb	0	; select bank0
 22245  096E  01E9               	clrf	dwt_xfer3000@cnt
 22246  096F  01EA               	clrf	dwt_xfer3000@cnt+1
 22247                           
 22248                           ;deca_device.c: 218: uint16_t reg_file = 0x1F & ((regFileID + indx) >> 16);
 22249  0970  084A               	movf	dwt_xfer3000@regFileID,w
 22250  0971  00D8               	movwf	??_dwt_xfer3000
 22251  0972  084B               	movf	dwt_xfer3000@regFileID+1,w
 22252  0973  00D9               	movwf	??_dwt_xfer3000+1
 22253  0974  084C               	movf	dwt_xfer3000@regFileID+2,w
 22254  0975  00DA               	movwf	??_dwt_xfer3000+2
 22255  0976  084D               	movf	dwt_xfer3000@regFileID+3,w
 22256  0977  00DB               	movwf	??_dwt_xfer3000+3
 22257  0978  084E               	movf	dwt_xfer3000@indx,w
 22258  0979  00DC               	movwf	??_dwt_xfer3000+4
 22259  097A  084F               	movf	dwt_xfer3000@indx+1,w
 22260  097B  00DD               	movwf	??_dwt_xfer3000+5
 22261  097C  01DE               	clrf	??_dwt_xfer3000+6
 22262  097D  01DF               	clrf	??_dwt_xfer3000+7
 22263  097E  085C               	movf	??_dwt_xfer3000+4,w
 22264  097F  07D8               	addwf	??_dwt_xfer3000,f
 22265  0980  085D               	movf	??_dwt_xfer3000+5,w
 22266  0981  3DD9               	addwfc	??_dwt_xfer3000+1,f
 22267  0982  085E               	movf	??_dwt_xfer3000+6,w
 22268  0983  3DDA               	addwfc	??_dwt_xfer3000+2,f
 22269  0984  085F               	movf	??_dwt_xfer3000+7,w
 22270  0985  3DDB               	addwfc	??_dwt_xfer3000+3,f
 22271  0986  3010               	movlw	16
 22272  0987                     u9165:	
 22273  0987  36DB               	lsrf	??_dwt_xfer3000+3,f
 22274  0988  0CDA               	rrf	??_dwt_xfer3000+2,f
 22275  0989  0CD9               	rrf	??_dwt_xfer3000+1,f
 22276  098A  0CD8               	rrf	??_dwt_xfer3000,f
 22277  098B  0B89               	decfsz	9,f
 22278  098C  2987               	goto	u9165
 22279  098D  301F               	movlw	31
 22280  098E  0558               	andwf	??_dwt_xfer3000,w
 22281  098F  00E0               	movwf	dwt_xfer3000@reg_file
 22282  0990  3000               	movlw	0
 22283  0991  0559               	andwf	??_dwt_xfer3000+1,w
 22284  0992  00E1               	movwf	dwt_xfer3000@reg_file+1
 22285                           
 22286                           ;deca_device.c: 219: uint16_t reg_offset = 0x7F & (regFileID + indx);
 22287  0993  084A               	movf	dwt_xfer3000@regFileID,w
 22288  0994  074E               	addwf	dwt_xfer3000@indx,w
 22289  0995  00D8               	movwf	??_dwt_xfer3000
 22290  0996  084B               	movf	dwt_xfer3000@regFileID+1,w
 22291  0997  3D4F               	addwfc	dwt_xfer3000@indx+1,w
 22292  0998  00D9               	movwf	??_dwt_xfer3000+1
 22293  0999  307F               	movlw	127
 22294  099A  0558               	andwf	??_dwt_xfer3000,w
 22295  099B  00E5               	movwf	dwt_xfer3000@reg_offset
 22296  099C  3000               	movlw	0
 22297  099D  0559               	andwf	??_dwt_xfer3000+1,w
 22298  099E  00E6               	movwf	dwt_xfer3000@reg_offset+1
 22299                           
 22300                           ;deca_device.c: 222: if(!(reg_file <= 0x1F)) {_fassert(222, "deca_device.c", "reg_file <
      +                          = 0x1F");};
 22301  099F  3000               	movlw	0
 22302  09A0  0261               	subwf	dwt_xfer3000@reg_file+1,w
 22303  09A1  3020               	movlw	32
 22304  09A2  1903               	skipnz
 22305  09A3  0260               	subwf	dwt_xfer3000@reg_file,w
 22306  09A4  1C03               	skipc
 22307  09A5  29B5               	goto	l8686
 22308  09A6  30DE               	movlw	222
 22309  09A7  00C4               	movwf	__fassert@line
 22310  09A8  3000               	movlw	0
 22311  09A9  00C5               	movwf	__fassert@line+1
 22312  09AA  303E               	movlw	low (STR_6| (0+32768))
 22313  09AB  00C6               	movwf	__fassert@file
 22314  09AC  30A9               	movlw	high (STR_6| (0+32768))
 22315  09AD  00C7               	movwf	__fassert@file+1
 22316  09AE  30F1               	movlw	low (STR_7| (0+32768))
 22317  09AF  00C8               	movwf	__fassert@exp
 22318  09B0  30A8               	movlw	high (STR_7| (0+32768))
 22319  09B1  00C9               	movwf	__fassert@exp+1
 22320  09B2  31A1  2170  3189   	fcall	__fassert
 22321  09B5                     l8686:	
 22322                           
 22323                           ;deca_device.c: 223: if(!(reg_offset <= 0x7F)) {_fassert(223, "deca_device.c", "reg_offs
      +                          et <= 0x7F");};
 22324  09B5  3000               	movlw	0
 22325  09B6  0140               	movlb	0	; select bank0
 22326  09B7  0266               	subwf	dwt_xfer3000@reg_offset+1,w
 22327  09B8  3080               	movlw	128
 22328  09B9  1903               	skipnz
 22329  09BA  0265               	subwf	dwt_xfer3000@reg_offset,w
 22330  09BB  1C03               	skipc
 22331  09BC  29CC               	goto	l8690
 22332  09BD  30DF               	movlw	223
 22333  09BE  00C4               	movwf	__fassert@line
 22334  09BF  3000               	movlw	0
 22335  09C0  00C5               	movwf	__fassert@line+1
 22336  09C1  303E               	movlw	low (STR_6| (0+32768))
 22337  09C2  00C6               	movwf	__fassert@file
 22338  09C3  30A9               	movlw	high (STR_6| (0+32768))
 22339  09C4  00C7               	movwf	__fassert@file+1
 22340  09C5  3099               	movlw	low (STR_9| (0+32768))
 22341  09C6  00C8               	movwf	__fassert@exp
 22342  09C7  30A8               	movlw	high (STR_9| (0+32768))
 22343  09C8  00C9               	movwf	__fassert@exp+1
 22344  09C9  31A1  2170  3189   	fcall	__fassert
 22345  09CC                     l8690:	
 22346                           
 22347                           ;deca_device.c: 224: if(!(length < 0x3100)) {_fassert(224, "deca_device.c", "length < 0x
      +                          3100");};
 22348  09CC  0140               	movlb	0	; select bank0
 22349  09CD  0853               	movf	dwt_xfer3000@length+3,w
 22350  09CE  1D03               	btfss	3,2
 22351  09CF  29D7               	goto	l8692
 22352  09D0  0852               	movf	dwt_xfer3000@length+2,w
 22353  09D1  1D03               	btfss	3,2
 22354  09D2  29D7               	goto	l8692
 22355  09D3  3031               	movlw	49
 22356  09D4  0251               	subwf	dwt_xfer3000@length+1,w
 22357  09D5  1C03               	btfss	3,0
 22358  09D6  29E6               	goto	l8694
 22359  09D7                     l8692:	
 22360  09D7  30E0               	movlw	224
 22361  09D8  00C4               	movwf	__fassert@line
 22362  09D9  3000               	movlw	0
 22363  09DA  00C5               	movwf	__fassert@line+1
 22364  09DB  303E               	movlw	low (STR_6| (0+32768))
 22365  09DC  00C6               	movwf	__fassert@file
 22366  09DD  30A9               	movlw	high (STR_6| (0+32768))
 22367  09DE  00C7               	movwf	__fassert@file+1
 22368  09DF  3002               	movlw	low (STR_11| (0+32768))
 22369  09E0  00C8               	movwf	__fassert@exp
 22370  09E1  30A9               	movlw	high (STR_11| (0+32768))
 22371  09E2  00C9               	movwf	__fassert@exp+1
 22372  09E3  31A1  2170  3189   	fcall	__fassert
 22373  09E6                     l8694:	
 22374                           
 22375                           ;deca_device.c: 225: if(!(mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_RD_BIT || mode
      +                           == DW3000_SPI_AND_OR_8 || mode == DW3000_SPI_AND_OR_16 || mode == DW3000_SPI_AND_OR_32)
      +                          ) {_fassert(229, "deca_device.c", "mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_RD_BI
      +                          T || mo
 22376  09E6  3080               	movlw	128
 22377  09E7  0140               	movlb	0	; select bank0
 22378  09E8  0657               	xorwf	dwt_xfer3000@mode+1,w
 22379  09E9  0456               	iorwf	dwt_xfer3000@mode,w
 22380  09EA  1903               	btfsc	3,2
 22381  09EB  2A13               	goto	l8706
 22382  09EC  0856               	movf	dwt_xfer3000@mode,w
 22383  09ED  0457               	iorwf	dwt_xfer3000@mode+1,w
 22384  09EE  1903               	btfsc	3,2
 22385  09EF  2A13               	goto	l8706
 22386  09F0  0356               	decf	dwt_xfer3000@mode,w
 22387  09F1  3080               	movlw	128
 22388  09F2  1903               	skipnz
 22389  09F3  0657               	xorwf	dwt_xfer3000@mode+1,w
 22390  09F4  1903               	btfsc	3,2
 22391  09F5  2A13               	goto	l8706
 22392  09F6  3002               	movlw	2
 22393  09F7  0656               	xorwf	dwt_xfer3000@mode,w
 22394  09F8  3080               	movlw	128
 22395  09F9  1903               	skipnz
 22396  09FA  0657               	xorwf	dwt_xfer3000@mode+1,w
 22397  09FB  1903               	btfsc	3,2
 22398  09FC  2A13               	goto	l8706
 22399  09FD  3003               	movlw	3
 22400  09FE  0656               	xorwf	dwt_xfer3000@mode,w
 22401  09FF  3080               	movlw	128
 22402  0A00  1903               	skipnz
 22403  0A01  0657               	xorwf	dwt_xfer3000@mode+1,w
 22404  0A02  1903               	btfsc	3,2
 22405  0A03  2A13               	goto	l8706
 22406  0A04  30E5               	movlw	229
 22407  0A05  00C4               	movwf	__fassert@line
 22408  0A06  3000               	movlw	0
 22409  0A07  00C5               	movwf	__fassert@line+1
 22410  0A08  303E               	movlw	low (STR_6| (0+32768))
 22411  0A09  00C6               	movwf	__fassert@file
 22412  0A0A  30A9               	movlw	high (STR_6| (0+32768))
 22413  0A0B  00C7               	movwf	__fassert@file+1
 22414  0A0C  3004               	movlw	low (STR_13| (0+32768))
 22415  0A0D  00C8               	movwf	__fassert@exp
 22416  0A0E  3098               	movlw	high (STR_13| (0+32768))
 22417  0A0F  00C9               	movwf	__fassert@exp+1
 22418  0A10  31A1  2170  3189   	fcall	__fassert
 22419  0A13                     l8706:	
 22420                           
 22421                           ;deca_device.c: 232: uint16_t addr;
 22422                           ;deca_device.c: 233: addr = (reg_file << 9) | (reg_offset << 2);
 22423  0A13  0140               	movlb	0	; select bank0
 22424  0A14  0866               	movf	dwt_xfer3000@reg_offset+1,w
 22425  0A15  00D9               	movwf	??_dwt_xfer3000+1
 22426  0A16  0865               	movf	dwt_xfer3000@reg_offset,w
 22427  0A17  00D8               	movwf	??_dwt_xfer3000
 22428  0A18  35D8               	lslf	??_dwt_xfer3000,f
 22429  0A19  0DD9               	rlf	??_dwt_xfer3000+1,f
 22430  0A1A  35D8               	lslf	??_dwt_xfer3000,f
 22431  0A1B  0DD9               	rlf	??_dwt_xfer3000+1,f
 22432  0A1C  0861               	movf	dwt_xfer3000@reg_file+1,w
 22433  0A1D  00DB               	movwf	??_dwt_xfer3000+3
 22434  0A1E  0860               	movf	dwt_xfer3000@reg_file,w
 22435  0A1F  00DA               	movwf	??_dwt_xfer3000+2
 22436  0A20  3009               	movlw	9
 22437  0A21                     u9255:	
 22438  0A21  35DA               	lslf	??_dwt_xfer3000+2,f
 22439  0A22  0DDB               	rlf	??_dwt_xfer3000+3,f
 22440  0A23  0B89               	decfsz	9,f
 22441  0A24  2A21               	goto	u9255
 22442  0A25  0858               	movf	??_dwt_xfer3000,w
 22443  0A26  045A               	iorwf	??_dwt_xfer3000+2,w
 22444  0A27  00E2               	movwf	dwt_xfer3000@addr
 22445  0A28  0859               	movf	??_dwt_xfer3000+1,w
 22446  0A29  045B               	iorwf	??_dwt_xfer3000+3,w
 22447  0A2A  00E3               	movwf	dwt_xfer3000@addr+1
 22448                           
 22449                           ;deca_device.c: 234: header[0] = (uint8_t)((mode | addr) >> 8);
 22450  0A2B  0862               	movf	dwt_xfer3000@addr,w
 22451  0A2C  0456               	iorwf	dwt_xfer3000@mode,w
 22452  0A2D  00D8               	movwf	??_dwt_xfer3000
 22453  0A2E  0863               	movf	dwt_xfer3000@addr+1,w
 22454  0A2F  0457               	iorwf	dwt_xfer3000@mode+1,w
 22455  0A30  00D9               	movwf	??_dwt_xfer3000+1
 22456  0A31  0859               	movf	??_dwt_xfer3000+1,w
 22457  0A32  00DA               	movwf	??_dwt_xfer3000+2
 22458  0A33  085A               	movf	??_dwt_xfer3000+2,w
 22459  0A34  00E7               	movwf	dwt_xfer3000@header
 22460                           
 22461                           ;deca_device.c: 235: header[1] = (uint8_t)(addr | (mode & 0x03));
 22462  0A35  0856               	movf	dwt_xfer3000@mode,w
 22463  0A36  3903               	andlw	3
 22464  0A37  0462               	iorwf	dwt_xfer3000@addr,w
 22465  0A38  00D8               	movwf	??_dwt_xfer3000
 22466  0A39  0858               	movf	??_dwt_xfer3000,w
 22467  0A3A  00E8               	movwf	dwt_xfer3000@header+1
 22468                           
 22469                           ;deca_device.c: 236: if ( length == 0)
 22470  0A3B  0853               	movf	dwt_xfer3000@length+3,w
 22471  0A3C  0452               	iorwf	dwt_xfer3000@length+2,w
 22472  0A3D  0451               	iorwf	dwt_xfer3000@length+1,w
 22473  0A3E  0450               	iorwf	dwt_xfer3000@length,w
 22474  0A3F  1D03               	skipz
 22475  0A40  2A5C               	goto	l8722
 22476                           
 22477                           ;deca_device.c: 237: {
 22478                           ;deca_device.c: 241: if(!(mode == DW3000_SPI_WR_BIT)) {_fassert(241, "deca_device.c", "m
      +                          ode == DW3000_SPI_WR_BIT");};
 22479  0A41  3080               	movlw	128
 22480  0A42  0657               	xorwf	dwt_xfer3000@mode+1,w
 22481  0A43  0456               	iorwf	dwt_xfer3000@mode,w
 22482  0A44  1903               	btfsc	3,2
 22483  0A45  2A55               	goto	l8718
 22484  0A46  30F1               	movlw	241
 22485  0A47  00C4               	movwf	__fassert@line
 22486  0A48  3000               	movlw	0
 22487  0A49  00C5               	movwf	__fassert@line+1
 22488  0A4A  303E               	movlw	low (STR_6| (0+32768))
 22489  0A4B  00C6               	movwf	__fassert@file
 22490  0A4C  30A9               	movlw	high (STR_6| (0+32768))
 22491  0A4D  00C7               	movwf	__fassert@file+1
 22492  0A4E  3043               	movlw	low (STR_15| (0+32768))
 22493  0A4F  00C8               	movwf	__fassert@exp
 22494  0A50  30A8               	movlw	high (STR_15| (0+32768))
 22495  0A51  00C9               	movwf	__fassert@exp+1
 22496  0A52  31A1  2170  3189   	fcall	__fassert
 22497  0A55                     l8718:	
 22498                           
 22499                           ;deca_device.c: 243: header[0] = (uint8_t)((DW3000_SPI_WR_BIT>>8) | (regFileID<<1) | (0<
      +                          <6 | 1<<0));
 22500  0A55  0140               	movlb	0	; select bank0
 22501  0A56  354A               	lslf	dwt_xfer3000@regFileID,w
 22502  0A57  3881               	iorlw	129
 22503  0A58  00D8               	movwf	??_dwt_xfer3000
 22504  0A59  0858               	movf	??_dwt_xfer3000,w
 22505  0A5A  00E7               	movwf	dwt_xfer3000@header
 22506  0A5B  2A69               	goto	l8728
 22507  0A5C                     l8722:	
 22508                           ;deca_device.c: 245: }
 22509                           
 22510                           ;deca_device.c: 244: cnt = 1;
 22511                           
 22512                           
 22513                           ;deca_device.c: 246: else if (reg_offset == 0 && (mode == DW3000_SPI_WR_BIT || mode == D
      +                          W3000_SPI_RD_BIT))
 22514  0A5C  0865               	movf	dwt_xfer3000@reg_offset,w
 22515  0A5D  0466               	iorwf	dwt_xfer3000@reg_offset+1,w
 22516  0A5E  1D03               	btfss	3,2
 22517  0A5F  2A6B               	goto	l444
 22518  0A60  3080               	movlw	128
 22519  0A61  0657               	xorwf	dwt_xfer3000@mode+1,w
 22520  0A62  0456               	iorwf	dwt_xfer3000@mode,w
 22521  0A63  1903               	btfsc	3,2
 22522  0A64  2A69               	goto	l8728
 22523  0A65  0856               	movf	dwt_xfer3000@mode,w
 22524  0A66  0457               	iorwf	dwt_xfer3000@mode+1,w
 22525  0A67  1D03               	btfss	3,2
 22526  0A68  2A6B               	goto	l444
 22527  0A69                     l8728:	
 22528                           ;deca_device.c: 247: {
 22529                           ;deca_device.c: 250: header[0] |= (0<<6 | 0<<0);
 22530                           
 22531                           
 22532                           ;deca_device.c: 251: cnt = 1;
 22533  0A69  3001               	movlw	1
 22534  0A6A  2A6D               	goto	L22
 22535  0A6B                     l444:	
 22536                           ;deca_device.c: 252: }
 22537                           
 22538                           
 22539                           ;deca_device.c: 253: else
 22540                           ;deca_device.c: 254: {
 22541                           ;deca_device.c: 258: header[0] |= (1<<6);
 22542  0A6B  1767               	bsf	dwt_xfer3000@header,6
 22543                           
 22544                           ;deca_device.c: 259: cnt = 2;
 22545  0A6C  3002               	movlw	2
 22546  0A6D                     L22:	
 22547  0A6D  00E9               	movwf	dwt_xfer3000@cnt
 22548  0A6E  3000               	movlw	0
 22549  0A6F  00EA               	movwf	dwt_xfer3000@cnt+1
 22550                           
 22551                           ;deca_device.c: 260: }
 22552                           ;deca_device.c: 261: switch (mode)
 22553  0A70  2AE9               	goto	l8744
 22554  0A71                     l8732:	
 22555                           ;deca_device.c: 262: {
 22556                           ;deca_device.c: 263: case DW3000_SPI_AND_OR_8:
 22557                           
 22558                           
 22559                           ;deca_device.c: 264: case DW3000_SPI_AND_OR_16:
 22560                           ;deca_device.c: 265: case DW3000_SPI_AND_OR_32:
 22561                           ;deca_device.c: 266: case DW3000_SPI_WR_BIT:
 22562                           ;deca_device.c: 267: {
 22563                           ;deca_device.c: 268: uint8_t crc8 = 0;
 22564  0A71  01E4               	clrf	dwt_xfer3000@crc8
 22565                           
 22566                           ;deca_device.c: 269: if (pdw3000local->spicrc != DWT_SPI_CRC_MODE_NO)
 22567  0A72  087C               	movf	_pdw3000local,w
 22568  0A73  3E14               	addlw	20
 22569  0A74  0086               	movwf	6
 22570  0A75  3002               	movlw	2	; select bank4/5
 22571  0A76  0087               	movwf	7
 22572  0A77  0801               	movf	1,w
 22573  0A78  1903               	btfsc	3,2
 22574  0A79  2AB8               	goto	l8738
 22575                           
 22576                           ;deca_device.c: 270: {
 22577                           ;deca_device.c: 272: crc8 = dwt_generatecrc8(header, cnt, 0);
 22578  0A7A  3067               	movlw	low dwt_xfer3000@header
 22579  0A7B  00F1               	movwf	dwt_generatecrc8@byteArray
 22580  0A7C  3000               	movlw	high dwt_xfer3000@header
 22581  0A7D  00F2               	movwf	dwt_generatecrc8@byteArray+1
 22582  0A7E  086A               	movf	dwt_xfer3000@cnt+1,w
 22583  0A7F  00F4               	movwf	dwt_generatecrc8@len+1
 22584  0A80  0869               	movf	dwt_xfer3000@cnt,w
 22585  0A81  00F3               	movwf	dwt_generatecrc8@len
 22586  0A82  01F5               	clrf	dwt_generatecrc8@crcRemainderInit
 22587  0A83  31A4  243B  3189   	fcall	_dwt_generatecrc8
 22588  0A86  0140               	movlb	0	; select bank0
 22589  0A87  00D8               	movwf	??_dwt_xfer3000
 22590  0A88  0858               	movf	??_dwt_xfer3000,w
 22591  0A89  00E4               	movwf	dwt_xfer3000@crc8
 22592                           
 22593                           ;deca_device.c: 273: crc8 = dwt_generatecrc8(buffer, length, crc8);
 22594  0A8A  0855               	movf	dwt_xfer3000@buffer+1,w
 22595  0A8B  00F2               	movwf	dwt_generatecrc8@byteArray+1
 22596  0A8C  0854               	movf	dwt_xfer3000@buffer,w
 22597  0A8D  00F1               	movwf	dwt_generatecrc8@byteArray
 22598  0A8E  0851               	movf	dwt_xfer3000@length+1,w
 22599  0A8F  00F4               	movwf	dwt_generatecrc8@len+1
 22600  0A90  0850               	movf	dwt_xfer3000@length,w
 22601  0A91  00F3               	movwf	dwt_generatecrc8@len
 22602  0A92  0864               	movf	dwt_xfer3000@crc8,w
 22603  0A93  00D8               	movwf	??_dwt_xfer3000
 22604  0A94  0858               	movf	??_dwt_xfer3000,w
 22605  0A95  00F5               	movwf	dwt_generatecrc8@crcRemainderInit
 22606  0A96  31A4  243B  3189   	fcall	_dwt_generatecrc8
 22607  0A99  0140               	movlb	0	; select bank0
 22608  0A9A  00D9               	movwf	??_dwt_xfer3000+1
 22609  0A9B  0859               	movf	??_dwt_xfer3000+1,w
 22610  0A9C  00E4               	movwf	dwt_xfer3000@crc8
 22611                           
 22612                           ;deca_device.c: 276: writetospiwithcrc(cnt, header, length, buffer, crc8);
 22613  0A9D  086A               	movf	dwt_xfer3000@cnt+1,w
 22614  0A9E  00A1               	movwf	writetospiwithcrc@headerLength+1
 22615  0A9F  0869               	movf	dwt_xfer3000@cnt,w
 22616  0AA0  00A0               	movwf	writetospiwithcrc@headerLength
 22617  0AA1  3067               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 22618  0AA2  00D8               	movwf	??_dwt_xfer3000
 22619  0AA3  0858               	movf	??_dwt_xfer3000,w
 22620  0AA4  00A2               	movwf	writetospiwithcrc@headerBuffer
 22621  0AA5  0853               	movf	dwt_xfer3000@length+3,w
 22622  0AA6  00A6               	movwf	writetospiwithcrc@bodyLength+3
 22623  0AA7  0852               	movf	dwt_xfer3000@length+2,w
 22624  0AA8  00A5               	movwf	writetospiwithcrc@bodyLength+2
 22625  0AA9  0851               	movf	dwt_xfer3000@length+1,w
 22626  0AAA  00A4               	movwf	writetospiwithcrc@bodyLength+1
 22627  0AAB  0850               	movf	dwt_xfer3000@length,w
 22628  0AAC  00A3               	movwf	writetospiwithcrc@bodyLength
 22629  0AAD  0855               	movf	dwt_xfer3000@buffer+1,w
 22630  0AAE  00A8               	movwf	writetospiwithcrc@bodyBuffer+1
 22631  0AAF  0854               	movf	dwt_xfer3000@buffer,w
 22632  0AB0  00A7               	movwf	writetospiwithcrc@bodyBuffer
 22633  0AB1  0864               	movf	dwt_xfer3000@crc8,w
 22634  0AB2  00D9               	movwf	??_dwt_xfer3000+1
 22635  0AB3  0859               	movf	??_dwt_xfer3000+1,w
 22636  0AB4  00A9               	movwf	writetospiwithcrc@crc8
 22637  0AB5  31A3  2350         	fcall	_writetospiwithcrc
 22638                           
 22639                           ;deca_device.c: 277: }
 22640  0AB7  0008               	return
 22641  0AB8                     l8738:	
 22642                           
 22643                           ;deca_device.c: 278: else
 22644                           ;deca_device.c: 279: {
 22645                           ;deca_device.c: 281: writetospi(cnt, header, length, buffer);
 22646  0AB8  0140               	movlb	0	; select bank0
 22647  0AB9  086A               	movf	dwt_xfer3000@cnt+1,w
 22648  0ABA  00A1               	movwf	writetospi@headerLength+1
 22649  0ABB  0869               	movf	dwt_xfer3000@cnt,w
 22650  0ABC  00A0               	movwf	writetospi@headerLength
 22651  0ABD  3067               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 22652  0ABE  00D8               	movwf	??_dwt_xfer3000
 22653  0ABF  0858               	movf	??_dwt_xfer3000,w
 22654  0AC0  00A2               	movwf	writetospi@headerBuffer
 22655  0AC1  0853               	movf	dwt_xfer3000@length+3,w
 22656  0AC2  00A6               	movwf	writetospi@bodyLength+3
 22657  0AC3  0852               	movf	dwt_xfer3000@length+2,w
 22658  0AC4  00A5               	movwf	writetospi@bodyLength+2
 22659  0AC5  0851               	movf	dwt_xfer3000@length+1,w
 22660  0AC6  00A4               	movwf	writetospi@bodyLength+1
 22661  0AC7  0850               	movf	dwt_xfer3000@length,w
 22662  0AC8  00A3               	movwf	writetospi@bodyLength
 22663  0AC9  0855               	movf	dwt_xfer3000@buffer+1,w
 22664  0ACA  00A8               	movwf	writetospi@bodyBuffer+1
 22665  0ACB  0854               	movf	dwt_xfer3000@buffer,w
 22666  0ACC  00A7               	movwf	writetospi@bodyBuffer
 22667  0ACD  31A1  21F0         	fcall	_writetospi
 22668                           
 22669                           ;deca_device.c: 282: }
 22670                           ;deca_device.c: 283: break;
 22671  0ACF  0008               	return
 22672  0AD0                     l8740:	
 22673                           ;deca_device.c: 284: }
 22674                           ;deca_device.c: 285: case DW3000_SPI_RD_BIT:
 22675                           
 22676                           
 22677                           ;deca_device.c: 286: {
 22678                           ;deca_device.c: 287: readfromspi(cnt, header, length, buffer);
 22679  0AD0  0140               	movlb	0	; select bank0
 22680  0AD1  086A               	movf	dwt_xfer3000@cnt+1,w
 22681  0AD2  00A1               	movwf	readfromspi@headerLength+1
 22682  0AD3  0869               	movf	dwt_xfer3000@cnt,w
 22683  0AD4  00A0               	movwf	readfromspi@headerLength
 22684  0AD5  3067               	movlw	(low (dwt_xfer3000@header| 0))& (0+255)
 22685  0AD6  00D8               	movwf	??_dwt_xfer3000
 22686  0AD7  0858               	movf	??_dwt_xfer3000,w
 22687  0AD8  00A2               	movwf	readfromspi@headerBuffer
 22688  0AD9  0853               	movf	dwt_xfer3000@length+3,w
 22689  0ADA  00A6               	movwf	readfromspi@readlength+3
 22690  0ADB  0852               	movf	dwt_xfer3000@length+2,w
 22691  0ADC  00A5               	movwf	readfromspi@readlength+2
 22692  0ADD  0851               	movf	dwt_xfer3000@length+1,w
 22693  0ADE  00A4               	movwf	readfromspi@readlength+1
 22694  0ADF  0850               	movf	dwt_xfer3000@length,w
 22695  0AE0  00A3               	movwf	readfromspi@readlength
 22696  0AE1  0855               	movf	dwt_xfer3000@buffer+1,w
 22697  0AE2  00A8               	movwf	readfromspi@readBuffer+1
 22698  0AE3  0854               	movf	dwt_xfer3000@buffer,w
 22699  0AE4  00A7               	movwf	readfromspi@readBuffer
 22700  0AE5  31A1  21D5         	fcall	_readfromspi
 22701                           
 22702                           ;deca_device.c: 309: break;
 22703  0AE7  0008               	return
 22704  0AE8                     l458:	
 22705                           ;deca_device.c: 312: while(1);
 22706                           
 22707                           ;deca_device.c: 310: }
 22708                           ;deca_device.c: 311: default:
 22709                           
 22710  0AE8  2AE8               	goto	l458
 22711  0AE9                     l8744:	
 22712                           ;deca_device.c: 314: }
 22713                           
 22714                           ;deca_device.c: 313: break;
 22715                           
 22716                           
 22717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22718                           ; Switch size 1, requested type "space"
 22719                           ; Number of cases is 2, Range of values is 0 to 128
 22720                           ; switch strategies available:
 22721                           ; Name         Instructions Cycles
 22722                           ; simple_byte            7     4 (average)
 22723                           ; jumptable            260     6 (fixed)
 22724                           ;	Chosen strategy is simple_byte
 22725  0AE9  0140               	movlb	0	; select bank0
 22726  0AEA  0857               	movf	dwt_xfer3000@mode+1,w
 22727  0AEB  3A00               	xorlw	0	; case 0
 22728  0AEC  1903               	skipnz
 22729  0AED  2AF2               	goto	l11092
 22730  0AEE  3A80               	xorlw	128	; case 128
 22731  0AEF  1903               	skipnz
 22732  0AF0  2AF7               	goto	l11094
 22733  0AF1  2AE8               	goto	l458
 22734  0AF2                     l11092:	
 22735                           
 22736                           ; Switch size 1, requested type "space"
 22737                           ; Number of cases is 1, Range of values is 0 to 0
 22738                           ; switch strategies available:
 22739                           ; Name         Instructions Cycles
 22740                           ; simple_byte            4     3 (average)
 22741                           ; direct_byte            8     6 (fixed)
 22742                           ; jumptable            260     6 (fixed)
 22743                           ;	Chosen strategy is simple_byte
 22744  0AF2  0856               	movf	dwt_xfer3000@mode,w
 22745  0AF3  3A00               	xorlw	0	; case 0
 22746  0AF4  1903               	skipnz
 22747  0AF5  2AD0               	goto	l8740
 22748  0AF6  2AE8               	goto	l458
 22749  0AF7                     l11094:	
 22750                           
 22751                           ; Switch size 1, requested type "space"
 22752                           ; Number of cases is 4, Range of values is 0 to 3
 22753                           ; switch strategies available:
 22754                           ; Name         Instructions Cycles
 22755                           ; simple_byte           13     7 (average)
 22756                           ; direct_byte           14     6 (fixed)
 22757                           ; jumptable            260     6 (fixed)
 22758                           ;	Chosen strategy is simple_byte
 22759  0AF7  0856               	movf	dwt_xfer3000@mode,w
 22760  0AF8  3A00               	xorlw	0	; case 0
 22761  0AF9  1903               	skipnz
 22762  0AFA  2A71               	goto	l8732
 22763  0AFB  3A01               	xorlw	1	; case 1
 22764  0AFC  1903               	skipnz
 22765  0AFD  2A71               	goto	l8732
 22766  0AFE  3A03               	xorlw	3	; case 2
 22767  0AFF  1903               	skipnz
 22768  0B00  2A71               	goto	l8732
 22769  0B01  3A01               	xorlw	1	; case 3
 22770  0B02  1903               	skipnz
 22771  0B03  2A71               	goto	l8732
 22772  0B04  2AE8               	goto	l458
 22773  0B05  0008               	return
 22774  0B06                     __end_of_dwt_xfer3000:	
 22775                           
 22776                           	psect	text64
 22777  2350                     __ptext64:	
 22778 ;; *************** function _writetospiwithcrc *****************
 22779 ;; Defined at:
 22780 ;;		line 61 in file "deca_spi.c"
 22781 ;; Parameters:    Size  Location     Type
 22782 ;;  headerLength    2    0[BANK0 ] unsigned int 
 22783 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 22784 ;;		 -> dwt_xfer3000@header(2), 
 22785 ;;  bodyLength      4    3[BANK0 ] unsigned long 
 22786 ;;  bodyBuffer      2    7[BANK0 ] PTR const unsigned char 
 22787 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 22788 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 22789 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 22790 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 22791 ;;  crc8            1    9[BANK0 ] unsigned char 
 22792 ;; Auto vars:     Size  Location     Type
 22793 ;;		None
 22794 ;; Return value:  Size  Location     Type
 22795 ;;                  2    0[BANK0 ] int 
 22796 ;; Registers used:
 22797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22798 ;; Tracked objects:
 22799 ;;		On entry : 0/0
 22800 ;;		On exit  : 0/0
 22801 ;;		Unchanged: 0/0
 22802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22803 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22806 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22807 ;;Total ram usage:       10 bytes
 22808 ;; Hardware stack levels used:    1
 22809 ;; Hardware stack levels required when called:    4
 22810 ;; This function calls:
 22811 ;;		_SPI1_WriteBlock
 22812 ;; This function is called by:
 22813 ;;		_dwt_xfer3000
 22814 ;; This function uses a non-reentrant model
 22815 ;;
 22816                           
 22817                           
 22818                           ;psect for function _writetospiwithcrc
 22819  2350                     _writetospiwithcrc:	
 22820                           
 22821                           ;incstack = 0
 22822                           ; Regs used in _writetospiwithcrc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22823                           ;deca_spi.c: 69: do { LATAbits.LATA7 = 0; } while(0);
 22824  2350  0140               	movlb	0	; select bank0
 22825  2351  1396               	bcf	22,7	;volatile
 22826                           
 22827                           ;deca_spi.c: 70: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 22828  2352  0822               	movf	writetospiwithcrc@headerBuffer,w
 22829  2353  00F2               	movwf	SPI1_WriteBlock@block
 22830  2354  3000               	movlw	0
 22831  2355  00F3               	movwf	SPI1_WriteBlock@block+1
 22832  2356  0821               	movf	writetospiwithcrc@headerLength+1,w
 22833  2357  00F5               	movwf	SPI1_WriteBlock@blockSize+1
 22834  2358  0820               	movf	writetospiwithcrc@headerLength,w
 22835  2359  00F4               	movwf	SPI1_WriteBlock@blockSize
 22836  235A  31A1  2186  31A3   	fcall	_SPI1_WriteBlock
 22837                           
 22838                           ;deca_spi.c: 71: SPI1_WriteBlock((uint8_t *)bodyBuffer, bodyLength);
 22839  235D  0140               	movlb	0	; select bank0
 22840  235E  0828               	movf	writetospiwithcrc@bodyBuffer+1,w
 22841  235F  00F3               	movwf	SPI1_WriteBlock@block+1
 22842  2360  0827               	movf	writetospiwithcrc@bodyBuffer,w
 22843  2361  00F2               	movwf	SPI1_WriteBlock@block
 22844  2362  0824               	movf	writetospiwithcrc@bodyLength+1,w
 22845  2363  00F5               	movwf	SPI1_WriteBlock@blockSize+1
 22846  2364  0823               	movf	writetospiwithcrc@bodyLength,w
 22847  2365  00F4               	movwf	SPI1_WriteBlock@blockSize
 22848  2366  31A1  2186  31A3   	fcall	_SPI1_WriteBlock
 22849                           
 22850                           ;deca_spi.c: 72: SPI1_WriteBlock((uint8_t *)&crc8, 1);
 22851  2369  3029               	movlw	low writetospiwithcrc@crc8
 22852  236A  00F2               	movwf	SPI1_WriteBlock@block
 22853  236B  3000               	movlw	high writetospiwithcrc@crc8
 22854  236C  00F3               	movwf	SPI1_WriteBlock@block+1
 22855  236D  3001               	movlw	1
 22856  236E  00F4               	movwf	SPI1_WriteBlock@blockSize
 22857  236F  3000               	movlw	0
 22858  2370  00F5               	movwf	SPI1_WriteBlock@blockSize+1
 22859  2371  31A1  2186         	fcall	_SPI1_WriteBlock
 22860                           
 22861                           ;deca_spi.c: 73: do { LATAbits.LATA7 = 1; } while(0);
 22862  2373  0140               	movlb	0	; select bank0
 22863  2374  1796               	bsf	22,7	;volatile
 22864  2375  0008               	return
 22865  2376                     __end_of_writetospiwithcrc:	
 22866                           ;deca_spi.c: 74: return 0;
 22867                           ;	Return value of _writetospiwithcrc is never used
 22868                           
 22869                           
 22870                           	psect	text65
 22871  21F0                     __ptext65:	
 22872 ;; *************** function _writetospi *****************
 22873 ;; Defined at:
 22874 ;;		line 85 in file "deca_spi.c"
 22875 ;; Parameters:    Size  Location     Type
 22876 ;;  headerLength    2    0[BANK0 ] unsigned int 
 22877 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 22878 ;;		 -> dwt_xfer3000@header(2), 
 22879 ;;  bodyLength      4    3[BANK0 ] unsigned long 
 22880 ;;  bodyBuffer      2    7[BANK0 ] PTR const unsigned char 
 22881 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 22882 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 22883 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 22884 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 22885 ;; Auto vars:     Size  Location     Type
 22886 ;;		None
 22887 ;; Return value:  Size  Location     Type
 22888 ;;                  2    0[BANK0 ] int 
 22889 ;; Registers used:
 22890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22891 ;; Tracked objects:
 22892 ;;		On entry : 0/0
 22893 ;;		On exit  : 0/0
 22894 ;;		Unchanged: 0/0
 22895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22896 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22899 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22900 ;;Total ram usage:        9 bytes
 22901 ;; Hardware stack levels used:    1
 22902 ;; Hardware stack levels required when called:    4
 22903 ;; This function calls:
 22904 ;;		_SPI1_WriteBlock
 22905 ;; This function is called by:
 22906 ;;		_dwt_xfer3000
 22907 ;; This function uses a non-reentrant model
 22908 ;;
 22909                           
 22910                           
 22911                           ;psect for function _writetospi
 22912  21F0                     _writetospi:	
 22913                           
 22914                           ;incstack = 0
 22915                           ; Regs used in _writetospi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22916                           ;deca_spi.c: 90: do { LATAbits.LATA7 = 0; } while(0);
 22917  21F0  0140               	movlb	0	; select bank0
 22918  21F1  1396               	bcf	22,7	;volatile
 22919                           
 22920                           ;deca_spi.c: 91: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 22921  21F2  0822               	movf	writetospi@headerBuffer,w
 22922  21F3  00F2               	movwf	SPI1_WriteBlock@block
 22923  21F4  3000               	movlw	0
 22924  21F5  00F3               	movwf	SPI1_WriteBlock@block+1
 22925  21F6  0821               	movf	writetospi@headerLength+1,w
 22926  21F7  00F5               	movwf	SPI1_WriteBlock@blockSize+1
 22927  21F8  0820               	movf	writetospi@headerLength,w
 22928  21F9  00F4               	movwf	SPI1_WriteBlock@blockSize
 22929  21FA  31A1  2186  31A1   	fcall	_SPI1_WriteBlock
 22930                           
 22931                           ;deca_spi.c: 92: SPI1_WriteBlock((uint8_t *)bodyBuffer, bodyLength);
 22932  21FD  0140               	movlb	0	; select bank0
 22933  21FE  0828               	movf	writetospi@bodyBuffer+1,w
 22934  21FF  00F3               	movwf	SPI1_WriteBlock@block+1
 22935  2200  0827               	movf	writetospi@bodyBuffer,w
 22936  2201  00F2               	movwf	SPI1_WriteBlock@block
 22937  2202  0824               	movf	writetospi@bodyLength+1,w
 22938  2203  00F5               	movwf	SPI1_WriteBlock@blockSize+1
 22939  2204  0823               	movf	writetospi@bodyLength,w
 22940  2205  00F4               	movwf	SPI1_WriteBlock@blockSize
 22941  2206  31A1  2186         	fcall	_SPI1_WriteBlock
 22942                           
 22943                           ;deca_spi.c: 93: do { LATAbits.LATA7 = 1; } while(0);
 22944  2208  0140               	movlb	0	; select bank0
 22945  2209  1796               	bsf	22,7	;volatile
 22946  220A  0008               	return
 22947  220B                     __end_of_writetospi:	
 22948                           ;deca_spi.c: 94: return 0;
 22949                           ;	Return value of _writetospi is never used
 22950                           
 22951                           
 22952                           	psect	text66
 22953  21D5                     __ptext66:	
 22954 ;; *************** function _readfromspi *****************
 22955 ;; Defined at:
 22956 ;;		line 104 in file "deca_spi.c"
 22957 ;; Parameters:    Size  Location     Type
 22958 ;;  headerLength    2    0[BANK0 ] unsigned int 
 22959 ;;  headerBuffer    1    2[BANK0 ] PTR const unsigned char 
 22960 ;;		 -> dwt_xfer3000@header(2), 
 22961 ;;  readlength      4    3[BANK0 ] unsigned long 
 22962 ;;  readBuffer      2    7[BANK0 ] PTR unsigned char 
 22963 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 22964 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 22965 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 22966 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 22967 ;; Auto vars:     Size  Location     Type
 22968 ;;		None
 22969 ;; Return value:  Size  Location     Type
 22970 ;;                  2    0[BANK0 ] int 
 22971 ;; Registers used:
 22972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22973 ;; Tracked objects:
 22974 ;;		On entry : 0/0
 22975 ;;		On exit  : 0/0
 22976 ;;		Unchanged: 0/0
 22977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22978 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22981 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22982 ;;Total ram usage:        9 bytes
 22983 ;; Hardware stack levels used:    1
 22984 ;; Hardware stack levels required when called:    4
 22985 ;; This function calls:
 22986 ;;		_SPI1_ReadBlock
 22987 ;;		_SPI1_WriteBlock
 22988 ;; This function is called by:
 22989 ;;		_dwt_xfer3000
 22990 ;; This function uses a non-reentrant model
 22991 ;;
 22992                           
 22993                           
 22994                           ;psect for function _readfromspi
 22995  21D5                     _readfromspi:	
 22996                           
 22997                           ;incstack = 0
 22998                           ; Regs used in _readfromspi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22999                           ;deca_spi.c: 109: do { LATAbits.LATA7 = 0; } while(0);
 23000  21D5  0140               	movlb	0	; select bank0
 23001  21D6  1396               	bcf	22,7	;volatile
 23002                           
 23003                           ;deca_spi.c: 111: SPI1_WriteBlock((uint8_t *)headerBuffer, headerLength);
 23004  21D7  0822               	movf	readfromspi@headerBuffer,w
 23005  21D8  00F2               	movwf	SPI1_WriteBlock@block
 23006  21D9  3000               	movlw	0
 23007  21DA  00F3               	movwf	SPI1_WriteBlock@block+1
 23008  21DB  0821               	movf	readfromspi@headerLength+1,w
 23009  21DC  00F5               	movwf	SPI1_WriteBlock@blockSize+1
 23010  21DD  0820               	movf	readfromspi@headerLength,w
 23011  21DE  00F4               	movwf	SPI1_WriteBlock@blockSize
 23012  21DF  31A1  2186  31A1   	fcall	_SPI1_WriteBlock
 23013                           
 23014                           ;deca_spi.c: 113: SPI1_ReadBlock(readBuffer, readlength);
 23015  21E2  0140               	movlb	0	; select bank0
 23016  21E3  0828               	movf	readfromspi@readBuffer+1,w
 23017  21E4  00F3               	movwf	SPI1_ReadBlock@block+1
 23018  21E5  0827               	movf	readfromspi@readBuffer,w
 23019  21E6  00F2               	movwf	SPI1_ReadBlock@block
 23020  21E7  0824               	movf	readfromspi@readlength+1,w
 23021  21E8  00F5               	movwf	SPI1_ReadBlock@blockSize+1
 23022  21E9  0823               	movf	readfromspi@readlength,w
 23023  21EA  00F4               	movwf	SPI1_ReadBlock@blockSize
 23024  21EB  31A2  22CE         	fcall	_SPI1_ReadBlock
 23025                           
 23026                           ;deca_spi.c: 115: do { LATAbits.LATA7 = 1; } while(0);
 23027  21ED  0140               	movlb	0	; select bank0
 23028  21EE  1796               	bsf	22,7	;volatile
 23029  21EF  0008               	return
 23030  21F0                     __end_of_readfromspi:	
 23031                           ;deca_spi.c: 117: return 0;
 23032                           ;	Return value of _readfromspi is never used
 23033                           
 23034                           
 23035                           	psect	text67
 23036  2186                     __ptext67:	
 23037 ;; *************** function _SPI1_WriteBlock *****************
 23038 ;; Defined at:
 23039 ;;		line 137 in file "mcc_generated_files/spi1.c"
 23040 ;; Parameters:    Size  Location     Type
 23041 ;;  block           2    2[COMMON] PTR void 
 23042 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), writetospiwithcrc@crc8(1), 
 23043 ;;		 -> dwt_update_nonce_CCM@iv(16), NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), 
 23044 ;;		 -> dwt_modify16bitoffsetreg@buf(4), dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16b
      +itoffsetreg@buffer(2), 
 23045 ;;		 -> dwt_write32bitoffsetreg@buffer(4), dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32
      +bitoffsetreg@buffer(4), 
 23046 ;;		 -> dwt_xfer3000@header(2), 
 23047 ;;  blockSize       2    4[COMMON] unsigned int 
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;  data            2    6[COMMON] PTR unsigned char 
 23050 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), writetospiwithcrc@crc8(1), 
 23051 ;;		 -> dwt_update_nonce_CCM@iv(16), NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), 
 23052 ;;		 -> dwt_modify16bitoffsetreg@buf(4), dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16b
      +itoffsetreg@buffer(2), 
 23053 ;;		 -> dwt_write32bitoffsetreg@buffer(4), dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32
      +bitoffsetreg@buffer(4), 
 23054 ;;		 -> dwt_xfer3000@header(2), 
 23055 ;; Return value:  Size  Location     Type
 23056 ;;                  1    wreg      void 
 23057 ;; Registers used:
 23058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23059 ;; Tracked objects:
 23060 ;;		On entry : 0/0
 23061 ;;		On exit  : 0/0
 23062 ;;		Unchanged: 0/0
 23063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23065 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23067 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23068 ;;Total ram usage:        6 bytes
 23069 ;; Hardware stack levels used:    1
 23070 ;; Hardware stack levels required when called:    3
 23071 ;; This function calls:
 23072 ;;		_SPI1_ExchangeByte
 23073 ;; This function is called by:
 23074 ;;		_writetospiwithcrc
 23075 ;;		_writetospi
 23076 ;;		_readfromspi
 23077 ;; This function uses a non-reentrant model
 23078 ;;
 23079                           
 23080                           
 23081                           ;psect for function _SPI1_WriteBlock
 23082  2186                     _SPI1_WriteBlock:	
 23083                           
 23084                           ;spi1.c: 139: uint8_t *data = block;
 23085                           
 23086                           ;incstack = 0
 23087                           ; Regs used in _SPI1_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23088  2186  0873               	movf	SPI1_WriteBlock@block+1,w
 23089  2187  00F7               	movwf	SPI1_WriteBlock@data+1
 23090  2188  0872               	movf	SPI1_WriteBlock@block,w
 23091  2189  00F6               	movwf	SPI1_WriteBlock@data
 23092  218A                     l8624:	
 23093                           ;spi1.c: 140: while(blockSize--)
 23094                           
 23095  218A  3001               	movlw	1
 23096  218B  02F4               	subwf	SPI1_WriteBlock@blockSize,f
 23097  218C  3000               	movlw	0
 23098  218D  3BF5               	subwfb	SPI1_WriteBlock@blockSize+1,f
 23099  218E  0A74               	incf	SPI1_WriteBlock@blockSize,w
 23100  218F  1903               	btfsc	3,2
 23101  2190  0A75               	incf	SPI1_WriteBlock@blockSize+1,w
 23102  2191  1903               	btfsc	3,2
 23103  2192  0008               	return
 23104                           
 23105                           ;spi1.c: 141: {
 23106                           ;spi1.c: 142: SPI1_ExchangeByte(*data++);
 23107  2193  0876               	movf	SPI1_WriteBlock@data,w
 23108  2194  0086               	movwf	6
 23109  2195  0877               	movf	SPI1_WriteBlock@data+1,w
 23110  2196  0087               	movwf	7
 23111  2197  0801               	movf	1,w
 23112  2198  31A0  20CC  31A1   	fcall	_SPI1_ExchangeByte
 23113  219B  3001               	movlw	1
 23114  219C  07F6               	addwf	SPI1_WriteBlock@data,f
 23115  219D  3000               	movlw	0
 23116  219E  3DF7               	addwfc	SPI1_WriteBlock@data+1,f
 23117  219F  298A               	goto	l8624
 23118  21A0                     __end_of_SPI1_WriteBlock:	
 23119                           
 23120                           	psect	text68
 23121  22CE                     __ptext68:	
 23122 ;; *************** function _SPI1_ReadBlock *****************
 23123 ;; Defined at:
 23124 ;;		line 146 in file "mcc_generated_files/spi1.c"
 23125 ;; Parameters:    Size  Location     Type
 23126 ;;  block           2    2[COMMON] PTR void 
 23127 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 23128 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 23129 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 23130 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 23131 ;;  blockSize       2    4[COMMON] unsigned int 
 23132 ;; Auto vars:     Size  Location     Type
 23133 ;;  data            2    7[COMMON] PTR unsigned char 
 23134 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 23135 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 23136 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 23137 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), 
 23138 ;; Return value:  Size  Location     Type
 23139 ;;                  1    wreg      void 
 23140 ;; Registers used:
 23141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23142 ;; Tracked objects:
 23143 ;;		On entry : 0/0
 23144 ;;		On exit  : 0/0
 23145 ;;		Unchanged: 0/0
 23146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23150 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23151 ;;Total ram usage:        7 bytes
 23152 ;; Hardware stack levels used:    1
 23153 ;; Hardware stack levels required when called:    3
 23154 ;; This function calls:
 23155 ;;		_SPI1_ExchangeByte
 23156 ;; This function is called by:
 23157 ;;		_readfromspi
 23158 ;; This function uses a non-reentrant model
 23159 ;;
 23160                           
 23161                           
 23162                           ;psect for function _SPI1_ReadBlock
 23163  22CE                     _SPI1_ReadBlock:	
 23164                           
 23165                           ;spi1.c: 148: uint8_t *data = block;
 23166                           
 23167                           ;incstack = 0
 23168                           ; Regs used in _SPI1_ReadBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23169  22CE  0873               	movf	SPI1_ReadBlock@block+1,w
 23170  22CF  00F8               	movwf	SPI1_ReadBlock@data+1
 23171  22D0  0872               	movf	SPI1_ReadBlock@block,w
 23172  22D1  00F7               	movwf	SPI1_ReadBlock@data
 23173  22D2                     l8632:	
 23174                           ;spi1.c: 149: while(blockSize--)
 23175                           
 23176  22D2  3001               	movlw	1
 23177  22D3  02F4               	subwf	SPI1_ReadBlock@blockSize,f
 23178  22D4  3000               	movlw	0
 23179  22D5  3BF5               	subwfb	SPI1_ReadBlock@blockSize+1,f
 23180  22D6  0A74               	incf	SPI1_ReadBlock@blockSize,w
 23181  22D7  1903               	btfsc	3,2
 23182  22D8  0A75               	incf	SPI1_ReadBlock@blockSize+1,w
 23183  22D9  1903               	btfsc	3,2
 23184  22DA  0008               	return
 23185                           
 23186                           ;spi1.c: 150: {
 23187                           ;spi1.c: 151: *data++ = SPI1_ExchangeByte(0);
 23188  22DB  3000               	movlw	0
 23189  22DC  31A0  20CC  31A2   	fcall	_SPI1_ExchangeByte
 23190  22DF  00F6               	movwf	??_SPI1_ReadBlock
 23191  22E0  0877               	movf	SPI1_ReadBlock@data,w
 23192  22E1  0086               	movwf	6
 23193  22E2  0878               	movf	SPI1_ReadBlock@data+1,w
 23194  22E3  0087               	movwf	7
 23195  22E4  0876               	movf	??_SPI1_ReadBlock,w
 23196  22E5  0081               	movwf	1
 23197  22E6  3001               	movlw	1
 23198  22E7  07F7               	addwf	SPI1_ReadBlock@data,f
 23199  22E8  3000               	movlw	0
 23200  22E9  3DF8               	addwfc	SPI1_ReadBlock@data+1,f
 23201  22EA  2AD2               	goto	l8632
 23202  22EB                     __end_of_SPI1_ReadBlock:	
 23203                           
 23204                           	psect	text69
 23205  20CC                     __ptext69:	
 23206 ;; *************** function _SPI1_ExchangeByte *****************
 23207 ;; Defined at:
 23208 ;;		line 116 in file "mcc_generated_files/spi1.c"
 23209 ;; Parameters:    Size  Location     Type
 23210 ;;  data            1    wreg     unsigned char 
 23211 ;; Auto vars:     Size  Location     Type
 23212 ;;  data            1    1[COMMON] unsigned char 
 23213 ;; Return value:  Size  Location     Type
 23214 ;;                  1    wreg      unsigned char 
 23215 ;; Registers used:
 23216 ;;		wreg
 23217 ;; Tracked objects:
 23218 ;;		On entry : 0/0
 23219 ;;		On exit  : 0/0
 23220 ;;		Unchanged: 0/0
 23221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23226 ;;Total ram usage:        1 bytes
 23227 ;; Hardware stack levels used:    1
 23228 ;; Hardware stack levels required when called:    2
 23229 ;; This function calls:
 23230 ;;		Nothing
 23231 ;; This function is called by:
 23232 ;;		_SPI1_WriteBlock
 23233 ;;		_SPI1_ReadBlock
 23234 ;; This function uses a non-reentrant model
 23235 ;;
 23236                           
 23237                           
 23238                           ;psect for function _SPI1_ExchangeByte
 23239  20CC                     _SPI1_ExchangeByte:	
 23240                           
 23241                           ;incstack = 0
 23242                           ; Regs used in _SPI1_ExchangeByte: [wreg]
 23243                           ;SPI1_ExchangeByte@data stored from wreg
 23244  20CC  00F1               	movwf	SPI1_ExchangeByte@data
 23245                           
 23246                           ;spi1.c: 118: SSP1BUF = data;
 23247  20CD  0871               	movf	SPI1_ExchangeByte@data,w
 23248  20CE  0143               	movlb	3	; select bank3
 23249  20CF  008C               	movwf	12	;volatile
 23250  20D0                     l261:	
 23251                           ;spi1.c: 119: while(!PIR3bits.SSP1IF);
 23252                           
 23253  20D0  014E               	movlb	14	; select bank14
 23254  20D1  1C0F               	btfss	15,0	;volatile
 23255  20D2  28D0               	goto	l261
 23256                           
 23257                           ;spi1.c: 120: PIR3bits.SSP1IF = 0;
 23258  20D3  100F               	bcf	15,0	;volatile
 23259                           
 23260                           ;spi1.c: 121: return SSP1BUF;
 23261  20D4  0143               	movlb	3	; select bank3
 23262  20D5  080C               	movf	12,w	;volatile
 23263  20D6  0008               	return
 23264  20D7                     __end_of_SPI1_ExchangeByte:	
 23265                           
 23266                           	psect	text70
 23267  243B                     __ptext70:	
 23268 ;; *************** function _dwt_generatecrc8 *****************
 23269 ;; Defined at:
 23270 ;;		line 639 in file "deca_device.c"
 23271 ;; Parameters:    Size  Location     Type
 23272 ;;  byteArray       2    1[COMMON] PTR const unsigned char 
 23273 ;;		 -> get_tx_timestamp_u64@ts(8), get_sys_timestamp_u64@ts(8), tx_blink_msg(36), dwt_update_nonce_CCM@iv(16), 
 23274 ;;		 -> NULL(0), dwt_readcarrierintegrator@buffer(3), dwt_modify8bitoffsetreg@buf(2), dwt_modify16bitoffsetreg@buf(4), 
 23275 ;;		 -> dwt_modify32bitoffsetreg@buf(8), dwt_write8bitoffsetreg@regval(1), dwt_write16bitoffsetreg@buffer(2), dwt_write3
      +2bitoffsetreg@buffer(4), 
 23276 ;;		 -> dwt_read8bitoffsetreg@regval(1), dwt_read16bitoffsetreg@buffer(2), dwt_read32bitoffsetreg@buffer(4), dwt_xfer300
      +0@header(2), 
 23277 ;;  len             2    3[COMMON] int 
 23278 ;;  crcRemainder    1    5[COMMON] unsigned char 
 23279 ;; Auto vars:     Size  Location     Type
 23280 ;;  byte            2    8[COMMON] int 
 23281 ;;  data            1    7[COMMON] unsigned char 
 23282 ;; Return value:  Size  Location     Type
 23283 ;;                  1    wreg      unsigned char 
 23284 ;; Registers used:
 23285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/0
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23291 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23292 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23294 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23295 ;;Total ram usage:        9 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; Hardware stack levels required when called:    2
 23298 ;; This function calls:
 23299 ;;		Nothing
 23300 ;; This function is called by:
 23301 ;;		_dwt_xfer3000
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           
 23306                           ;psect for function _dwt_generatecrc8
 23307  243B                     _dwt_generatecrc8:	
 23308                           
 23309                           ;deca_device.c: 641: uint8_t data;
 23310                           ;deca_device.c: 642: int byte;
 23311                           ;deca_device.c: 647: for (byte = 0; byte < len; ++byte)
 23312                           
 23313                           ;incstack = 0
 23314                           ; Regs used in _dwt_generatecrc8: [wreg+fsr1l+fsr1h+status,2+status,0]
 23315  243B  01F8               	clrf	dwt_generatecrc8@byte
 23316  243C  01F9               	clrf	dwt_generatecrc8@byte+1
 23317  243D                     l8652:	
 23318  243D  0879               	movf	dwt_generatecrc8@byte+1,w
 23319  243E  3A80               	xorlw	128
 23320  243F  00F6               	movwf	??_dwt_generatecrc8
 23321  2440  0874               	movf	dwt_generatecrc8@len+1,w
 23322  2441  3A80               	xorlw	128
 23323  2442  0276               	subwf	??_dwt_generatecrc8,w
 23324  2443  1D03               	skipz
 23325  2444  2C47               	goto	u9155
 23326  2445  0873               	movf	dwt_generatecrc8@len,w
 23327  2446  0278               	subwf	dwt_generatecrc8@byte,w
 23328  2447                     u9155:	
 23329  2447  1803               	btfsc	3,0
 23330  2448  2C63               	goto	l8654
 23331                           
 23332                           ;deca_device.c: 648: {
 23333                           ;deca_device.c: 649: data = byteArray[byte] ^ crcRemainderInit;
 23334  2449  0878               	movf	dwt_generatecrc8@byte,w
 23335  244A  0771               	addwf	dwt_generatecrc8@byteArray,w
 23336  244B  0086               	movwf	6
 23337  244C  0879               	movf	dwt_generatecrc8@byte+1,w
 23338  244D  3D72               	addwfc	dwt_generatecrc8@byteArray+1,w
 23339  244E  0087               	movwf	7
 23340  244F  0801               	movf	1,w
 23341  2450  0675               	xorwf	dwt_generatecrc8@crcRemainderInit,w
 23342  2451  00F6               	movwf	??_dwt_generatecrc8
 23343  2452  0876               	movf	??_dwt_generatecrc8,w
 23344  2453  00F7               	movwf	dwt_generatecrc8@data
 23345                           
 23346                           ;deca_device.c: 650: crcRemainderInit = crcTable[data];
 23347  2454  0877               	movf	dwt_generatecrc8@data,w
 23348  2455  3EF0               	addlw	240
 23349  2456  0086               	movwf	6
 23350  2457  0187               	clrf	7
 23351  2458  302E               	movlw	46
 23352  2459  3D87               	addwfc	7,f
 23353  245A  0801               	movf	1,w
 23354  245B  00F6               	movwf	??_dwt_generatecrc8
 23355  245C  0876               	movf	??_dwt_generatecrc8,w
 23356  245D  00F5               	movwf	dwt_generatecrc8@crcRemainderInit
 23357  245E  3001               	movlw	1
 23358  245F  07F8               	addwf	dwt_generatecrc8@byte,f
 23359  2460  3000               	movlw	0
 23360  2461  3DF9               	addwfc	dwt_generatecrc8@byte+1,f
 23361  2462  2C3D               	goto	l8652
 23362  2463                     l8654:	
 23363                           
 23364                           ;deca_device.c: 651: }
 23365                           ;deca_device.c: 656: return(crcRemainderInit);
 23366  2463  0875               	movf	dwt_generatecrc8@crcRemainderInit,w
 23367  2464  0008               	return
 23368  2465                     __end_of_dwt_generatecrc8:	
 23369                           
 23370                           	psect	text71
 23371  2170                     __ptext71:	
 23372 ;; *************** function __fassert *****************
 23373 ;; Defined at:
 23374 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\assert.c"
 23375 ;; Parameters:    Size  Location     Type
 23376 ;;  line            2   36[BANK0 ] int 
 23377 ;;  file            2   38[BANK0 ] PTR const unsigned char 
 23378 ;;		 -> STR_16(14), STR_14(14), STR_12(14), STR_10(14), 
 23379 ;;		 -> STR_8(14), STR_6(14), 
 23380 ;;  exp             2   40[BANK0 ] PTR const unsigned char 
 23381 ;;		 -> STR_17(2), STR_15(26), STR_13(150), STR_11(16), 
 23382 ;;		 -> STR_9(19), STR_7(17), 
 23383 ;; Auto vars:     Size  Location     Type
 23384 ;;		None
 23385 ;; Return value:  Size  Location     Type
 23386 ;;                  1    wreg      void 
 23387 ;; Registers used:
 23388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23389 ;; Tracked objects:
 23390 ;;		On entry : 0/0
 23391 ;;		On exit  : 0/0
 23392 ;;		Unchanged: 0/0
 23393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23394 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23397 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23398 ;;Total ram usage:        6 bytes
 23399 ;; Hardware stack levels used:    1
 23400 ;; Hardware stack levels required when called:    6
 23401 ;; This function calls:
 23402 ;;		_printf
 23403 ;; This function is called by:
 23404 ;;		_dwt_xfer3000
 23405 ;;		_dwt_readaccdata
 23406 ;; This function uses a non-reentrant model
 23407 ;;
 23408                           
 23409                           
 23410                           ;psect for function __fassert
 23411  2170                     __fassert:	
 23412                           
 23413                           ;incstack = 0
 23414                           ; Regs used in __fassert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23415  2170  3000               	movlw	low (STR_32| (0+32768))
 23416  2171  0140               	movlb	0	; select bank0
 23417  2172  00B8               	movwf	printf@f
 23418  2173  30A8               	movlw	high (STR_32| (0+32768))
 23419  2174  00B9               	movwf	printf@f+1
 23420  2175  0847               	movf	__fassert@file+1,w
 23421  2176  00BB               	movwf	(low ((?_printf| 0+2))+1)
 23422  2177  0846               	movf	__fassert@file,w
 23423  2178  00BA               	movwf	low ((?_printf| 0+2))
 23424  2179  0845               	movf	__fassert@line+1,w
 23425  217A  00BD               	movwf	?_printf+5
 23426  217B  0844               	movf	__fassert@line,w
 23427  217C  00BC               	movwf	?_printf+4
 23428  217D  0849               	movf	__fassert@exp+1,w
 23429  217E  00BF               	movwf	(low ((?_printf| 0+6))+1)
 23430  217F  0848               	movf	__fassert@exp,w
 23431  2180  00BE               	movwf	low ((?_printf| 0+6))
 23432  2181  31A1  215A         	fcall	_printf
 23433  2183  31A1  2970         	ljmp	$	;# 
 23434  2185  0008               	return
 23435  2186                     __end_of__fassert:	
 23436                           
 23437                           	psect	text72
 23438  215A                     __ptext72:	
 23439 ;; *************** function _printf *****************
 23440 ;; Defined at:
 23441 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 23442 ;; Parameters:    Size  Location     Type
 23443 ;;  f               2   24[BANK0 ] PTR const unsigned char 
 23444 ;;		 -> STR_32(36), STR_29(17), STR_28(18), STR_27(15), 
 23445 ;; Auto vars:     Size  Location     Type
 23446 ;;  pb              3   33[BANK0 ] struct __prbuf
 23447 ;;  ap              1   32[BANK0 ] PTR void [1]
 23448 ;;		 -> ?_sprintf(2), ?_printf(2), 
 23449 ;; Return value:  Size  Location     Type
 23450 ;;                  2   24[BANK0 ] int 
 23451 ;; Registers used:
 23452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23453 ;; Tracked objects:
 23454 ;;		On entry : 0/0
 23455 ;;		On exit  : 0/0
 23456 ;;		Unchanged: 0/0
 23457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23458 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23461 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23462 ;;Total ram usage:       13 bytes
 23463 ;; Hardware stack levels used:    1
 23464 ;; Hardware stack levels required when called:    5
 23465 ;; This function calls:
 23466 ;;		__doprnt
 23467 ;; This function is called by:
 23468 ;;		_pmic_status_read
 23469 ;;		__fassert
 23470 ;; This function uses a non-reentrant model
 23471 ;;
 23472                           
 23473                           
 23474                           ;psect for function _printf
 23475  215A                     _printf:	
 23476                           
 23477                           ;incstack = 0
 23478                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23479  215A  0140               	movlb	0	; select bank0
 23480  215B  01C1               	clrf	printf@pb
 23481  215C  3086               	movlw	low _putch
 23482  215D  00C2               	movwf	low ((printf@pb| 0+1))
 23483  215E  3020               	movlw	high _putch
 23484  215F  00C3               	movwf	(low ((printf@pb| 0+1))+1)
 23485  2160  303A               	movlw	(low ((?_printf| 0+2)))& (0+255)
 23486  2161  00FB               	movwf	??_printf
 23487  2162  087B               	movf	??_printf,w
 23488  2163  00C0               	movwf	printf@ap
 23489                           
 23490                           ;	Return value of _printf is never used
 23491  2164  0839               	movf	printf@f+1,w
 23492  2165  00A5               	movwf	__doprnt@f+1
 23493  2166  0838               	movf	printf@f,w
 23494  2167  00A4               	movwf	__doprnt@f
 23495  2168  3040               	movlw	(low (printf@ap| 0))& (0+255)
 23496  2169  00FB               	movwf	??_printf
 23497  216A  087B               	movf	??_printf,w
 23498  216B  00A6               	movwf	__doprnt@ap
 23499  216C  3041               	movlw	(low (printf@pb| 0))& (0+255)
 23500  216D  318C  24BD         	fcall	__doprnt
 23501  216F  0008               	return
 23502  2170                     __end_of_printf:	
 23503                           
 23504                           	psect	text73
 23505  0CBD                     __ptext73:	
 23506 ;; *************** function __doprnt *****************
 23507 ;; Defined at:
 23508 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23509 ;; Parameters:    Size  Location     Type
 23510 ;;  pb              1    wreg     PTR struct __prbuf
 23511 ;;		 -> sprintf@pb(3), printf@pb(3), 
 23512 ;;  f               2    4[BANK0 ] PTR const unsigned char 
 23513 ;;		 -> STR_32(36), STR_29(17), STR_28(18), STR_27(15), 
 23514 ;;		 -> STR_5(31), STR_4(14), STR_3(10), STR_2(10), 
 23515 ;;  ap              1    6[BANK0 ] PTR PTR void 
 23516 ;;		 -> sprintf@ap(1), printf@ap(1), 
 23517 ;; Auto vars:     Size  Location     Type
 23518 ;;  pb              1   23[BANK0 ] PTR struct __prbuf
 23519 ;;		 -> sprintf@pb(3), printf@pb(3), 
 23520 ;;  idx             1   11[BANK0 ] unsigned char 
 23521 ;;  tmpval          4    0        struct .
 23522 ;;  width           2   20[BANK0 ] int 
 23523 ;;  val             2   17[BANK0 ] unsigned int 
 23524 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
 23525 ;;		 -> ?_sprintf(2), ?_printf(2), STR_30(7), NULL(0), 
 23526 ;;		 -> STR_17(2), STR_16(14), STR_15(26), STR_14(14), 
 23527 ;;		 -> STR_13(150), STR_12(14), STR_11(16), STR_10(14), 
 23528 ;;		 -> STR_9(19), STR_8(14), STR_7(17), STR_6(14), 
 23529 ;;		 -> print_uint64_t@print_data(50), print_uint32_t@print_data(20), print_uint16_t@print_data(20), print_uint8_t@print
      +_data(20), 
 23530 ;;  len             2   13[BANK0 ] unsigned int 
 23531 ;;  c               1   22[BANK0 ] char 
 23532 ;;  flag            1   19[BANK0 ] unsigned char 
 23533 ;;  prec            1   12[BANK0 ] char 
 23534 ;; Return value:  Size  Location     Type
 23535 ;;                  2    4[BANK0 ] int 
 23536 ;; Registers used:
 23537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23538 ;; Tracked objects:
 23539 ;;		On entry : 0/0
 23540 ;;		On exit  : 0/0
 23541 ;;		Unchanged: 0/0
 23542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23543 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23544 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23545 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23546 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23547 ;;Total ram usage:       20 bytes
 23548 ;; Hardware stack levels used:    1
 23549 ;; Hardware stack levels required when called:    4
 23550 ;; This function calls:
 23551 ;;		Absolute function
 23552 ;;		___lwdiv
 23553 ;;		___lwmod
 23554 ;;		___wmul
 23555 ;;		_isdigit
 23556 ;;		_putch
 23557 ;; This function is called by:
 23558 ;;		_printf
 23559 ;; This function uses a non-reentrant model
 23560 ;;
 23561                           
 23562                           
 23563                           ;psect for function __doprnt
 23564  0CBD                     __doprnt:	
 23565                           
 23566                           ;incstack = 0
 23567                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23568                           ;__doprnt@pb stored from wreg
 23569  0CBD  0140               	movlb	0	; select bank0
 23570  0CBE  00B7               	movwf	__doprnt@pb
 23571  0CBF                     l8612:	
 23572                           ;doprnt.c: 499: signed char c;
 23573                           ;doprnt.c: 501: int width;
 23574                           ;doprnt.c: 506: signed char prec;
 23575                           ;doprnt.c: 508: unsigned char flag;
 23576                           ;doprnt.c: 523: union {
 23577                           ;doprnt.c: 524: unsigned long vd;
 23578                           ;doprnt.c: 525: double integ;
 23579                           ;doprnt.c: 526: } tmpval;
 23580                           ;doprnt.c: 528: unsigned int val;
 23581                           ;doprnt.c: 529: unsigned len;
 23582                           ;doprnt.c: 530: const char * cp;
 23583                           ;doprnt.c: 536: while(c = *f++) {
 23584                           
 23585  0CBF  0140               	movlb	0	; select bank0
 23586  0CC0  0825               	movf	__doprnt@f+1,w
 23587  0CC1  00A8               	movwf	??__doprnt+1
 23588  0CC2  0824               	movf	__doprnt@f,w
 23589  0CC3  00A7               	movwf	??__doprnt
 23590  0CC4  0AA4               	incf	__doprnt@f,f
 23591  0CC5  1903               	skipnz
 23592  0CC6  0AA5               	incf	__doprnt@f+1,f
 23593  0CC7  0827               	movf	??__doprnt,w
 23594  0CC8  0084               	movwf	4
 23595  0CC9  0828               	movf	??__doprnt+1,w
 23596  0CCA  0085               	movwf	5
 23597  0CCB  0800               	movf	0,w	;code access
 23598  0CCC  00A9               	movwf	??__doprnt+2
 23599  0CCD  0829               	movf	??__doprnt+2,w
 23600  0CCE  00B6               	movwf	__doprnt@c
 23601  0CCF  0836               	movf	__doprnt@c,w
 23602  0CD0  1903               	btfsc	3,2
 23603  0CD1  2FFC               	goto	l8614
 23604                           
 23605                           ;doprnt.c: 538: if(c != '%')
 23606  0CD2  3025               	movlw	37
 23607  0CD3  0636               	xorwf	__doprnt@c,w
 23608  0CD4  1903               	btfsc	3,2
 23609  0CD5  2CFD               	goto	l8434
 23610                           
 23611                           ;doprnt.c: 540: {
 23612                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 23613  0CD6  0A37               	incf	__doprnt@pb,w
 23614  0CD7  0086               	movwf	6
 23615  0CD8  0187               	clrf	7
 23616  0CD9  0016               	moviw fsr1++
 23617  0CDA  0401               	iorwf	1,w
 23618  0CDB  1903               	btfsc	3,2
 23619  0CDC  2CEA               	goto	l8430
 23620  0CDD  0836               	movf	__doprnt@c,w
 23621  0CDE  00A7               	movwf	??__doprnt
 23622  0CDF  0827               	movf	??__doprnt,w
 23623  0CE0  00F2               	movwf	putch@txData
 23624  0CE1  0A37               	incf	__doprnt@pb,w
 23625  0CE2  0086               	movwf	6
 23626  0CE3  0187               	clrf	7
 23627  0CE4  3F41               	moviw [1]fsr1
 23628  0CE5  008A               	movwf	10
 23629  0CE6  3F40               	moviw [0]fsr1
 23630  0CE7  000A               	callw
 23631  0CE8  318C               	pagesel	$
 23632  0CE9  2CBF               	goto	l8612
 23633  0CEA                     l8430:	
 23634  0CEA  0140               	movlb	0	; select bank0
 23635  0CEB  0836               	movf	__doprnt@c,w
 23636  0CEC  00A7               	movwf	??__doprnt
 23637  0CED  0837               	movf	__doprnt@pb,w
 23638  0CEE  0086               	movwf	6
 23639  0CEF  0187               	clrf	7
 23640  0CF0  0801               	movf	1,w
 23641  0CF1  0086               	movwf	6
 23642  0CF2  0187               	clrf	7
 23643  0CF3  0827               	movf	??__doprnt,w
 23644  0CF4  0081               	movwf	1
 23645  0CF5  3001               	movlw	1
 23646  0CF6  00A7               	movwf	??__doprnt
 23647  0CF7  0837               	movf	__doprnt@pb,w
 23648  0CF8  0086               	movwf	6
 23649  0CF9  0187               	clrf	7
 23650  0CFA  0827               	movf	??__doprnt,w
 23651  0CFB  0781               	addwf	1,f
 23652                           
 23653                           ;doprnt.c: 542: continue;
 23654  0CFC  2CBF               	goto	l8612
 23655  0CFD                     l8434:	
 23656                           
 23657                           ;doprnt.c: 543: }
 23658                           ;doprnt.c: 546: width = 0;
 23659  0CFD  01B4               	clrf	__doprnt@width
 23660  0CFE  01B5               	clrf	__doprnt@width+1
 23661                           
 23662                           ;doprnt.c: 548: flag = 0;
 23663  0CFF  01B3               	clrf	__doprnt@flag
 23664                           
 23665                           ;doprnt.c: 551: switch(*f) {
 23666                           
 23667                           ;doprnt.c: 550: for(;;) {
 23668  0D00  2D06               	goto	l8440
 23669  0D01                     l1731:	
 23670                           ;doprnt.c: 579: case '0':
 23671                           
 23672                           
 23673                           ;doprnt.c: 580: flag |= 0x04;
 23674  0D01  1533               	bsf	__doprnt@flag,2
 23675                           
 23676                           ;doprnt.c: 581: f++;
 23677  0D02  3001               	movlw	1
 23678  0D03  07A4               	addwf	__doprnt@f,f
 23679  0D04  3000               	movlw	0
 23680  0D05  3DA5               	addwfc	__doprnt@f+1,f
 23681  0D06                     l8440:	
 23682                           ;doprnt.c: 584: }
 23683                           
 23684                           ;doprnt.c: 582: continue;
 23685                           
 23686  0D06  0824               	movf	__doprnt@f,w
 23687  0D07  0084               	movwf	4
 23688  0D08  0825               	movf	__doprnt@f+1,w
 23689  0D09  0085               	movwf	5
 23690  0D0A  0800               	movf	0,w	;code access
 23691                           
 23692                           ; Switch size 1, requested type "space"
 23693                           ; Number of cases is 1, Range of values is 48 to 48
 23694                           ; switch strategies available:
 23695                           ; Name         Instructions Cycles
 23696                           ; simple_byte            4     3 (average)
 23697                           ; direct_byte           11     9 (fixed)
 23698                           ; jumptable            263     9 (fixed)
 23699                           ;	Chosen strategy is simple_byte
 23700  0D0B  3A30               	xorlw	48	; case 48
 23701  0D0C  1903               	skipnz
 23702  0D0D  2D01               	goto	l1731
 23703  0D0E  2D0F               	goto	l8442
 23704  0D0F                     l8442:	
 23705                           ;doprnt.c: 586: }
 23706                           
 23707                           ;doprnt.c: 585: break;
 23708                           
 23709                           
 23710                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 23711  0D0F  0824               	movf	__doprnt@f,w
 23712  0D10  0084               	movwf	4
 23713  0D11  0825               	movf	__doprnt@f+1,w
 23714  0D12  0085               	movwf	5
 23715  0D13  0800               	movf	0,w	;code access
 23716  0D14  31A1  2113  318C   	fcall	_isdigit
 23717  0D17  1C03               	btfss	3,0
 23718  0D18  2DF3               	goto	l8498
 23719                           
 23720                           ;doprnt.c: 598: width = 0;
 23721  0D19  0140               	movlb	0	; select bank0
 23722  0D1A  01B4               	clrf	__doprnt@width
 23723  0D1B  01B5               	clrf	__doprnt@width+1
 23724  0D1C                     l8446:	
 23725                           ;doprnt.c: 599: do {
 23726                           
 23727                           
 23728                           ;doprnt.c: 600: width *= 10;
 23729  0D1C  300A               	movlw	10
 23730  0D1D  00F1               	movwf	___wmul@multiplier
 23731  0D1E  3000               	movlw	0
 23732  0D1F  00F2               	movwf	___wmul@multiplier+1
 23733  0D20  0140               	movlb	0	; select bank0
 23734  0D21  0835               	movf	__doprnt@width+1,w
 23735  0D22  00F4               	movwf	___wmul@multiplicand+1
 23736  0D23  0834               	movf	__doprnt@width,w
 23737  0D24  00F3               	movwf	___wmul@multiplicand
 23738  0D25  31A1  21BA  318C   	fcall	___wmul
 23739  0D28  0872               	movf	?___wmul+1,w
 23740  0D29  0140               	movlb	0	; select bank0
 23741  0D2A  00B5               	movwf	__doprnt@width+1
 23742  0D2B  0871               	movf	?___wmul,w
 23743  0D2C  00B4               	movwf	__doprnt@width
 23744                           
 23745                           ;doprnt.c: 601: width += *f++ - '0';
 23746  0D2D  0824               	movf	__doprnt@f,w
 23747  0D2E  0084               	movwf	4
 23748  0D2F  0825               	movf	__doprnt@f+1,w
 23749  0D30  0085               	movwf	5
 23750  0D31  0800               	movf	0,w	;code access
 23751  0D32  3ED0               	addlw	208
 23752  0D33  00A7               	movwf	??__doprnt
 23753  0D34  30FF               	movlw	255
 23754  0D35  1803               	skipnc
 23755  0D36  3000               	movlw	0
 23756  0D37  00A8               	movwf	??__doprnt+1
 23757  0D38  0827               	movf	??__doprnt,w
 23758  0D39  07B4               	addwf	__doprnt@width,f
 23759  0D3A  0828               	movf	??__doprnt+1,w
 23760  0D3B  3DB5               	addwfc	__doprnt@width+1,f
 23761  0D3C  3001               	movlw	1
 23762  0D3D  07A4               	addwf	__doprnt@f,f
 23763  0D3E  3000               	movlw	0
 23764  0D3F  3DA5               	addwfc	__doprnt@f+1,f
 23765                           
 23766                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 23767  0D40  0824               	movf	__doprnt@f,w
 23768  0D41  0084               	movwf	4
 23769  0D42  0825               	movf	__doprnt@f+1,w
 23770  0D43  0085               	movwf	5
 23771  0D44  0800               	movf	0,w	;code access
 23772  0D45  31A1  2113  318C   	fcall	_isdigit
 23773  0D48  1C03               	btfss	3,0
 23774  0D49  2DF3               	goto	l8498
 23775  0D4A  2D1C               	goto	l8446
 23776  0D4B                     l1745:	
 23777                           ;doprnt.c: 712: case 'X':
 23778                           
 23779                           ;doprnt.c: 698: case 'i':
 23780                           ;doprnt.c: 699: break;
 23781                           
 23782                           ;doprnt.c: 697: case 'd':
 23783                           
 23784                           ;doprnt.c: 638: goto alldone;
 23785                           
 23786                           ;doprnt.c: 637: case 0:
 23787                           
 23788                           ;doprnt.c: 608: }
 23789                           ;doprnt.c: 635: switch(c = *f++) {
 23790                           
 23791                           
 23792                           ;doprnt.c: 718: case 'x':
 23793                           ;doprnt.c: 721: flag |= 0x80;
 23794  0D4B  0140               	movlb	0	; select bank0
 23795  0D4C  17B3               	bsf	__doprnt@flag,7
 23796                           
 23797                           ;doprnt.c: 723: break;
 23798  0D4D  2E14               	goto	l1743
 23799  0D4E                     l8454:	
 23800                           ;doprnt.c: 728: case 's':
 23801                           
 23802                           
 23803                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 23804  0D4E  0826               	movf	__doprnt@ap,w
 23805  0D4F  0086               	movwf	6
 23806  0D50  0187               	clrf	7
 23807  0D51  0801               	movf	1,w
 23808  0D52  0084               	movwf	4
 23809  0D53  0185               	clrf	5
 23810  0D54  3002               	movlw	2
 23811  0D55  0781               	addwf	1,f
 23812  0D56  3F00               	moviw [0]fsr0
 23813  0D57  00AF               	movwf	__doprnt@cp
 23814  0D58  3F01               	moviw [1]fsr0
 23815  0D59  00B0               	movwf	__doprnt@cp+1
 23816                           
 23817                           ;doprnt.c: 740: if(!cp)
 23818  0D5A  082F               	movf	__doprnt@cp,w
 23819  0D5B  0430               	iorwf	__doprnt@cp+1,w
 23820  0D5C  1D03               	btfss	3,2
 23821  0D5D  2D62               	goto	l8460
 23822                           
 23823                           ;doprnt.c: 741: cp = "(null)";
 23824  0D5E  30AA               	movlw	low (STR_30| (0+32768))
 23825  0D5F  00AF               	movwf	__doprnt@cp
 23826  0D60  30A9               	movlw	high (STR_30| (0+32768))
 23827  0D61  00B0               	movwf	__doprnt@cp+1
 23828  0D62                     l8460:	
 23829                           
 23830                           ;doprnt.c: 745: len = 0;
 23831  0D62  01AD               	clrf	__doprnt@len
 23832  0D63  01AE               	clrf	__doprnt@len+1
 23833  0D64                     l8464:	
 23834                           ;doprnt.c: 746: while(cp[len])
 23835                           
 23836  0D64  082F               	movf	__doprnt@cp,w
 23837  0D65  072D               	addwf	__doprnt@len,w
 23838  0D66  0084               	movwf	4
 23839  0D67  0830               	movf	__doprnt@cp+1,w
 23840  0D68  3D2E               	addwfc	__doprnt@len+1,w
 23841  0D69  0085               	movwf	5
 23842  0D6A  0012               	moviw fsr0++
 23843  0D6B  1903               	btfsc	3,2
 23844  0D6C  2D72               	goto	l8466
 23845                           
 23846                           ;doprnt.c: 747: len++;
 23847  0D6D  3001               	movlw	1
 23848  0D6E  07AD               	addwf	__doprnt@len,f
 23849  0D6F  3000               	movlw	0
 23850  0D70  3DAE               	addwfc	__doprnt@len+1,f
 23851  0D71  2D64               	goto	l8464
 23852  0D72                     l8466:	
 23853                           
 23854                           ;doprnt.c: 757: if(width > len)
 23855  0D72  0835               	movf	__doprnt@width+1,w
 23856  0D73  022E               	subwf	__doprnt@len+1,w
 23857  0D74  1D03               	skipz
 23858  0D75  2D78               	goto	u8835
 23859  0D76  0834               	movf	__doprnt@width,w
 23860  0D77  022D               	subwf	__doprnt@len,w
 23861  0D78                     u8835:	
 23862  0D78  1803               	skipnc
 23863  0D79  2D7F               	goto	l8470
 23864                           
 23865                           ;doprnt.c: 758: width -= len;
 23866  0D7A  082D               	movf	__doprnt@len,w
 23867  0D7B  02B4               	subwf	__doprnt@width,f
 23868  0D7C  082E               	movf	__doprnt@len+1,w
 23869  0D7D  3BB5               	subwfb	__doprnt@width+1,f
 23870  0D7E  2D81               	goto	l8480
 23871  0D7F                     l8470:	
 23872                           
 23873                           ;doprnt.c: 759: else
 23874                           ;doprnt.c: 760: width = 0;
 23875  0D7F  01B4               	clrf	__doprnt@width
 23876  0D80  01B5               	clrf	__doprnt@width+1
 23877  0D81                     l8480:	
 23878                           ;doprnt.c: 764: while(width--)
 23879                           
 23880  0D81  30FF               	movlw	255
 23881  0D82  0140               	movlb	0	; select bank0
 23882  0D83  07B4               	addwf	__doprnt@width,f
 23883  0D84  30FF               	movlw	255
 23884  0D85  3DB5               	addwfc	__doprnt@width+1,f
 23885  0D86  0A34               	incf	__doprnt@width,w
 23886  0D87  1903               	btfsc	3,2
 23887  0D88  0A35               	incf	__doprnt@width+1,w
 23888  0D89  1903               	btfsc	3,2
 23889  0D8A  2DE8               	goto	l8494
 23890                           
 23891                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 23892  0D8B  0A37               	incf	__doprnt@pb,w
 23893  0D8C  0086               	movwf	6
 23894  0D8D  0187               	clrf	7
 23895  0D8E  0016               	moviw fsr1++
 23896  0D8F  0401               	iorwf	1,w
 23897  0D90  1903               	btfsc	3,2
 23898  0D91  2D9F               	goto	l8476
 23899  0D92  3020               	movlw	32
 23900  0D93  00A7               	movwf	??__doprnt
 23901  0D94  0827               	movf	??__doprnt,w
 23902  0D95  00F2               	movwf	putch@txData
 23903  0D96  0A37               	incf	__doprnt@pb,w
 23904  0D97  0086               	movwf	6
 23905  0D98  0187               	clrf	7
 23906  0D99  3F41               	moviw [1]fsr1
 23907  0D9A  008A               	movwf	10
 23908  0D9B  3F40               	moviw [0]fsr1
 23909  0D9C  000A               	callw
 23910  0D9D  318C               	pagesel	$
 23911  0D9E  2D81               	goto	l8480
 23912  0D9F                     l8476:	
 23913  0D9F  3020               	movlw	32
 23914  0DA0  0140               	movlb	0	; select bank0
 23915  0DA1  00A7               	movwf	??__doprnt
 23916  0DA2  0837               	movf	__doprnt@pb,w
 23917  0DA3  0086               	movwf	6
 23918  0DA4  0187               	clrf	7
 23919  0DA5  0801               	movf	1,w
 23920  0DA6  0086               	movwf	6
 23921  0DA7  0187               	clrf	7
 23922  0DA8  0827               	movf	??__doprnt,w
 23923  0DA9  0081               	movwf	1
 23924  0DAA  3001               	movlw	1
 23925  0DAB  00A7               	movwf	??__doprnt
 23926  0DAC  0837               	movf	__doprnt@pb,w
 23927  0DAD  0086               	movwf	6
 23928  0DAE  0187               	clrf	7
 23929  0DAF  0827               	movf	??__doprnt,w
 23930  0DB0  0781               	addwf	1,f
 23931  0DB1  2D81               	goto	l8480
 23932  0DB2                     l8482:	
 23933                           ;doprnt.c: 767: while(len--)
 23934                           
 23935                           
 23936                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 23937  0DB2  0A37               	incf	__doprnt@pb,w
 23938  0DB3  0086               	movwf	6
 23939  0DB4  0187               	clrf	7
 23940  0DB5  0016               	moviw fsr1++
 23941  0DB6  0401               	iorwf	1,w
 23942  0DB7  1903               	btfsc	3,2
 23943  0DB8  2DCF               	goto	l8488
 23944  0DB9  082F               	movf	__doprnt@cp,w
 23945  0DBA  0084               	movwf	4
 23946  0DBB  0830               	movf	__doprnt@cp+1,w
 23947  0DBC  0085               	movwf	5
 23948  0DBD  0800               	movf	0,w	;code access
 23949  0DBE  00A7               	movwf	??__doprnt
 23950  0DBF  0827               	movf	??__doprnt,w
 23951  0DC0  00F2               	movwf	putch@txData
 23952  0DC1  0A37               	incf	__doprnt@pb,w
 23953  0DC2  0086               	movwf	6
 23954  0DC3  0187               	clrf	7
 23955  0DC4  3F41               	moviw [1]fsr1
 23956  0DC5  008A               	movwf	10
 23957  0DC6  3F40               	moviw [0]fsr1
 23958  0DC7  000A               	callw
 23959  0DC8  318C               	pagesel	$
 23960  0DC9  3001               	movlw	1
 23961  0DCA  0140               	movlb	0	; select bank0
 23962  0DCB  07AF               	addwf	__doprnt@cp,f
 23963  0DCC  3000               	movlw	0
 23964  0DCD  3DB0               	addwfc	__doprnt@cp+1,f
 23965  0DCE  2DE8               	goto	l8494
 23966  0DCF                     l8488:	
 23967  0DCF  082F               	movf	__doprnt@cp,w
 23968  0DD0  0084               	movwf	4
 23969  0DD1  0830               	movf	__doprnt@cp+1,w
 23970  0DD2  0085               	movwf	5
 23971  0DD3  0800               	movf	0,w	;code access
 23972  0DD4  00A7               	movwf	??__doprnt
 23973  0DD5  0837               	movf	__doprnt@pb,w
 23974  0DD6  0086               	movwf	6
 23975  0DD7  0187               	clrf	7
 23976  0DD8  0801               	movf	1,w
 23977  0DD9  0086               	movwf	6
 23978  0DDA  0187               	clrf	7
 23979  0DDB  0827               	movf	??__doprnt,w
 23980  0DDC  0081               	movwf	1
 23981  0DDD  3001               	movlw	1
 23982  0DDE  07AF               	addwf	__doprnt@cp,f
 23983  0DDF  3000               	movlw	0
 23984  0DE0  3DB0               	addwfc	__doprnt@cp+1,f
 23985  0DE1  3001               	movlw	1
 23986  0DE2  00A7               	movwf	??__doprnt
 23987  0DE3  0837               	movf	__doprnt@pb,w
 23988  0DE4  0086               	movwf	6
 23989  0DE5  0187               	clrf	7
 23990  0DE6  0827               	movf	??__doprnt,w
 23991  0DE7  0781               	addwf	1,f
 23992  0DE8                     l8494:	
 23993  0DE8  3001               	movlw	1
 23994  0DE9  02AD               	subwf	__doprnt@len,f
 23995  0DEA  3000               	movlw	0
 23996  0DEB  3BAE               	subwfb	__doprnt@len+1,f
 23997  0DEC  0A2D               	incf	__doprnt@len,w
 23998  0DED  1D03               	skipz
 23999  0DEE  2DB2               	goto	l8482
 24000  0DEF  0A2E               	incf	__doprnt@len+1,w
 24001  0DF0  1903               	btfsc	3,2
 24002  0DF1  2CBF               	goto	l8612
 24003  0DF2  2DB2               	goto	l8482
 24004  0DF3                     l8498:	
 24005                           ;doprnt.c: 822: }
 24006                           
 24007                           ;doprnt.c: 813: continue;
 24008                           
 24009                           ;doprnt.c: 802: default:
 24010                           
 24011                           ;doprnt.c: 774: continue;
 24012                           
 24013  0DF3  0140               	movlb	0	; select bank0
 24014  0DF4  0825               	movf	__doprnt@f+1,w
 24015  0DF5  00A8               	movwf	??__doprnt+1
 24016  0DF6  0824               	movf	__doprnt@f,w
 24017  0DF7  00A7               	movwf	??__doprnt
 24018  0DF8  0AA4               	incf	__doprnt@f,f
 24019  0DF9  1903               	skipnz
 24020  0DFA  0AA5               	incf	__doprnt@f+1,f
 24021  0DFB  0827               	movf	??__doprnt,w
 24022  0DFC  0084               	movwf	4
 24023  0DFD  0828               	movf	??__doprnt+1,w
 24024  0DFE  0085               	movwf	5
 24025  0DFF  0800               	movf	0,w	;code access
 24026  0E00  00B6               	movwf	__doprnt@c
 24027                           
 24028                           ; Switch size 1, requested type "space"
 24029                           ; Number of cases is 6, Range of values is 0 to 120
 24030                           ; switch strategies available:
 24031                           ; Name         Instructions Cycles
 24032                           ; simple_byte           19    10 (average)
 24033                           ; direct_byte          248     6 (fixed)
 24034                           ; jumptable            260     6 (fixed)
 24035                           ;	Chosen strategy is simple_byte
 24036  0E01  3A00               	xorlw	0	; case 0
 24037  0E02  1903               	skipnz
 24038  0E03  2FFC               	goto	l8614
 24039  0E04  3A58               	xorlw	88	; case 88
 24040  0E05  1903               	skipnz
 24041  0E06  2D4B               	goto	l1745
 24042  0E07  3A3C               	xorlw	60	; case 100
 24043  0E08  1903               	skipnz
 24044  0E09  2E14               	goto	l1743
 24045  0E0A  3A0D               	xorlw	13	; case 105
 24046  0E0B  1903               	skipnz
 24047  0E0C  2E14               	goto	l1743
 24048  0E0D  3A1A               	xorlw	26	; case 115
 24049  0E0E  1903               	skipnz
 24050  0E0F  2D4E               	goto	l8454
 24051  0E10  3A0B               	xorlw	11	; case 120
 24052  0E11  1903               	skipnz
 24053  0E12  2D4B               	goto	l1745
 24054  0E13  2CBF               	goto	l8612
 24055  0E14                     l1743:	
 24056                           
 24057                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 24058  0E14  0140               	movlb	0	; select bank0
 24059  0E15  1BB3               	btfsc	__doprnt@flag,7
 24060  0E16  2E2F               	goto	l8508
 24061                           
 24062                           ;doprnt.c: 1253: {
 24063                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 24064  0E17  0826               	movf	__doprnt@ap,w
 24065  0E18  0086               	movwf	6
 24066  0E19  0187               	clrf	7
 24067  0E1A  0801               	movf	1,w
 24068  0E1B  0084               	movwf	4
 24069  0E1C  0185               	clrf	5
 24070  0E1D  3002               	movlw	2
 24071  0E1E  0781               	addwf	1,f
 24072  0E1F  3F00               	moviw [0]fsr0
 24073  0E20  00B1               	movwf	__doprnt@val
 24074  0E21  3F01               	moviw [1]fsr0
 24075  0E22  00B2               	movwf	__doprnt@val+1
 24076                           
 24077                           ;doprnt.c: 1261: if((int)val < 0) {
 24078  0E23  1FB2               	btfss	__doprnt@val+1,7
 24079  0E24  2E80               	goto	l8532
 24080                           
 24081                           ;doprnt.c: 1262: flag |= 0x03;
 24082  0E25  3003               	movlw	3
 24083  0E26  00A7               	movwf	??__doprnt
 24084  0E27  0827               	movf	??__doprnt,w
 24085  0E28  04B3               	iorwf	__doprnt@flag,f
 24086                           
 24087                           ;doprnt.c: 1263: val = -val;
 24088  0E29  09B1               	comf	__doprnt@val,f
 24089  0E2A  09B2               	comf	__doprnt@val+1,f
 24090  0E2B  0AB1               	incf	__doprnt@val,f
 24091  0E2C  1903               	skipnz
 24092  0E2D  0AB2               	incf	__doprnt@val+1,f
 24093                           
 24094                           ;doprnt.c: 1264: }
 24095                           ;doprnt.c: 1266: }
 24096  0E2E  2E80               	goto	l8532
 24097  0E2F                     l8508:	
 24098                           
 24099                           ;doprnt.c: 1268: else
 24100                           ;doprnt.c: 1273: {
 24101                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 24102  0E2F  0826               	movf	__doprnt@ap,w
 24103  0E30  0086               	movwf	6
 24104  0E31  0187               	clrf	7
 24105  0E32  0801               	movf	1,w
 24106  0E33  0084               	movwf	4
 24107  0E34  0185               	clrf	5
 24108  0E35  3002               	movlw	2
 24109  0E36  0781               	addwf	1,f
 24110  0E37  3F00               	moviw [0]fsr0
 24111  0E38  00B1               	movwf	__doprnt@val
 24112  0E39  3F01               	moviw [1]fsr0
 24113  0E3A  00B2               	movwf	__doprnt@val+1
 24114                           
 24115                           ;doprnt.c: 1287: }
 24116                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 24117  0E3B  2E80               	goto	l8532
 24118  0E3C                     l1768:	
 24119                           ;doprnt.c: 1299: case 0x00:
 24120                           
 24121                           
 24122                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 24123  0E3C  01B6               	clrf	__doprnt@c
 24124  0E3D  0AB6               	incf	__doprnt@c,f
 24125  0E3E                     L25:	
 24126  0E3E  3005               	movlw	5
 24127  0E3F  0636               	xorwf	__doprnt@c,w
 24128  0E40  1903               	btfsc	3,2
 24129  0E41  2E89               	goto	l8534
 24130                           
 24131                           ;doprnt.c: 1306: if(val < dpowers[c])
 24132  0E42  0836               	movf	__doprnt@c,w
 24133  0E43  00A7               	movwf	??__doprnt
 24134  0E44  01A8               	clrf	??__doprnt+1
 24135  0E45  35A7               	lslf	??__doprnt,f
 24136  0E46  0DA8               	rlf	??__doprnt+1,f
 24137  0E47  3071               	movlw	low (_dpowers| (0+32768))
 24138  0E48  0727               	addwf	??__doprnt,w
 24139  0E49  0084               	movwf	4
 24140  0E4A  30A9               	movlw	high (_dpowers| (0+32768))
 24141  0E4B  3D28               	addwfc	??__doprnt+1,w
 24142  0E4C  0085               	movwf	5
 24143  0E4D  3F00               	moviw [0]fsr0
 24144  0E4E  00A9               	movwf	??__doprnt+2
 24145  0E4F  3F01               	moviw [1]fsr0
 24146  0E50  00AA               	movwf	??__doprnt+3
 24147  0E51  082A               	movf	??__doprnt+3,w
 24148  0E52  0232               	subwf	__doprnt@val+1,w
 24149  0E53  1D03               	skipz
 24150  0E54  2E57               	goto	u8915
 24151  0E55  0829               	movf	??__doprnt+2,w
 24152  0E56  0231               	subwf	__doprnt@val,w
 24153  0E57                     u8915:	
 24154  0E57  1C03               	btfss	3,0
 24155  0E58  2E89               	goto	l8534
 24156                           
 24157                           ;doprnt.c: 1307: break;
 24158  0E59  3001               	movlw	1
 24159  0E5A  00A7               	movwf	??__doprnt
 24160  0E5B  0827               	movf	??__doprnt,w
 24161  0E5C  07B6               	addwf	__doprnt@c,f
 24162  0E5D  2E3E               	goto	L25
 24163  0E5E                     l1773:	
 24164                           ;doprnt.c: 1314: case 0x80:
 24165                           
 24166                           ;doprnt.c: 1309: break;
 24167                           
 24168                           
 24169                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 24170  0E5E  01B6               	clrf	__doprnt@c
 24171  0E5F  0AB6               	incf	__doprnt@c,f
 24172  0E60                     L26:	
 24173  0E60  3004               	movlw	4
 24174  0E61  0636               	xorwf	__doprnt@c,w
 24175  0E62  1903               	btfsc	3,2
 24176  0E63  2E89               	goto	l8534
 24177                           
 24178                           ;doprnt.c: 1317: if(val < hexpowers[c])
 24179  0E64  0836               	movf	__doprnt@c,w
 24180  0E65  00A7               	movwf	??__doprnt
 24181  0E66  01A8               	clrf	??__doprnt+1
 24182  0E67  35A7               	lslf	??__doprnt,f
 24183  0E68  0DA8               	rlf	??__doprnt+1,f
 24184  0E69  30A2               	movlw	low (_hexpowers| (0+32768))
 24185  0E6A  0727               	addwf	??__doprnt,w
 24186  0E6B  0084               	movwf	4
 24187  0E6C  30A9               	movlw	high (_hexpowers| (0+32768))
 24188  0E6D  3D28               	addwfc	??__doprnt+1,w
 24189  0E6E  0085               	movwf	5
 24190  0E6F  3F00               	moviw [0]fsr0
 24191  0E70  00A9               	movwf	??__doprnt+2
 24192  0E71  3F01               	moviw [1]fsr0
 24193  0E72  00AA               	movwf	??__doprnt+3
 24194  0E73  082A               	movf	??__doprnt+3,w
 24195  0E74  0232               	subwf	__doprnt@val+1,w
 24196  0E75  1D03               	skipz
 24197  0E76  2E79               	goto	u8945
 24198  0E77  0829               	movf	??__doprnt+2,w
 24199  0E78  0231               	subwf	__doprnt@val,w
 24200  0E79                     u8945:	
 24201  0E79  1C03               	btfss	3,0
 24202  0E7A  2E89               	goto	l8534
 24203                           
 24204                           ;doprnt.c: 1318: break;
 24205  0E7B  3001               	movlw	1
 24206  0E7C  00A7               	movwf	??__doprnt
 24207  0E7D  0827               	movf	??__doprnt,w
 24208  0E7E  07B6               	addwf	__doprnt@c,f
 24209  0E7F  2E60               	goto	L26
 24210  0E80                     l8532:	
 24211                           ;doprnt.c: 1336: }
 24212                           
 24213                           ;doprnt.c: 1320: break;
 24214                           
 24215  0E80  0833               	movf	__doprnt@flag,w
 24216  0E81  3980               	andlw	128
 24217                           
 24218                           ; Switch size 1, requested type "space"
 24219                           ; Number of cases is 2, Range of values is 0 to 128
 24220                           ; switch strategies available:
 24221                           ; Name         Instructions Cycles
 24222                           ; simple_byte            7     4 (average)
 24223                           ; jumptable            260     6 (fixed)
 24224                           ;	Chosen strategy is simple_byte
 24225  0E82  3A00               	xorlw	0	; case 0
 24226  0E83  1903               	skipnz
 24227  0E84  2E3C               	goto	l1768
 24228  0E85  3A80               	xorlw	128	; case 128
 24229  0E86  1903               	skipnz
 24230  0E87  2E5E               	goto	l1773
 24231  0E88  2E89               	goto	l8534
 24232  0E89                     l8534:	
 24233                           
 24234                           ;doprnt.c: 1345: if(width && flag & 0x03)
 24235  0E89  0834               	movf	__doprnt@width,w
 24236  0E8A  0435               	iorwf	__doprnt@width+1,w
 24237  0E8B  1903               	btfsc	3,2
 24238  0E8C  2E95               	goto	l1777
 24239  0E8D  0833               	movf	__doprnt@flag,w
 24240  0E8E  3903               	andlw	3
 24241  0E8F  1903               	btfsc	3,2
 24242  0E90  2E95               	goto	l1777
 24243                           
 24244                           ;doprnt.c: 1346: width--;
 24245  0E91  30FF               	movlw	255
 24246  0E92  07B4               	addwf	__doprnt@width,f
 24247  0E93  30FF               	movlw	255
 24248  0E94  3DB5               	addwfc	__doprnt@width+1,f
 24249  0E95                     l1777:	
 24250                           
 24251                           ;doprnt.c: 1381: if(width > c)
 24252  0E95  0836               	movf	__doprnt@c,w
 24253  0E96  00A7               	movwf	??__doprnt
 24254  0E97  01A8               	clrf	??__doprnt+1
 24255  0E98  1BA7               	btfsc	??__doprnt,7
 24256  0E99  03A8               	decf	??__doprnt+1,f
 24257  0E9A  0828               	movf	??__doprnt+1,w
 24258  0E9B  3A80               	xorlw	128
 24259  0E9C  00A9               	movwf	??__doprnt+2
 24260  0E9D  0835               	movf	__doprnt@width+1,w
 24261  0E9E  3A80               	xorlw	128
 24262  0E9F  0229               	subwf	??__doprnt+2,w
 24263  0EA0  1D03               	skipz
 24264  0EA1  2EA4               	goto	u8985
 24265  0EA2  0834               	movf	__doprnt@width,w
 24266  0EA3  0227               	subwf	??__doprnt,w
 24267  0EA4                     u8985:	
 24268  0EA4  1803               	skipnc
 24269  0EA5  2EB1               	goto	l8542
 24270                           
 24271                           ;doprnt.c: 1382: width -= c;
 24272  0EA6  0140               	movlb	0	; select bank0
 24273  0EA7  0836               	movf	__doprnt@c,w
 24274  0EA8  00A7               	movwf	??__doprnt
 24275  0EA9  01A8               	clrf	??__doprnt+1
 24276  0EAA  1BA7               	btfsc	??__doprnt,7
 24277  0EAB  03A8               	decf	??__doprnt+1,f
 24278  0EAC  0827               	movf	??__doprnt,w
 24279  0EAD  02B4               	subwf	__doprnt@width,f
 24280  0EAE  0828               	movf	??__doprnt+1,w
 24281  0EAF  3BB5               	subwfb	__doprnt@width+1,f
 24282  0EB0  2EB4               	goto	l8544
 24283  0EB1                     l8542:	
 24284                           
 24285                           ;doprnt.c: 1383: else
 24286                           ;doprnt.c: 1384: width = 0;
 24287  0EB1  0140               	movlb	0	; select bank0
 24288  0EB2  01B4               	clrf	__doprnt@width
 24289  0EB3  01B5               	clrf	__doprnt@width+1
 24290  0EB4                     l8544:	
 24291                           
 24292                           ;doprnt.c: 1387: if(flag & 0x04) {
 24293  0EB4  1D33               	btfss	__doprnt@flag,2
 24294  0EB5  2F11               	goto	l8568
 24295                           
 24296                           ;doprnt.c: 1392: if(flag & 0x03)
 24297  0EB6  0833               	movf	__doprnt@flag,w
 24298  0EB7  3903               	andlw	3
 24299  0EB8  1903               	btfsc	3,2
 24300  0EB9  2EE0               	goto	l8556
 24301                           
 24302                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24303  0EBA  0A37               	incf	__doprnt@pb,w
 24304  0EBB  0086               	movwf	6
 24305  0EBC  0187               	clrf	7
 24306  0EBD  0016               	moviw fsr1++
 24307  0EBE  0401               	iorwf	1,w
 24308  0EBF  1903               	btfsc	3,2
 24309  0EC0  2ECE               	goto	l8552
 24310  0EC1  302D               	movlw	45
 24311  0EC2  00A7               	movwf	??__doprnt
 24312  0EC3  0827               	movf	??__doprnt,w
 24313  0EC4  00F2               	movwf	putch@txData
 24314  0EC5  0A37               	incf	__doprnt@pb,w
 24315  0EC6  0086               	movwf	6
 24316  0EC7  0187               	clrf	7
 24317  0EC8  3F41               	moviw [1]fsr1
 24318  0EC9  008A               	movwf	10
 24319  0ECA  3F40               	moviw [0]fsr1
 24320  0ECB  000A               	callw
 24321  0ECC  318C               	pagesel	$
 24322  0ECD  2EE0               	goto	l8556
 24323  0ECE                     l8552:	
 24324  0ECE  302D               	movlw	45
 24325  0ECF  0140               	movlb	0	; select bank0
 24326  0ED0  00A7               	movwf	??__doprnt
 24327  0ED1  0837               	movf	__doprnt@pb,w
 24328  0ED2  0086               	movwf	6
 24329  0ED3  0187               	clrf	7
 24330  0ED4  0801               	movf	1,w
 24331  0ED5  0086               	movwf	6
 24332  0ED6  0187               	clrf	7
 24333  0ED7  0827               	movf	??__doprnt,w
 24334  0ED8  0081               	movwf	1
 24335  0ED9  3001               	movlw	1
 24336  0EDA  00A7               	movwf	??__doprnt
 24337  0EDB  0837               	movf	__doprnt@pb,w
 24338  0EDC  0086               	movwf	6
 24339  0EDD  0187               	clrf	7
 24340  0EDE  0827               	movf	??__doprnt,w
 24341  0EDF  0781               	addwf	1,f
 24342  0EE0                     l8556:	
 24343                           
 24344                           ;doprnt.c: 1415: if(width)
 24345  0EE0  0140               	movlb	0	; select bank0
 24346  0EE1                     L27:	
 24347  0EE1  0834               	movf	__doprnt@width,w
 24348  0EE2  0435               	iorwf	__doprnt@width+1,w
 24349  0EE3  1903               	btfsc	3,2
 24350  0EE4  2F6E               	goto	l8590
 24351                           
 24352                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 24353                           
 24354                           ;doprnt.c: 1416: do
 24355  0EE5  0A37               	incf	__doprnt@pb,w
 24356  0EE6  0086               	movwf	6
 24357  0EE7  0187               	clrf	7
 24358  0EE8  0016               	moviw fsr1++
 24359  0EE9  0401               	iorwf	1,w
 24360  0EEA  1903               	btfsc	3,2
 24361  0EEB  2EF9               	goto	l8562
 24362  0EEC  3030               	movlw	48
 24363  0EED  00A7               	movwf	??__doprnt
 24364  0EEE  0827               	movf	??__doprnt,w
 24365  0EEF  00F2               	movwf	putch@txData
 24366  0EF0  0A37               	incf	__doprnt@pb,w
 24367  0EF1  0086               	movwf	6
 24368  0EF2  0187               	clrf	7
 24369  0EF3  3F41               	moviw [1]fsr1
 24370  0EF4  008A               	movwf	10
 24371  0EF5  3F40               	moviw [0]fsr1
 24372  0EF6  000A               	callw
 24373  0EF7  318C               	pagesel	$
 24374  0EF8  2F0B               	goto	l8566
 24375  0EF9                     l8562:	
 24376  0EF9  3030               	movlw	48
 24377  0EFA  0140               	movlb	0	; select bank0
 24378  0EFB  00A7               	movwf	??__doprnt
 24379  0EFC  0837               	movf	__doprnt@pb,w
 24380  0EFD  0086               	movwf	6
 24381  0EFE  0187               	clrf	7
 24382  0EFF  0801               	movf	1,w
 24383  0F00  0086               	movwf	6
 24384  0F01  0187               	clrf	7
 24385  0F02  0827               	movf	??__doprnt,w
 24386  0F03  0081               	movwf	1
 24387  0F04  3001               	movlw	1
 24388  0F05  00A7               	movwf	??__doprnt
 24389  0F06  0837               	movf	__doprnt@pb,w
 24390  0F07  0086               	movwf	6
 24391  0F08  0187               	clrf	7
 24392  0F09  0827               	movf	??__doprnt,w
 24393  0F0A  0781               	addwf	1,f
 24394  0F0B                     l8566:	
 24395                           
 24396                           ;doprnt.c: 1418: while(--width);
 24397  0F0B  30FF               	movlw	255
 24398  0F0C  0140               	movlb	0	; select bank0
 24399  0F0D  07B4               	addwf	__doprnt@width,f
 24400  0F0E  30FF               	movlw	255
 24401  0F0F  3DB5               	addwfc	__doprnt@width+1,f
 24402  0F10  2EE1               	goto	L27
 24403  0F11                     l8568:	
 24404                           ;doprnt.c: 1420: } else
 24405                           
 24406                           
 24407                           ;doprnt.c: 1422: {
 24408                           ;doprnt.c: 1424: if(width
 24409                           ;doprnt.c: 1428: )
 24410  0F11  0834               	movf	__doprnt@width,w
 24411  0F12  0435               	iorwf	__doprnt@width+1,w
 24412  0F13  1903               	btfsc	3,2
 24413  0F14  2F44               	goto	l8580
 24414  0F15                     l8570:	
 24415                           ;doprnt.c: 1429: do
 24416                           
 24417                           
 24418                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 24419  0F15  0A37               	incf	__doprnt@pb,w
 24420  0F16  0086               	movwf	6
 24421  0F17  0187               	clrf	7
 24422  0F18  0016               	moviw fsr1++
 24423  0F19  0401               	iorwf	1,w
 24424  0F1A  1903               	btfsc	3,2
 24425  0F1B  2F29               	goto	l8574
 24426  0F1C  3020               	movlw	32
 24427  0F1D  00A7               	movwf	??__doprnt
 24428  0F1E  0827               	movf	??__doprnt,w
 24429  0F1F  00F2               	movwf	putch@txData
 24430  0F20  0A37               	incf	__doprnt@pb,w
 24431  0F21  0086               	movwf	6
 24432  0F22  0187               	clrf	7
 24433  0F23  3F41               	moviw [1]fsr1
 24434  0F24  008A               	movwf	10
 24435  0F25  3F40               	moviw [0]fsr1
 24436  0F26  000A               	callw
 24437  0F27  318C               	pagesel	$
 24438  0F28  2F3B               	goto	l8578
 24439  0F29                     l8574:	
 24440  0F29  3020               	movlw	32
 24441  0F2A  0140               	movlb	0	; select bank0
 24442  0F2B  00A7               	movwf	??__doprnt
 24443  0F2C  0837               	movf	__doprnt@pb,w
 24444  0F2D  0086               	movwf	6
 24445  0F2E  0187               	clrf	7
 24446  0F2F  0801               	movf	1,w
 24447  0F30  0086               	movwf	6
 24448  0F31  0187               	clrf	7
 24449  0F32  0827               	movf	??__doprnt,w
 24450  0F33  0081               	movwf	1
 24451  0F34  3001               	movlw	1
 24452  0F35  00A7               	movwf	??__doprnt
 24453  0F36  0837               	movf	__doprnt@pb,w
 24454  0F37  0086               	movwf	6
 24455  0F38  0187               	clrf	7
 24456  0F39  0827               	movf	??__doprnt,w
 24457  0F3A  0781               	addwf	1,f
 24458  0F3B                     l8578:	
 24459                           
 24460                           ;doprnt.c: 1431: while(--width);
 24461  0F3B  30FF               	movlw	255
 24462  0F3C  0140               	movlb	0	; select bank0
 24463  0F3D  07B4               	addwf	__doprnt@width,f
 24464  0F3E  30FF               	movlw	255
 24465  0F3F  3DB5               	addwfc	__doprnt@width+1,f
 24466  0F40  0834               	movf	__doprnt@width,w
 24467  0F41  0435               	iorwf	__doprnt@width+1,w
 24468  0F42  1D03               	btfss	3,2
 24469  0F43  2F15               	goto	l8570
 24470  0F44                     l8580:	
 24471                           
 24472                           ;doprnt.c: 1438: if(flag & 0x03)
 24473  0F44  0833               	movf	__doprnt@flag,w
 24474  0F45  3903               	andlw	3
 24475  0F46  1903               	btfsc	3,2
 24476  0F47  2F6E               	goto	l8590
 24477                           
 24478                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24479  0F48  0A37               	incf	__doprnt@pb,w
 24480  0F49  0086               	movwf	6
 24481  0F4A  0187               	clrf	7
 24482  0F4B  0016               	moviw fsr1++
 24483  0F4C  0401               	iorwf	1,w
 24484  0F4D  1903               	btfsc	3,2
 24485  0F4E  2F5C               	goto	l8586
 24486  0F4F  302D               	movlw	45
 24487  0F50  00A7               	movwf	??__doprnt
 24488  0F51  0827               	movf	??__doprnt,w
 24489  0F52  00F2               	movwf	putch@txData
 24490  0F53  0A37               	incf	__doprnt@pb,w
 24491  0F54  0086               	movwf	6
 24492  0F55  0187               	clrf	7
 24493  0F56  3F41               	moviw [1]fsr1
 24494  0F57  008A               	movwf	10
 24495  0F58  3F40               	moviw [0]fsr1
 24496  0F59  000A               	callw
 24497  0F5A  318C               	pagesel	$
 24498  0F5B  2F6E               	goto	l8590
 24499  0F5C                     l8586:	
 24500  0F5C  302D               	movlw	45
 24501  0F5D  0140               	movlb	0	; select bank0
 24502  0F5E  00A7               	movwf	??__doprnt
 24503  0F5F  0837               	movf	__doprnt@pb,w
 24504  0F60  0086               	movwf	6
 24505  0F61  0187               	clrf	7
 24506  0F62  0801               	movf	1,w
 24507  0F63  0086               	movwf	6
 24508  0F64  0187               	clrf	7
 24509  0F65  0827               	movf	??__doprnt,w
 24510  0F66  0081               	movwf	1
 24511  0F67  3001               	movlw	1
 24512  0F68  00A7               	movwf	??__doprnt
 24513  0F69  0837               	movf	__doprnt@pb,w
 24514  0F6A  0086               	movwf	6
 24515  0F6B  0187               	clrf	7
 24516  0F6C  0827               	movf	??__doprnt,w
 24517  0F6D  0781               	addwf	1,f
 24518  0F6E                     l8590:	
 24519                           
 24520                           ;doprnt.c: 1469: }
 24521                           ;doprnt.c: 1472: prec = c;
 24522  0F6E  0140               	movlb	0	; select bank0
 24523  0F6F  0836               	movf	__doprnt@c,w
 24524  0F70  00A7               	movwf	??__doprnt
 24525  0F71  0827               	movf	??__doprnt,w
 24526  0F72  00AC               	movwf	__doprnt@prec
 24527                           
 24528                           ;doprnt.c: 1474: while(prec--) {
 24529  0F73  2FF3               	goto	l8610
 24530  0F74                     l8592:	
 24531                           ;doprnt.c: 1478: {
 24532                           ;doprnt.c: 1483: case 0x00:
 24533                           
 24534                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 24535                           
 24536                           
 24537                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 24538  0F74  300A               	movlw	10
 24539  0F75  00A0               	movwf	___lwmod@divisor
 24540  0F76  3000               	movlw	0
 24541  0F77  00A1               	movwf	___lwmod@divisor+1
 24542  0F78  082C               	movf	__doprnt@prec,w
 24543  0F79  00A7               	movwf	??__doprnt
 24544  0F7A  01A8               	clrf	??__doprnt+1
 24545  0F7B  35A7               	lslf	??__doprnt,f
 24546  0F7C  0DA8               	rlf	??__doprnt+1,f
 24547  0F7D  3071               	movlw	low (_dpowers| (0+32768))
 24548  0F7E  0727               	addwf	??__doprnt,w
 24549  0F7F  0084               	movwf	4
 24550  0F80  30A9               	movlw	high (_dpowers| (0+32768))
 24551  0F81  3D28               	addwfc	??__doprnt+1,w
 24552  0F82  0085               	movwf	5
 24553  0F83  3F00               	moviw [0]fsr0
 24554  0F84  00F1               	movwf	___lwdiv@divisor
 24555  0F85  3F01               	moviw [1]fsr0
 24556  0F86  00F2               	movwf	___lwdiv@divisor+1
 24557  0F87  0832               	movf	__doprnt@val+1,w
 24558  0F88  00F4               	movwf	___lwdiv@dividend+1
 24559  0F89  0831               	movf	__doprnt@val,w
 24560  0F8A  00F3               	movwf	___lwdiv@dividend
 24561  0F8B  31A5  25A4  318C   	fcall	___lwdiv
 24562  0F8E  0872               	movf	?___lwdiv+1,w
 24563  0F8F  0140               	movlb	0	; select bank0
 24564  0F90  00A3               	movwf	___lwmod@dividend+1
 24565  0F91  0871               	movf	?___lwdiv,w
 24566  0F92  00A2               	movwf	___lwmod@dividend
 24567  0F93  31A4  24E8  318C   	fcall	___lwmod
 24568  0F96  0140               	movlb	0	; select bank0
 24569  0F97  0820               	movf	?___lwmod,w
 24570  0F98  3E30               	addlw	48
 24571  0F99  00A9               	movwf	??__doprnt+2
 24572  0F9A  0829               	movf	??__doprnt+2,w
 24573  0F9B  2FC2               	goto	L24
 24574  0F9C                     l8594:	
 24575                           ;doprnt.c: 1497: case 0x80:
 24576                           
 24577                           ;doprnt.c: 1491: break;
 24578                           
 24579                           
 24580                           ;doprnt.c: 1499: {
 24581                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 24582  0F9C  082C               	movf	__doprnt@prec,w
 24583  0F9D  00A7               	movwf	??__doprnt
 24584  0F9E  01A8               	clrf	??__doprnt+1
 24585  0F9F  35A7               	lslf	??__doprnt,f
 24586  0FA0  0DA8               	rlf	??__doprnt+1,f
 24587  0FA1  30A2               	movlw	low (_hexpowers| (0+32768))
 24588  0FA2  0727               	addwf	??__doprnt,w
 24589  0FA3  0084               	movwf	4
 24590  0FA4  30A9               	movlw	high (_hexpowers| (0+32768))
 24591  0FA5  3D28               	addwfc	??__doprnt+1,w
 24592  0FA6  0085               	movwf	5
 24593  0FA7  3F00               	moviw [0]fsr0
 24594  0FA8  00F1               	movwf	___lwdiv@divisor
 24595  0FA9  3F01               	moviw [1]fsr0
 24596  0FAA  00F2               	movwf	___lwdiv@divisor+1
 24597  0FAB  0832               	movf	__doprnt@val+1,w
 24598  0FAC  00F4               	movwf	___lwdiv@dividend+1
 24599  0FAD  0831               	movf	__doprnt@val,w
 24600  0FAE  00F3               	movwf	___lwdiv@dividend
 24601  0FAF  31A5  25A4  318C   	fcall	___lwdiv
 24602  0FB2  0871               	movf	?___lwdiv,w
 24603  0FB3  390F               	andlw	15
 24604  0FB4  0140               	movlb	0	; select bank0
 24605  0FB5  00A9               	movwf	??__doprnt+2
 24606  0FB6  0829               	movf	??__doprnt+2,w
 24607  0FB7  00AB               	movwf	__doprnt@idx
 24608                           
 24609                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 24610  0FB8  082B               	movf	__doprnt@idx,w
 24611  0FB9  3EBE               	addlw	low (STR_31| (0+32768))
 24612  0FBA  0084               	movwf	4
 24613  0FBB  30A8               	movlw	high (STR_31| (0+32768))
 24614  0FBC  1803               	skipnc
 24615  0FBD  3E01               	addlw	1
 24616  0FBE  0085               	movwf	5
 24617  0FBF  0800               	movf	0,w	;code access
 24618  0FC0  00A7               	movwf	??__doprnt
 24619  0FC1  0827               	movf	??__doprnt,w
 24620  0FC2                     L24:	
 24621  0FC2  00B6               	movwf	__doprnt@c
 24622                           
 24623                           ;doprnt.c: 1523: }
 24624                           
 24625                           ;doprnt.c: 1508: }
 24626                           ;doprnt.c: 1510: break;
 24627  0FC3  2FCD               	goto	l8602
 24628  0FC4                     l8600:	
 24629  0FC4  0833               	movf	__doprnt@flag,w
 24630  0FC5  3980               	andlw	128
 24631                           
 24632                           ; Switch size 1, requested type "space"
 24633                           ; Number of cases is 2, Range of values is 0 to 128
 24634                           ; switch strategies available:
 24635                           ; Name         Instructions Cycles
 24636                           ; simple_byte            7     4 (average)
 24637                           ; jumptable            260     6 (fixed)
 24638                           ;	Chosen strategy is simple_byte
 24639  0FC6  3A00               	xorlw	0	; case 0
 24640  0FC7  1903               	skipnz
 24641  0FC8  2F74               	goto	l8592
 24642  0FC9  3A80               	xorlw	128	; case 128
 24643  0FCA  1903               	skipnz
 24644  0FCB  2F9C               	goto	l8594
 24645  0FCC  2FCD               	goto	l8602
 24646  0FCD                     l8602:	
 24647                           
 24648                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 24649  0FCD  0A37               	incf	__doprnt@pb,w
 24650  0FCE  0086               	movwf	6
 24651  0FCF  0187               	clrf	7
 24652  0FD0  0016               	moviw fsr1++
 24653  0FD1  0401               	iorwf	1,w
 24654  0FD2  1903               	btfsc	3,2
 24655  0FD3  2FE1               	goto	l8606
 24656  0FD4  0836               	movf	__doprnt@c,w
 24657  0FD5  00A7               	movwf	??__doprnt
 24658  0FD6  0827               	movf	??__doprnt,w
 24659  0FD7  00F2               	movwf	putch@txData
 24660  0FD8  0A37               	incf	__doprnt@pb,w
 24661  0FD9  0086               	movwf	6
 24662  0FDA  0187               	clrf	7
 24663  0FDB  3F41               	moviw [1]fsr1
 24664  0FDC  008A               	movwf	10
 24665  0FDD  3F40               	moviw [0]fsr1
 24666  0FDE  000A               	callw
 24667  0FDF  318C               	pagesel	$
 24668  0FE0  2FF3               	goto	l8610
 24669  0FE1                     l8606:	
 24670  0FE1  0140               	movlb	0	; select bank0
 24671  0FE2  0836               	movf	__doprnt@c,w
 24672  0FE3  00A7               	movwf	??__doprnt
 24673  0FE4  0837               	movf	__doprnt@pb,w
 24674  0FE5  0086               	movwf	6
 24675  0FE6  0187               	clrf	7
 24676  0FE7  0801               	movf	1,w
 24677  0FE8  0086               	movwf	6
 24678  0FE9  0187               	clrf	7
 24679  0FEA  0827               	movf	??__doprnt,w
 24680  0FEB  0081               	movwf	1
 24681  0FEC  3001               	movlw	1
 24682  0FED  00A7               	movwf	??__doprnt
 24683  0FEE  0837               	movf	__doprnt@pb,w
 24684  0FEF  0086               	movwf	6
 24685  0FF0  0187               	clrf	7
 24686  0FF1  0827               	movf	??__doprnt,w
 24687  0FF2  0781               	addwf	1,f
 24688  0FF3                     l8610:	
 24689  0FF3  30FF               	movlw	255
 24690  0FF4  0140               	movlb	0	; select bank0
 24691  0FF5  00A7               	movwf	??__doprnt
 24692  0FF6  0827               	movf	??__doprnt,w
 24693  0FF7  07AC               	addwf	__doprnt@prec,f
 24694  0FF8  0A2C               	incf	__doprnt@prec,w
 24695  0FF9  1903               	btfsc	3,2
 24696  0FFA  2CBF               	goto	l8612
 24697  0FFB  2FC4               	goto	l8600
 24698  0FFC                     l8614:	
 24699                           ;doprnt.c: 1525: }
 24700                           ;doprnt.c: 1533: }
 24701                           ;doprnt.c: 1535: alldone:
 24702                           
 24703                           
 24704                           ;doprnt.c: 1540: return 0;
 24705  0FFC  0140               	movlb	0	; select bank0
 24706  0FFD  01A4               	clrf	?__doprnt
 24707  0FFE  01A5               	clrf	?__doprnt+1
 24708  0FFF  0008               	return
 24709  1000                     __end_of__doprnt:	
 24710                           
 24711                           	psect	text74
 24712  2086                     __ptext74:	
 24713 ;; *************** function _putch *****************
 24714 ;; Defined at:
 24715 ;;		line 183 in file "mcc_generated_files/eusart.c"
 24716 ;; Parameters:    Size  Location     Type
 24717 ;;  txData          1    2[COMMON] unsigned char 
 24718 ;; Auto vars:     Size  Location     Type
 24719 ;;		None
 24720 ;; Return value:  Size  Location     Type
 24721 ;;                  1    wreg      void 
 24722 ;; Registers used:
 24723 ;;		wreg, status,2, status,0, pclath, cstack
 24724 ;; Tracked objects:
 24725 ;;		On entry : 0/0
 24726 ;;		On exit  : 0/0
 24727 ;;		Unchanged: 0/0
 24728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24729 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24733 ;;Total ram usage:        1 bytes
 24734 ;; Hardware stack levels used:    1
 24735 ;; Hardware stack levels required when called:    3
 24736 ;; This function calls:
 24737 ;;		_EUSART_Write
 24738 ;; This function is called by:
 24739 ;;		_printf
 24740 ;;		__doprnt
 24741 ;; This function uses a non-reentrant model
 24742 ;;
 24743                           
 24744                           
 24745                           ;psect for function _putch
 24746  2086                     _putch:	
 24747                           
 24748                           ;eusart.c: 185: EUSART_Write(txData);
 24749                           
 24750                           ;incstack = 0
 24751                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 24752  2086  0872               	movf	putch@txData,w
 24753  2087  3188  2000         	fcall	_EUSART_Write
 24754  2089  0008               	return
 24755  208A                     __end_of_putch:	
 24756                           
 24757                           	psect	text75
 24758  0800                     __ptext75:	
 24759 ;; *************** function _EUSART_Write *****************
 24760 ;; Defined at:
 24761 ;;		line 132 in file "mcc_generated_files/eusart.c"
 24762 ;; Parameters:    Size  Location     Type
 24763 ;;  txData          1    wreg     unsigned char 
 24764 ;; Auto vars:     Size  Location     Type
 24765 ;;  txData          1    1[COMMON] unsigned char 
 24766 ;; Return value:  Size  Location     Type
 24767 ;;                  1    wreg      void 
 24768 ;; Registers used:
 24769 ;;		wreg
 24770 ;; Tracked objects:
 24771 ;;		On entry : 0/0
 24772 ;;		On exit  : 0/0
 24773 ;;		Unchanged: 0/0
 24774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24779 ;;Total ram usage:        1 bytes
 24780 ;; Hardware stack levels used:    1
 24781 ;; Hardware stack levels required when called:    2
 24782 ;; This function calls:
 24783 ;;		Nothing
 24784 ;; This function is called by:
 24785 ;;		_printf_string
 24786 ;;		_putch
 24787 ;; This function uses a non-reentrant model
 24788 ;;
 24789                           
 24790                           
 24791                           ;psect for function _EUSART_Write
 24792  0800                     _EUSART_Write:	
 24793                           
 24794                           ;incstack = 0
 24795                           ; Regs used in _EUSART_Write: [wreg]
 24796                           ;EUSART_Write@txData stored from wreg
 24797  0800  00F1               	movwf	EUSART_Write@txData
 24798  0801                     l186:	
 24799                           ;eusart.c: 135: {
 24800                           
 24801                           ;eusart.c: 134: while(0 == PIR3bits.TXIF)
 24802                           
 24803  0801  014E               	movlb	14	; select bank14
 24804  0802  1E0F               	btfss	15,4	;volatile
 24805  0803  2801               	goto	l186
 24806                           
 24807                           ;eusart.c: 136: }
 24808                           ;eusart.c: 138: TX1REG = txData;
 24809  0804  0871               	movf	EUSART_Write@txData,w
 24810  0805  0142               	movlb	2	; select bank2
 24811  0806  009A               	movwf	26	;volatile
 24812  0807  0008               	return
 24813  0808                     __end_of_EUSART_Write:	
 24814                           
 24815                           	psect	text76
 24816  2113                     __ptext76:	
 24817 ;; *************** function _isdigit *****************
 24818 ;; Defined at:
 24819 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 24820 ;; Parameters:    Size  Location     Type
 24821 ;;  c               1    wreg     unsigned char 
 24822 ;; Auto vars:     Size  Location     Type
 24823 ;;  c               1    2[COMMON] unsigned char 
 24824 ;; Return value:  Size  Location     Type
 24825 ;;		None               void
 24826 ;; Registers used:
 24827 ;;		wreg, status,2, status,0
 24828 ;; Tracked objects:
 24829 ;;		On entry : 0/0
 24830 ;;		On exit  : 0/0
 24831 ;;		Unchanged: 0/0
 24832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24837 ;;Total ram usage:        2 bytes
 24838 ;; Hardware stack levels used:    1
 24839 ;; Hardware stack levels required when called:    2
 24840 ;; This function calls:
 24841 ;;		Nothing
 24842 ;; This function is called by:
 24843 ;;		__doprnt
 24844 ;; This function uses a non-reentrant model
 24845 ;;
 24846                           
 24847                           
 24848                           ;psect for function _isdigit
 24849  2113                     _isdigit:	
 24850                           
 24851                           ;incstack = 0
 24852                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 24853                           ;isdigit@c stored from wreg
 24854  2113  00F2               	movwf	isdigit@c
 24855  2114  01F1               	clrf	_isdigit$2884
 24856  2115  303A               	movlw	58
 24857  2116  0272               	subwf	isdigit@c,w
 24858  2117  1803               	skipnc
 24859  2118  291F               	goto	l8350
 24860  2119  3030               	movlw	48
 24861  211A  0272               	subwf	isdigit@c,w
 24862  211B  1C03               	skipc
 24863  211C  291F               	goto	l8350
 24864  211D  01F1               	clrf	_isdigit$2884
 24865  211E  0AF1               	incf	_isdigit$2884,f
 24866  211F                     l8350:	
 24867  211F  0C71               	rrf	_isdigit$2884,w
 24868  2120  0008               	return
 24869  2121                     __end_of_isdigit:	
 24870                           
 24871                           	psect	text77
 24872  21BA                     __ptext77:	
 24873 ;; *************** function ___wmul *****************
 24874 ;; Defined at:
 24875 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 24876 ;; Parameters:    Size  Location     Type
 24877 ;;  multiplier      2    1[COMMON] unsigned int 
 24878 ;;  multiplicand    2    3[COMMON] unsigned int 
 24879 ;; Auto vars:     Size  Location     Type
 24880 ;;  product         2    5[COMMON] unsigned int 
 24881 ;; Return value:  Size  Location     Type
 24882 ;;                  2    1[COMMON] unsigned int 
 24883 ;; Registers used:
 24884 ;;		wreg, status,2, status,0
 24885 ;; Tracked objects:
 24886 ;;		On entry : 0/0
 24887 ;;		On exit  : 0/0
 24888 ;;		Unchanged: 0/0
 24889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24894 ;;Total ram usage:        6 bytes
 24895 ;; Hardware stack levels used:    1
 24896 ;; Hardware stack levels required when called:    2
 24897 ;; This function calls:
 24898 ;;		Nothing
 24899 ;; This function is called by:
 24900 ;;		_process_pmic_status
 24901 ;;		__doprnt
 24902 ;; This function uses a non-reentrant model
 24903 ;;
 24904                           
 24905                           
 24906                           ;psect for function ___wmul
 24907  21BA                     ___wmul:	
 24908                           
 24909                           ;incstack = 0
 24910                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 24911  21BA  01F5               	clrf	___wmul@product
 24912  21BB  01F6               	clrf	___wmul@product+1
 24913  21BC                     l8356:	
 24914  21BC  1C71               	btfss	___wmul@multiplier,0
 24915  21BD  29C2               	goto	l1890
 24916  21BE  0873               	movf	___wmul@multiplicand,w
 24917  21BF  07F5               	addwf	___wmul@product,f
 24918  21C0  0874               	movf	___wmul@multiplicand+1,w
 24919  21C1  3DF6               	addwfc	___wmul@product+1,f
 24920  21C2                     l1890:	
 24921  21C2  3001               	movlw	1
 24922  21C3                     u8605:	
 24923  21C3  35F3               	lslf	___wmul@multiplicand,f
 24924  21C4  0DF4               	rlf	___wmul@multiplicand+1,f
 24925  21C5  0B89               	decfsz	9,f
 24926  21C6  29C3               	goto	u8605
 24927  21C7  3001               	movlw	1
 24928  21C8                     u8615:	
 24929  21C8  36F2               	lsrf	___wmul@multiplier+1,f
 24930  21C9  0CF1               	rrf	___wmul@multiplier,f
 24931  21CA  0B89               	decfsz	9,f
 24932  21CB  29C8               	goto	u8615
 24933  21CC  0871               	movf	___wmul@multiplier,w
 24934  21CD  0472               	iorwf	___wmul@multiplier+1,w
 24935  21CE  1D03               	btfss	3,2
 24936  21CF  29BC               	goto	l8356
 24937  21D0  0876               	movf	___wmul@product+1,w
 24938  21D1  00F2               	movwf	?___wmul+1
 24939  21D2  0875               	movf	___wmul@product,w
 24940  21D3  00F1               	movwf	?___wmul
 24941  21D4  0008               	return
 24942  21D5                     __end_of___wmul:	
 24943                           
 24944                           	psect	text78
 24945  24E8                     __ptext78:	
 24946 ;; *************** function ___lwmod *****************
 24947 ;; Defined at:
 24948 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 24949 ;; Parameters:    Size  Location     Type
 24950 ;;  divisor         2    0[BANK0 ] unsigned int 
 24951 ;;  dividend        2    2[BANK0 ] unsigned int 
 24952 ;; Auto vars:     Size  Location     Type
 24953 ;;  counter         1   10[COMMON] unsigned char 
 24954 ;; Return value:  Size  Location     Type
 24955 ;;                  2    0[BANK0 ] unsigned int 
 24956 ;; Registers used:
 24957 ;;		wreg, status,2, status,0
 24958 ;; Tracked objects:
 24959 ;;		On entry : 0/0
 24960 ;;		On exit  : 0/0
 24961 ;;		Unchanged: 0/0
 24962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24966 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24967 ;;Total ram usage:        6 bytes
 24968 ;; Hardware stack levels used:    1
 24969 ;; Hardware stack levels required when called:    2
 24970 ;; This function calls:
 24971 ;;		Nothing
 24972 ;; This function is called by:
 24973 ;;		__doprnt
 24974 ;; This function uses a non-reentrant model
 24975 ;;
 24976                           
 24977                           
 24978                           ;psect for function ___lwmod
 24979  24E8                     ___lwmod:	
 24980                           
 24981                           ;incstack = 0
 24982                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 24983  24E8  0140               	movlb	0	; select bank0
 24984  24E9  0820               	movf	___lwmod@divisor,w
 24985  24EA  0421               	iorwf	___lwmod@divisor+1,w
 24986  24EB  1903               	btfsc	3,2
 24987  24EC  2D10               	goto	l8412
 24988  24ED  01FA               	clrf	___lwmod@counter
 24989  24EE  0AFA               	incf	___lwmod@counter,f
 24990  24EF                     l8402:	
 24991  24EF  1BA1               	btfsc	___lwmod@divisor+1,7
 24992  24F0  2CFB               	goto	l8404
 24993  24F1  3001               	movlw	1
 24994  24F2                     u8715:	
 24995  24F2  35A0               	lslf	___lwmod@divisor,f
 24996  24F3  0DA1               	rlf	___lwmod@divisor+1,f
 24997  24F4  0B89               	decfsz	9,f
 24998  24F5  2CF2               	goto	u8715
 24999  24F6  3001               	movlw	1
 25000  24F7  00F9               	movwf	??___lwmod
 25001  24F8  0879               	movf	??___lwmod,w
 25002  24F9  07FA               	addwf	___lwmod@counter,f
 25003  24FA  2CEF               	goto	l8402
 25004  24FB                     l8404:	
 25005  24FB  0821               	movf	___lwmod@divisor+1,w
 25006  24FC  0223               	subwf	___lwmod@dividend+1,w
 25007  24FD  1D03               	skipz
 25008  24FE  2D01               	goto	u8735
 25009  24FF  0820               	movf	___lwmod@divisor,w
 25010  2500  0222               	subwf	___lwmod@dividend,w
 25011  2501                     u8735:	
 25012  2501  1C03               	skipc
 25013  2502  2D07               	goto	l8408
 25014  2503  0820               	movf	___lwmod@divisor,w
 25015  2504  02A2               	subwf	___lwmod@dividend,f
 25016  2505  0821               	movf	___lwmod@divisor+1,w
 25017  2506  3BA3               	subwfb	___lwmod@dividend+1,f
 25018  2507                     l8408:	
 25019  2507  3001               	movlw	1
 25020  2508                     u8745:	
 25021  2508  36A1               	lsrf	___lwmod@divisor+1,f
 25022  2509  0CA0               	rrf	___lwmod@divisor,f
 25023  250A  0B89               	decfsz	9,f
 25024  250B  2D08               	goto	u8745
 25025  250C  3001               	movlw	1
 25026  250D  02FA               	subwf	___lwmod@counter,f
 25027  250E  1D03               	btfss	3,2
 25028  250F  2CFB               	goto	l8404
 25029  2510                     l8412:	
 25030  2510  0823               	movf	___lwmod@dividend+1,w
 25031  2511  00A1               	movwf	?___lwmod+1
 25032  2512  0822               	movf	___lwmod@dividend,w
 25033  2513  00A0               	movwf	?___lwmod
 25034  2514  0008               	return
 25035  2515                     __end_of___lwmod:	
 25036                           
 25037                           	psect	text79
 25038  25A4                     __ptext79:	
 25039 ;; *************** function ___lwdiv *****************
 25040 ;; Defined at:
 25041 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 25042 ;; Parameters:    Size  Location     Type
 25043 ;;  divisor         2    1[COMMON] unsigned int 
 25044 ;;  dividend        2    3[COMMON] unsigned int 
 25045 ;; Auto vars:     Size  Location     Type
 25046 ;;  quotient        2    7[COMMON] unsigned int 
 25047 ;;  counter         1    6[COMMON] unsigned char 
 25048 ;; Return value:  Size  Location     Type
 25049 ;;                  2    1[COMMON] unsigned int 
 25050 ;; Registers used:
 25051 ;;		wreg, status,2, status,0
 25052 ;; Tracked objects:
 25053 ;;		On entry : 0/0
 25054 ;;		On exit  : 0/0
 25055 ;;		Unchanged: 0/0
 25056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25058 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25060 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25061 ;;Total ram usage:        8 bytes
 25062 ;; Hardware stack levels used:    1
 25063 ;; Hardware stack levels required when called:    2
 25064 ;; This function calls:
 25065 ;;		Nothing
 25066 ;; This function is called by:
 25067 ;;		_lipo_battery_level
 25068 ;;		__doprnt
 25069 ;; This function uses a non-reentrant model
 25070 ;;
 25071                           
 25072                           
 25073                           ;psect for function ___lwdiv
 25074  25A4                     ___lwdiv:	
 25075                           
 25076                           ;incstack = 0
 25077                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 25078  25A4  01F7               	clrf	___lwdiv@quotient
 25079  25A5  01F8               	clrf	___lwdiv@quotient+1
 25080  25A6  0871               	movf	___lwdiv@divisor,w
 25081  25A7  0472               	iorwf	___lwdiv@divisor+1,w
 25082  25A8  1903               	btfsc	3,2
 25083  25A9  2DD3               	goto	l8390
 25084  25AA  01F6               	clrf	___lwdiv@counter
 25085  25AB  0AF6               	incf	___lwdiv@counter,f
 25086  25AC                     l8378:	
 25087  25AC  1BF2               	btfsc	___lwdiv@divisor+1,7
 25088  25AD  2DB8               	goto	l8380
 25089  25AE  3001               	movlw	1
 25090  25AF                     u8645:	
 25091  25AF  35F1               	lslf	___lwdiv@divisor,f
 25092  25B0  0DF2               	rlf	___lwdiv@divisor+1,f
 25093  25B1  0B89               	decfsz	9,f
 25094  25B2  2DAF               	goto	u8645
 25095  25B3  3001               	movlw	1
 25096  25B4  00F5               	movwf	??___lwdiv
 25097  25B5  0875               	movf	??___lwdiv,w
 25098  25B6  07F6               	addwf	___lwdiv@counter,f
 25099  25B7  2DAC               	goto	l8378
 25100  25B8                     l8380:	
 25101  25B8  3001               	movlw	1
 25102  25B9                     u8665:	
 25103  25B9  35F7               	lslf	___lwdiv@quotient,f
 25104  25BA  0DF8               	rlf	___lwdiv@quotient+1,f
 25105  25BB  0B89               	decfsz	9,f
 25106  25BC  2DB9               	goto	u8665
 25107  25BD  0872               	movf	___lwdiv@divisor+1,w
 25108  25BE  0274               	subwf	___lwdiv@dividend+1,w
 25109  25BF  1D03               	skipz
 25110  25C0  2DC3               	goto	u8675
 25111  25C1  0871               	movf	___lwdiv@divisor,w
 25112  25C2  0273               	subwf	___lwdiv@dividend,w
 25113  25C3                     u8675:	
 25114  25C3  1C03               	skipc
 25115  25C4  2DCA               	goto	l8386
 25116  25C5  0871               	movf	___lwdiv@divisor,w
 25117  25C6  02F3               	subwf	___lwdiv@dividend,f
 25118  25C7  0872               	movf	___lwdiv@divisor+1,w
 25119  25C8  3BF4               	subwfb	___lwdiv@dividend+1,f
 25120  25C9  1477               	bsf	___lwdiv@quotient,0
 25121  25CA                     l8386:	
 25122  25CA  3001               	movlw	1
 25123  25CB                     u8685:	
 25124  25CB  36F2               	lsrf	___lwdiv@divisor+1,f
 25125  25CC  0CF1               	rrf	___lwdiv@divisor,f
 25126  25CD  0B89               	decfsz	9,f
 25127  25CE  2DCB               	goto	u8685
 25128  25CF  3001               	movlw	1
 25129  25D0  02F6               	subwf	___lwdiv@counter,f
 25130  25D1  1D03               	btfss	3,2
 25131  25D2  2DB8               	goto	l8380
 25132  25D3                     l8390:	
 25133  25D3  0878               	movf	___lwdiv@quotient+1,w
 25134  25D4  00F2               	movwf	?___lwdiv+1
 25135  25D5  0877               	movf	___lwdiv@quotient,w
 25136  25D6  00F1               	movwf	?___lwdiv
 25137  25D7  0008               	return
 25138  25D8                     __end_of___lwdiv:	
 25139                           
 25140                           	psect	text80
 25141  2465                     __ptext80:	
 25142 ;; *************** function ___lltoft *****************
 25143 ;; Defined at:
 25144 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 25145 ;; Parameters:    Size  Location     Type
 25146 ;;  c               4    0[BANK0 ] unsigned long 
 25147 ;; Auto vars:     Size  Location     Type
 25148 ;;  exp             1   10[COMMON] unsigned char 
 25149 ;; Return value:  Size  Location     Type
 25150 ;;                  3    0[BANK0 ] float 
 25151 ;; Registers used:
 25152 ;;		wreg, status,2, status,0, pclath, cstack
 25153 ;; Tracked objects:
 25154 ;;		On entry : 0/0
 25155 ;;		On exit  : 0/0
 25156 ;;		Unchanged: 0/0
 25157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25158 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25161 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25162 ;;Total ram usage:        6 bytes
 25163 ;; Hardware stack levels used:    1
 25164 ;; Hardware stack levels required when called:    3
 25165 ;; This function calls:
 25166 ;;		___ftpack
 25167 ;; This function is called by:
 25168 ;;		_dwt_configure
 25169 ;; This function uses a non-reentrant model
 25170 ;;
 25171                           
 25172                           
 25173                           ;psect for function ___lltoft
 25174  2465                     ___lltoft:	
 25175                           
 25176                           ;incstack = 0
 25177                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 25178  2465  308E               	movlw	142
 25179  2466  00F9               	movwf	??___lltoft
 25180  2467  0879               	movf	??___lltoft,w
 25181  2468  00FA               	movwf	___lltoft@exp
 25182  2469                     l9270:	
 25183  2469  30FF               	movlw	255
 25184  246A  0140               	movlb	0	; select bank0
 25185  246B  0523               	andwf	___lltoft@c+3,w
 25186  246C  1903               	btfsc	3,2
 25187  246D  2C7B               	goto	l9272
 25188  246E  3001               	movlw	1
 25189  246F                     u10145:	
 25190  246F  0140               	movlb	0	; select bank0
 25191  2470  36A3               	lsrf	___lltoft@c+3,f
 25192  2471  0CA2               	rrf	___lltoft@c+2,f
 25193  2472  0CA1               	rrf	___lltoft@c+1,f
 25194  2473  0CA0               	rrf	___lltoft@c,f
 25195  2474  0B89               	decfsz	9,f
 25196  2475  2C6F               	goto	u10145
 25197  2476  3001               	movlw	1
 25198  2477  00F9               	movwf	??___lltoft
 25199  2478  0879               	movf	??___lltoft,w
 25200  2479  07FA               	addwf	___lltoft@exp,f
 25201  247A  2C69               	goto	l9270
 25202  247B                     l9272:	
 25203  247B  0820               	movf	___lltoft@c,w
 25204  247C  00F1               	movwf	___ftpack@arg
 25205  247D  0821               	movf	___lltoft@c+1,w
 25206  247E  00F2               	movwf	___ftpack@arg+1
 25207  247F  0822               	movf	___lltoft@c+2,w
 25208  2480  00F3               	movwf	___ftpack@arg+2
 25209  2481  087A               	movf	___lltoft@exp,w
 25210  2482  00F9               	movwf	??___lltoft
 25211  2483  0879               	movf	??___lltoft,w
 25212  2484  00F4               	movwf	___ftpack@exp
 25213  2485  01F5               	clrf	___ftpack@sign
 25214  2486  319B  2394         	fcall	___ftpack
 25215  2488  0871               	movf	?___ftpack,w
 25216  2489  0140               	movlb	0	; select bank0
 25217  248A  00A0               	movwf	?___lltoft
 25218  248B  0872               	movf	?___ftpack+1,w
 25219  248C  00A1               	movwf	?___lltoft+1
 25220  248D  0873               	movf	?___ftpack+2,w
 25221  248E  00A2               	movwf	?___lltoft+2
 25222  248F  0008               	return
 25223  2490                     __end_of___lltoft:	
 25224                           
 25225                           	psect	text81
 25226  1E4C                     __ptext81:	
 25227 ;; *************** function ___fttol *****************
 25228 ;; Defined at:
 25229 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 25230 ;; Parameters:    Size  Location     Type
 25231 ;;  f1              3   20[BANK0 ] float 
 25232 ;; Auto vars:     Size  Location     Type
 25233 ;;  lval            4   29[BANK0 ] unsigned long 
 25234 ;;  exp1            1   33[BANK0 ] unsigned char 
 25235 ;;  sign1           1   28[BANK0 ] unsigned char 
 25236 ;; Return value:  Size  Location     Type
 25237 ;;                  4   20[BANK0 ] long 
 25238 ;; Registers used:
 25239 ;;		wreg, status,2, status,0
 25240 ;; Tracked objects:
 25241 ;;		On entry : 0/0
 25242 ;;		On exit  : 0/0
 25243 ;;		Unchanged: 0/0
 25244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25246 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25247 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25248 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25249 ;;Total ram usage:       14 bytes
 25250 ;; Hardware stack levels used:    1
 25251 ;; Hardware stack levels required when called:    2
 25252 ;; This function calls:
 25253 ;;		Nothing
 25254 ;; This function is called by:
 25255 ;;		_dwt_configure
 25256 ;; This function uses a non-reentrant model
 25257 ;;
 25258                           
 25259                           
 25260                           ;psect for function ___fttol
 25261  1E4C                     ___fttol:	
 25262                           
 25263                           ;incstack = 0
 25264                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 25265  1E4C  0140               	movlb	0	; select bank0
 25266  1E4D  0834               	movf	___fttol@f1,w
 25267  1E4E  00B8               	movwf	??___fttol
 25268  1E4F  0835               	movf	___fttol@f1+1,w
 25269  1E50  00B9               	movwf	??___fttol+1
 25270  1E51  0836               	movf	___fttol@f1+2,w
 25271  1E52  00BA               	movwf	??___fttol+2
 25272  1E53  1003               	clrc
 25273  1E54  0D39               	rlf	??___fttol+1,w
 25274  1E55  0D3A               	rlf	??___fttol+2,w
 25275  1E56  00BB               	movwf	??___fttol+3
 25276  1E57  083B               	movf	??___fttol+3,w
 25277  1E58  00C1               	movwf	___fttol@exp1
 25278  1E59  0841               	movf	___fttol@exp1,w
 25279  1E5A  1D03               	btfss	3,2
 25280  1E5B  2E65               	goto	l6278
 25281  1E5C  3000               	movlw	0
 25282  1E5D  00B7               	movwf	?___fttol+3
 25283  1E5E  3000               	movlw	0
 25284  1E5F  00B6               	movwf	?___fttol+2
 25285  1E60  3000               	movlw	0
 25286  1E61  00B5               	movwf	?___fttol+1
 25287  1E62  3000               	movlw	0
 25288  1E63  00B4               	movwf	?___fttol
 25289  1E64  0008               	return
 25290  1E65                     l6278:	
 25291  1E65  0834               	movf	___fttol@f1,w
 25292  1E66  00B8               	movwf	??___fttol
 25293  1E67  0835               	movf	___fttol@f1+1,w
 25294  1E68  00B9               	movwf	??___fttol+1
 25295  1E69  0836               	movf	___fttol@f1+2,w
 25296  1E6A  00BA               	movwf	??___fttol+2
 25297  1E6B  3017               	movlw	23
 25298  1E6C                     u5765:	
 25299  1E6C  36BA               	lsrf	??___fttol+2,f
 25300  1E6D  0CB9               	rrf	??___fttol+1,f
 25301  1E6E  0CB8               	rrf	??___fttol,f
 25302  1E6F  0B89               	decfsz	9,f
 25303  1E70  2E6C               	goto	u5765
 25304  1E71  0838               	movf	??___fttol,w
 25305  1E72  00BB               	movwf	??___fttol+3
 25306  1E73  083B               	movf	??___fttol+3,w
 25307  1E74  00BC               	movwf	___fttol@sign1
 25308  1E75  17B5               	bsf	___fttol@f1+1,7
 25309  1E76  30FF               	movlw	255
 25310  1E77  05B4               	andwf	___fttol@f1,f
 25311  1E78  30FF               	movlw	255
 25312  1E79  05B5               	andwf	___fttol@f1+1,f
 25313  1E7A  3000               	movlw	0
 25314  1E7B  05B6               	andwf	___fttol@f1+2,f
 25315  1E7C  0834               	movf	___fttol@f1,w
 25316  1E7D  00BD               	movwf	___fttol@lval
 25317  1E7E  0835               	movf	___fttol@f1+1,w
 25318  1E7F  00BE               	movwf	___fttol@lval+1
 25319  1E80  0836               	movf	___fttol@f1+2,w
 25320  1E81  00BF               	movwf	___fttol@lval+2
 25321  1E82  01C0               	clrf	___fttol@lval+3
 25322  1E83  308E               	movlw	142
 25323  1E84  02C1               	subwf	___fttol@exp1,f
 25324  1E85  1FC1               	btfss	___fttol@exp1,7
 25325  1E86  2EA3               	goto	l6298
 25326  1E87  0841               	movf	___fttol@exp1,w
 25327  1E88  3A80               	xorlw	128
 25328  1E89  3E8F               	addlw	143
 25329  1E8A  1803               	skipnc
 25330  1E8B  2E95               	goto	l6296
 25331  1E8C  3000               	movlw	0
 25332  1E8D  00B7               	movwf	?___fttol+3
 25333  1E8E  3000               	movlw	0
 25334  1E8F  00B6               	movwf	?___fttol+2
 25335  1E90  3000               	movlw	0
 25336  1E91  00B5               	movwf	?___fttol+1
 25337  1E92  3000               	movlw	0
 25338  1E93  00B4               	movwf	?___fttol
 25339  1E94  0008               	return
 25340  1E95                     l6296:	
 25341  1E95  3001               	movlw	1
 25342  1E96                     u5795:	
 25343  1E96  36C0               	lsrf	___fttol@lval+3,f
 25344  1E97  0CBF               	rrf	___fttol@lval+2,f
 25345  1E98  0CBE               	rrf	___fttol@lval+1,f
 25346  1E99  0CBD               	rrf	___fttol@lval,f
 25347  1E9A  0B89               	decfsz	9,f
 25348  1E9B  2E96               	goto	u5795
 25349  1E9C  3001               	movlw	1
 25350  1E9D  00B8               	movwf	??___fttol
 25351  1E9E  0838               	movf	??___fttol,w
 25352  1E9F  07C1               	addwf	___fttol@exp1,f
 25353  1EA0  1903               	btfsc	3,2
 25354  1EA1  2EBC               	goto	l6306
 25355  1EA2  2E95               	goto	l6296
 25356  1EA3                     l6298:	
 25357  1EA3  3018               	movlw	24
 25358  1EA4  0241               	subwf	___fttol@exp1,w
 25359  1EA5  1C03               	skipc
 25360  1EA6  2EB9               	goto	l2149
 25361  1EA7  3000               	movlw	0
 25362  1EA8  00B7               	movwf	?___fttol+3
 25363  1EA9  3000               	movlw	0
 25364  1EAA  00B6               	movwf	?___fttol+2
 25365  1EAB  3000               	movlw	0
 25366  1EAC  00B5               	movwf	?___fttol+1
 25367  1EAD  3000               	movlw	0
 25368  1EAE  00B4               	movwf	?___fttol
 25369  1EAF  0008               	return
 25370  1EB0                     l6304:	
 25371  1EB0  3001               	movlw	1
 25372  1EB1                     u5825:	
 25373  1EB1  35BD               	lslf	___fttol@lval,f
 25374  1EB2  0DBE               	rlf	___fttol@lval+1,f
 25375  1EB3  0DBF               	rlf	___fttol@lval+2,f
 25376  1EB4  0DC0               	rlf	___fttol@lval+3,f
 25377  1EB5  0B89               	decfsz	9,f
 25378  1EB6  2EB1               	goto	u5825
 25379  1EB7  3001               	movlw	1
 25380  1EB8  02C1               	subwf	___fttol@exp1,f
 25381  1EB9                     l2149:	
 25382  1EB9  0841               	movf	___fttol@exp1,w
 25383  1EBA  1D03               	btfss	3,2
 25384  1EBB  2EB0               	goto	l6304
 25385  1EBC                     l6306:	
 25386  1EBC  083C               	movf	___fttol@sign1,w
 25387  1EBD  1903               	btfsc	3,2
 25388  1EBE  2ECA               	goto	l6310
 25389  1EBF  09BD               	comf	___fttol@lval,f
 25390  1EC0  09BE               	comf	___fttol@lval+1,f
 25391  1EC1  09BF               	comf	___fttol@lval+2,f
 25392  1EC2  09C0               	comf	___fttol@lval+3,f
 25393  1EC3  0ABD               	incf	___fttol@lval,f
 25394  1EC4  1903               	skipnz
 25395  1EC5  0ABE               	incf	___fttol@lval+1,f
 25396  1EC6  1903               	skipnz
 25397  1EC7  0ABF               	incf	___fttol@lval+2,f
 25398  1EC8  1903               	skipnz
 25399  1EC9  0AC0               	incf	___fttol@lval+3,f
 25400  1ECA                     l6310:	
 25401  1ECA  0840               	movf	___fttol@lval+3,w
 25402  1ECB  00B7               	movwf	?___fttol+3
 25403  1ECC  083F               	movf	___fttol@lval+2,w
 25404  1ECD  00B6               	movwf	?___fttol+2
 25405  1ECE  083E               	movf	___fttol@lval+1,w
 25406  1ECF  00B5               	movwf	?___fttol+1
 25407  1ED0  083D               	movf	___fttol@lval,w
 25408  1ED1  00B4               	movwf	?___fttol
 25409  1ED2  0008               	return
 25410  1ED3                     __end_of___fttol:	
 25411                           
 25412                           	psect	text82
 25413  12EB                     __ptext82:	
 25414 ;; *************** function ___ftmul *****************
 25415 ;; Defined at:
 25416 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 25417 ;; Parameters:    Size  Location     Type
 25418 ;;  f1              3    4[BANK0 ] float 
 25419 ;;  f2              3    7[BANK0 ] float 
 25420 ;; Auto vars:     Size  Location     Type
 25421 ;;  f3_as_produc    3   15[BANK0 ] unsigned um
 25422 ;;  sign            1   19[BANK0 ] unsigned char 
 25423 ;;  cntr            1   18[BANK0 ] unsigned char 
 25424 ;;  exp             1   14[BANK0 ] unsigned char 
 25425 ;; Return value:  Size  Location     Type
 25426 ;;                  3    4[BANK0 ] float 
 25427 ;; Registers used:
 25428 ;;		wreg, status,2, status,0, pclath, cstack
 25429 ;; Tracked objects:
 25430 ;;		On entry : 0/0
 25431 ;;		On exit  : 0/0
 25432 ;;		Unchanged: 0/0
 25433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25434 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25435 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25436 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25437 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25438 ;;Total ram usage:       16 bytes
 25439 ;; Hardware stack levels used:    1
 25440 ;; Hardware stack levels required when called:    3
 25441 ;; This function calls:
 25442 ;;		___ftpack
 25443 ;; This function is called by:
 25444 ;;		_dwt_configure
 25445 ;;		_dwt_convertrawtemperature
 25446 ;;		_dwt_convertrawvoltage
 25447 ;; This function uses a non-reentrant model
 25448 ;;
 25449                           
 25450                           
 25451                           ;psect for function ___ftmul
 25452  12EB                     ___ftmul:	
 25453                           
 25454                           ;incstack = 0
 25455                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 25456  12EB  0140               	movlb	0	; select bank0
 25457  12EC  0824               	movf	___ftmul@f1,w
 25458  12ED  00AA               	movwf	??___ftmul
 25459  12EE  0825               	movf	___ftmul@f1+1,w
 25460  12EF  00AB               	movwf	??___ftmul+1
 25461  12F0  0826               	movf	___ftmul@f1+2,w
 25462  12F1  00AC               	movwf	??___ftmul+2
 25463  12F2  1003               	clrc
 25464  12F3  0D2B               	rlf	??___ftmul+1,w
 25465  12F4  0D2C               	rlf	??___ftmul+2,w
 25466  12F5  00AD               	movwf	??___ftmul+3
 25467  12F6  082D               	movf	??___ftmul+3,w
 25468  12F7  00AE               	movwf	___ftmul@exp
 25469  12F8  082E               	movf	___ftmul@exp,w
 25470  12F9  1D03               	btfss	3,2
 25471  12FA  2B02               	goto	l9222
 25472  12FB  3000               	movlw	0
 25473  12FC  00A4               	movwf	?___ftmul
 25474  12FD  3000               	movlw	0
 25475  12FE  00A5               	movwf	?___ftmul+1
 25476  12FF  3000               	movlw	0
 25477  1300  00A6               	movwf	?___ftmul+2
 25478  1301  0008               	return
 25479  1302                     l9222:	
 25480  1302  0827               	movf	___ftmul@f2,w
 25481  1303  00AA               	movwf	??___ftmul
 25482  1304  0828               	movf	___ftmul@f2+1,w
 25483  1305  00AB               	movwf	??___ftmul+1
 25484  1306  0829               	movf	___ftmul@f2+2,w
 25485  1307  00AC               	movwf	??___ftmul+2
 25486  1308  1003               	clrc
 25487  1309  0D2B               	rlf	??___ftmul+1,w
 25488  130A  0D2C               	rlf	??___ftmul+2,w
 25489  130B  00AD               	movwf	??___ftmul+3
 25490  130C  082D               	movf	??___ftmul+3,w
 25491  130D  00B3               	movwf	___ftmul@sign
 25492  130E  0833               	movf	___ftmul@sign,w
 25493  130F  1D03               	btfss	3,2
 25494  1310  2B18               	goto	l9228
 25495  1311  3000               	movlw	0
 25496  1312  00A4               	movwf	?___ftmul
 25497  1313  3000               	movlw	0
 25498  1314  00A5               	movwf	?___ftmul+1
 25499  1315  3000               	movlw	0
 25500  1316  00A6               	movwf	?___ftmul+2
 25501  1317  0008               	return
 25502  1318                     l9228:	
 25503  1318  0833               	movf	___ftmul@sign,w
 25504  1319  3E7B               	addlw	123
 25505  131A  00AA               	movwf	??___ftmul
 25506  131B  082A               	movf	??___ftmul,w
 25507  131C  07AE               	addwf	___ftmul@exp,f
 25508  131D  0824               	movf	___ftmul@f1,w
 25509  131E  00AA               	movwf	??___ftmul
 25510  131F  0825               	movf	___ftmul@f1+1,w
 25511  1320  00AB               	movwf	??___ftmul+1
 25512  1321  0826               	movf	___ftmul@f1+2,w
 25513  1322  00AC               	movwf	??___ftmul+2
 25514  1323  3010               	movlw	16
 25515  1324                     u10045:	
 25516  1324  36AC               	lsrf	??___ftmul+2,f
 25517  1325  0CAB               	rrf	??___ftmul+1,f
 25518  1326  0CAA               	rrf	??___ftmul,f
 25519  1327  0B89               	decfsz	9,f
 25520  1328  2B24               	goto	u10045
 25521  1329  082A               	movf	??___ftmul,w
 25522  132A  00AD               	movwf	??___ftmul+3
 25523  132B  082D               	movf	??___ftmul+3,w
 25524  132C  00B3               	movwf	___ftmul@sign
 25525  132D  0827               	movf	___ftmul@f2,w
 25526  132E  00AA               	movwf	??___ftmul
 25527  132F  0828               	movf	___ftmul@f2+1,w
 25528  1330  00AB               	movwf	??___ftmul+1
 25529  1331  0829               	movf	___ftmul@f2+2,w
 25530  1332  00AC               	movwf	??___ftmul+2
 25531  1333  3010               	movlw	16
 25532  1334                     u10055:	
 25533  1334  36AC               	lsrf	??___ftmul+2,f
 25534  1335  0CAB               	rrf	??___ftmul+1,f
 25535  1336  0CAA               	rrf	??___ftmul,f
 25536  1337  0B89               	decfsz	9,f
 25537  1338  2B34               	goto	u10055
 25538  1339  082A               	movf	??___ftmul,w
 25539  133A  00AD               	movwf	??___ftmul+3
 25540  133B  082D               	movf	??___ftmul+3,w
 25541  133C  06B3               	xorwf	___ftmul@sign,f
 25542  133D  3080               	movlw	128
 25543  133E  00AA               	movwf	??___ftmul
 25544  133F  082A               	movf	??___ftmul,w
 25545  1340  05B3               	andwf	___ftmul@sign,f
 25546  1341  17A5               	bsf	___ftmul@f1+1,7
 25547  1342  17A8               	bsf	___ftmul@f2+1,7
 25548  1343  30FF               	movlw	255
 25549  1344  05A7               	andwf	___ftmul@f2,f
 25550  1345  30FF               	movlw	255
 25551  1346  05A8               	andwf	___ftmul@f2+1,f
 25552  1347  3000               	movlw	0
 25553  1348  05A9               	andwf	___ftmul@f2+2,f
 25554  1349  3000               	movlw	0
 25555  134A  00AF               	movwf	___ftmul@f3_as_product
 25556  134B  3000               	movlw	0
 25557  134C  00B0               	movwf	___ftmul@f3_as_product+1
 25558  134D  3000               	movlw	0
 25559  134E  00B1               	movwf	___ftmul@f3_as_product+2
 25560  134F  3007               	movlw	7
 25561  1350  00AA               	movwf	??___ftmul
 25562  1351  082A               	movf	??___ftmul,w
 25563  1352  00B2               	movwf	___ftmul@cntr
 25564  1353                     l9240:	
 25565  1353  1C24               	btfss	___ftmul@f1,0
 25566  1354  2B5B               	goto	l9244
 25567  1355  0827               	movf	___ftmul@f2,w
 25568  1356  07AF               	addwf	___ftmul@f3_as_product,f
 25569  1357  0828               	movf	___ftmul@f2+1,w
 25570  1358  3DB0               	addwfc	___ftmul@f3_as_product+1,f
 25571  1359  0829               	movf	___ftmul@f2+2,w
 25572  135A  3DB1               	addwfc	___ftmul@f3_as_product+2,f
 25573  135B                     l9244:	
 25574  135B  3001               	movlw	1
 25575  135C                     u10075:	
 25576  135C  36A6               	lsrf	___ftmul@f1+2,f
 25577  135D  0CA5               	rrf	___ftmul@f1+1,f
 25578  135E  0CA4               	rrf	___ftmul@f1,f
 25579  135F  0B89               	decfsz	9,f
 25580  1360  2B5C               	goto	u10075
 25581  1361  3001               	movlw	1
 25582  1362                     u10085:	
 25583  1362  35A7               	lslf	___ftmul@f2,f
 25584  1363  0DA8               	rlf	___ftmul@f2+1,f
 25585  1364  0DA9               	rlf	___ftmul@f2+2,f
 25586  1365  0B89               	decfsz	9,f
 25587  1366  2B62               	goto	u10085
 25588  1367  3001               	movlw	1
 25589  1368  02B2               	subwf	___ftmul@cntr,f
 25590  1369  1D03               	btfss	3,2
 25591  136A  2B53               	goto	l9240
 25592  136B  3009               	movlw	9
 25593  136C  00AA               	movwf	??___ftmul
 25594  136D  082A               	movf	??___ftmul,w
 25595  136E  00B2               	movwf	___ftmul@cntr
 25596  136F                     l9252:	
 25597  136F  1C24               	btfss	___ftmul@f1,0
 25598  1370  2B77               	goto	l9256
 25599  1371  0827               	movf	___ftmul@f2,w
 25600  1372  07AF               	addwf	___ftmul@f3_as_product,f
 25601  1373  0828               	movf	___ftmul@f2+1,w
 25602  1374  3DB0               	addwfc	___ftmul@f3_as_product+1,f
 25603  1375  0829               	movf	___ftmul@f2+2,w
 25604  1376  3DB1               	addwfc	___ftmul@f3_as_product+2,f
 25605  1377                     l9256:	
 25606  1377  3001               	movlw	1
 25607  1378                     u10115:	
 25608  1378  36A6               	lsrf	___ftmul@f1+2,f
 25609  1379  0CA5               	rrf	___ftmul@f1+1,f
 25610  137A  0CA4               	rrf	___ftmul@f1,f
 25611  137B  0B89               	decfsz	9,f
 25612  137C  2B78               	goto	u10115
 25613  137D  3001               	movlw	1
 25614  137E                     u10125:	
 25615  137E  36B1               	lsrf	___ftmul@f3_as_product+2,f
 25616  137F  0CB0               	rrf	___ftmul@f3_as_product+1,f
 25617  1380  0CAF               	rrf	___ftmul@f3_as_product,f
 25618  1381  0B89               	decfsz	9,f
 25619  1382  2B7E               	goto	u10125
 25620  1383  3001               	movlw	1
 25621  1384  02B2               	subwf	___ftmul@cntr,f
 25622  1385  1D03               	btfss	3,2
 25623  1386  2B6F               	goto	l9252
 25624  1387  082F               	movf	___ftmul@f3_as_product,w
 25625  1388  00F1               	movwf	___ftpack@arg
 25626  1389  0830               	movf	___ftmul@f3_as_product+1,w
 25627  138A  00F2               	movwf	___ftpack@arg+1
 25628  138B  0831               	movf	___ftmul@f3_as_product+2,w
 25629  138C  00F3               	movwf	___ftpack@arg+2
 25630  138D  082E               	movf	___ftmul@exp,w
 25631  138E  00AA               	movwf	??___ftmul
 25632  138F  082A               	movf	??___ftmul,w
 25633  1390  00F4               	movwf	___ftpack@exp
 25634  1391  0833               	movf	___ftmul@sign,w
 25635  1392  00AB               	movwf	??___ftmul+1
 25636  1393  082B               	movf	??___ftmul+1,w
 25637  1394  00F5               	movwf	___ftpack@sign
 25638  1395  319B  2394         	fcall	___ftpack
 25639  1397  0871               	movf	?___ftpack,w
 25640  1398  0140               	movlb	0	; select bank0
 25641  1399  00A4               	movwf	?___ftmul
 25642  139A  0872               	movf	?___ftpack+1,w
 25643  139B  00A5               	movwf	?___ftmul+1
 25644  139C  0873               	movf	?___ftpack+2,w
 25645  139D  00A6               	movwf	?___ftmul+2
 25646  139E  0008               	return
 25647  139F                     __end_of___ftmul:	
 25648                           
 25649                           	psect	text83
 25650  1B94                     __ptext83:	
 25651 ;; *************** function ___ftpack *****************
 25652 ;; Defined at:
 25653 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 25654 ;; Parameters:    Size  Location     Type
 25655 ;;  arg             3    1[COMMON] unsigned um
 25656 ;;  exp             1    4[COMMON] unsigned char 
 25657 ;;  sign            1    5[COMMON] unsigned char 
 25658 ;; Auto vars:     Size  Location     Type
 25659 ;;		None
 25660 ;; Return value:  Size  Location     Type
 25661 ;;                  3    1[COMMON] float 
 25662 ;; Registers used:
 25663 ;;		wreg, status,2, status,0
 25664 ;; Tracked objects:
 25665 ;;		On entry : 0/0
 25666 ;;		On exit  : 0/0
 25667 ;;		Unchanged: 0/0
 25668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25669 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25671 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25672 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25673 ;;Total ram usage:        8 bytes
 25674 ;; Hardware stack levels used:    1
 25675 ;; Hardware stack levels required when called:    2
 25676 ;; This function calls:
 25677 ;;		Nothing
 25678 ;; This function is called by:
 25679 ;;		___ftmul
 25680 ;;		___lltoft
 25681 ;;		___ftadd
 25682 ;;		___awtoft
 25683 ;;		___ftdiv
 25684 ;; This function uses a non-reentrant model
 25685 ;;
 25686                           
 25687                           
 25688                           ;psect for function ___ftpack
 25689  1B94                     ___ftpack:	
 25690                           
 25691                           ;incstack = 0
 25692                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 25693  1B94  0874               	movf	___ftpack@exp,w
 25694  1B95  1903               	btfsc	3,2
 25695  1B96  2B9C               	goto	l8976
 25696  1B97  0873               	movf	___ftpack@arg+2,w
 25697  1B98  0472               	iorwf	___ftpack@arg+1,w
 25698  1B99  0471               	iorwf	___ftpack@arg,w
 25699  1B9A  1D03               	skipz
 25700  1B9B  2BAD               	goto	l8982
 25701  1B9C                     l8976:	
 25702  1B9C  3000               	movlw	0
 25703  1B9D  00F1               	movwf	?___ftpack
 25704  1B9E  3000               	movlw	0
 25705  1B9F  00F2               	movwf	?___ftpack+1
 25706  1BA0  3000               	movlw	0
 25707  1BA1  00F3               	movwf	?___ftpack+2
 25708  1BA2  0008               	return
 25709  1BA3                     l8980:	
 25710  1BA3  3001               	movlw	1
 25711  1BA4  00F6               	movwf	??___ftpack
 25712  1BA5  0876               	movf	??___ftpack,w
 25713  1BA6  07F4               	addwf	___ftpack@exp,f
 25714  1BA7  3001               	movlw	1
 25715  1BA8                     u9695:	
 25716  1BA8  36F3               	lsrf	___ftpack@arg+2,f
 25717  1BA9  0CF2               	rrf	___ftpack@arg+1,f
 25718  1BAA  0CF1               	rrf	___ftpack@arg,f
 25719  1BAB  0B89               	decfsz	9,f
 25720  1BAC  2BA8               	goto	u9695
 25721  1BAD                     l8982:	
 25722  1BAD  30FE               	movlw	254
 25723  1BAE  0573               	andwf	___ftpack@arg+2,w
 25724  1BAF  1903               	btfsc	3,2
 25725  1BB0  2BC6               	goto	l2058
 25726  1BB1  2BA3               	goto	l8980
 25727  1BB2                     l8984:	
 25728  1BB2  3001               	movlw	1
 25729  1BB3  00F6               	movwf	??___ftpack
 25730  1BB4  0876               	movf	??___ftpack,w
 25731  1BB5  07F4               	addwf	___ftpack@exp,f
 25732  1BB6  3001               	movlw	1
 25733  1BB7  07F1               	addwf	___ftpack@arg,f
 25734  1BB8  3000               	movlw	0
 25735  1BB9  1803               	skipnc
 25736  1BBA  3001               	movlw	1
 25737  1BBB  07F2               	addwf	___ftpack@arg+1,f
 25738  1BBC  3000               	movlw	0
 25739  1BBD  1803               	skipnc
 25740  1BBE  3001               	movlw	1
 25741  1BBF  07F3               	addwf	___ftpack@arg+2,f
 25742  1BC0  3001               	movlw	1
 25743  1BC1                     u9715:	
 25744  1BC1  36F3               	lsrf	___ftpack@arg+2,f
 25745  1BC2  0CF2               	rrf	___ftpack@arg+1,f
 25746  1BC3  0CF1               	rrf	___ftpack@arg,f
 25747  1BC4  0B89               	decfsz	9,f
 25748  1BC5  2BC1               	goto	u9715
 25749  1BC6                     l2058:	
 25750  1BC6  30FF               	movlw	255
 25751  1BC7  0573               	andwf	___ftpack@arg+2,w
 25752  1BC8  1903               	btfsc	3,2
 25753  1BC9  2BD3               	goto	l8992
 25754  1BCA  2BB2               	goto	l8984
 25755  1BCB                     l8990:	
 25756  1BCB  3001               	movlw	1
 25757  1BCC  02F4               	subwf	___ftpack@exp,f
 25758  1BCD  3001               	movlw	1
 25759  1BCE                     u9735:	
 25760  1BCE  35F1               	lslf	___ftpack@arg,f
 25761  1BCF  0DF2               	rlf	___ftpack@arg+1,f
 25762  1BD0  0DF3               	rlf	___ftpack@arg+2,f
 25763  1BD1  0B89               	decfsz	9,f
 25764  1BD2  2BCE               	goto	u9735
 25765  1BD3                     l8992:	
 25766  1BD3  1BF2               	btfsc	___ftpack@arg+1,7
 25767  1BD4  2BD9               	goto	l2065
 25768  1BD5  3002               	movlw	2
 25769  1BD6  0274               	subwf	___ftpack@exp,w
 25770  1BD7  1803               	skipnc
 25771  1BD8  2BCB               	goto	l8990
 25772  1BD9                     l2065:	
 25773  1BD9  1874               	btfsc	___ftpack@exp,0
 25774  1BDA  2BE1               	goto	l2066
 25775  1BDB  30FF               	movlw	255
 25776  1BDC  05F1               	andwf	___ftpack@arg,f
 25777  1BDD  307F               	movlw	127
 25778  1BDE  05F2               	andwf	___ftpack@arg+1,f
 25779  1BDF  30FF               	movlw	255
 25780  1BE0  05F3               	andwf	___ftpack@arg+2,f
 25781  1BE1                     l2066:	
 25782  1BE1  1003               	clrc
 25783  1BE2  0CF4               	rrf	___ftpack@exp,f
 25784  1BE3  0874               	movf	___ftpack@exp,w
 25785  1BE4  00F6               	movwf	??___ftpack
 25786  1BE5  01F7               	clrf	??___ftpack+1
 25787  1BE6  01F8               	clrf	??___ftpack+2
 25788  1BE7  3010               	movlw	16
 25789  1BE8                     u9775:	
 25790  1BE8  35F6               	lslf	??___ftpack,f
 25791  1BE9  0DF7               	rlf	??___ftpack+1,f
 25792  1BEA  0DF8               	rlf	??___ftpack+2,f
 25793  1BEB  0B89               	decfsz	9,f
 25794  1BEC  2BE8               	goto	u9775
 25795  1BED  0876               	movf	??___ftpack,w
 25796  1BEE  04F1               	iorwf	___ftpack@arg,f
 25797  1BEF  0877               	movf	??___ftpack+1,w
 25798  1BF0  04F2               	iorwf	___ftpack@arg+1,f
 25799  1BF1  0878               	movf	??___ftpack+2,w
 25800  1BF2  04F3               	iorwf	___ftpack@arg+2,f
 25801  1BF3  0875               	movf	___ftpack@sign,w
 25802  1BF4  1903               	btfsc	3,2
 25803  1BF5  0008               	return
 25804  1BF6  17F3               	bsf	___ftpack@arg+2,7
 25805  1BF7  0008               	return
 25806  1BF8                     __end_of___ftpack:	
 25807                           
 25808                           	psect	text84
 25809  2145                     __ptext84:	
 25810 ;; *************** function _TMR0_Initialize *****************
 25811 ;; Defined at:
 25812 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 25813 ;; Parameters:    Size  Location     Type
 25814 ;;		None
 25815 ;; Auto vars:     Size  Location     Type
 25816 ;;		None
 25817 ;; Return value:  Size  Location     Type
 25818 ;;                  1    wreg      void 
 25819 ;; Registers used:
 25820 ;;		wreg, status,2
 25821 ;; Tracked objects:
 25822 ;;		On entry : 0/0
 25823 ;;		On exit  : 0/0
 25824 ;;		Unchanged: 0/0
 25825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25830 ;;Total ram usage:        0 bytes
 25831 ;; Hardware stack levels used:    1
 25832 ;; Hardware stack levels required when called:    2
 25833 ;; This function calls:
 25834 ;;		Nothing
 25835 ;; This function is called by:
 25836 ;;		_main
 25837 ;; This function uses a non-reentrant model
 25838 ;;
 25839                           
 25840                           
 25841                           ;psect for function _TMR0_Initialize
 25842  2145                     _TMR0_Initialize:	
 25843                           
 25844                           ;tmr0.c: 65: T0CON0 = 0x01;
 25845                           
 25846                           ;incstack = 0
 25847                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
 25848  2145  3001               	movlw	1
 25849  2146  0140               	movlb	0	; select bank0
 25850  2147  009E               	movwf	30	;volatile
 25851                           
 25852                           ;tmr0.c: 69: T0CON1 = 0x97;
 25853  2148  3097               	movlw	151
 25854  2149  009F               	movwf	31	;volatile
 25855                           
 25856                           ;tmr0.c: 72: TMR0H = ((300 / 100)*11)+(300 / 100);
 25857  214A  3024               	movlw	36
 25858  214B  009D               	movwf	29	;volatile
 25859                           
 25860                           ;tmr0.c: 75: TMR0L = 0;
 25861  214C  019C               	clrf	28	;volatile
 25862                           
 25863                           ;tmr0.c: 77: timer0ReloadVal = (uint16_t) (TMR0H << 8) | TMR0L;
 25864  214D  081D               	movf	29,w	;volatile
 25865  214E  0142               	movlb	2	; select bank2
 25866  214F  00C1               	movwf	(_timer0ReloadVal+1)^(0+256)	;volatile
 25867  2150  0140               	movlb	0	; select bank0
 25868  2151  081C               	movf	28,w	;volatile
 25869  2152  0142               	movlb	2	; select bank2
 25870  2153  00C0               	movwf	_timer0ReloadVal^(0+256)	;volatile
 25871                           
 25872                           ;tmr0.c: 79: PIR0bits.TMR0IF = 0;
 25873  2154  014E               	movlb	14	; select bank14
 25874  2155  128C               	bcf	12,5	;volatile
 25875                           
 25876                           ;tmr0.c: 82: PIE0bits.TMR0IE = 1;
 25877  2156  1696               	bsf	22,5	;volatile
 25878                           
 25879                           ;tmr0.c: 89: T0CON0bits.T0EN = 1;
 25880  2157  0140               	movlb	0	; select bank0
 25881  2158  179E               	bsf	30,7	;volatile
 25882  2159  0008               	return
 25883  215A                     __end_of_TMR0_Initialize:	
 25884                           
 25885                           	psect	text85
 25886  20E2                     __ptext85:	
 25887 ;; *************** function _SYSTEM_Initialize *****************
 25888 ;; Defined at:
 25889 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25890 ;; Parameters:    Size  Location     Type
 25891 ;;		None
 25892 ;; Auto vars:     Size  Location     Type
 25893 ;;		None
 25894 ;; Return value:  Size  Location     Type
 25895 ;;                  1    wreg      void 
 25896 ;; Registers used:
 25897 ;;		wreg, status,2, status,0, pclath, cstack
 25898 ;; Tracked objects:
 25899 ;;		On entry : 0/0
 25900 ;;		On exit  : 0/0
 25901 ;;		Unchanged: 0/0
 25902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25907 ;;Total ram usage:        0 bytes
 25908 ;; Hardware stack levels used:    1
 25909 ;; Hardware stack levels required when called:    4
 25910 ;; This function calls:
 25911 ;;		_OSCILLATOR_Initialize
 25912 ;;		_PIN_MANAGER_Initialize
 25913 ;;		_PMD_Initialize
 25914 ;; This function is called by:
 25915 ;;		_main
 25916 ;; This function uses a non-reentrant model
 25917 ;;
 25918                           
 25919                           
 25920                           ;psect for function _SYSTEM_Initialize
 25921  20E2                     _SYSTEM_Initialize:	
 25922                           
 25923                           ;mcc.c: 52: WDTCON0 = 0x01;
 25924                           
 25925                           ;incstack = 0
 25926                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 25927  20E2  3001               	movlw	1
 25928  20E3  0150               	movlb	16	; select bank16
 25929  20E4  008C               	movwf	12	;volatile
 25930                           
 25931                           ;mcc.c: 53: OSCILLATOR_Initialize();
 25932  20E5  31A0  20AF  31A0   	fcall	_OSCILLATOR_Initialize
 25933                           
 25934                           ;mcc.c: 54: PMD_Initialize();
 25935  20E8  31A0  209E  31A0   	fcall	_PMD_Initialize
 25936                           
 25937                           ;mcc.c: 55: PIN_MANAGER_Initialize();
 25938  20EB  3199  215B         	fcall	_PIN_MANAGER_Initialize
 25939  20ED  0008               	return
 25940  20EE                     __end_of_SYSTEM_Initialize:	
 25941                           
 25942                           	psect	text86
 25943  209E                     __ptext86:	
 25944 ;; *************** function _PMD_Initialize *****************
 25945 ;; Defined at:
 25946 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25947 ;; Parameters:    Size  Location     Type
 25948 ;;		None
 25949 ;; Auto vars:     Size  Location     Type
 25950 ;;		None
 25951 ;; Return value:  Size  Location     Type
 25952 ;;                  1    wreg      void 
 25953 ;; Registers used:
 25954 ;;		status,2
 25955 ;; Tracked objects:
 25956 ;;		On entry : 0/0
 25957 ;;		On exit  : 0/0
 25958 ;;		Unchanged: 0/0
 25959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25964 ;;Total ram usage:        0 bytes
 25965 ;; Hardware stack levels used:    1
 25966 ;; Hardware stack levels required when called:    2
 25967 ;; This function calls:
 25968 ;;		Nothing
 25969 ;; This function is called by:
 25970 ;;		_SYSTEM_Initialize
 25971 ;; This function uses a non-reentrant model
 25972 ;;
 25973                           
 25974                           
 25975                           ;psect for function _PMD_Initialize
 25976  209E                     _PMD_Initialize:	
 25977                           
 25978                           ;mcc.c: 75: PMD0 = 0x00;
 25979                           
 25980                           ;incstack = 0
 25981                           ; Regs used in _PMD_Initialize: [status,2]
 25982  209E  014F               	movlb	15	; select bank15
 25983  209F  0196               	clrf	22	;volatile
 25984                           
 25985                           ;mcc.c: 77: PMD1 = 0x00;
 25986  20A0  0197               	clrf	23	;volatile
 25987                           
 25988                           ;mcc.c: 79: PMD2 = 0x00;
 25989  20A1  0198               	clrf	24	;volatile
 25990                           
 25991                           ;mcc.c: 81: PMD3 = 0x00;
 25992  20A2  0199               	clrf	25	;volatile
 25993                           
 25994                           ;mcc.c: 83: PMD4 = 0x00;
 25995  20A3  019A               	clrf	26	;volatile
 25996                           
 25997                           ;mcc.c: 85: PMD5 = 0x00;
 25998  20A4  019B               	clrf	27	;volatile
 25999  20A5  0008               	return
 26000  20A6                     __end_of_PMD_Initialize:	
 26001                           
 26002                           	psect	text87
 26003  195B                     __ptext87:	
 26004 ;; *************** function _PIN_MANAGER_Initialize *****************
 26005 ;; Defined at:
 26006 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;		None
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;  state           1   10[COMMON] unsigned char 
 26011 ;; Return value:  Size  Location     Type
 26012 ;;                  1    wreg      void 
 26013 ;; Registers used:
 26014 ;;		wreg, status,2, status,0, pclath, cstack
 26015 ;; Tracked objects:
 26016 ;;		On entry : 0/0
 26017 ;;		On exit  : 0/0
 26018 ;;		Unchanged: 0/0
 26019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26024 ;;Total ram usage:        1 bytes
 26025 ;; Hardware stack levels used:    1
 26026 ;; Hardware stack levels required when called:    3
 26027 ;; This function calls:
 26028 ;;		_Sleep
 26029 ;; This function is called by:
 26030 ;;		_SYSTEM_Initialize
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           
 26035                           ;psect for function _PIN_MANAGER_Initialize
 26036  195B                     _PIN_MANAGER_Initialize:	
 26037                           
 26038                           ;pin_manager.c: 57: LATE = 0x00;
 26039                           
 26040                           ;incstack = 0
 26041                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 26042  195B  0140               	movlb	0	; select bank0
 26043  195C  019A               	clrf	26	;volatile
 26044                           
 26045                           ;pin_manager.c: 58: LATD = 0x00;
 26046  195D  0199               	clrf	25	;volatile
 26047                           
 26048                           ;pin_manager.c: 59: LATA = 0x00;
 26049  195E  0196               	clrf	22	;volatile
 26050                           
 26051                           ;pin_manager.c: 60: LATB = 0x00;
 26052  195F  0197               	clrf	23	;volatile
 26053                           
 26054                           ;pin_manager.c: 61: LATC = 0x00;
 26055  1960  0198               	clrf	24	;volatile
 26056                           
 26057                           ;pin_manager.c: 66: TRISE = 0x07;
 26058  1961  3007               	movlw	7
 26059  1962  0095               	movwf	21	;volatile
 26060                           
 26061                           ;pin_manager.c: 67: TRISA = 0x07;
 26062  1963  3007               	movlw	7
 26063  1964  0091               	movwf	17	;volatile
 26064                           
 26065                           ;pin_manager.c: 68: TRISB = 0xEF;
 26066  1965  30EF               	movlw	239
 26067  1966  0092               	movwf	18	;volatile
 26068                           
 26069                           ;pin_manager.c: 69: TRISC = 0x9F;
 26070  1967  309F               	movlw	159
 26071  1968  0093               	movwf	19	;volatile
 26072                           
 26073                           ;pin_manager.c: 70: TRISD = 0xF0;
 26074  1969  30F0               	movlw	240
 26075  196A  0094               	movwf	20	;volatile
 26076                           
 26077                           ;pin_manager.c: 75: ANSELD = 0xF0;
 26078  196B  30F0               	movlw	240
 26079  196C  017E               	movlb	62	; select bank62
 26080  196D  00D9               	movwf	89	;volatile
 26081                           
 26082                           ;pin_manager.c: 76: ANSELC = 0x00;
 26083  196E  01CE               	clrf	78	;volatile
 26084                           
 26085                           ;pin_manager.c: 77: ANSELB = 0xFE;
 26086  196F  30FE               	movlw	254
 26087  1970  00C3               	movwf	67	;volatile
 26088                           
 26089                           ;pin_manager.c: 78: ANSELE = 0x07;
 26090  1971  3007               	movlw	7
 26091  1972  00E4               	movwf	100	;volatile
 26092                           
 26093                           ;pin_manager.c: 79: ANSELA = 0x07;
 26094  1973  3007               	movlw	7
 26095  1974  00B8               	movwf	56	;volatile
 26096                           
 26097                           ;pin_manager.c: 84: WPUD = 0x00;
 26098  1975  01DA               	clrf	90	;volatile
 26099                           
 26100                           ;pin_manager.c: 85: WPUE = 0x00;
 26101  1976  01E5               	clrf	101	;volatile
 26102                           
 26103                           ;pin_manager.c: 86: WPUB = 0x00;
 26104  1977  01C4               	clrf	68	;volatile
 26105                           
 26106                           ;pin_manager.c: 87: WPUA = 0x00;
 26107  1978  01B9               	clrf	57	;volatile
 26108                           
 26109                           ;pin_manager.c: 88: WPUC = 0x18;
 26110  1979  3018               	movlw	24
 26111  197A  00CF               	movwf	79	;volatile
 26112                           
 26113                           ;pin_manager.c: 93: ODCONE = 0x00;
 26114  197B  01E6               	clrf	102	;volatile
 26115                           
 26116                           ;pin_manager.c: 94: ODCONA = 0x00;
 26117  197C  01BA               	clrf	58	;volatile
 26118                           
 26119                           ;pin_manager.c: 95: ODCONB = 0x00;
 26120  197D  01C5               	clrf	69	;volatile
 26121                           
 26122                           ;pin_manager.c: 96: ODCONC = 0x00;
 26123  197E  01D0               	clrf	80	;volatile
 26124                           
 26125                           ;pin_manager.c: 97: ODCOND = 0x00;
 26126  197F  01DB               	clrf	91	;volatile
 26127                           
 26128                           ;pin_manager.c: 99: bool state = (bool) GIE;
 26129  1980  3000               	movlw	0
 26130  1981  1B8B               	btfsc	11,7	;volatile
 26131  1982  3001               	movlw	1
 26132  1983  00FA               	movwf	PIN_MANAGER_Initialize@state
 26133                           
 26134                           ;pin_manager.c: 100: GIE = 0;
 26135  1984  138B               	bcf	11,7	;volatile
 26136                           
 26137                           ;pin_manager.c: 101: PPSLOCK = 0x55;
 26138  1985  3055               	movlw	85
 26139  1986  017D               	movlb	61	; select bank61
 26140  1987  008F               	movwf	15	;volsfr
 26141                           
 26142                           ;pin_manager.c: 102: PPSLOCK = 0xAA;
 26143  1988  30AA               	movlw	170
 26144  1989  008F               	movwf	15	;volsfr
 26145                           
 26146                           ;pin_manager.c: 103: PPSLOCKbits.PPSLOCKED = 0x00;
 26147  198A  100F               	bcf	15,0	;volsfr
 26148                           
 26149                           ;pin_manager.c: 105: TRISCbits.TRISC5 = 0;
 26150  198B  0140               	movlb	0	; select bank0
 26151  198C  1293               	bcf	19,5	;volatile
 26152                           
 26153                           ;pin_manager.c: 106: TRISCbits.TRISC7 = 1;
 26154  198D  1793               	bsf	19,7	;volatile
 26155                           
 26156                           ;pin_manager.c: 107: RXPPS = 0x17;
 26157  198E  3017               	movlw	23
 26158  198F  017D               	movlb	61	; select bank61
 26159  1990  00CB               	movwf	75	;volatile
 26160                           
 26161                           ;pin_manager.c: 108: RC5PPS = 0x10;
 26162  1991  3010               	movlw	16
 26163  1992  017E               	movlb	62	; select bank62
 26164  1993  00A5               	movwf	37	;volatile
 26165                           
 26166                           ;pin_manager.c: 121: PPSLOCK = 0x55;
 26167  1994  3055               	movlw	85
 26168  1995  017D               	movlb	61	; select bank61
 26169  1996  008F               	movwf	15	;volsfr
 26170                           
 26171                           ;pin_manager.c: 122: PPSLOCK = 0xAA;
 26172  1997  30AA               	movlw	170
 26173  1998  008F               	movwf	15	;volsfr
 26174                           
 26175                           ;pin_manager.c: 123: PPSLOCKbits.PPSLOCKED = 0x01;
 26176  1999  140F               	bsf	15,0	;volsfr
 26177                           
 26178                           ;pin_manager.c: 124: GIE = state;
 26179  199A  1C7A               	btfss	PIN_MANAGER_Initialize@state,0
 26180  199B  299E               	goto	u5870
 26181  199C  178B               	bsf	11,7	;volatile
 26182  199D  299F               	goto	l6368
 26183  199E                     u5870:	
 26184  199E  138B               	bcf	11,7	;volatile
 26185  199F                     l6368:	
 26186                           ;pin_manager.c: 127: do { LATDbits.LATD0 = 0; } while(0);
 26187                           
 26188  199F  0140               	movlb	0	; select bank0
 26189  19A0  1019               	bcf	25,0	;volatile
 26190                           
 26191                           ;pin_manager.c: 128: do { LATCbits.LATC6 = 1; } while(0);
 26192  19A1  1718               	bsf	24,6	;volatile
 26193                           
 26194                           ;pin_manager.c: 130: do { LATDbits.LATD1 = 0; } while(0);
 26195  19A2  1099               	bcf	25,1	;volatile
 26196                           
 26197                           ;pin_manager.c: 131: do { LATDbits.LATD3 = 0; } while(0);
 26198  19A3  1199               	bcf	25,3	;volatile
 26199                           
 26200                           ;pin_manager.c: 132: do { LATAbits.LATA3 = 0; } while(0);
 26201  19A4  1196               	bcf	22,3	;volatile
 26202                           
 26203                           ;pin_manager.c: 133: Sleep(500);
 26204  19A5  3000               	movlw	0
 26205  19A6  00F4               	movwf	Sleep@time+3
 26206  19A7  3000               	movlw	0
 26207  19A8  00F3               	movwf	Sleep@time+2
 26208  19A9  3001               	movlw	1
 26209  19AA  00F2               	movwf	Sleep@time+1
 26210  19AB  30F4               	movlw	244
 26211  19AC  00F1               	movwf	Sleep@time
 26212  19AD  31A4  2412         	fcall	_Sleep
 26213                           
 26214                           ;pin_manager.c: 134: do { LATDbits.LATD1 = 1; } while(0);
 26215  19AF  0140               	movlb	0	; select bank0
 26216  19B0  1499               	bsf	25,1	;volatile
 26217                           
 26218                           ;pin_manager.c: 135: do { LATDbits.LATD3 = 1; } while(0);
 26219  19B1  1599               	bsf	25,3	;volatile
 26220                           
 26221                           ;pin_manager.c: 136: do { LATAbits.LATA3 = 1; } while(0);
 26222  19B2  1596               	bsf	22,3	;volatile
 26223  19B3  0008               	return
 26224  19B4                     __end_of_PIN_MANAGER_Initialize:	
 26225                           
 26226                           	psect	text88
 26227  2412                     __ptext88:	
 26228 ;; *************** function _Sleep *****************
 26229 ;; Defined at:
 26230 ;;		line 270 in file "main.c"
 26231 ;; Parameters:    Size  Location     Type
 26232 ;;  time            4    1[COMMON] unsigned long 
 26233 ;; Auto vars:     Size  Location     Type
 26234 ;;  i               4    6[COMMON] volatile unsigned long 
 26235 ;; Return value:  Size  Location     Type
 26236 ;;                  1    wreg      void 
 26237 ;; Registers used:
 26238 ;;		wreg
 26239 ;; Tracked objects:
 26240 ;;		On entry : 0/0
 26241 ;;		On exit  : 0/0
 26242 ;;		Unchanged: 0/0
 26243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26245 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26247 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26248 ;;Total ram usage:        9 bytes
 26249 ;; Hardware stack levels used:    1
 26250 ;; Hardware stack levels required when called:    2
 26251 ;; This function calls:
 26252 ;;		Nothing
 26253 ;; This function is called by:
 26254 ;;		_PIN_MANAGER_Initialize
 26255 ;;		_dwt_initialise
 26256 ;;		_dwt_configure
 26257 ;;		_dwt_run_pgfcal
 26258 ;;		_reset_DWIC
 26259 ;;		_dw_main
 26260 ;;		_deca_sleep
 26261 ;;		_spi_cs_low_delay
 26262 ;;		_wakeup_device_with_io
 26263 ;;		_port_wakeup_dw_ic
 26264 ;; This function uses a non-reentrant model
 26265 ;;
 26266                           
 26267                           
 26268                           ;psect for function _Sleep
 26269  2412                     _Sleep:	
 26270                           
 26271                           ;main.c: 272: for(volatile uint32_t i=0; i<time; i++)
 26272                           
 26273                           ;incstack = 0
 26274                           ; Regs used in _Sleep: [wreg]
 26275  2412  3000               	movlw	0
 26276  2413  00F9               	movwf	Sleep@i+3	;volatile
 26277  2414  3000               	movlw	0
 26278  2415  00F8               	movwf	Sleep@i+2	;volatile
 26279  2416  3000               	movlw	0
 26280  2417  00F7               	movwf	Sleep@i+1	;volatile
 26281  2418  3000               	movlw	0
 26282  2419  00F6               	movwf	Sleep@i	;volatile
 26283  241A                     l376:	
 26284  241A  0874               	movf	Sleep@time+3,w
 26285  241B  0279               	subwf	Sleep@i+3,w	;volatile
 26286  241C  1D03               	skipz
 26287  241D  2C28               	goto	u4915
 26288  241E  0873               	movf	Sleep@time+2,w
 26289  241F  0278               	subwf	Sleep@i+2,w	;volatile
 26290  2420  1D03               	skipz
 26291  2421  2C28               	goto	u4915
 26292  2422  0872               	movf	Sleep@time+1,w
 26293  2423  0277               	subwf	Sleep@i+1,w	;volatile
 26294  2424  1D03               	skipz
 26295  2425  2C28               	goto	u4915
 26296  2426  0871               	movf	Sleep@time,w
 26297  2427  0276               	subwf	Sleep@i,w	;volatile
 26298  2428                     u4915:	
 26299  2428  1803               	btfsc	3,0
 26300  2429  0008               	return
 26301                           
 26302                           ;main.c: 273: {
 26303                           ;main.c: 274: _delay((unsigned long)((1)*(32000000/4000.0)));
 26304  242A  300B               	movlw	11
 26305  242B  00F5               	movwf	??_Sleep
 26306  242C  3062               	movlw	98
 26307  242D                     u12787:	
 26308  242D  0B89               	decfsz	9,f
 26309  242E  2C2D               	goto	u12787
 26310  242F  0BF5               	decfsz	??_Sleep,f
 26311  2430  2C2D               	goto	u12787
 26312  2431  3200               	nop2
 26313  2432  3001               	movlw	1
 26314  2433  07F6               	addwf	Sleep@i,f	;volatile
 26315  2434  3000               	movlw	0
 26316  2435  3DF7               	addwfc	Sleep@i+1,f	;volatile
 26317  2436  3000               	movlw	0
 26318  2437  3DF8               	addwfc	Sleep@i+2,f	;volatile
 26319  2438  3000               	movlw	0
 26320  2439  3DF9               	addwfc	Sleep@i+3,f	;volatile
 26321  243A  2C1A               	goto	l376
 26322  243B                     __end_of_Sleep:	
 26323                           
 26324                           	psect	text89
 26325  20AF                     __ptext89:	
 26326 ;; *************** function _OSCILLATOR_Initialize *****************
 26327 ;; Defined at:
 26328 ;;		line 58 in file "mcc_generated_files/mcc.c"
 26329 ;; Parameters:    Size  Location     Type
 26330 ;;		None
 26331 ;; Auto vars:     Size  Location     Type
 26332 ;;		None
 26333 ;; Return value:  Size  Location     Type
 26334 ;;                  1    wreg      void 
 26335 ;; Registers used:
 26336 ;;		wreg, status,2
 26337 ;; Tracked objects:
 26338 ;;		On entry : 0/0
 26339 ;;		On exit  : 0/0
 26340 ;;		Unchanged: 0/0
 26341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26346 ;;Total ram usage:        0 bytes
 26347 ;; Hardware stack levels used:    1
 26348 ;; Hardware stack levels required when called:    2
 26349 ;; This function calls:
 26350 ;;		Nothing
 26351 ;; This function is called by:
 26352 ;;		_SYSTEM_Initialize
 26353 ;; This function uses a non-reentrant model
 26354 ;;
 26355                           
 26356                           
 26357                           ;psect for function _OSCILLATOR_Initialize
 26358  20AF                     _OSCILLATOR_Initialize:	
 26359                           
 26360                           ;mcc.c: 61: OSCCON1 = 0x60;
 26361                           
 26362                           ;incstack = 0
 26363                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 26364  20AF  3060               	movlw	96
 26365  20B0  0151               	movlb	17	; select bank17
 26366  20B1  008D               	movwf	13	;volatile
 26367                           
 26368                           ;mcc.c: 63: OSCCON3 = 0x00;
 26369  20B2  018F               	clrf	15	;volatile
 26370                           
 26371                           ;mcc.c: 65: OSCEN = 0x00;
 26372  20B3  0191               	clrf	17	;volatile
 26373                           
 26374                           ;mcc.c: 67: OSCFRQ = 0x06;
 26375  20B4  3006               	movlw	6
 26376  20B5  0093               	movwf	19	;volatile
 26377                           
 26378                           ;mcc.c: 69: OSCTUNE = 0x00;
 26379  20B6  0192               	clrf	18	;volatile
 26380  20B7  0008               	return
 26381  20B8                     __end_of_OSCILLATOR_Initialize:	
 26382                           
 26383                           	psect	text90
 26384  20C1                     __ptext90:	
 26385 ;; *************** function _EUSART_Initialize *****************
 26386 ;; Defined at:
 26387 ;;		line 66 in file "mcc_generated_files/eusart.c"
 26388 ;; Parameters:    Size  Location     Type
 26389 ;;		None
 26390 ;; Auto vars:     Size  Location     Type
 26391 ;;		None
 26392 ;; Return value:  Size  Location     Type
 26393 ;;                  1    wreg      void 
 26394 ;; Registers used:
 26395 ;;		wreg, status,2
 26396 ;; Tracked objects:
 26397 ;;		On entry : 0/0
 26398 ;;		On exit  : 0/0
 26399 ;;		Unchanged: 0/0
 26400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26405 ;;Total ram usage:        0 bytes
 26406 ;; Hardware stack levels used:    1
 26407 ;; Hardware stack levels required when called:    2
 26408 ;; This function calls:
 26409 ;;		Nothing
 26410 ;; This function is called by:
 26411 ;;		_main
 26412 ;; This function uses a non-reentrant model
 26413 ;;
 26414                           
 26415                           
 26416                           ;psect for function _EUSART_Initialize
 26417  20C1                     _EUSART_Initialize:	
 26418                           
 26419                           ;eusart.c: 71: BAUD1CON = 0x09;
 26420                           
 26421                           ;incstack = 0
 26422                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 26423  20C1  3009               	movlw	9
 26424  20C2  0142               	movlb	2	; select bank2
 26425  20C3  009F               	movwf	31	;volatile
 26426                           
 26427                           ;eusart.c: 74: RC1STA = 0x90;
 26428  20C4  3090               	movlw	144
 26429  20C5  009D               	movwf	29	;volatile
 26430                           
 26431                           ;eusart.c: 77: TX1STA = 0x24;
 26432  20C6  3024               	movlw	36
 26433  20C7  009E               	movwf	30	;volatile
 26434                           
 26435                           ;eusart.c: 80: SP1BRGL = 0x44;
 26436  20C8  3044               	movlw	68
 26437  20C9  009B               	movwf	27	;volatile
 26438                           
 26439                           ;eusart.c: 83: SP1BRGH = 0x00;
 26440  20CA  019C               	clrf	28	;volatile
 26441  20CB  0008               	return
 26442  20CC                     __end_of_EUSART_Initialize:	
 26443                           
 26444                           	psect	intentry
 26445  0004                     __pintentry:	
 26446 ;; *************** function _INTERRUPT_InterruptManager *****************
 26447 ;; Defined at:
 26448 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26449 ;; Parameters:    Size  Location     Type
 26450 ;;		None
 26451 ;; Auto vars:     Size  Location     Type
 26452 ;;		None
 26453 ;; Return value:  Size  Location     Type
 26454 ;;                  1    wreg      void 
 26455 ;; Registers used:
 26456 ;;		wreg, status,2, status,0, pclath, cstack
 26457 ;; Tracked objects:
 26458 ;;		On entry : 0/0
 26459 ;;		On exit  : 0/0
 26460 ;;		Unchanged: 0/0
 26461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26466 ;;Total ram usage:        1 bytes
 26467 ;; Hardware stack levels used:    1
 26468 ;; Hardware stack levels required when called:    1
 26469 ;; This function calls:
 26470 ;;		_TMR0_Reload
 26471 ;; This function is called by:
 26472 ;;		Interrupt level 1
 26473 ;; This function uses a non-reentrant model
 26474 ;;
 26475                           
 26476  0004                     _INTERRUPT_InterruptManager:	
 26477                           
 26478                           ;incstack = 0
 26479  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 26480                           
 26481                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 26482  0005  3180               	pagesel	$
 26483  0006  0140               	movlb	0	; select bank0
 26484  0007  087F               	movf	127,w
 26485  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
 26486                           
 26487                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 26488  0009  014E               	movlb	14	; select bank14
 26489  000A  1A96               	btfsc	22,5	;volatile
 26490  000B  1E8C               	btfss	12,5	;volatile
 26491  000C  2814               	goto	i1l1682
 26492                           
 26493                           ;interrupt_manager.c: 56: {
 26494                           ;interrupt_manager.c: 57: PIR0bits.TMR0IF = 0;
 26495  000D  128C               	bcf	12,5	;volatile
 26496                           
 26497                           ;interrupt_manager.c: 58: TMR0_Reload();
 26498  000E  31A0  20A6         	fcall	_TMR0_Reload
 26499                           
 26500                           ;interrupt_manager.c: 59: (INTCONbits.GIE = 0);
 26501  0010  138B               	bcf	11,7	;volatile
 26502                           
 26503                           ;interrupt_manager.c: 60: timer0_triggered = 1;
 26504  0011  0142               	movlb	2	; select bank2
 26505  0012  01CE               	clrf	_timer0_triggered^(0+256)
 26506  0013  0ACE               	incf	_timer0_triggered^(0+256),f
 26507  0014                     i1l1682:	
 26508  0014  0870               	movf	??_INTERRUPT_InterruptManager,w
 26509  0015  0140               	movlb	0	; select bank0
 26510  0016  00FF               	movwf	127
 26511  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 26512  0018  0009               	retfie
 26513  0019                     __end_of_INTERRUPT_InterruptManager:	
 26514                           
 26515                           	psect	text92
 26516  20A6                     __ptext92:	
 26517 ;; *************** function _TMR0_Reload *****************
 26518 ;; Defined at:
 26519 ;;		line 103 in file "mcc_generated_files/tmr0.c"
 26520 ;; Parameters:    Size  Location     Type
 26521 ;;		None
 26522 ;; Auto vars:     Size  Location     Type
 26523 ;;		None
 26524 ;; Return value:  Size  Location     Type
 26525 ;;                  1    wreg      void 
 26526 ;; Registers used:
 26527 ;;		wreg, status,2
 26528 ;; Tracked objects:
 26529 ;;		On entry : 0/0
 26530 ;;		On exit  : 0/0
 26531 ;;		Unchanged: 0/0
 26532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26537 ;;Total ram usage:        0 bytes
 26538 ;; Hardware stack levels used:    1
 26539 ;; This function calls:
 26540 ;;		Nothing
 26541 ;; This function is called by:
 26542 ;;		_INTERRUPT_InterruptManager
 26543 ;; This function uses a non-reentrant model
 26544 ;;
 26545                           
 26546                           
 26547                           ;psect for function _TMR0_Reload
 26548  20A6                     _TMR0_Reload:	
 26549                           
 26550                           ;tmr0.c: 106: TMR0H = (timer0ReloadVal >> 8);
 26551                           
 26552                           ;incstack = 0
 26553                           ; Regs used in _TMR0_Reload: [wreg+status,2]
 26554  20A6  0142               	movlb	2	; select bank2
 26555  20A7  0841               	movf	(_timer0ReloadVal+1)^(0+256),w	;volatile
 26556  20A8  0140               	movlb	0	; select bank0
 26557  20A9  009D               	movwf	29	;volatile
 26558                           
 26559                           ;tmr0.c: 107: TMR0L = timer0ReloadVal;
 26560  20AA  0142               	movlb	2	; select bank2
 26561  20AB  0840               	movf	_timer0ReloadVal^(0+256),w	;volatile
 26562  20AC  0140               	movlb	0	; select bank0
 26563  20AD  009C               	movwf	28	;volatile
 26564  20AE  0008               	return
 26565  20AF                     __end_of_TMR0_Reload:	
 26566  007E                     btemp	set	126	;btemp
 26567  007E                     int$flags	set	126
 26568  007E                     wtemp0	set	126


Data Sizes:
    Strings     551
    Constant    36
    Data        75
    BSS         157
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     23      80
    BANK3            80      0      71
    BANK4            80      0      57
    BANK5            80      0      46
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           64      0       0
    BANK48            0      0       0
    BANK49            0      0       0
    BANK50            0      0       0

Pointer List with Targets:

    DW3000local.cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    DW3000local.cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    Absolute function$0	PTR const struct . size(2) Largest target is 150
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), NULL(NULL[0]), STR_17(CODE[2]), 
		 -> STR_16(CODE[14]), STR_15(CODE[26]), STR_14(CODE[14]), STR_13(CODE[150]), 
		 -> STR_12(CODE[14]), STR_11(CODE[16]), STR_10(CODE[14]), STR_9(CODE[19]), 
		 -> STR_8(CODE[14]), STR_7(CODE[17]), STR_6(CODE[14]), DW3000local(BANK5[46]), 
		 -> print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), print_uint8_t@print_data(BANK0[20]), 

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 8
		 -> ADDR(BANK3[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), 

    S709$19$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S709$20$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S709$18$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S709$22$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S709$17$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    S709$21$0	PTR const struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_32(CODE[36]), STR_29(CODE[17]), STR_28(CODE[18]), STR_27(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    memset@p1	PTR void  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    memset@p	PTR unsigned char  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    _fassert@exp	PTR const unsigned char  size(2) Largest target is 150
		 -> STR_17(CODE[2]), STR_15(CODE[26]), STR_13(CODE[150]), STR_11(CODE[16]), 
		 -> STR_9(CODE[19]), STR_7(CODE[17]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_16(CODE[14]), STR_14(CODE[14]), STR_12(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[14]), STR_6(CODE[14]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 150
		 -> ?_sprintf(COMMON[2]), ?_printf(BANK0[2]), STR_30(CODE[7]), NULL(NULL[0]), 
		 -> STR_17(CODE[2]), STR_16(CODE[14]), STR_15(CODE[26]), STR_14(CODE[14]), 
		 -> STR_13(CODE[150]), STR_12(CODE[14]), STR_11(CODE[16]), STR_10(CODE[14]), 
		 -> STR_9(CODE[19]), STR_8(CODE[14]), STR_7(CODE[17]), STR_6(CODE[14]), 
		 -> print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), print_uint8_t@print_data(BANK0[20]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_32(CODE[36]), STR_29(CODE[17]), STR_28(CODE[18]), STR_27(CODE[15]), 
		 -> STR_5(CODE[31]), STR_4(CODE[14]), STR_3(CODE[10]), STR_2(CODE[10]), 

    S2594__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S2594__prbuf$ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 50
		 -> NULL(NULL[0]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(COMMON[3]), printf@pb(BANK0[3]), 

    process_pmic_status@status	PTR unsigned char  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    sp__memset	PTR void  size(1) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), 

    i2c_multi_read@data	PTR unsigned char  size(2) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), init_bq25895@I2c_buff(BANK0[9]), 

    i2c_multi_write@data	PTR unsigned char  size(1) Largest target is 9
		 -> init_bq25895@I2c_buff(BANK0[9]), 

    sp__i2c_multi_read	PTR unsigned char  size(2) Largest target is 10
		 -> I2C_read_buff(BANK3[10]), init_bq25895@I2c_buff(BANK0[9]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    readfromspi@readBuffer	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    readfromspi@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    writetospi@bodyBuffer	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    writetospi@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    writetospiwithcrc@bodyBuffer	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    writetospiwithcrc@headerBuffer	PTR const unsigned char  size(1) Largest target is 2
		 -> dwt_xfer3000@header(BANK0[2]), 

    S1037$payload	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.payload	PTR unsigned char  size(1) Largest target is 0

    S1037$header	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.header	PTR unsigned char  size(1) Largest target is 0

    S1037$nonce	PTR unsigned char  size(1) Largest target is 0

    dwt_do_aes@job.nonce	PTR unsigned char  size(1) Largest target is 0

    dwt_writetxdata@txDataBytes	PTR unsigned char  size(1) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), 

    dwt_configure@config	PTR struct . size(1) Largest target is 14
		 -> config(BANK3[14]), 

    dwt_configuretxrf@config	PTR struct . size(1) Largest target is 7
		 -> txconfig_options_ch9(BANK3[7]), 

    dwt_generatecrc8@byteArray	PTR const unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), dwt_xfer3000@header(BANK0[2]), 

    dwt_readfromdevice@buffer	PTR unsigned char  size(1) Largest target is 8
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_read16bitoffsetreg@buffer(BANK1[2]), 
		 -> dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    dwt_writetodevice@buffer	PTR unsigned char  size(2) Largest target is 36
		 -> tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_write8bitoffsetreg@regval(BANK1[1]), 
		 -> dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 

    dwt_xfer3000@buffer	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    S709$cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbSPIRdy	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S709$cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbSPIErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S709$cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxErr	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S709$cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxTo	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S709$cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbRxOk	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S709$cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pdw3000local.cbTxDone	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S709$cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    pdw3000local.cbSPIRDErr	PTR FTN()void  size(2) Largest target is 0

    pdw3000local	PTR struct . size(1) Largest target is 46
		 -> DW3000local(BANK5[46]), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), dwt_update_nonce_CCM@iv(BANK0[16]), 
		 -> NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), dwt_modify16bitoffsetreg@buf(BANK0[4]), 
		 -> dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), dwt_write32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), writetospiwithcrc@crc8(BANK0[1]), 
		 -> dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), 
		 -> dwt_modify16bitoffsetreg@buf(BANK0[4]), dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), 
		 -> dwt_write32bitoffsetreg@buffer(BANK1[4]), dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_xfer3000@header(BANK0[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 36
		 -> get_tx_timestamp_u64@ts(COMMON[8]), get_sys_timestamp_u64@ts(COMMON[8]), tx_blink_msg(BANK4[36]), writetospiwithcrc@crc8(BANK0[1]), 
		 -> dwt_update_nonce_CCM@iv(BANK0[16]), NULL(NULL[0]), dwt_readcarrierintegrator@buffer(COMMON[3]), dwt_modify8bitoffsetreg@buf(BANK0[2]), 
		 -> dwt_modify16bitoffsetreg@buf(BANK0[4]), dwt_modify32bitoffsetreg@buf(BANK1[8]), dwt_write8bitoffsetreg@regval(BANK1[1]), dwt_write16bitoffsetreg@buffer(BANK0[2]), 
		 -> dwt_write32bitoffsetreg@buffer(BANK1[4]), dwt_read8bitoffsetreg@regval(BANK0[1]), dwt_read16bitoffsetreg@buffer(BANK1[2]), dwt_read32bitoffsetreg@buffer(BANK1[4]), 
		 -> dwt_xfer3000@header(BANK0[2]), 

    printf_string@data	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[11]), STR_23(CODE[11]), 
		 -> STR_22(CODE[9]), STR_21(CODE[17]), STR_20(CODE[15]), STR_19(CODE[12]), 
		 -> STR_18(CODE[10]), print_uint64_t@print_data(BANK0[50]), print_uint32_t@print_data(BANK0[20]), print_uint16_t@print_data(BANK0[20]), 
		 -> print_uint8_t@print_data(BANK0[20]), STR_1(CODE[22]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _pmic_status_read->_printf
    _set_MSSSP1_mode->_SPI1_Open
    _process_pmic_status->_lipo_battery_level
    _lipo_battery_level->___lwdiv
    _init_bq25895->_i2c_multi_read
    _i2c_multi_write->_i2c_write
    _i2c_multi_read->_i2c_read
    _i2c_multi_read->_i2c_write
    _bq25895_WDT_reset->_i2c_single_read
    _bq25895_WDT_reset->_i2c_single_write
    _i2c_single_write->_i2c_write
    _i2c_single_read->_i2c_read
    _i2c_single_read->_i2c_write
    _reset_DWIC->_Sleep
    _printf_string->_EUSART_Write
    _get_sts_mnth->___lmul
    _writetospiwithcrc->_SPI1_WriteBlock
    _writetospi->_SPI1_WriteBlock
    _readfromspi->_SPI1_ReadBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    __fassert->_printf
    __doprnt->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    ___lltoft->___ftpack
    ___fttol->___lltoft
    ___ftmul->___lltoft
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _PIN_MANAGER_Initialize->_Sleep

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _pmic_status_read->_printf
    _process_pmic_status->_lipo_battery_level
    _init_bq25895->_i2c_multi_read
    _dw_main->_dwt_setrxantennadelay
    _dw_main->_dwt_settxantennadelay
    _dwt_writetxfctrl->_dwt_modify32bitoffsetreg
    _dwt_writetxdata->_dwt_write32bitoffsetreg
    _dwt_starttx->_dwt_read8bitoffsetreg
    _dwt_settxantennadelay->_dwt_write16bitoffsetreg
    _dwt_setrxantennadelay->_dwt_write16bitoffsetreg
    _dwt_checkidlerc->_dwt_read16bitoffsetreg
    __dwt_prog_ldo_and_bias_tune->_dwt_modify16bitoffsetreg
    __dwt_otpread->_dwt_write16bitoffsetreg
    _dwt_calcbandwidthadj->_dwt_force_clocks
    _dwt_enable_rftx_blocks->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_modify32bitoffsetreg
    _dwt_disable_rftx_blocks->_dwt_write32bitoffsetreg
    _dwt_disable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_configure->_dwt_modify16bitoffsetreg
    _dwt_configure->_dwt_modify32bitoffsetreg
    _get_sts_mnth->___lmul
    _dwt_setdwstate->_dwt_force_clocks
    _dwt_setdwstate->_dwt_modify32bitoffsetreg
    _dwt_force_clocks->_dwt_write16bitoffsetreg
    _dwt_pgf_cal->_dwt_modify16bitoffsetreg
    _dwt_pgf_cal->_dwt_read16bitoffsetreg
    _dwt_pgf_cal->_dwt_run_pgfcal
    _dwt_run_pgfcal->_dwt_modify8bitoffsetreg
    _dwt_read8bitoffsetreg->_dwt_xfer3000
    _dwt_modify8bitoffsetreg->_dwt_xfer3000
    _dwt_readfromdevice->_dwt_xfer3000
    _dwt_modify16bitoffsetreg->_dwt_xfer3000
    _dwt_configmrxlut->_dwt_write32bitoffsetreg
    _dwt_writetodevice->_dwt_xfer3000
    __dwt_kick_dgc_on_wakeup->_dwt_modify32bitoffsetreg
    _dwt_modify32bitoffsetreg->_dwt_xfer3000
    _dwt_xfer3000->__fassert
    __fassert->_printf
    _printf->__doprnt
    __doprnt->___lwmod
    ___fttol->___ftmul
    ___ftmul->___lltoft

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_dw_main
    _transmitt_beacon_pkt->_dwt_writetxfctrl
    _dw_main->_dwt_configure
    _dwt_writetxfctrl->_dwt_modify32bitoffsetreg
    _dwt_writetxdata->_dwt_write32bitoffsetreg
    _dwt_starttx->_dwt_read32bitoffsetreg
    _dwt_settxantennadelay->_dwt_write16bitoffsetreg
    _dwt_setrxantennadelay->_dwt_write16bitoffsetreg
    _dwt_initialise->__dwt_otpread
    _dwt_checkidlerc->_dwt_read16bitoffsetreg
    _dwt_check_dev_id->_dwt_readdevid
    _dwt_readdevid->_dwt_read32bitoffsetreg
    __dwt_prog_ldo_and_bias_tune->_dwt_modify16bitoffsetreg
    __dwt_otpread->_dwt_read32bitoffsetreg
    _dwt_configuretxrf->_dwt_calcbandwidthadj
    _dwt_calcbandwidthadj->_dwt_enable_rf_tx
    _dwt_enable_rftx_blocks->_dwt_modify32bitoffsetreg
    _dwt_enable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_disable_rftx_blocks->_dwt_write32bitoffsetreg
    _dwt_disable_rf_tx->_dwt_write32bitoffsetreg
    _dwt_configure->_dwt_configmrxlut
    _dwt_setplenfine->_dwt_write8bitoffsetreg
    _dwt_setdwstate->_dwt_force_clocks
    _dwt_setdwstate->_dwt_modify32bitoffsetreg
    _dwt_force_clocks->_dwt_write16bitoffsetreg
    _dwt_write16bitoffsetreg->_dwt_writetodevice
    _dwt_pgf_cal->_dwt_run_pgfcal
    _dwt_run_pgfcal->_dwt_read32bitoffsetreg
    _dwt_write8bitoffsetreg->_dwt_writetodevice
    _dwt_read32bitoffsetreg->_dwt_readfromdevice
    _dwt_read16bitoffsetreg->_dwt_readfromdevice
    _dwt_configmrxlut->_dwt_write32bitoffsetreg
    _dwt_write32bitoffsetreg->_dwt_writetodevice
    __dwt_kick_dgc_on_wakeup->_dwt_modify32bitoffsetreg

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _dw_main->_dwt_configure

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1713752
                                             21 BANK2      2     2      0
                  _EUSART_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                            _dw_main
                       _init_bq25895
                   _pmic_status_read
                      _printf_string
                    _set_MSSSP1_mode
                     _set_led_status
               _transmitt_beacon_pkt
 ---------------------------------------------------------------------------------
 (1) _transmitt_beacon_pkt                                 1     1      0  195217
                                             47 BANK1      1     1      0
                        _dwt_starttx
                    _dwt_writetxdata
                   _dwt_writetxfctrl
                      _printf_string
 ---------------------------------------------------------------------------------
 (1) _set_led_status                                       1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pmic_status_read                                     3     3      0   16909
                                             36 BANK0      3     3      0
                  _bq25895_WDT_reset
                     _i2c_multi_read
                    _i2c_single_read
                   _i2c_single_write
                       _init_bq25895
                             _memset
                             _printf
                _process_pmic_status
                    _set_MSSSP1_mode
 ---------------------------------------------------------------------------------
 (1) _set_MSSSP1_mode                                      3     3      0    1389
                                              7 COMMON     3     3      0
                          _SPI1_Open
                           _i2c_init
                      _printf_string
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                           26    26      0      88
                                              1 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (2) _process_pmic_status                                 11    10      1    1925
                                              1 BANK0     11    10      1
                             ___wmul
                 _lipo_battery_level
 ---------------------------------------------------------------------------------
 (3) _lipo_battery_level                                   4     2      2     913
                                              9 COMMON     3     1      2
                                              0 BANK0      1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     254
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _init_bq25895                                        13    13      0    3416
                                              3 BANK0     13    13      0
                          _copybits8
                     _i2c_multi_read
                    _i2c_multi_write
 ---------------------------------------------------------------------------------
 (3) _i2c_multi_write                                      8     5      3     494
                                              2 COMMON     8     5      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_multi_read                                      12     8      4     887
                                              2 COMMON     9     5      4
                                              0 BANK0      3     3      0
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _bq25895_WDT_reset                                    4     4      0    2214
                                              7 COMMON     4     4      0
                          _copybits8
                    _i2c_single_read
                   _i2c_single_write
 ---------------------------------------------------------------------------------
 (2) _i2c_single_write                                     5     3      2     448
                                              2 COMMON     5     3      2
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_single_read                                      5     4      1     352
                                              2 COMMON     5     4      1
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _copybits8                                            3     1      2    1346
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dw_main                                             51    51      0 1494810
                                             79 BANK1      1     1      0
                              _Sleep
                      _dwt_configure
                  _dwt_configuretxrf
                     _dwt_initialise
              _dwt_setrxantennadelay
              _dwt_settxantennadelay
                        _dwt_starttx
                    _dwt_writetxdata
                   _dwt_writetxfctrl
                      _printf_string
                         _reset_DWIC
 ---------------------------------------------------------------------------------
 (2) _reset_DWIC                                           0     0      0     814
                              _Sleep
 ---------------------------------------------------------------------------------
 (2) _printf_string                                        3     1      2    1174
                                              2 COMMON     3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _dwt_writetxfctrl                                    23    18      5   47753
                                             24 BANK1     23    18      5
           _dwt_modify32bitoffsetreg
              _dwt_read8bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_writetxdata                                      7     2      5   71001
                                             76 BANK0      2     2      0
                                             30 BANK1      5     0      5
            _dwt_write32bitoffsetreg
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (2) _dwt_starttx                                         11    11      0   75289
                                             76 BANK0      2     2      0
                                             37 BANK1      9     9      0
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (2) _dwt_settxantennadelay                                2     0      2   36116
                                             78 BANK0      2     0      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_setrxantennadelay                                2     0      2   36116
                                             78 BANK0      2     0      2
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_initialise                                      15    13      2  179380
                                             45 BANK1     15    13      2
                              _Sleep
                       __dwt_otpread
        __dwt_prog_ldo_and_bias_tune
                   _dwt_check_dev_id
                    _dwt_checkidlerc
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_checkidlerc                                      8     8      0   27418
                                             23 BANK1      8     8      0
             _dwt_read16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_check_dev_id                                     2     0      2   27945
                                             75 BANK0      2     0      2
                      _dwt_readdevid
 ---------------------------------------------------------------------------------
 (4) _dwt_readdevid                                        4     0      4   27945
                                             37 BANK1      4     0      4
             _dwt_read32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) __dwt_prog_ldo_and_bias_tune                          2     2      0   21390
                                             12 BANK1      2     2      0
           _dwt_modify16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) __dwt_otpread                                         8     4      4   64945
                                             37 BANK1      8     4      4
             _dwt_read32bitoffsetreg
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_configuretxrf                                    4     4      0  402141
                                             41 BANK1      4     4      0
               _dwt_calcbandwidthadj
              _dwt_read8bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_calcbandwidthadj                                 6     2      4  302314
                                             35 BANK1      6     2      4
                  _dwt_disable_rf_tx
            _dwt_disable_rftx_blocks
                   _dwt_enable_rf_tx
             _dwt_enable_rftx_blocks
                   _dwt_force_clocks
            _dwt_modify8bitoffsetreg
              _dwt_read8bitoffsetreg
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_enable_rftx_blocks                               4     0      4   27576
                                             24 BANK1      4     0      4
           _dwt_modify32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_enable_rf_tx                                     5     0      5   71121
                                             30 BANK1      5     0      5
           _dwt_modify32bitoffsetreg
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_disable_rftx_blocks                              0     0      0   43237
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_disable_rf_tx                                    1     1      0   43268
                                             76 BANK0      1     1      0
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (2) _dwt_configure                                       42    40      2  644212
                                             58 BANK1     21    19      2
                                              0 BANK2     21    21      0
                              _Sleep
                            ___ftmul
                            ___fttol
                           ___lltoft
            __dwt_kick_dgc_on_wakeup
                   _dwt_configmrxlut
           _dwt_modify16bitoffsetreg
           _dwt_modify32bitoffsetreg
            _dwt_modify8bitoffsetreg
                        _dwt_pgf_cal
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
                     _dwt_setdwstate
                    _dwt_setplenfine
            _dwt_write16bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
                       _get_sts_mnth
 ---------------------------------------------------------------------------------
 (3) _get_sts_mnth                                        14    10      4    1141
                                              4 BANK0     14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     444
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _dwt_setplenfine                                      2     2      0   36630
                                             75 BANK0      2     2      0
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_setdwstate                                       4     2      2   88405
                                             24 BANK1      4     2      2
                   _dwt_force_clocks
           _dwt_modify32bitoffsetreg
            _dwt_modify8bitoffsetreg
 ---------------------------------------------------------------------------------
 (4) _dwt_force_clocks                                     4     2      2   36726
                                             78 BANK0      2     0      2
                                             22 BANK1      2     2      0
            _dwt_write16bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write16bitoffsetreg                             13     3     10   36008
                                             75 BANK0      3     3      0
                                             12 BANK1     10     0     10
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_pgf_cal                                          6     4      2  201960
                                             51 BANK1      6     4      2
           _dwt_modify16bitoffsetreg
             _dwt_read16bitoffsetreg
                     _dwt_run_pgfcal
 ---------------------------------------------------------------------------------
 (4) _dwt_run_pgfcal                                      16    14      2  152979
                                             78 BANK0      2     2      0
                                             37 BANK1     14    12      2
                              _Sleep
            _dwt_modify8bitoffsetreg
             _dwt_read32bitoffsetreg
              _dwt_read8bitoffsetreg
            _dwt_write32bitoffsetreg
             _dwt_write8bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write8bitoffsetreg                               9     0      9   36599
                                             12 BANK1      9     0      9
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_read8bitoffsetreg                                9     1      8   19797
                                             75 BANK0      1     1      0
                                              0 BANK1      8     0      8
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _dwt_read32bitoffsetreg                              26    18      8   27945
                                             11 BANK1     26    18      8
                 _dwt_readfromdevice
 ---------------------------------------------------------------------------------
 (4) _dwt_modify8bitoffsetreg                             13     3     10   24334
                                             75 BANK0      3     3      0
                                              0 BANK1     10     0     10
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (4) _dwt_read16bitoffsetreg                              17     9      8   27384
                                             75 BANK0      5     5      0
                                             11 BANK1     12     4      8
                 _dwt_readfromdevice
 ---------------------------------------------------------------------------------
 (4) _dwt_readfromdevice                                  11     0     11   24251
                                              0 BANK1     11     0     11
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (4) _dwt_modify16bitoffsetreg                            17     5     12   21390
                                             75 BANK0      5     5      0
                                              0 BANK1     12     0     12
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) _dwt_configmrxlut                                    30    28      2   43684
                                             76 BANK0      2     0      2
                                             30 BANK1     28    28      0
            _dwt_write32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_write32bitoffsetreg                             19     7     12   43237
                                             75 BANK0      1     1      0
                                             12 BANK1     18     6     12
                  _dwt_writetodevice
 ---------------------------------------------------------------------------------
 (3) _dwt_writetodevice                                   12     0     12   27023
                                              0 BANK1     12     0     12
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (3) __dwt_kick_dgc_on_wakeup                              1     1      0   27268
                                             24 BANK1      1     1      0
           _dwt_modify32bitoffsetreg
 ---------------------------------------------------------------------------------
 (3) _dwt_modify32bitoffsetreg                            29    13     16   27206
                                             75 BANK0      5     5      0
                                              0 BANK1     24     8     16
                       _dwt_xfer3000
 ---------------------------------------------------------------------------------
 (4) _dwt_xfer3000                                        33    19     14   16735
                                             42 BANK0     33    19     14
                           __fassert
                   _dwt_generatecrc8
                        _readfromspi
                         _writetospi
                  _writetospiwithcrc
 ---------------------------------------------------------------------------------
 (5) _writetospiwithcrc                                   10     0     10    1597
                                              0 BANK0     10     0     10
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (5) _writetospi                                           9     0      9    1486
                                              0 BANK0      9     0      9
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (5) _readfromspi                                          9     0      9    1770
                                              0 BANK0      9     0      9
                     _SPI1_ReadBlock
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _SPI1_WriteBlock                                      6     2      4    1054
                                              2 COMMON     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _SPI1_ReadBlock                                       7     3      4     284
                                              2 COMMON     7     3      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _dwt_generatecrc8                                     9     4      5     691
                                              1 COMMON     9     4      5
 ---------------------------------------------------------------------------------
 (5) __fassert                                             6     0      6    7466
                                             36 BANK0      6     0      6
                             _printf
 ---------------------------------------------------------------------------------
 (6) _printf                                              13     5      8    5987
                                             11 COMMON     1     1      0
                                             24 BANK0     12     4      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (7) __doprnt                                             24    21      3    5405
                                              4 BANK0     20    17      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     494
                                              2 COMMON     1     0      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     528
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     386
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     703
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2559
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             20 BANK0     14    10      4
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3330
                                              4 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2380
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     837
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0     837
                                             10 COMMON     1     1      0
                              _Sleep
 ---------------------------------------------------------------------------------
 (3) _Sleep                                                9     5      4     814
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          1     1      0       0
                                              0 COMMON     1     1      0
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (14) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _Sleep
     _PMD_Initialize
   _TMR0_Initialize
   _dw_main
     _Sleep
     _dwt_configure
       _Sleep
       ___ftmul
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       __dwt_kick_dgc_on_wakeup
         _dwt_modify32bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_configmrxlut
         _dwt_write32bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_modify16bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_modify8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_pgf_cal
         _dwt_modify16bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_read16bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_run_pgfcal
           _Sleep
           _dwt_modify8bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_read32bitoffsetreg
             _dwt_readfromdevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _dwt_read8bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _dwt_write8bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_setdwstate
         _dwt_force_clocks
           _dwt_write16bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_modify32bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_modify8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_setplenfine
         _dwt_write8bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _get_sts_mnth
         ___lmul
     _dwt_configuretxrf
       _dwt_calcbandwidthadj
         _dwt_disable_rf_tx
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_disable_rftx_blocks
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_enable_rf_tx
           _dwt_modify32bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _dwt_write32bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_enable_rftx_blocks
           _dwt_modify32bitoffsetreg
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_force_clocks
           _dwt_write16bitoffsetreg
             _dwt_writetodevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _dwt_modify8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_read8bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _dwt_write16bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_initialise
       _Sleep
       __dwt_otpread
         _dwt_read32bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _dwt_write16bitoffsetreg
           _dwt_writetodevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       __dwt_prog_ldo_and_bias_tune
         _dwt_modify16bitoffsetreg
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_check_dev_id
         _dwt_readdevid
           _dwt_read32bitoffsetreg
             _dwt_readfromdevice
               _dwt_xfer3000
                 __fassert
                   _printf
                     __doprnt
                       Absolute function(Fake) *
                       ___lwdiv *
                       ___lwmod *
                         ___lwdiv (ARG)
                       ___wmul *
                       _isdigit *
                       _putch *
                         _EUSART_Write
                 _dwt_generatecrc8
                 _readfromspi
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospi
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
                 _writetospiwithcrc
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
       _dwt_checkidlerc
         _dwt_read16bitoffsetreg
           _dwt_readfromdevice
             _dwt_xfer3000
               __fassert
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
               _dwt_generatecrc8
               _readfromspi
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospi
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
               _writetospiwithcrc
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
       _dwt_write8bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_setrxantennadelay
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_settxantennadelay
       _dwt_write16bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _dwt_starttx
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxdata
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxfctrl
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _printf_string
       _EUSART_Write
     _reset_DWIC
       _Sleep
   _init_bq25895
     _copybits8
     _i2c_multi_read
       _i2c_read
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write
     _i2c_multi_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _pmic_status_read
     _bq25895_WDT_reset
       _copybits8
       _i2c_single_read
         _i2c_read
         _i2c_restart
         _i2c_start
         _i2c_stop
         _i2c_write
       _i2c_single_write
         _i2c_start
         _i2c_stop
         _i2c_write
     _i2c_multi_read
       _i2c_read
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write
     _i2c_single_read
       _i2c_read
       _i2c_restart
       _i2c_start
       _i2c_stop
       _i2c_write
     _i2c_single_write
       _i2c_start
       _i2c_stop
       _i2c_write
     _init_bq25895
       _copybits8
       _i2c_multi_read
         _i2c_read
         _i2c_restart
         _i2c_start
         _i2c_stop
         _i2c_write
       _i2c_multi_write
         _i2c_start
         _i2c_stop
         _i2c_write
     _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART_Write
     _process_pmic_status
       ___wmul
       _lipo_battery_level
         ___lwdiv
     _set_MSSSP1_mode
       _SPI1_Open
       _i2c_init
       _printf_string
         _EUSART_Write
   _printf_string
     _EUSART_Write
   _set_MSSSP1_mode
     _SPI1_Open
     _i2c_init
     _printf_string
       _EUSART_Write
   _set_led_status
   _transmitt_beacon_pkt
     _dwt_starttx
       _dwt_read32bitoffsetreg
         _dwt_readfromdevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxdata
       _dwt_write32bitoffsetreg
         _dwt_writetodevice
           _dwt_xfer3000
             __fassert
               _printf
                 __doprnt
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
             _dwt_generatecrc8
             _readfromspi
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospi
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
             _writetospiwithcrc
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
       _dwt_writetodevice
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _dwt_writetxfctrl
       _dwt_modify32bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
       _dwt_read8bitoffsetreg
         _dwt_xfer3000
           __fassert
             _printf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _dwt_generatecrc8
           _readfromspi
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospi
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
           _writetospiwithcrc
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
     _printf_string
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_Reload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     17      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      47      11       88.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      39      13       71.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      2E      15       57.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0     1AB      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0     1AB      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              40      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48               0      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49               0      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50               0      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 10 16:25:32 2021

                  dwt_configmrxlut@channel 006C                          _SPI1_ExchangeByte 20CC  
                        ?_dwt_configmrxlut 006C                             ?_printf_string 0072  
                        _dwt_configuretxrf 1D50                                __CFG_CP$OFF 0000  
                       ?_SPI1_ExchangeByte 0070                         ??_dwt_configmrxlut 007C  
                      ___wmul@multiplicand 0073                         ?_dwt_configuretxrf 0070  
                          _timer0ReloadVal 0140                   _dwt_modify16bitoffsetreg 276C  
                 _dwt_modify32bitoffsetreg 139F                                        l261 20D0  
                                      l186 0801                                        l355 1D36  
                                      l444 0A6B                                        l376 241A  
                                      l608 1C61                                        l545 0C5B  
                                      l458 0AE8                                        l538 0BD5  
                                      l635 00B8                                        l672 06CD  
                                      l664 05F6                                        l673 0703  
                                      l649 039C                                        l676 1B69  
                                      l686 167F                                        l994 08FD  
                                      _GIE 005F                                        l997 082A  
                             __CFG_CPD$OFF 0000                 __end_of_sts_length_factors 293E  
                            ?_get_sts_mnth 0024                    __size_of_PMD_Initialize 0008  
                      ??_SPI1_ExchangeByte 0071                               __CFG_BORV$LO 0000  
                                      wreg 0009                        ??_dwt_configuretxrf 00C9  
                             __CFG_LVP$OFF 0000                               __CFG_ZCD$OFF 0000  
                     __end_of__dwt_otpread 1CDB                                       l1001 083F  
                                     l1005 0854                                       l1016 0936  
             process_pmic_status@CHRG_STAT 002A                                       l2065 1BD9  
                                     l2066 1BE1                                       l2058 1BC6  
                                     l1603 116C                                       l2149 1EB9  
                                     l1642 2091                                       l1546 2327  
                                     l1731 0D01                                       l1387 1A8D  
                                     l1660 2129                                       l1636 2096  
                                     l1654 20DB                                       l1743 0E14  
                                     l1663 212D                                       l1591 1159  
                                     l1648 209B                                       l1745 0D4B  
                                     l1773 0E5E                                       l1768 0E3C  
                                     l1777 0E95                                       l1890 21C2  
                                     l6310 1ECA                                       l6304 1EB0  
                                     l6306 1EBC                                       l9010 2131  
                                     l6278 1E65                                       l6368 199F  
                                     l6296 1E95                                       l9032 26AD  
                                     l6298 1EA3                                       l8402 24EF  
                                     l9018 27D8                                       l9210 23AF  
                                     _ADDR 01D8                                       l8404 24FB  
                                     l8412 2510                                       l9212 23C0  
                                     l9222 1302                                       l8350 211F  
                                     l8430 0CEA                                       l9126 1B8E  
                                     l9062 07A7                                       l9150 1958  
                                     l9206 23A6                                       l9240 1353  
                                     l8408 2507                                       l8600 0FC4  
                                     l8440 0D06                                       l9080 1C3F  
                                     l9144 193E                                       l8602 0FCD  
                                     l8610 0FF3                                       l8442 0D0F  
                                     l8434 0CFD                                       l9058 0741  
                                     l9066 1F2C                                       l9252 136F  
                                     l9244 135B                                       l9228 1318  
                                     l8380 25B8                                       l8356 21BC  
                                     l8532 0E80                                       l8508 0E2F  
                                     l8460 0D62                                       l8612 0CBF  
                                     l9500 00A3                                       l9420 0B76  
                                     l9148 192C                                       l9340 1FBF  
                                     l9270 2469                                       l8390 25D3  
                                     l8606 0FE1                                       l8542 0EB1  
                                     l8534 0E89                                       l8470 0D7F  
                                     l8454 0D4E                                       l8614 0FFC  
                                     l8446 0D1C                                       l9510 00C1  
                                     l9166 2528                                       l9256 1377  
                                     l9272 247B                                       l8552 0ECE  
                                     l8544 0EB4                                       l8480 0D81  
                                     l8464 0D64                                       l8632 22D2  
                                     l8624 218A                                       l9096 16CC  
                                     l9520 00CF                                       l9512 00C3  
                                     l9440 0C0D                                       l9168 253E  
                                     l8386 25CA                                       l8378 25AC  
                                     l8570 0F15                                       l8562 0EF9  
                                     l8482 0DB2                                       l8466 0D72  
                                     l8722 0A5C                                       l8706 0A13  
                                     l9610 05C2                                       l9522 00D3  
                                     l9514 00C5                                       l9506 00B4  
                                     l9434 0BF1                                       l8580 0F44  
                                     l8556 0EE0                                       l8476 0D9F  
                                     l8652 243D                                       l8740 0AD0  
                                     l8732 0A71                                       l9620 0666  
                                     l9604 054D                                       l9524 00D7  
                                     l9516 00C7                                       l9532 00E4  
                                     l9452 0C4A                                       l9444 0C24  
                                     l9436 0BF7                                       l8574 0F29  
                                     l8566 0F0B                                       l8590 0F6E  
                                     l8494 0DE8                                       l8654 2463  
                                     l8718 0A55                                       l8902 1653  
                                     l9630 0695                                       l9526 00DB  
                                     l9518 00CB                                       l9534 0105  
                                     l9710 084B                                       l6878 2210  
                                     l8592 0F74                                       l8568 0F11  
                                     l8488 0DCF                                       l8728 0A69  
                                     l8744 0AE9                                       l9528 00DF  
                                     l9480 1D77                                       l9464 0CA0  
                                     l9448 0C37                                       l9704 0836  
                                     l8594 0F9C                                       l8586 0F5C  
                                     l8578 0F3B                                       l8498 0DF3  
                                     l8738 0AB8                                       l8690 09CC  
                                     l9626 068B                                       l9562 02C0  
                                     l9570 0341                                       l8922 12A8  
                                     l9458 0C6C                                       l9714 085E  
                                     l9378 1FF4                                       l8692 09D7  
                                     l8852 274E                                       l9644 06BE  
                                     l9636 069E                                       l9564 02DE  
                                     l9556 02A7                                       l8932 102B  
                                     l9740 0952                                       l8694 09E6  
                                     l8686 09B5                                       l8790 18C7  
                                     l8774 1B28                                       l9646 06EA  
                                     l9582 03E3                                       l9486 1D97  
                                     l9726 08DB                                       l9662 1DFD  
                                     l9806 1AC8                                       l8768 1AFA  
                                     l8960 257B                                       l9576 0378  
                                     l9488 1DAB                                       l9736 091B  
                                     l9728 08DE                                       l8890 15E0  
                                     l8882 15CF                                       l9674 14D6  
                                     l9770 114F                                       l8980 1BA3  
                                     l8876 15AA                                       l8964 2586  
                                     l9588 040D                                       l9692 0815  
                                     l9780 116D                                       l9852 11EB  
                                     l8990 1BCB                                       l8982 1BAD  
                                     l8798 18EC                                       l8886 15D9  
                                     l9774 115B                                       STR_1 285D  
                                     l8992 1BD3                                       l8984 1BB2  
                                     l8976 1B9C                                       l9792 1A8E  
                                     l9768 1148                                       l9776 1162  
                             __CFG_WDTE$ON 0000                                       STR_2 2985  
                                     STR_3 298F                                       l9698 0821  
                                     l9866 1231                                       l9858 1206  
                                     STR_4 294C                                       STR_5 2824  
                                     l9796 1A99                                       STR_6 293E  
                                     STR_7 28F1                                       STR_8 293E  
                                     STR_9 2899                                       _LATA 0016  
                                     _LATB 0017                                       _LATC 0018  
                                     _LATD 0019                                       _LATE 001A  
           __end_of_dwt_read16bitoffsetreg 26EB             __end_of_dwt_read32bitoffsetreg 1B31  
                                     _PMD0 0796                                       _PMD1 0797  
                                     _PMD2 0798                                       _PMD3 0799  
                                     _PMD4 079A                                       _PMD5 079B  
                                     u4915 2428                                       u5825 1EB1  
                                     u5765 1E6C                                       u5870 199E  
                                     u5795 1E96                                       u9155 2447  
                                     u8605 21C3                                       u9165 0987  
                                     u9405 13EC                                       u8615 21C8  
                                     u9255 0A21                                       u9415 140D  
                                     u9335 1B0C                                       u9425 1428  
                                     u8715 24F2                                       u9435 1443  
                                     u9355 18C5                                       u8645 25AF  
                                     u9365 18D4                                       u8735 2501  
                                     u9375 18EA                                       u8665 25B9  
                                     u8745 2508                                       u9385 13B6  
                                     u9715 1BC1                                       u8675 25C3  
                                     u8915 0E57                                       u8835 0D78  
                                     u9395 13D1                                       u8685 25CB  
                                     u9645 2587                                       u9735 1BCE  
                                     u9655 258E                                       u8945 0E79  
                                     u9850 2570                                       u9915 1C39  
                                     u9925 1C4C                                       u9845 255E  
                                     u9775 1BE8                                       u9695 1BA8  
                                     u8985 0EA4                                       _WPUA 1F39  
                                     _WPUB 1F44                                       _WPUC 1F4F  
                                     _WPUD 1F5A                                       _WPUE 1F65  
                             __CFG_WRT$OFF 0000                              __CFG_FCMEN$ON 0000  
                         ??_dwt_initialise 00CF                            _set_MSSSP1_mode 1F66  
                                     _main 1CDB                  __size_of_dwt_writetxfctrl 00DC  
                             ___ftpack@arg 0071                               ___ftpack@exp 0074  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                    __size_of_SPI1_ReadBlock 001D  
                            __CFG_BOREN$ON 0000            __end_of__dwt_kick_dgc_on_wakeup 2800  
                                     start 0019               dwt_read32bitoffsetreg@buffer 00BB  
             dwt_read16bitoffsetreg@buffer 00B5                 __size_of_dwt_disable_rf_tx 005A  
                             _tx_blink_msg 0220                  __end_of_SPI1_ExchangeByte 20D7  
             dwt_read32bitoffsetreg@regval 00BF               dwt_read16bitoffsetreg@regval 00B3  
                            __CFG_CSWEN$ON 0000                              __CFG_MCLRE$ON 0000  
                __end_of_dwt_configuretxrf 1DCB                               ___ftmul@cntr 0032  
                            ??_i2c_restart 0071                               ___ftmul@sign 0033  
                        _bq25895_WDT_reset 2376                           _pmic_status_read 1195  
            __size_of_transmitt_beacon_pkt 002C                               ___fttol@exp1 0041  
                             ___fttol@lval 003D                    __end_of_TMR0_Initialize 215A  
                       ?_bq25895_WDT_reset 0070                         dwt_xfer3000@header 0067  
                       dwt_xfer3000@buffer 0054                  __size_of_dwt_check_dev_id 0037  
                            ?_EUSART_Write 0070             __size_of_OSCILLATOR_Initialize 0009  
            __end_of_OSCILLATOR_Initialize 20B8                         dwt_xfer3000@length 0050  
                                    l10134 1D1E                                      l10136 1D29  
                                    l11092 0AF2                                      l11094 0AF7  
                        ??_i2c_single_read 0073                                      ?_main 0070  
                  dwt_writetxfctrl@ranging 00BC                                      STR_10 293E  
                                    STR_11 2902                                      STR_12 293E  
                                    STR_20 2921                                      STR_21 28E0  
                                    STR_13 1804                                      STR_14 293E  
                                    STR_30 29AA                                      STR_22 2999  
                                    STR_23 2966                                      STR_31 28BE  
                                    STR_15 2843                                      STR_24 2966  
                                    STR_32 2800                                      STR_25 2886  
                                    STR_18 297B                                      STR_26 2873  
                                    STR_19 295A                                      STR_27 2912  
                                    STR_28 28AC                                      STR_29 28CF  
         SPI1_Open@spi1UniqueConfiguration 0076                   __size_of_dwt_setplenfine 001C  
                           ??_get_sts_mnth 0028                                i2c_read@ack 0071  
                                    u10115 1378                                      u10125 137E  
                                    u10045 1324                                      u10055 1334  
                                    u10145 246F                                      u10075 135C  
                                    u10235 0BAE                                      u11060 1230  
                                    u10085 1362                            __end_of___ftmul 139F  
                                    u10414 012F                                      u10190 1FFE  
                                    u10415 012D                                      u10425 0142  
                                    u10435 01B7                                      u10445 01E3  
          pmic_status_read@interrupt_state 0046                                      u10535 046F  
                                    u11440 1D27                                      u10545 0495  
                                    u10705 1493                                      u10555 0512  
                                    u10715 14DD                            __end_of___fttol 1ED3  
                                    u10565 0525                                      u10725 14F0  
                                    u10495 034D                                      u10905 1111  
                                    u10915 1120                                      u10695 1486  
                                    u12717 1CF6                                      u10895 1102  
                                    u12727 1D10                                      u12737 231F  
                                    u12747 11E6                                      u12757 1FAD  
                                    u12767 1FB9                                      u12777 1FEF  
                                    u12787 242D                             __CFG_DEBUG$OFF 0000  
                          __end_of___lwdiv 25D8                            __end_of___lwmod 2515  
              dwt_read8bitoffsetreg@regval 006B                                      _OSCEN 0891  
                                    _TMR0H 001D                                      _TMR0L 001C  
                          __end_of__doprnt 1000                                      _TRISA 0011  
                                    _TRISB 0012                                      _TRISC 0013  
                                    _TRISD 0014                                      _TRISE 0015  
                      ??_bq25895_WDT_reset 0077                                      _RXPPS 1ECB  
                       __size_of_SPI1_Open 0060                        ___lmul@multiplicand 0075  
                    i2c_multi_read@I2C_rsp 0020                               ___lltoft@exp 007A  
                             ?_dwt_pgf_cal 00D3                                      _Sleep 2412  
                        ?_dwt_force_clocks 006E                            __end_of_dw_main 1ACF  
                        ??_i2c_multi_write 0075                dwt_readfromdevice@regFileID 00A0  
                          __end_of_dpowers 297B                            __end_of_isdigit 2121  
                            ___ftpack@sign 0075                                      _putch 2086  
                       ??_dwt_force_clocks 007C                               ?_dwt_starttx 0070  
                   ?_dwt_setrxantennadelay 006E                                      pclath 000A  
                             ?_readfromspi 0020                           ??_dwt_setdwstate 00BA  
                                    status 0003               process_pmic_status@VBUS_STAT 0024  
                                    wtemp0 007E                i2c_single_write@device_addr 0075  
                __end_of_bq25895_WDT_reset 239C               dwt_settxantennadelay@txDelay 006E  
                          ??_printf_string 0074                            __initialization 001B  
                             __end_of_main 1D50                           __end_of_i2c_init 2113  
                         __end_of_i2c_read 2131                             ??_EUSART_Write 0071  
                         __end_of_i2c_stop 209E                         i2c_multi_read@data 0073  
                          _dwt_checkidlerc 2542                               __fassert@exp 0048  
              ?_INTERRUPT_InterruptManager 0070                           ??_dwt_run_pgfcal 006E  
                      __end_of_i2c_restart 2094                                     ??_main 0165  
                            ___fttol@sign1 003C                              ?_init_bq25895 0070  
          dwt_write8bitoffsetreg@regFileID 00AC               process_pmic_status@VSYS_STAT 0026  
           __size_of_dwt_read8bitoffsetreg 002C                   ?_dwt_modify8bitoffsetreg 00A0  
                         dwt_configure@cnt 015E                           dwt_configure@scp 0150  
            __end_of_dwt_read8bitoffsetreg 24BC            dwt_write8bitoffsetreg@regOffset 00B0  
            dwt_writetxfctrl@txFrameLength 00B8                          ?_i2c_single_write 0072  
                                   ?_Sleep 0071        __end_of__dwt_prog_ldo_and_bias_tune 272B  
              __dwt_prog_ldo_and_bias_tune 26EB                    __end_of_set_MSSSP1_mode 2000  
                           _i2c_multi_read 1908                 _EUSART_OverrunErrorHandler 0148  
                       ??_i2c_single_write 0074                    ?_dwt_enable_rftx_blocks 00B8  
                                   _ANSELA 1F38                                     ?_putch 0072  
                                   _ANSELB 1F43                                     _ANSELC 1F4E  
                                   _ANSELD 1F59                                     _ANSELE 1F64  
                         __end_of___ftpack 1BF8                                     _T0CON0 001E  
                                   _T0CON1 001F                            dwt_starttx@mode 00CD  
                                   u1102m0 1AC3                                     _RC1REG 0119  
                                   _RC1PPS 1F21                                     _RC1STA 011D  
                         __end_of___lltoft 2490                                     _RC2PPS 1F22  
                                   _RC3PPS 1F23                                     _RC4PPS 1F24  
                                   _RC5PPS 1F25                                     _ODCONA 1F3A  
                                   _ODCONB 1F45                                     _ODCONC 1F50  
                                   _ODCOND 1F5B                                     _ODCONE 1F66  
                                   i1l1682 0014                           __end_of__fassert 2186  
                                   _OSCFRQ 0893                                     _TX1REG 011A  
                                   _TX1STA 011E                         dwt_initialise@mode 00CD  
              __size_of_lipo_battery_level 0026                         __size_of_i2c_start 0005  
            ??__dwt_prog_ldo_and_bias_tune 00AC                         __size_of_i2c_write 000B  
             __end_of_dwt_calcbandwidthadj 1F66                             __CFG_PWRTE$OFF 0000  
               __size_of_SPI1_ExchangeByte 000B                      dwt_configure@sts_mnth 0156  
                                   Sleep@i 0076                          __end_of_SPI1_Open 1A6E  
                  readfromspi@headerBuffer 0022                 __size_of_dwt_configuretxrf 007B  
                  readfromspi@headerLength 0020                               ?_TMR0_Reload 0070  
                                   ___lmul 2572                                     ___wmul 21BA  
                            ?_dwt_xfer3000 004A                             __CFG_STVREN$ON 0000  
                                ??___ftmul 002A                                  ??___fttol 0038  
                                   _dev_id 013C                                  ??___lwdiv 0075  
                                ??___lwmod 0079                                     _config 01CA  
                        _writetospiwithcrc 2350                                  ??__doprnt 0027  
                         ?_TMR0_Initialize 0070                                     _memset 220B  
                   __size_of_dwt_configure 0697                   ?_dwt_write16bitoffsetreg 00AC  
                 ?_dwt_write32bitoffsetreg 00AC                        _process_pmic_status 10F4  
                           ??_init_bq25895 0023                               __doprnt@flag 0033  
                                   _printf 215A                               __doprnt@prec 002C  
                __size_of_dwt_enable_rf_tx 00B1                         ?_writetospiwithcrc 0020  
                         _timer0_triggered 014E                                  ??_dw_main 00EF  
                    ___ftmul@f3_as_product 002F                             _PMD_Initialize 209E  
                             __pdataCOMMON 007C                                  ??_isdigit 0071  
                    __size_of__dwt_otpread 0075           dwt_modify8bitoffsetreg@regFileID 00A0  
                 __size_of_dwt_writetxdata 0081                     __end_of_i2c_multi_read 195B  
           __end_of_dwt_enable_rftx_blocks 1056           dwt_modify8bitoffsetreg@regOffset 00A4  
                      ??_writetospiwithcrc 0078              dwt_writetxdata@txBufferOffset 00C1  
                        ??_dwt_setplenfine 006B                     __size_of_dwt_readdevid 001D  
                     _txconfig_options_ch9 01E0                       ?_process_pmic_status 0021  
                        _SYSTEM_Initialize 20E2                    __end_of__initialization 007F  
                 __size_of_SPI1_WriteBlock 001A                           _dwt_writetxfctrl 1478  
                  __size_of_set_led_status 0024                             _SPI1_ReadBlock 22CE  
                 ?_dwt_disable_rftx_blocks 0070                      _dwt_settxantennadelay 2296  
                       ?_SYSTEM_Initialize 0070                  i2c_multi_read@device_addr 0021  
                 ??_dwt_write8bitoffsetreg 007C                       __end_of_get_sts_mnth 1C66  
               __size_of_bq25895_WDT_reset 0026                    __end_of_dwt_checkidlerc 2572  
                     dwt_run_pgfcal@result 00CC                                 ___ftmul@f1 0024  
                               ___ftmul@f2 0027                 ??_dwt_modify16bitoffsetreg 006B  
               ??_dwt_modify32bitoffsetreg 006B                                 ___fttol@f1 0034  
                           __pcstackCOMMON 0070                      dwt_writetxfctrl@reg32 00CB  
                            __end_of_Sleep 243B                             ??_dwt_xfer3000 0058  
                              _i2c_restart 208F                  __end_of_writetospiwithcrc 2376  
                             __pidataBANK2 20B8                               __pidataBANK3 189A  
                             __pidataBANK4 232C                        ??_SYSTEM_Initialize 007B  
                 dwt_configuretxrf@channel 00CB                  __size_of_dwt_generatecrc8 002A  
                               ___lltoft@c 0020                               __dwt_otpread 1C66  
              __size_of_dwt_readfromdevice 0034                              __end_of_putch 208A  
                         _dwt_check_dev_id 267A                     i2c_single_read@I2C_rsp 0074  
                   __end_of_PMD_Initialize 20A6                      SPI1_ExchangeByte@data 0071  
                      dwt_configure@config 0164                          __end_of_i2c_start 2099  
                        __end_of_i2c_write 20E2                         _spi1_configuration 1800  
                            __fassert@file 0046                              __fassert@line 0044  
                          ?_i2c_multi_read 0072                                    ??_Sleep 0075  
                __size_of_dwt_configmrxlut 017C                           ?_set_MSSSP1_mode 0070  
                               __doprnt@ap 0026                                 __doprnt@cp 002F  
                               __doprnt@pb 0037                   __end_of_pmic_status_read 123A  
                __end_of_SYSTEM_Initialize 20EE                        init_bq25895@I2C_rsp 0026  
                     __size_of_dwt_pgf_cal 0063                                    ??_putch 0073  
                    ??_process_pmic_status 0022                     __end_of_SPI1_ReadBlock 22EB  
                               __pbssBANK2 0120                                 __pbssBANK3 01A0  
                               __pbssBANK4 0244                                 __pbssBANK5 02A0  
                       copybits8@new_value 0072                              _dwt_configure 0083  
                       __size_of_copybits8 0005                         dwt_run_pgfcal@data 00C7  
                       dwt_run_pgfcal@flag 00CB                       __end_of_EUSART_Write 0808  
                                ?_i2c_init 0070                                  ?_i2c_read 0070  
                       _sts_length_factors 2930                                  ?_i2c_stop 0070  
                        dwt_configure@chan 0163                          dwt_configure@flag 0158  
                     __size_of_dwt_starttx 0165                          dwt_configure@mode 0151  
                        dwt_configure@temp 015A                       __size_of_readfromspi 001B  
                          _i2c_single_read 23EA                                 __pmaintext 1CDB  
              dwt_modify8bitoffsetreg@_and 00A8                                    ?___lmul 0071  
                            _dwt_readdevid 22EB               dwt_modify32bitoffsetreg@_and 00A8  
             dwt_modify16bitoffsetreg@_and 00A8                                    ?___wmul 0071  
                     dwt_xfer3000@reg_file 0060                                 __pintentry 0004  
                            _I2C_read_buff 01C0                                    ?_memset 0071  
                           ___lmul@product 0020                   ?__dwt_kick_dgc_on_wakeup 0070  
                          _i2c_multi_write 2515                                  ?___ftpack 0071  
                                  ?_printf 0038                            ?_PMD_Initialize 0070  
                                ?___lltoft 0020                        __CFG_RSTOSC$HFINT32 0000  
                   i2c_multi_read@reg_addr 0072                                  ?__fassert 0044  
                          _pic_active_mode 016D                     dwt_xfer3000@reg_offset 0065  
                     _dwt_calcbandwidthadj 1ED3                                    _SP1BRGH 011C  
                                  _SP1BRGL 011B                                    _OSCCON1 088D  
                                  _OSCCON3 088F                    ??_dwt_setrxantennadelay 007C  
                                  _OSCTUNE 0892               __end_of_transmitt_beacon_pkt 24E8  
                                  _SSP1ADD 018D                                    _PPSLOCK 1E8F  
                                  _WDTCON0 080C                                    _SSP1BUF 018C  
                                  _SSP1MSK 018E         pmic_status_read@pmic_wdt_clr_count 016B  
                             _pdw3000local 007C                             ?_dwt_configure 00DA  
                          ?_SPI1_ReadBlock 0072                 process_pmic_status@PG_STAT 0029  
                        ??_dwt_writetxdata 006C                                 ??_i2c_init 0071  
                               ??_i2c_read 0071                     ?_dwt_settxantennadelay 006E  
                               ??_i2c_stop 0071                       __end_of_init_bq25895 10F4  
                   i2c_multi_write@I2C_rsp 0078              dwt_write16bitoffsetreg@buffer 006C  
            dwt_write32bitoffsetreg@buffer 00B8                               _enable_sleep 016F  
          __size_of_dwt_write8bitoffsetreg 001C              dwt_write32bitoffsetreg@regval 00B4  
            dwt_write16bitoffsetreg@regval 00B4                           ?_dwt_checkidlerc 0070  
                __size_of_dwt_force_clocks 0041                             ?_dwt_readdevid 00C5  
                        ??_SPI1_WriteBlock 0076                 __size_of_writetospiwithcrc 0026  
                     __CFG_SCANE$available 0000                            __size_of___lmul 0032  
                dwt_initialise@ldo_tune_hi 00D8                            __size_of___wmul 001B  
                                  ___ftmul 12EB                  dwt_initialise@ldo_tune_lo 00D4  
                                  ___fttol 1E4C                                    ___lwdiv 25A4  
                                  ___lwmod 24E8                       __size_of_TMR0_Reload 0009  
        dwt_modify16bitoffsetreg@regFileID 00A0          dwt_modify32bitoffsetreg@regFileID 00A0  
                                  __doprnt 0CBD                          __end_of_copybits8 208F  
                               ??___ftpack 0076                            __size_of_memset 001B  
                               ??___lltoft 0079          dwt_modify16bitoffsetreg@regOffset 00A4  
        dwt_modify32bitoffsetreg@regOffset 00A4                                    __ptext1 24BC  
                                  __ptext2 2308                                    __ptext3 1195  
                                  __ptext4 1F66                                    __ptext5 2106  
                                  __ptext6 1A0E                                    __ptext7 10F4  
                                  __ptext8 239C                                    __ptext9 220B  
                         _dwt_enable_rf_tx 123A                            __size_of_printf 0016  
                               ??__fassert 007C                   SPI1_WriteBlock@blockSize 0074  
                                  _dw_main 1A6E                  process_pmic_status@length 0021  
                        __end_of_hexpowers 29AA                                    _dpowers 2971  
                    _OSCILLATOR_Initialize 20AF                      ?_dwt_calcbandwidthadj 00C3  
                                  _isdigit 2113                  process_pmic_status@status 002B  
                 ??_PIN_MANAGER_Initialize 007A                        i2c_multi_write@data 0073  
                                  _prev_ts 01A8                 __size_of_SYSTEM_Initialize 000C  
                     __end_of_dwt_xfer3000 0B06                                    clrloop0 20EF  
                            __doprnt@width 0034                       end_of_initialization 007F  
                    __size_of_get_sts_mnth 006E                    __end_of_i2c_single_read 2412  
                           _set_led_status 2308                dwt_calcbandwidthadj@channel 00C5  
                                  init_ram 20FA                                    memset@c 0071  
                                  memset@n 0073                                    memset@p 0077  
                                  initloop 20FB           __size_of_dwt_modify8bitoffsetreg 0037  
                               _reset_DWIC 21A0                          _EUSART_Initialize 20C1  
                __size_of_i2c_single_write 001C           __end_of_dwt_modify32bitoffsetreg 1478  
         __end_of_dwt_modify16bitoffsetreg 27AF                    __end_of_i2c_multi_write 2542  
                       ?_EUSART_Initialize 0070                                    printf@f 0038  
                               _resp_rx_ts 01B0                           _dwt_generatecrc8 243B  
                    __end_of_printf_string 2145                    __size_of_dwt_initialise 01B7  
                                _SPI1_Open 1A0E                              copybits8@mask 0071  
                               _poll_tx_ts 01B8                      __CFG_WDTCPS$WDTCPS_11 0000  
                  dwt_read32bitoffsetreg@j 00C3                        ??_EUSART_Initialize 0071  
                          _dwt_setplenfine 2242                                  _PORTAbits 000C  
                                _PORTBbits 000D                   __end_of_dwt_writetxfctrl 1554  
                   _dwt_write8bitoffsetreg 2226                  dwt_configure@preamble_len 0161  
                        _dwt_writetodevice 260C                               _get_sts_mnth 1BF8  
                            i2c_write@data 0071                   ??_dwt_read16bitoffsetreg 006B  
                 ??_dwt_read32bitoffsetreg 00B3                       __CFG_WDTCCS$LFINTOSC 0000  
                      SPI1_ReadBlock@block 0072                                  _TRISCbits 0013  
               i2c_multi_write@device_addr 0077                      __size_of_EUSART_Write 0008  
          process_pmic_status@battery_volt 0027            __dwt_kick_dgc_on_wakeup@channel 00B8  
                          ??_dwt_configure 00DC                         ?_dwt_writetodevice 00A0  
                         _dwt_configmrxlut 1684                      _dwt_read8bitoffsetreg 2490  
                         __CFG_FEXTOSC$OFF 0000                           dwt_pgf_cal@ldoen 00D3  
         __size_of_dwt_write32bitoffsetreg 0051           __size_of_dwt_write16bitoffsetreg 0028  
                   __end_of_set_led_status 232C              dwt_enable_rftx_blocks@channel 00B8  
               __end_of_lipo_battery_level 23C2                   __end_of_dwt_check_dev_id 26B1  
                __end_of_EUSART_Initialize 20CC                        ??_dwt_writetodevice 007C  
                               _status_reg 0138                          printf_string@data 0072  
                          ??_dwt_readdevid 007C                                ___ftmul@exp 002E  
                             ?_i2c_restart 0070                 get_tx_timestamp_u64@F15757 0128  
                     _transmitt_beacon_pkt 24BC                    __size_of_dwt_setdwstate 00E4  
                               ?_SPI1_Open 0070                             __end_of___lmul 25A4  
                           __end_of___wmul 21D5                              __pidataCOMMON 07FE  
         __size_of_dwt_disable_rftx_blocks 001C                               _EUSART_Write 0800  
                         ??_i2c_multi_read 0076               dwt_write8bitoffsetreg@regval 00B4  
                __end_of_dwt_writetodevice 2643                     ?_OSCILLATOR_Initialize 0070  
                              _DW3000local 02A0                             __end_of_memset 2226  
                         i2c_multi_write@j 0079                     ??_dwt_calcbandwidthadj 00C7  
                               _writetospi 21F0                             __end_of_printf 2170  
                  i2c_single_read@I2C_data 0075                        start_initialization 001B  
                 __size_of_TMR0_Initialize 0015            __size_of_PIN_MANAGER_Initialize 0059  
                                _i2c_start 2094                                  _i2c_write 20D7  
                    __size_of_init_bq25895 009E                    __size_of_dwt_run_pgfcal 0130  
                        ?_pmic_status_read 0070                        dwt_setdwstate@state 00B8  
                          ?_set_led_status 0070                                putch@txData 0072  
                         ?_i2c_single_read 0072             lipo_battery_level@battery_volt 0079  
                       ??_pmic_status_read 0044                                  Sleep@time 0071  
                     i2c_multi_read@length 0075                                ?_reset_DWIC 0070  
                        __size_of_i2c_init 000D                          __size_of_i2c_read 0010  
                        __size_of_i2c_stop 0005                           __CFG_LPBOREN$OFF 0000  
                     dwt_configure@sts_len 015F                           _dwt_force_clocks 272B  
                  __end_of_dwt_setplenfine 225E                           ?_i2c_multi_write 0072  
               __end_of_dwt_readfromdevice 260C                 _EUSART_FramingErrorHandler 014A  
                         ??_PMD_Initialize 0071                                   ??___lmul 0079  
                    ?_transmitt_beacon_pkt 0070                       dwt_starttx@checkTxOK 00CB  
                                 ??___wmul 0075                                __doprnt@idx 002B  
                              __doprnt@len 002D                                __doprnt@val 0031  
                              __pdataBANK2 0167                                __pdataBANK3 01CA  
                              __pdataBANK4 0220                                   ??_memset 0075  
                                 ??_printf 007B                      readfromspi@readBuffer 0027  
                             _init_bq25895 1056                            _dwt_writetxdata 1DCB  
                        __size_of___ftpack 0064                                __pbssBIGRAM 2EF0  
                    __size_of_dwt_xfer3000 0199                       dwt_configmrxlut@lut0 00BE  
                     dwt_configmrxlut@lut1 00C2                       dwt_configmrxlut@lut2 00C6  
                     dwt_configmrxlut@lut3 00CA                       dwt_configmrxlut@lut4 00CE  
                     dwt_configmrxlut@lut5 00D2                       dwt_configmrxlut@lut6 00D6  
                        __size_of___lltoft 002B                __end_of_process_pmic_status 1195  
                     init_bq25895@I2c_buff 0027                                  ___latbits 0004  
                            _pmic_stat_reg 016E                              ??_dwt_pgf_cal 007C  
                        __size_of__fassert 0016          __size_of_dwt_modify32bitoffsetreg 00D9  
        __size_of_dwt_modify16bitoffsetreg 0043                           ??_SPI1_ReadBlock 0076  
                            __pcstackBANK0 0020                              __pcstackBANK1 00A0  
                            __pcstackBANK2 0150                     ?_dwt_read8bitoffsetreg 00A0  
          __size_of_dwt_read16bitoffsetreg 003A            __size_of_dwt_read32bitoffsetreg 0062  
                ?_dwt_modify16bitoffsetreg 00A0                  ?_dwt_modify32bitoffsetreg 00A0  
                            _battery_level 014D                                 ?_i2c_start 0070  
                               ?_i2c_write 0070                    ??_dwt_settxantennadelay 007C  
                             _isdigit$2884 0071                    dwt_configuretxrf@config 00CC  
                    readfromspi@readlength 0023             __size_of_dwt_setrxantennadelay 001C  
         __size_of__dwt_kick_dgc_on_wakeup 0051              __end_of_dwt_setrxantennadelay 2296  
                            ??_dwt_starttx 006C                            _SPI1_WriteBlock 2186  
                       dwt_configure@error 0154                              ??_readfromspi 0079  
                  _dwt_modify8bitoffsetreg 2643                 __size_of_EUSART_Initialize 000B  
                                __doprnt@c 0036                                  __doprnt@f 0024  
                 __end_of_dwt_enable_rf_tx 12EB                   __size_of_set_MSSSP1_mode 009A  
                        dwt_run_pgfcal@cnt 00D2             dwt_read8bitoffsetreg@regFileID 00A0  
                        dwt_run_pgfcal@val 00CE                           _i2c_single_write 22B2  
           dwt_read8bitoffsetreg@regOffset 00A4                           ___lwdiv@dividend 0073  
                   _PIN_MANAGER_Initialize 195B                      dwt_xfer3000@regFileID 004A  
                 i2c_single_write@reg_addr 0072                 dwt_modify8bitoffsetreg@_or 00A9  
               dwt_modify8bitoffsetreg@buf 006C                             _dwt_initialise 0B06  
                                 ?___ftmul 0024                                   ?___fttol 0034  
                             _dwt_xfer3000 096D                                   ?___lwdiv 0071  
                              ??_SPI1_Open 0071                                   ?___lwmod 0020  
                                 ?__doprnt 0024                           __CFG_PPS1WAY$OFF 0000  
          dwt_read16bitoffsetreg@regFileID 00AB            dwt_read32bitoffsetreg@regFileID 00AB  
         dwt_write16bitoffsetreg@regFileID 00AC           dwt_write32bitoffsetreg@regFileID 00AC  
             ??_INTERRUPT_InterruptManager 0070                   ??_dwt_enable_rftx_blocks 007C  
               __size_of_dwt_writetodevice 0037            dwt_read16bitoffsetreg@regOffset 00AF  
          dwt_read32bitoffsetreg@regOffset 00AF                        get_sts_mnth@mod_val 002C  
         dwt_write16bitoffsetreg@regOffset 00B0           dwt_write32bitoffsetreg@regOffset 00B0  
                              ?_writetospi 0020                                   ?_dw_main 0070  
                                 _BAUD1CON 011F                   dwt_readfromdevice@buffer 00AA  
                                 ?_isdigit 0070                                  _copybits8 208A  
                     dwt_generatecrc8@data 0077                        __size_of_reset_DWIC 001A  
                     dwt_generatecrc8@byte 0078                   dwt_readfromdevice@length 00A6  
                           __size_of_Sleep 0029                                  _hexpowers 29A2  
                  _dwt_write16bitoffsetreg 23C2                    _dwt_write32bitoffsetreg 18B7  
                         ___lwdiv@quotient 0077               ?__dwt_prog_ldo_and_bias_tune 0070  
                 __end_of_dwt_generatecrc8 2465              dwt_setplenfine@preambleLength 006C  
                           __size_of_putch 0004                          dwt_starttx@retval 00C9  
                      __end_of_dwt_pgf_cal 1B94                          ??_TMR0_Initialize 0071  
                  i2c_single_read@reg_addr 0072                             ___wmul@product 0075  
                                 _LATAbits 0016                                   _LATBbits 0017  
                                 _LATCbits 0018                                   _LATDbits 0019  
                                clear_ram0 20EE                                   _PIE0bits 0716  
                                 _PIE3bits 0719                          _eusartRxLastError 014F  
                     i2c_single_write@data 0073                       dwt_starttx@sys_state 00C5  
                      __end_of_dwt_starttx 096D                                   _TAG_ADDR 0144  
                   _dwt_read16bitoffsetreg 26B1                     _dwt_read32bitoffsetreg 1ACF  
      __size_of_INTERRUPT_InterruptManager 0015                                   _PIR0bits 070C  
                      __end_of_readfromspi 21F0                     __end_of_dwt_initialise 0CBD  
                   ??_transmitt_beacon_pkt 00CF                      i2c_multi_write@length 0074  
                                 _PIR3bits 070F                              ??_TMR0_Reload 0070  
                         ?_dwt_setplenfine 0070                   __end_of_dwt_configmrxlut 1800  
                                 _RNG_ADDR 0142                             _dwt_setdwstate 071A  
                                 _SSP1CON1 0190                                   _SSP1CON2 0191  
                                 _SSP1CON3 0192                    __end_of_dwt_writetxdata 1E4C  
                                 _SSP1STAT 018F                    _dwt_disable_rftx_blocks 225E  
                     __size_of_i2c_restart 0005              writetospiwithcrc@headerBuffer 0022  
                  ?_dwt_write8bitoffsetreg 00AC                    dwt_writetodevice@buffer 00AA  
            writetospiwithcrc@headerLength 0020                         SPI1_ReadBlock@data 0077  
                  dwt_writetodevice@length 00A6                                  _rx_buffer 0244  
                 __size_of_dwt_checkidlerc 0030                          ___wmul@multiplier 0071  
                  i2c_single_write@I2C_rsp 0076                get_sys_timestamp_u64@F15753 0130  
                          dwt_pgf_cal@temp 00D5                          ?_dwt_writetxfctrl 00B8  
              process_pmic_status@SDP_STAT 0025                                 ?_copybits8 0071  
               dwt_writetodevice@regFileID 00A0                    __end_of_SPI1_WriteBlock 21A0  
                       ??_dwt_writetxfctrl 00BD                      get_sts_mnth@shift_val 0027  
                              ??_i2c_start 0071                            i2c_multi_read@j 0022  
                         dwt_xfer3000@addr 0062                                ??_i2c_write 0071  
                         dwt_xfer3000@crc8 0064           dwt_generatecrc8@crcRemainderInit 0075  
                         dwt_xfer3000@indx 004E                           dwt_xfer3000@mode 0056  
                           _dwt_run_pgfcal 1554                  ??_dwt_modify8bitoffsetreg 006B  
               i2c_single_read@device_addr 0076                          ___lmul@multiplier 0071  
                dwt_force_clocks@regvalue0 00B6                      get_sts_mnth@threshold 0026  
                                 _i2c_init 2106                                   _i2c_read 2121  
                        ?_dwt_check_dev_id 006B                                   _i2c_stop 2099  
                       ??_dwt_check_dev_id 007C              bq25895_WDT_reset@Reg_03_value 007A  
             dwt_setrxantennadelay@rxDelay 006E                        __size_of_writetospi 001B  
                   writetospi@headerBuffer 0022                     __end_of_dwt_setdwstate 07FE  
         dwt_calcbandwidthadj@target_count 00C3                     writetospi@headerLength 0020  
                          ?_dwt_initialise 00CD                         _lipo_battery_level 239C  
           __end_of_dwt_write8bitoffsetreg 2242                          ??_set_MSSSP1_mode 0077  
                            ?__dwt_otpread 00C5                    ??_OSCILLATOR_Initialize 0071  
                      _EUSART_ErrorHandler 0146                           __size_of___ftmul 00B4  
                         __size_of___fttol 0087                           __size_of___lwdiv 0034  
                         __size_of___lwmod 002D                                   ___ftpack 1B94  
                         __size_of__doprnt 0343                                   ___lltoft 2465  
                      __end_of_TMR0_Reload 20AF                        ?_lipo_battery_level 0079  
                                 _add_time 01A0            __size_of_dwt_enable_rftx_blocks 0056  
                                 __fassert 2170                  ??_dwt_write16bitoffsetreg 006B  
                ??_dwt_write32bitoffsetreg 006B                           __size_of_dw_main 0061  
                         ??_set_led_status 0071                                 _T0CON0bits 001E  
                   __end_of_dwt_run_pgfcal 1684                           __size_of_isdigit 000E  
                                 _crcTable 2EF0                   __end_of_dwt_force_clocks 276C  
                          ___lwdiv@divisor 0071                                _dwt_pgf_cal 1B31  
                          ___lwdiv@counter 0076                    __dwt_kick_dgc_on_wakeup 27AF  
                                 __ptext10 1056                                   __ptext11 2515  
                                 __ptext20 2121                                   __ptext12 1908  
                                 __ptext21 208A                                   __ptext13 2376  
                                 __ptext30 0B06                                   __ptext22 1A6E  
                                 __ptext14 22B2                                   __ptext31 2542  
                                 __ptext23 21A0                                   __ptext15 23EA  
                                 __ptext40 225E                                   __ptext32 267A  
                                 __ptext24 2131                                   __ptext16 20D7  
                                 __ptext41 19B4                                   __ptext33 22EB  
                                 __ptext25 1478                                   __ptext17 2099  
                                 __ptext50 1554                                   __ptext42 0083  
                                 __ptext34 26EB                                   __ptext26 1DCB  
                                 __ptext18 2094                                   __ptext51 2226  
                                 __ptext43 1BF8                                   __ptext35 1C66  
                                 __ptext27 0808                                   __ptext19 208F  
                                 __ptext60 260C                                   __ptext52 2490  
                                 __ptext44 2572                                   __ptext36 1D50  
                                 __ptext28 2296                                   __ptext61 27AF  
                                 __ptext53 1ACF                                   __ptext45 2242  
                                 __ptext37 1ED3                                   __ptext29 227A  
                                 __ptext70 243B                                   __ptext62 139F  
                                 __ptext54 2643                                   __ptext46 071A  
                                 __ptext38 1000                                   __ptext71 2170  
                                 __ptext63 096D                                   __ptext55 26B1  
                                 __ptext47 272B                                   __ptext39 123A  
                                 __ptext80 2465                                   __ptext72 215A  
                                 __ptext64 2350                                   __ptext56 25D8  
                                 __ptext48 23C2                                   __ptext81 1E4C  
                                 __ptext73 0CBD                                   __ptext65 21F0  
                                 __ptext57 276C                                   __ptext49 1B31  
                                 __ptext90 20C1                                   __ptext82 12EB  
                                 __ptext74 2086                                   __ptext66 21D5  
                                 __ptext58 1684                                   __ptext83 1B94  
                                 __ptext75 0800                                   __ptext67 2186  
                                 __ptext59 18B7                                   __ptext92 20A6  
                                 __ptext84 2145                                   __ptext76 2113  
                                 __ptext68 22CE                                   __ptext85 20E2  
                                 __ptext77 21BA                                   __ptext69 20CC  
                                 __ptext86 209E                                   __ptext78 24E8  
                                 __ptext87 195B                                   __ptext79 25A4  
                                 __ptext88 2412                                   __ptext89 20AF  
                       get_sts_mnth@cipher 0024                               _SSP1CON1bits 0190  
                             _SSP1CON2bits 0191                      __end_of_dwt_configure 071A  
                   __size_of_printf_string 0014                                _dwt_starttx 0808  
                  dwt_readfromdevice@index 00A4                        dwt_generatecrc8@len 0073  
                dwt_generatecrc8@byteArray 0071  pmic_status_read@pmic_stat_read_time_count 0167  
                    __dwt_otpread@ret_data 00C9                                _readfromspi 21D5  
                     ??_lipo_battery_level 007B                              __size_of_main 0075  
                             ??_reset_DWIC 007A                       set_MSSSP1_mode@state 0078  
                     __CFG_WDTCWS$WDTCWS_7 0000                            ?_dwt_setdwstate 00B8  
                               _RC1STAbits 011D                  ??_dwt_disable_rftx_blocks 007C  
                    __end_of_dwt_readdevid 2308                    dwt_enable_rf_tx@channel 00BE  
               get_rx_timestamp_u64@F15761 0120                          _dwt_disable_rf_tx 19B4  
          __end_of_dwt_modify8bitoffsetreg 267A                  __size_of_pmic_status_read 00A5  
                           ??__dwt_otpread 007C       __size_of__dwt_prog_ldo_and_bias_tune 0040  
                                 int$flags 007E             dwt_writetxfctrl@txBufferOffset 00BA  
                   dwt_writetodevice@index 00A4                dwt_modify32bitoffsetreg@_or 00AC  
              dwt_modify16bitoffsetreg@_or 00AA                dwt_modify16bitoffsetreg@buf 006C  
              dwt_modify32bitoffsetreg@buf 00B0                                 _ODCONAbits 1F3A  
                               _ODCONBbits 1F45                           ?_dwt_writetxdata 00BE  
                           dwt_pgf_cal@val 00D7                         ?_dwt_disable_rf_tx 0070  
       __end_of_INTERRUPT_InterruptManager 0019                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 018F                            dwt_xfer3000@cnt 0069  
              PIN_MANAGER_Initialize@state 007A                    ??_dwt_read8bitoffsetreg 007C  
                   dwt_force_clocks@clocks 006E                                ??_copybits8 0073  
                      ??_dwt_disable_rf_tx 007C                                 _INTCONbits 000B  
                       _dwt_readfromdevice 25D8                   __end_of_i2c_single_write 22CE  
            __size_of_dwt_calcbandwidthadj 0093                            ?_dwt_run_pgfcal 00C5  
                         ?_SPI1_WriteBlock 0072                         __end_of_reset_DWIC 21BA  
                     SPI1_WriteBlock@block 0072                          ??_dwt_checkidlerc 00B7  
                           __pstringtext10 2886                             __pstringtext11 2899  
                           __pstringtext20 293E                             __pstringtext12 28AC  
                           __pstringtext21 294C                             __pstringtext13 28BE  
                           __pstringtext22 295A                             __pstringtext14 28CF  
                           __pstringtext23 2966                             __pstringtext15 28E0  
                           __pstringtext24 297B                             __pstringtext16 28F1  
                           __pstringtext25 2985                             __pstringtext17 2902  
                           __pstringtext26 298F                             __pstringtext18 2912  
                           __pstringtext27 2999                             __pstringtext19 2921  
                           __pstringtext28 29AA                             __pstringtext29 0000  
                                 isdigit@c 0072                                   memset@p1 0076  
        set_led_status@tx_led_toggle_count 0169                       __dwt_otpread@address 00C5  
                      ?_dwt_readfromdevice 00A0                                   intlevel1 0000  
           __size_of_dwt_settxantennadelay 001C              __end_of_dwt_settxantennadelay 22B2  
                         ___lwmod@dividend 0022                     _dwt_enable_rftx_blocks 1000  
                          _power_connected 016C                    ?_PIN_MANAGER_Initialize 0070  
                        __CFG_CLKOUTEN$OFF 0000                          get_sts_mnth@value 002E  
                        ?_dwt_enable_rf_tx 00BE            __end_of_dwt_write32bitoffsetreg 1908  
          __end_of_dwt_write16bitoffsetreg 23EA                                _PPSLOCKbits 1E8F  
                      set_MSSSP1_mode@mode 0079                  __end_of_dwt_disable_rf_tx 1A0E  
                       ??_dwt_enable_rf_tx 007C                   __size_of_i2c_single_read 0028  
                    writetospiwithcrc@crc8 0029                    i2c_multi_write@reg_addr 0072  
                              _TMR0_Reload 20A6                set_MSSSP1_mode@current_mode 014C  
                 dwt_write32bitoffsetreg@j 00BC                                   printf@ap 0040  
                                 printf@pb 0041                writetospiwithcrc@bodyBuffer 0027  
                     ??_dwt_readfromdevice 007C                              _printf_string 2131  
              writetospiwithcrc@bodyLength 0023                        SPI1_WriteBlock@data 0076  
                            __pstringtext1 2930                              __pstringtext2 2971  
                            __pstringtext3 29A2                              __pstringtext4 1800  
                            __pstringtext5 2800                              __pstringtext6 2824  
                            __pstringtext7 2843                              __pstringtext8 285D  
                            __pstringtext9 2873                   __size_of_i2c_multi_write 002D  
                             ??_writetospi 0078                       writetospi@bodyBuffer 0027  
                     writetospi@bodyLength 0023                                 _SSP1DATPPS 1EC6  
                           copybits8@value 0073                dwt_writetxdata@txDataLength 00BE  
                               _SSP1CLKPPS 1EC5                  ??__dwt_kick_dgc_on_wakeup 007C  
                          ___lwmod@divisor 0020                            _TMR0_Initialize 2145  
                          ___lwmod@counter 007A            __end_of_dwt_disable_rftx_blocks 227A  
                               _TX1STAbits 011E                         dwt_checkidlerc@reg 00BB  
                  __size_of_i2c_multi_read 0053                          ?_dwt_generatecrc8 0071  
                       EUSART_Write@txData 0071                 dwt_writetxdata@txDataBytes 00C0  
           __end_of_PIN_MANAGER_Initialize 19B4                         _dwt_configure$1274 0159  
                       _dwt_configure$1276 0152                    SPI1_ReadBlock@blockSize 0074  
      lipo_battery_level@battery_level_cal 0020               __size_of_process_pmic_status 00A1  
                       ??_dwt_generatecrc8 0076                      _dwt_setrxantennadelay 227A  
           dwt_enable_rf_tx@switch_control 00C2                    ?_dwt_read32bitoffsetreg 00AB  
                  ?_dwt_read16bitoffsetreg 00AB             dwt_disable_rf_tx@switch_config 006C  
                       __end_of_writetospi 220B                 __end_of_spi1_configuration 1804  
